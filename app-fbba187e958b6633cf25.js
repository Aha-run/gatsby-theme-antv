(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[1],{

/***/ "+3V6":
/***/ (function(module, exports, __webpack_require__) {

// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
var $export = __webpack_require__("X6VK");

$export($export.S, 'Array', { isArray: __webpack_require__("Xfku") });


/***/ }),

/***/ "+3YS":
/***/ (function(module, exports) {

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

module.exports = _arrayWithHoles;

/***/ }),

/***/ "+H3U":
/***/ (function(module, exports) {

module.exports = function _filter(fn, list) {
  var idx = 0;
  var len = list.length;
  var result = [];

  while (idx < len) {
    if (fn(list[idx])) {
      result[result.length] = list[idx];
    }

    idx += 1;
  }

  return result;
};

/***/ }),

/***/ "+Ltg":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

__webpack_require__("GkPX");

__webpack_require__("Z8gF");

var invariant = function invariant(condition, format, a, b, c, d, e, f) {
  if (false) {}

  if (!condition) {
    var error;

    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame

    throw error;
  }
};

module.exports = invariant;

/***/ }),

/***/ "+Sw5":
/***/ (function(module, exports) {

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

module.exports = _arrayLikeToArray;

/***/ }),

/***/ "+Yd0":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "onServiceWorkerUpdateFound", function() { return /* binding */ gatsby_browser_onServiceWorkerUpdateFound; });

// EXTERNAL MODULE: ../node_modules/antd/es/button/style/index.js
var style = __webpack_require__("sbMj");

// EXTERNAL MODULE: ../node_modules/antd/es/button/index.js
var es_button = __webpack_require__("H4M2");

// EXTERNAL MODULE: ../node_modules/antd/es/style/index.less
var es_style = __webpack_require__("SwVN");

// EXTERNAL MODULE: ../node_modules/antd/es/notification/style/index.less
var notification_style = __webpack_require__("FNAz");

// CONCATENATED MODULE: ../node_modules/antd/es/notification/style/index.js


// EXTERNAL MODULE: ../node_modules/antd/es/notification/index.js + 1 modules
var notification = __webpack_require__("qsLp");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.string.starts-with.js
var es6_string_starts_with = __webpack_require__("FEHE");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es7.array.includes.js
var es7_array_includes = __webpack_require__("oMRA");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.string.includes.js
var es6_string_includes = __webpack_require__("6d4m");

// EXTERNAL MODULE: ../node_modules/codemirror/mode/javascript/javascript.js
var javascript = __webpack_require__("Bi0q");

// EXTERNAL MODULE: ../node_modules/codemirror/mode/jsx/jsx.js
var jsx = __webpack_require__("XUZz");

// EXTERNAL MODULE: ../node_modules/codemirror/mode/htmlembedded/htmlembedded.js
var htmlembedded = __webpack_require__("HAof");

// EXTERNAL MODULE: ../node_modules/codemirror/addon/selection/active-line.js
var active_line = __webpack_require__("oLHe");

// EXTERNAL MODULE: ../node_modules/codemirror/addon/edit/matchbrackets.js
var matchbrackets = __webpack_require__("wyB9");

// EXTERNAL MODULE: ../node_modules/codemirror/addon/edit/closebrackets.js
var closebrackets = __webpack_require__("94DX");

// EXTERNAL MODULE: ../node_modules/codemirror/addon/edit/matchtags.js
var matchtags = __webpack_require__("FUg+");

// EXTERNAL MODULE: ../node_modules/codemirror/addon/fold/foldcode.js
var foldcode = __webpack_require__("w/93");

// EXTERNAL MODULE: ../node_modules/codemirror/addon/fold/foldgutter.js
var foldgutter = __webpack_require__("Wvwq");

// EXTERNAL MODULE: ../node_modules/codemirror/addon/fold/brace-fold.js
var brace_fold = __webpack_require__("UQd9");

// EXTERNAL MODULE: ../node_modules/normalize.css/normalize.css
var normalize = __webpack_require__("1UZS");

// EXTERNAL MODULE: ../node_modules/prism-themes/themes/prism-base16-ateliersulphurpool.light.css
var prism_base16_ateliersulphurpool_light = __webpack_require__("SAwA");

// EXTERNAL MODULE: ../node_modules/prismjs/plugins/command-line/prism-command-line.css
var prism_command_line = __webpack_require__("wYtd");

// EXTERNAL MODULE: ../node_modules/codemirror/lib/codemirror.css
var codemirror = __webpack_require__("OLqI");

// EXTERNAL MODULE: ../node_modules/codemirror/theme/mdn-like.css
var mdn_like = __webpack_require__("fqqo");

// EXTERNAL MODULE: ../node_modules/codemirror/addon/fold/foldgutter.css
var fold_foldgutter = __webpack_require__("ulL0");

// EXTERNAL MODULE: ../node_modules/rc-drawer/assets/index.css
var assets = __webpack_require__("ffXq");

// EXTERNAL MODULE: ../node_modules/docsearch.js/dist/cdn/docsearch.min.css
var docsearch_min = __webpack_require__("lAJ1");

// EXTERNAL MODULE: ../@antv/gatsby-theme-antv/site/global.less
var global = __webpack_require__("qca1");

// EXTERNAL MODULE: ../node_modules/react/index.js
var react = __webpack_require__("mXGw");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../node_modules/insert-css/index.js
var insert_css = __webpack_require__("3Q0B");
var insert_css_default = /*#__PURE__*/__webpack_require__.n(insert_css);

// CONCATENATED MODULE: ../@antv/gatsby-theme-antv/gatsby-browser.js
/**
 * Implement Gatsby's Browser APIs in this file.
 *
 * See: https://www.gatsbyjs.org/docs/browser-apis/
 */ // You can delete this file if you're not using it
window.insertCss=insert_css_default.a;if(window.location.host.includes('antv')){// prettier-ignore
/* eslint-disable */!function(t,e,a,r,c){t.TracertCmdCache=t.TracertCmdCache||[],t[c]=window[c]||{_isRenderInit:!0,call:function call(){t.TracertCmdCache.push(arguments);},start:function start(t){this.call('start',t);}},t[c].l=new Date();var n=e.createElement(a),s=e.getElementsByTagName(a)[0];n.async=!0,n.src=r,s.parentNode.insertBefore(n,s);n.onerror=function(){console.warn(decodeURI('Tracert%20%E8%84%9A%E6%9C%AC%E6%9C%AA%E6%88%90%E5%8A%9F%E5%8A%A0%E8%BD%BD,%20%E8%AF%B7%E6%A3%80%E6%9F%A5%E7%BD%91%E7%BB%9C%E4%BB%A5%E5%8F%8A%20A%20%E4%BD%8D%E6%98%AF%E5%90%A6%E5%9C%A8%E4%B9%9D%E8%89%B2%E9%B9%BF%E5%BB%BA%E7%AB%8B%E6%B4%9E%E5%AF%9F'));var fallback=function fallback(){console.warn(decodeURI('Tracert%20%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E5%A4%B1%E8%B4%A5%EF%BC%8C%E8%AF%B7%E6%A3%80%E6%9F%A5%20JS%20%E6%98%AF%E5%90%A6%E6%AD%A3%E7%A1%AE%E5%BC%95%E5%85%A5'));};for(var fnlist=["call","start","config","logPv","info","err","click","expo","pageName","pageState","time","timeEnd","parse","checkExpo","stringify","report","set","before"],i=0;i<fnlist.length;i++){t[c][fnlist[i]]=fallback;}};}(window,document,'script','https://ur.alipay.com/tracert_a369.js','Tracert');// 启动脚本
Tracert.start();}// gatsby-browser.js
var gatsby_browser_onServiceWorkerUpdateFound=function onServiceWorkerUpdateFound(){var lang=window.location.pathname.startsWith('/zh')?'zh':'en';notification["a" /* default */].info({message:lang==='zh'?'站点更新':'Site Updated',description:lang==='zh'?'发现新的网站版本数据，是否需要重载页面以更新。':'This site has been updated with new data. Do you wish to reload the site to get the new data?',btn:/*#__PURE__*/react_default.a.createElement(es_button["a" /* default */],{type:"primary",size:"small",onClick:function onClick(){return window.location.reload(true);}},lang==='zh'?'重载页面':'Refresh'),key:'onServiceWorkerUpdateFound',placement:'bottomRight'});};

/***/ }),

/***/ "+bRE":
/***/ (function(module, exports) {

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

module.exports = _nonIterableRest;

/***/ }),

/***/ "+eav":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("zWQs");
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),

/***/ "+edc":
/***/ (function(module, exports, __webpack_require__) {

var redefine = __webpack_require__("sU/p");
module.exports = function (target, src, safe) {
  for (var key in src) redefine(target, key, src[key], safe);
  return target;
};


/***/ }),

/***/ "+jjx":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("z6KD")('asyncIterator');


/***/ }),

/***/ "+yb+":
/***/ (function(module, exports, __webpack_require__) {

var pipe = __webpack_require__("IycE");

var reverse = __webpack_require__("kku+");
/**
 * Performs right-to-left function composition. The rightmost function may have
 * any arity; the remaining functions must be unary.
 *
 * **Note:** The result of compose is not automatically curried.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Function
 * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)
 * @param {...Function} ...functions The functions to compose
 * @return {Function}
 * @see R.pipe
 * @example
 *
 *      var classyGreeting = (firstName, lastName) => "The name's " + lastName + ", " + firstName + " " + lastName
 *      var yellGreeting = R.compose(R.toUpper, classyGreeting);
 *      yellGreeting('James', 'Bond'); //=> "THE NAME'S BOND, JAMES BOND"
 *
 *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7
 *
 * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))
 */


module.exports = function compose() {
  if (arguments.length === 0) {
    throw new Error('compose requires at least one argument');
  }

  return pipe.apply(this, reverse(arguments));
};

/***/ }),

/***/ "/6KZ":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("41F1");
var core = __webpack_require__("TaGV");
var ctx = __webpack_require__("8Xl/");
var hide = __webpack_require__("PPkd");
var has = __webpack_require__("qA3Z");
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),

/***/ "/6rt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__("E7Vc");

module.exports = function (method, arg) {
  return !!method && fails(function () {
    // eslint-disable-next-line no-useless-call
    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);
  });
};


/***/ }),

/***/ "/7QA":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// NAMESPACE OBJECT: ../node_modules/@antv/component/esm/annotation/index.js
var annotation_namespaceObject = {};
__webpack_require__.r(annotation_namespaceObject);
__webpack_require__.d(annotation_namespaceObject, "Line", function() { return annotation_line; });
__webpack_require__.d(annotation_namespaceObject, "Text", function() { return annotation_text; });
__webpack_require__.d(annotation_namespaceObject, "Arc", function() { return arc; });
__webpack_require__.d(annotation_namespaceObject, "Region", function() { return annotation_region; });
__webpack_require__.d(annotation_namespaceObject, "Image", function() { return annotation_image; });
__webpack_require__.d(annotation_namespaceObject, "DataMarker", function() { return data_marker; });
__webpack_require__.d(annotation_namespaceObject, "DataRegion", function() { return data_region; });
__webpack_require__.d(annotation_namespaceObject, "RegionFilter", function() { return region_filter; });

// NAMESPACE OBJECT: ../node_modules/@antv/component/esm/axis/overlap/auto-ellipsis.js
var auto_ellipsis_namespaceObject = {};
__webpack_require__.r(auto_ellipsis_namespaceObject);
__webpack_require__.d(auto_ellipsis_namespaceObject, "getDefault", function() { return getDefault; });
__webpack_require__.d(auto_ellipsis_namespaceObject, "ellipsisHead", function() { return ellipsisHead; });
__webpack_require__.d(auto_ellipsis_namespaceObject, "ellipsisTail", function() { return ellipsisTail; });
__webpack_require__.d(auto_ellipsis_namespaceObject, "ellipsisMiddle", function() { return ellipsisMiddle; });

// NAMESPACE OBJECT: ../node_modules/@antv/component/esm/axis/overlap/auto-hide.js
var auto_hide_namespaceObject = {};
__webpack_require__.r(auto_hide_namespaceObject);
__webpack_require__.d(auto_hide_namespaceObject, "getDefault", function() { return auto_hide_getDefault; });
__webpack_require__.d(auto_hide_namespaceObject, "reserveFirst", function() { return reserveFirst; });
__webpack_require__.d(auto_hide_namespaceObject, "reserveLast", function() { return reserveLast; });
__webpack_require__.d(auto_hide_namespaceObject, "reserveBoth", function() { return reserveBoth; });
__webpack_require__.d(auto_hide_namespaceObject, "equidistance", function() { return equidistance; });

// NAMESPACE OBJECT: ../node_modules/@antv/component/esm/axis/overlap/auto-rotate.js
var auto_rotate_namespaceObject = {};
__webpack_require__.r(auto_rotate_namespaceObject);
__webpack_require__.d(auto_rotate_namespaceObject, "getDefault", function() { return auto_rotate_getDefault; });
__webpack_require__.d(auto_rotate_namespaceObject, "fixedAngle", function() { return fixedAngle; });
__webpack_require__.d(auto_rotate_namespaceObject, "unfixedAngle", function() { return unfixedAngle; });

// NAMESPACE OBJECT: ../node_modules/@antv/component/esm/axis/overlap/index.js
var overlap_namespaceObject = {};
__webpack_require__.r(overlap_namespaceObject);
__webpack_require__.d(overlap_namespaceObject, "autoHide", function() { return auto_hide_namespaceObject; });
__webpack_require__.d(overlap_namespaceObject, "autoRotate", function() { return auto_rotate_namespaceObject; });
__webpack_require__.d(overlap_namespaceObject, "autoEllipsis", function() { return auto_ellipsis_namespaceObject; });

// NAMESPACE OBJECT: ../node_modules/@antv/component/esm/axis/index.js
var axis_namespaceObject = {};
__webpack_require__.r(axis_namespaceObject);
__webpack_require__.d(axis_namespaceObject, "Line", function() { return axis_line; });
__webpack_require__.d(axis_namespaceObject, "Circle", function() { return circle; });
__webpack_require__.d(axis_namespaceObject, "Base", function() { return axis_base; });

// NAMESPACE OBJECT: ../node_modules/@antv/component/esm/crosshair/index.js
var crosshair_namespaceObject = {};
__webpack_require__.r(crosshair_namespaceObject);
__webpack_require__.d(crosshair_namespaceObject, "Line", function() { return crosshair_line; });
__webpack_require__.d(crosshair_namespaceObject, "Circle", function() { return crosshair_circle; });
__webpack_require__.d(crosshair_namespaceObject, "Base", function() { return crosshair_base; });
__webpack_require__.d(crosshair_namespaceObject, "Html", function() { return html; });

// NAMESPACE OBJECT: ../node_modules/@antv/component/esm/grid/index.js
var grid_namespaceObject = {};
__webpack_require__.r(grid_namespaceObject);
__webpack_require__.d(grid_namespaceObject, "Base", function() { return grid_base; });
__webpack_require__.d(grid_namespaceObject, "Circle", function() { return grid_circle; });
__webpack_require__.d(grid_namespaceObject, "Line", function() { return grid_line; });

// NAMESPACE OBJECT: ../node_modules/@antv/component/esm/legend/index.js
var legend_namespaceObject = {};
__webpack_require__.r(legend_namespaceObject);
__webpack_require__.d(legend_namespaceObject, "Category", function() { return category; });
__webpack_require__.d(legend_namespaceObject, "Continuous", function() { return continuous; });
__webpack_require__.d(legend_namespaceObject, "Base", function() { return legend_base; });

// NAMESPACE OBJECT: ../node_modules/@antv/component/esm/tooltip/css-const.js
var tooltip_css_const_namespaceObject = {};
__webpack_require__.r(tooltip_css_const_namespaceObject);
__webpack_require__.d(tooltip_css_const_namespaceObject, "CONTAINER_CLASS", function() { return css_const_CONTAINER_CLASS; });
__webpack_require__.d(tooltip_css_const_namespaceObject, "TITLE_CLASS", function() { return TITLE_CLASS; });
__webpack_require__.d(tooltip_css_const_namespaceObject, "LIST_CLASS", function() { return LIST_CLASS; });
__webpack_require__.d(tooltip_css_const_namespaceObject, "LIST_ITEM_CLASS", function() { return LIST_ITEM_CLASS; });
__webpack_require__.d(tooltip_css_const_namespaceObject, "MARKER_CLASS", function() { return MARKER_CLASS; });
__webpack_require__.d(tooltip_css_const_namespaceObject, "VALUE_CLASS", function() { return VALUE_CLASS; });
__webpack_require__.d(tooltip_css_const_namespaceObject, "NAME_CLASS", function() { return NAME_CLASS; });
__webpack_require__.d(tooltip_css_const_namespaceObject, "CROSSHAIR_X", function() { return CROSSHAIR_X; });
__webpack_require__.d(tooltip_css_const_namespaceObject, "CROSSHAIR_Y", function() { return CROSSHAIR_Y; });

// NAMESPACE OBJECT: ../node_modules/@antv/component/esm/tooltip/index.js
var tooltip_namespaceObject = {};
__webpack_require__.r(tooltip_namespaceObject);
__webpack_require__.d(tooltip_namespaceObject, "Html", function() { return tooltip_html; });

// NAMESPACE OBJECT: ../node_modules/@antv/g-svg/esm/shape/index.js
var esm_shape_namespaceObject = {};
__webpack_require__.r(esm_shape_namespaceObject);
__webpack_require__.d(esm_shape_namespaceObject, "Base", function() { return shape_base; });
__webpack_require__.d(esm_shape_namespaceObject, "Circle", function() { return shape_circle; });
__webpack_require__.d(esm_shape_namespaceObject, "Dom", function() { return shape_dom; });
__webpack_require__.d(esm_shape_namespaceObject, "Ellipse", function() { return ellipse; });
__webpack_require__.d(esm_shape_namespaceObject, "Image", function() { return shape_image; });
__webpack_require__.d(esm_shape_namespaceObject, "Line", function() { return shape_line; });
__webpack_require__.d(esm_shape_namespaceObject, "Marker", function() { return shape_marker; });
__webpack_require__.d(esm_shape_namespaceObject, "Path", function() { return shape_path; });
__webpack_require__.d(esm_shape_namespaceObject, "Polygon", function() { return polygon; });
__webpack_require__.d(esm_shape_namespaceObject, "Polyline", function() { return shape_polyline; });
__webpack_require__.d(esm_shape_namespaceObject, "Rect", function() { return rect; });
__webpack_require__.d(esm_shape_namespaceObject, "Text", function() { return shape_text; });

// NAMESPACE OBJECT: ../node_modules/@antv/g-svg/esm/index.js
var g_svg_esm_namespaceObject = {};
__webpack_require__.r(g_svg_esm_namespaceObject);
__webpack_require__.d(g_svg_esm_namespaceObject, "version", function() { return version; });
__webpack_require__.d(g_svg_esm_namespaceObject, "Event", function() { return g_base_esm["e" /* Event */]; });
__webpack_require__.d(g_svg_esm_namespaceObject, "Canvas", function() { return esm_canvas; });
__webpack_require__.d(g_svg_esm_namespaceObject, "Group", function() { return esm_group; });
__webpack_require__.d(g_svg_esm_namespaceObject, "Shape", function() { return esm_shape_namespaceObject; });

// EXTERNAL MODULE: ../node_modules/core-js/modules/web.dom.iterable.js
var web_dom_iterable = __webpack_require__("W1QL");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es7.symbol.async-iterator.js
var es7_symbol_async_iterator = __webpack_require__("+jjx");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.promise.js
var es6_promise = __webpack_require__("DbwS");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.to-string.js
var es6_object_to_string = __webpack_require__("t91x");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.define-property.js
var es6_object_define_property = __webpack_require__("d3/y");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.symbol.js
var es6_symbol = __webpack_require__("ABKx");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.index-of.js
var es6_array_index_of = __webpack_require__("V7cS");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.assign.js
var es6_object_assign = __webpack_require__("5hJT");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.create.js
var es6_object_create = __webpack_require__("PAbq");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.set-prototype-of.js
var es6_object_set_prototype_of = __webpack_require__("1qKx");

// CONCATENATED MODULE: ../node_modules/@antv/g2/node_modules/tslib/tslib.es6.js











/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

/* global Reflect, Promise */
var _extendStatics = function extendStatics(d, b) {
  _extendStatics = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (d, b) {
    d.__proto__ = b;
  } || function (d, b) {
    for (var p in b) {
      if (b.hasOwnProperty(p)) d[p] = b[p];
    }
  };

  return _extendStatics(d, b);
};

function __extends(d, b) {
  _extendStatics(d, b);

  function __() {
    this.constructor = d;
  }

  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var _assign = function __assign() {
  _assign = Object.assign || function __assign(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return _assign.apply(this, arguments);
};


function __rest(s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
}
function __decorate(decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
}
function __param(paramIndex, decorator) {
  return function (target, key) {
    decorator(target, key, paramIndex);
  };
}
function __metadata(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
}
var __createBinding = Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function get() {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
};
function __exportStar(m, exports) {
  for (var p in m) {
    if (p !== "default" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);
  }
}
function __values(o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
}
function __spread() {
  for (var ar = [], i = 0; i < arguments.length; i++) {
    ar = ar.concat(__read(arguments[i]));
  }

  return ar;
}
function __spreadArrays() {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {
    s += arguments[i].length;
  }

  for (var r = Array(s), k = 0, i = 0; i < il; i++) {
    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {
      r[k] = a[j];
    }
  }

  return r;
}
;
function __await(v) {
  return this instanceof __await ? (this.v = v, this) : new __await(v);
}
function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g = generator.apply(thisArg, _arguments || []),
      i,
      q = [];
  return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
    return this;
  }, i;

  function verb(n) {
    if (g[n]) i[n] = function (v) {
      return new Promise(function (a, b) {
        q.push([n, v, a, b]) > 1 || resume(n, v);
      });
    };
  }

  function resume(n, v) {
    try {
      step(g[n](v));
    } catch (e) {
      settle(q[0][3], e);
    }
  }

  function step(r) {
    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
  }

  function fulfill(value) {
    resume("next", value);
  }

  function reject(value) {
    resume("throw", value);
  }

  function settle(f, v) {
    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
  }
}
function __asyncDelegator(o) {
  var i, p;
  return i = {}, verb("next"), verb("throw", function (e) {
    throw e;
  }), verb("return"), i[Symbol.iterator] = function () {
    return this;
  }, i;

  function verb(n, f) {
    i[n] = o[n] ? function (v) {
      return (p = !p) ? {
        value: __await(o[n](v)),
        done: n === "return"
      } : f ? f(v) : v;
    } : f;
  }
}
function __asyncValues(o) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m = o[Symbol.asyncIterator],
      i;
  return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
    return this;
  }, i);

  function verb(n) {
    i[n] = o[n] && function (v) {
      return new Promise(function (resolve, reject) {
        v = o[n](v), settle(resolve, reject, v.done, v.value);
      });
    };
  }

  function settle(resolve, reject, d, v) {
    Promise.resolve(v).then(function (v) {
      resolve({
        value: v,
        done: d
      });
    }, reject);
  }
}
function __makeTemplateObject(cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", {
      value: raw
    });
  } else {
    cooked.raw = raw;
  }

  return cooked;
}
;

var __setModuleDefault = Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
};

function __importStar(mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  }

  __setModuleDefault(result, mod);

  return result;
}
function __importDefault(mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
}
function __classPrivateFieldGet(receiver, privateMap) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to get private field on non-instance");
  }

  return privateMap.get(receiver);
}
function __classPrivateFieldSet(receiver, privateMap, value) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to set private field on non-instance");
  }

  privateMap.set(receiver, value);
  return value;
}
// EXTERNAL MODULE: ../node_modules/@antv/util/esm/index.js + 105 modules
var esm = __webpack_require__("NFQX");

// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/constant.js
/**
 * view 中三层 group 分层 key
 */
var LAYER;

(function (LAYER) {
  /** 前景层 */
  LAYER["FORE"] = "fore";
  /** 中间层 */

  LAYER["MID"] = "mid";
  /** 背景层 */

  LAYER["BG"] = "bg";
})(LAYER || (LAYER = {}));
/**
 * 组件在画布的布局方位 12 方位
 */


var DIRECTION;

(function (DIRECTION) {
  DIRECTION["TOP"] = "top";
  DIRECTION["TOP_LEFT"] = "top-left";
  DIRECTION["TOP_RIGHT"] = "top-right";
  DIRECTION["RIGHT"] = "right";
  DIRECTION["RIGHT_TOP"] = "right-top";
  DIRECTION["RIGHT_BOTTOM"] = "right-bottom";
  DIRECTION["LEFT"] = "left";
  DIRECTION["LEFT_TOP"] = "left-top";
  DIRECTION["LEFT_BOTTOM"] = "left-bottom";
  DIRECTION["BOTTOM"] = "bottom";
  DIRECTION["BOTTOM_LEFT"] = "bottom-left";
  DIRECTION["BOTTOM_RIGHT"] = "bottom-right"; // no direction information

  DIRECTION["NONE"] = "none";
})(DIRECTION || (DIRECTION = {}));
/**
 * 组件的类型，可能会影响到布局算法
 */


var COMPONENT_TYPE;

(function (COMPONENT_TYPE) {
  /** axis 组件 */
  COMPONENT_TYPE["AXIS"] = "axis";
  /** grid 组件 */

  COMPONENT_TYPE["GRID"] = "grid";
  /** legend 组件 */

  COMPONENT_TYPE["LEGEND"] = "legend";
  /** tooltip 组件 */

  COMPONENT_TYPE["TOOLTIP"] = "tooltip";
  /** annotation 组件 */

  COMPONENT_TYPE["ANNOTATION"] = "annotation";
  /** 其他组件，自定义组件 */

  COMPONENT_TYPE["OTHER"] = "other";
})(COMPONENT_TYPE || (COMPONENT_TYPE = {}));
/**
 * 三层 group 的 z index
 */


var GROUP_Z_INDEX = {
  FORE: 3,
  MID: 2,
  BG: 1
};
/**
 * View 的生命周期阶段（和 3.x 的生命周期略有不同）
 * 我们需要先确定在那写场景需要用到生命周期，如果只是为了在生命周期插入一下什么组件之类的，那么在现有架构就是不需要的
 */

var VIEW_LIFE_CIRCLE;

(function (VIEW_LIFE_CIRCLE) {
  VIEW_LIFE_CIRCLE["BEFORE_RENDER"] = "beforerender";
  VIEW_LIFE_CIRCLE["AFTER_RENDER"] = "afterrender";
  VIEW_LIFE_CIRCLE["BEFORE_PAINT"] = "beforepaint";
  VIEW_LIFE_CIRCLE["AFTER_PAINT"] = "afterpaint";
  VIEW_LIFE_CIRCLE["BEFORE_CHANGE_DATA"] = "beforechangedata";
  VIEW_LIFE_CIRCLE["AFTER_CHANGE_DATA"] = "afterchangedata";
  VIEW_LIFE_CIRCLE["BEFORE_CLEAR"] = "beforeclear";
  VIEW_LIFE_CIRCLE["AFTER_CLEAR"] = "afterclear";
  VIEW_LIFE_CIRCLE["BEFORE_DESTROY"] = "beforedestroy";
})(VIEW_LIFE_CIRCLE || (VIEW_LIFE_CIRCLE = {}));
/**
 * 绘图区的事件列表
 */


var PLOT_EVENTS;

(function (PLOT_EVENTS) {
  // mouse 事件
  PLOT_EVENTS["MOUSE_ENTER"] = "plot:mouseenter";
  PLOT_EVENTS["MOUSE_DOWN"] = "plot:mousedown";
  PLOT_EVENTS["MOUSE_MOVE"] = "plot:mousemove";
  PLOT_EVENTS["MOUSE_UP"] = "plot:mouseup";
  PLOT_EVENTS["MOUSE_LEAVE"] = "plot:mouseleave"; // 移动端事件

  PLOT_EVENTS["TOUCH_START"] = "plot:touchstart";
  PLOT_EVENTS["TOUCH_MOVE"] = "plot:touchmove";
  PLOT_EVENTS["TOUCH_END"] = "plot:touchend";
  PLOT_EVENTS["TOUCH_CANCEL"] = "plot:touchcancel"; // click 事件

  PLOT_EVENTS["CLICK"] = "plot:click";
  PLOT_EVENTS["DBLCLICK"] = "plot:dblclick";
  PLOT_EVENTS["CONTEXTMENU"] = "plot:contextmenu";
  PLOT_EVENTS["LEAVE"] = "plot:leave";
  PLOT_EVENTS["ENTER"] = "plot:enter";
})(PLOT_EVENTS || (PLOT_EVENTS = {}));
/**
 * Element 图形交互状态
 */


var ELEMENT_STATE;

(function (ELEMENT_STATE) {
  ELEMENT_STATE["ACTIVE"] = "active";
  ELEMENT_STATE["INACTIVE"] = "inactive";
  ELEMENT_STATE["SELECTED"] = "selected";
  ELEMENT_STATE["DEFAULT"] = "default";
})(ELEMENT_STATE || (ELEMENT_STATE = {}));
/** 参与分组的图形属性名 */


var GROUP_ATTRS = ['color', 'shape', 'size'];
/** 存储原始数据的字段名 */

var FIELD_ORIGIN = '_origin';
/** 最小的图表宽度 */

var MIN_CHART_WIDTH = 1;
/** 最小的图表高度 */

var MIN_CHART_HEIGHT = 1;
/** 辅助组件占图表的尺寸的最大比例：如图表上方的图例最多占图表高度的25% */

var COMPONENT_MAX_VIEW_PERCENTAGE = 0.25;
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/engine/index.js
var ENGINES = {};
/**
 * 通过名字获取渲染 engine
 * @param name 渲染引擎名字
 * @returns G engine
 */

function getEngine(name) {
  var G = ENGINES[name];

  if (!G) {
    throw new Error("G engine '" + name + "' is not exist, please register it at first.");
  }

  return G;
}
/**
 * 注册渲染引擎
 * @param name
 * @param engine
 */

function registerEngine(name, engine) {
  ENGINES[name] = engine;
}
// CONCATENATED MODULE: ../node_modules/@antv/dom-util/esm/add-event-listener.js
function addEventListener(target, eventType, callback) {
  if (target) {
    if (typeof target.addEventListener === 'function') {
      target.addEventListener(eventType, callback, false);
      return {
        remove: function remove() {
          target.removeEventListener(eventType, callback, false);
        }
      }; // @ts-ignore
    }

    if (typeof target.attachEvent === 'function') {
      // @ts-ignore
      target.attachEvent('on' + eventType, callback);
      return {
        remove: function remove() {
          // @ts-ignore
          target.detachEvent('on' + eventType, callback);
        }
      };
    }
  }
}
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.replace.js
var es6_regexp_replace = __webpack_require__("Z8gF");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.constructor.js
var es6_regexp_constructor = __webpack_require__("J8hF");

// CONCATENATED MODULE: ../node_modules/@antv/dom-util/esm/create-dom.js



/**
 * 创建DOM 节点
 * @param  {String} str Dom 字符串
 * @return {HTMLElement}  DOM 节点
 */
var TABLE;
var TABLE_TR;
var FRAGMENT_REG;
var CONTAINERS;

function initConstants() {
  TABLE = document.createElement('table');
  TABLE_TR = document.createElement('tr');
  FRAGMENT_REG = /^\s*<(\w+|!)[^>]*>/;
  CONTAINERS = {
    tr: document.createElement('tbody'),
    tbody: TABLE,
    thead: TABLE,
    tfoot: TABLE,
    td: TABLE_TR,
    th: TABLE_TR,
    '*': document.createElement('div')
  };
}

function createDom(str) {
  if (!TABLE) {
    initConstants();
  }

  var name = FRAGMENT_REG.test(str) && RegExp.$1;

  if (!name || !(name in CONTAINERS)) {
    name = '*';
  }

  var container = CONTAINERS[name];
  str = str.replace(/(^\s*)|(\s*$)/g, '');
  container.innerHTML = '' + str;
  var dom = container.childNodes[0];
  container.removeChild(dom);
  return dom;
}
// CONCATENATED MODULE: ../node_modules/@antv/dom-util/esm/get-style.js
/**
 * 获取样式
 * @param  {Object} dom DOM节点
 * @param  {String} name 样式名
 * @param  {Any} defaultValue 默认值
 * @return {String} 属性值
 */
function getStyle(dom, name, defaultValue) {
  var v;

  try {
    v = window.getComputedStyle ? window.getComputedStyle(dom, null)[name] : dom.style[name]; // 一般不会走到这个逻辑，dom.style 获取的是标签 style 属性，也不准确
  } catch (e) {// do nothing
  } finally {
    v = v === undefined ? defaultValue : v;
  }

  return v;
}
// CONCATENATED MODULE: ../node_modules/@antv/dom-util/esm/get-height.js

function getHeight(el, defaultValue) {
  var height = getStyle(el, 'height', defaultValue);

  if (height === 'auto') {
    height = el.offsetHeight;
  }

  return parseFloat(height);
}
// CONCATENATED MODULE: ../node_modules/@antv/dom-util/esm/get-outer-height.js


function getOuterHeight(el, defaultValue) {
  var height = getHeight(el, defaultValue);
  var bTop = parseFloat(getStyle(el, 'borderTopWidth')) || 0;
  var pTop = parseFloat(getStyle(el, 'paddingTop')) || 0;
  var pBottom = parseFloat(getStyle(el, 'paddingBottom')) || 0;
  var bBottom = parseFloat(getStyle(el, 'borderBottomWidth')) || 0;
  var mTop = parseFloat(getStyle(el, 'marginTop')) || 0;
  var mBottom = parseFloat(getStyle(el, 'marginBottom')) || 0;
  return height + bTop + bBottom + pTop + pBottom + mTop + mBottom;
}
// CONCATENATED MODULE: ../node_modules/@antv/dom-util/esm/get-width.js

function get_width_getHeight(el, defaultValue) {
  var width = getStyle(el, 'width', defaultValue);

  if (width === 'auto') {
    width = el.offsetWidth;
  }

  return parseFloat(width);
}
// CONCATENATED MODULE: ../node_modules/@antv/dom-util/esm/get-outer-width.js


function getOuterWidth(el, defaultValue) {
  var width = get_width_getHeight(el, defaultValue);
  var bLeft = parseFloat(getStyle(el, 'borderLeftWidth')) || 0;
  var pLeft = parseFloat(getStyle(el, 'paddingLeft')) || 0;
  var pRight = parseFloat(getStyle(el, 'paddingRight')) || 0;
  var bRight = parseFloat(getStyle(el, 'borderRightWidth')) || 0;
  var mRight = parseFloat(getStyle(el, 'marginRight')) || 0;
  var mLeft = parseFloat(getStyle(el, 'marginLeft')) || 0;
  return width + bLeft + bRight + pLeft + pRight + mLeft + mRight;
}
// CONCATENATED MODULE: ../node_modules/@antv/dom-util/esm/get-ratio.js
function getRatio() {
  return window.devicePixelRatio ? window.devicePixelRatio : 2;
}
// CONCATENATED MODULE: ../node_modules/@antv/dom-util/esm/modify-css.js
function modifyCSS(dom, css) {
  if (dom) {
    for (var key in css) {
      if (css.hasOwnProperty(key)) {
        dom.style[key] = css[key];
      }
    }
  }

  return dom;
}
// CONCATENATED MODULE: ../node_modules/@antv/dom-util/esm/index.js
// dom









// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/util/dom.js

/**
 * get the element's bounding size
 * @param ele dom element
 * @returns the element width and height
 */

function getElementSize(ele) {
  var style = getComputedStyle(ele);
  return {
    width: (ele.clientWidth || parseInt(style.width, 10)) - parseInt(style.paddingLeft, 10) - parseInt(style.paddingRight, 10),
    height: (ele.clientHeight || parseInt(style.height, 10)) - parseInt(style.paddingTop, 10) - parseInt(style.paddingBottom, 10)
  };
}
/**
 * is value a valid number
 * @param v the input value
 * @returns whether it is a number
 */


function isNumber(v) {
  return typeof v === 'number' && !isNaN(v);
}
/**
 * @ignore
 * calculate the chart size
 * @param ele DOM element
 * @param autoFit should auto fit
 * @param width chart width which is set by user
 * @param height chart height which is set by user
 * @returns the chart width and height
 */


function getChartSize(ele, autoFit, width, height) {
  var w = width;
  var h = height;

  if (autoFit) {
    var size = getElementSize(ele);
    w = size.width ? size.width : w;
    h = size.height ? size.height : h;
  }

  return {
    width: Math.max(isNumber(w) ? w : MIN_CHART_WIDTH, MIN_CHART_WIDTH),
    height: Math.max(isNumber(h) ? h : MIN_CHART_HEIGHT, MIN_CHART_HEIGHT)
  };
}
/**
 * @ignore
 * remove html element from its parent
 * @param dom
 */

function removeDom(dom) {
  var parent = dom.parentNode;

  if (parent) {
    parent.removeChild(dom);
  }
}
/** @ignore */


// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.is-array.js
var es6_array_is_array = __webpack_require__("+3V6");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.keys.js
var es6_object_keys = __webpack_require__("75LO");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.sort.js
var es6_array_sort = __webpack_require__("U8p0");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.map.js
var es6_array_map = __webpack_require__("yIlq");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.filter.js
var es6_array_filter = __webpack_require__("9p7t");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.for-each.js
var es6_array_for_each = __webpack_require__("7lGJ");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es7.array.includes.js
var es7_array_includes = __webpack_require__("oMRA");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.string.includes.js
var es6_string_includes = __webpack_require__("6d4m");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.function.name.js
var es6_function_name = __webpack_require__("GkPX");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.iterator.js
var es6_array_iterator = __webpack_require__("K/PF");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.string.iterator.js
var es6_string_iterator = __webpack_require__("lQyR");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.map.js
var es6_map = __webpack_require__("zx98");

// EXTERNAL MODULE: ../node_modules/@antv/event-emitter/esm/index.js
var event_emitter_esm = __webpack_require__("g3ZY");

// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/base.js


/**
 * G2 Chart、View、Geometry 以及 Element 等的基类，提供事件以及一些通用的方法。
 */

var base_Base =
/** @class */
function (_super) {
  __extends(Base, _super);

  function Base(cfg) {
    var _this = _super.call(this) || this;
    /** 标识对象是否已销毁 */


    _this.destroyed = false;
    var _a = cfg.visible,
        visible = _a === void 0 ? true : _a;
    _this.visible = visible;
    return _this;
  }
  /**
   * 显示。
   */


  Base.prototype.show = function () {
    var visible = this.visible;

    if (!visible) {
      this.visible = true;
      this.changeVisible(true);
    }
  };
  /**
   * 隐藏。
   */


  Base.prototype.hide = function () {
    var visible = this.visible;

    if (visible) {
      this.visible = false;
      this.changeVisible(false);
    }
  };
  /**
   * 销毁。
   */


  Base.prototype.destroy = function () {
    this.off();
    this.destroyed = true;
  };
  /**
   * 显示或者隐藏。
   * @param visible
   * @returns
   */


  Base.prototype.changeVisible = function (visible) {
    if (this.visible === visible) {
      return;
    }

    this.visible = visible;
  };

  return Base;
}(event_emitter_esm["a" /* default */]);

/* harmony default export */ var base = (base_Base);
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.to-string.js
var es6_regexp_to_string = __webpack_require__("4aJ6");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.date.to-string.js
var es6_date_to_string = __webpack_require__("M/4x");

// EXTERNAL MODULE: ../node_modules/@antv/g-base/esm/index.js + 39 modules
var g_base_esm = __webpack_require__("AKAt");

// EXTERNAL MODULE: ../node_modules/@antv/adjust/lib/factory.js
var lib_factory = __webpack_require__("fI5t");

// EXTERNAL MODULE: ../node_modules/@antv/attr/lib/factory.js
var attr_lib_factory = __webpack_require__("Pfmi");

// CONCATENATED MODULE: ../node_modules/@antv/attr/esm/attributes/base.js





 // todo 这个到底目的是什么？

var base_toScaleString = function toScaleString(scale, value) {
  if (Object(esm["isString"])(value)) {
    return value;
  }

  return scale.invert(scale.scale(value));
};
/**
 * 所有视觉通道属性的基类
 * @class Base
 */


var base_Attribute =
/** @class */
function () {
  function Attribute(cfg) {
    this.names = [];
    this.scales = [];
    this.linear = false;
    this.values = [];

    this.callback = function () {
      return [];
    }; // 解析配置


    this._parseCfg(cfg);
  }
  /**
   * 映射的值组成的数组
   * @param params 对应 scale 顺序的值传入
   */


  Attribute.prototype.mapping = function () {
    var _this = this;

    var params = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      params[_i] = arguments[_i];
    }

    var values = params.map(function (param, idx) {
      return _this._toOriginParam(param, _this.scales[idx]);
    });
    return this.callback.apply(this, values);
  };
  /**
   * 如果进行线性映射，返回对应的映射值
   * @param percent
   */


  Attribute.prototype.getLinearValue = function (percent) {
    // 分段数量
    var steps = this.values.length - 1;
    var step = Math.floor(steps * percent);
    var leftPercent = steps * percent - step; // todo 不懂这个逻辑

    var start = this.values[step];
    var end = step === steps ? start : this.values[step + 1]; // 线性方程

    return start + (end - start) * leftPercent;
  };
  /**
   * 根据度量获取属性名
   */


  Attribute.prototype.getNames = function () {
    var scales = this.scales;
    var names = this.names;
    var length = Math.min(scales.length, names.length);
    var rst = [];

    for (var i = 0; i < length; i += 1) {
      rst.push(names[i]);
    }

    return rst;
  };
  /**
   * 获取所有的维度名
   */


  Attribute.prototype.getFields = function () {
    return this.scales.map(function (scale) {
      return scale.field;
    });
  };
  /**
   * 根据名称获取度量
   * @param name
   */


  Attribute.prototype.getScale = function (name) {
    return this.scales[this.names.indexOf(name)];
  };
  /**
   * 默认的回调函数（用户没有自定义 callback，或者用户自定义 callback 返回空的时候，使用 values 映射）
   * @param params
   */


  Attribute.prototype.defaultCallback = function () {
    var _this = this;

    var params = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      params[_i] = arguments[_i];
    } // 没有 params 的情况，是指没有指定 fields，直接返回配置的 values 常量


    if (params.length === 0) {
      return this.values;
    }

    return params.map(function (param, idx) {
      var scale = _this.scales[idx];
      return scale.type === 'identity' ? scale.values[0] : _this._getAttributeValue(scale, param);
    });
  }; // 解析配置


  Attribute.prototype._parseCfg = function (cfg) {
    var _this = this;

    var _a = cfg.type,
        type = _a === void 0 ? 'base' : _a,
        _b = cfg.names,
        names = _b === void 0 ? [] : _b,
        _c = cfg.scales,
        scales = _c === void 0 ? [] : _c,
        _d = cfg.values,
        values = _d === void 0 ? [] : _d,
        callback = cfg.callback;
    this.type = type;
    this.scales = scales;
    this.values = values;
    this.names = names; // 构造 callback 方法

    this.callback = function () {
      var params = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        params[_i] = arguments[_i];
      }
      /**
       * 当用户设置的 callback 返回 null 时, 应该返回默认 callback 中的值
       */


      if (callback) {
        // 使用用户返回的值处理
        var ret = callback.apply(void 0, params);

        if (!Object(esm["isNil"])(ret)) {
          return [ret];
        }
      } // 没有 callback 或者用户 callback 返回值为空，则使用默认的逻辑处理


      return _this.defaultCallback.apply(_this, params);
    };
  }; // 获取属性值，将值映射到视觉通道


  Attribute.prototype._getAttributeValue = function (scale, value) {
    // 如果是非线性的字段，直接从 values 中取值即可
    if (scale.isCategory && !this.linear) {
      // 离散 scale 变换成索引
      var idx = scale.translate(value);
      return this.values[idx % this.values.length];
    } // 线性则使用线性值


    var percent = scale.scale(value);
    return this.getLinearValue(percent);
  };
  /**
   * 通过 scale 拿到数据对应的原始的参数
   * @param param
   * @param scale
   * @private
   */


  Attribute.prototype._toOriginParam = function (param, scale) {
    // 是线性，直接返回
    // 非线性，使用 scale 变换
    return !scale.isLinear ? Object(esm["isArray"])(param) ? param.map(function (p) {
      return base_toScaleString(scale, p);
    }) : base_toScaleString(scale, param) : param;
  };

  return Attribute;
}();

/* harmony default export */ var attributes_base = (base_Attribute);
// EXTERNAL MODULE: ../node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__("bb6g");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.match.js
var es6_regexp_match = __webpack_require__("9ovy");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.split.js
var es6_regexp_split = __webpack_require__("asZ9");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.number.constructor.js
var es6_number_constructor = __webpack_require__("e2Kn");

// CONCATENATED MODULE: ../node_modules/@antv/color-util/esm/index.js









var RGB_REG = /rgba?\(([\s.,0-9]+)\)/;
var regexLG = /^l\s*\(\s*([\d.]+)\s*\)\s*(.*)/i;
var regexRG = /^r\s*\(\s*([\d.]+)\s*,\s*([\d.]+)\s*,\s*([\d.]+)\s*\)\s*(.*)/i;
var regexColorStop = /[\d.]+:(#[^\s]+|[^\)]+\))/gi;

var isGradientColor = function isGradientColor(val) {
  return /^[r,R,L,l]{1}[\s]*\(/.test(val);
}; // 创建辅助 tag 取颜色


var createTmp = function createTmp() {
  var i = document.createElement('i');
  i.title = 'Web Colour Picker';
  i.style.display = 'none';
  document.body.appendChild(i);
  return i;
}; // 获取颜色之间的插值


var getValue = function getValue(start, end, percent, index) {
  return start[index] + (end[index] - start[index]) * percent;
}; // 数组转换成颜色


function arr2rgb(arr) {
  return "#" + toHex(arr[0]) + toHex(arr[1]) + toHex(arr[2]);
} // rgb 颜色转换成数组


var rgb2arr = function rgb2arr(str) {
  return [parseInt(str.substr(1, 2), 16), parseInt(str.substr(3, 2), 16), parseInt(str.substr(5, 2), 16)];
}; // 将数值从 0-255 转换成16进制字符串


var toHex = function toHex(value) {
  var x16Value = Math.round(value).toString(16);
  return x16Value.length === 1 ? "0" + x16Value : x16Value;
}; // 计算颜色


var calColor = function calColor(points, percent) {
  var fixedPercent = isNaN(Number(percent)) || percent < 0 ? 0 : percent > 1 ? 1 : Number(percent);
  var steps = points.length - 1;
  var step = Math.floor(steps * fixedPercent);
  var left = steps * fixedPercent - step;
  var start = points[step];
  var end = step === steps ? start : points[step + 1];
  return arr2rgb([getValue(start, end, left, 0), getValue(start, end, left, 1), getValue(start, end, left, 2)]);
}; // 用于给 toRGB 的缓存（使用 memoize 方法替换）
// const colorCache = {};


var iEl;
/**
 * 将颜色转换到 rgb 的格式
 * @param {color} color 颜色
 * @return 将颜色转换到 '#ffffff' 的格式
 */

var toRGB = function toRGB(color) {
  // 如果已经是 rgb的格式
  if (color[0] === '#' && color.length === 7) {
    return color;
  }

  if (!iEl) {
    // 防止防止在页头报错
    iEl = createTmp();
  }

  iEl.style.color = color;
  var rst = document.defaultView.getComputedStyle(iEl, '').getPropertyValue('color');
  var matches = RGB_REG.exec(rst);
  var cArray = matches[1].split(/\s*,\s*/).map(function (s) {
    return Number(s);
  });
  rst = arr2rgb(cArray);
  return rst;
};
/**
 * 获取渐变函数
 * @param colors 多个颜色
 * @return 颜色值
 */


var esm_gradient = function gradient(colors) {
  var colorArray = Object(esm["isString"])(colors) ? colors.split('-') : colors;
  var points = Object(esm["map"])(colorArray, function (color) {
    return rgb2arr(color.indexOf('#') === -1 ? toRGB(color) : color);
  }); // 返回一个函数

  return function (percent) {
    return calColor(points, percent);
  };
};

var esm_toCSSGradient = function toCSSGradient(gradientColor) {
  if (isGradientColor(gradientColor)) {
    var cssColor_1;
    var steps = void 0;

    if (gradientColor[0] === 'l') {
      // 线性渐变
      var arr = regexLG.exec(gradientColor);
      var angle = +arr[1] + 90; // css 和 g 的渐变起始角度不同

      steps = arr[2];
      cssColor_1 = "linear-gradient(" + angle + "deg, ";
    } else if (gradientColor[0] === 'r') {
      // 径向渐变
      cssColor_1 = 'radial-gradient(';
      var arr = regexRG.exec(gradientColor);
      steps = arr[4];
    }

    var colorStops_1 = steps.match(regexColorStop);
    Object(esm["each"])(colorStops_1, function (item, index) {
      var itemArr = item.split(':');
      cssColor_1 += itemArr[1] + " " + itemArr[0] * 100 + "%";

      if (index !== colorStops_1.length - 1) {
        cssColor_1 += ', ';
      }
    });
    cssColor_1 += ')';
    return cssColor_1;
  }

  return gradientColor;
};

/* harmony default export */ var color_util_esm = ({
  rgb2arr: rgb2arr,
  gradient: esm_gradient,
  toRGB: Object(esm["memoize"])(toRGB),
  toCSSGradient: esm_toCSSGradient
});
// CONCATENATED MODULE: ../node_modules/@antv/attr/esm/attributes/color.js








var color_Color =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Color, _super);

  function Color(cfg) {
    var _this = _super.call(this, cfg) || this;

    _this.type = 'color';
    _this.names = ['color'];

    if (Object(esm["isString"])(_this.values)) {
      _this.linear = true;
    }

    _this.gradient = color_util_esm.gradient(_this.values);
    return _this;
  }
  /**
   * @override
   */


  Color.prototype.getLinearValue = function (percent) {
    return this.gradient(percent);
  };

  return Color;
}(attributes_base);

/* harmony default export */ var attributes_color = (color_Color);
// CONCATENATED MODULE: ../node_modules/@antv/attr/esm/attributes/opacity.js



var opacity_Opacity =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Opacity, _super);

  function Opacity(cfg) {
    var _this = _super.call(this, cfg) || this;

    _this.type = 'opacity';
    _this.names = ['opacity'];
    return _this;
  }

  return Opacity;
}(attributes_base);

/* harmony default export */ var opacity = (opacity_Opacity);
// CONCATENATED MODULE: ../node_modules/@antv/attr/esm/attributes/position.js





var position_Position =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Position, _super);

  function Position(cfg) {
    var _this = _super.call(this, cfg) || this;

    _this.names = ['x', 'y'];
    _this.type = 'position';
    return _this;
  }

  Position.prototype.mapping = function (x, y) {
    var _a = this.scales,
        scaleX = _a[0],
        scaleY = _a[1];

    if (Object(esm["isNil"])(x) || Object(esm["isNil"])(y)) {
      return [];
    }

    return [Object(esm["isArray"])(x) ? x.map(function (xi) {
      return scaleX.scale(xi);
    }) : scaleX.scale(x), Object(esm["isArray"])(y) ? y.map(function (yi) {
      return scaleY.scale(yi);
    }) : scaleY.scale(y)];
  };

  return Position;
}(attributes_base);

/* harmony default export */ var attributes_position = (position_Position);
// CONCATENATED MODULE: ../node_modules/@antv/attr/esm/attributes/shape.js






var shape_Shape =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Shape, _super);

  function Shape(cfg) {
    var _this = _super.call(this, cfg) || this;

    _this.type = 'shape';
    _this.names = ['shape'];
    return _this;
  }
  /**
   * @override
   */


  Shape.prototype.getLinearValue = function (percent) {
    var idx = Math.round((this.values.length - 1) * percent);
    return this.values[idx];
  };

  return Shape;
}(attributes_base);

/* harmony default export */ var attributes_shape = (shape_Shape);
// CONCATENATED MODULE: ../node_modules/@antv/attr/esm/attributes/size.js



var size_Size =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Size, _super);

  function Size(cfg) {
    var _this = _super.call(this, cfg) || this;

    _this.type = 'size';
    _this.names = ['size'];
    return _this;
  }

  return Size;
}(attributes_base);

/* harmony default export */ var attributes_size = (size_Size);
// EXTERNAL MODULE: ../node_modules/@antv/scale/esm/index.js + 33 modules
var scale_esm = __webpack_require__("G3Xc");

// CONCATENATED MODULE: ../node_modules/@antv/attr/esm/interface.js


// CONCATENATED MODULE: ../node_modules/@antv/attr/esm/factory.js
 // 所有的 attribute map

var ATTRIBUTE_MAP = {};
/**
 * 通过类型获得 Attribute 类
 * @param type
 */

var getAttribute = function getAttribute(type) {
  return ATTRIBUTE_MAP[type.toLowerCase()];
};

var registerAttribute = function registerAttribute(type, ctor) {
  // 注册的时候，需要校验 type 重名，不区分大小写
  if (getAttribute(type)) {
    throw new Error("Attribute type '" + type + "' existed.");
  } // 存储到 map 中


  ATTRIBUTE_MAP[type.toLowerCase()] = ctor;
};



// CONCATENATED MODULE: ../node_modules/@antv/attr/esm/index.js







registerAttribute('Color', attributes_color);
registerAttribute('Opacity', opacity);
registerAttribute('Position', attributes_position);
registerAttribute('Shape', attributes_shape);
registerAttribute('Size', attributes_size);


// EXTERNAL MODULE: ../node_modules/@antv/matrix-util/esm/index.js + 2 modules
var matrix_util_esm = __webpack_require__("iXSg");

// CONCATENATED MODULE: ../node_modules/@antv/coord/esm/coord/base.js



/**
 * Coordinate Base Class
 */

var base_Coordinate =
/** @class */
function () {
  function Coordinate(cfg) {
    // 自身属性
    this.type = 'coordinate';
    this.isRect = false;
    this.isHelix = false;
    this.isPolar = false;
    this.isReflectX = false;
    this.isReflectY = false;
    var start = cfg.start,
        end = cfg.end,
        _a = cfg.matrix,
        matrix = _a === void 0 ? [1, 0, 0, 0, 1, 0, 0, 0, 1] : _a,
        _b = cfg.isTransposed,
        isTransposed = _b === void 0 ? false : _b;
    this.start = start;
    this.end = end;
    this.matrix = matrix;
    this.originalMatrix = Object(tslib_es6["__spreadArrays"])(matrix); // 去除引用

    this.isTransposed = isTransposed;
  }
  /**
   * 初始化流程
   */


  Coordinate.prototype.initial = function () {
    // center、width、height
    this.center = {
      x: (this.start.x + this.end.x) / 2,
      y: (this.start.y + this.end.y) / 2
    };
    this.width = Math.abs(this.end.x - this.start.x);
    this.height = Math.abs(this.end.y - this.start.y);
  };
  /**
   * 更新配置
   * @param cfg
   */


  Coordinate.prototype.update = function (cfg) {
    Object(esm["assign"])(this, cfg);
    this.initial();
  };

  Coordinate.prototype.convertDim = function (percent, dim) {
    var _a;

    var _b = this[dim],
        start = _b.start,
        end = _b.end; // 交换

    if (this.isReflect(dim)) {
      _a = [end, start], start = _a[0], end = _a[1];
    }

    return start + percent * (end - start);
  };

  Coordinate.prototype.invertDim = function (value, dim) {
    var _a;

    var _b = this[dim],
        start = _b.start,
        end = _b.end; // 交换

    if (this.isReflect(dim)) {
      _a = [end, start], start = _a[0], end = _a[1];
    }

    return (value - start) / (end - start);
  };
  /**
   * 将坐标点进行矩阵变换
   * @param x   对应 x 轴画布坐标
   * @param y   对应 y 轴画布坐标
   * @param tag 默认为 0，可取值 0, 1
   * @return    返回变换后的三阶向量 [x, y, z]
   */


  Coordinate.prototype.applyMatrix = function (x, y, tag) {
    if (tag === void 0) {
      tag = 0;
    }

    var matrix = this.matrix;
    var vector = [x, y, tag];
    matrix_util_esm["d" /* vec3 */].transformMat3(vector, vector, matrix);
    return vector;
  };
  /**
   * 将坐标点进行矩阵逆变换
   * @param x   对应 x 轴画布坐标
   * @param y   对应 y 轴画布坐标
   * @param tag 默认为 0，可取值 0, 1
   * @return    返回矩阵逆变换后的三阶向量 [x, y, z]
   */


  Coordinate.prototype.invertMatrix = function (x, y, tag) {
    if (tag === void 0) {
      tag = 0;
    }

    var matrix = this.matrix;
    var inverted = matrix_util_esm["b" /* mat3 */].invert([0, 0, 0, 0, 0, 0, 0, 0, 0], matrix);
    var vector = [x, y, tag];

    if (inverted) {
      // 如果为空则不进行矩阵变化，防止报错
      matrix_util_esm["d" /* vec3 */].transformMat3(vector, vector, inverted);
    }

    return vector;
  };
  /**
   * 将归一化的坐标点数据转换为画布坐标，并根据坐标系当前矩阵进行变换
   * @param point 归一化的坐标点
   * @return      返回进行矩阵变换后的画布坐标
   */


  Coordinate.prototype.convert = function (point) {
    var _a = this.convertPoint(point),
        x = _a.x,
        y = _a.y;

    var vector = this.applyMatrix(x, y, 1);
    return {
      x: vector[0],
      y: vector[1]
    };
  };
  /**
   * 将进行过矩阵变换画布坐标转换为归一化坐标
   * @param point 画布坐标
   * @return      返回归一化的坐标点
   */


  Coordinate.prototype.invert = function (point) {
    var vector = this.invertMatrix(point.x, point.y, 1);
    return this.invertPoint({
      x: vector[0],
      y: vector[1]
    });
  };
  /**
   * 坐标系旋转变换
   * @param  radian 旋转弧度
   * @return        返回坐标系对象
   */


  Coordinate.prototype.rotate = function (radian) {
    var matrix = this.matrix;
    var center = this.center;
    matrix_util_esm["a" /* ext */].leftTranslate(matrix, matrix, [-center.x, -center.y]);
    matrix_util_esm["a" /* ext */].leftRotate(matrix, matrix, radian);
    matrix_util_esm["a" /* ext */].leftTranslate(matrix, matrix, [center.x, center.y]);
    return this;
  };
  /**
   * 坐标系反射变换
   * @param dim 反射维度
   * @return    返回坐标系对象
   */


  Coordinate.prototype.reflect = function (dim) {
    if (dim === 'x') {
      this.isReflectX = !this.isReflectX;
    } else {
      this.isReflectY = !this.isReflectY;
    }

    return this;
  };
  /**
   * 坐标系比例变换
   * @param s1 x 方向缩放比例
   * @param s2 y 方向缩放比例
   * @return     返回坐标系对象
   */


  Coordinate.prototype.scale = function (s1, s2) {
    var matrix = this.matrix;
    var center = this.center;
    matrix_util_esm["a" /* ext */].leftTranslate(matrix, matrix, [-center.x, -center.y]);
    matrix_util_esm["a" /* ext */].leftScale(matrix, matrix, [s1, s2]);
    matrix_util_esm["a" /* ext */].leftTranslate(matrix, matrix, [center.x, center.y]);
    return this;
  };
  /**
   * 坐标系平移变换
   * @param x x 方向平移像素
   * @param y y 方向平移像素
   * @return    返回坐标系对象
   */


  Coordinate.prototype.translate = function (x, y) {
    var matrix = this.matrix;
    matrix_util_esm["a" /* ext */].leftTranslate(matrix, matrix, [x, y]);
    return this;
  };
  /**
   * 将坐标系 x y 两个轴进行转置
   * @return 返回坐标系对象
   */


  Coordinate.prototype.transpose = function () {
    this.isTransposed = !this.isTransposed;
    return this;
  };

  Coordinate.prototype.getCenter = function () {
    return this.center;
  };

  Coordinate.prototype.getWidth = function () {
    return this.width;
  };

  Coordinate.prototype.getHeight = function () {
    return this.height;
  };

  Coordinate.prototype.getRadius = function () {
    return this.radius;
  };
  /**
   * whether has reflect
   * @param dim
   */


  Coordinate.prototype.isReflect = function (dim) {
    return dim === 'x' ? this.isReflectX : this.isReflectY;
  };
  /**
   * 重置 matrix
   * @param matrix 如果传入，则使用，否则使用构造函数中传入的默认 matrix
   */


  Coordinate.prototype.resetMatrix = function (matrix) {
    // 去除引用关系
    this.matrix = matrix ? matrix : Object(tslib_es6["__spreadArrays"])(this.originalMatrix);
  };

  return Coordinate;
}();

/* harmony default export */ var coord_base = (base_Coordinate);
// CONCATENATED MODULE: ../node_modules/@antv/coord/esm/coord/cartesian.js


/**
 * 笛卡尔坐标系
 * https://www.zhihu.com/question/20665303
 */

var cartesian_Cartesian =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Cartesian, _super);

  function Cartesian(cfg) {
    var _this = _super.call(this, cfg) || this;

    _this.isRect = true;
    _this.type = 'cartesian';

    _this.initial();

    return _this;
  }

  Cartesian.prototype.initial = function () {
    _super.prototype.initial.call(this);

    var start = this.start;
    var end = this.end;
    this.x = {
      start: start.x,
      end: end.x
    };
    this.y = {
      start: start.y,
      end: end.y
    };
  };

  Cartesian.prototype.convertPoint = function (point) {
    var _a;

    var x = point.x,
        y = point.y; // 交换

    if (this.isTransposed) {
      _a = [y, x], x = _a[0], y = _a[1];
    }

    return {
      x: this.convertDim(x, 'x'),
      y: this.convertDim(y, 'y')
    };
  };

  Cartesian.prototype.invertPoint = function (point) {
    var _a;

    var x = this.invertDim(point.x, 'x');
    var y = this.invertDim(point.y, 'y');

    if (this.isTransposed) {
      _a = [y, x], x = _a[0], y = _a[1];
    }

    return {
      x: x,
      y: y
    };
  };

  return Cartesian;
}(coord_base);

/* harmony default export */ var cartesian = (cartesian_Cartesian);
// CONCATENATED MODULE: ../node_modules/@antv/coord/esm/coord/helix.js




/**
 * 螺旋坐标系
 */

var helix_Helix =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Helix, _super);

  function Helix(cfg) {
    var _this = _super.call(this, cfg) || this;

    _this.isHelix = true;
    _this.type = 'helix';
    var _a = cfg.startAngle,
        startAngle = _a === void 0 ? 1.25 * Math.PI : _a,
        _b = cfg.endAngle,
        endAngle = _b === void 0 ? 7.25 * Math.PI : _b,
        _c = cfg.innerRadius,
        innerRadius = _c === void 0 ? 0 : _c,
        radius = cfg.radius;
    _this.startAngle = startAngle;
    _this.endAngle = endAngle;
    _this.innerRadius = innerRadius;
    _this.radius = radius;

    _this.initial();

    return _this;
  }

  Helix.prototype.initial = function () {
    _super.prototype.initial.call(this);

    var index = (this.endAngle - this.startAngle) / (2 * Math.PI) + 1; // 螺线圈数

    var maxRadius = Math.min(this.width, this.height) / 2;

    if (this.radius && this.radius >= 0 && this.radius <= 1) {
      maxRadius = maxRadius * this.radius;
    }

    this.d = Math.floor(maxRadius * (1 - this.innerRadius) / index);
    this.a = this.d / (Math.PI * 2); // 螺线系数

    this.x = {
      start: this.startAngle,
      end: this.endAngle
    };
    this.y = {
      start: this.innerRadius * maxRadius,
      end: this.innerRadius * maxRadius + this.d * 0.99
    };
  };
  /**
   * 将百分比数据变成屏幕坐标
   * @param point 归一化的点坐标
   * @return      返回对应的屏幕坐标
   */


  Helix.prototype.convertPoint = function (point) {
    var _a;

    var x = point.x,
        y = point.y;

    if (this.isTransposed) {
      _a = [y, x], x = _a[0], y = _a[1];
    }

    var thi = this.convertDim(x, 'x');
    var r = this.a * thi;
    var newY = this.convertDim(y, 'y');
    return {
      x: this.center.x + Math.cos(thi) * (r + newY),
      y: this.center.y + Math.sin(thi) * (r + newY)
    };
  };
  /**
   * 将屏幕坐标点还原成百分比数据
   * @param point 屏幕坐标
   * @return      返回对应的归一化后的数据
   */


  Helix.prototype.invertPoint = function (point) {
    var _a;

    var d = this.d + this.y.start;
    var v = matrix_util_esm["c" /* vec2 */].subtract([0, 0], [point.x, point.y], [this.center.x, this.center.y]);
    var thi = matrix_util_esm["a" /* ext */].angleTo(v, [1, 0], true);
    var rMin = thi * this.a; // 坐标与原点的连线在第一圈上的交点，最小r值

    if (matrix_util_esm["c" /* vec2 */].length(v) < rMin) {
      // 坐标与原点的连线不可能小于最小r值，但不排除因小数计算产生的略小于rMin的情况
      rMin = matrix_util_esm["c" /* vec2 */].length(v);
    }

    var index = Math.floor((matrix_util_esm["c" /* vec2 */].length(v) - rMin) / d); // 当前点位于第index圈

    thi = 2 * index * Math.PI + thi;
    var r = this.a * thi;
    var newY = matrix_util_esm["c" /* vec2 */].length(v) - r;
    newY = Object(esm["isNumberEqual"])(newY, 0) ? 0 : newY;
    var x = this.invertDim(thi, 'x');
    var y = this.invertDim(newY, 'y');
    x = Object(esm["isNumberEqual"])(x, 0) ? 0 : x;
    y = Object(esm["isNumberEqual"])(y, 0) ? 0 : y;

    if (this.isTransposed) {
      _a = [y, x], x = _a[0], y = _a[1];
    }

    return {
      x: x,
      y: y
    };
  };

  return Helix;
}(coord_base);

/* harmony default export */ var helix = (helix_Helix);
// CONCATENATED MODULE: ../node_modules/@antv/coord/esm/coord/polar.js





var polar_Polar =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Polar, _super);

  function Polar(cfg) {
    var _this = _super.call(this, cfg) || this;

    _this.isPolar = true;
    _this.type = 'polar';
    var _a = cfg.startAngle,
        startAngle = _a === void 0 ? -Math.PI / 2 : _a,
        _b = cfg.endAngle,
        endAngle = _b === void 0 ? Math.PI * 3 / 2 : _b,
        _c = cfg.innerRadius,
        innerRadius = _c === void 0 ? 0 : _c,
        radius = cfg.radius;
    _this.startAngle = startAngle;
    _this.endAngle = endAngle;
    _this.innerRadius = innerRadius;
    _this.radius = radius;

    _this.initial();

    return _this;
  }

  Polar.prototype.initial = function () {
    _super.prototype.initial.call(this);

    while (this.endAngle < this.startAngle) {
      this.endAngle += Math.PI * 2;
    }

    var oneBox = this.getOneBox();
    var oneWidth = oneBox.maxX - oneBox.minX;
    var oneHeight = oneBox.maxY - oneBox.minY;
    var left = Math.abs(oneBox.minX) / oneWidth;
    var top = Math.abs(oneBox.minY) / oneHeight;
    var maxRadius;

    if (this.height / oneHeight > this.width / oneWidth) {
      // width 为主
      maxRadius = this.width / oneWidth;
      this.circleCenter = {
        x: this.center.x - (0.5 - left) * this.width,
        y: this.center.y - (0.5 - top) * maxRadius * oneHeight
      };
    } else {
      // height 为主
      maxRadius = this.height / oneHeight;
      this.circleCenter = {
        x: this.center.x - (0.5 - left) * maxRadius * oneWidth,
        y: this.center.y - (0.5 - top) * this.height
      };
    }

    this.polarRadius = this.radius;

    if (!this.radius) {
      this.polarRadius = maxRadius;
    } else if (this.radius > 0 && this.radius <= 1) {
      this.polarRadius = maxRadius * this.radius;
    } else if (this.radius <= 0 || this.radius > maxRadius) {
      this.polarRadius = maxRadius;
    }

    this.x = {
      start: this.startAngle,
      end: this.endAngle
    };
    this.y = {
      start: this.innerRadius * this.polarRadius,
      end: this.polarRadius
    };
  };

  Polar.prototype.getRadius = function () {
    return this.polarRadius;
  };

  Polar.prototype.convertPoint = function (point) {
    var _a;

    var center = this.getCenter();
    var x = point.x,
        y = point.y;

    if (this.isTransposed) {
      _a = [y, x], x = _a[0], y = _a[1];
    }

    x = this.convertDim(x, 'x');
    y = this.convertDim(y, 'y');
    return {
      x: center.x + Math.cos(x) * y,
      y: center.y + Math.sin(x) * y
    };
  };

  Polar.prototype.invertPoint = function (point) {
    var center = this.getCenter();
    var vPoint = [point.x - center.x, point.y - center.y];
    var m = [1, 0, 0, 0, 1, 0, 0, 0, 1];
    matrix_util_esm["a" /* ext */].leftRotate(m, m, this.startAngle);
    var vStart3 = [1, 0, 0];
    matrix_util_esm["d" /* vec3 */].transformMat3(vStart3, vStart3, m);
    var vStart2 = [vStart3[0], vStart3[1]];
    var angle = matrix_util_esm["a" /* ext */].angleTo(vStart2, vPoint, this.endAngle < this.startAngle);

    if (Object(esm["isNumberEqual"])(angle, Math.PI * 2)) {
      angle = 0;
    }

    var radius = matrix_util_esm["c" /* vec2 */].length(vPoint);
    var xPercent = angle / (this.endAngle - this.startAngle);
    xPercent = this.endAngle - this.startAngle > 0 ? xPercent : -xPercent;
    var yPercent = this.invertDim(radius, 'y');
    var rst = {
      x: 0,
      y: 0
    };
    rst.x = this.isTransposed ? yPercent : xPercent;
    rst.y = this.isTransposed ? xPercent : yPercent;
    return rst;
  };

  Polar.prototype.getCenter = function () {
    return this.circleCenter;
  };

  Polar.prototype.getOneBox = function () {
    var startAngle = this.startAngle;
    var endAngle = this.endAngle;

    if (Math.abs(endAngle - startAngle) >= Math.PI * 2) {
      return {
        minX: -1,
        maxX: 1,
        minY: -1,
        maxY: 1
      };
    }

    var xs = [0, Math.cos(startAngle), Math.cos(endAngle)];
    var ys = [0, Math.sin(startAngle), Math.sin(endAngle)];

    for (var i = Math.min(startAngle, endAngle); i < Math.max(startAngle, endAngle); i += Math.PI / 18) {
      xs.push(Math.cos(i));
      ys.push(Math.sin(i));
    }

    return {
      minX: Math.min.apply(Math, xs),
      maxX: Math.max.apply(Math, xs),
      minY: Math.min.apply(Math, ys),
      maxY: Math.max.apply(Math, ys)
    };
  };

  return Polar;
}(coord_base);

/* harmony default export */ var polar = (polar_Polar);
// CONCATENATED MODULE: ../node_modules/@antv/coord/esm/factory.js
// 所有的 Coordinate map
var COORDINATE_MAP = {};
/**
 * 通过类型获得 coordinate 类
 * @param type
 */

var getCoordinate = function getCoordinate(type) {
  return COORDINATE_MAP[type.toLowerCase()];
};
/**
 * 注册 coordinate 类
 * @param type
 * @param ctor
 */

var registerCoordinate = function registerCoordinate(type, ctor) {
  // 存储到 map 中
  COORDINATE_MAP[type.toLowerCase()] = ctor;
};
// CONCATENATED MODULE: ../node_modules/@antv/coord/esm/index.js





registerCoordinate('rect', cartesian);
registerCoordinate('cartesian', cartesian);
registerCoordinate('polar', polar);
registerCoordinate('helix', helix);

// EXTERNAL MODULE: ../node_modules/@antv/g-base/lib/event/graph-event.js
var graph_event = __webpack_require__("65Qc");
var graph_event_default = /*#__PURE__*/__webpack_require__.n(graph_event);

// CONCATENATED MODULE: ../node_modules/@antv/component/esm/util/event.js

/**
 *
 * @param group 分组
 * @param eventName 事件名
 * @param eventObject 事件对象
 */

function propagationDelegate(group, eventName, eventObject) {
  var event = new graph_event_default.a(eventName, eventObject);
  event.target = group;
  event.propagationPath.push(group); // 从当前 group 开始触发 delegation

  group.emitDelegation(eventName, event);
  var parent = group.getParent(); // 执行冒泡

  while (parent) {
    // 委托事件要先触发
    parent.emitDelegation(eventName, event);
    event.propagationPath.push(parent);
    parent = parent.getParent();
  }
}
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/util/matrix.js

var identityMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];
function getMatrixByAngle(point, angle) {
  if (!angle) {
    // 角度为 0 或者 null 时返回 null
    return null;
  }

  var m = matrix_util_esm["a" /* ext */].transform(identityMatrix, [['t', -point.x, -point.y], ['r', angle], ['t', point.x, point.y]]);
  return m;
}
function getMatrixByTranslate(point, currentMatrix) {
  if (!point.x && !point.y) {
    // 0，0 或者 nan 的情况下返回 null
    return null;
  }

  return matrix_util_esm["a" /* ext */].transform(currentMatrix || identityMatrix, [['t', point.x, point.y]]);
} // 从矩阵获取旋转的角度

function getAngleByMatrix(matrix) {
  var xVector = [1, 0, 0];
  var out = [0, 0, 0];
  matrix_util_esm["d" /* vec3 */].transformMat3(out, xVector, matrix);
  return Math.atan2(out[1], out[0]);
} // 矩阵 * 向量

function multiplyVec2(matrix, v) {
  var out = [0, 0];
  matrix_util_esm["c" /* vec2 */].transformMat3(out, v, matrix);
  return out;
}

function applyMatrix2BBox(matrix, bbox) {
  var topLeft = multiplyVec2(matrix, [bbox.minX, bbox.minY]);
  var topRight = multiplyVec2(matrix, [bbox.maxX, bbox.minY]);
  var bottomLeft = multiplyVec2(matrix, [bbox.minX, bbox.maxY]);
  var bottomRight = multiplyVec2(matrix, [bbox.maxX, bbox.maxY]);
  var minX = Math.min(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]);
  var maxX = Math.max(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]);
  var minY = Math.min(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1]);
  var maxY = Math.max(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1]);
  return {
    x: minX,
    y: minY,
    minX: minX,
    minY: minY,
    maxX: maxX,
    maxY: maxY,
    width: maxX - minX,
    height: maxY - minY
  };
}
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.number.epsilon.js
var es6_number_epsilon = __webpack_require__("uKE/");

// CONCATENATED MODULE: ../node_modules/@antv/component/esm/util/util.js










function formatPadding(padding) {
  var top = 0;
  var left = 0;
  var right = 0;
  var bottom = 0;

  if (Object(esm["isNumber"])(padding)) {
    top = left = right = bottom = padding;
  } else if (Object(esm["isArray"])(padding)) {
    top = padding[0];
    right = !Object(esm["isNil"])(padding[1]) ? padding[1] : padding[0];
    bottom = !Object(esm["isNil"])(padding[2]) ? padding[2] : padding[0];
    left = !Object(esm["isNil"])(padding[3]) ? padding[3] : right;
  }

  return [top, right, bottom, left];
}
function clearDom(container) {
  var children = container.childNodes;
  var length = children.length;

  for (var i = length - 1; i >= 0; i--) {
    container.removeChild(children[i]);
  }
}
function hasClass(elements, cName) {
  return !!elements.className.match(new RegExp("(\\s|^)" + cName + "(\\s|$)"));
}
function regionToBBox(region) {
  var start = region.start,
      end = region.end;
  var minX = Math.min(start.x, end.x);
  var minY = Math.min(start.y, end.y);
  var maxX = Math.max(start.x, end.x);
  var maxY = Math.max(start.y, end.y);
  return {
    x: minX,
    y: minY,
    minX: minX,
    minY: minY,
    maxX: maxX,
    maxY: maxY,
    width: maxX - minX,
    height: maxY - minY
  };
}
function pointsToBBox(points) {
  var xs = points.map(function (point) {
    return point.x;
  });
  var ys = points.map(function (point) {
    return point.y;
  });
  var minX = Math.min.apply(Math, xs);
  var minY = Math.min.apply(Math, ys);
  var maxX = Math.max.apply(Math, xs);
  var maxY = Math.max.apply(Math, ys);
  return {
    x: minX,
    y: minY,
    minX: minX,
    minY: minY,
    maxX: maxX,
    maxY: maxY,
    width: maxX - minX,
    height: maxY - minY
  };
}
function createBBox(x, y, width, height) {
  return {
    x: x,
    y: y,
    width: width,
    height: height,
    minX: x,
    minY: y,
    maxX: x + width,
    maxY: y + height
  };
}
function getValueByPercent(min, max, percent) {
  return (1 - percent) * min + max * percent;
}
function getCirclePoint(center, radius, angle) {
  return {
    x: center.x + Math.cos(angle) * radius,
    y: center.y + Math.sin(angle) * radius
  };
}
function util_distance(p1, p2) {
  var dx = p2.x - p1.x;
  var dy = p2.y - p1.y;
  return Math.sqrt(dx * dx + dy * dy);
}
var wait = function wait(interval) {
  return new Promise(function (resolve) {
    setTimeout(resolve, interval);
  });
};
var near = function near(x, y) {
  return [x, y].includes(Infinity) ? Math.abs(x) === Math.abs(y) : Math.abs(x - y) < Math.pow(Number.EPSILON, 0.5);
};
function intersectBBox(box1, box2) {
  var minX = Math.max(box1.minX, box2.minX);
  var minY = Math.max(box1.minY, box2.minY);
  var maxX = Math.min(box1.maxX, box2.maxX);
  var maxY = Math.min(box1.maxY, box2.maxY);
  return createBBox(minX, minY, maxX - minX, maxY - minY);
}
function mergeBBox(box1, box2) {
  var minX = Math.min(box1.minX, box2.minX);
  var minY = Math.min(box1.minY, box2.minY);
  var maxX = Math.max(box1.maxX, box2.maxX);
  var maxY = Math.max(box1.maxY, box2.maxY);
  return createBBox(minX, minY, maxX - minX, maxY - minY);
}
function getBBoxWithClip(element) {
  var clipShape = element.getClip();
  var clipBBox = clipShape && clipShape.getBBox();
  var bbox;

  if (!element.isGroup()) {
    // 如果是普通的图形
    bbox = element.getBBox();
  } else {
    var minX_1 = Infinity;
    var maxX_1 = -Infinity;
    var minY_1 = Infinity;
    var maxY_1 = -Infinity;
    var children = element.getChildren();

    if (children.length > 0) {
      Object(esm["each"])(children, function (child) {
        if (child.get('visible')) {
          // 如果分组没有子元素，则直接跳过
          if (child.isGroup() && child.get('children').length === 0) {
            return true;
          }

          var box = getBBoxWithClip(child); // 计算 4 个顶点

          var leftTop = child.applyToMatrix([box.minX, box.minY, 1]);
          var leftBottom = child.applyToMatrix([box.minX, box.maxY, 1]);
          var rightTop = child.applyToMatrix([box.maxX, box.minY, 1]);
          var rightBottom = child.applyToMatrix([box.maxX, box.maxY, 1]); // 从中取最小的范围

          var boxMinX = Math.min(leftTop[0], leftBottom[0], rightTop[0], rightBottom[0]);
          var boxMaxX = Math.max(leftTop[0], leftBottom[0], rightTop[0], rightBottom[0]);
          var boxMinY = Math.min(leftTop[1], leftBottom[1], rightTop[1], rightBottom[1]);
          var boxMaxY = Math.max(leftTop[1], leftBottom[1], rightTop[1], rightBottom[1]);

          if (boxMinX < minX_1) {
            minX_1 = boxMinX;
          }

          if (boxMaxX > maxX_1) {
            maxX_1 = boxMaxX;
          }

          if (boxMinY < minY_1) {
            minY_1 = boxMinY;
          }

          if (boxMaxY > maxY_1) {
            maxY_1 = boxMaxY;
          }
        }
      });
    } else {
      minX_1 = 0;
      maxX_1 = 0;
      minY_1 = 0;
      maxY_1 = 0;
    }

    bbox = createBBox(minX_1, minY_1, maxX_1 - minX_1, maxY_1 - minY_1);
  }

  if (clipBBox) {
    return intersectBBox(bbox, clipBBox);
  } else {
    return bbox;
  }
}
function updateClip(element, newElement) {
  if (!element.getClip() && !newElement.getClip()) {
    // 两者都没有 clip
    return;
  }

  var newClipShape = newElement.getClip();

  if (!newClipShape) {
    // 新的 element 没有 clip
    element.setClip(null); // 移除 clip

    return;
  }

  var clipCfg = {
    type: newClipShape.get('type'),
    attrs: newClipShape.attr()
  };
  element.setClip(clipCfg);
}
function toPx(number) {
  return number + "px";
}
function getTextPoint(start, end, position, offset) {
  var lineLength = util_distance(start, end);
  var offsetPercent = offset / lineLength; // 计算间距同线的比例，用于计算最终的位置

  var percent = 0;

  if (position === 'start') {
    percent = 0 - offsetPercent;
  } else if (position === 'end') {
    percent = 1 + offsetPercent;
  }

  return {
    x: getValueByPercent(start.x, end.x, percent),
    y: getValueByPercent(start.y, end.y, percent)
  };
}
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/abstract/component.js



var LOCATION_FIELD_MAP = {
  none: [],
  point: ['x', 'y'],
  region: ['start', 'end'],
  points: ['points'],
  circle: ['center', 'radius', 'startAngle', 'endAngle']
};

var component_Component =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Component, _super);

  function Component(cfg) {
    var _this = _super.call(this, cfg) || this;

    _this.initCfg();

    return _this;
  }
  /**
   * @protected
   * 默认的配置项
   * @returns {object} 默认的配置项
   */


  Component.prototype.getDefaultCfg = function () {
    return {
      id: '',
      name: '',
      type: '',
      locationType: 'none',
      offsetX: 0,
      offsetY: 0,
      animate: false,
      capture: true,
      updateAutoRender: false,
      animateOption: {
        appear: null,
        update: {
          duration: 400,
          easing: 'easeQuadInOut'
        },
        enter: {
          duration: 400,
          easing: 'easeQuadInOut'
        },
        leave: {
          duration: 350,
          easing: 'easeQuadIn'
        }
      },
      events: null,
      defaultCfg: {},
      visible: true
    };
  };
  /**
   * 清理组件的内容，一般配合 render 使用
   * @example
   * axis.clear();
   * axis.render();
   */


  Component.prototype.clear = function () {};
  /**
   * 更新组件
   * @param {object} cfg 更新属性
   */


  Component.prototype.update = function (cfg) {
    var _this = this;

    var defaultCfg = this.get('defaultCfg');
    Object(esm["each"])(cfg, function (value, name) {
      var originCfg = _this.get(name);

      var newCfg = value;

      if (originCfg !== value) {
        // 判断两者是否相等，主要是进行 null 的判定
        if (Object(esm["isObject"])(value) && defaultCfg[name]) {
          // 新设置的属性与默认值进行合并
          newCfg = Object(esm["deepMix"])({}, defaultCfg[name], value);
        }

        _this.set(name, newCfg);
      }
    });
    this.updateInner(cfg);
    this.afterUpdate(cfg);
  }; // 更新内部


  Component.prototype.updateInner = function (cfg) {};

  Component.prototype.afterUpdate = function (cfg) {
    // 更新时考虑显示、隐藏
    if (Object(esm["hasKey"])(cfg, 'visible')) {
      if (cfg.visible) {
        this.show();
      } else {
        this.hide();
      }
    } // 更新时考虑capture


    if (Object(esm["hasKey"])(cfg, 'capture')) {
      this.setCapture(cfg.capture);
    }
  };

  Component.prototype.getLayoutBBox = function () {
    return this.getBBox(); // 默认返回 getBBox，不同的组件内部单独实现
  };

  Component.prototype.getLocationType = function () {
    return this.get('locationType');
  };

  Component.prototype.getOffset = function () {
    return {
      offsetX: this.get('offsetX'),
      offsetY: this.get('offsetY')
    };
  }; // 默认使用 update


  Component.prototype.setOffset = function (offsetX, offsetY) {
    this.update({
      offsetX: offsetX,
      offsetY: offsetY
    });
  };

  Component.prototype.setLocation = function (cfg) {
    var location = Object(tslib_es6["__assign"])({}, cfg);

    this.update(location);
  }; // 实现 ILocation 接口的 getLocation


  Component.prototype.getLocation = function () {
    var _this = this;

    var location = {};
    var locationType = this.get('locationType');
    var fields = LOCATION_FIELD_MAP[locationType];
    Object(esm["each"])(fields, function (field) {
      location[field] = _this.get(field);
    });
    return location;
  };

  Component.prototype.isList = function () {
    return false;
  };

  Component.prototype.isSlider = function () {
    return false;
  };
  /**
   * @protected
   * 初始化，用于具体的组件继承
   */


  Component.prototype.init = function () {}; // 将组件默认的配置项设置合并到传入的配置项


  Component.prototype.initCfg = function () {
    var _this = this;

    var defaultCfg = this.get('defaultCfg');
    Object(esm["each"])(defaultCfg, function (value, name) {
      var cfg = _this.get(name);

      if (Object(esm["isObject"])(cfg)) {
        var newCfg = Object(esm["deepMix"])({}, value, cfg);

        _this.set(name, newCfg);
      }
    });
  };

  return Component;
}(g_base_esm["d" /* Base */]);

/* harmony default export */ var abstract_component = (component_Component);
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/abstract/group-component.js







var STATUS_UPDATE = 'update_status';
var COPY_PROPERTIES = ['visible', 'tip', 'delegateObject']; // 更新对象时需要复制的属性

var COPY_PROPERTIES_EXCLUDES = ['container', 'group', 'shapesMap', 'isRegister', 'isUpdating', 'destroyed']; // 更新子组件时排除的属性

var group_component_GroupComponent =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(GroupComponent, _super);

  function GroupComponent() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  GroupComponent.prototype.getDefaultCfg = function () {
    var cfg = _super.prototype.getDefaultCfg.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, cfg), {
      container: null,

      /**
       * @private
       * 缓存图形的 Map
       */
      shapesMap: {},
      group: null,
      capture: true,

      /**
       * @private 组件或者图形是否允许注册
       * @type {false}
       */
      isRegister: false,

      /**
       * @private 是否正在更新
       * @type {false}
       */
      isUpdating: false,

      /**
       * @private
       * 是否初始状态，一旦 render，update 后，这个状态就变成 false, clear 后恢复
       */
      isInit: true
    });
  };

  GroupComponent.prototype.remove = function () {
    this.clear();
    var group = this.get('group');
    group.remove();
  };

  GroupComponent.prototype.clear = function () {
    var group = this.get('group');
    group.clear();
    this.set('shapesMap', {});
    this.clearOffScreenCache();
    this.set('isInit', true);
  };

  GroupComponent.prototype.getChildComponentById = function (id) {
    var group = this.getElementById(id);
    var inst = group && group.get('component');
    return inst;
  };

  GroupComponent.prototype.getElementById = function (id) {
    return this.get('shapesMap')[id];
  };

  GroupComponent.prototype.getElementByLocalId = function (localId) {
    var id = this.getElementId(localId);
    return this.getElementById(id);
  };

  GroupComponent.prototype.getElementsByName = function (name) {
    var rst = [];
    Object(esm["each"])(this.get('shapesMap'), function (elem) {
      if (elem.get('name') === name) {
        rst.push(elem);
      }
    });
    return rst;
  };

  GroupComponent.prototype.getContainer = function () {
    return this.get('container');
  };

  GroupComponent.prototype.updateInner = function (cfg) {
    // this.updateInner();
    // this.set('isUpdating', false);
    this.offScreenRender();

    if (this.get('updateAutoRender')) {
      this.render();
    }
  };

  GroupComponent.prototype.render = function () {
    var offScreenGroup = this.get('offScreenGroup');

    if (!offScreenGroup) {
      offScreenGroup = this.offScreenRender();
    }

    var group = this.get('group');
    this.updateElements(offScreenGroup, group);
    this.deleteElements();
    this.applyOffset();

    if (!this.get('eventInitted')) {
      this.initEvent();
      this.set('eventInitted', true);
    }

    this.set('isInit', false);
  };

  GroupComponent.prototype.show = function () {
    var group = this.get('group');
    group.show();
    this.set('visible', true);
  };

  GroupComponent.prototype.hide = function () {
    var group = this.get('group');
    group.hide();
    this.set('visible', false);
  };

  GroupComponent.prototype.setCapture = function (capture) {
    var group = this.get('group');
    group.set('capture', capture);
    this.set('capture', capture);
  };

  GroupComponent.prototype.destroy = function () {
    this.removeEvent();
    this.remove();

    _super.prototype.destroy.call(this);
  };

  GroupComponent.prototype.getBBox = function () {
    return this.get('group').getCanvasBBox();
  };

  GroupComponent.prototype.getLayoutBBox = function () {
    var group = this.get('group'); // 防止被 clear 了，offScreenBBox 不存在

    var bbox = this.getInnerLayoutBBox();
    var matrix = group.getTotalMatrix();

    if (matrix) {
      bbox = applyMatrix2BBox(matrix, bbox);
    }

    return bbox; // 默认返回 getBBox，不同的组件内部单独实现
  }; // 复写 on, off, emit 透传到 group


  GroupComponent.prototype.on = function (evt, callback, once) {
    var group = this.get('group');
    group.on(evt, callback, once);
    return this;
  };

  GroupComponent.prototype.off = function (evt, callback) {
    var group = this.get('group');
    group && group.off(evt, callback);
    return this;
  };

  GroupComponent.prototype.emit = function (eventName, eventObject) {
    var group = this.get('group');
    group.emit(eventName, eventObject);
  };

  GroupComponent.prototype.init = function () {
    _super.prototype.init.call(this);

    if (!this.get('group')) {
      this.initGroup();
    }

    this.offScreenRender(); // 绘制离屏 group
  }; // 获取组件内部布局占的包围盒


  GroupComponent.prototype.getInnerLayoutBBox = function () {
    return this.get('offScreenBBox') || this.get('group').getBBox();
  }; // 抛出委托对象


  GroupComponent.prototype.delegateEmit = function (eventName, eventObject) {
    var group = this.get('group');
    eventObject.target = group;
    group.emit(eventName, eventObject);
    propagationDelegate(group, eventName, eventObject);
  }; // 创建离屏的 group ,不添加在 canvas 中


  GroupComponent.prototype.createOffScreenGroup = function () {
    var group = this.get('group');
    var GroupClass = group.getGroupBase(); // 获取分组的构造函数

    var newGroup = new GroupClass({
      delegateObject: this.getDelegateObject()
    });
    return newGroup;
  }; // 应用 offset


  GroupComponent.prototype.applyOffset = function () {
    var offsetX = this.get('offsetX');
    var offsetY = this.get('offsetY');
    this.moveElementTo(this.get('group'), {
      x: offsetX,
      y: offsetY
    });
  };

  GroupComponent.prototype.initGroup = function () {
    var container = this.get('container');
    this.set('group', container.addGroup({
      id: this.get('id'),
      name: this.get('name'),
      capture: this.get('capture'),
      visible: this.get('visible'),
      isComponent: true,
      component: this,
      delegateObject: this.getDelegateObject()
    }));
  }; // 离屏渲染


  GroupComponent.prototype.offScreenRender = function () {
    this.clearOffScreenCache();
    var offScreenGroup = this.createOffScreenGroup();
    this.renderInner(offScreenGroup);
    this.set('offScreenGroup', offScreenGroup); // 包含包围盒的 bbox

    this.set('offScreenBBox', getBBoxWithClip(offScreenGroup));
    return offScreenGroup;
  };
  /**
   * @protected
   * 在组件上添加分组，主要解决 isReigeter 的问题
   * @param {IGroup} parent 父元素
   * @param {object} cfg    分组的配置项
   */


  GroupComponent.prototype.addGroup = function (parent, cfg) {
    this.appendDelegateObject(parent, cfg);
    var group = parent.addGroup(cfg);

    if (this.get('isRegister')) {
      this.registerElement(group);
    }

    return group;
  };
  /**
   * @protected
   * 在组件上添加图形，主要解决 isReigeter 的问题
   * @param {IGroup} parent 父元素
   * @param {object} cfg    分组的配置项
   */


  GroupComponent.prototype.addShape = function (parent, cfg) {
    this.appendDelegateObject(parent, cfg);
    var shape = parent.addShape(cfg);

    if (this.get('isRegister')) {
      this.registerElement(shape);
    }

    return shape;
  };
  /**
   * 在组件上添加子组件
   *
   * @param parent 父元素
   * @param cfg 子组件配置项
   */


  GroupComponent.prototype.addComponent = function (parent, cfg) {
    var id = cfg.id,
        Ctor = cfg.component,
        restCfg = Object(tslib_es6["__rest"])(cfg, ["id", "component"]); // @ts-ignore


    var inst = new Ctor(Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, restCfg), {
      id: id,
      container: parent,
      updateAutoRender: this.get('updateAutoRender')
    }));
    inst.init();
    inst.render();

    if (this.get('isRegister')) {
      this.registerElement(inst.get('group'));
    }

    return inst;
  };

  GroupComponent.prototype.initEvent = function () {};

  GroupComponent.prototype.removeEvent = function () {
    var group = this.get('group');
    group.off();
  };

  GroupComponent.prototype.getElementId = function (localId) {
    var id = this.get('id'); // 组件的 Id

    var name = this.get('name'); // 组件的名称

    return id + "-" + name + "-" + localId;
  };

  GroupComponent.prototype.registerElement = function (element) {
    var id = element.get('id');
    this.get('shapesMap')[id] = element;
  };

  GroupComponent.prototype.unregisterElement = function (element) {
    var id = element.get('id');
    delete this.get('shapesMap')[id];
  }; // 移动元素


  GroupComponent.prototype.moveElementTo = function (element, point) {
    var matrix = getMatrixByTranslate(point);
    element.attr('matrix', matrix);
  };
  /**
   * 图形元素新出现时的动画，默认图形从透明度 0 到当前透明度
   * @protected
   * @param {string} elmentName 图形元素名称
   * @param {IElement} newElement  新的图形元素
   * @param {object} animateCfg 动画的配置项
   */


  GroupComponent.prototype.addAnimation = function (elmentName, newElement, animateCfg) {
    // 缓存透明度
    var originOpacity = newElement.attr('opacity');

    if (Object(esm["isNil"])(originOpacity)) {
      originOpacity = 1;
    }

    newElement.attr('opacity', 0);
    newElement.animate({
      opacity: originOpacity
    }, animateCfg);
  };
  /**
   * 图形元素新出现时的动画，默认图形从透明度 0 到当前透明度
   * @protected
   * @param {string} elmentName 图形元素名称
   * @param {IElement} originElement 要删除的图形元素
   * @param {object} animateCfg 动画的配置项
   */


  GroupComponent.prototype.removeAnimation = function (elementName, originElement, animateCfg) {
    originElement.animate({
      opacity: 0
    }, animateCfg);
  };
  /**
   * 图形元素的更新动画
   * @param {string} elmentName 图形元素名称
   * @param {IElement} originElement 现有的图形元素
   * @param {object} newAttrs  新的图形元素
   * @param {object} animateCfg 动画的配置项
   */


  GroupComponent.prototype.updateAnimation = function (elementName, originElement, newAttrs, animateCfg) {
    originElement.animate(newAttrs, animateCfg);
  }; // 更新组件的图形


  GroupComponent.prototype.updateElements = function (newGroup, originGroup) {
    var _this = this;

    var animate = this.get('animate');
    var animateOption = this.get('animateOption');
    var children = newGroup.getChildren().slice(0); // 创建一个新数组，防止添加到 originGroup 时， children 变动

    var preElement; // 前面已经匹配到的图形元素，用于

    Object(esm["each"])(children, function (element) {
      var elementId = element.get('id');

      var originElement = _this.getElementById(elementId);

      var elementName = element.get('name');

      if (originElement) {
        if (element.get('isComponent')) {
          // 嵌套子组件更新
          var childComponent = element.get('component');
          var origChildComponent = originElement.get('component');
          var newCfg = Object(esm["pick"])(childComponent.cfg, Object(esm["difference"])(Object(esm["keys"])(childComponent.cfg), COPY_PROPERTIES_EXCLUDES));
          origChildComponent.update(newCfg);
          originElement.set(STATUS_UPDATE, 'update');
        } else {
          var replaceAttrs = _this.getReplaceAttrs(originElement, element); // 更新


          if (animate && animateOption.update) {
            // 没有动画
            _this.updateAnimation(elementName, originElement, replaceAttrs, animateOption.update);
          } else {
            // originElement.attrs = replaceAttrs; // 直接替换
            originElement.attr(replaceAttrs);
          } // 如果是分组，则继续执行


          if (element.isGroup()) {
            _this.updateElements(element, originElement);
          } // 复制属性


          Object(esm["each"])(COPY_PROPERTIES, function (name) {
            originElement.set(name, element.get(name));
          });
          updateClip(originElement, element);
          preElement = originElement; // 执行完更新后设置状态位为更新

          originElement.set(STATUS_UPDATE, 'update');
        }
      } else {
        // 没有对应的图形，则插入当前图形
        originGroup.add(element); // 应该在 group 加个 insertAt 的方法

        var siblings = originGroup.getChildren(); // 兄弟节点

        siblings.splice(siblings.length - 1, 1); // 先从数组中移除，然后放到合适的位置

        if (preElement) {
          // 前面已经有更新的图形或者插入的图形，则在这个图形后面插入
          var index = siblings.indexOf(preElement);
          siblings.splice(index + 1, 0, element); // 在已经更新的图形元素后面插入
        } else {
          siblings.unshift(element);
        }

        _this.registerElement(element); // 注册节点


        element.set(STATUS_UPDATE, 'add'); // 执行完更新后设置状态位为添加

        if (element.get('isComponent')) {
          // 直接新增子组件container属性，实例不变
          var childComponent = element.get('component');
          childComponent.set('container', originGroup);
        } else if (element.isGroup()) {
          // 如果元素是新增加的元素，则遍历注册所有的子节点
          _this.registerNewGroup(element);
        }

        preElement = element;

        if (animate) {
          var animateCfg = _this.get('isInit') ? animateOption.appear : animateOption.enter;

          if (animateCfg) {
            _this.addAnimation(elementName, element, animateCfg);
          }
        }
      }
    });
  };

  GroupComponent.prototype.clearUpdateStatus = function (group) {
    var children = group.getChildren();
    Object(esm["each"])(children, function (el) {
      el.set(STATUS_UPDATE, null); // 清理掉更新状态
    });
  }; // 清理离屏缓存


  GroupComponent.prototype.clearOffScreenCache = function () {
    var offScreenGroup = this.get('offScreenGroup');

    if (offScreenGroup) {
      // 销毁原先的离线 Group
      offScreenGroup.destroy();
    }

    this.set('offScreenGroup', null);
    this.set('offScreenBBox', null);
  }; // private updateInner() {
  //   const group = this.get('group');
  //   const newGroup = this.createOffScreenGroup();
  //   this.renderInner(newGroup);
  //   this.applyOffset();
  //   this.updateElements(newGroup, group);
  //   this.deleteElements();
  //   newGroup.destroy(); // 销毁虚拟分组
  // }
  // 获取发生委托时的对象，在事件中抛出


  GroupComponent.prototype.getDelegateObject = function () {
    var _a;

    var name = this.get('name');
    var delegateObject = (_a = {}, _a[name] = this, _a.component = this, _a);
    return delegateObject;
  }; // 附加委托信息，用于事件


  GroupComponent.prototype.appendDelegateObject = function (parent, cfg) {
    var parentObject = parent.get('delegateObject');

    if (!cfg.delegateObject) {
      cfg.delegateObject = {};
    }

    Object(esm["mix"])(cfg.delegateObject, parentObject); // 将父元素上的委托信息复制到自身
  }; // 获取需要替换的属性，如果原先图形元素存在，而新图形不存在，则设置 undefined


  GroupComponent.prototype.getReplaceAttrs = function (originElement, newElement) {
    var originAttrs = originElement.attr();
    var newAttrs = newElement.attr();
    Object(esm["each"])(originAttrs, function (v, k) {
      if (newAttrs[k] === undefined) {
        newAttrs[k] = undefined;
      }
    });
    return newAttrs;
  };

  GroupComponent.prototype.registerNewGroup = function (group) {
    var _this = this;

    var children = group.getChildren();
    Object(esm["each"])(children, function (element) {
      _this.registerElement(element); // 注册节点


      element.set(STATUS_UPDATE, 'add'); // 执行完更新后设置状态位为添加

      if (element.isGroup()) {
        _this.registerNewGroup(element);
      }
    });
  }; // 移除多余的元素


  GroupComponent.prototype.deleteElements = function () {
    var _this = this;

    var shapesMap = this.get('shapesMap');
    var deleteArray = []; // 遍历获取需要删除的图形元素

    Object(esm["each"])(shapesMap, function (element, id) {
      if (!element.get(STATUS_UPDATE) || element.destroyed) {
        deleteArray.push([id, element]);
      } else {
        element.set(STATUS_UPDATE, null); // 清理掉更新状态
      }
    });
    var animate = this.get('animate');
    var animateOption = this.get('animateOption'); // 删除图形元素

    Object(esm["each"])(deleteArray, function (item) {
      var id = item[0],
          element = item[1];

      if (!element.destroyed) {
        var elementName = element.get('name');

        if (animate && animateOption.leave) {
          // 需要动画结束时移除图形
          var callbackAnimCfg = Object(esm["mix"])({
            callback: function callback() {
              _this.removeElement(element);
            }
          }, animateOption.leave);

          _this.removeAnimation(elementName, element, callbackAnimCfg);
        } else {
          _this.removeElement(element);
        }
      }

      delete shapesMap[id]; // 从缓存中移除
    });
  };

  GroupComponent.prototype.removeElement = function (element) {
    if (element.get('isGroup')) {
      var component = element.get('component');

      if (component) {
        component.destroy();
      }
    }

    element.remove();
  };

  return GroupComponent;
}(abstract_component);

/* harmony default export */ var group_component = (group_component_GroupComponent);
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/util/theme.js
/* harmony default export */ var util_theme = ({
  fontFamily: "\n  \"-apple-system\", BlinkMacSystemFont, \"Segoe UI\", Roboto,\"Helvetica Neue\",\n  Helvetica, \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei\",\n  SimSun, \"sans-serif\"",
  textColor: '#2C3542',
  activeTextColor: '#333333',
  uncheckedColor: '#D8D8D8',
  lineColor: '#416180',
  regionColor: '#CCD7EB',
  verticalAxisRotate: -Math.PI / 4,
  horizontalAxisRotate: Math.PI / 4
});
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/annotation/line.js








var line_LineAnnotation =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(LineAnnotation, _super);

  function LineAnnotation() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
   * @protected
   * 默认的配置项
   * @returns {object} 默认的配置项
   */


  LineAnnotation.prototype.getDefaultCfg = function () {
    var cfg = _super.prototype.getDefaultCfg.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, cfg), {
      name: 'annotation',
      type: 'line',
      locationType: 'region',
      start: null,
      end: null,
      style: {},
      text: null,
      defaultCfg: {
        style: {
          fill: util_theme.textColor,
          fontSize: 12,
          textAlign: 'center',
          textBaseline: 'bottom',
          fontFamily: util_theme.fontFamily
        },
        text: {
          position: 'center',
          autoRotate: true,
          content: null,
          offsetX: 0,
          offsetY: 0,
          style: {
            stroke: util_theme.lineColor,
            lineWidth: 1
          }
        }
      }
    });
  };

  LineAnnotation.prototype.renderInner = function (group) {
    this.renderLine(group);

    if (this.get('text')) {
      this.renderLabel(group);
    }
  }; // 绘制线


  LineAnnotation.prototype.renderLine = function (group) {
    var start = this.get('start');
    var end = this.get('end');
    var style = this.get('style');
    this.addShape(group, {
      type: 'line',
      id: this.getElementId('line'),
      name: 'annotation-line',
      attrs: Object(tslib_es6["__assign"])({
        x1: start.x,
        y1: start.y,
        x2: end.x,
        y2: end.y
      }, style)
    });
  }; // 获取 label 的位置


  LineAnnotation.prototype.getLabelPoint = function (start, end, position) {
    var percent;

    if (position === 'start') {
      percent = 0;
    } else if (position === 'center') {
      percent = 0.5;
    } else if (Object(esm["isString"])(position) && position.indexOf('%') !== -1) {
      percent = parseInt(position, 10) / 100;
    } else if (Object(esm["isNumber"])(position)) {
      percent = position;
    } else {
      percent = 1;
    }

    if (percent > 1 || percent < 0) {
      percent = 1;
    }

    return {
      x: getValueByPercent(start.x, end.x, percent),
      y: getValueByPercent(start.y, end.y, percent)
    };
  }; // 绘制 label


  LineAnnotation.prototype.renderLabel = function (group) {
    var text = this.get('text');
    var start = this.get('start');
    var end = this.get('end');
    var position = text.position,
        content = text.content,
        style = text.style,
        offsetX = text.offsetX,
        offsetY = text.offsetY,
        autoRotate = text.autoRotate;
    var point = this.getLabelPoint(start, end, position);

    var attrs = Object(tslib_es6["__assign"])({
      x: point.x + offsetX,
      y: point.y + offsetY,
      text: content
    }, style); // 如果自动旋转，需要计算矩阵


    if (autoRotate) {
      var vector = [end.x - start.x, end.y - start.y];
      var angle = Math.atan2(vector[1], vector[0]);
      var matrix = getMatrixByAngle(point, angle);
      attrs.matrix = matrix;
    }

    this.addShape(group, {
      type: 'text',
      id: this.getElementId('line-text'),
      name: 'annotation-line-text',
      attrs: attrs
    });
  };

  return LineAnnotation;
}(group_component);

/* harmony default export */ var annotation_line = (line_LineAnnotation);
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/annotation/text.js





var text_TextAnnotation =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(TextAnnotation, _super);

  function TextAnnotation() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
   * @protected
   * 默认的配置项
   * @returns {object} 默认的配置项
   */


  TextAnnotation.prototype.getDefaultCfg = function () {
    var cfg = _super.prototype.getDefaultCfg.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, cfg), {
      name: 'annotation',
      type: 'text',
      locationType: 'point',
      x: 0,
      y: 0,
      content: '',
      rotate: null,
      style: {},
      defaultCfg: {
        style: {
          fill: util_theme.textColor,
          fontSize: 12,
          textAlign: 'center',
          textBaseline: 'middle',
          fontFamily: util_theme.fontFamily
        }
      }
    });
  }; // 复写 setLocation 方法，不需要重新创建 text


  TextAnnotation.prototype.setLocation = function (location) {
    this.set('x', location.x);
    this.set('y', location.y);
    this.resetLocation();
  };

  TextAnnotation.prototype.renderInner = function (group) {
    this.renderText(group);
  };

  TextAnnotation.prototype.renderText = function (group) {
    var _a = this.getLocation(),
        x = _a.x,
        y = _a.y;

    var content = this.get('content');
    var style = this.get('style');
    var text = this.addShape(group, {
      type: 'text',
      id: this.getElementId('text'),
      name: 'annotation-text',
      attrs: Object(tslib_es6["__assign"])({
        x: x,
        y: y,
        text: content
      }, style)
    });
    this.applyRotate(text, x, y);
  };

  TextAnnotation.prototype.applyRotate = function (textShape, x, y) {
    var rotate = this.get('rotate');
    var matrix = null;

    if (rotate) {
      matrix = getMatrixByAngle({
        x: x,
        y: y
      }, rotate);
    }

    textShape.attr('matrix', matrix);
  };

  TextAnnotation.prototype.resetLocation = function () {
    var textShape = this.getElementByLocalId('text');

    if (textShape) {
      var _a = this.getLocation(),
          x = _a.x,
          y = _a.y;

      textShape.attr({
        x: x,
        y: y
      });
      this.applyRotate(textShape, x, y);
    }
  };

  return TextAnnotation;
}(group_component);

/* harmony default export */ var annotation_text = (text_TextAnnotation);
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/annotation/arc.js




var arc_ArcAnnotation =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(ArcAnnotation, _super);

  function ArcAnnotation() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
   * @protected
   * 默认的配置项
   * @returns {object} 默认的配置项
   */


  ArcAnnotation.prototype.getDefaultCfg = function () {
    var cfg = _super.prototype.getDefaultCfg.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, cfg), {
      name: 'annotation',
      type: 'arc',
      locationType: 'circle',
      center: null,
      radius: 100,
      startAngle: -Math.PI / 2,
      endAngle: Math.PI * 3 / 2,
      style: {
        stroke: '#999',
        lineWidth: 1
      }
    });
  };

  ArcAnnotation.prototype.renderInner = function (group) {
    this.renderArc(group);
  };

  ArcAnnotation.prototype.getArcPath = function () {
    var _a = this.getLocation(),
        center = _a.center,
        radius = _a.radius,
        startAngle = _a.startAngle,
        endAngle = _a.endAngle;

    var startPoint = getCirclePoint(center, radius, startAngle);
    var endPoint = getCirclePoint(center, radius, endAngle);
    var largeFlag = endAngle - startAngle > Math.PI ? 1 : 0;
    var path = [['M', startPoint.x, startPoint.y]];

    if (endAngle - startAngle === Math.PI * 2) {
      // 整个圆是分割成两个圆
      var middlePoint = getCirclePoint(center, radius, startAngle + Math.PI);
      path.push(['A', radius, radius, 0, largeFlag, 1, middlePoint.x, middlePoint.y]);
      path.push(['A', radius, radius, 0, largeFlag, 1, endPoint.x, endPoint.y]);
    } else {
      path.push(['A', radius, radius, 0, largeFlag, 1, endPoint.x, endPoint.y]);
    }

    return path;
  }; // 绘制 arc


  ArcAnnotation.prototype.renderArc = function (group) {
    // 也可以 通过 get('center') 类似的方式逐个获取
    var path = this.getArcPath();
    var style = this.get('style');
    this.addShape(group, {
      type: 'path',
      id: this.getElementId('arc'),
      name: 'annotation-arc',
      attrs: Object(tslib_es6["__assign"])({
        path: path
      }, style)
    });
  };

  return ArcAnnotation;
}(group_component);

/* harmony default export */ var arc = (arc_ArcAnnotation);
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/annotation/region.js





var region_RegionAnnotation =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(RegionAnnotation, _super);

  function RegionAnnotation() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
   * @protected
   * 默认的配置项
   * @returns {object} 默认的配置项
   */


  RegionAnnotation.prototype.getDefaultCfg = function () {
    var cfg = _super.prototype.getDefaultCfg.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, cfg), {
      name: 'annotation',
      type: 'region',
      locationType: 'region',
      start: null,
      end: null,
      style: {},
      defaultCfg: {
        style: {
          lineWidth: 0,
          fill: util_theme.regionColor,
          opacity: 0.4
        }
      }
    });
  };

  RegionAnnotation.prototype.renderInner = function (group) {
    this.renderRegion(group);
  };

  RegionAnnotation.prototype.renderRegion = function (group) {
    var start = this.get('start');
    var end = this.get('end');
    var style = this.get('style');
    var bbox = regionToBBox({
      start: start,
      end: end
    });
    this.addShape(group, {
      type: 'rect',
      id: this.getElementId('region'),
      name: 'annotation-region',
      attrs: Object(tslib_es6["__assign"])({
        x: bbox.x,
        y: bbox.y,
        width: bbox.width,
        height: bbox.height
      }, style)
    });
  };

  return RegionAnnotation;
}(group_component);

/* harmony default export */ var annotation_region = (region_RegionAnnotation);
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/annotation/image.js




var image_ImageAnnotation =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(ImageAnnotation, _super);

  function ImageAnnotation() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
   * @protected
   * 默认的配置项
   * @returns {object} 默认的配置项
   */


  ImageAnnotation.prototype.getDefaultCfg = function () {
    var cfg = _super.prototype.getDefaultCfg.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, cfg), {
      name: 'annotation',
      type: 'image',
      locationType: 'region',
      start: null,
      end: null,
      src: null,
      style: {}
    });
  };

  ImageAnnotation.prototype.renderInner = function (group) {
    this.renderImage(group);
  };

  ImageAnnotation.prototype.getImageAttrs = function () {
    var start = this.get('start');
    var end = this.get('end');
    var style = this.get('style');
    var bbox = regionToBBox({
      start: start,
      end: end
    });
    var src = this.get('src');
    return Object(tslib_es6["__assign"])({
      x: bbox.x,
      y: bbox.y,
      img: src,
      width: bbox.width,
      height: bbox.height
    }, style);
  }; // 绘制图片


  ImageAnnotation.prototype.renderImage = function (group) {
    this.addShape(group, {
      type: 'image',
      id: this.getElementId('image'),
      name: 'annotation-image',
      attrs: this.getImageAttrs()
    });
  };

  return ImageAnnotation;
}(group_component);

/* harmony default export */ var annotation_image = (image_ImageAnnotation);
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/annotation/data-marker.js





var data_marker_DataMarkerAnnotation =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(DataMarkerAnnotation, _super);

  function DataMarkerAnnotation() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
   * 默认的配置项
   * @returns {object} 默认的配置项
   */


  DataMarkerAnnotation.prototype.getDefaultCfg = function () {
    var cfg = _super.prototype.getDefaultCfg.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, cfg), {
      name: 'annotation',
      type: 'dataMarker',
      locationType: 'point',
      x: 0,
      y: 0,
      point: {},
      line: {},
      text: {},
      direction: 'upward',
      autoAdjust: true,
      coordinateBBox: null,
      defaultCfg: {
        point: {
          display: true,
          style: {
            r: 3,
            fill: '#FFFFFF',
            stroke: '#1890FF',
            lineWidth: 2
          }
        },
        line: {
          display: true,
          length: 20,
          style: {
            stroke: util_theme.lineColor,
            lineWidth: 1
          }
        },
        text: {
          content: '',
          display: true,
          style: {
            fill: util_theme.textColor,
            opacity: 0.65,
            fontSize: 12,
            textAlign: 'start',
            fontFamily: util_theme.fontFamily
          }
        }
      }
    });
  };

  DataMarkerAnnotation.prototype.renderInner = function (group) {
    if (Object(esm["get"])(this.get('line'), 'display')) {
      this.renderLine(group);
    }

    if (Object(esm["get"])(this.get('text'), 'display')) {
      this.renderText(group);
    }

    if (Object(esm["get"])(this.get('point'), 'display')) {
      this.renderPoint(group);
    }

    if (this.get('autoAdjust')) {
      this.autoAdjust(group);
    }
  };

  DataMarkerAnnotation.prototype.applyOffset = function () {
    this.moveElementTo(this.get('group'), {
      x: this.get('x') + this.get('offsetX'),
      y: this.get('y') + this.get('offsetY')
    });
  };

  DataMarkerAnnotation.prototype.renderPoint = function (group) {
    var point = this.getShapeAttrs().point;
    this.addShape(group, {
      type: 'circle',
      id: this.getElementId('point'),
      name: 'annotation-point',
      attrs: point
    });
  };

  DataMarkerAnnotation.prototype.renderLine = function (group) {
    var line = this.getShapeAttrs().line;
    this.addShape(group, {
      type: 'path',
      id: this.getElementId('line'),
      name: 'annotation-line',
      attrs: line
    });
  };

  DataMarkerAnnotation.prototype.renderText = function (group) {
    var text = this.getShapeAttrs().text;
    this.addShape(group, {
      type: 'text',
      id: this.getElementId('text'),
      name: 'annotation-text',
      attrs: text
    });
  };

  DataMarkerAnnotation.prototype.autoAdjust = function (group) {
    var direction = this.get('direction');
    var x = this.get('x');
    var y = this.get('y');
    var lineLength = Object(esm["get"])(this.get('line'), 'length', 0);
    var coordinateBBox = this.get('coordinateBBox');

    var _a = group.getBBox(),
        minX = _a.minX,
        maxX = _a.maxX,
        minY = _a.minY,
        maxY = _a.maxY;

    var textShape = group.findById(this.getElementId('text'));
    var lineShape = group.findById(this.getElementId('line'));

    if (!coordinateBBox) {
      return;
    }

    if (textShape) {
      if (x + minX <= coordinateBBox.minX) {
        // 左侧超出
        textShape.attr('textAlign', 'start');
      }

      if (x + maxX >= coordinateBBox.maxX) {
        // 右侧超出
        textShape.attr('textAlign', 'end');
      }
    }

    if (direction === 'upward' && y + minY <= coordinateBBox.minY || direction !== 'upward' && y + maxY >= coordinateBBox.maxY) {
      // 上方或者下方超出
      var textBaseline = void 0;
      var factor = void 0;

      if (direction === 'upward' && y + minY <= coordinateBBox.minY) {
        textBaseline = 'top';
        factor = 1;
      } else {
        textBaseline = 'bottom';
        factor = -1;
      }

      textShape.attr('textBaseline', textBaseline);

      if (lineShape) {
        lineShape.attr('path', [['M', 0, 0], ['L', 0, lineLength * factor]]);
      }

      textShape.attr('y', (lineLength + 2) * factor);
    }
  };

  DataMarkerAnnotation.prototype.getShapeAttrs = function () {
    var lineDisplay = Object(esm["get"])(this.get('line'), 'display');
    var pointStyle = Object(esm["get"])(this.get('point'), 'style', {});
    var lineStyle = Object(esm["get"])(this.get('line'), 'style', {});
    var textStyle = Object(esm["get"])(this.get('text'), 'style', {});
    var direction = this.get('direction');
    var lineLength = lineDisplay ? Object(esm["get"])(this.get('line'), 'length', 0) : 0;
    var factor = direction === 'upward' ? -1 : 1;
    return {
      point: Object(tslib_es6["__assign"])({
        x: 0,
        y: 0
      }, pointStyle),
      line: Object(tslib_es6["__assign"])({
        path: [['M', 0, 0], ['L', 0, lineLength * factor]]
      }, lineStyle),
      text: Object(tslib_es6["__assign"])({
        x: 0,
        y: (lineLength + 2) * factor,
        text: Object(esm["get"])(this.get('text'), 'content', ''),
        textBaseline: direction === 'upward' ? 'bottom' : 'top'
      }, textStyle)
    };
  };

  return DataMarkerAnnotation;
}(group_component);

/* harmony default export */ var data_marker = (data_marker_DataMarkerAnnotation);
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/annotation/data-region.js







var data_region_DataRegionAnnotation =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(DataRegionAnnotation, _super);

  function DataRegionAnnotation() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
   * 默认的配置项
   * @returns {object} 默认的配置项
   */


  DataRegionAnnotation.prototype.getDefaultCfg = function () {
    var cfg = _super.prototype.getDefaultCfg.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, cfg), {
      name: 'annotation',
      type: 'dataRegion',
      locationType: 'points',
      points: [],
      lineLength: 0,
      region: {},
      text: {},
      defaultCfg: {
        region: {
          style: {
            lineWidth: 0,
            fill: util_theme.regionColor,
            opacity: 0.4
          }
        },
        text: {
          content: '',
          style: {
            textAlign: 'center',
            textBaseline: 'bottom',
            fontSize: 12,
            fill: util_theme.textColor,
            fontFamily: util_theme.fontFamily
          }
        }
      }
    });
  };

  DataRegionAnnotation.prototype.renderInner = function (group) {
    var regionStyle = Object(esm["get"])(this.get('region'), 'style', {});
    var textStyle = Object(esm["get"])(this.get('text'), 'style', {});
    var lineLength = this.get('lineLength') || 0;
    var points = this.get('points');

    if (!points.length) {
      return;
    }

    var bbox = pointsToBBox(points); // render region

    var path = [];
    path.push(['M', points[0].x, bbox.minY - lineLength]);
    points.forEach(function (point) {
      path.push(['L', point.x, point.y]);
    });
    path.push(['L', points[points.length - 1].x, points[points.length - 1].y - lineLength]);
    this.addShape(group, {
      type: 'path',
      id: this.getElementId('region'),
      name: 'annotation-region',
      attrs: Object(tslib_es6["__assign"])({
        path: path
      }, regionStyle)
    }); // render text

    this.addShape(group, {
      type: 'text',
      id: this.getElementId('text'),
      name: 'annotation-text',
      attrs: Object(tslib_es6["__assign"])({
        x: (bbox.minX + bbox.maxX) / 2,
        y: bbox.minY - lineLength,
        text: Object(esm["get"])(this.get('text'), 'content', '')
      }, textStyle)
    });
  };

  return DataRegionAnnotation;
}(group_component);

/* harmony default export */ var data_region = (data_region_DataRegionAnnotation);
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.fill.js
var es6_array_fill = __webpack_require__("IKQL");

// CONCATENATED MODULE: ../node_modules/@antv/component/esm/annotation/region-filter.js






var region_filter_RegionFilterAnnotation =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(RegionFilterAnnotation, _super);

  function RegionFilterAnnotation() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
   * 默认的配置项
   * @returns {object} 默认的配置项
   */


  RegionFilterAnnotation.prototype.getDefaultCfg = function () {
    var cfg = _super.prototype.getDefaultCfg.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, cfg), {
      name: 'annotation',
      type: 'regionFilter',
      locationType: 'region',
      start: null,
      end: null,
      color: null,
      shape: []
    });
  };

  RegionFilterAnnotation.prototype.renderInner = function (group) {
    var _this = this;

    var start = this.get('start');
    var end = this.get('end'); // 1. add region layer

    var layer = this.addGroup(group, {
      id: this.getElementId('region-filter'),
      capture: false
    }); // 2. clone shape & color it

    Object(esm["each"])(this.get('shapes'), function (shape, shapeIdx) {
      var type = shape.get('type');
      var attrs = Object(esm["clone"])(shape.attr());

      _this.adjustShapeAttrs(attrs);

      _this.addShape(layer, {
        id: _this.getElementId("shape-" + type + "-" + shapeIdx),
        capture: false,
        type: type,
        attrs: attrs
      });
    }); // 3. clip

    var clipBBox = regionToBBox({
      start: start,
      end: end
    });
    layer.setClip({
      type: 'rect',
      attrs: {
        x: clipBBox.minX,
        y: clipBBox.minY,
        width: clipBBox.width,
        height: clipBBox.height
      }
    });
  };

  RegionFilterAnnotation.prototype.adjustShapeAttrs = function (attr) {
    var color = this.get('color');

    if (attr.fill) {
      attr.fill = attr.fillStyle = color;
    }

    attr.stroke = attr.strokeStyle = color;
  };

  return RegionFilterAnnotation;
}(group_component);

/* harmony default export */ var region_filter = (region_filter_RegionFilterAnnotation);
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/annotation/index.js








// CONCATENATED MODULE: ../node_modules/@antv/component/esm/util/state.js
 // 获取多个状态量的合并值

function getStatesStyle(item, elementName, stateStyles) {
  var styleName = elementName + "Style"; // activeStyle

  var styles = null;
  Object(esm["each"])(stateStyles, function (v, state) {
    if (item[state] && v[styleName]) {
      if (!styles) {
        styles = {};
      }

      Object(esm["mix"])(styles, v[styleName]); // 合并样式
    }
  });
  return styles;
}
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/axis/base.js









var base_AxisBase =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(AxisBase, _super);

  function AxisBase() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  AxisBase.prototype.getDefaultCfg = function () {
    var cfg = _super.prototype.getDefaultCfg.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, cfg), {
      name: 'axis',
      ticks: [],
      line: {},
      tickLine: {},
      subTickLine: null,
      title: null,

      /**
       * 文本标签的配置项
       */
      label: {},

      /**
       * 垂直于坐标轴方向的因子，决定文本、title、tickLine 在坐标轴的哪一侧
       */
      verticalFactor: 1,
      // 垂直方向限制的长度，对文本自适应有很大影响
      verticalLimitLength: null,
      overlapOrder: ['autoRotate', 'autoEllipsis', 'autoHide'],
      tickStates: {},
      defaultCfg: {
        line: {
          // @type {Attrs} 坐标轴线的图形属性,如果设置成null，则不显示轴线
          style: {
            lineWidth: 1,
            stroke: util_theme.lineColor
          }
        },
        tickLine: {
          // @type {Attrs} 标注坐标线的图形属性
          style: {
            lineWidth: 1,
            stroke: util_theme.lineColor
          },
          alignTick: true,
          length: 5,
          displayWithLabel: true
        },
        subTickLine: {
          // @type {Attrs} 标注坐标线的图形属性
          style: {
            lineWidth: 1,
            stroke: util_theme.lineColor
          },
          count: 4,
          length: 2
        },
        label: {
          autoRotate: true,
          autoHide: false,
          autoEllipsis: false,
          style: {
            fontSize: 12,
            fill: util_theme.textColor,
            textBaseline: 'middle',
            fontFamily: util_theme.fontFamily,
            fontWeight: 'normal'
          },
          offset: 10
        },
        title: {
          autoRotate: true,
          spacing: 5,
          position: 'center',
          style: {
            fontSize: 12,
            fill: util_theme.textColor,
            textBaseline: 'middle',
            fontFamily: util_theme.fontFamily,
            textAlign: 'center'
          }
        },
        tickStates: {
          active: {
            labelStyle: {
              fontWeight: 500
            },
            tickLineStyle: {
              lineWidth: 2
            }
          },
          inactive: {
            labelStyle: {
              fill: util_theme.uncheckedColor
            }
          }
        }
      }
    });
  };
  /**
   * 绘制组件
   */


  AxisBase.prototype.renderInner = function (group) {
    if (this.get('line')) {
      this.drawLine(group);
    } // drawTicks 包括 drawLabels 和 drawTickLines


    this.drawTicks(group);

    if (this.get('title')) {
      this.drawTitle(group);
    }
  }; // 实现 IList 接口


  AxisBase.prototype.isList = function () {
    return true;
  };
  /**
   * 获取图例项
   * @return {ListItem[]} 列表项集合
   */


  AxisBase.prototype.getItems = function () {
    return this.get('ticks');
  };
  /**
   * 设置列表项
   * @param {ListItem[]} items 列表项集合
   */


  AxisBase.prototype.setItems = function (items) {
    this.update({
      ticks: items
    });
  };
  /**
   * 更新列表项
   * @param {ListItem} item 列表项
   * @param {object}   cfg  列表项
   */


  AxisBase.prototype.updateItem = function (item, cfg) {
    Object(esm["mix"])(item, cfg);
    this.clear(); // 由于单个图例项变化，会引起全局变化，所以全部更新

    this.render();
  };
  /**
   * 清空列表
   */


  AxisBase.prototype.clearItems = function () {
    var itemGroup = this.getElementByLocalId('label-group');
    itemGroup && itemGroup.clear();
  };
  /**
   * 设置列表项的状态
   * @param {ListItem} item  列表项
   * @param {string}   state 状态名
   * @param {boolean}  value 状态值, true, false
   */


  AxisBase.prototype.setItemState = function (item, state, value) {
    item[state] = value;
    this.updateTickStates(item); // 应用状态样式
  };
  /**
   * 是否存在指定的状态
   * @param {ListItem} item  列表项
   * @param {boolean} state 状态名
   */


  AxisBase.prototype.hasState = function (item, state) {
    return !!item[state];
  };

  AxisBase.prototype.getItemStates = function (item) {
    var tickStates = this.get('tickStates');
    var rst = [];
    Object(esm["each"])(tickStates, function (v, k) {
      if (item[k]) {
        // item.selected
        rst.push(k);
      }
    });
    return rst;
  };
  /**
   * 清楚所有列表项的状态
   * @param {string} state 状态值
   */


  AxisBase.prototype.clearItemsState = function (state) {
    var _this = this;

    var items = this.getItemsByState(state);
    Object(esm["each"])(items, function (item) {
      _this.setItemState(item, state, false);
    });
  };
  /**
   * 根据状态获取图例项
   * @param  {string}     state [description]
   * @return {ListItem[]}       [description]
   */


  AxisBase.prototype.getItemsByState = function (state) {
    var _this = this;

    var items = this.getItems();
    return Object(esm["filter"])(items, function (item) {
      return _this.hasState(item, state);
    });
  };

  AxisBase.prototype.getSidePoint = function (point, offset) {
    var self = this;
    var vector = self.getSideVector(offset, point);
    return {
      x: point.x + vector[0],
      y: point.y + vector[1]
    };
  };

  AxisBase.prototype.getTextAnchor = function (vector) {
    var align;

    if (Object(esm["isNumberEqual"])(vector[0], 0)) {
      align = 'center';
    } else if (vector[0] > 0) {
      align = 'start';
    } else if (vector[0] < 0) {
      align = 'end';
    }

    return align;
  };

  AxisBase.prototype.processOverlap = function (labelGroup) {}; // 绘制坐标轴线


  AxisBase.prototype.drawLine = function (group) {
    var path = this.getLinePath();
    var line = this.get('line'); // line 的判空在调用 drawLine 之前，不在这里判定

    this.addShape(group, {
      type: 'path',
      id: this.getElementId('line'),
      name: 'axis-line',
      attrs: Object(esm["mix"])({
        path: path
      }, line.style)
    });
  };

  AxisBase.prototype.getTickLineItems = function (ticks) {
    var _this = this;

    var tickLineItems = [];
    var tickLine = this.get('tickLine');
    var alignTick = tickLine.alignTick;
    var tickLineLength = tickLine.length;
    var tickSegment = 1;
    var tickCount = ticks.length;

    if (tickCount >= 2) {
      tickSegment = ticks[1].value - ticks[0].value;
    }

    Object(esm["each"])(ticks, function (tick) {
      var point = tick.point;

      if (!alignTick) {
        // tickLine 不同 tick 对齐时需要调整 point
        point = _this.getTickPoint(tick.value - tickSegment / 2);
      }

      var endPoint = _this.getSidePoint(point, tickLineLength);

      tickLineItems.push({
        startPoint: point,
        tickValue: tick.value,
        endPoint: endPoint,
        tickId: tick.id,
        id: "tickline-" + tick.id
      });
    }); // 如果 tickLine 不居中对齐，则需要在最后面补充一个 tickLine
    // if (!alignTick && tickCount > 0) {
    //   const tick = ticks[tickCount - 1];
    //   const point = this.getTickPoint(tick.value + tickSegment / 2);
    // }

    return tickLineItems;
  };

  AxisBase.prototype.getSubTickLineItems = function (tickLineItems) {
    var subTickLineItems = [];
    var subTickLine = this.get('subTickLine');
    var subCount = subTickLine.count;
    var tickLineCount = tickLineItems.length; // 刻度线的数量大于 2 时，才绘制子刻度

    if (tickLineCount >= 2) {
      for (var i = 0; i < tickLineCount - 1; i++) {
        var pre = tickLineItems[i];
        var next = tickLineItems[i + 1];

        for (var j = 0; j < subCount; j++) {
          var percent = (j + 1) / (subCount + 1);
          var tickValue = (1 - percent) * pre.tickValue + percent * next.tickValue;
          var point = this.getTickPoint(tickValue);
          var endPoint = this.getSidePoint(point, subTickLine.length);
          subTickLineItems.push({
            startPoint: point,
            endPoint: endPoint,
            tickValue: tickValue,
            id: "sub-" + pre.id + "-" + j
          });
        }
      }
    }

    return subTickLineItems;
  };

  AxisBase.prototype.getTickLineAttrs = function (tickItem, type) {
    var tickLineStyle = this.get(type).style;
    var startPoint = tickItem.startPoint,
        endPoint = tickItem.endPoint;
    var attrs = Object(esm["mix"])({
      x1: startPoint.x,
      y1: startPoint.y,
      x2: endPoint.x,
      y2: endPoint.y
    }, tickLineStyle);
    return attrs;
  }; // 绘制坐标轴刻度线


  AxisBase.prototype.drawTick = function (tickItem, tickLineGroup, type) {
    this.addShape(tickLineGroup, {
      type: 'line',
      id: this.getElementId(tickItem.id),
      name: "axis-" + type,
      attrs: this.getTickLineAttrs(tickItem, type)
    });
  }; // 绘制坐标轴刻度线，包括子刻度线


  AxisBase.prototype.drawTickLines = function (group) {
    var _this = this;

    var ticks = this.get('ticks');
    var subTickLine = this.get('subTickLine');
    var tickLineItems = this.getTickLineItems(ticks);
    var tickLineGroup = this.addGroup(group, {
      name: 'axis-tickline-group',
      id: this.getElementId('tickline-group')
    });
    var tickCfg = this.get('tickLine');
    Object(esm["each"])(tickLineItems, function (item) {
      if (tickCfg.displayWithLabel) {
        // 如果跟随 label 显示，则检测是否存在对应的 label
        var labelId = _this.getElementId("label-" + item.tickId);

        if (group.findById(labelId)) {
          _this.drawTick(item, tickLineGroup, 'tickLine');
        }
      } else {
        _this.drawTick(item, tickLineGroup, 'tickLine');
      }
    });

    if (subTickLine) {
      var subTickLineItems = this.getSubTickLineItems(tickLineItems);
      Object(esm["each"])(subTickLineItems, function (item) {
        _this.drawTick(item, tickLineGroup, 'subTickLine');
      });
    }
  }; // 预处理 ticks 确定位置和补充 id


  AxisBase.prototype.processTicks = function () {
    var _this = this;

    var ticks = this.get('ticks');
    Object(esm["each"])(ticks, function (tick) {
      tick.point = _this.getTickPoint(tick.value); // 补充 tick 的 id，为动画和更新做准备

      if (Object(esm["isNil"])(tick.id)) {
        // 默认使用 tick.name 作为id
        tick.id = tick.name;
      }
    });
  }; // 绘制 ticks 包括文本和 tickLine


  AxisBase.prototype.drawTicks = function (group) {
    var _this = this;

    this.processTicks();

    if (this.get('label')) {
      this.drawLabels(group);
    }

    if (this.get('tickLine')) {
      this.drawTickLines(group);
    }

    var ticks = this.get('ticks');
    Object(esm["each"])(ticks, function (tick) {
      _this.applyTickStates(tick, group);
    });
  }; // 获取 label 的配置项


  AxisBase.prototype.getLabelAttrs = function (tick, index) {
    var labelCfg = this.get('label');
    var offset = labelCfg.offset,
        style = labelCfg.style,
        rotate = labelCfg.rotate,
        formatter = labelCfg.formatter;
    var point = this.getSidePoint(tick.point, offset);
    var vector = this.getSideVector(offset, point);
    var text = formatter ? formatter(tick.name, tick, index) : tick.name;
    var attrs = Object(esm["mix"])({
      x: point.x,
      y: point.y,
      text: text,
      textAlign: this.getTextAnchor(vector)
    }, style);

    if (rotate) {
      attrs.matrix = getMatrixByAngle(point, rotate);
    }

    return attrs;
  }; // 绘制文本


  AxisBase.prototype.drawLabels = function (group) {
    var _this = this;

    var ticks = this.get('ticks');
    var labelGroup = this.addGroup(group, {
      name: 'axis-label-group',
      id: this.getElementId('label-group')
    });
    Object(esm["each"])(ticks, function (tick, index) {
      _this.addShape(labelGroup, {
        type: 'text',
        name: 'axis-label',
        id: _this.getElementId("label-" + tick.id),
        attrs: _this.getLabelAttrs(tick, index),
        delegateObject: {
          tick: tick,
          item: tick,
          index: index
        }
      });
    });
    this.processOverlap(labelGroup);
  }; // 标题的属性


  AxisBase.prototype.getTitleAttrs = function () {
    var titleCfg = this.get('title');
    var style = titleCfg.style,
        position = titleCfg.position,
        offset = titleCfg.offset,
        _a = titleCfg.spacing,
        spacing = _a === void 0 ? 0 : _a,
        autoRotate = titleCfg.autoRotate;
    var titleHeight = style.fontSize;
    var percent = 0.5;

    if (position === 'start') {
      percent = 0;
    } else if (position === 'end') {
      percent = 1;
    }

    var point = this.getTickPoint(percent); // 标题对应的坐标轴上的点
    // 如果没有指定 titleOffset 也没有渲染 label，这里需要自动计算 offset

    var titlePoint = this.getSidePoint(point, offset || spacing + titleHeight / 2); // 标题的点

    var attrs = Object(esm["mix"])({
      x: titlePoint.x,
      y: titlePoint.y,
      text: titleCfg.text
    }, style);
    var rotate = titleCfg.rotate; // rotate 是角度值

    var angle = rotate;

    if (Object(esm["isNil"])(rotate) && autoRotate) {
      // 用户没有设定旋转角度，同时设置自动旋转
      var vector = this.getAxisVector(point);
      var v1 = [1, 0]; // 水平方向的向量

      angle = matrix_util_esm["a" /* ext */].angleTo(vector, v1, true);
    }

    if (angle) {
      var matrix = getMatrixByAngle(titlePoint, angle);
      attrs.matrix = matrix;
    }

    return attrs;
  }; // 绘制标题


  AxisBase.prototype.drawTitle = function (group) {
    this.addShape(group, {
      type: 'text',
      id: this.getElementId('title'),
      name: 'axis-title',
      attrs: this.getTitleAttrs()
    });
  };

  AxisBase.prototype.applyTickStates = function (tick, group) {
    var states = this.getItemStates(tick);

    if (states.length) {
      var tickStates = this.get('tickStates'); // 分别更新 label 和 tickLine

      var labelId = this.getElementId("label-" + tick.id);
      var labelShape = group.findById(labelId);

      if (labelShape) {
        var labelStateStyle = getStatesStyle(tick, 'label', tickStates);
        labelStateStyle && labelShape.attr(labelStateStyle);
      }

      var tickLineId = this.getElementId("tickline-" + tick.id);
      var tickLineShape = group.findById(tickLineId);

      if (tickLineShape) {
        var tickLineStateStyle = getStatesStyle(tick, 'tickLine', tickStates);
        tickLineStateStyle && tickLineShape.attr(tickLineStateStyle);
      }
    }
  };

  AxisBase.prototype.updateTickStates = function (tick) {
    var states = this.getItemStates(tick);
    var tickStates = this.get('tickStates');
    var labelCfg = this.get('label');
    var labelShape = this.getElementByLocalId("label-" + tick.id);
    var tickLineCfg = this.get('tickLine');
    var tickLineShape = this.getElementByLocalId("tickline-" + tick.id);

    if (states.length) {
      if (labelShape) {
        var labelStateStyle = getStatesStyle(tick, 'label', tickStates);
        labelStateStyle && labelShape.attr(labelStateStyle);
      }

      if (tickLineShape) {
        var tickLineStateStyle = getStatesStyle(tick, 'tickLine', tickStates);
        tickLineStateStyle && tickLineShape.attr(tickLineStateStyle);
      }
    } else {
      if (labelShape) {
        labelShape.attr(labelCfg.style);
      }

      if (tickLineShape) {
        tickLineShape.attr(tickLineCfg.style);
      }
    }
  };

  return AxisBase;
}(group_component);

/* harmony default export */ var axis_base = (base_AxisBase);
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/axis/overlap/auto-ellipsis.js

var ELLIPSIS_CODE = "\u2026";
var ELLIPSIS_CODE_LENGTH = 2; // 省略号的长度

function strLen(str) {
  var len = 0;

  for (var i = 0; i < str.length; i++) {
    len += charAtLength(str, i);
  }

  return len;
}

function charAtLength(str, i) {
  if (str.charCodeAt(i) > 0 && str.charCodeAt(i) < 128) {
    return 1;
  } else {
    return 2;
  }
}

function getLabelLength(isVertical, label) {
  var bbox = label.getCanvasBBox();
  return isVertical ? bbox.width : bbox.height;
}

function ellipsisLabel(isVertical, label, limitLength, position) {
  var text = label.attr('text');
  var labelLength = getLabelLength(isVertical, label);
  var codeLength = strLen(text);
  var ellipsised = false;

  if (limitLength < labelLength) {
    var reseveLength = Math.floor(limitLength / labelLength * codeLength) - ELLIPSIS_CODE_LENGTH; // 计算出来的应该保存的长度

    var newText = void 0;

    if (reseveLength >= 0) {
      newText = ellipsisString(text, reseveLength, position);
    } else {
      newText = ELLIPSIS_CODE;
    }

    if (newText) {
      label.attr('text', newText);
      ellipsised = true;
    }
  }

  if (ellipsised) {
    label.set('tip', text);
  } else {
    label.set('tip', null);
  }

  return ellipsised;
}

function ellipsisString(str, reseveLength, position) {
  var count = str.length;
  var rst = '';

  if (position === 'tail') {
    for (var i = 0, index = 0; i < reseveLength;) {
      var charLength = charAtLength(str, index);

      if (i + charLength <= reseveLength) {
        rst += str[index];
        i += charAtLength(str, index);
        index++;
      } else {
        break;
      }
    }

    rst += ELLIPSIS_CODE;
  } else if (position === 'head') {
    for (var i = 0, index = count - 1; i < reseveLength;) {
      var charLength = charAtLength(str, index);

      if (i + charLength <= reseveLength) {
        rst += str[index];
        i += charAtLength(str, index);
        index--;
      } else {
        break;
      }
    }

    rst = ELLIPSIS_CODE + rst;
  } else {
    var startStr = '';
    var endStr = '';

    for (var i = 0, startIndex = 0, endIndex = count - 1; i < reseveLength;) {
      var startCodeLen = charAtLength(str, startIndex);
      var hasAdd = false; // 设置标志位，防止头尾都没有附加字符

      if (startCodeLen + i <= reseveLength) {
        startStr += str[startIndex];
        startIndex++;
        i += startCodeLen;
        hasAdd = true;
      }

      var endCodeLen = charAtLength(str, endIndex);

      if (endCodeLen + i <= reseveLength) {
        endStr = str[endIndex] + endStr;
        i += endCodeLen;
        endIndex--;
        hasAdd = true;
      }

      if (!hasAdd) {
        // 如果都没有增加字符，说明都不适合则中断
        break;
      }
    }

    rst = startStr + ELLIPSIS_CODE + endStr;
  }

  return rst;
}

function ellipseLabels(isVertical, labelGroup, limitLength, position) {
  var children = labelGroup.getChildren();
  var ellipsised = false;
  Object(esm["each"])(children, function (label) {
    var rst = ellipsisLabel(isVertical, label, limitLength, position);
    ellipsised = ellipsised || rst;
  });
  return ellipsised;
}

function getDefault() {
  return ellipsisTail;
}
function ellipsisHead(isVertical, labelGroup, limitLength) {
  return ellipseLabels(isVertical, labelGroup, limitLength, 'head');
}
function ellipsisTail(isVertical, labelGroup, limitLength) {
  return ellipseLabels(isVertical, labelGroup, limitLength, 'tail');
}
function ellipsisMiddle(isVertical, labelGroup, limitLength) {
  return ellipseLabels(isVertical, labelGroup, limitLength, 'middle');
}
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/util/label.js

function getMaxLabelWidth(labels) {
  var max = 0;
  Object(esm["each"])(labels, function (label) {
    var bbox = label.getBBox();
    var width = bbox.width;

    if (max < width) {
      max = width;
    }
  });
  return max;
}
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/axis/overlap/auto-hide.js
 // 文本是否旋转

function isRotate(label) {
  var matrix = label.attr('matrix');
  return matrix && matrix[0] !== 1; // 仅在这个场景下判定
} // autohide 不再考虑超出限制
// function isOutLimit(isVertical: boolean, label: IElement, limitLength: number) {
//   if (!limitLength) {
//     // 如果没限制 limitLength 则直接返回 false
//     return false;
//   }
//   const canvasBBox = label.getCanvasBBox();
//   let isOut = false;
//   if (isVertical) {
//     isOut = canvasBBox.width > limitLength;
//   } else {
//     isOut = canvasBBox.height > limitLength;
//   }
//   return isOut;
// }
// 是否重叠


function auto_hide_isOverlap(isVertical, rotated, preBox, curBox, reversed) {
  if (reversed === void 0) {
    reversed = false;
  }

  var overlap = false;

  if (isVertical) {
    // 垂直时检测边高
    overlap = Math.abs(preBox.y - curBox.y) < preBox.height;
  } else {
    // 水平时检测
    if (rotated) {
      // 如果旋转了，则检测两者 x 之间的间距是否小于前一个的高度
      var height = reversed ? curBox.height : preBox.height;
      overlap = Math.abs(preBox.x - curBox.x) < height;
    } else {
      // 检测两者是否 x 方向重合
      var width = reversed ? curBox.width : preBox.width;
      overlap = Math.abs(preBox.x - curBox.x) < width;
    }
  }

  return overlap;
} // 保留第一个或者最后一个


function reserveOne(isVertical, labelsGroup, reversed) {
  var labels = labelsGroup.getChildren().slice(); // 复制数组

  if (!labels.length) {
    return false;
  }

  var hasHide = false;

  if (reversed) {
    // 翻转
    labels.reverse();
  }

  var count = labels.length;
  var first = labels[0];
  var rotated = isRotate(first);
  var preBox = first.getBBox();

  for (var i = 1; i < count; i++) {
    var label = labels[i];
    var curBBox = label.getBBox(); // 不再考虑超出限制，而仅仅根据是否重叠进行隐藏 isOutLimit(isVertical, label, limitLength) ||

    var isHide = auto_hide_isOverlap(isVertical, rotated, preBox, curBBox, reversed);

    if (isHide) {
      label.hide();
      hasHide = true;
    } else {
      preBox = curBBox;
    }
  }

  return hasHide;
}

function auto_hide_getDefault() {
  return equidistance;
}
/**
 * 保证首个 label 可见，即使超过 limitLength 也不隐藏
 * @param {boolean} isVertical  是否垂直
 * @param {IGroup}  labelsGroup label 的分组
 */

function reserveFirst(isVertical, labelsGroup) {
  return reserveOne(isVertical, labelsGroup, false);
}
/**
 * 保证最后一个 label 可见，即使超过 limitLength 也不隐藏
 * @param {boolean} isVertical  是否垂直
 * @param {IGroup}  labelsGroup label 的分组
 */

function reserveLast(isVertical, labelsGroup) {
  return reserveOne(isVertical, labelsGroup, true);
}
/**
 * 保证第一个最后一个 label 可见，即使超过 limitLength 也不隐藏
 * @param {boolean} isVertical  是否垂直
 * @param {IGroup}  labelsGroup label 的分组
 */

function reserveBoth(isVertical, labelsGroup) {
  var labels = labelsGroup.getChildren().slice(); // 复制数组

  if (labels.length <= 2) {
    // 如果数量小于或等于 2 则直接返回
    return false;
  }

  var hasHide = false;
  var count = labels.length;
  var first = labels[0];
  var last = labels[count - 1];
  var rotated = isRotate(first);
  var preBox = first.getBBox();
  var preLabel = first; // 按照先保存第一个的逻辑循环一遍，最后一个不参与循环

  for (var i = 1; i < count - 1; i++) {
    var label = labels[i];
    var curBBox = label.getBBox(); // 废弃 isOutLimit(isVertical, label, limitLength) ||

    var isHide = auto_hide_isOverlap(isVertical, rotated, preBox, curBBox);

    if (isHide) {
      label.hide();
      hasHide = true;
    } else {
      preBox = curBBox;
      preLabel = label;
    }
  }

  var lastBBox = last.getBBox();
  var overlap = auto_hide_isOverlap(isVertical, rotated, preBox, lastBBox); // 不检测超出 limit

  if (overlap) {
    // 发生冲突，则隐藏前一个保留后一个
    preLabel.hide();
    hasHide = true;
  }

  return hasHide;
}
/**
 * 保证 label 均匀显示，主要解决文本层叠的问题，对于 limitLength 不处理
 * @param {boolean} isVertical  是否垂直
 * @param {IGroup}  labelsGroup label 的分组
 */

function equidistance(isVertical, labelsGroup) {
  var labels = labelsGroup.getChildren().slice(); // 复制数组

  if (labels.length < 2) {
    // 如果数量小于 2 则直接返回，等于 2 时可能也会重合
    return false;
  }

  var hasHide = false;
  var first = labels[0];
  var firstBBox = first.getBBox();
  var second = labels[1];
  var rotated = isRotate(first);
  var count = labels.length;
  var interval = 0; // 不重叠的坐标文本间距个数

  if (isVertical) {
    // 垂直的坐标轴计算垂直方向的间距
    var distance = Math.abs(second.attr('y') - first.attr('y'));
    interval = firstBBox.height / distance;
  } else {
    // 水平坐标轴
    if (rotated) {
      var distance = Math.abs(second.attr('x') - first.attr('x'));
      interval = firstBBox.width / distance;
    } else {
      var maxWidth = getMaxLabelWidth(labels);
      var distance = Math.abs(second.attr('x') - first.attr('x'));
      interval = maxWidth / distance;
    }
  } // interval > 1 时需要对 label 进行隐藏


  if (interval > 1) {
    interval = Math.ceil(interval);

    for (var i = 0; i < count; i++) {
      if (i % interval !== 0) {
        // 仅保留被整除的 label
        labels[i].hide();
        hasHide = true;
      }
    }
  }

  return hasHide;
}
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/axis/overlap/auto-rotate.js



 // 统一设置文本的角度

function setLabelsAngle(labels, angle) {
  Object(esm["each"])(labels, function (label) {
    var x = label.attr('x');
    var y = label.attr('y');
    var matrix = getMatrixByAngle({
      x: x,
      y: y
    }, angle);
    label.attr('matrix', matrix);
  });
} // 旋转文本


function labelRotate(isVertical, labelsGroup, limitLength, getAngle) {
  var labels = labelsGroup.getChildren();

  if (!labels.length) {
    return false;
  }

  if (!isVertical && labels.length < 2) {
    // 水平时至少有两个时才旋转
    return false;
  }

  var maxWidth = getMaxLabelWidth(labels);
  var isOverlap = false;

  if (isVertical) {
    // limitLength 为 0 或者 null 时不生效
    isOverlap = !!limitLength && maxWidth > limitLength;
  } else {
    // 同 limitLength 无关
    var tickWidth = Math.abs(labels[1].attr('x') - labels[0].attr('x'));
    isOverlap = maxWidth > tickWidth;
  }

  if (isOverlap) {
    var angle = getAngle(limitLength, maxWidth);
    setLabelsAngle(labels, angle);
  }

  return isOverlap;
}

function auto_rotate_getDefault() {
  return fixedAngle;
}
/**
 * 固定角度旋转文本
 * @param  {boolean} isVertical  是否垂直方向
 * @param  {IGroup}  labelsGroup 文本的 group
 * @param  {number}  limitLength 限定长度
 * @return {boolean}             是否发生了旋转
 */

function fixedAngle(isVertical, labelsGroup, limitLength) {
  return labelRotate(isVertical, labelsGroup, limitLength, function () {
    return isVertical ? util_theme.verticalAxisRotate : util_theme.horizontalAxisRotate;
  });
}
/**
 * 非固定角度旋转文本
 * @param  {boolean} isVertical  是否垂直方向
 * @param  {IGroup}  labelsGroup 文本的 group
 * @param  {number}  limitLength 限定长度
 * @return {boolean}             是否发生了旋转
 */

function unfixedAngle(isVertical, labelsGroup, limitLength) {
  return labelRotate(isVertical, labelsGroup, limitLength, function (length, maxWidth) {
    if (!length) {
      // 如果没有设置 limitLength，则使用固定的角度旋转
      return isVertical ? util_theme.verticalAxisRotate : util_theme.horizontalAxisRotate;
    }

    if (isVertical) {
      // 垂直时不需要判定 limitLength > maxWidth ，因为此时不会 overlap
      return -Math.acos(length / maxWidth);
    } else {
      var angle = 0;

      if (length > maxWidth) {
        // 需要判定，asin 的参数 -1， 1
        angle = Math.PI / 4;
      } else {
        angle = Math.asin(length / maxWidth);

        if (angle > Math.PI / 4) {
          // 大于 Math.PI / 4 时没意义
          angle = Math.PI / 4;
        }
      }

      return angle;
    }
  });
}
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/axis/overlap/index.js




// CONCATENATED MODULE: ../node_modules/@antv/component/esm/axis/line.js






var line_Line =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Line, _super);

  function Line() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Line.prototype.getDefaultCfg = function () {
    var cfg = _super.prototype.getDefaultCfg.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, cfg), {
      type: 'line',
      locationType: 'region',

      /**
       * 起始点, x, y
       * @type {object}
       */
      start: null,

      /**
       * 结束点, x, y
       * @type {object}
       */
      end: null
    });
  }; // 获取坐标轴线的 path


  Line.prototype.getLinePath = function () {
    var start = this.get('start');
    var end = this.get('end');
    var path = [];
    path.push(['M', start.x, start.y]);
    path.push(['L', end.x, end.y]);
    return path;
  }; // 重新计算 layout bbox，考虑到 line 不显示


  Line.prototype.getInnerLayoutBBox = function () {
    var start = this.get('start');
    var end = this.get('end');

    var bbox = _super.prototype.getInnerLayoutBBox.call(this);

    var minX = Math.min(start.x, end.x, bbox.x);
    var minY = Math.min(start.y, end.y, bbox.y);
    var maxX = Math.max(start.x, end.x, bbox.maxX);
    var maxY = Math.max(start.y, end.y, bbox.maxY);
    return {
      x: minX,
      y: minY,
      minX: minX,
      minY: minY,
      maxX: maxX,
      maxY: maxY,
      width: maxX - minX,
      height: maxY - minY
    };
  };

  Line.prototype.isVertical = function () {
    var start = this.get('start');
    var end = this.get('end');
    return Object(esm["isNumberEqual"])(start.x, end.x);
  };

  Line.prototype.isHorizontal = function () {
    var start = this.get('start');
    var end = this.get('end');
    return Object(esm["isNumberEqual"])(start.y, end.y);
  };

  Line.prototype.getTickPoint = function (tickValue) {
    var self = this;
    var start = self.get('start');
    var end = self.get('end');
    var regionX = end.x - start.x;
    var regionY = end.y - start.y;
    return {
      x: start.x + regionX * tickValue,
      y: start.y + regionY * tickValue
    };
  }; // 直线坐标轴下任一点的向量方向都相同


  Line.prototype.getSideVector = function (offset) {
    var axisVector = this.getAxisVector();
    var normal = matrix_util_esm["c" /* vec2 */].normalize([0, 0], axisVector);
    var factor = this.get('verticalFactor');
    var verticalVector = [normal[1], normal[0] * -1]; // 垂直方向，逆时针方向

    return matrix_util_esm["c" /* vec2 */].scale([0, 0], verticalVector, offset * factor);
  }; // 获取坐标轴的向量


  Line.prototype.getAxisVector = function () {
    var start = this.get('start');
    var end = this.get('end');
    return [end.x - start.x, end.y - start.y];
  };

  Line.prototype.processOverlap = function (labelGroup) {
    var _this = this;

    var isVertical = this.isVertical();
    var isHorizontal = this.isHorizontal(); // 非垂直，或者非水平时不处理遮挡问题

    if (!isVertical && !isHorizontal) {
      return;
    }

    var labelCfg = this.get('label');
    var titleCfg = this.get('title');
    var verticalLimitLength = this.get('verticalLimitLength');
    var labelOffset = labelCfg.offset;
    var limitLength = verticalLimitLength;
    var titleHeight = 0;
    var titleSpacing = 0;

    if (titleCfg) {
      titleHeight = titleCfg.style.fontSize;
      titleSpacing = titleCfg.spacing;
    }

    if (limitLength) {
      limitLength = limitLength - labelOffset - titleSpacing - titleHeight;
    }

    var overlapOrder = this.get('overlapOrder');
    Object(esm["each"])(overlapOrder, function (name) {
      if (labelCfg[name]) {
        _this.autoProcessOverlap(name, labelCfg[name], labelGroup, limitLength);
      }
    });

    if (titleCfg) {
      // 调整 title 的 offset
      var bbox = labelGroup.getBBox();
      var length_1 = isVertical ? bbox.width : bbox.height;

      if (Object(esm["isNil"])(titleCfg.offset)) {
        // 如果用户没有设置 offset，则自动计算
        titleCfg.offset = labelOffset + length_1 + titleSpacing + titleHeight / 2;
      }
    }
  };

  Line.prototype.autoProcessOverlap = function (name, value, labelGroup, limitLength) {
    var _this = this;

    var isVertical = this.isVertical();
    var hasAdjusted = false;
    var util = overlap_namespaceObject[name];

    if (value === true) {
      // 默认使用固定角度的旋转方案
      hasAdjusted = util.getDefault()(isVertical, labelGroup, limitLength);
    } else if (Object(esm["isFunction"])(value)) {
      // 用户可以传入回调函数
      hasAdjusted = value(isVertical, labelGroup, limitLength);
    } else if (util[value]) {
      // 按照名称执行旋转函数
      hasAdjusted = util[value](isVertical, labelGroup, limitLength);
    }

    if (name === 'autoRotate') {
      // 文本旋转后，文本的对齐方式可能就不合适了
      if (hasAdjusted) {
        var labels = labelGroup.getChildren();
        var verticalFactor_1 = this.get('verticalFactor');
        Object(esm["each"])(labels, function (label) {
          var textAlign = label.attr('textAlign');

          if (textAlign === 'center') {
            // 居中的文本需要调整旋转度
            var newAlign = verticalFactor_1 > 0 ? 'end' : 'start';
            label.attr('textAlign', newAlign);
          }
        });
      }
    } else if (name === 'autoHide') {
      var children = labelGroup.getChildren().slice(0); // 复制数组，删除时不会出错

      Object(esm["each"])(children, function (label) {
        if (!label.get('visible')) {
          if (_this.get('isRegister')) {
            // 已经注册过了，则删除
            _this.unregisterElement(label);
          }

          label.remove(); // 防止 label 数量太多，所以统一删除
        }
      });
    }
  };

  return Line;
}(axis_base);

/* harmony default export */ var axis_line = (line_Line);
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/axis/circle.js




var circle_Circle =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Circle, _super);

  function Circle() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Circle.prototype.getDefaultCfg = function () {
    var cfg = _super.prototype.getDefaultCfg.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, cfg), {
      type: 'circle',
      locationType: 'circle',
      center: null,
      radius: null,
      startAngle: -Math.PI / 2,
      endAngle: Math.PI * 3 / 2
    });
  };

  Circle.prototype.getLinePath = function () {
    var center = this.get('center');
    var x = center.x;
    var y = center.y;
    var rx = this.get('radius');
    var ry = rx;
    var startAngle = this.get('startAngle');
    var endAngle = this.get('endAngle');
    var path = [];

    if (Math.abs(endAngle - startAngle) === Math.PI * 2) {
      path = [['M', x, y - ry], ['A', rx, ry, 0, 1, 1, x, y + ry], ['A', rx, ry, 0, 1, 1, x, y - ry], ['Z']];
    } else {
      var startPoint = this.getCirclePoint(startAngle);
      var endPoint = this.getCirclePoint(endAngle);
      var large = Math.abs(endAngle - startAngle) > Math.PI ? 1 : 0;
      var sweep = startAngle > endAngle ? 0 : 1;
      path = [['M', x, y], ['L', startPoint.x, startPoint.y], ['A', rx, ry, 0, large, sweep, endPoint.x, endPoint.y], ['L', x, y]];
    }

    return path;
  };

  Circle.prototype.getTickPoint = function (tickValue) {
    var startAngle = this.get('startAngle');
    var endAngle = this.get('endAngle');
    var angle = startAngle + (endAngle - startAngle) * tickValue;
    return this.getCirclePoint(angle);
  }; // 获取垂直于坐标轴的向量


  Circle.prototype.getSideVector = function (offset, point) {
    var center = this.get('center');
    var vector = [point.x - center.x, point.y - center.y];
    var factor = this.get('verticalFactor');
    var vecLen = matrix_util_esm["c" /* vec2 */].length(vector);
    matrix_util_esm["c" /* vec2 */].scale(vector, vector, factor * offset / vecLen);
    return vector;
  }; // 获取沿坐标轴方向的向量


  Circle.prototype.getAxisVector = function (point) {
    var center = this.get('center');
    var vector = [point.x - center.x, point.y - center.y];
    return [vector[1], -1 * vector[0]]; // 获取顺时针方向的向量
  }; // 根据圆心和半径获取点


  Circle.prototype.getCirclePoint = function (angle, radius) {
    var center = this.get('center');
    radius = radius || this.get('radius');
    return {
      x: center.x + Math.cos(angle) * radius,
      y: center.y + Math.sin(angle) * radius
    };
  };

  return Circle;
}(axis_base);

/* harmony default export */ var circle = (circle_Circle);
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/axis/index.js



// CONCATENATED MODULE: ../node_modules/@antv/component/esm/crosshair/base.js







var base_CrosshairBase =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(CrosshairBase, _super);

  function CrosshairBase() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CrosshairBase.prototype.getDefaultCfg = function () {
    var cfg = _super.prototype.getDefaultCfg.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, cfg), {
      name: 'crosshair',
      type: 'base',
      line: {},
      text: null,
      textBackground: {},
      capture: false,
      defaultCfg: {
        line: {
          style: {
            lineWidth: 1,
            stroke: util_theme.lineColor
          }
        },
        text: {
          position: 'start',
          offset: 10,
          autoRotate: false,
          content: null,
          style: {
            fill: util_theme.textColor,
            textAlign: 'center',
            textBaseline: 'middle',
            fontFamily: util_theme.fontFamily
          }
        },
        textBackground: {
          padding: 5,
          style: {
            stroke: util_theme.lineColor
          }
        }
      }
    });
  };

  CrosshairBase.prototype.renderInner = function (group) {
    if (this.get('line')) {
      this.renderLine(group);
    }

    if (this.get('text')) {
      this.renderText(group);
      this.renderBackground(group);
    }
  };

  CrosshairBase.prototype.renderText = function (group) {
    var text = this.get('text');
    var style = text.style,
        autoRotate = text.autoRotate,
        content = text.content;

    if (!Object(esm["isNil"])(content)) {
      var textPoint = this.getTextPoint();
      var matrix = null;

      if (autoRotate) {
        var angle = this.getRotateAngle();
        matrix = getMatrixByAngle(textPoint, angle);
      }

      this.addShape(group, {
        type: 'text',
        name: 'crosshair-text',
        id: this.getElementId('text'),
        attrs: Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, textPoint), {
          text: content,
          matrix: matrix
        }), style)
      });
    }
  };

  CrosshairBase.prototype.renderLine = function (group) {
    var path = this.getLinePath();
    var line = this.get('line');
    var style = line.style;
    this.addShape(group, {
      type: 'path',
      name: 'crosshair-line',
      id: this.getElementId('line'),
      attrs: Object(tslib_es6["__assign"])({
        path: path
      }, style)
    });
  }; // 绘制文本的背景


  CrosshairBase.prototype.renderBackground = function (group) {
    var textId = this.getElementId('text');
    var textShape = group.findById(textId); // 查找文本

    var textBackground = this.get('textBackground');

    if (textBackground && textShape) {
      var textBBox = textShape.getBBox();
      var padding = formatPadding(textBackground.padding); // 用户传入的 padding 格式不定

      var style = textBackground.style;
      var backgroundShape = this.addShape(group, {
        type: 'rect',
        name: 'crosshair-text-background',
        id: this.getElementId('text-background'),
        attrs: Object(tslib_es6["__assign"])({
          x: textBBox.x - padding[3],
          y: textBBox.y - padding[0],
          width: textBBox.width + padding[1] + padding[3],
          height: textBBox.height + padding[0] + padding[2],
          matrix: textShape.attr('matrix')
        }, style)
      });
      backgroundShape.toBack();
    }
  };

  return CrosshairBase;
}(group_component);

/* harmony default export */ var crosshair_base = (base_CrosshairBase);
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/crosshair/line.js




var line_LineCrosshair =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(LineCrosshair, _super);

  function LineCrosshair() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  LineCrosshair.prototype.getDefaultCfg = function () {
    var cfg = _super.prototype.getDefaultCfg.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, cfg), {
      type: 'line',
      locationType: 'region',
      start: null,
      end: null
    });
  }; // 直线的文本需要同直线垂直


  LineCrosshair.prototype.getRotateAngle = function () {
    var _a = this.getLocation(),
        start = _a.start,
        end = _a.end;

    var position = this.get('text').position;
    var angle = Math.atan2(end.y - start.y, end.x - start.x);
    var tangentAngle = position === 'start' ? angle - Math.PI / 2 : angle + Math.PI / 2;
    return tangentAngle;
  };

  LineCrosshair.prototype.getTextPoint = function () {
    var _a = this.getLocation(),
        start = _a.start,
        end = _a.end;

    var _b = this.get('text'),
        position = _b.position,
        offset = _b.offset;

    return getTextPoint(start, end, position, offset);
  };

  LineCrosshair.prototype.getLinePath = function () {
    var _a = this.getLocation(),
        start = _a.start,
        end = _a.end;

    return [['M', start.x, start.y], ['L', end.x, end.y]];
  };

  return LineCrosshair;
}(crosshair_base);

/* harmony default export */ var crosshair_line = (line_LineCrosshair);
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/crosshair/circle.js




var circle_LineCrosshair =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(LineCrosshair, _super);

  function LineCrosshair() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  LineCrosshair.prototype.getDefaultCfg = function () {
    var cfg = _super.prototype.getDefaultCfg.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, cfg), {
      type: 'circle',
      locationType: 'circle',
      center: null,
      radius: 100,
      startAngle: -Math.PI / 2,
      endAngle: Math.PI * 3 / 2
    });
  };

  LineCrosshair.prototype.getRotateAngle = function () {
    var _a = this.getLocation(),
        startAngle = _a.startAngle,
        endAngle = _a.endAngle;

    var position = this.get('text').position;
    var tangentAngle = position === 'start' ? startAngle + Math.PI / 2 : endAngle - Math.PI / 2;
    return tangentAngle;
  };

  LineCrosshair.prototype.getTextPoint = function () {
    var text = this.get('text');
    var position = text.position,
        offset = text.offset;

    var _a = this.getLocation(),
        center = _a.center,
        radius = _a.radius,
        startAngle = _a.startAngle,
        endAngle = _a.endAngle;

    var angle = position === 'start' ? startAngle : endAngle;
    var tangentAngle = this.getRotateAngle() - Math.PI;
    var point = getCirclePoint(center, radius, angle); // 这个地方其实应该求切线向量然后在乘以 offset，但是太啰嗦了，直接给出结果
    // const tangent = [Math.cos(tangentAngle), Math.sin(tangentAngle)];
    // const offsetVector = vec2.scale([], tangent, offset);

    var offsetX = Math.cos(tangentAngle) * offset;
    var offsetY = Math.sin(tangentAngle) * offset;
    return {
      x: point.x + offsetX,
      y: point.y + offsetY
    };
  };

  LineCrosshair.prototype.getLinePath = function () {
    var _a = this.getLocation(),
        center = _a.center,
        radius = _a.radius,
        startAngle = _a.startAngle,
        endAngle = _a.endAngle;

    var path = null;

    if (endAngle - startAngle === Math.PI * 2) {
      // 整圆
      var x = center.x,
          y = center.y;
      path = [['M', x, y - radius], ['A', radius, radius, 0, 1, 1, x, y + radius], ['A', radius, radius, 0, 1, 1, x, y - radius], ['Z']];
    } else {
      var startPoint = getCirclePoint(center, radius, startAngle);
      var endPoint = getCirclePoint(center, radius, endAngle);
      var large = Math.abs(endAngle - startAngle) > Math.PI ? 1 : 0;
      var sweep = startAngle > endAngle ? 0 : 1;
      path = [['M', startPoint.x, startPoint.y], ['A', radius, radius, 0, large, sweep, endPoint.x, endPoint.y]];
    }

    return path;
  };

  return LineCrosshair;
}(crosshair_base);

/* harmony default export */ var crosshair_circle = (circle_LineCrosshair);
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/abstract/html-component.js






var html_component_HtmlComponent =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(HtmlComponent, _super);

  function HtmlComponent() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  HtmlComponent.prototype.getDefaultCfg = function () {
    var cfg = _super.prototype.getDefaultCfg.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, cfg), {
      container: null,
      containerTpl: '<div></div>',
      updateAutoRender: true,
      containerClassName: '',
      parent: null
    });
    return cfg;
  };

  HtmlComponent.prototype.getContainer = function () {
    return this.get('container');
  };
  /**
   * 显示组件
   */


  HtmlComponent.prototype.show = function () {
    var container = this.get('container');
    container.style.display = '';
    this.set('visible', true);
  };
  /**
   * 隐藏组件
   */


  HtmlComponent.prototype.hide = function () {
    var container = this.get('container');
    container.style.display = 'none';
    this.set('visible', false);
  };
  /**
   * 是否允许捕捉事件
   * @param capture 事件捕捉
   */


  HtmlComponent.prototype.setCapture = function (capture) {
    var container = this.getContainer();
    var value = capture ? 'auto' : 'none';
    container.style.pointerEvents = value;
    this.set('capture', capture);
  };

  HtmlComponent.prototype.getBBox = function () {
    var container = this.getContainer();
    var x = parseFloat(container.style.left) || 0;
    var y = parseFloat(container.style.top) || 0;
    return createBBox(x, y, container.clientWidth, container.clientHeight);
  };

  HtmlComponent.prototype.clear = function () {
    var container = this.get('container');
    clearDom(container);
  };

  HtmlComponent.prototype.destroy = function () {
    this.removeEvent();
    this.removeDom();

    _super.prototype.destroy.call(this);
  };
  /**
   * 复写 init，主要是初始化 DOM 和事件
   */


  HtmlComponent.prototype.init = function () {
    _super.prototype.init.call(this);

    this.initContainer();
    this.initDom();
    this.resetStyles(); // 初始化样式

    this.applyStyles(); // 应用样式

    this.initEvent();
    this.initCapture();
    this.initVisible();
  };

  HtmlComponent.prototype.initCapture = function () {
    this.setCapture(this.get('capture'));
  };

  HtmlComponent.prototype.initVisible = function () {
    if (!this.get('visible')) {
      // 设置初始显示状态
      this.hide();
    } else {
      this.show();
    }
  };

  HtmlComponent.prototype.initDom = function () {};

  HtmlComponent.prototype.initContainer = function () {
    var container = this.get('container');

    if (Object(esm["isNil"])(container)) {
      // 未指定 container 则创建
      container = this.createDom();
      var parent_1 = this.get('parent');

      if (Object(esm["isString"])(parent_1)) {
        parent_1 = document.getElementById(parent_1);
        this.set('parent', parent_1);
      }

      parent_1.appendChild(container);
      this.set('container', container);
    } else if (Object(esm["isString"])(container)) {
      // 用户传入的 id, 作为 container
      container = document.getElementById(container);
      this.set('container', container);
    } // else container 是 DOM


    if (!this.get('parent')) {
      this.set('parent', container.parentNode);
    }
  }; // 样式需要进行合并，不能单纯的替换，否则使用非常不方便


  HtmlComponent.prototype.resetStyles = function () {
    var style = this.get('domStyles');
    var defaultStyles = this.get('defaultStyles');

    if (!style) {
      style = defaultStyles;
    } else {
      style = Object(esm["deepMix"])({}, defaultStyles, style);
    }

    this.set('domStyles', style);
  }; // 应用所有的样式


  HtmlComponent.prototype.applyStyles = function () {
    var domStyles = this.get('domStyles');

    if (!domStyles) {
      return;
    }

    var container = this.getContainer();
    this.applyChildrenStyles(container, domStyles);
    var containerClassName = this.get('containerClassName');

    if (containerClassName && hasClass(container, containerClassName)) {
      var containerCss = domStyles[containerClassName];
      modifyCSS(container, containerCss);
    }
  };

  HtmlComponent.prototype.applyChildrenStyles = function (element, styles) {
    Object(esm["each"])(styles, function (style, name) {
      var elements = element.getElementsByClassName(name);
      Object(esm["each"])(elements, function (el) {
        modifyCSS(el, style);
      });
    });
  }; // 应用到单个 DOM


  HtmlComponent.prototype.applyStyle = function (cssName, dom) {
    var domStyles = this.get('domStyles');
    modifyCSS(dom, domStyles[cssName]);
  };
  /**
   * @protected
   */


  HtmlComponent.prototype.createDom = function () {
    var containerTpl = this.get('containerTpl');
    return createDom(containerTpl);
  };
  /**
   * @protected
   * 初始化事件
   */


  HtmlComponent.prototype.initEvent = function () {};
  /**
   * @protected
   * 清理 DOM
   */


  HtmlComponent.prototype.removeDom = function () {
    var container = this.get('container');
    container && container.parentNode.removeChild(container);
  };
  /**
   * @protected
   * 清理事件
   */


  HtmlComponent.prototype.removeEvent = function () {};

  HtmlComponent.prototype.updateInner = function (cfg) {
    // 更新样式
    if (Object(esm["hasKey"])(cfg, 'domStyles')) {
      this.resetStyles();
      this.applyStyles();
    } // 只要属性发生变化，都调整一些位置


    this.resetPosition();
  };

  HtmlComponent.prototype.resetPosition = function () {};

  ;
  return HtmlComponent;
}(abstract_component);

/* harmony default export */ var html_component = (html_component_HtmlComponent);
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/crosshair/css-const.js
var CONTAINER_CLASS = 'g2-crosshair';
var CROSSHAIR_LINE = CONTAINER_CLASS + "-line";
var CROSSHAIR_TEXT = CONTAINER_CLASS + "-text";
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/crosshair/html-theme.js
var html_theme_a;

 // tooltip 相关 dom 的 css 类名


/* harmony default export */ var html_theme = (html_theme_a = {}, // css style for tooltip
html_theme_a["" + CONTAINER_CLASS] = {
  position: 'relative'
}, html_theme_a["" + CROSSHAIR_LINE] = {
  position: 'absolute',
  backgroundColor: 'rgba(0, 0, 0, 0.25)'
}, html_theme_a["" + CROSSHAIR_TEXT] = {
  position: 'absolute',
  color: util_theme.textColor,
  fontFamily: util_theme.fontFamily
}, html_theme_a);
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/crosshair/html.js








var html_HtmlCrosshair =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(HtmlCrosshair, _super);

  function HtmlCrosshair() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  HtmlCrosshair.prototype.getDefaultCfg = function () {
    var cfg = _super.prototype.getDefaultCfg.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, cfg), {
      name: 'crosshair',
      type: 'html',
      locationType: 'region',
      start: {
        x: 0,
        y: 0
      },
      end: {
        x: 0,
        y: 0
      },
      capture: false,
      text: null,
      containerTpl: "<div class=\"" + CONTAINER_CLASS + "\"></div>",
      crosshairTpl: "<div class=\"" + CROSSHAIR_LINE + "\"></div>",
      textTpl: "<span class=\"" + CROSSHAIR_TEXT + "\">{content}</span>",
      domStyles: null,
      containerClassName: CONTAINER_CLASS,
      defaultStyles: html_theme,
      defaultCfg: {
        text: {
          position: 'start',
          content: null,
          align: 'center',
          offset: 10
        }
      }
    });
  };

  HtmlCrosshair.prototype.render = function () {
    this.resetText();
    this.resetPosition();
  }; // 绘制 crosshair


  HtmlCrosshair.prototype.initCrossHair = function () {
    var container = this.getContainer();
    var crosshairTpl = this.get('crosshairTpl');
    var crosshairEl = createDom(crosshairTpl);
    container.appendChild(crosshairEl);
    this.applyStyle(CROSSHAIR_LINE, crosshairEl);
    this.set('crosshairEl', crosshairEl);
  }; // 获取文本的位置


  HtmlCrosshair.prototype.getTextPoint = function () {
    var _a = this.getLocation(),
        start = _a.start,
        end = _a.end;

    var _b = this.get('text'),
        position = _b.position,
        offset = _b.offset;

    return getTextPoint(start, end, position, offset);
  }; // 设置 text


  HtmlCrosshair.prototype.resetText = function () {
    var text = this.get('text');
    var textEl = this.get('textEl');

    if (text) {
      var content = text.content;

      if (!textEl) {
        var container = this.getContainer();
        var textTpl = Object(esm["substitute"])(this.get('textTpl'), text);
        textEl = createDom(textTpl);
        container.appendChild(textEl);
        this.applyStyle(CROSSHAIR_TEXT, textEl);
        this.set('textEl', textEl);
      }

      textEl.innerHTML = content;
    } else if (textEl) {
      textEl.remove();
    }
  }; // 是否垂直


  HtmlCrosshair.prototype.isVertical = function (start, end) {
    return start.x === end.x;
  }; // 重新调整位置


  HtmlCrosshair.prototype.resetPosition = function () {
    var crosshairEl = this.get('crosshairEl');

    if (!crosshairEl) {
      this.initCrossHair();
      crosshairEl = this.get('crosshairEl');
    }

    var start = this.get('start');
    var end = this.get('end');
    var minX = Math.min(start.x, end.x);
    var minY = Math.min(start.y, end.y);

    if (this.isVertical(start, end)) {
      modifyCSS(crosshairEl, {
        width: '1px',
        height: toPx(Math.abs(end.y - start.y))
      });
    } else {
      modifyCSS(crosshairEl, {
        height: '1px',
        width: toPx(Math.abs(end.x - start.x))
      });
    }

    modifyCSS(crosshairEl, {
      top: toPx(minY),
      left: toPx(minX)
    });
    this.alignText();
  };

  HtmlCrosshair.prototype.alignText = function () {
    // 重新设置 text 位置
    var textEl = this.get('textEl');

    if (textEl) {
      var align = this.get('text').align;
      var clientWidth = textEl.clientWidth;
      var point = this.getTextPoint();

      switch (align) {
        case 'center':
          point.x = point.x - clientWidth / 2;
          break;

        case 'right':
          point.x = point.x - clientWidth;

        case 'left':
          break;
      }

      modifyCSS(textEl, {
        top: toPx(point.y),
        left: toPx(point.x)
      });
    }
  };

  HtmlCrosshair.prototype.updateInner = function (cfg) {
    if (Object(esm["hasKey"])(cfg, 'text')) {
      this.resetText();
    }

    _super.prototype.updateInner.call(this, cfg);
  };

  return HtmlCrosshair;
}(html_component);

/* harmony default export */ var html = (html_HtmlCrosshair);
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/crosshair/index.js




// CONCATENATED MODULE: ../node_modules/@antv/component/esm/grid/base.js





var base_GridBase =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(GridBase, _super);

  function GridBase() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  GridBase.prototype.getDefaultCfg = function () {
    var cfg = _super.prototype.getDefaultCfg.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, cfg), {
      name: 'grid',
      line: {},
      alternateColor: null,
      capture: false,
      items: [],
      closed: false,
      defaultCfg: {
        line: {
          type: 'line',
          style: {
            lineWidth: 1,
            stroke: util_theme.lineColor
          }
        }
      }
    });
  };
  /**
   * 获取栅格线的类型
   * @return {string} 栅格线类型
   */


  GridBase.prototype.getLineType = function () {
    var line = this.get('line') || this.get('defaultCfg').line;
    return line.type;
  };

  GridBase.prototype.renderInner = function (group) {
    this.drawGrid(group);
  };

  GridBase.prototype.getAlternatePath = function (prePoints, points) {
    var regionPath = this.getGridPath(prePoints);
    var reversePoints = points.slice(0).reverse();
    var nextPath = this.getGridPath(reversePoints, true);
    var closed = this.get('closed');

    if (closed) {
      regionPath = regionPath.concat(nextPath);
    } else {
      nextPath[0][0] = 'L'; // 更新第一个节点

      regionPath = regionPath.concat(nextPath);
      regionPath.push(['Z']);
    }

    return regionPath;
  }; // 获取路径的配置项


  GridBase.prototype.getPathStyle = function () {
    return this.get('line').style;
  }; // 绘制栅格


  GridBase.prototype.drawGrid = function (group) {
    var _this = this;

    var line = this.get('line');
    var items = this.get('items');
    var alternateColor = this.get('alternateColor');
    var preItem = null;
    Object(esm["each"])(items, function (item, index) {
      var id = item.id || index; // 绘制栅格线

      if (line) {
        var style = _this.getPathStyle();

        var lineId = _this.getElementId("line-" + id);

        var gridPath = _this.getGridPath(item.points);

        _this.addShape(group, {
          type: 'path',
          name: 'grid-line',
          id: lineId,
          attrs: Object(esm["mix"])({
            path: gridPath
          }, style)
        });
      } // 如果存在 alternateColor 则绘制矩形
      // 从第二个栅格线开始绘制


      if (alternateColor && index > 0) {
        var regionId = _this.getElementId("region-" + id);

        var isEven = index % 2 === 0;

        if (Object(esm["isString"])(alternateColor)) {
          // 如果颜色是单值，则是仅绘制偶数时的区域
          if (isEven) {
            _this.drawAlternateRegion(regionId, group, preItem.points, item.points, alternateColor);
          }
        } else {
          var color = isEven ? alternateColor[1] : alternateColor[0];

          _this.drawAlternateRegion(regionId, group, preItem.points, item.points, color);
        }
      }

      preItem = item;
    });
  }; // 绘制栅格线间的间隔


  GridBase.prototype.drawAlternateRegion = function (id, group, prePoints, points, color) {
    var regionPath = this.getAlternatePath(prePoints, points);
    this.addShape(group, {
      type: 'path',
      id: id,
      name: 'grid-region',
      attrs: {
        path: regionPath,
        fill: color
      }
    });
  };

  return GridBase;
}(group_component);

/* harmony default export */ var grid_base = (base_GridBase);
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/grid/circle.js




function circle_distance(x1, y1, x2, y2) {
  var dx = x2 - x1;
  var dy = y2 - y1;
  return Math.sqrt(dx * dx + dy * dy);
}

var grid_circle_Circle =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Circle, _super);

  function Circle() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Circle.prototype.getDefaultCfg = function () {
    var cfg = _super.prototype.getDefaultCfg.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, cfg), {
      type: 'circle',

      /**
       * 中心点
       * @type {object}
       */
      center: null,

      /**
       * 栅格线是否封闭
       * @type {true}
       */
      closed: true
    });
  };

  Circle.prototype.getGridPath = function (points, reversed) {
    var lineType = this.getLineType();
    var closed = this.get('closed');
    var path = [];

    if (points.length) {
      // 防止出错
      if (lineType === 'circle') {
        var center = this.get('center');
        var firstPoint = points[0];
        var radius_1 = circle_distance(center.x, center.y, firstPoint.x, firstPoint.y);
        var sweepFlag_1 = reversed ? 0 : 1; // 顺时针还是逆时针

        if (closed) {
          // 封闭时，绘制整个圆
          path.push(['M', center.x, center.y - radius_1]);
          path.push(['A', radius_1, radius_1, 0, 0, sweepFlag_1, center.x, center.y + radius_1]);
          path.push(['A', radius_1, radius_1, 0, 0, sweepFlag_1, center.x, center.y - radius_1]);
          path.push(['Z']);
        } else {
          Object(esm["each"])(points, function (point, index) {
            if (index === 0) {
              path.push(['M', point.x, point.y]);
            } else {
              path.push(['A', radius_1, radius_1, 0, 0, sweepFlag_1, point.x, point.y]);
            }
          });
        }
      } else {
        Object(esm["each"])(points, function (point, index) {
          if (index === 0) {
            path.push(['M', point.x, point.y]);
          } else {
            path.push(['L', point.x, point.y]);
          }
        });

        if (closed) {
          path.push(['Z']);
        }
      }
    }

    return path;
  };

  return Circle;
}(grid_base);

/* harmony default export */ var grid_circle = (grid_circle_Circle);
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/grid/line.js




var grid_line_Line =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Line, _super);

  function Line() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Line.prototype.getDefaultCfg = function () {
    var cfg = _super.prototype.getDefaultCfg.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, cfg), {
      type: 'line'
    });
  };

  Line.prototype.getGridPath = function (points) {
    var path = [];
    Object(esm["each"])(points, function (point, index) {
      if (index === 0) {
        path.push(['M', point.x, point.y]);
      } else {
        path.push(['L', point.x, point.y]);
      }
    });
    return path;
  };

  return Line;
}(grid_base);

/* harmony default export */ var grid_line = (grid_line_Line);
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/grid/index.js



// CONCATENATED MODULE: ../node_modules/@antv/component/esm/legend/base.js




var base_LegendBase =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(LegendBase, _super);

  function LegendBase() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  LegendBase.prototype.getDefaultCfg = function () {
    var cfg = _super.prototype.getDefaultCfg.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, cfg), {
      name: 'legend',

      /**
       * 布局方式： horizontal，vertical
       * @type {String}
       */
      layout: 'horizontal',
      locationType: 'point',
      x: 0,
      y: 0,
      offsetX: 0,
      offsetY: 0,
      title: null,
      background: null
    });
  };

  LegendBase.prototype.getLayoutBBox = function () {
    var bbox = _super.prototype.getLayoutBBox.call(this);

    var x = this.get('x');
    var y = this.get('y');
    var offsetX = this.get('offsetX');
    var offsetY = this.get('offsetY');
    var maxWidth = this.get('maxWidth');
    var maxHeight = this.get('maxHeight');
    var minX = x + offsetX;
    var minY = y + offsetY;
    var width = bbox.maxX - minX;
    var height = bbox.maxY - minY;

    if (maxWidth) {
      width = Math.min(width, maxWidth);
    }

    if (maxHeight) {
      height = Math.min(height, maxHeight);
    }

    return createBBox(minX, minY, width, height);
  };

  LegendBase.prototype.setLocation = function (cfg) {
    this.set('x', cfg.x);
    this.set('y', cfg.y);
    this.resetLocation();
  };

  LegendBase.prototype.resetLocation = function () {
    var x = this.get('x');
    var y = this.get('y');
    var offsetX = this.get('offsetX');
    var offsetY = this.get('offsetY');
    this.moveElementTo(this.get('group'), {
      x: x + offsetX,
      y: y + offsetY
    });
  };

  LegendBase.prototype.applyOffset = function () {
    this.resetLocation();
  }; // 获取当前绘制的点


  LegendBase.prototype.getDrawPoint = function () {
    return this.get('currentPoint');
  };

  LegendBase.prototype.setDrawPoint = function (point) {
    return this.set('currentPoint', point);
  }; // 复写父类定义的绘制方法


  LegendBase.prototype.renderInner = function (group) {
    this.resetDraw();

    if (this.get('title')) {
      this.drawTitle(group);
    }

    this.drawLegendContent(group);

    if (this.get('background')) {
      this.drawBackground(group);
    } // this.resetLocation(); // 在顶层已经在处理偏移时一起处理了

  }; // 绘制背景


  LegendBase.prototype.drawBackground = function (group) {
    var background = this.get('background');
    var bbox = group.getBBox();
    var padding = formatPadding(background.padding);

    var attrs = Object(tslib_es6["__assign"])({
      // 背景从 (0,0) 开始绘制
      x: 0,
      y: 0,
      width: bbox.width + padding[1] + padding[3],
      height: bbox.height + padding[0] + padding[2]
    }, background.style);

    var backgroundShape = this.addShape(group, {
      type: 'rect',
      id: this.getElementId('background'),
      name: 'legend-background',
      attrs: attrs
    });
    backgroundShape.toBack();
  }; // 绘制标题，标题在图例项的上面


  LegendBase.prototype.drawTitle = function (group) {
    var currentPoint = this.get('currentPoint');
    var titleCfg = this.get('title');
    var spacing = titleCfg.spacing,
        style = titleCfg.style,
        text = titleCfg.text;
    var shape = this.addShape(group, {
      type: 'text',
      id: this.getElementId('title'),
      name: 'legend-title',
      attrs: Object(tslib_es6["__assign"])({
        text: text,
        x: currentPoint.x,
        y: currentPoint.y
      }, style)
    });
    var bbox = shape.getBBox(); // 标题单独在一行

    this.set('currentPoint', {
      x: currentPoint.x,
      y: bbox.maxY + spacing
    });
  }; // 重置绘制时开始的位置，如果绘制边框，考虑边框的 padding


  LegendBase.prototype.resetDraw = function () {
    var background = this.get('background');
    var currentPoint = {
      x: 0,
      y: 0
    };

    if (background) {
      var padding = formatPadding(background.padding);
      currentPoint.x = padding[3]; // 左边 padding

      currentPoint.y = padding[0]; // 上面 padding
    }

    this.set('currentPoint', currentPoint); // 设置绘制的初始位置
  };

  return LegendBase;
}(group_component);

/* harmony default export */ var legend_base = (base_LegendBase);
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/legend/category.js











var category_Category =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Category, _super);

  function Category() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.currentPageIndex = 1;
    _this.totalPagesCnt = 1;
    _this.pageWidth = 0;
    _this.pageHeight = 0;
    _this.startX = 0;
    _this.startY = 0;

    _this.onNavigationBack = function () {
      var itemGroup = _this.getElementByLocalId('item-group');

      if (_this.currentPageIndex > 1) {
        _this.currentPageIndex -= 1;

        _this.updateNavigation();

        var matrix = _this.getCurrentNavigationMatrix();

        if (_this.get('animate')) {
          itemGroup.animate({
            matrix: matrix
          }, 100);
        } else {
          itemGroup.attr({
            matrix: matrix
          });
        }
      }
    };

    _this.onNavigationAfter = function () {
      var itemGroup = _this.getElementByLocalId('item-group');

      if (_this.currentPageIndex < _this.totalPagesCnt) {
        _this.currentPageIndex += 1;

        _this.updateNavigation();

        var matrix = _this.getCurrentNavigationMatrix();

        if (_this.get('animate')) {
          itemGroup.animate({
            matrix: matrix
          }, 100);
        } else {
          itemGroup.attr({
            matrix: matrix
          });
        }
      }
    };

    return _this;
  }

  Category.prototype.getDefaultCfg = function () {
    var cfg = _super.prototype.getDefaultCfg.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, cfg), {
      name: 'legend',
      type: 'category',
      itemSpacing: 24,
      itemWidth: null,
      itemHeight: null,
      itemName: {},
      itemValue: null,
      maxWidth: null,
      maxHeight: null,
      marker: {},
      items: [],
      itemStates: {},
      itemBackground: {},
      defaultCfg: {
        title: {
          spacing: 5,
          style: {
            fill: util_theme.textColor,
            fontSize: 12,
            textAlign: 'start',
            textBaseline: 'top'
          }
        },
        background: {
          padding: 5,
          style: {
            stroke: util_theme.lineColor
          }
        },
        itemBackground: {
          style: {
            opacity: 0,
            fill: '#fff'
          }
        },
        itemName: {
          spacing: 16,
          style: {
            fill: util_theme.textColor,
            fontSize: 12,
            textAlign: 'start',
            textBaseline: 'middle'
          }
        },
        marker: {
          spacing: 8,
          style: {
            r: 6,
            symbol: 'circle'
          }
        },
        itemValue: {
          alignRight: false,
          formatter: null,
          style: {
            fill: util_theme.textColor,
            fontSize: 12,
            textAlign: 'start',
            textBaseline: 'middle'
          }
        },
        itemStates: {
          active: {
            nameStyle: {
              opacity: 0.8
            }
          },
          unchecked: {
            nameStyle: {
              fill: util_theme.uncheckedColor
            },
            markerStyle: {
              fill: util_theme.uncheckedColor,
              stroke: util_theme.uncheckedColor
            }
          },
          inactive: {
            nameStyle: {
              fill: util_theme.uncheckedColor
            },
            markerStyle: {
              opacity: 0.2
            }
          }
        }
      }
    });
  }; // 实现 IList 接口


  Category.prototype.isList = function () {
    return true;
  };
  /**
   * 获取图例项
   * @return {ListItem[]} 列表项集合
   */


  Category.prototype.getItems = function () {
    return this.get('items');
  };
  /**
   * 设置列表项
   * @param {ListItem[]} items 列表项集合
   */


  Category.prototype.setItems = function (items) {
    this.update({
      items: items
    });
  };
  /**
   * 更新列表项
   * @param {ListItem} item 列表项
   * @param {object}   cfg  列表项
   */


  Category.prototype.updateItem = function (item, cfg) {
    Object(esm["mix"])(item, cfg);
    this.clear(); // 由于单个图例项变化，会引起全局变化，所以全部更新

    this.render();
  };
  /**
   * 清空列表
   */


  Category.prototype.clearItems = function () {
    var itemGroup = this.getElementByLocalId('item-group');
    itemGroup && itemGroup.clear();
  };
  /**
   * 设置列表项的状态
   * @param {ListItem} item  列表项
   * @param {string}   state 状态名
   * @param {boolean}  value 状态值, true, false
   */


  Category.prototype.setItemState = function (item, state, value) {
    item[state] = value;
    var itemElement = this.getElementByLocalId("item-" + item.id);

    if (itemElement) {
      var items = this.getItems();
      var index = items.indexOf(item);
      var offsetGroup = this.createOffScreenGroup(); // 离屏的 group

      var newElement = this.drawItem(item, index, this.getItemHeight(), offsetGroup);
      this.updateElements(newElement, itemElement); // 更新整个分组

      this.clearUpdateStatus(itemElement); // 清理更新状态，防止出现 bug
    }
  };
  /**
   * 是否存在指定的状态
   * @param {ListItem} item  列表项
   * @param {boolean} state 状态名
   */


  Category.prototype.hasState = function (item, state) {
    return !!item[state];
  };

  Category.prototype.getItemStates = function (item) {
    var itemStates = this.get('itemStates');
    var rst = [];
    Object(esm["each"])(itemStates, function (v, k) {
      if (item[k]) {
        // item.selected
        rst.push(k);
      }
    });
    return rst;
  };
  /**
   * 清楚所有列表项的状态
   * @param {string} state 状态值
   */


  Category.prototype.clearItemsState = function (state) {
    var _this = this;

    var items = this.getItemsByState(state);
    Object(esm["each"])(items, function (item) {
      _this.setItemState(item, state, false);
    });
  };
  /**
   * 根据状态获取图例项
   * @param  {string}     state [description]
   * @return {ListItem[]}       [description]
   */


  Category.prototype.getItemsByState = function (state) {
    var _this = this;

    var items = this.getItems();
    return Object(esm["filter"])(items, function (item) {
      return _this.hasState(item, state);
    });
  }; // 绘制 legend 的选项


  Category.prototype.drawLegendContent = function (group) {
    this.processItems();
    this.drawItems(group);
  }; // 防止未设置 id


  Category.prototype.processItems = function () {
    var items = this.get('items');
    Object(esm["each"])(items, function (item) {
      if (!item.id) {
        // 如果没有设置 id，默认使用 name
        item.id = item.name;
      }
    });
  }; // 绘制所有的图例选项


  Category.prototype.drawItems = function (group) {
    var _this = this;

    var itemContainerGroup = this.addGroup(group, {
      id: this.getElementId('item-container-group'),
      name: 'legend-item-container-group'
    });
    var itemGroup = this.addGroup(itemContainerGroup, {
      id: this.getElementId('item-group'),
      name: 'legend-item-group'
    });
    var itemHeight = this.getItemHeight();
    var itemWidth = this.get('itemWidth');
    var itemSpacing = this.get('itemSpacing');
    var currentPoint = this.get('currentPoint');
    var startX = currentPoint.x;
    var startY = currentPoint.y;
    var layout = this.get('layout');
    var items = this.get('items');
    var wrapped = false;
    var pageWidth = 0;
    var maxWidth = this.get('maxWidth'); // 最大宽度，会导致 layout : 'horizontal' 时自动换行

    var maxHeight = this.get('maxHeight'); // 最大高度，会导致出现分页
    // 暂时不考虑分页

    Object(esm["each"])(items, function (item, index) {
      var subGroup = _this.drawItem(item, index, itemHeight, itemGroup);

      var bbox = subGroup.getBBox();
      var width = itemWidth || bbox.width;

      if (width > pageWidth) {
        pageWidth = width;
      }

      if (layout === 'horizontal') {
        // 如果水平布局
        if (maxWidth && maxWidth < currentPoint.x + width - startX) {
          // 检测是否换行
          wrapped = true;
          currentPoint.x = startX;
          currentPoint.y += itemHeight;
        }

        _this.moveElementTo(subGroup, currentPoint);

        currentPoint.x += width + itemSpacing;
      } else {
        // 如果垂直布局
        if (maxHeight && maxHeight < currentPoint.y + itemHeight - startY) {
          // 换行
          wrapped = true;
          currentPoint.x += pageWidth + itemSpacing;
          currentPoint.y = startY;
          pageWidth = 0;
        }

        _this.moveElementTo(subGroup, currentPoint);

        currentPoint.y += itemHeight; // itemSpacing 仅影响水平间距
      }
    });

    if (wrapped && this.get('flipPage')) {
      this.pageHeight = 0;
      this.pageWidth = 0;
      this.totalPagesCnt = 1;
      this.startX = startX;
      this.startY = startY;
      this.adjustNavigation(group, itemGroup);
    }
  }; // 获取图例项的高度，如果未定义，则按照 name 的高度计算


  Category.prototype.getItemHeight = function () {
    var itemHeight = this.get('itemHeight');

    if (!itemHeight) {
      var nameCfg = this.get('itemName');

      if (nameCfg) {
        itemHeight = nameCfg.style.fontSize + 8;
      }
    }

    return itemHeight;
  }; // 绘制 marker


  Category.prototype.drawMarker = function (container, markerCfg, item, itemHeight) {
    var markerAttrs = Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({
      x: 0,
      y: itemHeight / 2
    }, markerCfg.style), {
      symbol: Object(esm["get"])(item.marker, 'symbol', 'circle')
    }), Object(esm["get"])(item.marker, 'style', {}));

    var shape = this.addShape(container, {
      type: 'marker',
      id: this.getElementId("item-" + item.id + "-marker"),
      name: 'legend-item-marker',
      attrs: markerAttrs
    });
    var bbox = shape.getBBox();
    shape.attr('x', bbox.width / 2); // marker 需要左对齐，所以不能占用左侧的空间

    var _a = shape.attr(),
        stroke = _a.stroke,
        fill = _a.fill;

    if (stroke) {
      shape.set('isStroke', true);
    }

    if (fill) {
      shape.set('isFill', true);
    }

    return shape;
  }; // 绘制文本


  Category.prototype.drawItemText = function (container, textName, cfg, item, itemHeight, xPosition, index) {
    var formatter = cfg.formatter;

    var attrs = Object(tslib_es6["__assign"])({
      x: xPosition,
      y: itemHeight / 2,
      text: formatter ? formatter(item[textName], item, index) : item[textName]
    }, cfg.style);

    return this.addShape(container, {
      type: 'text',
      id: this.getElementId("item-" + item.id + "-" + textName),
      name: "legend-item-" + textName,
      attrs: attrs
    });
  }; // 绘制图例项


  Category.prototype.drawItem = function (item, index, itemHeight, itemGroup) {
    var groupId = "item-" + item.id; // 设置单独的 Group 用于 setClip

    var subContainer = this.addGroup(itemGroup, {
      name: 'legend-item-container',
      id: this.getElementId("item-container-" + groupId),
      delegateObject: {
        item: item,
        index: index
      }
    });
    var subGroup = this.addGroup(subContainer, {
      name: 'legend-item',
      id: this.getElementId(groupId),
      delegateObject: {
        item: item,
        index: index
      }
    });
    var marker = this.get('marker');
    var itemName = this.get('itemName');
    var itemValue = this.get('itemValue');
    var itemBackground = this.get('itemBackground');
    var curX = 0; // 记录当前 x 的位置

    if (marker) {
      var markerShape = this.drawMarker(subGroup, marker, item, itemHeight);
      curX = markerShape.getBBox().maxX + marker.spacing;
    }

    if (itemName) {
      var nameShape = this.drawItemText(subGroup, 'name', itemName, item, itemHeight, curX, index);
      curX = nameShape.getBBox().maxX + itemName.spacing;
    }

    if (itemValue) {
      var valueShape = this.drawItemText(subGroup, 'value', itemValue, item, itemHeight, curX, index);
      var itemWidth = this.get('itemWidth');

      if (itemWidth && itemValue.alignRight) {
        // 当文本右对齐，同时制定了列宽度时，调整文本位置和对齐方式
        valueShape.attr({
          textAlign: 'right',
          x: itemWidth
        });
      } // 如果考虑 value 和 name 的覆盖，这个地方需要做文本自动省略的功能

    } // 添加透明的背景，便于拾取和包围盒计算


    if (itemBackground) {
      var bbox = subGroup.getBBox();
      var backShape = this.addShape(subGroup, {
        type: 'rect',
        name: 'legend-item-background',
        id: this.getElementId(groupId + "-background"),
        attrs: Object(tslib_es6["__assign"])({
          x: 0,
          y: 0,
          width: bbox.width,
          height: itemHeight
        }, itemBackground.style)
      });
      backShape.toBack();
    }

    this.applyItemStates(item, subGroup);
    return subGroup;
  }; // 加上分页器并重新排序 items


  Category.prototype.adjustNavigation = function (container, itemGroup) {
    var _this = this;

    var startX = this.startX;
    var startY = this.startY;
    var layout = this.get('layout');
    var subGroups = itemGroup.findAll(function (item) {
      return item.get('name') === 'legend-item';
    });
    var maxWidth = this.get('maxWidth');
    var maxHeight = this.get('maxHeight');
    var itemWidth = this.get('itemWidth');
    var itemSpacing = this.get('itemSpacing');
    var itemHeight = this.getItemHeight();
    var navigation = this.drawNavigation(container, layout, '00/00', 12);
    var navigationBBox = navigation.getBBox();
    var currentPoint = {
      x: startX,
      y: startY
    };
    var pages = 1;
    var widthLimit = 0;
    var pageWidth = 0;
    var maxItemWidth = 0;

    if (layout === 'horizontal') {
      this.pageHeight = itemHeight;
      Object(esm["each"])(subGroups, function (item) {
        var bbox = item.getBBox();
        var width = itemWidth || bbox.width;

        if (widthLimit && widthLimit < currentPoint.x + width + itemSpacing || maxWidth < currentPoint.x + width + itemSpacing + navigationBBox.width) {
          if (pages === 1) {
            widthLimit = currentPoint.x + itemSpacing;
            _this.pageWidth = widthLimit;

            _this.moveElementTo(navigation, {
              x: maxWidth - itemSpacing - navigationBBox.width - navigationBBox.minX,
              y: currentPoint.y + itemHeight / 2 - navigationBBox.height / 2 - navigationBBox.minY
            });
          }

          pages += 1;
          currentPoint.x = startX;
          currentPoint.y += itemHeight;
        }

        _this.moveElementTo(item, currentPoint);

        item.getParent().setClip({
          type: 'rect',
          attrs: {
            x: currentPoint.x,
            y: currentPoint.y,
            width: width + itemSpacing,
            height: itemHeight
          }
        });
        currentPoint.x += width + itemSpacing;
      });
    } else {
      Object(esm["each"])(subGroups, function (item) {
        var bbox = item.getBBox();

        if (bbox.width > pageWidth) {
          pageWidth = bbox.width;
        }
      });
      maxItemWidth = pageWidth;
      pageWidth += itemSpacing;

      if (maxWidth) {
        // maxWidth 限制加上
        pageWidth = Math.min(maxWidth, pageWidth);
        maxItemWidth = Math.min(maxWidth, maxItemWidth);
      }

      this.pageWidth = pageWidth;
      this.pageHeight = maxHeight - Math.max(navigationBBox.height, itemHeight);
      var cntPerPage_1 = Math.floor(this.pageHeight / itemHeight);
      Object(esm["each"])(subGroups, function (item, index) {
        if (index !== 0 && index % cntPerPage_1 === 0) {
          pages += 1;
          currentPoint.x += pageWidth;
          currentPoint.y = startY;
        }

        _this.moveElementTo(item, currentPoint);

        item.getParent().setClip({
          type: 'rect',
          attrs: {
            x: currentPoint.x,
            y: currentPoint.y,
            width: pageWidth,
            height: itemHeight
          }
        });
        currentPoint.y += itemHeight;
      });
      this.totalPagesCnt = pages;
      this.moveElementTo(navigation, {
        x: startX + maxItemWidth / 2 - navigationBBox.width / 2 - navigationBBox.minX,
        y: maxHeight - navigationBBox.height - navigationBBox.minY
      });
    }

    if (this.pageHeight && this.pageWidth) {
      // 为了使固定的 clip 生效，clip 设置在 itemContainerGroup 上，itemGroup 需要在翻页时会设置 matrix
      itemGroup.getParent().setClip({
        type: 'rect',
        attrs: {
          x: this.startX,
          y: this.startY,
          width: this.pageWidth,
          height: this.pageHeight
        }
      });
    }

    this.totalPagesCnt = pages;

    if (this.currentPageIndex > this.totalPagesCnt) {
      this.currentPageIndex = 1;
    }

    this.updateNavigation(navigation); // update initial matrix

    itemGroup.attr('matrix', this.getCurrentNavigationMatrix());
  };

  Category.prototype.drawNavigation = function (group, layout, text, size) {
    var currentPoint = {
      x: 0,
      y: 0
    };
    var subGroup = this.addGroup(group, {
      id: this.getElementId('navigation-group'),
      name: 'legend-navigation'
    });
    var leftArrow = this.drawArrow(subGroup, currentPoint, 'navigation-arrow-left', layout === 'horizontal' ? 'up' : 'left', size);
    leftArrow.on('click', this.onNavigationBack);
    var leftArrowBBox = leftArrow.getBBox();
    currentPoint.x += leftArrowBBox.width + 2;
    var textShape = this.addShape(subGroup, {
      type: 'text',
      id: this.getElementId('navigation-text'),
      name: 'navigation-text',
      attrs: {
        x: currentPoint.x,
        y: currentPoint.y + size / 2,
        text: text,
        fontSize: 12,
        fill: '#ccc',
        textBaseline: 'middle'
      }
    });
    var textBBox = textShape.getBBox();
    currentPoint.x += textBBox.width + 2;
    var rightArrow = this.drawArrow(subGroup, currentPoint, 'navigation-arrow-right', layout === 'horizontal' ? 'down' : 'right', size);
    rightArrow.on('click', this.onNavigationAfter);
    return subGroup;
  };

  Category.prototype.updateNavigation = function (navigation) {
    var text = this.currentPageIndex + "/" + this.totalPagesCnt;
    var textShape = navigation ? navigation.getChildren()[1] : this.getElementByLocalId('navigation-text');
    var leftArrow = navigation ? navigation.findById(this.getElementId('navigation-arrow-left')) : this.getElementByLocalId('navigation-arrow-left');
    var rightArrow = navigation ? navigation.findById(this.getElementId('navigation-arrow-right')) : this.getElementByLocalId('navigation-arrow-right');
    var origBBox = textShape.getBBox();
    textShape.attr('text', text);
    var newBBox = textShape.getBBox();
    textShape.attr('x', textShape.attr('x') - (newBBox.width - origBBox.width) / 2);
    leftArrow.attr('opacity', this.currentPageIndex === 1 ? 0.45 : 1);
    leftArrow.attr('cursor', this.currentPageIndex === 1 ? 'not-allowed' : 'pointer');
    rightArrow.attr('opacity', this.currentPageIndex === this.totalPagesCnt ? 0.45 : 1);
    rightArrow.attr('cursor', this.currentPageIndex === this.totalPagesCnt ? 'not-allowed' : 'pointer');
  };

  Category.prototype.drawArrow = function (group, currentPoint, name, direction, size) {
    var x = currentPoint.x,
        y = currentPoint.y;
    var rotateMap = {
      right: 90 * Math.PI / 180,
      left: (360 - 90) * Math.PI / 180,
      up: 0,
      down: 180 * Math.PI / 180
    };
    var shape = this.addShape(group, {
      type: 'path',
      id: this.getElementId(name),
      name: name,
      attrs: {
        path: [['M', x + size / 2, y], ['L', x, y + size], ['L', x + size, y + size], ['Z']],
        fill: '#000',
        cursor: 'pointer'
      }
    });
    shape.attr('matrix', getMatrixByAngle({
      x: x + size / 2,
      y: y + size / 2
    }, rotateMap[direction]));
    return shape;
  };

  Category.prototype.getCurrentNavigationMatrix = function () {
    var _a = this,
        currentPageIndex = _a.currentPageIndex,
        pageWidth = _a.pageWidth,
        pageHeight = _a.pageHeight;

    var layout = this.get('layout');
    var translate = layout === 'horizontal' ? {
      x: 0,
      y: pageHeight * (1 - currentPageIndex)
    } : {
      x: pageWidth * (1 - currentPageIndex),
      y: 0
    };
    return getMatrixByTranslate(translate);
  }; // 附加状态对应的样式


  Category.prototype.applyItemStates = function (item, subGroup) {
    var states = this.getItemStates(item);
    var hasStates = states.length > 0;

    if (hasStates) {
      var children = subGroup.getChildren();
      var itemStates_1 = this.get('itemStates');
      Object(esm["each"])(children, function (element) {
        var name = element.get('name');
        var elName = name.split('-')[2]; // marker, name, value

        var statesStyle = getStatesStyle(item, elName, itemStates_1);

        if (statesStyle) {
          element.attr(statesStyle);

          if (elName === 'marker' && !(element.get('isStroke') && element.get('isFill'))) {
            // 如果 marker 是单填充或者单描边的话，就不要额外添加 stroke 或这 fill 属性，否则会影响 unchecked 后的显示
            if (element.get('isStroke')) {
              element.attr('fill', null);
            }

            if (element.get('isFill')) {
              element.attr('stroke', null);
            }
          }
        }
      });
    }
  };

  return Category;
}(legend_base);

/* harmony default export */ var category = (category_Category);
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/legend/continuous.js





var HANDLER_HEIGHT_RATIO = 1.4;
var HANDLER_TRIANGLE_RATIO = 0.4;

var continuous_ContinueLegend =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(ContinueLegend, _super);

  function ContinueLegend() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  ContinueLegend.prototype.getDefaultCfg = function () {
    var cfg = _super.prototype.getDefaultCfg.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, cfg), {
      type: 'continue',
      min: 0,
      max: 100,
      value: null,
      colors: [],
      track: {},
      rail: {},
      label: {},
      handler: {},
      slidable: true,
      tip: null,
      step: null,
      maxWidth: null,
      maxHeight: null,
      defaultCfg: {
        label: {
          align: 'rail',
          spacing: 5,
          formatter: null,
          style: {
            fontSize: 12,
            fill: util_theme.textColor,
            textBaseline: 'middle',
            fontFamily: util_theme.fontFamily
          }
        },
        handler: {
          size: 10,
          style: {
            fill: '#fff',
            stroke: '#333'
          }
        },
        track: {},
        rail: {
          type: 'color',
          size: 20,
          defaultLength: 100,
          style: {
            fill: '#DCDEE2'
          }
        },
        title: {
          spacing: 5,
          style: {
            fill: util_theme.textColor,
            fontSize: 12,
            textAlign: 'start',
            textBaseline: 'top'
          }
        }
      }
    });
  };

  ContinueLegend.prototype.isSlider = function () {
    return true;
  }; // 实现 IList 接口


  ContinueLegend.prototype.getValue = function () {
    return this.getCurrentValue();
  };

  ContinueLegend.prototype.getRange = function () {
    return {
      min: this.get('min'),
      max: this.get('max')
    };
  }; // 改变 range


  ContinueLegend.prototype.setRange = function (min, max) {
    this.update({
      min: min,
      max: max
    });
  };

  ContinueLegend.prototype.setValue = function (value) {
    var originValue = this.getValue();
    this.set('value', value);
    var group = this.get('group');
    this.resetTrackClip();

    if (this.get('slidable')) {
      this.resetHandlers(group);
    }

    this.delegateEmit('valuechanged', {
      originValue: originValue,
      value: value
    });
  };

  ContinueLegend.prototype.initEvent = function () {
    var group = this.get('group');
    this.bindSliderEvent(group);
    this.bindRailEvent(group);
    this.bindTrackEvent(group);
  };

  ContinueLegend.prototype.drawLegendContent = function (group) {
    this.drawRail(group);
    this.drawLabels(group);
    this.fixedElements(group); // 调整各个图形位置，适应宽高的限制

    this.resetTrack(group);
    this.resetTrackClip(group);

    if (this.get('slidable')) {
      this.resetHandlers(group);
    }
  };

  ContinueLegend.prototype.bindSliderEvent = function (group) {
    this.bindHandlersEvent(group);
  };

  ContinueLegend.prototype.bindHandlersEvent = function (group) {
    var _this = this;

    group.on('legend-handler-min:drag', function (ev) {
      var minValue = _this.getValueByCanvasPoint(ev.x, ev.y);

      var currentValue = _this.getCurrentValue();

      var maxValue = currentValue[1];

      if (maxValue < minValue) {
        // 如果小于最小值，则调整最小值
        maxValue = minValue;
      }

      _this.setValue([minValue, maxValue]);
    });
    group.on('legend-handler-max:drag', function (ev) {
      var maxValue = _this.getValueByCanvasPoint(ev.x, ev.y);

      var currentValue = _this.getCurrentValue();

      var minValue = currentValue[0];

      if (minValue > maxValue) {
        // 如果小于最小值，则调整最小值
        minValue = maxValue;
      }

      _this.setValue([minValue, maxValue]);
    });
  };

  ContinueLegend.prototype.bindRailEvent = function (group) {};

  ContinueLegend.prototype.bindTrackEvent = function (group) {
    var _this = this;

    var prePoint = null;
    group.on('legend-track:dragstart', function (ev) {
      prePoint = {
        x: ev.x,
        y: ev.y
      };
    });
    group.on('legend-track:drag', function (ev) {
      if (!prePoint) {
        return;
      }

      var preValue = _this.getValueByCanvasPoint(prePoint.x, prePoint.y);

      var curValue = _this.getValueByCanvasPoint(ev.x, ev.y);

      var currentValue = _this.getCurrentValue();

      var curDiff = currentValue[1] - currentValue[0];

      var range = _this.getRange();

      var dValue = curValue - preValue;

      if (dValue < 0) {
        // 减小, 同时未出边界
        if (currentValue[0] + dValue > range.min) {
          _this.setValue([currentValue[0] + dValue, currentValue[1] + dValue]);
        } else {
          _this.setValue([range.min, range.min + curDiff]);
        } //  && ||

      } else if (dValue > 0) {
        if (dValue > 0 && currentValue[1] + dValue < range.max) {
          _this.setValue([currentValue[0] + dValue, currentValue[1] + dValue]);
        } else {
          _this.setValue([range.max - curDiff, range.max]);
        }
      }

      prePoint = {
        x: ev.x,
        y: ev.y
      };
    });
    group.on('legend-track:dragend', function (ev) {
      prePoint = null;
    });
  };

  ContinueLegend.prototype.drawLabels = function (group) {
    this.drawLabel('min', group);
    this.drawLabel('max', group);
  };

  ContinueLegend.prototype.drawLabel = function (name, group) {
    var labelCfg = this.get('label');
    var style = labelCfg.style;
    var labelAlign = labelCfg.align;
    var value = this.get(name);
    var alignAttrs = this.getLabelAlignAttrs(name, labelAlign);
    var localId = "label-" + name;
    this.addShape(group, {
      type: 'text',
      id: this.getElementId(localId),
      name: "legend-label-" + name,
      attrs: Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({
        x: 0,
        y: 0,
        text: value
      }, style), alignAttrs)
    });
  }; // 获取文本的对齐方式，为了自适应真实操碎了心


  ContinueLegend.prototype.getLabelAlignAttrs = function (name, align) {
    var isVertical = this.isVertical();
    var textAlign = 'center';
    var textBaseline = 'middle';

    if (isVertical) {
      // 垂直布局的所有的文本都左对齐
      textAlign = 'start';

      if (align !== 'rail') {
        if (name === 'min') {
          textBaseline = 'top';
        } else {
          textBaseline = 'bottom';
        }
      } else {
        textBaseline = 'top';
      }
    } else {
      if (align !== 'rail') {
        textBaseline = 'top';

        if (name === 'min') {
          textAlign = 'start';
        } else {
          textAlign = 'end';
        }
      } else {
        textAlign = 'start';
        textBaseline = 'middle';
      }
    }

    return {
      textAlign: textAlign,
      textBaseline: textBaseline
    };
  };

  ContinueLegend.prototype.getRailPath = function (x, y, w, h) {
    var railCfg = this.get('rail');
    var size = railCfg.size,
        defaultLength = railCfg.defaultLength,
        type = railCfg.type;
    var isVertical = this.isVertical();
    var length = defaultLength;
    var width = w;
    var height = h;

    if (!width) {
      width = isVertical ? size : length;
    }

    if (!height) {
      height = isVertical ? length : size;
    }

    var path = [];

    if (type === 'color') {
      path.push(['M', x, y]);
      path.push(['L', x + width, y]);
      path.push(['L', x + width, y + height]);
      path.push(['L', x, y + height]);
      path.push(['Z']);
    } else {
      path.push(['M', x + width, y]);
      path.push(['L', x + width, y + height]);
      path.push(['L', x, y + height]);
      path.push(['Z']);
    }

    return path;
  };

  ContinueLegend.prototype.drawRail = function (group) {
    var railCfg = this.get('rail');
    var style = railCfg.style;
    this.addShape(group, {
      type: 'path',
      id: this.getElementId('rail'),
      name: 'legend-rail',
      attrs: Object(tslib_es6["__assign"])({
        path: this.getRailPath(0, 0)
      }, style)
    });
  }; // 将传入的颜色转换成渐变色


  ContinueLegend.prototype.getTrackColor = function (colors) {
    var count = colors.length;

    if (!count) {
      return null;
    }

    if (count === 1) {
      return colors[0];
    }

    var color; // 最终形态 l(0) 0:colors[0] 0.5:colors[1] 1:colors[2];

    if (this.isVertical()) {
      // 根据方向设置渐变方向
      color = 'l(90)';
    } else {
      color = 'l(0)';
    }

    for (var i = 0; i < count; i++) {
      var percent = i / (count - 1);
      color += " " + percent + ":" + colors[i];
    }

    return color;
  };

  ContinueLegend.prototype.getTrackPath = function (group) {
    var railShape = this.getRailShape(group);
    var path = railShape.attr('path');
    return Object(esm["clone"])(path);
  };

  ContinueLegend.prototype.getClipTrackAttrs = function (group) {
    var value = this.getCurrentValue();
    var min = value[0],
        max = value[1];
    var railBBox = this.getRailBBox(group);
    var startPoint = this.getPointByValue(min, group);
    var endPoint = this.getPointByValue(max, group);
    var isVertical = this.isVertical();
    var x;
    var y;
    var width;
    var height;

    if (isVertical) {
      x = railBBox.minX;
      y = startPoint.y;
      width = railBBox.width;
      height = endPoint.y - startPoint.y;
    } else {
      x = startPoint.x;
      y = railBBox.minY;
      width = endPoint.x - startPoint.x;
      height = railBBox.height;
    }

    return {
      x: x,
      y: y,
      width: width,
      height: height
    };
  }; // 获取 track 的属性，由 path 和 颜色构成


  ContinueLegend.prototype.getTrackAttrs = function (group) {
    var trackCfg = this.get('track');
    var colors = this.get('colors');
    var path = this.getTrackPath(group);
    return Object(esm["mix"])({
      path: path,
      fill: this.getTrackColor(colors)
    }, trackCfg.style);
  };

  ContinueLegend.prototype.resetTrackClip = function (group) {
    var container = group || this.get('group');
    var trackId = this.getElementId('track');
    var trackShape = container.findById(trackId);
    var clipShape = trackShape.getClip();
    var attrs = this.getClipTrackAttrs(group);

    if (!clipShape) {
      trackShape.setClip({
        type: 'rect',
        attrs: attrs
      });
    } else {
      clipShape.attr(attrs);
    }
  };

  ContinueLegend.prototype.resetTrack = function (group) {
    var trackId = this.getElementId('track');
    var trackShape = group.findById(trackId);
    var trackAttrs = this.getTrackAttrs(group);

    if (trackShape) {
      trackShape.attr(trackAttrs);
    } else {
      this.addShape(group, {
        type: 'path',
        id: trackId,
        draggable: this.get('slidable'),
        name: 'legend-track',
        attrs: trackAttrs
      });
    }
  };

  ContinueLegend.prototype.getPointByValue = function (value, group) {
    var _a = this.getRange(),
        min = _a.min,
        max = _a.max;

    var percent = (value - min) / (max - min);
    var bbox = this.getRailBBox(group);
    var isVertcal = this.isVertical();
    var point = {
      x: 0,
      y: 0
    };

    if (isVertcal) {
      point.x = bbox.minX + bbox.width / 2;
      point.y = getValueByPercent(bbox.minY, bbox.maxY, percent);
    } else {
      point.x = getValueByPercent(bbox.minX, bbox.maxX, percent);
      point.y = bbox.minY + bbox.height / 2;
    }

    return point;
  };

  ContinueLegend.prototype.getRailShape = function (group) {
    var container = group || this.get('group');
    return container.findById(this.getElementId('rail'));
  }; // 获取滑轨的宽高信息


  ContinueLegend.prototype.getRailBBox = function (group) {
    var railShape = this.getRailShape(group);
    var bbox = railShape.getBBox();
    return bbox;
  };

  ContinueLegend.prototype.getRailCanvasBBox = function () {
    var container = this.get('group');
    var railShape = container.findById(this.getElementId('rail'));
    var bbox = railShape.getCanvasBBox();
    return bbox;
  }; // 是否垂直


  ContinueLegend.prototype.isVertical = function () {
    return this.get('layout') === 'vertical';
  }; // 用于交互时


  ContinueLegend.prototype.getValueByCanvasPoint = function (x, y) {
    var _a = this.getRange(),
        min = _a.min,
        max = _a.max;

    var bbox = this.getRailCanvasBBox(); // 因为 x, y 是画布坐标

    var isVertcal = this.isVertical();
    var step = this.get('step');
    var percent;

    if (isVertcal) {
      // 垂直时计算 y
      percent = (y - bbox.minY) / bbox.height;
    } else {
      // 水平时计算 x
      percent = (x - bbox.minX) / bbox.width;
    }

    var value = getValueByPercent(min, max, percent);

    if (step) {
      var count = Math.round((value - min) / step);
      value = min + count * step; // 移动到最近的
    }

    if (value > max) {
      value = max;
    }

    if (value < min) {
      value = min;
    }

    return value;
  }; // 当前选中的范围


  ContinueLegend.prototype.getCurrentValue = function () {
    var value = this.get('value');

    if (!value) {
      // 如果没有定义，取最大范围
      value = [this.get('min'), this.get('max')];
    }

    return value;
  }; // 重置滑块 handler


  ContinueLegend.prototype.resetHandlers = function (group) {
    var currentValue = this.getCurrentValue();
    var min = currentValue[0],
        max = currentValue[1];
    this.resetHandler(group, 'min', min);
    this.resetHandler(group, 'max', max);
  }; // 获取滑块的 path


  ContinueLegend.prototype.getHandlerPath = function (handlerCfg, point) {
    var isVertical = this.isVertical();
    var path = [];
    var width = handlerCfg.size;
    var x = point.x,
        y = point.y;
    var height = width * HANDLER_HEIGHT_RATIO;
    var halfWidth = width / 2;
    var oneSixthWidth = width / 6;

    if (isVertical) {
      /**
       * 竖直情况下的滑块 handler，左侧顶点是 x,y
       *  /----|
       *    -- |
       *    -- |
       *  \----|
       */
      var triangleX = x + height * HANDLER_TRIANGLE_RATIO;
      path.push(['M', x, y]);
      path.push(['L', triangleX, y + halfWidth]);
      path.push(['L', x + height, y + halfWidth]);
      path.push(['L', x + height, y - halfWidth]);
      path.push(['L', triangleX, y - halfWidth]);
      path.push(['Z']); // 绘制两条横线

      path.push(['M', triangleX, y + oneSixthWidth]);
      path.push(['L', x + height - 2, y + oneSixthWidth]);
      path.push(['M', triangleX, y - oneSixthWidth]);
      path.push(['L', x + height - 2, y - oneSixthWidth]);
    } else {
      /**
       * 水平情况下的滑块，上面顶点处是 x,y
       *  /   \
       * | | | |
       * | | | |
       *  -----
       */
      var triangleY = y + height * HANDLER_TRIANGLE_RATIO;
      path.push(['M', x, y]);
      path.push(['L', x - halfWidth, triangleY]);
      path.push(['L', x - halfWidth, y + height]);
      path.push(['L', x + halfWidth, y + height]);
      path.push(['L', x + halfWidth, triangleY]);
      path.push(['Z']); // 绘制两条竖线

      path.push(['M', x - oneSixthWidth, triangleY]);
      path.push(['L', x - oneSixthWidth, y + height - 2]);
      path.push(['M', x + oneSixthWidth, triangleY]);
      path.push(['L', x + oneSixthWidth, y + height - 2]);
    }

    return path;
  }; // 调整 handler 的位置，如果未存在则绘制


  ContinueLegend.prototype.resetHandler = function (group, name, value) {
    var point = this.getPointByValue(value, group);
    var handlerCfg = this.get('handler');
    var path = this.getHandlerPath(handlerCfg, point);
    var id = this.getElementId("handler-" + name);
    var handlerShape = group.findById(id);
    var isVertical = this.isVertical();

    if (handlerShape) {
      handlerShape.attr('path', path);
    } else {
      this.addShape(group, {
        type: 'path',
        name: "legend-handler-" + name,
        draggable: true,
        id: id,
        attrs: Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({
          path: path
        }, handlerCfg.style), {
          cursor: isVertical ? 'ns-resize' : 'ew-resize'
        })
      });
    }
  }; // 当设置了 maxWidth, maxHeight 时调整 rail 的宽度，
  // 文本的位置


  ContinueLegend.prototype.fixedElements = function (group) {
    var railShape = group.findById(this.getElementId('rail'));
    var minLabel = group.findById(this.getElementId('label-min'));
    var maxLabel = group.findById(this.getElementId('label-max'));
    var startPoint = this.getDrawPoint();

    if (this.isVertical()) {
      // 横向布局
      this.fixedVertail(minLabel, maxLabel, railShape, startPoint);
    } else {
      // 水平布局
      this.fixedHorizontal(minLabel, maxLabel, railShape, startPoint);
    }
  };

  ContinueLegend.prototype.fitRailLength = function (minLabelBBox, maxLabelBBox, railBBox, railShape) {
    var isVertical = this.isVertical();
    var lengthField = isVertical ? 'height' : 'width';
    var labelCfg = this.get('label');
    var labelAlign = labelCfg.align;
    var spacing = labelCfg.spacing;
    var maxLength = this.get("max" + Object(esm["upperFirst"])(lengthField)); // get('maxWidth')

    if (maxLength) {
      var elementsLength = labelAlign === 'rail' ? railBBox[lengthField] + minLabelBBox[lengthField] + maxLabelBBox[lengthField] + spacing * 2 : railBBox[lengthField];
      var diff = elementsLength - maxLength;

      if (diff > 0) {
        // 大于限制的长度
        this.changeRailLength(railShape, lengthField, railBBox[lengthField] - diff);
      }
    }
  };

  ContinueLegend.prototype.changeRailLength = function (railShape, lengthField, length) {
    var bbox = railShape.getBBox();
    var path;

    if (lengthField === 'height') {
      path = this.getRailPath(bbox.x, bbox.y, bbox.width, length);
    } else {
      path = this.getRailPath(bbox.x, bbox.y, length, bbox.height);
    }

    railShape.attr('path', path);
  };

  ContinueLegend.prototype.changeRailPosition = function (railShape, x, y) {
    var bbox = railShape.getBBox();
    var path = this.getRailPath(x, y, bbox.width, bbox.height);
    railShape.attr('path', path);
  };

  ContinueLegend.prototype.fixedHorizontal = function (minLabel, maxLabel, railShape, startPoint) {
    var labelCfg = this.get('label');
    var labelAlign = labelCfg.align;
    var spacing = labelCfg.spacing;
    var railBBox = railShape.getBBox();
    var minLabelBBox = minLabel.getBBox();
    var maxLabelBBox = maxLabel.getBBox();
    var railHeight = railBBox.height; // 取 rail 的高度，作为高度

    this.fitRailLength(minLabelBBox, maxLabelBBox, railBBox, railShape);
    railBBox = railShape.getBBox();

    if (labelAlign === 'rail') {
      // 沿着 rail 方向
      minLabel.attr({
        x: startPoint.x,
        y: startPoint.y + railHeight / 2
      });
      this.changeRailPosition(railShape, startPoint.x + minLabelBBox.width + spacing, startPoint.y);
      maxLabel.attr({
        x: startPoint.x + minLabelBBox.width + railBBox.width + spacing * 2,
        y: startPoint.y + railHeight / 2
      });
    } else if (labelAlign === 'top') {
      minLabel.attr({
        x: startPoint.x,
        y: startPoint.y
      });
      maxLabel.attr({
        x: startPoint.x + railBBox.width,
        y: startPoint.y
      });
      this.changeRailPosition(railShape, startPoint.x, startPoint.y + minLabelBBox.height + spacing);
    } else {
      this.changeRailPosition(railShape, startPoint.x, startPoint.y);
      minLabel.attr({
        x: startPoint.x,
        y: startPoint.y + railBBox.height + spacing
      });
      maxLabel.attr({
        x: startPoint.x + railBBox.width,
        y: startPoint.y + railBBox.height + spacing
      });
    }
  };

  ContinueLegend.prototype.fixedVertail = function (minLabel, maxLabel, railShape, startPoint) {
    var labelCfg = this.get('label');
    var labelAlign = labelCfg.align;
    var spacing = labelCfg.spacing;
    var railBBox = railShape.getBBox();
    var minLabelBBox = minLabel.getBBox();
    var maxLabelBBox = maxLabel.getBBox();
    this.fitRailLength(minLabelBBox, maxLabelBBox, railBBox, railShape);
    railBBox = railShape.getBBox();

    if (labelAlign === 'rail') {
      // 沿着 rail 方向
      minLabel.attr({
        x: startPoint.x,
        y: startPoint.y
      });
      this.changeRailPosition(railShape, startPoint.x, startPoint.y + minLabelBBox.height + spacing);
      maxLabel.attr({
        x: startPoint.x,
        y: startPoint.y + minLabelBBox.height + railBBox.height + spacing * 2
      });
    } else if (labelAlign === 'right') {
      minLabel.attr({
        x: startPoint.x + railBBox.width + spacing,
        y: startPoint.y
      });
      this.changeRailPosition(railShape, startPoint.x, startPoint.y);
      maxLabel.attr({
        x: startPoint.x + railBBox.width + spacing,
        y: startPoint.y + railBBox.height
      });
    } else {
      // left
      var maxLabelWidth = Math.max(minLabelBBox.width, maxLabelBBox.width);
      minLabel.attr({
        x: startPoint.x,
        y: startPoint.y
      });
      this.changeRailPosition(railShape, startPoint.x + maxLabelWidth + spacing, startPoint.y);
      maxLabel.attr({
        x: startPoint.x,
        y: startPoint.y + railBBox.height
      });
    }
  };

  return ContinueLegend;
}(legend_base);

/* harmony default export */ var continuous = (continuous_ContinueLegend);
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/legend/index.js



// CONCATENATED MODULE: ../node_modules/@antv/component/esm/tooltip/css-const.js
var css_const_CONTAINER_CLASS = 'g2-tooltip';
var TITLE_CLASS = 'g2-tooltip-title';
var LIST_CLASS = 'g2-tooltip-list';
var LIST_ITEM_CLASS = 'g2-tooltip-list-item';
var MARKER_CLASS = 'g2-tooltip-marker';
var VALUE_CLASS = 'g2-tooltip-value';
var NAME_CLASS = 'g2-tooltip-name';
var CROSSHAIR_X = 'g2-tooltip-crosshair-x';
var CROSSHAIR_Y = 'g2-tooltip-crosshair-y';
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/tooltip/html-theme.js
var tooltip_html_theme_a;

 // tooltip 相关 dom 的 css 类名


/* harmony default export */ var tooltip_html_theme = (tooltip_html_theme_a = {}, // css style for tooltip
tooltip_html_theme_a["" + css_const_CONTAINER_CLASS] = {
  position: 'absolute',
  visibility: 'visible',
  // @2018-07-25 by blue.lb 这里去掉浮动，火狐上存在样式错位
  // whiteSpace: 'nowrap',
  zIndex: 8,
  transition: 'visibility 0.2s cubic-bezier(0.23, 1, 0.32, 1), ' + 'left 0.4s cubic-bezier(0.23, 1, 0.32, 1), ' + 'top 0.4s cubic-bezier(0.23, 1, 0.32, 1)',
  backgroundColor: 'rgba(255, 255, 255, 0.9)',
  boxShadow: '0px 0px 10px #aeaeae',
  borderRadius: '3px',
  color: 'rgb(87, 87, 87)',
  fontSize: '12px',
  fontFamily: util_theme.fontFamily,
  lineHeight: '20px',
  padding: '10px 10px 6px 10px'
}, tooltip_html_theme_a["" + TITLE_CLASS] = {
  marginBottom: '4px'
}, tooltip_html_theme_a["" + LIST_CLASS] = {
  margin: '0px',
  listStyleType: 'none',
  padding: '0px'
}, tooltip_html_theme_a["" + LIST_ITEM_CLASS] = {
  listStyleType: 'none',
  marginBottom: '4px'
}, tooltip_html_theme_a["" + MARKER_CLASS] = {
  width: '8px',
  height: '8px',
  borderRadius: '50%',
  display: 'inline-block',
  marginRight: '8px'
}, tooltip_html_theme_a["" + VALUE_CLASS] = {
  display: 'inline-block',
  "float": 'right',
  marginLeft: '30px'
}, tooltip_html_theme_a["" + CROSSHAIR_X] = {
  position: 'absolute',
  width: '1px',
  backgroundColor: 'rgba(0, 0, 0, 0.25)'
}, tooltip_html_theme_a["" + CROSSHAIR_Y] = {
  position: 'absolute',
  height: '1px',
  backgroundColor: 'rgba(0, 0, 0, 0.25)'
}, tooltip_html_theme_a);
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/util/align.js
// 检测各边是否超出
function getOutSides(x, y, width, height, limitBox) {
  var hits = {
    left: x < limitBox.x,
    right: x + width > limitBox.x + limitBox.width,
    top: y < limitBox.y,
    bottom: y + height > limitBox.y + limitBox.height
  };
  return hits;
}
function getPointByPosition(x, y, offset, width, height, position) {
  var px = x;
  var py = y;

  switch (position) {
    case 'left':
      // left center
      px = x - width - offset;
      py = y - height / 2;
      break;

    case 'right':
      px = x + offset;
      py = y - height / 2;
      break;

    case 'top':
      px = x - width / 2;
      py = y - height - offset;
      break;

    case 'bottom':
      // bottom
      px = x - width / 2;
      py = y + offset;
      break;

    default:
      // auto, 在 top-right
      px = x + offset;
      py = y - height - offset;
      break;
  }

  return {
    x: px,
    y: py
  };
}
function getAlignPoint(x, y, offset, width, height, position, limitBox) {
  var point = getPointByPosition(x, y, offset, width, height, position);

  if (limitBox) {
    var outSides = getOutSides(point.x, point.y, width, height, limitBox);

    if (position === 'auto') {
      // 如果是 auto，默认 tooltip 在右上角，仅需要判定右侧和上测冲突即可
      if (outSides.right) {
        point.x = x - width - offset;
      }

      if (outSides.top) {
        point.y = y + offset;
      }
    } else if (position === 'top' || position === 'bottom') {
      if (outSides.left) {
        // 左侧躲避
        point.x = limitBox.x;
      }

      if (outSides.right) {
        // 右侧躲避
        point.x = limitBox.x + limitBox.width - width;
      }

      if (position === 'top' && outSides.top) {
        // 如果上面对齐检测上面，不检测下面
        point.y = y + offset;
      }

      if (position === 'bottom' && outSides.bottom) {
        point.y = y - height - offset;
      }
    } else {
      // 检测左右位置
      if (outSides.top) {
        point.y = limitBox.y;
      }

      if (outSides.bottom) {
        point.y = limitBox.y + limitBox.height - height;
      }

      if (position === 'left' && outSides.left) {
        point.x = x + offset;
      }

      if (position === 'right' && outSides.right) {
        point.x = x - width - offset;
      }
    }
  }

  return point;
}
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/tooltip/html.js










function hasOneKey(obj, keys) {
  var result = false;
  Object(esm["each"])(keys, function (key) {
    if (Object(esm["hasKey"])(obj, key)) {
      result = true;
      return false;
    }
  });
  return result;
}

var html_Tooltip =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Tooltip, _super);

  function Tooltip() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Tooltip.prototype.getDefaultCfg = function () {
    var cfg = _super.prototype.getDefaultCfg.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, cfg), {
      name: 'tooltip',
      type: 'html',
      x: 0,
      y: 0,
      items: [],
      customContent: null,
      containerTpl: "<div class=\"" + css_const_CONTAINER_CLASS + "\"><div class=\"" + TITLE_CLASS + "\"></div><ul class=\"" + LIST_CLASS + "\"></ul></div>",
      itemTpl: "<li class=\"" + LIST_ITEM_CLASS + "\" data-index={index}>\n          <span class=\"" + MARKER_CLASS + "\" style=\"background:{color}\"></span>\n          <span class=\"" + NAME_CLASS + "\">{name}</span>:\n          <span class=\"" + VALUE_CLASS + "\">{value}</span>\n        </li>",
      xCrosshairTpl: "<div class=\"" + CROSSHAIR_X + "\"></div>",
      yCrosshairTpl: "<div class=\"" + CROSSHAIR_Y + "\"></div>",
      title: null,
      showTitle: true,

      /**
       * tooltip 限制的区域
       * @type {Region}
       */
      region: null,
      // crosshair 的限制区域
      crosshairsRegion: null,
      containerClassName: css_const_CONTAINER_CLASS,
      // x, y, xy
      crosshairs: null,
      offset: 10,
      position: 'right',
      domStyles: null,
      defaultStyles: tooltip_html_theme
    });
  }; // tooltip 渲染时，渲染 title，items 和 corosshairs


  Tooltip.prototype.render = function () {
    if (this.get('customContent')) {
      this.renderCustomContent();
    } else {
      this.resetTitle();
      this.renderItems();
    } // 绘制完成后，再定位


    this.resetPosition();
  }; // 复写清空函数，因为有模板的存在，所以默认的写法不合适


  Tooltip.prototype.clear = function () {
    // 由于 crosshair 没有在 container 内，所以需要单独清理
    this.clearCrosshairs();
    this.setTitle(''); // 清空标题

    this.clearItemDoms();
  };

  Tooltip.prototype.show = function () {
    var container = this.getContainer();

    if (!container || this.destroyed) {
      // 防止容器不存在或者被销毁时报错
      return;
    }

    this.set('visible', true);
    modifyCSS(container, {
      visibility: 'visible'
    });
    this.setCrossHairsVisible(true);
  };

  Tooltip.prototype.hide = function () {
    var container = this.getContainer(); // relative: https://github.com/antvis/g2/issues/1221

    if (!container || this.destroyed) {
      return;
    }

    this.set('visible', false);
    modifyCSS(container, {
      visibility: 'hidden'
    });
    this.setCrossHairsVisible(false);
  }; // 实现 IPointLocation 的接口


  Tooltip.prototype.getLocation = function () {
    return {
      x: this.get('x'),
      y: this.get('y')
    };
  }; // 实现 IPointLocation 的接口


  Tooltip.prototype.setLocation = function (point) {
    this.set('x', point.x);
    this.set('y', point.y);
    this.resetPosition();
  };

  Tooltip.prototype.setCrossHairsVisible = function (visible) {
    var display = visible ? '' : 'none';
    var xCrosshairDom = this.get('xCrosshairDom');
    var yCrosshairDom = this.get('yCrosshairDom');
    xCrosshairDom && modifyCSS(xCrosshairDom, {
      display: display
    });
    yCrosshairDom && modifyCSS(yCrosshairDom, {
      display: display
    });
  }; // 如有 customContent 则根据 customContent 设置 container


  Tooltip.prototype.initContainer = function () {
    _super.prototype.initContainer.call(this);

    if (this.get('customContent')) {
      if (this.get('container')) {
        this.get('container').remove();
      }

      var container = this.getHtmlContentNode();
      this.get('parent').appendChild(container);
      this.set('container', container);
      this.resetStyles();
      this.applyStyles();
    }
  }; // 更新属性的同时，可能会引起 DOM 的变化，这里对可能引起 DOM 变化的场景做了处理


  Tooltip.prototype.updateInner = function (cfg) {
    if (this.get('customContent')) {
      this.renderCustomContent();
    } else {
      // 更新标题
      if (hasOneKey(cfg, ['title', 'showTitle'])) {
        this.resetTitle();
      } // 更新内容


      if (Object(esm["hasKey"])(cfg, 'items')) {
        this.renderItems();
      }
    }

    _super.prototype.updateInner.call(this, cfg);
  };

  Tooltip.prototype.initDom = function () {
    this.cacheDoms();
  }; // 清理 DOM


  Tooltip.prototype.removeDom = function () {
    _super.prototype.removeDom.call(this);

    this.clearCrosshairs();
  }; // 调整位置


  Tooltip.prototype.resetPosition = function () {
    var x = this.get('x');
    var y = this.get('y');
    var offset = this.get('offset');

    var _a = this.getOffset(),
        offsetX = _a.offsetX,
        offsetY = _a.offsetY;

    var position = this.get('position');
    var region = this.get('region');
    var container = this.getContainer();
    var bbox = this.getBBox();
    var width = bbox.width,
        height = bbox.height;
    var limitBox;

    if (region) {
      // 不限制位置
      limitBox = regionToBBox(region);
    }

    var point = getAlignPoint(x, y, offset, width, height, position, limitBox);
    modifyCSS(container, {
      left: toPx(point.x + offsetX),
      top: toPx(point.y + offsetY)
    });
    this.resetCrosshairs();
  }; // 根据 customContent 渲染


  Tooltip.prototype.renderCustomContent = function () {
    var node = this.getHtmlContentNode();
    var parent = this.get('parent');
    var curContainer = this.get('container');

    if (curContainer && curContainer.parentNode === parent) {
      parent.replaceChild(node, curContainer);
    } else {
      parent.appendChild(node);
    }

    this.set('container', node);
    this.resetStyles();
    this.applyStyles();
  };

  Tooltip.prototype.getHtmlContentNode = function () {
    var node;
    var customContent = this.get('customContent');

    if (customContent) {
      var elem = customContent(this.get('title'), this.get('items'));

      if (Object(esm["isElement"])(elem)) {
        node = elem;
      } else {
        node = createDom(elem);
      }
    }

    return node;
  }; // 缓存模板设置的各种 DOM


  Tooltip.prototype.cacheDoms = function () {
    var container = this.getContainer();
    var titleDom = container.getElementsByClassName(TITLE_CLASS)[0];
    var listDom = container.getElementsByClassName(LIST_CLASS)[0];
    this.set('titleDom', titleDom);
    this.set('listDom', listDom);
  }; // 重置 title


  Tooltip.prototype.resetTitle = function () {
    var title = this.get('title');
    var showTitle = this.get('showTitle');

    if (showTitle && title) {
      this.setTitle(title);
    } else {
      this.setTitle('');
    }
  }; // 设置 title 文本


  Tooltip.prototype.setTitle = function (text) {
    var titleDom = this.get('titleDom');

    if (titleDom) {
      titleDom.innerText = text;
    }
  }; // 终止 crosshair


  Tooltip.prototype.resetCrosshairs = function () {
    var crosshairsRegion = this.get('crosshairsRegion');
    var crosshairs = this.get('crosshairs');

    if (!crosshairsRegion || !crosshairs) {
      // 不显示 crosshair，都移除，没有设定 region 也都移除掉
      this.clearCrosshairs();
    } else {
      var crosshairBox = regionToBBox(crosshairsRegion);
      var xCrosshairDom = this.get('xCrosshairDom');
      var yCrosshairDom = this.get('yCrosshairDom');

      if (crosshairs === 'x') {
        this.resetCrosshair('x', crosshairBox); // 仅显示 x 的 crosshair，y 移除

        if (yCrosshairDom) {
          yCrosshairDom.remove();
          this.set('yCrosshairDom', null);
        }
      } else if (crosshairs === 'y') {
        this.resetCrosshair('y', crosshairBox); // 仅显示 y 的 crosshair，x 移除

        if (xCrosshairDom) {
          xCrosshairDom.remove();
          this.set('xCrosshairDom', null);
        }
      } else {
        this.resetCrosshair('x', crosshairBox);
        this.resetCrosshair('y', crosshairBox);
      }

      this.setCrossHairsVisible(this.get('visible'));
    }
  }; // 设定 crosshair 的位置，需要区分 x,y


  Tooltip.prototype.resetCrosshair = function (name, bbox) {
    var croshairDom = this.checkCrosshair(name);
    var value = this.get(name);

    if (name === 'x') {
      modifyCSS(croshairDom, {
        left: toPx(value),
        top: toPx(bbox.y),
        height: toPx(bbox.height)
      });
    } else {
      modifyCSS(croshairDom, {
        top: toPx(value),
        left: toPx(bbox.x),
        width: toPx(bbox.width)
      });
    }
  }; // 如果 crosshair 对应的 dom 不存在，则创建


  Tooltip.prototype.checkCrosshair = function (name) {
    var domName = name + "CrosshairDom";
    var tplName = name + "CrosshairTpl";
    var constName = "CROSSHAIR_" + name.toUpperCase();
    var styleName = tooltip_css_const_namespaceObject[constName];
    var croshairDom = this.get(domName);
    var parent = this.get('parent');

    if (!croshairDom) {
      croshairDom = createDom(this.get(tplName)); // 创建

      this.applyStyle(styleName, croshairDom); // 设置初始样式

      parent.appendChild(croshairDom); // 添加到跟 tooltip 同级的目录下

      this.set(domName, croshairDom);
    }

    return croshairDom;
  };

  Tooltip.prototype.renderItems = function () {
    this.clearItemDoms();
    var items = this.get('items');
    var itemTpl = this.get('itemTpl');
    var listDom = this.get('listDom');

    if (listDom) {
      Object(esm["each"])(items, function (item) {
        var color = color_util_esm.toCSSGradient(item.color);

        var substituteObj = Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, item), {
          color: color
        });

        var domStr = Object(esm["substitute"])(itemTpl, substituteObj);
        var itemDom = createDom(domStr);
        listDom.appendChild(itemDom);
      });
      this.applyChildrenStyles(listDom, this.get('domStyles'));
    }
  };

  Tooltip.prototype.clearItemDoms = function () {
    if (this.get('listDom')) {
      clearDom(this.get('listDom'));
    }
  };

  Tooltip.prototype.clearCrosshairs = function () {
    var xCrosshairDom = this.get('xCrosshairDom');
    var yCrosshairDom = this.get('yCrosshairDom');
    xCrosshairDom && xCrosshairDom.remove();
    yCrosshairDom && yCrosshairDom.remove();
    this.set('xCrosshairDom', null);
    this.set('yCrosshairDom', null);
  };

  return Tooltip;
}(html_component);

/* harmony default export */ var tooltip_html = (html_Tooltip);
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/tooltip/index.js

// CONCATENATED MODULE: ../node_modules/@antv/component/esm/trend/constant.js
var BACKGROUND_STYLE = {
  // fill: 'red',
  opacity: 0
};
var LINE_STYLE = {
  stroke: '#C5C5C5',
  strokeOpacity: 0.85
};
var AREA_STYLE = {
  fill: '#CACED4',
  opacity: 0.85
};
// EXTERNAL MODULE: ../node_modules/@antv/util/lib/each.js
var each = __webpack_require__("mU+h");
var each_default = /*#__PURE__*/__webpack_require__.n(each);

// EXTERNAL MODULE: ../node_modules/@antv/util/lib/is-array.js
var is_array = __webpack_require__("QAqn");
var is_array_default = /*#__PURE__*/__webpack_require__.n(is_array);

// EXTERNAL MODULE: ../node_modules/@antv/util/lib/is-string.js
var is_string = __webpack_require__("bLny");
var is_string_default = /*#__PURE__*/__webpack_require__.n(is_string);

// CONCATENATED MODULE: ../node_modules/@antv/path-util/esm/parse-path.js




var regexTags = /[MLHVQTCSAZ]([^MLHVQTCSAZ]*)/ig;
var regexDot = /[^\s\,]+/ig;

function parse_path_parsePath(p) {
  var path = p || [];

  if (is_array_default()(path)) {
    return path;
  }

  if (is_string_default()(path)) {
    path = path.match(regexTags);
    each_default()(path, function (item, index) {
      // @ts-ignore
      item = item.match(regexDot);

      if (item[0].length > 1) {
        var tag = item[0].charAt(0); // @ts-ignore

        item.splice(1, 0, item[0].substr(1)); // @ts-ignore

        item[0] = tag;
      } // @ts-ignore


      each_default()(item, function (sub, i) {
        if (!isNaN(sub)) {
          // @ts-ignore
          item[i] = +sub;
        }
      }); // @ts-ignore

      path[index] = item;
    });
    return path;
  }
}

/* harmony default export */ var parse_path = (parse_path_parsePath);
// CONCATENATED MODULE: ../node_modules/@antv/path-util/esm/catmull-rom-2-bezier.js
// http://schepers.cc/getting-to-the-point
function catmullRom2Bezier(crp, z) {
  var d = []; // @ts-ignore

  for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {
    var p = [{
      x: +crp[i - 2],
      y: +crp[i - 1]
    }, {
      x: +crp[i],
      y: +crp[i + 1]
    }, {
      x: +crp[i + 2],
      y: +crp[i + 3]
    }, {
      x: +crp[i + 4],
      y: +crp[i + 5]
    }];

    if (z) {
      if (!i) {
        p[0] = {
          x: +crp[iLen - 2],
          y: +crp[iLen - 1]
        };
      } else if (iLen - 4 === i) {
        p[3] = {
          x: +crp[0],
          y: +crp[1]
        };
      } else if (iLen - 2 === i) {
        p[2] = {
          x: +crp[0],
          y: +crp[1]
        };
        p[3] = {
          x: +crp[2],
          y: +crp[3]
        };
      }
    } else {
      if (iLen - 4 === i) {
        p[3] = p[2];
      } else if (!i) {
        p[0] = {
          x: +crp[i],
          y: +crp[i + 1]
        };
      }
    }

    d.push(['C', (-p[0].x + 6 * p[1].x + p[2].x) / 6, (-p[0].y + 6 * p[1].y + p[2].y) / 6, (p[1].x + 6 * p[2].x - p[3].x) / 6, (p[1].y + 6 * p[2].y - p[3].y) / 6, p[2].x, p[2].y]);
  }

  return d;
}
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.reduce.js
var es6_array_reduce = __webpack_require__("3y5y");

// CONCATENATED MODULE: ../node_modules/@antv/path-util/esm/fill-path.js



function decasteljau(points, t) {
  var left = [];
  var right = [];

  function recurse(points, t) {
    if (points.length === 1) {
      left.push(points[0]);
      right.push(points[0]);
    } else {
      var middlePoints = [];

      for (var i = 0; i < points.length - 1; i++) {
        if (i === 0) {
          left.push(points[0]);
        }

        if (i === points.length - 2) {
          right.push(points[i + 1]);
        }

        middlePoints[i] = [(1 - t) * points[i][0] + t * points[i + 1][0], (1 - t) * points[i][1] + t * points[i + 1][1]];
      }

      recurse(middlePoints, t);
    }
  }

  if (points.length) {
    recurse(points, t);
  }

  return {
    left: left,
    right: right.reverse()
  };
}

function splitCurve(start, end, count) {
  var points = [[start[1], start[2]]];
  count = count || 2;
  var segments = [];

  if (end[0] === 'A') {
    points.push(end[6]);
    points.push(end[7]);
  } else if (end[0] === 'C') {
    points.push([end[1], end[2]]);
    points.push([end[3], end[4]]);
    points.push([end[5], end[6]]);
  } else if (end[0] === 'S' || end[0] === 'Q') {
    points.push([end[1], end[2]]);
    points.push([end[3], end[4]]);
  } else {
    points.push([end[1], end[2]]);
  }

  var leftSegments = points;
  var t = 1 / count;

  for (var i = 0; i < count - 1; i++) {
    var rt = t / (1 - t * i);
    var split = decasteljau(leftSegments, rt);
    segments.push(split.left);
    leftSegments = split.right;
  }

  segments.push(leftSegments);
  var result = segments.map(function (segment) {
    var cmd = [];

    if (segment.length === 4) {
      cmd.push('C');
      cmd = cmd.concat(segment[2]);
    }

    if (segment.length >= 3) {
      if (segment.length === 3) {
        cmd.push('Q');
      }

      cmd = cmd.concat(segment[1]);
    }

    if (segment.length === 2) {
      cmd.push('L');
    }

    cmd = cmd.concat(segment[segment.length - 1]);
    return cmd;
  });
  return result;
}

function splitSegment(start, end, count) {
  if (count === 1) {
    return [[].concat(start)];
  }

  var segments = [];

  if (end[0] === 'L' || end[0] === 'C' || end[0] === 'Q') {
    segments = segments.concat(splitCurve(start, end, count));
  } else {
    var temp = [].concat(start);

    if (temp[0] === 'M') {
      temp[0] = 'L';
    }

    for (var i = 0; i <= count - 1; i++) {
      segments.push(temp);
    }
  }

  return segments;
}

function fillPath(source, target) {
  if (source.length === 1) {
    return source;
  }

  var sourceLen = source.length - 1;
  var targetLen = target.length - 1;
  var ratio = sourceLen / targetLen;
  var segmentsToFill = [];

  if (source.length === 1 && source[0][0] === 'M') {
    for (var i = 0; i < targetLen - sourceLen; i++) {
      source.push(source[0]);
    }

    return source;
  }

  for (var i = 0; i < targetLen; i++) {
    var index = Math.floor(ratio * i);
    segmentsToFill[index] = (segmentsToFill[index] || 0) + 1;
  }

  var filled = segmentsToFill.reduce(function (filled, count, i) {
    if (i === sourceLen) {
      return filled.concat(source[sourceLen]);
    }

    return filled.concat(splitSegment(source[i], source[i + 1], count));
  }, []);
  filled.unshift(source[0]);

  if (target[targetLen] === 'Z' || target[targetLen] === 'z') {
    filled.push('Z');
  }

  return filled;
}
// EXTERNAL MODULE: ../node_modules/@antv/util/lib/is-equal.js
var is_equal = __webpack_require__("quyU");
var is_equal_default = /*#__PURE__*/__webpack_require__.n(is_equal);

// CONCATENATED MODULE: ../node_modules/@antv/path-util/esm/fill-path-by-diff.js


function getMinDiff(del, add, modify) {
  var type = null;
  var min = modify;

  if (add < min) {
    min = add;
    type = 'add';
  }

  if (del < min) {
    min = del;
    type = 'del';
  }

  return {
    type: type,
    min: min
  };
}
/*
 * https://en.wikipedia.org/wiki/Levenshtein_distance
 * 计算两条path的编辑距离
 */


var fill_path_by_diff_levenshteinDistance = function levenshteinDistance(source, target) {
  var sourceLen = source.length;
  var targetLen = target.length;
  var sourceSegment, targetSegment;
  var temp = 0;

  if (sourceLen === 0 || targetLen === 0) {
    return null;
  }

  var dist = [];

  for (var i = 0; i <= sourceLen; i++) {
    dist[i] = [];
    dist[i][0] = {
      min: i
    };
  }

  for (var j = 0; j <= targetLen; j++) {
    dist[0][j] = {
      min: j
    };
  }

  for (var i = 1; i <= sourceLen; i++) {
    sourceSegment = source[i - 1];

    for (var j = 1; j <= targetLen; j++) {
      targetSegment = target[j - 1];

      if (is_equal_default()(sourceSegment, targetSegment)) {
        temp = 0;
      } else {
        temp = 1;
      }

      var del = dist[i - 1][j].min + 1;
      var add = dist[i][j - 1].min + 1;
      var modify = dist[i - 1][j - 1].min + temp;
      dist[i][j] = getMinDiff(del, add, modify);
    }
  }

  return dist;
};

function fillPathByDiff(source, target) {
  var diffMatrix = fill_path_by_diff_levenshteinDistance(source, target);
  var sourceLen = source.length;
  var targetLen = target.length;
  var changes = [];
  var index = 1;
  var minPos = 1; // 如果source和target不是完全不相等
  // @ts-ignore

  if (diffMatrix[sourceLen][targetLen] !== sourceLen) {
    // 获取从source到target所需改动
    for (var i = 1; i <= sourceLen; i++) {
      var min = diffMatrix[i][i].min;
      minPos = i;

      for (var j = index; j <= targetLen; j++) {
        if (diffMatrix[i][j].min < min) {
          min = diffMatrix[i][j].min;
          minPos = j;
        }
      }

      index = minPos;

      if (diffMatrix[i][index].type) {
        changes.push({
          index: i - 1,
          type: diffMatrix[i][index].type
        });
      }
    } // 对source进行增删path


    for (var i = changes.length - 1; i >= 0; i--) {
      index = changes[i].index;

      if (changes[i].type === 'add') {
        // @ts-ignore
        source.splice(index, 0, [].concat(source[index]));
      } else {
        // @ts-ignore
        source.splice(index, 1);
      }
    }
  } // source尾部补齐


  sourceLen = source.length;

  if (sourceLen < targetLen) {
    for (var i = 0; i < targetLen - sourceLen; i++) {
      if (source[sourceLen - 1][0] === 'z' || source[sourceLen - 1][0] === 'Z') {
        // @ts-ignore
        source.splice(sourceLen - 2, 0, source[sourceLen - 2]);
      } else {
        // @ts-ignore
        source.push(source[sourceLen - 1]);
      }
    }
  }

  return source;
}
// CONCATENATED MODULE: ../node_modules/@antv/path-util/esm/format-path.js


/*
 * 抽取pathSegment中的关键点
 * M,L,A,Q,H,V一个端点
 * Q, S抽取一个端点，一个控制点
 * C抽取一个端点，两个控制点
 */
function _getSegmentPoints(segment) {
  var points = [];

  switch (segment[0]) {
    case 'M':
      points.push([segment[1], segment[2]]);
      break;

    case 'L':
      points.push([segment[1], segment[2]]);
      break;

    case 'A':
      points.push([segment[6], segment[7]]);
      break;

    case 'Q':
      points.push([segment[3], segment[4]]);
      points.push([segment[1], segment[2]]);
      break;

    case 'T':
      points.push([segment[1], segment[2]]);
      break;

    case 'C':
      points.push([segment[5], segment[6]]);
      points.push([segment[1], segment[2]]);
      points.push([segment[3], segment[4]]);
      break;

    case 'S':
      points.push([segment[3], segment[4]]);
      points.push([segment[1], segment[2]]);
      break;

    case 'H':
      points.push([segment[1], segment[1]]);
      break;

    case 'V':
      points.push([segment[1], segment[1]]);
      break;

    default:
  }

  return points;
} // 将两个点均分成count个点


function _splitPoints(points, former, count) {
  var result = [].concat(points);
  var index;
  var t = 1 / (count + 1);

  var formerEnd = _getSegmentPoints(former)[0];

  for (var i = 1; i <= count; i++) {
    t *= i;
    index = Math.floor(points.length * t);

    if (index === 0) {
      result.unshift([formerEnd[0] * t + points[index][0] * (1 - t), formerEnd[1] * t + points[index][1] * (1 - t)]);
    } else {
      result.splice(index, 0, [formerEnd[0] * t + points[index][0] * (1 - t), formerEnd[1] * t + points[index][1] * (1 - t)]);
    }
  }

  return result;
}

function formatPath(fromPath, toPath) {
  if (fromPath.length <= 1) {
    return fromPath;
  }

  var points;

  for (var i = 0; i < toPath.length; i++) {
    if (fromPath[i][0] !== toPath[i][0]) {
      // 获取fromPath的pathSegment的端点，根据toPath的指令对其改造
      points = _getSegmentPoints(fromPath[i]);

      switch (toPath[i][0]) {
        case 'M':
          fromPath[i] = ['M'].concat(points[0]);
          break;

        case 'L':
          fromPath[i] = ['L'].concat(points[0]);
          break;

        case 'A':
          fromPath[i] = [].concat(toPath[i]);
          fromPath[i][6] = points[0][0];
          fromPath[i][7] = points[0][1];
          break;

        case 'Q':
          if (points.length < 2) {
            if (i > 0) {
              points = _splitPoints(points, fromPath[i - 1], 1);
            } else {
              fromPath[i] = toPath[i];
              break;
            }
          }

          fromPath[i] = ['Q'].concat(points.reduce(function (arr, i) {
            return arr.concat(i);
          }, []));
          break;

        case 'T':
          fromPath[i] = ['T'].concat(points[0]);
          break;

        case 'C':
          if (points.length < 3) {
            if (i > 0) {
              points = _splitPoints(points, fromPath[i - 1], 2);
            } else {
              fromPath[i] = toPath[i];
              break;
            }
          }

          fromPath[i] = ['C'].concat(points.reduce(function (arr, i) {
            return arr.concat(i);
          }, []));
          break;

        case 'S':
          if (points.length < 2) {
            if (i > 0) {
              points = _splitPoints(points, fromPath[i - 1], 1);
            } else {
              fromPath[i] = toPath[i];
              break;
            }
          }

          fromPath[i] = ['S'].concat(points.reduce(function (arr, i) {
            return arr.concat(i);
          }, []));
          break;

        default:
          fromPath[i] = toPath[i];
      }
    }
  }

  return fromPath;
}
// CONCATENATED MODULE: ../node_modules/@antv/path-util/esm/rect-path.js
function rectPath(x, y, w, h, r) {
  if (r) {
    return [['M', +x + +r, y], ['l', w - r * 2, 0], ['a', r, r, 0, 0, 1, r, r], ['l', 0, h - r * 2], ['a', r, r, 0, 0, 1, -r, r], ['l', r * 2 - w, 0], ['a', r, r, 0, 0, 1, -r, -r], ['l', 0, r * 2 - h], ['a', r, r, 0, 0, 1, r, -r], ['z']];
  }

  return [['M', x, y], ['l', w, 0], ['l', 0, h], ['l', -w, 0], ['z']]; // res.parsePathArray = parsePathArray;
}
// CONCATENATED MODULE: ../node_modules/@antv/path-util/esm/parse-path-string.js



var SPACES = "\t\n\x0B\f\r \xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029";
var PATH_COMMAND = new RegExp('([a-z])[' + SPACES + ',]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[' + SPACES + ']*,?[' + SPACES + ']*)+)', 'ig');
var PATH_VALUES = new RegExp('(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[' + SPACES + ']*,?[' + SPACES + ']*', 'ig'); // Parses given path string into an array of arrays of path segments

function parsePathString(pathString) {
  if (!pathString) {
    return null;
  }

  if (is_array_default()(pathString)) {
    return pathString;
  }

  var paramCounts = {
    a: 7,
    c: 6,
    o: 2,
    h: 1,
    l: 2,
    m: 2,
    r: 4,
    q: 4,
    s: 4,
    t: 2,
    v: 1,
    u: 3,
    z: 0
  };
  var data = [];
  String(pathString).replace(PATH_COMMAND, function (a, b, c) {
    var params = [];
    var name = b.toLowerCase();
    c.replace(PATH_VALUES, function (a, b) {
      b && params.push(+b);
    });

    if (name === 'm' && params.length > 2) {
      data.push([b].concat(params.splice(0, 2)));
      name = 'l';
      b = b === 'm' ? 'l' : 'L';
    }

    if (name === 'o' && params.length === 1) {
      data.push([b, params[0]]);
    }

    if (name === 'r') {
      data.push([b].concat(params));
    } else {
      while (params.length >= paramCounts[name]) {
        data.push([b].concat(params.splice(0, paramCounts[name])));

        if (!paramCounts[name]) {
          break;
        }
      }
    }

    return '';
  });
  return data;
}
// CONCATENATED MODULE: ../node_modules/@antv/path-util/esm/path-2-absolute.js


var REGEX_MD = /[a-z]/;

function toSymmetry(p, c) {
  return [c[0] + (c[0] - p[0]), c[1] + (c[1] - p[1])];
}

function pathToAbsolute(pathString) {
  var pathArray = parsePathString(pathString);

  if (!pathArray || !pathArray.length) {
    return [['M', 0, 0]];
  }

  var needProcess = false; // 如果存在小写的命令或者 V,H,T,S 则需要处理

  for (var i = 0; i < pathArray.length; i++) {
    var cmd = pathArray[i][0]; // 如果存在相对位置的命令，则中断返回

    if (REGEX_MD.test(cmd) || ['V', 'H', 'T', 'S'].indexOf(cmd) >= 0) {
      needProcess = true;
      break;
    }
  } // 如果不存在相对命令，则直接返回
  // 如果在业务上都写绝对路径，这种方式最快，仅做了一次检测


  if (!needProcess) {
    return pathArray;
  }

  var res = [];
  var x = 0;
  var y = 0;
  var mx = 0;
  var my = 0;
  var start = 0;
  var pa0;
  var dots;
  var first = pathArray[0];

  if (first[0] === 'M' || first[0] === 'm') {
    x = +first[1];
    y = +first[2];
    mx = x;
    my = y;
    start++;
    res[0] = ['M', x, y];
  }

  for (var i = start, ii = pathArray.length; i < ii; i++) {
    var pa = pathArray[i];
    var preParams = res[i - 1]; // 取前一个已经处理后的节点，否则会出现问题

    var r = [];
    var cmd = pa[0];
    var upCmd = cmd.toUpperCase();

    if (cmd !== upCmd) {
      r[0] = upCmd;

      switch (upCmd) {
        case 'A':
          r[1] = pa[1];
          r[2] = pa[2];
          r[3] = pa[3];
          r[4] = pa[4];
          r[5] = pa[5];
          r[6] = +pa[6] + x;
          r[7] = +pa[7] + y;
          break;

        case 'V':
          r[1] = +pa[1] + y;
          break;

        case 'H':
          r[1] = +pa[1] + x;
          break;

        case 'M':
          mx = +pa[1] + x;
          my = +pa[2] + y;
          break;
        // for lint

        default:
          for (var j = 1, jj = pa.length; j < jj; j++) {
            r[j] = +pa[j] + (j % 2 ? x : y);
          }

      }
    } else {
      // 如果本来已经大写，则不处理
      r = pathArray[i];
    } // 需要在外面统一做，同时处理 V,H,S,T 等特殊指令


    switch (upCmd) {
      case 'Z':
        x = +mx;
        y = +my;
        break;

      case 'H':
        x = r[1];
        r = ['L', x, y];
        break;

      case 'V':
        y = r[1];
        r = ['L', x, y];
        break;

      case 'T':
        x = r[1];
        y = r[2]; // 以 x, y 为中心的，上一个控制点的对称点
        // 需要假设上一个节点的命令为 Q

        var symetricT = toSymmetry([preParams[1], preParams[2]], [preParams[3], preParams[4]]);
        r = ['Q', symetricT[0], symetricT[1], x, y];
        break;

      case 'S':
        x = r[r.length - 2];
        y = r[r.length - 1]; // 以 x,y 为中心，取上一个控制点，
        // 需要假设上一个线段为 C 或者 S

        var length_1 = preParams.length;
        var symetricS = toSymmetry([preParams[length_1 - 4], preParams[length_1 - 3]], [preParams[length_1 - 2], preParams[length_1 - 1]]);
        r = ['C', symetricS[0], symetricS[1], r[1], r[2], x, y];
        break;

      case 'M':
        mx = r[r.length - 2];
        my = r[r.length - 1];
        break;
      // for lint

      default:
        x = r[r.length - 2];
        y = r[r.length - 1];
    }

    res.push(r);
  }

  return res;
}
// CONCATENATED MODULE: ../node_modules/@antv/path-util/esm/path-2-curve.js




var a2c = function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {
  // for more information of where this math came from visit:
  // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes
  if (rx === ry) {
    rx += 1;
  }

  var _120 = Math.PI * 120 / 180;

  var rad = Math.PI / 180 * (+angle || 0);
  var res = [];
  var xy;
  var f1;
  var f2;
  var cx;
  var cy;

  var rotate = function rotate(x, y, rad) {
    var X = x * Math.cos(rad) - y * Math.sin(rad);
    var Y = x * Math.sin(rad) + y * Math.cos(rad);
    return {
      x: X,
      y: Y
    };
  };

  if (!recursive) {
    xy = rotate(x1, y1, -rad);
    x1 = xy.x;
    y1 = xy.y;
    xy = rotate(x2, y2, -rad);
    x2 = xy.x;
    y2 = xy.y;

    if (x1 === x2 && y1 === y2) {
      // 若弧的起始点和终点重叠则错开一点
      x2 += 1;
      y2 += 1;
    } // const cos = Math.cos(Math.PI / 180 * angle);
    // const sin = Math.sin(Math.PI / 180 * angle);


    var x = (x1 - x2) / 2;
    var y = (y1 - y2) / 2;
    var h = x * x / (rx * rx) + y * y / (ry * ry);

    if (h > 1) {
      h = Math.sqrt(h);
      rx = h * rx;
      ry = h * ry;
    }

    var rx2 = rx * rx;
    var ry2 = ry * ry;
    var k = (large_arc_flag === sweep_flag ? -1 : 1) * Math.sqrt(Math.abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x)));
    cx = k * rx * y / ry + (x1 + x2) / 2;
    cy = k * -ry * x / rx + (y1 + y2) / 2;
    f1 = Math.asin(Number(((y1 - cy) / ry).toFixed(9)));
    f2 = Math.asin(Number(((y2 - cy) / ry).toFixed(9)));
    f1 = x1 < cx ? Math.PI - f1 : f1;
    f2 = x2 < cx ? Math.PI - f2 : f2;
    f1 < 0 && (f1 = Math.PI * 2 + f1);
    f2 < 0 && (f2 = Math.PI * 2 + f2);

    if (sweep_flag && f1 > f2) {
      f1 = f1 - Math.PI * 2;
    }

    if (!sweep_flag && f2 > f1) {
      f2 = f2 - Math.PI * 2;
    }
  } else {
    f1 = recursive[0];
    f2 = recursive[1];
    cx = recursive[2];
    cy = recursive[3];
  }

  var df = f2 - f1;

  if (Math.abs(df) > _120) {
    var f2old = f2;
    var x2old = x2;
    var y2old = y2;
    f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);
    x2 = cx + rx * Math.cos(f2);
    y2 = cy + ry * Math.sin(f2);
    res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);
  }

  df = f2 - f1;
  var c1 = Math.cos(f1);
  var s1 = Math.sin(f1);
  var c2 = Math.cos(f2);
  var s2 = Math.sin(f2);
  var t = Math.tan(df / 4);
  var hx = 4 / 3 * rx * t;
  var hy = 4 / 3 * ry * t;
  var m1 = [x1, y1];
  var m2 = [x1 + hx * s1, y1 - hy * c1];
  var m3 = [x2 + hx * s2, y2 - hy * c2];
  var m4 = [x2, y2];
  m2[0] = 2 * m1[0] - m2[0];
  m2[1] = 2 * m1[1] - m2[1];

  if (recursive) {
    return [m2, m3, m4].concat(res);
  }

  res = [m2, m3, m4].concat(res).join().split(',');
  var newres = [];

  for (var i = 0, ii = res.length; i < ii; i++) {
    newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;
  }

  return newres;
};

var l2c = function l2c(x1, y1, x2, y2) {
  return [x1, y1, x2, y2, x2, y2];
};

var q2c = function q2c(x1, y1, ax, ay, x2, y2) {
  var _13 = 1 / 3;

  var _23 = 2 / 3;

  return [_13 * x1 + _23 * ax, _13 * y1 + _23 * ay, _13 * x2 + _23 * ax, _13 * y2 + _23 * ay, x2, y2];
};

function pathTocurve(path, path2) {
  var p = pathToAbsolute(path);
  var p2 = path2 && pathToAbsolute(path2);
  var attrs = {
    x: 0,
    y: 0,
    bx: 0,
    by: 0,
    X: 0,
    Y: 0,
    qx: null,
    qy: null
  };
  var attrs2 = {
    x: 0,
    y: 0,
    bx: 0,
    by: 0,
    X: 0,
    Y: 0,
    qx: null,
    qy: null
  };
  var pcoms1 = []; // path commands of original path p

  var pcoms2 = []; // path commands of original path p2

  var pfirst = ''; // temporary holder for original path command

  var pcom = ''; // holder for previous path command of original path

  var ii;

  var processPath = function processPath(path, d, pcom) {
    var nx, ny;

    if (!path) {
      return ['C', d.x, d.y, d.x, d.y, d.x, d.y];
    }

    !(path[0] in {
      T: 1,
      Q: 1
    }) && (d.qx = d.qy = null);

    switch (path[0]) {
      case 'M':
        d.X = path[1];
        d.Y = path[2];
        break;

      case 'A':
        path = ['C'].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));
        break;

      case 'S':
        if (pcom === 'C' || pcom === 'S') {
          // In "S" case we have to take into account, if the previous command is C/S.
          nx = d.x * 2 - d.bx; // And reflect the previous

          ny = d.y * 2 - d.by; // command's control point relative to the current point.
        } else {
          // or some else or nothing
          nx = d.x;
          ny = d.y;
        }

        path = ['C', nx, ny].concat(path.slice(1));
        break;

      case 'T':
        if (pcom === 'Q' || pcom === 'T') {
          // In "T" case we have to take into account, if the previous command is Q/T.
          d.qx = d.x * 2 - d.qx; // And make a reflection similar

          d.qy = d.y * 2 - d.qy; // to case "S".
        } else {
          // or something else or nothing
          d.qx = d.x;
          d.qy = d.y;
        }

        path = ['C'].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));
        break;

      case 'Q':
        d.qx = path[1];
        d.qy = path[2];
        path = ['C'].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));
        break;

      case 'L':
        path = ['C'].concat(l2c(d.x, d.y, path[1], path[2]));
        break;

      case 'H':
        path = ['C'].concat(l2c(d.x, d.y, path[1], d.y));
        break;

      case 'V':
        path = ['C'].concat(l2c(d.x, d.y, d.x, path[1]));
        break;

      case 'Z':
        path = ['C'].concat(l2c(d.x, d.y, d.X, d.Y));
        break;

      default:
        break;
    }

    return path;
  };

  var fixArc = function fixArc(pp, i) {
    if (pp[i].length > 7) {
      pp[i].shift();
      var pi = pp[i];

      while (pi.length) {
        pcoms1[i] = 'A'; // if created multiple C:s, their original seg is saved

        p2 && (pcoms2[i] = 'A'); // the same as above

        pp.splice(i++, 0, ['C'].concat(pi.splice(0, 6)));
      }

      pp.splice(i, 1);
      ii = Math.max(p.length, p2 && p2.length || 0);
    }
  };

  var fixM = function fixM(path1, path2, a1, a2, i) {
    if (path1 && path2 && path1[i][0] === 'M' && path2[i][0] !== 'M') {
      path2.splice(i, 0, ['M', a2.x, a2.y]);
      a1.bx = 0;
      a1.by = 0;
      a1.x = path1[i][1];
      a1.y = path1[i][2];
      ii = Math.max(p.length, p2 && p2.length || 0);
    }
  };

  ii = Math.max(p.length, p2 && p2.length || 0);

  for (var i = 0; i < ii; i++) {
    p[i] && (pfirst = p[i][0]); // save current path command

    if (pfirst !== 'C') {
      // C is not saved yet, because it may be result of conversion
      pcoms1[i] = pfirst; // Save current path command

      i && (pcom = pcoms1[i - 1]); // Get previous path command pcom
    }

    p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath

    if (pcoms1[i] !== 'A' && pfirst === 'C') pcoms1[i] = 'C'; // A is the only command
    // which may produce multiple C:s
    // so we have to make sure that C is also C in original path

    fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1

    if (p2) {
      // the same procedures is done to p2
      p2[i] && (pfirst = p2[i][0]);

      if (pfirst !== 'C') {
        pcoms2[i] = pfirst;
        i && (pcom = pcoms2[i - 1]);
      }

      p2[i] = processPath(p2[i], attrs2, pcom);

      if (pcoms2[i] !== 'A' && pfirst === 'C') {
        pcoms2[i] = 'C';
      }

      fixArc(p2, i);
    }

    fixM(p, p2, attrs, attrs2, i);
    fixM(p2, p, attrs2, attrs, i);
    var seg = p[i];
    var seg2 = p2 && p2[i];
    var seglen = seg.length;
    var seg2len = p2 && seg2.length;
    attrs.x = seg[seglen - 2];
    attrs.y = seg[seglen - 1];
    attrs.bx = parseFloat(seg[seglen - 4]) || attrs.x;
    attrs.by = parseFloat(seg[seglen - 3]) || attrs.y;
    attrs2.bx = p2 && (parseFloat(seg2[seg2len - 4]) || attrs2.x);
    attrs2.by = p2 && (parseFloat(seg2[seg2len - 3]) || attrs2.y);
    attrs2.x = p2 && seg2[seg2len - 2];
    attrs2.y = p2 && seg2[seg2len - 1];
  }

  return p2 ? [p, p2] : p;
}
// CONCATENATED MODULE: ../node_modules/@antv/path-util/esm/path-intersection.js




var base3 = function base3(t, p1, p2, p3, p4) {
  var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4;
  var t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;
  return t * t2 - 3 * p1 + 3 * p2;
};

var bezlen = function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {
  if (z === null) {
    z = 1;
  }

  z = z > 1 ? 1 : z < 0 ? 0 : z;
  var z2 = z / 2;
  var n = 12;
  var Tvalues = [-0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699, 0.7699, -0.9041, 0.9041, -0.9816, 0.9816];
  var Cvalues = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472];
  var sum = 0;

  for (var i = 0; i < n; i++) {
    var ct = z2 * Tvalues[i] + z2;
    var xbase = base3(ct, x1, x2, x3, x4);
    var ybase = base3(ct, y1, y2, y3, y4);
    var comb = xbase * xbase + ybase * ybase;
    sum += Cvalues[i] * Math.sqrt(comb);
  }

  return z2 * sum;
};

var curveDim = function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {
  var tvalues = [];
  var bounds = [[], []];
  var a;
  var b;
  var c;
  var t;

  for (var i = 0; i < 2; ++i) {
    if (i === 0) {
      b = 6 * x0 - 12 * x1 + 6 * x2;
      a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;
      c = 3 * x1 - 3 * x0;
    } else {
      b = 6 * y0 - 12 * y1 + 6 * y2;
      a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;
      c = 3 * y1 - 3 * y0;
    }

    if (Math.abs(a) < 1e-12) {
      if (Math.abs(b) < 1e-12) {
        continue;
      }

      t = -c / b;

      if (t > 0 && t < 1) {
        tvalues.push(t);
      }

      continue;
    }

    var b2ac = b * b - 4 * c * a;
    var sqrtb2ac = Math.sqrt(b2ac);

    if (b2ac < 0) {
      continue;
    }

    var t1 = (-b + sqrtb2ac) / (2 * a);

    if (t1 > 0 && t1 < 1) {
      tvalues.push(t1);
    }

    var t2 = (-b - sqrtb2ac) / (2 * a);

    if (t2 > 0 && t2 < 1) {
      tvalues.push(t2);
    }
  }

  var j = tvalues.length;
  var jlen = j;
  var mt;

  while (j--) {
    t = tvalues[j];
    mt = 1 - t;
    bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;
    bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;
  }

  bounds[0][jlen] = x0;
  bounds[1][jlen] = y0;
  bounds[0][jlen + 1] = x3;
  bounds[1][jlen + 1] = y3;
  bounds[0].length = bounds[1].length = jlen + 2;
  return {
    min: {
      x: Math.min.apply(0, bounds[0]),
      y: Math.min.apply(0, bounds[1])
    },
    max: {
      x: Math.max.apply(0, bounds[0]),
      y: Math.max.apply(0, bounds[1])
    }
  };
};

var intersect = function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {
  if (Math.max(x1, x2) < Math.min(x3, x4) || Math.min(x1, x2) > Math.max(x3, x4) || Math.max(y1, y2) < Math.min(y3, y4) || Math.min(y1, y2) > Math.max(y3, y4)) {
    return;
  }

  var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4);
  var ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4);
  var denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);

  if (!denominator) {
    return;
  }

  var px = nx / denominator;
  var py = ny / denominator;
  var px2 = +px.toFixed(2);
  var py2 = +py.toFixed(2);

  if (px2 < +Math.min(x1, x2).toFixed(2) || px2 > +Math.max(x1, x2).toFixed(2) || px2 < +Math.min(x3, x4).toFixed(2) || px2 > +Math.max(x3, x4).toFixed(2) || py2 < +Math.min(y1, y2).toFixed(2) || py2 > +Math.max(y1, y2).toFixed(2) || py2 < +Math.min(y3, y4).toFixed(2) || py2 > +Math.max(y3, y4).toFixed(2)) {
    return;
  }

  return {
    x: px,
    y: py
  };
};

var isPointInsideBBox = function isPointInsideBBox(bbox, x, y) {
  return x >= bbox.x && x <= bbox.x + bbox.width && y >= bbox.y && y <= bbox.y + bbox.height;
};

var path_intersection_box = function box(x, y, width, height) {
  if (x === null) {
    x = y = width = height = 0;
  }

  if (y === null) {
    y = x.y;
    width = x.width;
    height = x.height;
    x = x.x;
  }

  return {
    x: x,
    y: y,
    width: width,
    w: width,
    height: height,
    h: height,
    x2: x + width,
    y2: y + height,
    cx: x + width / 2,
    cy: y + height / 2,
    r1: Math.min(width, height) / 2,
    r2: Math.max(width, height) / 2,
    r0: Math.sqrt(width * width + height * height) / 2,
    path: rectPath(x, y, width, height),
    vb: [x, y, width, height].join(' ')
  };
};

var isBBoxIntersect = function isBBoxIntersect(bbox1, bbox2) {
  // @ts-ignore
  bbox1 = path_intersection_box(bbox1); // @ts-ignore

  bbox2 = path_intersection_box(bbox2);
  return isPointInsideBBox(bbox2, bbox1.x, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2) || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x) && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);
};

var path_intersection_bezierBBox = function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {
  if (!Object(esm["isArray"])(p1x)) {
    p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];
  }

  var bbox = curveDim.apply(null, p1x);
  return path_intersection_box(bbox.min.x, bbox.min.y, bbox.max.x - bbox.min.x, bbox.max.y - bbox.min.y);
};

var findDotsAtSegment = function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {
  var t1 = 1 - t;
  var t13 = Math.pow(t1, 3);
  var t12 = Math.pow(t1, 2);
  var t2 = t * t;
  var t3 = t2 * t;
  var x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x;
  var y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y;
  var mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x);
  var my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y);
  var nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x);
  var ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y);
  var ax = t1 * p1x + t * c1x;
  var ay = t1 * p1y + t * c1y;
  var cx = t1 * c2x + t * p2x;
  var cy = t1 * c2y + t * p2y;
  var alpha = 90 - Math.atan2(mx - nx, my - ny) * 180 / Math.PI; // (mx > nx || my < ny) && (alpha += 180);

  return {
    x: x,
    y: y,
    m: {
      x: mx,
      y: my
    },
    n: {
      x: nx,
      y: ny
    },
    start: {
      x: ax,
      y: ay
    },
    end: {
      x: cx,
      y: cy
    },
    alpha: alpha
  };
};

var interHelper = function interHelper(bez1, bez2, justCount) {
  // @ts-ignore
  var bbox1 = path_intersection_bezierBBox(bez1); // @ts-ignore

  var bbox2 = path_intersection_bezierBBox(bez2);

  if (!isBBoxIntersect(bbox1, bbox2)) {
    return justCount ? 0 : [];
  }

  var l1 = bezlen.apply(0, bez1);
  var l2 = bezlen.apply(0, bez2);
  var n1 = ~~(l1 / 8);
  var n2 = ~~(l2 / 8);
  var dots1 = [];
  var dots2 = [];
  var xy = {};
  var res = justCount ? 0 : [];

  for (var i = 0; i < n1 + 1; i++) {
    var d = findDotsAtSegment.apply(0, bez1.concat(i / n1));
    dots1.push({
      x: d.x,
      y: d.y,
      t: i / n1
    });
  }

  for (var i = 0; i < n2 + 1; i++) {
    var d = findDotsAtSegment.apply(0, bez2.concat(i / n2));
    dots2.push({
      x: d.x,
      y: d.y,
      t: i / n2
    });
  }

  for (var i = 0; i < n1; i++) {
    for (var j = 0; j < n2; j++) {
      var di = dots1[i];
      var di1 = dots1[i + 1];
      var dj = dots2[j];
      var dj1 = dots2[j + 1];
      var ci = Math.abs(di1.x - di.x) < 0.001 ? 'y' : 'x';
      var cj = Math.abs(dj1.x - dj.x) < 0.001 ? 'y' : 'x';
      var is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);

      if (is) {
        if (xy[is.x.toFixed(4)] === is.y.toFixed(4)) {
          continue;
        }

        xy[is.x.toFixed(4)] = is.y.toFixed(4);
        var t1 = di.t + Math.abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t);
        var t2 = dj.t + Math.abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);

        if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {
          if (justCount) {
            // @ts-ignore
            res++;
          } else {
            // @ts-ignore
            res.push({
              x: is.x,
              y: is.y,
              t1: t1,
              t2: t2
            });
          }
        }
      }
    }
  }

  return res;
};

var path_intersection_interPathHelper = function interPathHelper(path1, path2, justCount) {
  // @ts-ignore
  path1 = pathTocurve(path1); // @ts-ignore

  path2 = pathTocurve(path2);
  var x1;
  var y1;
  var x2;
  var y2;
  var x1m;
  var y1m;
  var x2m;
  var y2m;
  var bez1;
  var bez2;
  var res = justCount ? 0 : [];

  for (var i = 0, ii = path1.length; i < ii; i++) {
    var pi = path1[i];

    if (pi[0] === 'M') {
      x1 = x1m = pi[1];
      y1 = y1m = pi[2];
    } else {
      if (pi[0] === 'C') {
        bez1 = [x1, y1].concat(pi.slice(1));
        x1 = bez1[6];
        y1 = bez1[7];
      } else {
        bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];
        x1 = x1m;
        y1 = y1m;
      }

      for (var j = 0, jj = path2.length; j < jj; j++) {
        var pj = path2[j];

        if (pj[0] === 'M') {
          x2 = x2m = pj[1];
          y2 = y2m = pj[2];
        } else {
          if (pj[0] === 'C') {
            bez2 = [x2, y2].concat(pj.slice(1));
            x2 = bez2[6];
            y2 = bez2[7];
          } else {
            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];
            x2 = x2m;
            y2 = y2m;
          }

          var intr = interHelper(bez1, bez2, justCount);

          if (justCount) {
            // @ts-ignore
            res += intr;
          } else {
            // @ts-ignore
            for (var k = 0, kk = intr.length; k < kk; k++) {
              intr[k].segment1 = i;
              intr[k].segment2 = j;
              intr[k].bez1 = bez1;
              intr[k].bez2 = bez2;
            } // @ts-ignore


            res = res.concat(intr);
          }
        }
      }
    }
  }

  return res;
};

function pathIntersection(path1, path2) {
  // @ts-ignore
  return path_intersection_interPathHelper(path1, path2);
}
// CONCATENATED MODULE: ../node_modules/@antv/path-util/esm/parse-path-array.js

var p2s = /,?([a-z]),?/gi;
function parsePathArray(path) {
  return path.join(',').replace(p2s, '$1');
}
// EXTERNAL MODULE: ../node_modules/@antv/util/lib/mod.js
var mod = __webpack_require__("QQd8");
var mod_default = /*#__PURE__*/__webpack_require__.n(mod);

// EXTERNAL MODULE: ../node_modules/@antv/util/lib/to-radian.js
var to_radian = __webpack_require__("Ce2C");
var to_radian_default = /*#__PURE__*/__webpack_require__.n(to_radian);

// CONCATENATED MODULE: ../node_modules/@antv/path-util/esm/get-arc-params.js

 // 向量长度

function vMag(v) {
  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);
} // u.v/|u||v|，计算夹角的余弦值


function vRatio(u, v) {
  // 当存在一个向量的长度为 0 时，夹角也为 0，即夹角的余弦值为 1
  return vMag(u) * vMag(v) ? (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v)) : 1;
} // 向量角度


function vAngle(u, v) {
  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));
}
/**
 * 判断两个点是否重合，点坐标的格式为 [x, y]
 * @param {Array} point1 第一个点
 * @param {Array} point2 第二个点
 */


function isSamePoint(point1, point2) {
  return point1[0] === point2[0] && point1[1] === point2[1];
} // A 0:rx 1:ry 2:x-axis-rotation 3:large-arc-flag 4:sweep-flag 5: x 6: y

function getArcParams(startPoint, params) {
  var rx = params[1];
  var ry = params[2];
  var xRotation = mod_default()(to_radian_default()(params[3]), Math.PI * 2);
  var arcFlag = params[4];
  var sweepFlag = params[5]; // 弧形起点坐标

  var x1 = startPoint[0];
  var y1 = startPoint[1]; // 弧形终点坐标

  var x2 = params[6];
  var y2 = params[7];
  var xp = Math.cos(xRotation) * (x1 - x2) / 2.0 + Math.sin(xRotation) * (y1 - y2) / 2.0;
  var yp = -1 * Math.sin(xRotation) * (x1 - x2) / 2.0 + Math.cos(xRotation) * (y1 - y2) / 2.0;
  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);

  if (lambda > 1) {
    rx *= Math.sqrt(lambda);
    ry *= Math.sqrt(lambda);
  }

  var diff = rx * rx * (yp * yp) + ry * ry * (xp * xp);
  var f = diff ? Math.sqrt((rx * rx * (ry * ry) - diff) / diff) : 1;

  if (arcFlag === sweepFlag) {
    f *= -1;
  }

  if (isNaN(f)) {
    f = 0;
  } // 旋转前的起点坐标，且当长半轴和短半轴的长度为 0 时，坐标按 (0, 0) 处理


  var cxp = ry ? f * rx * yp / ry : 0;
  var cyp = rx ? f * -ry * xp / rx : 0; // 椭圆圆心坐标

  var cx = (x1 + x2) / 2.0 + Math.cos(xRotation) * cxp - Math.sin(xRotation) * cyp;
  var cy = (y1 + y2) / 2.0 + Math.sin(xRotation) * cxp + Math.cos(xRotation) * cyp; // 起始点的单位向量

  var u = [(xp - cxp) / rx, (yp - cyp) / ry]; // 终止点的单位向量

  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry]; // 计算起始点和圆心的连线，与 x 轴正方向的夹角

  var theta = vAngle([1, 0], u); // 计算圆弧起始点和终止点与椭圆圆心连线的夹角

  var dTheta = vAngle(u, v);

  if (vRatio(u, v) <= -1) {
    dTheta = Math.PI;
  }

  if (vRatio(u, v) >= 1) {
    dTheta = 0;
  }

  if (sweepFlag === 0 && dTheta > 0) {
    dTheta = dTheta - 2 * Math.PI;
  }

  if (sweepFlag === 1 && dTheta < 0) {
    dTheta = dTheta + 2 * Math.PI;
  }

  return {
    cx: cx,
    cy: cy,
    // 弧形的起点和终点相同时，长轴和短轴的长度按 0 处理
    rx: isSamePoint(startPoint, [x2, y2]) ? 0 : rx,
    ry: isSamePoint(startPoint, [x2, y2]) ? 0 : ry,
    startAngle: theta,
    endAngle: theta + dTheta,
    xRotation: xRotation,
    arcFlag: arcFlag,
    sweepFlag: sweepFlag
  };
}
// CONCATENATED MODULE: ../node_modules/@antv/path-util/esm/path-2-segments.js




 // 点对称

function path_2_segments_toSymmetry(point, center) {
  return [center[0] + (center[0] - point[0]), center[1] + (center[1] - point[1])];
}

function getSegments(path) {
  path = parse_path(path);
  var segments = [];
  var currentPoint = null; // 当前图形

  var nextParams = null; // 下一节点的 path 参数

  var startMovePoint = null; // 开始 M 的点，可能会有多个

  var lastStartMovePointIndex = 0; // 最近一个开始点 M 的索引

  var count = path.length;

  for (var i = 0; i < count; i++) {
    var params = path[i];
    nextParams = path[i + 1];
    var command = params[0]; // 数学定义上的参数，便于后面的计算

    var segment = {
      command: command,
      prePoint: currentPoint,
      params: params,
      startTangent: null,
      endTangent: null
    };

    switch (command) {
      case 'M':
        startMovePoint = [params[1], params[2]];
        lastStartMovePointIndex = i;
        break;

      case 'A':
        var arcParams = getArcParams(currentPoint, params);
        segment['arcParams'] = arcParams;
        break;

      default:
        break;
    }

    if (command === 'Z') {
      // 有了 Z 后，当前节点从开始 M 的点开始
      currentPoint = startMovePoint; // 如果当前点的命令为 Z，相当于当前点为最近一个 M 点，则下一个点直接指向最近一个 M 点的下一个点

      nextParams = path[lastStartMovePointIndex + 1];
    } else {
      var len = params.length;
      currentPoint = [params[len - 2], params[len - 1]];
    }

    if (nextParams && nextParams[0] === 'Z') {
      // 如果下一个点的命令为 Z，则下一个点直接指向最近一个 M 点
      nextParams = path[lastStartMovePointIndex];

      if (segments[lastStartMovePointIndex]) {
        // 如果下一个点的命令为 Z，则最近一个 M 点的前一个点为当前点
        segments[lastStartMovePointIndex].prePoint = currentPoint;
      }
    }

    segment['currentPoint'] = currentPoint; // 如果当前点与最近一个 M 点相同，则最近一个 M 点的前一个点为当前点的前一个点

    if (segments[lastStartMovePointIndex] && isSamePoint(currentPoint, segments[lastStartMovePointIndex].currentPoint)) {
      segments[lastStartMovePointIndex].prePoint = segment.prePoint;
    }

    var nextPoint = nextParams ? [nextParams[nextParams.length - 2], nextParams[nextParams.length - 1]] : null;
    segment['nextPoint'] = nextPoint; // Add startTangent and endTangent

    var prePoint = segment.prePoint;

    if (['L', 'H', 'V'].includes(command)) {
      segment.startTangent = [prePoint[0] - currentPoint[0], prePoint[1] - currentPoint[1]];
      segment.endTangent = [currentPoint[0] - prePoint[0], currentPoint[1] - prePoint[1]];
    } else if (command === 'Q') {
      // 二次贝塞尔曲线只有一个控制点
      var cp = [params[1], params[2]]; // 二次贝塞尔曲线的终点为 currentPoint

      segment.startTangent = [prePoint[0] - cp[0], prePoint[1] - cp[1]];
      segment.endTangent = [currentPoint[0] - cp[0], currentPoint[1] - cp[1]];
    } else if (command === 'T') {
      var preSegment = segments[i - 1];
      var cp = path_2_segments_toSymmetry(preSegment.currentPoint, prePoint);

      if (preSegment.command === 'Q') {
        segment.command = 'Q';
        segment.startTangent = [prePoint[0] - cp[0], prePoint[1] - cp[1]];
        segment.endTangent = [currentPoint[0] - cp[0], currentPoint[1] - cp[1]];
      } else {
        segment.command = 'TL';
        segment.startTangent = [prePoint[0] - currentPoint[0], prePoint[1] - currentPoint[1]];
        segment.endTangent = [currentPoint[0] - prePoint[0], currentPoint[1] - prePoint[1]];
      }
    } else if (command === 'C') {
      // 三次贝塞尔曲线有两个控制点
      var cp1 = [params[1], params[2]];
      var cp2 = [params[3], params[4]];
      segment.startTangent = [prePoint[0] - cp1[0], prePoint[1] - cp1[1]];
      segment.endTangent = [currentPoint[0] - cp2[0], currentPoint[1] - cp2[1]];
    } else if (command === 'S') {
      var preSegment = segments[i - 1];
      var cp1 = path_2_segments_toSymmetry(preSegment.currentPoint, prePoint);
      var cp2 = [params[1], params[2]];

      if (preSegment.command === 'C') {
        segment.command = 'C'; // 将 S 命令变换为 C 命令

        segment.startTangent = [prePoint[0] - cp1[0], prePoint[1] - cp1[1]];
        segment.endTangent = [currentPoint[0] - cp2[0], currentPoint[1] - cp2[1]];
      } else {
        segment.command = 'SQ'; // 将 S 命令变换为 SQ 命令

        segment.startTangent = [prePoint[0] - cp2[0], prePoint[1] - cp2[1]];
        segment.endTangent = [currentPoint[0] - cp2[0], currentPoint[1] - cp2[1]];
      }
    } else if (command === 'A') {
      var d = 0.001;

      var _a = segment['arcParams'] || {},
          _b = _a.cx,
          cx = _b === void 0 ? 0 : _b,
          _c = _a.cy,
          cy = _c === void 0 ? 0 : _c,
          _d = _a.rx,
          rx = _d === void 0 ? 0 : _d,
          _e = _a.ry,
          ry = _e === void 0 ? 0 : _e,
          _f = _a.sweepFlag,
          sweepFlag = _f === void 0 ? 0 : _f,
          _g = _a.startAngle,
          startAngle = _g === void 0 ? 0 : _g,
          _h = _a.endAngle,
          endAngle = _h === void 0 ? 0 : _h;

      if (sweepFlag === 0) {
        d *= -1;
      }

      var dx1 = rx * Math.cos(startAngle - d) + cx;
      var dy1 = ry * Math.sin(startAngle - d) + cy;
      segment.startTangent = [dx1 - startMovePoint[0], dy1 - startMovePoint[1]];
      var dx2 = rx * Math.cos(startAngle + endAngle + d) + cx;
      var dy2 = ry * Math.sin(startAngle + endAngle - d) + cy;
      segment.endTangent = [prePoint[0] - dx2, prePoint[1] - dy2];
    }

    segments.push(segment);
  }

  return segments;
}
// CONCATENATED MODULE: ../node_modules/@antv/path-util/esm/get-line-intersect.js
var isBetween = function isBetween(value, min, max) {
  return value >= min && value <= max;
};

function getLineIntersect(p0, p1, p2, p3) {
  var tolerance = 0.001;
  var E = {
    x: p2.x - p0.x,
    y: p2.y - p0.y
  };
  var D0 = {
    x: p1.x - p0.x,
    y: p1.y - p0.y
  };
  var D1 = {
    x: p3.x - p2.x,
    y: p3.y - p2.y
  };
  var kross = D0.x * D1.y - D0.y * D1.x;
  var sqrKross = kross * kross;
  var sqrLen0 = D0.x * D0.x + D0.y * D0.y;
  var sqrLen1 = D1.x * D1.x + D1.y * D1.y;
  var point = null;

  if (sqrKross > tolerance * sqrLen0 * sqrLen1) {
    var s = (E.x * D1.y - E.y * D1.x) / kross;
    var t = (E.x * D0.y - E.y * D0.x) / kross;

    if (isBetween(s, 0, 1) && isBetween(t, 0, 1)) {
      point = {
        x: p0.x + s * D0.x,
        y: p0.y + s * D0.y
      };
    }
  }

  return point;
}
;
// CONCATENATED MODULE: ../node_modules/@antv/path-util/esm/point-in-polygon.js
/**
 * @fileoverview 判断点是否在多边形内
 * @author dxq613@gmail.com
 */
// 多边形的射线检测，参考：https://blog.csdn.net/WilliamSun0122/article/details/77994526
var tolerance = 1e-6; // 三态函数，判断两个double在eps精度下的大小关系

function dcmp(x) {
  if (Math.abs(x) < tolerance) {
    return 0;
  }

  return x < 0 ? -1 : 1;
} // 判断点Q是否在p1和p2的线段上


function onSegment(p1, p2, q) {
  if ((q[0] - p1[0]) * (p2[1] - p1[1]) === (p2[0] - p1[0]) * (q[1] - p1[1]) && Math.min(p1[0], p2[0]) <= q[0] && q[0] <= Math.max(p1[0], p2[0]) && Math.min(p1[1], p2[1]) <= q[1] && q[1] <= Math.max(p1[1], p2[1])) {
    return true;
  }

  return false;
} // 判断点P在多边形内-射线法


function isInPolygon(points, x, y) {
  var isHit = false;
  var n = points.length;

  if (n <= 2) {
    // svg 中点小于 3 个时，不显示，也无法被拾取
    return false;
  }

  for (var i = 0; i < n; i++) {
    var p1 = points[i];
    var p2 = points[(i + 1) % n];

    if (onSegment(p1, p2, [x, y])) {
      // 点在多边形一条边上
      return true;
    } // 前一个判断min(p1[1],p2[1])<P.y<=max(p1[1],p2[1])
    // 后一个判断被测点 在 射线与边交点 的左边


    if (dcmp(p1[1] - y) > 0 !== dcmp(p2[1] - y) > 0 && dcmp(x - (y - p1[1]) * (p1[0] - p2[0]) / (p1[1] - p2[1]) - p1[0]) < 0) {
      isHit = !isHit;
    }
  }

  return isHit;
}
// CONCATENATED MODULE: ../node_modules/@antv/path-util/esm/is-polygons-intersect.js





function parseToLines(points) {
  var lines = [];
  var count = points.length;

  for (var i = 0; i < count - 1; i++) {
    var point = points[i];
    var next = points[i + 1];
    lines.push({
      from: {
        x: point[0],
        y: point[1]
      },
      to: {
        x: next[0],
        y: next[1]
      }
    });
  }

  if (lines.length > 1) {
    var first = points[0];
    var last = points[count - 1];
    lines.push({
      from: {
        x: last[0],
        y: last[1]
      },
      to: {
        x: first[0],
        y: first[1]
      }
    });
  }

  return lines;
}

function lineIntersectPolygon(lines, line) {
  var isIntersect = false;
  Object(esm["each"])(lines, function (l) {
    if (getLineIntersect(l.from, l.to, line.from, line.to)) {
      isIntersect = true;
      return false;
    }
  });
  return isIntersect;
}

function getBBox(points) {
  var xArr = points.map(function (p) {
    return p[0];
  });
  var yArr = points.map(function (p) {
    return p[1];
  });
  return {
    minX: Math.min.apply(null, xArr),
    maxX: Math.max.apply(null, xArr),
    minY: Math.min.apply(null, yArr),
    maxY: Math.max.apply(null, yArr)
  };
}

function is_polygons_intersect_intersectBBox(box1, box2) {
  return !(box2.minX > box1.maxX || box2.maxX < box1.minX || box2.minY > box1.maxY || box2.maxY < box1.minY);
}

function isPolygonsIntersect(points1, points2) {
  // 空数组，或者一个点返回 false
  if (points1.length < 2 || points2.length < 2) {
    return false;
  }

  var bbox1 = getBBox(points1);
  var bbox2 = getBBox(points2); // 判定包围盒是否相交，比判定点是否在多边形内要快的多，可以筛选掉大多数情况

  if (!is_polygons_intersect_intersectBBox(bbox1, bbox2)) {
    return false;
  }

  var isIn = false; // 判定点是否在多边形内部，一旦有一个点在另一个多边形内，则返回

  Object(esm["each"])(points2, function (point) {
    if (isInPolygon(points1, point[0], point[1])) {
      isIn = true;
      return false;
    }
  });

  if (isIn) {
    return true;
  } // 两个多边形都需要判定


  Object(esm["each"])(points1, function (point) {
    if (isInPolygon(points2, point[0], point[1])) {
      isIn = true;
      return false;
    }
  });

  if (isIn) {
    return true;
  }

  var lines1 = parseToLines(points1);
  var lines2 = parseToLines(points2);
  var isIntersect = false;
  Object(esm["each"])(lines2, function (line) {
    if (lineIntersectPolygon(lines1, line)) {
      isIntersect = true;
      return false;
    }
  });
  return isIntersect;
}
// CONCATENATED MODULE: ../node_modules/@antv/path-util/esm/index.js
















// CONCATENATED MODULE: ../node_modules/@antv/component/esm/trend/path.js




/**
 * 点数组转 path
 * @param points
 */

function pointsToPath(points) {
  return Object(esm["map"])(points, function (p, idx) {
    var command = idx === 0 ? 'M' : 'L';
    var x = p[0],
        y = p[1];
    return [command, x, y];
  });
}
/**
 * 将点连接成路径 path
 * @param points
 */


function getLinePath(points) {
  return pointsToPath(points);
}
/**
 * 将点连成平滑的曲线
 * @param points
 */

function getSmoothLinePath(points) {
  if (points.length <= 2) {
    // 两点以内直接绘制成路径
    return getLinePath(points);
  }

  var data = [];
  Object(esm["each"])(points, function (p) {
    // 当前点和上一个点一样的时候，忽略掉
    if (!Object(esm["isEqual"])(p, data.slice(data.length - 2))) {
      data.push(p[0], p[1]);
    }
  }); // const constraint = [ // 范围
  //   [ 0, 0 ],
  //   [ 1, 1 ],
  // ];

  var path = catmullRom2Bezier(data, false);

  var _a = Object(esm["head"])(points),
      x = _a[0],
      y = _a[1];

  path.unshift(['M', x, y]);
  return path;
}
/**
 * 将数据转成 path，利用 scale 的归一化能力
 * @param data
 * @param width
 * @param height
 * @param smooth
 */

function dataToPath(data, width, height, smooth) {
  if (smooth === void 0) {
    smooth = true;
  } // 利用 scale 来获取 y 上的映射


  var y = new scale_esm["Linear"]({
    values: data
  });
  var x = new scale_esm["Category"]({
    values: Object(esm["map"])(data, function (v, idx) {
      return idx;
    })
  });
  var points = Object(esm["map"])(data, function (v, idx) {
    return [x.scale(idx) * width, height - y.scale(v) * height];
  });
  return smooth ? getSmoothLinePath(points) : getLinePath(points);
}
/**
 * 线 path 转 area path
 * @param path
 * @param width
 * @param height
 */

function linePathToAreaPath(path, width, height) {
  var areaPath = Object(tslib_es6["__spreadArrays"])(path);

  areaPath.push(['L', width, 0]);
  areaPath.push(['L', 0, height]);
  areaPath.push(['Z']);
  return areaPath;
}
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/trend/trend.js





var trend_Trend =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Trend, _super);

  function Trend() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Trend.prototype.getDefaultCfg = function () {
    var cfg = _super.prototype.getDefaultCfg.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, cfg), {
      name: 'trend',
      x: 0,
      y: 0,
      width: 200,
      height: 16,
      smooth: true,
      isArea: false,
      data: [],
      backgroundStyle: BACKGROUND_STYLE,
      lineStyle: LINE_STYLE,
      areaStyle: AREA_STYLE
    });
  };

  Trend.prototype.renderInner = function (group) {
    var _a = this.cfg,
        width = _a.width,
        height = _a.height,
        data = _a.data,
        smooth = _a.smooth,
        isArea = _a.isArea,
        backgroundStyle = _a.backgroundStyle,
        lineStyle = _a.lineStyle,
        areaStyle = _a.areaStyle; // 背景

    this.addShape(group, {
      id: this.getElementId('background'),
      type: 'rect',
      attrs: Object(tslib_es6["__assign"])({
        x: 0,
        y: 0,
        width: width,
        height: height
      }, backgroundStyle)
    });
    var path = dataToPath(data, width, height, smooth); // 线

    this.addShape(group, {
      id: this.getElementId('line'),
      type: 'path',
      attrs: Object(tslib_es6["__assign"])({
        path: path
      }, lineStyle)
    }); // area
    // 在 path 的基础上，增加两个坐标点

    if (isArea) {
      var areaPath = linePathToAreaPath(path, width, height);
      this.addShape(group, {
        id: this.getElementId('area'),
        type: 'path',
        attrs: Object(tslib_es6["__assign"])({
          path: areaPath
        }, areaStyle)
      });
    }
  };

  Trend.prototype.applyOffset = function () {
    var _a = this.cfg,
        x = _a.x,
        y = _a.y; // 统一移动到对应的位置

    this.moveElementTo(this.get('group'), {
      x: x,
      y: y
    });
  };

  return Trend;
}(group_component);


/* harmony default export */ var trend = (trend_Trend);
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/slider/constant.js
/**
 * 一些默认的样式配置
 */
var constant_BACKGROUND_STYLE = {
  fill: '#416180',
  opacity: 0.05
};
var FOREGROUND_STYLE = {
  fill: '#5B8FF9',
  opacity: 0.15,
  cursor: 'move'
};
var DEFAULT_HANDLER_WIDTH = 10;
var HANDLER_STYLE = {
  width: DEFAULT_HANDLER_WIDTH,
  height: 24
};
var TEXT_STYLE = {
  textBaseline: 'middle',
  fill: '#000',
  opacity: 0.45
};
var SLIDER_CHANGE = 'sliderchange';
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/slider/handler.js



var DEFAULT_STYLE = {
  fill: '#F7F7F7',
  stroke: '#BFBFBF',
  radius: 2,
  opacity: 1,
  cursor: 'ew-resize',
  // 高亮的颜色
  highLightFill: '#FFF'
};

var handler_Handler =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Handler, _super);

  function Handler() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Handler.prototype.getDefaultCfg = function () {
    var cfg = _super.prototype.getDefaultCfg.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, cfg), {
      name: 'handler',
      x: 0,
      y: 0,
      width: 10,
      height: 24,
      style: DEFAULT_STYLE
    });
  };

  Handler.prototype.renderInner = function (group) {
    var _a = this.cfg,
        width = _a.width,
        height = _a.height,
        style = _a.style;
    var fill = style.fill,
        stroke = style.stroke,
        radius = style.radius,
        opacity = style.opacity,
        cursor = style.cursor; // 按钮框框

    this.addShape(group, {
      type: 'rect',
      id: this.getElementId('background'),
      attrs: {
        x: 0,
        y: 0,
        width: width,
        height: height,
        fill: fill,
        stroke: stroke,
        radius: radius,
        opacity: opacity,
        cursor: cursor
      }
    }); // 两根竖线

    var x1 = 1 / 3 * width;
    var x2 = 2 / 3 * width;
    var y1 = 1 / 4 * height;
    var y2 = 3 / 4 * height;
    this.addShape(group, {
      id: this.getElementId('line-left'),
      type: 'line',
      attrs: {
        x1: x1,
        y1: y1,
        x2: x1,
        y2: y2,
        stroke: stroke,
        cursor: cursor
      }
    });
    this.addShape(group, {
      id: this.getElementId('line-right'),
      type: 'line',
      attrs: {
        x1: x2,
        y1: y1,
        x2: x2,
        y2: y2,
        stroke: stroke,
        cursor: cursor
      }
    });
  };

  Handler.prototype.applyOffset = function () {
    this.moveElementTo(this.get('group'), {
      x: this.get('x'),
      y: this.get('y')
    });
  };

  Handler.prototype.initEvent = function () {
    this.bindEvents();
  };

  Handler.prototype.bindEvents = function () {
    var _this = this;

    this.get('group').on('mouseenter', function () {
      var highLightFill = _this.get('style').highLightFill;

      _this.getElementByLocalId('background').attr('fill', highLightFill);

      _this.draw();
    });
    this.get('group').on('mouseleave', function () {
      var fill = _this.get('style').fill;

      _this.getElementByLocalId('background').attr('fill', fill);

      _this.draw();
    });
  };

  Handler.prototype.draw = function () {
    var canvas = this.get('container').get('canvas');

    if (canvas) {
      canvas.draw();
    }
  };

  return Handler;
}(group_component);


/* harmony default export */ var handler = (handler_Handler);
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/slider/slider.js








var slider_Slider =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Slider, _super);

  function Slider() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.onMouseDown = function (target) {
      return function (e) {
        _this.currentTarget = target; // 取出原生事件

        var event = e.originalEvent; // 2. 存储当前点击位置

        event.stopPropagation();
        event.preventDefault(); // 兼容移动端获取数据

        _this.prevX = Object(esm["get"])(event, 'touches.0.pageX', event.pageX);
        _this.prevY = Object(esm["get"])(event, 'touches.0.pageY', event.pageY); // 3. 开始滑动的时候，绑定 move 和 up 事件

        var containerDOM = _this.getContainerDOM();

        containerDOM.addEventListener('mousemove', _this.onMouseMove);
        containerDOM.addEventListener('mouseup', _this.onMouseUp);
        containerDOM.addEventListener('mouseleave', _this.onMouseUp); // 移动端事件

        containerDOM.addEventListener('touchmove', _this.onMouseMove);
        containerDOM.addEventListener('touchend', _this.onMouseUp);
        containerDOM.addEventListener('touchcancel', _this.onMouseUp);
      };
    };

    _this.onMouseMove = function (event) {
      var width = _this.cfg.width;
      var originValue = [_this.get('start'), _this.get('end')]; // 滑动过程中，计算偏移，更新滑块，然后 emit 数据出去

      event.stopPropagation();
      event.preventDefault();
      var x = Object(esm["get"])(event, 'touches.0.pageX', event.pageX);
      var y = Object(esm["get"])(event, 'touches.0.pageY', event.pageY); // 横向的 slider 只处理 x

      var offsetX = x - _this.prevX;

      var offsetXRange = _this.adjustOffsetRange(offsetX / width); // 更新 start end range 范围


      _this.updateStartEnd(offsetXRange); // 更新 ui


      _this.updateUI(_this.getElementByLocalId('foreground'), _this.getElementByLocalId('minText'), _this.getElementByLocalId('maxText'));

      _this.prevX = x;
      _this.prevY = y;

      _this.draw(); // 因为存储的 start、end 可能不一定是按大小存储的，所以排序一下，对外是 end >= start


      _this.emit(SLIDER_CHANGE, [_this.get('start'), _this.get('end')].sort());

      _this.delegateEmit('valuechanged', {
        originValue: originValue,
        value: [_this.get('start'), _this.get('end')]
      });
    };

    _this.onMouseUp = function () {
      // 结束之后，取消绑定的事件
      if (_this.currentTarget) {
        _this.currentTarget = undefined;
      }

      var containerDOM = _this.getContainerDOM();

      if (containerDOM) {
        containerDOM.removeEventListener('mousemove', _this.onMouseMove);
        containerDOM.removeEventListener('mouseup', _this.onMouseUp); // 防止滑动到 canvas 外部之后，状态丢失

        containerDOM.removeEventListener('mouseleave', _this.onMouseUp); // 移动端事件

        containerDOM.removeEventListener('touchmove', _this.onMouseMove);
        containerDOM.removeEventListener('touchend', _this.onMouseUp);
        containerDOM.removeEventListener('touchcancel', _this.onMouseUp);
      }
    };

    return _this;
  }

  Slider.prototype.setRange = function (min, max) {
    this.set('minLimit', min);
    this.set('maxLimit', max);
    var oldStart = this.get('start');
    var oldEnd = this.get('end');
    var newStart = Object(esm["clamp"])(oldStart, min, max);
    var newEnd = Object(esm["clamp"])(oldEnd, min, max);

    if (!this.get('isInit') && (oldStart !== newStart || oldEnd !== newEnd)) {
      this.setValue([newStart, newEnd]);
    }
  };

  Slider.prototype.getRange = function () {
    return {
      min: this.get('minLimit') || 0,
      max: this.get('maxLimit') || 1
    };
  };

  Slider.prototype.setValue = function (value) {
    var range = this.getRange();

    if (Object(esm["isArray"])(value) && value.length === 2) {
      var originValue = [this.get('start'), this.get('end')];
      this.update({
        start: Object(esm["clamp"])(value[0], range.min, range.max),
        end: Object(esm["clamp"])(value[1], range.min, range.max)
      });

      if (!this.get('updateAutoRender')) {
        this.render();
      }

      this.delegateEmit('valuechanged', {
        originValue: originValue,
        value: value
      });
    }
  };

  Slider.prototype.getValue = function () {
    return [this.get('start'), this.get('end')];
  };

  Slider.prototype.getDefaultCfg = function () {
    var cfg = _super.prototype.getDefaultCfg.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, cfg), {
      name: 'slider',
      x: 0,
      y: 0,
      width: 100,
      height: 16,
      backgroundStyle: {},
      foregroundStyle: {},
      handlerStyle: {},
      textStyle: {},
      defaultCfg: {
        backgroundStyle: constant_BACKGROUND_STYLE,
        foregroundStyle: FOREGROUND_STYLE,
        handlerStyle: HANDLER_STYLE,
        textStyle: TEXT_STYLE
      }
    });
  };

  Slider.prototype.update = function (cfg) {
    var start = cfg.start,
        end = cfg.end;

    var validCfg = Object(tslib_es6["__assign"])({}, cfg);

    if (!Object(esm["isNil"])(start)) {
      validCfg.start = Object(esm["clamp"])(start, 0, 1);
    }

    if (!Object(esm["isNil"])(end)) {
      validCfg.end = Object(esm["clamp"])(end, 0, 1);
    }

    _super.prototype.update.call(this, validCfg);

    this.minHandler = this.getChildComponentById(this.getElementId('minHandler'));
    this.maxHandler = this.getChildComponentById(this.getElementId('maxHandler'));
  };

  Slider.prototype.init = function () {
    this.set('start', Object(esm["clamp"])(this.get('start'), 0, 1));
    this.set('end', Object(esm["clamp"])(this.get('end'), 0, 1));

    _super.prototype.init.call(this);
  };

  Slider.prototype.renderInner = function (group) {
    var _a = this.cfg,
        start = _a.start,
        end = _a.end,
        width = _a.width,
        height = _a.height,
        _b = _a.trendCfg,
        trendCfg = _b === void 0 ? {} : _b,
        minText = _a.minText,
        maxText = _a.maxText,
        _c = _a.backgroundStyle,
        backgroundStyle = _c === void 0 ? {} : _c,
        _d = _a.foregroundStyle,
        foregroundStyle = _d === void 0 ? {} : _d,
        _e = _a.textStyle,
        textStyle = _e === void 0 ? {} : _e,
        _f = _a.handlerStyle,
        handlerStyle = _f === void 0 ? {} : _f;
    var min = start * width;
    var max = end * width; // 趋势图数据

    if (Object(esm["size"])(Object(esm["get"])(trendCfg, 'data'))) {
      this.addComponent(group, Object(tslib_es6["__assign"])({
        component: trend_Trend,
        id: this.getElementId('trend'),
        x: 0,
        y: 0,
        width: width,
        height: height
      }, trendCfg));
    } // 1. 背景


    this.addShape(group, {
      id: this.getElementId('background'),
      type: 'rect',
      attrs: Object(tslib_es6["__assign"])({
        x: 0,
        y: 0,
        width: width,
        height: height
      }, backgroundStyle)
    }); // 2. 左右文字

    var minTextShape = this.addShape(group, {
      id: this.getElementId('minText'),
      type: 'text',
      attrs: Object(tslib_es6["__assign"])({
        // x: 0,
        y: height / 2,
        textAlign: 'right',
        text: minText,
        silent: false
      }, textStyle)
    });
    var maxTextShape = this.addShape(group, {
      id: this.getElementId('maxText'),
      type: 'text',
      attrs: Object(tslib_es6["__assign"])({
        // x: 0,
        y: height / 2,
        textAlign: 'left',
        text: maxText,
        silent: false
      }, textStyle)
    }); // 3. 前景 选中背景框

    var foregroundShape = this.addShape(group, {
      id: this.getElementId('foreground'),
      name: 'foreground',
      type: 'rect',
      attrs: Object(tslib_es6["__assign"])({
        // x: 0,
        y: 0,
        // width: 0,
        height: height
      }, foregroundStyle)
    }); // 滑块相关的大小信息
    // const handlerWidth = get(handlerStyle, 'width', 10);

    var handlerHeight = Object(esm["get"])(handlerStyle, 'height', 24); // 4. 左右滑块

    this.minHandler = this.addComponent(group, Object(tslib_es6["__assign"])({
      component: handler_Handler,
      id: this.getElementId('minHandler'),
      name: 'handler-min',
      x: 0,
      y: (height - handlerHeight) / 2,
      width: width,
      height: handlerHeight,
      cursor: 'ew-resize'
    }, handlerStyle));
    this.maxHandler = this.addComponent(group, Object(tslib_es6["__assign"])({
      component: handler_Handler,
      id: this.getElementId('maxHandler'),
      name: 'handler-max',
      x: 0,
      y: (height - handlerHeight) / 2,
      width: width,
      height: handlerHeight,
      cursor: 'ew-resize'
    }, handlerStyle));
    this.updateUI(foregroundShape, minTextShape, maxTextShape);
  };

  Slider.prototype.applyOffset = function () {
    this.moveElementTo(this.get('group'), {
      x: this.get('x'),
      y: this.get('y')
    });
  };

  Slider.prototype.initEvent = function () {
    this.bindEvents();
  };

  Slider.prototype.updateUI = function (foregroundShape, minTextShape, maxTextShape) {
    var _a = this.cfg,
        start = _a.start,
        end = _a.end,
        width = _a.width,
        minText = _a.minText,
        maxText = _a.maxText,
        handlerStyle = _a.handlerStyle;
    var min = start * width;
    var max = end * width; // 1. foreground

    foregroundShape.attr('x', min);
    foregroundShape.attr('width', max - min); // 滑块相关的大小信息

    var handlerWidth = Object(esm["get"])(handlerStyle, 'width', DEFAULT_HANDLER_WIDTH); // 设置文本

    minTextShape.attr('text', minText);
    maxTextShape.attr('text', maxText);

    var _b = this._dodgeText([min, max], minTextShape, maxTextShape),
        minAttrs = _b[0],
        maxAttrs = _b[1]; // 2. 左侧滑块和文字位置


    if (this.minHandler) {
      this.minHandler.update({
        x: min - handlerWidth / 2
      });

      if (!this.get('updateAutoRender')) {
        this.minHandler.render();
      }
    }

    Object(esm["each"])(minAttrs, function (v, k) {
      return minTextShape.attr(k, v);
    }); // 3. 右侧滑块和文字位置

    if (this.maxHandler) {
      this.maxHandler.update({
        x: max - handlerWidth / 2
      });

      if (!this.get('updateAutoRender')) {
        this.maxHandler.render();
      }
    }

    Object(esm["each"])(maxAttrs, function (v, k) {
      return maxTextShape.attr(k, v);
    });
  };

  Slider.prototype.bindEvents = function () {
    var group = this.get('group');
    group.on('handler-min:mousedown', this.onMouseDown('minHandler'));
    group.on('handler-min:touchstart', this.onMouseDown('minHandler')); // 2. 右滑块的滑动

    group.on('handler-max:mousedown', this.onMouseDown('maxHandler'));
    group.on('handler-max:touchstart', this.onMouseDown('maxHandler')); // 3. 前景选中区域

    var foreground = group.findById(this.getElementId('foreground'));
    foreground.on('mousedown', this.onMouseDown('foreground'));
    foreground.on('touchstart', this.onMouseDown('foreground'));
  };
  /**
   * 调整 offsetRange，因为一些范围的限制
   * @param offsetRange
   */


  Slider.prototype.adjustOffsetRange = function (offsetRange) {
    var _a = this.cfg,
        start = _a.start,
        end = _a.end; // 针对不同的滑动组件，处理的方式不同

    switch (this.currentTarget) {
      case 'minHandler':
        {
          var min = 0 - start;
          var max = 1 - start;
          return Math.min(max, Math.max(min, offsetRange));
        }

      case 'maxHandler':
        {
          var min = 0 - end;
          var max = 1 - end;
          return Math.min(max, Math.max(min, offsetRange));
        }

      case 'foreground':
        {
          var min = 0 - start;
          var max = 1 - end;
          return Math.min(max, Math.max(min, offsetRange));
        }
    }
  };

  Slider.prototype.updateStartEnd = function (offsetRange) {
    var _a = this.cfg,
        start = _a.start,
        end = _a.end; // 操作不同的组件，反馈不一样

    switch (this.currentTarget) {
      case 'minHandler':
        start += offsetRange;
        break;

      case 'maxHandler':
        end += offsetRange;
        break;

      case 'foreground':
        start += offsetRange;
        end += offsetRange;
        break;
    }

    this.set('start', start);
    this.set('end', end);
  };
  /**
   * 调整 text 的位置，自动躲避
   * 根据位置，调整返回新的位置
   * @param range
   */


  Slider.prototype._dodgeText = function (range, minTextShape, maxTextShape) {
    var _a, _b;

    var _c = this.cfg,
        handlerStyle = _c.handlerStyle,
        width = _c.width;
    var PADDING = 2;
    var handlerWidth = Object(esm["get"])(handlerStyle, 'width', DEFAULT_HANDLER_WIDTH);
    var min = range[0],
        max = range[1];
    var sorted = false; // 如果交换了位置，则对应的 min max 也交互

    if (min > max) {
      _a = [max, min], min = _a[0], max = _a[1];
      _b = [maxTextShape, minTextShape], minTextShape = _b[0], maxTextShape = _b[1];
      sorted = true;
    } // 避让规则，优先显示在两侧，只有显示不下的时候，才显示在中间


    var minBBox = minTextShape.getBBox();
    var maxBBox = maxTextShape.getBBox();
    var minAttrs = minBBox.width > min - PADDING ? {
      x: min + handlerWidth / 2 + PADDING,
      textAlign: 'left'
    } : {
      x: min - handlerWidth / 2 - PADDING,
      textAlign: 'right'
    };
    var maxAttrs = maxBBox.width > width - max - PADDING ? {
      x: max - handlerWidth / 2 - PADDING,
      textAlign: 'right'
    } : {
      x: max + handlerWidth / 2 + PADDING,
      textAlign: 'left'
    };
    return !sorted ? [minAttrs, maxAttrs] : [maxAttrs, minAttrs];
  };

  Slider.prototype.draw = function () {
    var container = this.get('container');
    var canvas = container && container.get('canvas');

    if (canvas) {
      canvas.draw();
    }
  };

  Slider.prototype.getContainerDOM = function () {
    var container = this.get('container');
    var canvas = container && container.get('canvas');
    return canvas && canvas.get('container');
  };

  return Slider;
}(group_component);


/* harmony default export */ var slider_slider = (slider_Slider);
// CONCATENATED MODULE: ../node_modules/@antv/component/esm/slider/index.js

// CONCATENATED MODULE: ../node_modules/@antv/component/esm/scrollbar/scrollbar.js





var scrollbar_DEFAULT_STYLE = {
  trackColor: 'rgba(0,0,0,0)',
  thumbColor: 'rgba(0,0,0,0.15)',
  size: 8,
  lineCap: 'round'
};
var DEFAULT_THEME = {
  // 默认样式
  "default": scrollbar_DEFAULT_STYLE,
  // 鼠标 hover 的样式
  hover: {
    thumbColor: 'rgba(0,0,0,0.2)'
  }
};

var scrollbar_Scrollbar =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Scrollbar, _super);

  function Scrollbar() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.clearEvents = esm["noop"];

    _this.onStartEvent = function (isMobile) {
      return function (e) {
        _this.isMobile = isMobile;
        e.originalEvent.preventDefault();
        var clientX = isMobile ? Object(esm["get"])(e.originalEvent, 'touches.0.clientX') : e.clientX;
        var clientY = isMobile ? Object(esm["get"])(e.originalEvent, 'touches.0.clientY') : e.clientY; // 将开始的点记录下来

        _this.startPos = _this.cfg.isHorizontal ? clientX : clientY;

        _this.bindLaterEvent();
      };
    };

    _this.bindLaterEvent = function () {
      var containerDOM = _this.getContainerDOM();

      var events = [];

      if (_this.isMobile) {
        events = [addEventListener(containerDOM, 'touchmove', _this.onMouseMove), addEventListener(containerDOM, 'touchend', _this.onMouseUp), addEventListener(containerDOM, 'touchcancel', _this.onMouseUp)];
      } else {
        events = [addEventListener(containerDOM, 'mousemove', _this.onMouseMove), addEventListener(containerDOM, 'mouseup', _this.onMouseUp), // 为了保证划出 canvas containerDom 时还没触发 mouseup
        addEventListener(containerDOM, 'mouseleave', _this.onMouseUp)];
      }

      _this.clearEvents = function () {
        events.forEach(function (e) {
          e.remove();
        });
      };
    }; // 拖拽滑块的事件回调
    // 这里是 dom 原生事件，绑定在 dom 元素上的


    _this.onMouseMove = function (e) {
      var _a = _this.cfg,
          isHorizontal = _a.isHorizontal,
          thumbOffset = _a.thumbOffset;
      e.preventDefault();
      var clientX = _this.isMobile ? Object(esm["get"])(e, 'touches.0.clientX') : e.clientX;
      var clientY = _this.isMobile ? Object(esm["get"])(e, 'touches.0.clientY') : e.clientY; // 鼠标松开的位置

      var endPos = isHorizontal ? clientX : clientY; // 滑块需要移动的距离, 由于这里是对滑块监听，所以移动的距离就是 diffDis, 如果监听对象是 container dom，则需要算比例

      var diff = endPos - _this.startPos; // 更新 _startPos

      _this.startPos = endPos;

      _this.updateThumbOffset(thumbOffset + diff);
    };

    _this.onMouseUp = function (e) {
      e.preventDefault();

      _this.clearEvents();
    }; // 点击滑道的事件回调,移动滑块位置


    _this.onTrackClick = function (e) {
      var _a = _this.cfg,
          isHorizontal = _a.isHorizontal,
          x = _a.x,
          y = _a.y,
          thumbLen = _a.thumbLen;

      var containerDOM = _this.getContainerDOM();

      var rect = containerDOM.getBoundingClientRect();
      var clientX = e.clientX,
          clientY = e.clientY;
      var offset = isHorizontal ? clientX - rect.left - x - thumbLen / 2 : clientY - rect.top - y - thumbLen / 2;

      var newOffset = _this.validateRange(offset);

      _this.updateThumbOffset(newOffset);
    };

    _this.onThumbMouseOver = function () {
      var thumbColor = _this.cfg.theme.hover.thumbColor;

      _this.getElementByLocalId('thumb').attr('stroke', thumbColor);

      _this.draw();
    };

    _this.onThumbMouseOut = function () {
      var thumbColor = _this.cfg.theme["default"].thumbColor;

      _this.getElementByLocalId('thumb').attr('stroke', thumbColor);

      _this.draw();
    };

    return _this;
  }

  Scrollbar.prototype.setRange = function (min, max) {
    this.set('minLimit', min);
    this.set('maxLimit', max);
    var curValue = this.getValue();
    var newValue = Object(esm["clamp"])(curValue, min, max);

    if (curValue !== newValue && !this.get('isInit')) {
      this.setValue(newValue);
    }
  };

  Scrollbar.prototype.getRange = function () {
    var min = this.get('minLimit') || 0;
    var max = this.get('maxLimit') || 1;
    return {
      min: min,
      max: max
    };
  };

  Scrollbar.prototype.setValue = function (value) {
    var range = this.getRange();
    var originalValue = this.getValue();
    this.update({
      thumbOffset: (this.get('trackLen') - this.get('thumbLen')) * Object(esm["clamp"])(value, range.min, range.max)
    });
    this.delegateEmit('valuechange', {
      originalValue: originalValue,
      value: this.getValue()
    });
  };

  Scrollbar.prototype.getValue = function () {
    return Object(esm["clamp"])(this.get('thumbOffset') / (this.get('trackLen') - this.get('thumbLen')), 0, 1);
  };

  Scrollbar.prototype.getDefaultCfg = function () {
    var cfg = _super.prototype.getDefaultCfg.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, cfg), {
      name: 'scrollbar',
      isHorizontal: true,
      minThumbLen: 20,
      thumbOffset: 0,
      theme: DEFAULT_THEME
    });
  };

  Scrollbar.prototype.renderInner = function (group) {
    this.renderTrackShape(group);
    this.renderThumbShape(group);
  };

  Scrollbar.prototype.applyOffset = function () {
    this.moveElementTo(this.get('group'), {
      x: this.get('x'),
      y: this.get('y')
    });
  };

  Scrollbar.prototype.initEvent = function () {
    this.bindEvents();
  }; // 创建滑道的 shape


  Scrollbar.prototype.renderTrackShape = function (group) {
    var _a = this.cfg,
        trackLen = _a.trackLen,
        _b = _a.theme,
        theme = _b === void 0 ? {
      "default": {}
    } : _b;
    var _c = theme["default"],
        lineCap = _c.lineCap,
        trackColor = _c.trackColor,
        size = _c.size;
    var attrs = this.get('isHorizontal') ? {
      x1: 0 + size / 2,
      y1: size / 2,
      x2: trackLen - size / 2,
      y2: size / 2,
      lineWidth: size,
      stroke: trackColor,
      lineCap: lineCap
    } : {
      x1: size / 2,
      y1: 0 + size / 2,
      x2: size / 2,
      y2: trackLen - size / 2,
      lineWidth: size,
      stroke: trackColor,
      lineCap: lineCap
    };
    return this.addShape(group, {
      id: this.getElementId('track'),
      name: 'track',
      type: 'line',
      attrs: attrs
    });
  }; // 创建滑块的 shape


  Scrollbar.prototype.renderThumbShape = function (group) {
    var _a = this.cfg,
        thumbOffset = _a.thumbOffset,
        thumbLen = _a.thumbLen,
        _b = _a.theme,
        theme = _b === void 0 ? {
      "default": {}
    } : _b;
    var _c = theme["default"],
        size = _c.size,
        lineCap = _c.lineCap,
        thumbColor = _c.thumbColor;
    var attrs = this.get('isHorizontal') ? {
      x1: thumbOffset + size / 2,
      y1: size / 2,
      x2: thumbOffset + thumbLen - size / 2,
      y2: size / 2,
      lineWidth: size,
      stroke: thumbColor,
      lineCap: lineCap,
      cursor: 'default'
    } : {
      x1: size / 2,
      y1: thumbOffset + size / 2,
      x2: size / 2,
      y2: thumbOffset + thumbLen - size / 2,
      lineWidth: size,
      stroke: thumbColor,
      lineCap: lineCap,
      cursor: 'default'
    };
    return this.addShape(group, {
      id: this.getElementId('thumb'),
      name: 'thumb',
      type: 'line',
      attrs: attrs
    });
  };

  Scrollbar.prototype.bindEvents = function () {
    var group = this.get('group');
    group.on('mousedown', this.onStartEvent(false));
    group.on('mouseup', this.onMouseUp);
    group.on('touchstart', this.onStartEvent(true));
    group.on('touchend', this.onMouseUp);
    var trackShape = group.findById(this.getElementId('track'));
    trackShape.on('click', this.onTrackClick);
    var thumbShape = group.findById(this.getElementId('thumb'));
    thumbShape.on('mouseover', this.onThumbMouseOver);
    thumbShape.on('mouseout', this.onThumbMouseOut);
  };

  Scrollbar.prototype.getContainerDOM = function () {
    var container = this.get('container');
    var canvas = container && container.get('canvas');
    return canvas && canvas.get('container');
  };

  Scrollbar.prototype.validateRange = function (offset) {
    var _a = this.cfg,
        thumbLen = _a.thumbLen,
        trackLen = _a.trackLen;
    var newOffset = offset;

    if (offset + thumbLen > trackLen) {
      newOffset = trackLen - thumbLen;
    } else if (offset + thumbLen < thumbLen) {
      newOffset = 0;
    }

    return newOffset;
  };

  Scrollbar.prototype.draw = function () {
    var container = this.get('container');
    var canvas = container && container.get('canvas');

    if (canvas) {
      canvas.draw();
    }
  };

  Scrollbar.prototype.updateThumbOffset = function (offset) {
    var _a = this.cfg,
        thumbOffset = _a.thumbOffset,
        isHorizontal = _a.isHorizontal,
        thumbLen = _a.thumbLen,
        size = _a.size;
    var newOffset = this.validateRange(offset);

    if (newOffset === thumbOffset) {
      // 如果更新后的 offset 与原值相同，则不改变
      return;
    }

    var thumbShape = this.getElementByLocalId('thumb');

    if (isHorizontal) {
      thumbShape.attr({
        x1: newOffset + size / 2,
        x2: newOffset + thumbLen - size / 2
      });
    } else {
      thumbShape.attr({
        y1: newOffset + size / 2,
        y2: newOffset + thumbLen - size / 2
      });
    }

    this.emitOffsetChange(newOffset);
  };

  Scrollbar.prototype.emitOffsetChange = function (offset) {
    var _a = this.cfg,
        originalValue = _a.thumbOffset,
        trackLen = _a.trackLen,
        thumbLen = _a.thumbLen;
    this.cfg.thumbOffset = offset; // 发送事件

    this.emit('scrollchange', {
      thumbOffset: offset,
      ratio: Object(esm["clamp"])(offset / (trackLen - thumbLen), 0, 1)
    });
    this.delegateEmit('valuechange', {
      originalValue: originalValue,
      value: offset
    });
  };

  return Scrollbar;
}(group_component);


// CONCATENATED MODULE: ../node_modules/@antv/component/esm/scrollbar/index.js

// CONCATENATED MODULE: ../node_modules/@antv/component/esm/index.js












// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/dependents.js
/* 依赖的模块，在这里统一引入，方便打包优化 */
 // adjust

 // attr


 // coordinate

 // scale

 // component



 // axis

var LineAxis = axis_namespaceObject.Line,
    CircleAxis = axis_namespaceObject.Circle;
 // grid

var LineGrid = grid_namespaceObject.Line,
    CircleGrid = grid_namespaceObject.Circle;
 // legend

var CategoryLegend = legend_namespaceObject.Category,
    ContinuousLegend = legend_namespaceObject.Continuous;
 // Tooltip

var HtmlTooltip = tooltip_namespaceObject.Html;
 // Slider


// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/util/scale.js






var dateRegex = /^(?:(?!0000)[0-9]{4}([-/.]+)(?:(?:0?[1-9]|1[0-2])\1(?:0?[1-9]|1[0-9]|2[0-8])|(?:0?[13-9]|1[0-2])\1(?:29|30)|(?:0?[13578]|1[02])\1(?:31))|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)([-/.]+)0?2\2(?:29))(\s+([01]|([01][0-9]|2[0-3])):([0-9]|[0-5][0-9]):([0-9]|[0-5][0-9]))?$/;
/**
 * 获取字段对应数据的类型
 * @param field 数据字段名
 * @param data 数据源
 * @returns default type 返回对应的数据类型
 */

function getDefaultType(value) {
  var type = 'linear';

  if (dateRegex.test(value)) {
    type = 'time';
  } else if (Object(esm["isString"])(value)) {
    type = 'cat';
  }

  return type;
}
/**
 * @ignore
 * 为指定的 `field` 字段数据创建 scale
 * @param field 字段名
 * @param [data] 数据集，可为空
 * @param [scaleDef] 列定义，可为空
 * @returns scale 返回创建的 Scale 实例
 */


function createScaleByField(field, data, scaleDef) {
  var validData = data || [];

  if (Object(esm["isNumber"])(field) || Object(esm["isNil"])(Object(esm["firstValue"])(validData, field)) && Object(esm["isEmpty"])(scaleDef)) {
    var Identity = Object(scale_esm["getScale"])('identity');
    return new Identity({
      field: field.toString(),
      values: [field]
    });
  }

  var values = Object(esm["valuesOfKey"])(validData, field); // 如果已经定义过这个度量

  var type = Object(esm["get"])(scaleDef, 'type', getDefaultType(values[0]));
  var ScaleCtor = Object(scale_esm["getScale"])(type);
  return new ScaleCtor(_assign({
    field: field,
    values: values
  }, scaleDef));
}
/**
 * @ignore
 * 同步 scale
 * @todo 是否可以通过 scale.update() 方法进行更新
 * @param scale 需要同步的 scale 实例
 * @param newScale 同步源 Scale
 */

function syncScale(scale, newScale) {
  if (scale.type !== 'identity' && newScale.type !== 'identity') {
    var obj = {};

    for (var k in newScale) {
      if (Object.prototype.hasOwnProperty.call(newScale, k)) {
        obj[k] = newScale[k];
      }
    }

    scale.change(obj);
  }
}
/**
 * @ignore
 * get the scale name, if alias exist, return alias, or else field
 * @param scale
 * @returns the name of field
 */

function getName(scale) {
  return scale.alias || scale.field;
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/util/axis.js






/**
 * @ignore
 * get axis relative region ( 0 ~ 1) by direction when coordinate is rect
 * @param direction
 * @returns axis coordinate region
 */

function getLineAxisRelativeRegion(direction) {
  var start;
  var end;

  switch (direction) {
    case DIRECTION.TOP:
      start = {
        x: 0,
        y: 1
      };
      end = {
        x: 1,
        y: 1
      };
      break;

    case DIRECTION.RIGHT:
      start = {
        x: 1,
        y: 0
      };
      end = {
        x: 1,
        y: 1
      };
      break;

    case DIRECTION.BOTTOM:
      start = {
        x: 0,
        y: 0
      };
      end = {
        x: 1,
        y: 0
      };
      break;

    case DIRECTION.LEFT:
      start = {
        x: 0,
        y: 0
      };
      end = {
        x: 0,
        y: 1
      };
      break;

    default:
      start = end = {
        x: 0,
        y: 0
      };
  }

  return {
    start: start,
    end: end
  };
}
/**
 * @ignore
 * get axis relative region ( 0 ~ 1) by direction when coordinate is polar
 * @param coordinate
 * @returns axis coordinate region
 */

function getCircleAxisRelativeRegion(coordinate) {
  var start;
  var end;

  if (coordinate.isTransposed) {
    start = {
      x: 0,
      y: 0
    };
    end = {
      x: 1,
      y: 0
    };
  } else {
    start = {
      x: 0,
      y: 0
    };
    end = {
      x: 0,
      y: 1
    };
  }

  return {
    start: start,
    end: end
  };
}
/**
 * @ignore
 * get the axis region from coordinate
 * @param coordinate
 * @param direction
 * @returns the axis region (start point, end point)
 */

function getAxisRegion(coordinate, direction) {
  var region = {
    start: {
      x: 0,
      y: 0
    },
    end: {
      x: 0,
      y: 0
    }
  };

  if (coordinate.isRect) {
    region = getLineAxisRelativeRegion(direction);
  } else if (coordinate.isPolar) {
    region = getCircleAxisRelativeRegion(coordinate);
  }

  var start = region.start,
      end = region.end;
  return {
    start: coordinate.convert(start),
    end: coordinate.convert(end)
  };
}
/**
 * @ignore
 * get axis factor
 * @param coordinate
 * @param direction
 * @returns factor
 */

function getAxisFactor(coordinate, direction) {
  // rect coordinate, by direction
  if (coordinate.isRect) {
    return coordinate.isTransposed ? [DIRECTION.RIGHT, DIRECTION.BOTTOM].includes(direction) ? 1 : -1 : [DIRECTION.BOTTOM, DIRECTION.RIGHT].includes(direction) ? -1 : 1;
  } // polar y axis, by angle


  if (coordinate.isPolar) {
    var startAngle = coordinate.x.start;
    return startAngle < 0 ? -1 : 1;
  }

  return 1;
}
/**
 * @ignore
 * whether the axis isVertical
 * @param region
 * @returns isVertical
 */

function axis_isVertical(region) {
  var start = region.start,
      end = region.end;
  return start.x === end.x;
}
/**
 * @ignore
 * get factor by region (real position)
 * @param region
 * @param center
 * @returns factor
 */

function getAxisFactorByRegion(region, center) {
  var start = region.start,
      end = region.end;
  var isAxisVertical = axis_isVertical(region); // 垂直

  if (isAxisVertical) {
    // 左方,从下到上、右方,从上到下
    if ((start.y - end.y) * (center.x - start.x) > 0) {
      return 1;
    } else {
      return -1;
    }
  } else {
    // 下方,从左到右、上方,从右到做
    if ((end.x - start.x) * (start.y - center.y) > 0) {
      return -1;
    } else {
      return 1;
    }
  }
}
/**
 * @ignore
 * get the axis cfg from theme
 * @param theme view theme object
 * @param direction axis direction
 * @returns axis theme cfg
 */

function getAxisThemeCfg(theme, direction) {
  return Object(esm["get"])(theme, ['components', 'axis', direction], {});
}
/**
 * @ignore
 * get circle axis center and radius
 * @param coordinate
 */

function getCircleAxisCenterRadius(coordinate) {
  // @ts-ignore
  var x = coordinate.x,
      y = coordinate.y,
      center = coordinate.circleCenter;
  var isReflectY = y.start > y.end;
  var start = coordinate.isTransposed ? coordinate.convert({
    x: isReflectY ? 0 : 1,
    y: 0
  }) : coordinate.convert({
    x: 0,
    y: isReflectY ? 0 : 1
  });
  var startVector = [start.x - center.x, start.y - center.y];
  var normalVector = [1, 0];
  var startAngle = start.y > center.y ? matrix_util_esm["c" /* vec2 */].angle(startVector, normalVector) : matrix_util_esm["c" /* vec2 */].angle(startVector, normalVector) * -1;
  var endAngle = startAngle + (x.end - x.start);
  var radius = Math.sqrt(Math.pow(start.x - center.x, 2) + Math.pow(start.y - center.y, 2));
  return {
    center: center,
    radius: radius,
    startAngle: startAngle,
    endAngle: endAngle
  };
}
/**
 * @ignore
 * 从配置中获取单个字段的 axis 配置
 * @param axes
 * @param field
 * @returns the axis option of field
 */

function getAxisOption(axes, field) {
  if (Object(esm["isBoolean"])(axes)) {
    return axes === false ? false : {};
  }

  return Object(esm["get"])(axes, [field]);
}
/**
 * @ignore
 * 如果配置了 position，则使用配置
 * @param axisOption
 * @param def
 */

function getAxisDirection(axisOption, def) {
  return Object(esm["get"])(axisOption, 'position', def);
}
/**
 * 获取 axis 的 title 文本
 * @param scale
 * @param axisOption
 */

function getAxisTitleText(scale, axisOption) {
  return Object(esm["get"])(axisOption, ['title', 'text'], getName(scale));
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/facet/facet.js




/**
 * facet 基类
 *  - 定义生命周期，方便自定义 facet
 *  - 提供基础的生命流程方法
 *
 * 生命周期：
 *
 * 初始化 init
 * 1. 初始化容器
 * 2. 数据分面，生成分面布局信息
 *
 * 渲染阶段 render
 * 1. view 创建
 * 2. title
 * 3. axis
 *
 * 清除阶段 clear
 * 1. 清除 view
 *
 * 销毁阶段 destroy
 * 1. clear
 * 2. 清除事件
 * 3. 清除 group
 */

var facet_Facet =
/** @class */
function () {
  function Facet(view, cfg) {
    /** 是否销毁 */
    this.destroyed = false;
    /** 分面之后的所有分面数据结构 */

    this.facets = [];
    this.view = view;
    this.cfg = Object(esm["deepMix"])({}, this.getDefaultCfg(), cfg);
  }
  /**
   * 初始化过程
   */


  Facet.prototype.init = function () {
    // 初始化容器
    if (!this.container) {
      this.container = this.createContainer();
    } // 生成分面布局信息


    var data = this.view.getData();
    this.facets = this.generateFacets(data);
  };
  /**
   * 渲染分面，由上层 view 调用。包括：
   *  - 分面 view
   *  - 轴
   *  - title
   *
   *  子类可以复写，添加一些其他组件，比如滚动条等
   */


  Facet.prototype.render = function () {
    this.renderViews();
  };
  /**
   * 更新 facet
   */


  Facet.prototype.update = function () {// 其实不用做任何事情，因为 facet 最终生成的 View 和 Geometry 都在父 view 的更新中处理了
  };
  /**
   * 清空，clear 之后如果还需要使用，需要重新调用 init 初始化过程
   * 一般在数据有变更的时候调用，重新进行数据的分面逻辑
   */


  Facet.prototype.clear = function () {
    this.clearFacetViews();
  };
  /**
   * 销毁
   */


  Facet.prototype.destroy = function () {
    this.clear();

    if (this.container) {
      this.container.remove(true);
      this.container = undefined;
    }

    this.destroyed = true;
    this.view = undefined;
    this.facets = [];
  };
  /**
   * 根据 facet 生成 view，可以给上层自定义使用
   * @param facet
   */


  Facet.prototype.facetToView = function (facet) {
    var region = facet.region,
        data = facet.data,
        _a = facet.padding,
        padding = _a === void 0 ? this.cfg.padding : _a;
    var view = this.view.createView({
      region: region,
      padding: padding
    }); // 设置分面的数据

    view.data(data || []);
    facet.view = view; // 前置钩子

    this.beforeEachView(view, facet);
    var eachView = this.cfg.eachView;

    if (eachView) {
      eachView(view, facet);
    } // 后置钩子


    this.afterEachView(view, facet);
    return view;
  }; // 创建容器


  Facet.prototype.createContainer = function () {
    var foregroundGroup = this.view.getLayer(LAYER.FORE);
    return foregroundGroup.addGroup();
  };
  /**
   * 初始化 view
   */


  Facet.prototype.renderViews = function () {
    this.createFacetViews();
  };
  /**
   * 创建 分面 view
   */


  Facet.prototype.createFacetViews = function () {
    var _this = this; // 使用分面数据 创建分面 view


    return this.facets.map(function (facet) {
      return _this.facetToView(facet);
    });
  };
  /**
   * 从 view 中清除 facetView
   */


  Facet.prototype.clearFacetViews = function () {
    var _this = this; // 从 view 中移除分面 view


    Object(esm["each"])(this.facets, function (facet) {
      if (facet.view) {
        _this.view.removeView(facet.view);

        facet.view = undefined;
      }
    });
  }; // 其他一些提供给子类使用的方法

  /**
   * 获取这个字段对应的所有值，数组
   * @protected
   * @param data 数据
   * @param field 字段名
   * @return 字段对应的值
   */


  Facet.prototype.getFieldValues = function (data, field) {
    var rst = [];
    var cache = {}; // 去重、去除 Nil 值

    Object(esm["each"])(data, function (d) {
      var value = d[field];

      if (!Object(esm["isNil"])(value) && !cache[value]) {
        rst.push(value);
        cache[value] = true;
      }
    });
    return rst;
  };
  /**
   * 获得每个分面的 region，平分区域
   * @param rows row 总数
   * @param cols col 总数
   * @param xIndex x 方向 index
   * @param yIndex y 方向 index
   */


  Facet.prototype.getRegion = function (rows, cols, xIndex, yIndex) {
    // x, y 方向均分 100% 宽高
    var xRatio = 1 / (cols === 0 ? 1 : cols);
    var yRatio = 1 / (rows === 0 ? 1 : rows);
    var start = {
      x: xRatio * xIndex,
      y: yRatio * yIndex
    };
    var end = {
      x: xRatio * (xIndex + 1),
      y: yRatio * (yIndex + 1)
    };
    return {
      start: start,
      end: end
    };
  };

  Facet.prototype.getDefaultCfg = function () {
    return {
      eachView: undefined,
      showTitle: true,
      padding: 10,
      fields: []
    };
  };
  /**
   * 默认的 title 样式，因为有的分面是 title，有的分面配置是 columnTitle、rowTitle
   */


  Facet.prototype.getDefaultTitleCfg = function () {
    // @ts-ignore
    var fontFamily = this.view.getTheme().fontFamily;
    return {
      style: {
        fontSize: 14,
        fill: '#666',
        fontFamily: fontFamily
      }
    };
  };
  /**
   * 处理 axis 的默认配置
   * @param view
   * @param facet
   */


  Facet.prototype.processAxis = function (view, facet) {
    var options = view.getOptions();
    var coordinateOption = options.coordinate;
    var geometries = view.geometries;
    var coordinateType = Object(esm["get"])(coordinateOption, 'type', 'rect');

    if (coordinateType === 'rect' && geometries.length) {
      if (Object(esm["isNil"])(options.axes)) {
        // @ts-ignore
        options.axes = {};
      }

      var axes = options.axes;

      var _a = geometries[0].getXYFields(),
          x = _a[0],
          y = _a[1];

      var xOption = getAxisOption(axes, x);
      var yOption = getAxisOption(axes, y);

      if (xOption !== false) {
        options.axes[x] = this.getXAxisOption(x, axes, xOption, facet);
      }

      if (yOption !== false) {
        options.axes[y] = this.getYAxisOption(y, axes, yOption, facet);
      }
    }
  };
  /**
   * 获取分面数据
   * @param conditions
   */


  Facet.prototype.getFacetDataFilter = function (conditions) {
    return function (datum) {
      // 过滤出全部满足条件的数据
      return Object(esm["every"])(conditions, function (condition) {
        var field = condition.field,
            value = condition.value;

        if (!Object(esm["isNil"])(value) && field) {
          return datum[field] === value;
        }

        return true;
      });
    };
  };

  return Facet;
}();


// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/facet/index.js


/**
 * 所有的 Facet 类
 */

var Facets = {};
/**
 * 根据 type 获取 facet 类
 * @param type 分面类型
 */

var facet_getFacet = function getFacet(type) {
  return Facets[Object(esm["lowerCase"])(type)];
};
/**
 * 注册一个 Facet 类
 * @param type 分面类型
 * @param ctor 分面类
 */

var facet_registerFacet = function registerFacet(type, ctor) {
  Facets[Object(esm["lowerCase"])(type)] = ctor;
};
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/base.js

/**
 * Action 的基类
 */

var base_Action =
/** @class */
function () {
  function Action(context, cfg) {
    this.context = context;
    this.cfg = cfg;
    context.addAction(this);
  }
  /**
   * 设置配置项传入的值
   * @param cfg
   */


  Action.prototype.applyCfg = function (cfg) {
    Object(esm["assign"])(this, cfg);
  };
  /**
   * Inits action，提供给子类用于继承
   */


  Action.prototype.init = function () {
    this.applyCfg(this.cfg);
  };
  /**
   * Destroys action
   */


  Action.prototype.destroy = function () {
    // 移除 action
    this.context.removeAction(this); // 清空

    this.context = null;
  };

  return Action;
}();

/* harmony default export */ var action_base = (base_Action);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/callback.js


/** 回调函数构建的 Action */

var callback_CallbackAction =
/** @class */
function (_super) {
  __extends(CallbackAction, _super);

  function CallbackAction() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
   * 执行
   */


  CallbackAction.prototype.execute = function () {
    if (this.callback) {
      this.callback(this.context);
    }
  };
  /**
   * 销毁
   */


  CallbackAction.prototype.destroy = function () {
    _super.prototype.destroy.call(this);

    this.callback = null;
  };

  return CallbackAction;
}(action_base);

/* harmony default export */ var action_callback = (callback_CallbackAction);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/register.js


 // Action 类的缓存

var ActionCache = {};
/**
 * 根据名称获取 Action 实例
 * @param actionName - action 的名称
 * @param context 上下文
 * @returns Action 实例
 */

function createAction(actionName, context) {
  var actionOption = ActionCache[actionName];
  var action = null;

  if (actionOption) {
    var ActionClass = actionOption.ActionClass,
        cfg = actionOption.cfg;
    action = new ActionClass(context, cfg);
    action.name = actionName;
    action.init();
  }

  return action;
}
/**
 * 根据 action 的 name 获取定义的类
 * @param actionName action 的 name
 */

function getActionClass(actionName) {
  var actionOption = ActionCache[actionName];
  return Object(esm["get"])(actionOption, 'ActionClass');
}
/**
 * 注册 Action
 * @param actionName - action 的名称
 * @param ActionClass - 继承自 action 的类
 */

function registerAction(actionName, ActionClass, cfg) {
  ActionCache[actionName] = {
    ActionClass: ActionClass,
    cfg: cfg
  };
}
/**
 * 取消注册 Action
 * @param actionName action 名称
 */

function unregisterAction(actionName) {
  delete ActionCache[actionName];
}
/**
 * 根据回调函数获取 Action 实例
 * @param callback - action 的回调函数
 * @param context 上下文
 * @returns Action 实例
 */

function createCallbackAction(callback, context) {
  var action = new action_callback(context);
  action.callback = callback;
  action.name = 'callback';
  return action;
}
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.find.js
var es6_array_find = __webpack_require__("it7j");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.string.sub.js
var es6_string_sub = __webpack_require__("Ndiv");

// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/util/graphics.js
 // 获取图形的包围盒

function getPointsBox(points) {
  if (Object(esm["isEmpty"])(points)) {
    return null;
  }

  var minX = points[0].x;
  var maxX = points[0].x;
  var minY = points[0].y;
  var maxY = points[0].y;
  Object(esm["each"])(points, function (point) {
    minX = minX > point.x ? point.x : minX;
    maxX = maxX < point.x ? point.x : maxX;
    minY = minY > point.y ? point.y : minY;
    maxY = maxY < point.y ? point.y : maxY;
  });
  return {
    minX: minX,
    maxX: maxX,
    minY: minY,
    maxY: maxY,
    centerX: (minX + maxX) / 2,
    centerY: (minY + maxY) / 2
  };
}
/**
 * @ignore
 * 根据弧度计算极坐标系下的坐标点
 * @param centerX
 * @param centerY
 * @param radius
 * @param angleInRadian
 * @returns
 */


function polarToCartesian(centerX, centerY, radius, angleInRadian) {
  return {
    x: centerX + radius * Math.cos(angleInRadian),
    y: centerY + radius * Math.sin(angleInRadian)
  };
}
/**
 * @ignore
 * 根据起始角度计算绘制扇形的 path
 * @param centerX
 * @param centerY
 * @param radius
 * @param startAngleInRadian
 * @param endAngleInRadian
 * @returns
 */

function getSectorPath(centerX, centerY, radius, startAngleInRadian, endAngleInRadian, innerRadius) {
  if (innerRadius === void 0) {
    innerRadius = 0;
  }

  var start = polarToCartesian(centerX, centerY, radius, startAngleInRadian);
  var end = polarToCartesian(centerX, centerY, radius, endAngleInRadian);
  var innerStart = polarToCartesian(centerX, centerY, innerRadius, startAngleInRadian);
  var innerEnd = polarToCartesian(centerX, centerY, innerRadius, endAngleInRadian);

  if (endAngleInRadian - startAngleInRadian === Math.PI * 2) {
    // 整个圆是分割成两个圆
    var middlePoint = polarToCartesian(centerX, centerY, radius, startAngleInRadian + Math.PI);
    var innerMiddlePoint = polarToCartesian(centerX, centerY, innerRadius, startAngleInRadian + Math.PI);
    var circlePathCommands = [['M', start.x, start.y], ['A', radius, radius, 0, 1, 1, middlePoint.x, middlePoint.y], ['A', radius, radius, 0, 1, 1, end.x, end.y], ['M', innerStart.x, innerStart.y]];

    if (innerRadius) {
      circlePathCommands.push(['A', innerRadius, innerRadius, 0, 1, 0, innerMiddlePoint.x, innerMiddlePoint.y]);
      circlePathCommands.push(['A', innerRadius, innerRadius, 0, 1, 0, innerEnd.x, innerEnd.y]);
    }

    circlePathCommands.push(['M', start.x, start.y]);
    circlePathCommands.push(['Z']);
    return circlePathCommands;
  }

  var arcSweep = endAngleInRadian - startAngleInRadian <= Math.PI ? 0 : 1;
  var sectorPathCommands = [['M', start.x, start.y], ['A', radius, radius, 0, arcSweep, 1, end.x, end.y], ['L', innerEnd.x, innerEnd.y]];

  if (innerRadius) {
    sectorPathCommands.push(['A', innerRadius, innerRadius, 0, arcSweep, 0, innerStart.x, innerStart.y]);
  }

  sectorPathCommands.push(['L', start.x, start.y]);
  sectorPathCommands.push(['Z']);
  return sectorPathCommands;
}
/**
 * @ignore
 * Gets arc path
 * @param centerX
 * @param centerY
 * @param radius
 * @param startAngleInRadian
 * @param endAngleInRadian
 * @returns
 */

function getArcPath(centerX, centerY, radius, startAngleInRadian, endAngleInRadian) {
  var start = polarToCartesian(centerX, centerY, radius, startAngleInRadian);
  var end = polarToCartesian(centerX, centerY, radius, endAngleInRadian);

  if (Object(esm["isNumberEqual"])(endAngleInRadian - startAngleInRadian, Math.PI * 2)) {
    var middlePoint = polarToCartesian(centerX, centerY, radius, startAngleInRadian + Math.PI);
    return [['M', start.x, start.y], ['A', radius, radius, 0, 1, 1, middlePoint.x, middlePoint.y], ['A', radius, radius, 0, 1, 1, start.x, start.y], ['A', radius, radius, 0, 1, 0, middlePoint.x, middlePoint.y], ['A', radius, radius, 0, 1, 0, start.x, start.y], ['Z']];
  }

  var arcSweep = endAngleInRadian - startAngleInRadian <= Math.PI ? 0 : 1;
  return [['M', start.x, start.y], ['A', radius, radius, 0, arcSweep, 1, end.x, end.y]];
}
/**
 * @ignore
 * 从数据模型中的 points 换算角度
 * @param shapeModel
 * @param coordinate
 * @returns
 */

function graphics_getAngle(shapeModel, coordinate) {
  var points = shapeModel.points;
  var box = getPointsBox(points);
  var endAngle;
  var startAngle;
  var coordStartAngle = coordinate.startAngle,
      coordEndAngle = coordinate.endAngle;
  var diffAngle = coordEndAngle - coordStartAngle;

  if (coordinate.isTransposed) {
    endAngle = box.maxY * diffAngle;
    startAngle = box.minY * diffAngle;
  } else {
    endAngle = box.maxX * diffAngle;
    startAngle = box.minX * diffAngle;
  }

  endAngle += coordStartAngle;
  startAngle += coordStartAngle;
  return {
    startAngle: startAngle,
    endAngle: endAngle
  };
}
/**
 * @ignore
 * 计算多边形重心: https://en.wikipedia.org/wiki/Centroid#Of_a_polygon
 */

function getPolygonCentroid(xs, ys) {
  if (Object(esm["isNumber"])(xs) && Object(esm["isNumber"])(ys)) {
    // 普通色块图，xs 和 ys 是数值
    return [xs, ys];
  }

  var i = -1;
  var x = 0;
  var y = 0;
  var former;
  var current = xs.length - 1;
  var diff;
  var k = 0;

  while (++i < xs.length) {
    former = current;
    current = i;
    k += diff = xs[former] * ys[current] - xs[current] * ys[former];
    x += (xs[former] + xs[current]) * diff;
    y += (ys[former] + ys[current]) * diff;
  }

  k *= 3;
  return [x / k, y / k];
}
/**
 * @ignore
 * 获取需要替换的属性，如果原先图形元素存在，而新图形不存在，则设置 undefined
 */

function getReplaceAttrs(sourceShape, targetShape) {
  var originAttrs = sourceShape.attr();
  var newAttrs = targetShape.attr();
  Object(esm["each"])(originAttrs, function (v, k) {
    if (newAttrs[k] === undefined) {
      newAttrs[k] = undefined;
    }
  });
  return newAttrs;
}
// EXTERNAL MODULE: ../node_modules/core-js/modules/es7.string.pad-end.js
var es7_string_pad_end = __webpack_require__("1ZPH");

// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/util/helper.js



/**
 * @ignore
 * Determines whether between is
 * @param value
 * @param start
 * @param end
 * @returns true if between
 */

function helper_isBetween(value, start, end) {
  var min = Math.min(start, end);
  var max = Math.max(start, end);
  return value >= min && value <= max;
}
/**
 * @ignore
 * pads the current string/array with a given value (repeated, if needed) so that the resulting reaches a given length.
 * The padding is applied from the end of the current value.
 *
 * @param source
 * @param targetLength
 * @param padValue
 * @returns
 */

function padEnd(source, targetLength, padValue) {
  if (Object(esm["isString"])(source)) {
    return source.padEnd(targetLength, padValue);
  } else if (Object(esm["isArray"])(source)) {
    var sourceLength = source.length;

    if (sourceLength < targetLength) {
      var diff = targetLength - sourceLength;

      for (var i = 0; i < diff; i++) {
        source.push(padValue);
      }
    }
  }

  return source;
}
/**
 * @ignore
 * omit keys of an object.
 * @param obj
 * @param keys
 */

function omit(obj, keys) {
  keys.forEach(function (key) {
    delete obj[key];
  });
  return obj;
}
/**
 * @ignore
 * @param sourceArray
 * @param targetArray
 * @param map
 */

function uniq(sourceArray, targetArray, map) {
  if (targetArray === void 0) {
    targetArray = [];
  }

  if (map === void 0) {
    map = {};
  }

  for (var _i = 0, sourceArray_1 = sourceArray; _i < sourceArray_1.length; _i++) {
    var source = sourceArray_1[_i];

    if (!map[source]) {
      targetArray.push(source);
      map[source] = true;
    }
  }

  return targetArray;
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/util/coordinate.js


/**
 * @ignore
 * Gets x dimension length
 * @param coordinate
 * @returns x dimension length
 */

function getXDimensionLength(coordinate) {
  if (coordinate.isPolar && !coordinate.isTransposed) {
    // 极坐标系下 width 为弧长
    return (coordinate.endAngle - coordinate.startAngle) * coordinate.getRadius();
  } // 直角坐标系


  var start = coordinate.convert({
    x: 0,
    y: 0
  });
  var end = coordinate.convert({
    x: 1,
    y: 0
  }); // 坐标系有可能发生 transpose 等变换，所有通过两点之间的距离进行计算

  return Math.sqrt(Math.pow(end.x - start.x, 2) + Math.pow(end.y - start.y, 2));
}
/**
 * @ignore
 * Determines whether full circle is
 * @param coordinate
 * @returns true if full circle
 */

function isFullCircle(coordinate) {
  if (coordinate.isPolar) {
    var startAngle = coordinate.startAngle,
        endAngle = coordinate.endAngle;
    return endAngle - startAngle === Math.PI * 2;
  }

  return false;
}
/**
 * @ignore
 * 获取当前点到坐标系圆心的距离
 * @param coordinate 坐标系
 * @param point 当前点
 * @returns distance to center
 */

function getDistanceToCenter(coordinate, point) {
  var center = coordinate.getCenter();
  return Math.sqrt(Math.pow(point.x - center.x, 2) + Math.pow(point.y - center.y, 2));
}
/**
 * @ignore
 * 坐标点是否在坐标系中
 * @param coordinate
 * @param point
 */

function isPointInCoordinate(coordinate, point) {
  var result = false;

  if (coordinate) {
    if (coordinate.type === 'theta') {
      var start = coordinate.start,
          end = coordinate.end;
      result = helper_isBetween(point.x, start.x, end.x) && helper_isBetween(point.y, start.y, end.y);
    } else {
      var invertPoint = coordinate.invert(point);
      result = helper_isBetween(invertPoint.x, 0, 1) && helper_isBetween(invertPoint.y, 0, 1);
    }
  }

  return result;
}
/**
 * @ignore
 * 获取点到圆心的连线与水平方向的夹角
 */

function getAngleByPoint(coordinate, point) {
  var center = coordinate.getCenter();
  return Math.atan2(point.y - center.y, point.x - center.x);
}
/**
 * @ignore
 * 获取同坐标系范围相同的剪切区域
 * @param coordinate
 * @returns
 */

function getCoordinateClipCfg(coordinate, margin) {
  if (margin === void 0) {
    margin = 0;
  }

  var start = coordinate.start,
      end = coordinate.end;
  var width = coordinate.getWidth();
  var height = coordinate.getHeight();

  if (coordinate.isPolar) {
    var startAngle_1 = coordinate.startAngle,
        endAngle_1 = coordinate.endAngle;
    var center_1 = coordinate.getCenter();
    var radius_1 = coordinate.getRadius();
    return {
      type: 'path',
      startState: {
        path: getSectorPath(center_1.x, center_1.y, radius_1 + margin, startAngle_1, startAngle_1)
      },
      endState: function endState(ratio) {
        var diff = (endAngle_1 - startAngle_1) * ratio + startAngle_1;
        var path = getSectorPath(center_1.x, center_1.y, radius_1 + margin, startAngle_1, diff);
        return {
          path: path
        };
      },
      attrs: {
        path: getSectorPath(center_1.x, center_1.y, radius_1 + margin, startAngle_1, endAngle_1)
      }
    };
  }

  var endState;

  if (coordinate.isTransposed) {
    endState = {
      height: height + margin * 2
    };
  } else {
    endState = {
      width: width + margin * 2
    };
  }

  return {
    type: 'rect',
    startState: {
      x: start.x - margin,
      y: end.y - margin,
      width: coordinate.isTransposed ? width + margin * 2 : 0,
      height: coordinate.isTransposed ? 0 : height + margin * 2
    },
    endState: endState,
    attrs: {
      x: start.x - margin,
      y: end.y - margin,
      width: width + margin * 2,
      height: height + margin * 2
    }
  };
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/util/path.js





function _points2path(points, isInCircle) {
  var path = [];

  if (points.length) {
    path.push(['M', points[0].x, points[0].y]);

    for (var i = 1, length_1 = points.length; i < length_1; i += 1) {
      var item = points[i];
      path.push(['L', item.x, item.y]);
    }

    if (isInCircle) {
      path.push(['Z']);
    }
  }

  return path;
}

function _convertArr(arr, coord) {
  var tmp = [arr[0]];

  for (var i = 1, len = arr.length; i < len; i = i + 2) {
    var point = coord.convert({
      x: arr[i],
      y: arr[i + 1]
    });
    tmp.push(point.x, point.y);
  }

  return tmp;
}

function _convertPolarPath(pre, cur, coord) {
  var isTransposed = coord.isTransposed,
      startAngle = coord.startAngle,
      endAngle = coord.endAngle;
  var prePoint = {
    x: pre[1],
    y: pre[2]
  };
  var curPoint = {
    x: cur[1],
    y: cur[2]
  };
  var rst = [];
  var xDim = isTransposed ? 'y' : 'x';
  var angleRange = Math.abs(curPoint[xDim] - prePoint[xDim]) * (endAngle - startAngle);
  var direction = curPoint[xDim] >= prePoint[xDim] ? 1 : 0; // 圆弧的方向

  var flag = angleRange > Math.PI ? 1 : 0; // 大弧还是小弧标志位

  var convertPoint = coord.convert(curPoint);
  var r = getDistanceToCenter(coord, convertPoint);

  if (r >= 0.5) {
    // 小于1像素的圆在图像上无法识别
    if (angleRange === Math.PI * 2) {
      var middlePoint = {
        x: (curPoint.x + prePoint.x) / 2,
        y: (curPoint.y + prePoint.y) / 2
      };
      var middleConvertPoint = coord.convert(middlePoint);
      rst.push(['A', r, r, 0, flag, direction, middleConvertPoint.x, middleConvertPoint.y]);
      rst.push(['A', r, r, 0, flag, direction, convertPoint.x, convertPoint.y]);
    } else {
      rst.push(['A', r, r, 0, flag, direction, convertPoint.x, convertPoint.y]);
    }
  }

  return rst;
} // 当存在整体的圆时，去除圆前面和后面的线，防止出现直线穿过整个圆的情形


function _filterFullCirleLine(path) {
  Object(esm["each"])(path, function (subPath, index) {
    var cur = subPath;

    if (cur[0].toLowerCase() === 'a') {
      var pre = path[index - 1];
      var next = path[index + 1];

      if (next && next[0].toLowerCase() === 'a') {
        if (pre && pre[0].toLowerCase() === 'l') {
          pre[0] = 'M';
        }
      } else if (pre && pre[0].toLowerCase() === 'a') {
        if (next && next[0].toLowerCase() === 'l') {
          next[0] = 'M';
        }
      }
    }
  });
}
/**
 * @ignore
 * 计算光滑的贝塞尔曲线
 */


var path_smoothBezier = function smoothBezier(points, smooth, isLoop, constraint) {
  var cps = [];
  var prevPoint;
  var nextPoint;
  var hasConstraint = !!constraint;
  var min;
  var max;

  if (hasConstraint) {
    min = [Infinity, Infinity];
    max = [-Infinity, -Infinity];

    for (var i = 0, l = points.length; i < l; i++) {
      var point = points[i];
      min = matrix_util_esm["c" /* vec2 */].min([0, 0], min, point);
      max = matrix_util_esm["c" /* vec2 */].max([0, 0], max, point);
    }

    min = matrix_util_esm["c" /* vec2 */].min([0, 0], min, constraint[0]);
    max = matrix_util_esm["c" /* vec2 */].max([0, 0], max, constraint[1]);
  }

  for (var i = 0, len = points.length; i < len; i++) {
    var point = points[i];

    if (isLoop) {
      prevPoint = points[i ? i - 1 : len - 1];
      nextPoint = points[(i + 1) % len];
    } else {
      if (i === 0 || i === len - 1) {
        cps.push(point);
        continue;
      } else {
        prevPoint = points[i - 1];
        nextPoint = points[i + 1];
      }
    }

    var v = [0, 0];
    v = matrix_util_esm["c" /* vec2 */].sub(v, nextPoint, prevPoint);
    v = matrix_util_esm["c" /* vec2 */].scale(v, v, smooth);
    var d0 = matrix_util_esm["c" /* vec2 */].distance(point, prevPoint);
    var d1 = matrix_util_esm["c" /* vec2 */].distance(point, nextPoint);
    var sum = d0 + d1;

    if (sum !== 0) {
      d0 /= sum;
      d1 /= sum;
    }

    var v1 = matrix_util_esm["c" /* vec2 */].scale([0, 0], v, -d0);
    var v2 = matrix_util_esm["c" /* vec2 */].scale([0, 0], v, d1);
    var cp0 = matrix_util_esm["c" /* vec2 */].add([0, 0], point, v1);
    var cp1 = matrix_util_esm["c" /* vec2 */].add([0, 0], point, v2);

    if (hasConstraint) {
      cp0 = matrix_util_esm["c" /* vec2 */].max([0, 0], cp0, min);
      cp0 = matrix_util_esm["c" /* vec2 */].min([0, 0], cp0, max);
      cp1 = matrix_util_esm["c" /* vec2 */].max([0, 0], cp1, min);
      cp1 = matrix_util_esm["c" /* vec2 */].min([0, 0], cp1, max);
    }

    cps.push(cp0);
    cps.push(cp1);
  }

  if (isLoop) {
    cps.push(cps.shift());
  }

  return cps;
};
/**
 * @ignore
 * 贝塞尔曲线
 */

function catmullRom2bezier(crp, z, constraint) {
  var isLoop = !!z;
  var pointList = [];

  for (var i = 0, l = crp.length; i < l; i += 2) {
    pointList.push([crp[i], crp[i + 1]]);
  }

  var controlPointList = path_smoothBezier(pointList, 0.4, isLoop, constraint);
  var len = pointList.length;
  var d1 = [];
  var cp1;
  var cp2;
  var p;

  for (var i = 0; i < len - 1; i++) {
    cp1 = controlPointList[i * 2];
    cp2 = controlPointList[i * 2 + 1];
    p = pointList[i + 1];
    d1.push(['C', cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]]);
  }

  if (isLoop) {
    cp1 = controlPointList[len];
    cp2 = controlPointList[len + 1];
    p = pointList[0];
    d1.push(['C', cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]]);
  }

  return d1;
}
/**
 * @ignore
 * 将点连接成路径 path
 */

function path_getLinePath(points, isInCircle) {
  return _points2path(points, isInCircle);
}
/**
 * @ignore
 * 根据关键点获取限定了范围的平滑线
 */

function getSplinePath(points, isInCircle, constaint) {
  var data = [];
  var first = points[0];
  var prePoint = null;

  if (points.length <= 2) {
    // 两点以内直接绘制成路径
    return path_getLinePath(points, isInCircle);
  }

  for (var i = 0, len = points.length; i < len; i++) {
    var point = points[i];

    if (!prePoint || !(prePoint.x === point.x && prePoint.y === point.y)) {
      data.push(point.x);
      data.push(point.y);
      prePoint = point;
    }
  }

  var constraint = constaint || [// 范围
  [0, 0], [1, 1]];
  var splinePath = catmullRom2bezier(data, isInCircle, constraint);
  splinePath.unshift(['M', first.x, first.y]);
  return splinePath;
}
/**
 * @ignore
 * 将归一化后的路径数据转换成坐标
 */

function convertNormalPath(coord, path) {
  var tmp = [];
  Object(esm["each"])(path, function (subPath) {
    var action = subPath[0];

    switch (action.toLowerCase()) {
      case 'm':
      case 'l':
      case 'c':
        tmp.push(_convertArr(subPath, coord));
        break;

      case 'z':
      default:
        tmp.push(subPath);
        break;
    }
  });
  return tmp;
}
/**
 * @ignore
 * 将路径转换为极坐标下的真实路径
 */

function convertPolarPath(coord, path) {
  var tmp = [];
  var pre;
  var cur;
  var transposed;
  var equals;
  Object(esm["each"])(path, function (subPath, index) {
    var action = subPath[0];

    switch (action.toLowerCase()) {
      case 'm':
      case 'c':
      case 'q':
        tmp.push(_convertArr(subPath, coord));
        break;

      case 'l':
        pre = path[index - 1];
        cur = subPath;
        transposed = coord.isTransposed; // 是否半径相同，转换成圆弧

        equals = transposed ? pre[pre.length - 2] === cur[1] : pre[pre.length - 1] === cur[2];

        if (equals) {
          tmp = tmp.concat(_convertPolarPath(pre, cur, coord));
        } else {
          // y 不相等，所以直接转换
          tmp.push(_convertArr(subPath, coord));
        }

        break;

      case 'z':
      default:
        tmp.push(subPath);
        break;
    }
  });

  _filterFullCirleLine(tmp); // 过滤多余的直线


  return tmp;
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/util/bbox.js



/**
 * 用于包围盒计算。
 */

var bbox_BBox =
/** @class */
function () {
  function BBox(x, y, width, height) {
    if (x === void 0) {
      x = 0;
    }

    if (y === void 0) {
      y = 0;
    }

    if (width === void 0) {
      width = 0;
    }

    if (height === void 0) {
      height = 0;
    }

    this.x = x;
    this.y = y;
    this.height = height;
    this.width = width;
  }

  BBox.fromRange = function (minX, minY, maxX, maxY) {
    return new BBox(minX, minY, maxX - minX, maxY - minY);
  };

  Object.defineProperty(BBox.prototype, "minX", {
    get: function get() {
      return this.x;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BBox.prototype, "maxX", {
    get: function get() {
      return this.x + this.width;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BBox.prototype, "minY", {
    get: function get() {
      return this.y;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BBox.prototype, "maxY", {
    get: function get() {
      return this.y + this.height;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BBox.prototype, "tl", {
    get: function get() {
      return {
        x: this.x,
        y: this.y
      };
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BBox.prototype, "tr", {
    get: function get() {
      return {
        x: this.maxX,
        y: this.y
      };
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BBox.prototype, "bl", {
    get: function get() {
      return {
        x: this.x,
        y: this.maxY
      };
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BBox.prototype, "br", {
    get: function get() {
      return {
        x: this.maxX,
        y: this.maxY
      };
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BBox.prototype, "top", {
    get: function get() {
      return {
        x: this.x + this.width / 2,
        y: this.minY
      };
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BBox.prototype, "right", {
    get: function get() {
      return {
        x: this.maxX,
        y: this.y + this.height / 2
      };
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BBox.prototype, "bottom", {
    get: function get() {
      return {
        x: this.x + this.width / 2,
        y: this.maxY
      };
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(BBox.prototype, "left", {
    get: function get() {
      return {
        x: this.minX,
        y: this.y + this.height / 2
      };
    },
    enumerable: false,
    configurable: true
  }); // end 计算属性

  /**
   * 包围盒是否相等
   * @param {BBox} bbox 包围盒
   * @returns      包围盒是否相等
   */

  BBox.prototype.isEqual = function (bbox) {
    return this.x === bbox.x && this.y === bbox.y && this.width === bbox.width && this.height === bbox.height;
  };
  /**
   * 克隆包围盒
   * @returns 包围盒
   */


  BBox.prototype.clone = function () {
    return new BBox(this.x, this.y, this.width, this.height);
  };
  /**
   * 取并集
   * @param subBBox
   */


  BBox.prototype.add = function () {
    var subBBox = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      subBBox[_i] = arguments[_i];
    }

    var bbox = this.clone();
    Object(esm["each"])(subBBox, function (b) {
      bbox.x = Math.min(b.x, bbox.x);
      bbox.y = Math.min(b.y, bbox.y);
      bbox.width = Math.max(b.maxX, bbox.maxX) - bbox.x;
      bbox.height = Math.max(b.maxY, bbox.maxY) - bbox.y;
    });
    return bbox;
  };
  /**
   * 取交集
   * @param subBBox
   */


  BBox.prototype.merge = function () {
    var subBBox = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      subBBox[_i] = arguments[_i];
    }

    var bbox = this.clone();
    Object(esm["each"])(subBBox, function (b) {
      bbox.x = Math.max(b.x, bbox.x);
      bbox.y = Math.max(b.y, bbox.y);
      bbox.width = Math.min(b.maxX, bbox.maxX) - bbox.x;
      bbox.height = Math.min(b.maxY, bbox.maxY) - bbox.y;
    });
    return bbox;
  };
  /**
   * bbox 剪裁
   * @param subBBox
   * @param direction
   */


  BBox.prototype.cut = function (subBBox, direction) {
    var width = subBBox.width;
    var height = subBBox.height;

    switch (direction) {
      case DIRECTION.TOP:
      case DIRECTION.TOP_LEFT:
      case DIRECTION.TOP_RIGHT:
        return BBox.fromRange(this.minX, this.minY + height, this.maxX, this.maxY);

      case DIRECTION.RIGHT:
      case DIRECTION.RIGHT_TOP:
      case DIRECTION.RIGHT_BOTTOM:
        return BBox.fromRange(this.minX, this.minY, this.maxX - width, this.maxY);

      case DIRECTION.BOTTOM:
      case DIRECTION.BOTTOM_LEFT:
      case DIRECTION.BOTTOM_RIGHT:
        return BBox.fromRange(this.minX, this.minY, this.maxX, this.maxY - height);

      case DIRECTION.LEFT:
      case DIRECTION.LEFT_TOP:
      case DIRECTION.LEFT_BOTTOM:
        return BBox.fromRange(this.minX + width, this.minY, this.maxX, this.maxY);

      default:
        // 其他情况不裁剪，原样返回
        return this;
    }
  };
  /**
   * 收缩形成新的
   * @param gap
   */


  BBox.prototype.shrink = function (gap) {
    var top = gap[0],
        right = gap[1],
        bottom = gap[2],
        left = gap[3];
    return new BBox(this.x + left, this.y + top, this.width - left - right, this.height - top - bottom);
  };
  /**
   * get the gap of two bbox, if not exceed, then 0
   * @param bbox
   * @returns [top, right, bottom, left]
   */


  BBox.prototype.exceed = function (bbox) {
    return [Math.max(-this.minY + bbox.minY, 0), Math.max(this.maxX - bbox.maxX, 0), Math.max(this.maxY - bbox.maxY, 0), Math.max(-this.minX + bbox.minX, 0)];
  };
  /**
   * 获取包围盒大小
   * @returns 包围盒大小
   */


  BBox.prototype.size = function () {
    return this.width * this.height;
  };

  return BBox;
}();


/**
 * 从一个 bbox 的 region 获取 bbox
 * @param bbox
 * @param region
 */

var getRegionBBox = function getRegionBBox(bbox, region) {
  var start = region.start,
      end = region.end;
  return new bbox_BBox(bbox.x + bbox.width * start.x, bbox.y + bbox.height * start.y, bbox.width * Math.abs(end.x - start.x), bbox.height * Math.abs(end.y - start.y));
};
/**
 * 将 bbox 转换成 points
 * @param bbox
 */

function toPoints(bbox) {
  return [[bbox.minX, bbox.minY], [bbox.maxX, bbox.minY], [bbox.maxX, bbox.maxY], [bbox.minX, bbox.maxY]];
}
// EXTERNAL MODULE: ../node_modules/@antv/path-util/lib/is-polygons-intersect.js
var is_polygons_intersect = __webpack_require__("sLzF");
var is_polygons_intersect_default = /*#__PURE__*/__webpack_require__.n(is_polygons_intersect);

// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/util.js







function getMaskBBox(context, tolerance) {
  var event = context.event;
  var maskShape = event.target;
  var maskBBox = maskShape.getCanvasBBox(); // 如果 bbox 过小则不返回

  if (!(maskBBox.width >= tolerance || maskBBox.height >= tolerance)) {
    return null;
  }

  return maskBBox;
}

function getMaskPath(context, tolerance) {
  var event = context.event;
  var maskShape = event.target;
  var maskBBox = maskShape.getCanvasBBox(); // 如果 bbox 过小则不返回

  if (!(maskBBox.width >= tolerance || maskBBox.height >= tolerance)) {
    return null;
  }

  return maskShape.attr('path');
}
/**
 * 获取当前事件相关的图表元素
 * @param context 交互的上下文
 * @ignore
 */


function getCurrentElement(context) {
  var event = context.event;
  var element;
  var target = event.target;

  if (target) {
    element = target.get('element');
  }

  return element;
}
/**
 * 获取委托对象
 * @param context 上下文
 * @ignore
 */

function getDelegationObject(context) {
  var event = context.event;
  var target = event.target;
  var delegateObject;

  if (target) {
    delegateObject = target.get('delegateObject');
  }

  return delegateObject;
}
function isElementChange(context) {
  var event = context.event.gEvent; // 在同一个 element 内部移动，label 和 shape 之间

  if (event && event.fromShape && event.toShape && event.fromShape.get('element') === event.toShape.get('element')) {
    return false;
  }

  return true;
}
/**
 * 是否是列表组件
 * @param delegateObject 委托对象
 * @ignore
 */

function isList(delegateObject) {
  return delegateObject && delegateObject.component && delegateObject.component.isList();
}
/**
 * 是否是滑块组件
 * @param delegateObject 委托对象
 * @ignore
 */

function isSlider(delegateObject) {
  return delegateObject && delegateObject.component && delegateObject.component.isSlider();
}
/**
 * 是否由 mask 触发
 * @param context 上下文
 * @ignore
 */

function isMask(context) {
  var event = context.event;
  var target = event.target;
  return target && target.get('name') === 'mask';
}
/**
 * 获取被遮挡的 elements
 * @param context 上下文
 * @ignore
 */

function getMaskedElements(context, tolerance) {
  var target = context.event.target;

  if (target.get('type') === 'path') {
    var maskPath = getMaskPath(context, tolerance);

    if (!maskPath) {
      return;
    }

    return getElementsByPath(context.view, maskPath);
  }

  var maskBBox = getMaskBBox(context, tolerance); // 如果 bbox 过小则不返回

  if (!maskBBox) {
    return null;
  }

  return getIntersectElements(context.view, maskBBox);
}
/**
 * @ignore
 */

function getSiblingMaskElements(context, sibling, tolerance) {
  var maskBBox = getMaskBBox(context, tolerance); // 如果 bbox 过小则不返回

  if (!maskBBox) {
    return null;
  }

  var view = context.view;
  var start = getSiblingPoint(view, sibling, {
    x: maskBBox.x,
    y: maskBBox.y
  });
  var end = getSiblingPoint(view, sibling, {
    x: maskBBox.maxX,
    y: maskBBox.maxY
  });
  var box = {
    minX: start.x,
    minY: start.y,
    maxX: end.x,
    maxY: end.y
  };
  return getIntersectElements(sibling, box);
}
/**
 * 获取所有的图表元素
 * @param view View/Chart
 * @ignore
 */

function getElements(view) {
  var geometries = view.geometries;
  var rst = [];
  Object(esm["each"])(geometries, function (geom) {
    var elements = geom.elements;
    rst = rst.concat(elements);
  });

  if (view.views && view.views.length) {
    Object(esm["each"])(view.views, function (subView) {
      rst = rst.concat(getElements(subView));
    });
  }

  return rst;
}
/**
 * 获取所有的图表元素
 * @param view View/Chart
 * @param field 字段名
 * @param value 字段值
 * @ignore
 */

function getElementsByField(view, field, value) {
  var elements = getElements(view);
  return elements.filter(function (el) {
    return getElementValue(el, field) === value;
  });
}
/**
 * 根据状态名获取图表元素
 * @param view View/Chart
 * @param stateName 状态名
 * @ignore
 */

function getElementsByState(view, stateName) {
  var geometries = view.geometries;
  var rst = [];
  Object(esm["each"])(geometries, function (geom) {
    var elements = geom.getElementsBy(function (el) {
      return el.hasState(stateName);
    });
    rst = rst.concat(elements);
  });
  return rst;
}
/**
 * 获取图表元素对应字段的值
 * @param element 图表元素
 * @param field 字段名
 * @ignore
 */

function getElementValue(element, field) {
  var model = element.getModel();
  var record = model.data;
  var value;

  if (Object(esm["isArray"])(record)) {
    value = record[0][field];
  } else {
    value = record[field];
  }

  return value;
}
/**
 * 两个包围盒是否相交
 * @param box1 包围盒1
 * @param box2 包围盒2
 * @ignore
 */

function intersectRect(box1, box2) {
  return !(box2.minX > box1.maxX || box2.maxX < box1.minX || box2.minY > box1.maxY || box2.maxY < box1.minY);
}
/**
 * 获取包围盒内的图表元素
 * @param view View/Chart
 * @param box 包围盒
 * @ignore
 */

function getIntersectElements(view, box) {
  var elements = getElements(view);
  var rst = [];
  Object(esm["each"])(elements, function (el) {
    var shape = el.shape;
    var shapeBBox = shape.getCanvasBBox();

    if (intersectRect(box, shapeBBox)) {
      rst.push(el);
    }
  });
  return rst;
}

function pathToPoints(path) {
  var points = [];
  Object(esm["each"])(path, function (seg) {
    var command = seg[0];

    if (command !== 'A') {
      for (var i = 1; i < seg.length; i = i + 2) {
        points.push([seg[i], seg[i + 1]]);
      }
    } else {
      var length_1 = seg.length;
      points.push([seg[length_1 - 2], seg[length_1 - 1]]);
    }
  });
  return points;
}
/**
 * 获取包围盒内的图表元素
 * @param view View/Chart
 * @param path 路径
 * @ignore
 */


function getElementsByPath(view, path) {
  var elements = getElements(view);
  var points = pathToPoints(path);
  var rst = elements.filter(function (el) {
    var shape = el.shape;
    var shapePoints;

    if (shape.get('type') === 'path') {
      shapePoints = pathToPoints(shape.attr('path'));
    } else {
      var shapeBBox = shape.getCanvasBBox();
      shapePoints = toPoints(shapeBBox);
    }

    return is_polygons_intersect_default()(points, shapePoints);
  });
  return rst;
}
/**
 * 获取当前 View 的所有组件
 * @param view View/Chart
 * @ignore
 */

function getComponents(view) {
  return view.getComponents().map(function (co) {
    return co.component;
  });
}
/** @ignore */

function action_util_distance(p1, p2) {
  var dx = p2.x - p1.x;
  var dy = p2.y - p1.y;
  return Math.sqrt(dx * dx + dy * dy);
}
/** @ignore */

function getSpline(points, z) {
  if (points.length <= 2) {
    return path_getLinePath(points, false);
  }

  var first = points[0];
  var arr = [];
  Object(esm["each"])(points, function (point) {
    arr.push(point.x);
    arr.push(point.y);
  });
  var path = catmullRom2bezier(arr, z, null);
  path.unshift(['M', first.x, first.y]);
  return path;
}
/**
 * 检测点是否在包围盒内
 * @param box 包围盒
 * @param point 点
 * @ignore
 */

function isInBox(box, point) {
  return box.x <= point.x && box.maxX >= point.x && box.y <= point.y && box.maxY > point.y;
}
/**
 * 获取同 view 同一级的 views
 * @param view 当前 view
 * @returns 同一级的 views
 * @ignore
 */

function getSilbings(view) {
  var parent = view.parent;
  var siblings = null;

  if (parent) {
    siblings = parent.views.filter(function (sub) {
      return sub !== view;
    });
  }

  return siblings;
}

function point2Normalize(view, point) {
  var coord = view.getCoordinate();
  return coord.invert(point);
}
/**
 * 将 view 上的一点转换成另一个 view 的点
 * @param view 当前的 view
 * @param sibling 同一层级的 view
 * @param point 指定点
 * @ignore
 */


function getSiblingPoint(view, sibling, point) {
  var normalPoint = point2Normalize(view, point);
  return sibling.getCoordinate().convert(normalPoint);
}
/**
 * 是否在记录中，临时因为所有的 view 中的数据不是引用，而使用的方法
 * 不同 view 上对数据的引用不相等，导致无法直接用 includes
 * 假设 x, y 值相等时是同一条数据，这个假设不完全正确，而改成 isEqual 则成本太高
 * 后面改成同一个引用时可以修改回来
 * @param records
 * @param record
 * @param xFiled
 * @param yField
 * @returns
 * @ignore
 */

function isInRecords(records, record, xFiled, yField) {
  var isIn = false;
  Object(esm["each"])(records, function (r) {
    if (r[xFiled] === record[xFiled] && r[yField] === record[yField]) {
      isIn = true;
      return false;
    }
  });
  return isIn;
} // 级联获取 field 对应的 scale，如果 view 上没有，遍历子 view

function getScaleByField(view, field) {
  var scale = view.getScaleByField(field);

  if (!scale && view.views) {
    Object(esm["each"])(view.views, function (subView) {
      scale = getScaleByField(subView, field);

      if (scale) {
        return false; // 终止循环
      }
    });
  }

  return scale;
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/context.js





/**
 * 交互的上下文
 */

var context_Context =
/** @class */
function () {
  function Context(view) {
    /** 当前所有的 Action */
    this.actions = [];
    /** 当前事件对象 */

    this.event = null;
    this.cacheMap = {};
    this.view = view;
  }
  /**
   * 缓存信息
   * @param params 缓存的字段
   *  - 如果一个字段则获取缓存
   *  - 两个字段则设置缓存
   */


  Context.prototype.cache = function () {
    var params = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      params[_i] = arguments[_i];
    }

    if (params.length === 1) {
      return this.cacheMap[params[0]];
    } else if (params.length === 2) {
      this.cacheMap[params[0]] = params[1];
    }
  };
  /**
   * 获取 Action
   * @param name Action 的名称
   */


  Context.prototype.getAction = function (name) {
    return this.actions.find(function (action) {
      return action.name === name;
    });
  };
  /**
   * 获取 Action
   * @param action Action 对象
   */


  Context.prototype.addAction = function (action) {
    this.actions.push(action);
  };
  /**
   * 移除 Action
   * @param action Action 对象
   */


  Context.prototype.removeAction = function (action) {
    var actions = this.actions;
    var index = this.actions.indexOf(action);

    if (index >= 0) {
      actions.splice(index, 1);
    }
  };
  /**
   * 获取当前的点
   */


  Context.prototype.getCurrentPoint = function () {
    var event = this.event;

    if (event) {
      if (event.target instanceof HTMLElement) {
        var canvas = this.view.getCanvas();
        var point = canvas.getPointByClient(event.clientX, event.clientY);
        return point;
      } else {
        return {
          x: event.x,
          y: event.y
        };
      }
    }

    return null;
  };
  /**
   * 获取当前 shape
   * @returns current shape
   */


  Context.prototype.getCurrentShape = function () {
    return Object(esm["get"])(this.event, ['gEvent', 'shape']);
  };
  /**
   * 当前的触发是否在 View 内
   */


  Context.prototype.isInPlot = function () {
    var point = this.getCurrentPoint();

    if (point) {
      return this.view.isPointInPlot(point);
    }

    return false;
  };
  /**
   * 是否在指定的图形内
   * @param name shape 的 name
   */


  Context.prototype.isInShape = function (name) {
    var shape = this.getCurrentShape(); // 不再考虑在 shape 的 parent 内的情况

    if (shape) {
      return shape.get('name') === name;
    }

    return false;
  };
  /**
   * 当前的触发是组件内部
   * @param name 组件名，可以为空
   */


  Context.prototype.isInComponent = function (name) {
    var components = getComponents(this.view);
    var point = this.getCurrentPoint();

    if (point) {
      return !!components.find(function (component) {
        var bbox = component.getBBox();

        if (name) {
          return component.get('name') === name && isInBox(bbox, point);
        } else {
          return isInBox(bbox, point);
        }
      });
    }

    return false;
  };
  /**
   * 销毁
   */


  Context.prototype.destroy = function () {
    this.view = null;
    this.event = null; // 先销毁 action 再清空，一边遍历，一边删除，所以数组需要更新引用

    Object(esm["each"])(this.actions.slice(), function (action) {
      action.destroy();
    });
    this.actions = null;
    this.cacheMap = null;
  };

  return Context;
}();

/* harmony default export */ var interaction_context = (context_Context);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/interaction.js
/**
 * 交互的基类。
 */
var Interaction =
/** @class */
function () {
  function Interaction(view, cfg) {
    this.view = view;
    this.cfg = cfg;
  }
  /**
   * 初始化。
   */


  Interaction.prototype.init = function () {
    this.initEvents();
  };
  /**
   * 绑定事件
   */


  Interaction.prototype.initEvents = function () {};
  /**
   * 销毁事件
   */


  Interaction.prototype.clearEvents = function () {};
  /**
   * 销毁。
   */


  Interaction.prototype.destroy = function () {
    this.clearEvents();
  };

  return Interaction;
}();

/* harmony default export */ var interaction_interaction = (Interaction);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/grammar-interaction.js






 // 将字符串转换成 action

function parseAction(actionStr, context) {
  var arr = actionStr.split(':');
  var actionName = arr[0]; // 如果已经初始化过 action ，则直接引用之前的 action

  var action = context.getAction(actionName) || createAction(actionName, context);

  if (!action) {
    throw new Error("There is no action named " + actionName);
  }

  var methodName = arr[1];
  return {
    action: action,
    methodName: methodName
  };
} // 执行 Action


function executeAction(actionObject) {
  var action = actionObject.action,
      methodName = actionObject.methodName;

  if (action[methodName]) {
    action[methodName]();
  } else {
    throw new Error("Action(" + action.name + ") doesn't have a method called " + methodName);
  }
}

var STEP_NAMES = {
  START: 'start',
  SHOW_ENABLE: 'showEnable',
  END: 'end',
  ROLLBACK: 'rollback',
  PROCESSING: 'processing'
};
/**
 * 支持语法的交互类
 */

var grammar_interaction_GrammarInteraction =
/** @class */
function (_super) {
  __extends(GrammarInteraction, _super);

  function GrammarInteraction(view, steps) {
    var _this = _super.call(this, view, steps) || this;

    _this.callbackCaches = {}; // 某个触发和反馈在本环节是否执行或

    _this.emitCaches = {};
    _this.steps = steps;
    return _this;
  }
  /**
   * 初始化
   */


  GrammarInteraction.prototype.init = function () {
    this.initContext();

    _super.prototype.init.call(this);
  };
  /**
   * 清理资源
   */


  GrammarInteraction.prototype.destroy = function () {
    _super.prototype.destroy.call(this); // 先清理事件


    this.steps = null;

    if (this.context) {
      this.context.destroy();
      this.context = null;
    }

    this.callbackCaches = null;
    this.view = null;
  };
  /**
   * 绑定事件
   */


  GrammarInteraction.prototype.initEvents = function () {
    var _this = this;

    Object(esm["each"])(this.steps, function (stepArr, stepName) {
      Object(esm["each"])(stepArr, function (step) {
        var callback = _this.getActionCallback(stepName, step);

        if (callback) {
          // 如果存在 callback，才绑定，有时候会出现无 callback 的情况
          _this.bindEvent(step.trigger, callback);
        }
      });
    });
  };
  /**
   * 清理绑定的事件
   */


  GrammarInteraction.prototype.clearEvents = function () {
    var _this = this;

    Object(esm["each"])(this.steps, function (stepArr, stepName) {
      Object(esm["each"])(stepArr, function (step) {
        var callback = _this.getActionCallback(stepName, step);

        if (callback) {
          _this.offEvent(step.trigger, callback);
        }
      });
    });
  }; // 初始化上下文，并初始化 action


  GrammarInteraction.prototype.initContext = function () {
    var view = this.view;
    var context = new interaction_context(view);
    this.context = context;
    var steps = this.steps; // 生成具体的 Action

    Object(esm["each"])(steps, function (subSteps) {
      Object(esm["each"])(subSteps, function (step) {
        if (Object(esm["isFunction"])(step.action)) {
          // 如果传入回调函数，则直接生成 CallbackAction
          step.actionObject = {
            action: createCallbackAction(step.action, context),
            methodName: 'execute'
          };
        } else if (Object(esm["isString"])(step.action)) {
          // 如果是字符串
          step.actionObject = parseAction(step.action, context);
        } else if (Object(esm["isArray"])(step.action)) {
          // 如果是数组
          var actionArr = step.action;
          step.actionObject = [];
          Object(esm["each"])(actionArr, function (actionStr) {
            step.actionObject.push(parseAction(actionStr, context));
          });
        } // 如果 action 既不是字符串，也不是函数，则不会生成 actionObject

      });
    });
  }; // 是否允许指定阶段名称执行


  GrammarInteraction.prototype.isAllowStep = function (stepName) {
    var currentStepName = this.currentStepName;
    var steps = this.steps; // 相同的阶段允许同时执行

    if (currentStepName === stepName) {
      return true;
    }

    if (stepName === STEP_NAMES.SHOW_ENABLE) {
      // 示能在整个过程中都可用
      return true;
    }

    if (stepName === STEP_NAMES.PROCESSING) {
      // 只有当前是 start 时，才允许 processing
      return currentStepName === STEP_NAMES.START;
    }

    if (stepName === STEP_NAMES.START) {
      // 如果当前是 processing，则无法 start，必须等待 end 后才能执行
      return currentStepName !== STEP_NAMES.PROCESSING;
    }

    if (stepName === STEP_NAMES.END) {
      return currentStepName === STEP_NAMES.PROCESSING || currentStepName === STEP_NAMES.START;
    }

    if (stepName === STEP_NAMES.ROLLBACK) {
      if (steps[STEP_NAMES.END]) {
        // 如果定义了 end, 只有 end 时才允许回滚
        return currentStepName === STEP_NAMES.END;
      } else if (currentStepName === STEP_NAMES.START) {
        // 如果未定义 end, 则判断是否是开始
        return true;
      }
    }

    return false;
  }; // 具体的指定阶段是否允许执行


  GrammarInteraction.prototype.isAllowExcute = function (stepName, step) {
    if (this.isAllowStep(stepName)) {
      var key = this.getKey(stepName, step); // 如果是在本环节内仅允许触发一次，同时已经触发过，则不允许再触发

      if (step.once && this.emitCaches[key]) {
        return false;
      } // 如果是允许的阶段，则验证 isEnable 方法


      if (step.isEnable) {
        return step.isEnable(this.context);
      }

      return true; // 如果没有 isEnable 则允许执行
    }

    return false;
  };

  GrammarInteraction.prototype.enterStep = function (stepName) {
    this.currentStepName = stepName;
    this.emitCaches = {}; // 清除所有本环节触发的缓存
  }; // 执行完某个触发和反馈（子环节）


  GrammarInteraction.prototype.afterExecute = function (stepName, step) {
    // show enable 不计入正常的流程，其他情况则设置当前的 step
    if (stepName !== STEP_NAMES.SHOW_ENABLE && this.currentStepName !== stepName) {
      this.enterStep(stepName);
    }

    var key = this.getKey(stepName, step); // 一旦执行，则缓存标记为，一直保持到跳出改环节

    this.emitCaches[key] = true;
  }; // 获取某个环节的唯一的键值


  GrammarInteraction.prototype.getKey = function (stepName, step) {
    return stepName + step.trigger + step.action;
  }; // 获取 step 的回调函数，如果已经生成，则直接返回，如果未生成，则创建


  GrammarInteraction.prototype.getActionCallback = function (stepName, step) {
    var _this = this;

    var context = this.context;
    var callbackCaches = this.callbackCaches;
    var actionObject = step.actionObject;

    if (step.action && actionObject) {
      var key = this.getKey(stepName, step);

      if (!callbackCaches[key]) {
        // 动态生成执行的方法，执行对应 action 的名称
        var actionCallback = function actionCallback(event) {
          context.event = event; // 保证检测时的 event

          if (_this.isAllowExcute(stepName, step)) {
            // 如果是数组时，则依次执行
            if (Object(esm["isArray"])(actionObject)) {
              Object(esm["each"])(actionObject, function (obj) {
                context.event = event; // 可能触发新的事件，保证执行前的 context.event 是正确的

                executeAction(obj);
              });
            } else {
              context.event = event; // 保证执行前的 context.event 是正确的

              executeAction(actionObject);
            }

            _this.afterExecute(stepName, step);

            if (step.callback) {
              context.event = event; // 保证执行前的 context.event 是正确的

              step.callback(context);
            }
          } else {
            // 如果未通过验证，则事件不要绑定在上面
            context.event = null;
          }
        }; // 如果设置了 debounce


        if (step.debounce) {
          callbackCaches[key] = Object(esm["debounce"])(actionCallback, step.debounce.wait, step.debounce.immediate);
        } else if (step.throttle) {
          // 设置 throttle
          callbackCaches[key] = Object(esm["throttle"])(actionCallback, step.throttle.wait, {
            leading: step.throttle.leading,
            trailing: step.throttle.trailing
          });
        } else {
          // 直接设置
          callbackCaches[key] = actionCallback;
        }
      }

      return callbackCaches[key];
    }

    return null;
  };

  GrammarInteraction.prototype.bindEvent = function (eventName, callback) {
    var nameArr = eventName.split(':');

    if (nameArr[0] === 'window') {
      window.addEventListener(nameArr[1], callback);
    } else if (nameArr[0] === 'document') {
      document.addEventListener(nameArr[1], callback);
    } else {
      this.view.on(eventName, callback);
    }
  };

  GrammarInteraction.prototype.offEvent = function (eventName, callback) {
    var nameArr = eventName.split(':');

    if (nameArr[0] === 'window') {
      window.removeEventListener(nameArr[1], callback);
    } else if (nameArr[0] === 'document') {
      document.removeEventListener(nameArr[1], callback);
    } else {
      this.view.off(eventName, callback);
    }
  };

  return GrammarInteraction;
}(interaction_interaction);

/* harmony default export */ var grammar_interaction = (grammar_interaction_GrammarInteraction);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/index.js
 // 导出 Action 基类


// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/index.js


var Interactions = {};
/**
 * 根据交互行为名字获取对应的交互类
 * @param name 交互名字
 * @returns 交互类
 */

function getInteraction(name) {
  return Interactions[Object(esm["lowerCase"])(name)];
}
/**
 * 注册交互行为
 * @param name 交互行为名字
 * @param interaction 交互类
 */

function registerInteraction(name, interaction) {
  Interactions[Object(esm["lowerCase"])(name)] = interaction;
}
/**
 * 创建交互实例
 * @param name 交互名
 * @param view 交互应用的 View 实例
 * @param cfg 交互行为配置
 */

function createInteraction(name, view, cfg) {
  var interaciton = getInteraction(name);

  if (!interaciton) {
    return null;
  }

  if (Object(esm["isPlainObject"])(interaciton)) {
    // 如果不 clone 则会多个 interaction 实例共享 step 的定义
    var steps = Object(esm["mix"])(Object(esm["clone"])(interaciton), cfg);
    return new grammar_interaction(view, steps);
  } else {
    var cls = interaciton;
    return new cls(view, cfg);
  }
}


// EXTERNAL MODULE: ../node_modules/@antv/component/lib/tooltip/css-const.js
var css_const = __webpack_require__("m+Nv");

// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/util/theme.js





/**
 * 根据主题样式表生成主题结构
 * @param styleSheet 主题样式表
 */

function createThemeByStylesheet(styleSheet) {
  var _a;

  var shapeStyles = {
    point: {
      "default": {
        fill: styleSheet.pointFillColor,
        r: styleSheet.pointSize,
        stroke: styleSheet.pointBorderColor,
        lineWidth: styleSheet.pointBorder,
        fillOpacity: styleSheet.pointFillOpacity
      },
      active: {
        stroke: styleSheet.pointActiveBorderColor,
        lineWidth: styleSheet.pointActiveBorder
      },
      selected: {
        stroke: styleSheet.pointSelectedBorderColor,
        lineWidth: styleSheet.pointSelectedBorder
      },
      inactive: {
        fillOpacity: styleSheet.pointInactiveFillOpacity,
        strokeOpacity: styleSheet.pointInactiveBorderOpacity
      }
    },
    hollowPoint: {
      "default": {
        fill: styleSheet.hollowPointFillColor,
        lineWidth: styleSheet.hollowPointBorder,
        stroke: styleSheet.hollowPointBorderColor,
        strokeOpacity: styleSheet.hollowPointBorderOpacity,
        r: styleSheet.hollowPointSize
      },
      active: {
        stroke: styleSheet.hollowPointActiveBorderColor,
        strokeOpacity: styleSheet.hollowPointActiveBorderOpacity
      },
      selected: {
        lineWidth: styleSheet.hollowPointSelectedBorder,
        stroke: styleSheet.hollowPointSelectedBorderColor,
        strokeOpacity: styleSheet.hollowPointSelectedBorderOpacity
      },
      inactive: {
        strokeOpacity: styleSheet.hollowPointInactiveBorderOpacity
      }
    },
    area: {
      "default": {
        fill: styleSheet.areaFillColor,
        fillOpacity: styleSheet.areaFillOpacity,
        stroke: null
      },
      active: {
        fillOpacity: styleSheet.areaActiveFillOpacity
      },
      selected: {
        fillOpacity: styleSheet.areaSelectedFillOpacity
      },
      inactive: {
        fillOpacity: styleSheet.areaInactiveFillOpacity
      }
    },
    hollowArea: {
      "default": {
        fill: null,
        stroke: styleSheet.hollowAreaBorderColor,
        lineWidth: styleSheet.hollowAreaBorder,
        strokeOpacity: styleSheet.hollowAreaBorderOpacity
      },
      active: {
        fill: null,
        lineWidth: styleSheet.hollowAreaActiveBorder
      },
      selected: {
        fill: null,
        lineWidth: styleSheet.hollowAreaSelectedBorder
      },
      inactive: {
        strokeOpacity: styleSheet.hollowAreaInactiveBorderOpacity
      }
    },
    interval: {
      "default": {
        fill: styleSheet.intervalFillColor,
        fillOpacity: styleSheet.intervalFillOpacity
      },
      active: {
        stroke: styleSheet.intervalActiveBorderColor,
        lineWidth: styleSheet.intervalActiveBorder
      },
      selected: {
        stroke: styleSheet.intervalSelectedBorderColor,
        lineWidth: styleSheet.intervalSelectedBorder
      },
      inactive: {
        fillOpacity: styleSheet.intervalInactiveFillOpacity,
        strokeOpacity: styleSheet.intervalInactiveBorderOpacity
      }
    },
    hollowInterval: {
      "default": {
        fill: styleSheet.hollowIntervalFillColor,
        stroke: styleSheet.hollowIntervalBorderColor,
        lineWidth: styleSheet.hollowIntervalBorder,
        strokeOpacity: styleSheet.hollowIntervalBorderOpacity
      },
      active: {
        stroke: styleSheet.hollowIntervalActiveBorderColor,
        lineWidth: styleSheet.hollowIntervalActiveBorder,
        strokeOpacity: styleSheet.hollowIntervalActiveBorderOpacity
      },
      selected: {
        stroke: styleSheet.hollowIntervalSelectedBorderColor,
        lineWidth: styleSheet.hollowIntervalSelectedBorder,
        strokeOpacity: styleSheet.hollowIntervalSelectedBorderOpacity
      },
      inactive: {
        stroke: styleSheet.hollowIntervalInactiveBorderColor,
        lineWidth: styleSheet.hollowIntervalInactiveBorder,
        strokeOpacity: styleSheet.hollowIntervalInactiveBorderOpacity
      }
    },
    line: {
      "default": {
        stroke: styleSheet.lineBorderColor,
        lineWidth: styleSheet.lineBorder,
        strokeOpacity: styleSheet.lineBorderOpacity,
        fill: null,
        lineAppendWidth: 10
      },
      active: {
        lineWidth: styleSheet.lineActiveBorder
      },
      selected: {
        lineWidth: styleSheet.lineSelectedBorder
      },
      inactive: {
        strokeOpacity: styleSheet.lineInactiveBorderOpacity
      }
    }
  };
  var axisStyles = {
    title: {
      autoRotate: true,
      position: 'center',
      style: {
        fill: styleSheet.axisTitleTextFillColor,
        fontSize: styleSheet.axisTitleTextFontSize,
        lineHeight: styleSheet.axisTitleTextLineHeight,
        textBaseline: 'middle',
        fontFamily: styleSheet.fontFamily
      }
    },
    label: {
      autoRotate: true,
      autoHide: true,
      offset: 16,
      style: {
        fill: styleSheet.axisLabelFillColor,
        fontSize: styleSheet.axisLabelFontSize,
        lineHeight: styleSheet.axisLabelLineHeight,
        textBaseline: 'middle',
        fontFamily: styleSheet.fontFamily
      }
    },
    line: {
      style: {
        lineWidth: styleSheet.axisLineBorder,
        stroke: styleSheet.axisLineBorderColor
      }
    },
    tickLine: {
      style: {
        lineWidth: styleSheet.axisTickLineBorder,
        stroke: styleSheet.axisTickLineBorderColor
      },
      alignTick: true,
      length: styleSheet.axisTickLineLength
    },
    subTickLine: null,
    animate: true
  };
  var axisGridStyles = {
    line: {
      type: 'line',
      style: {
        stroke: styleSheet.axisGridBorderColor,
        lineWidth: styleSheet.axisGridBorder,
        lineDash: styleSheet.axisGridLineDash
      }
    },
    alignTick: true,
    animate: true
  };
  var legendStyles = {
    title: null,
    marker: {
      symbol: 'circle',
      style: {
        r: styleSheet.legendCircleMarkerSize,
        fill: styleSheet.legendMarkerColor
      }
    },
    itemName: {
      spacing: 5,
      style: {
        fill: styleSheet.legendItemNameFillColor,
        fontFamily: styleSheet.fontFamily,
        fontSize: styleSheet.legendItemNameFontSize,
        lineHeight: styleSheet.legendItemNameLineHeight,
        fontWeight: styleSheet.legendItemNameFontWeight,
        textAlign: 'start',
        textBaseline: 'middle'
      }
    },
    flipPage: true,
    animate: false
  };
  return {
    background: styleSheet.backgroundColor,
    defaultColor: styleSheet.brandColor,
    padding: 'auto',
    fontFamily: styleSheet.fontFamily,

    /** 一般柱状图宽度占比 */
    columnWidthRatio: 1 / 2,

    /** 柱状图最大宽度 */
    maxColumnWidth: null,

    /** 柱状图最小宽度 */
    minColumnWidth: null,

    /** 玫瑰图占比 */
    roseWidthRatio: 0.9999999,

    /** 多层饼图/环图占比 */
    multiplePieWidthRatio: 1 / 1.3,
    colors10: styleSheet.paletteQualitative10,
    colors20: styleSheet.paletteQualitative20,
    shapes: {
      point: ['hollow-circle', 'hollow-square', 'hollow-bowtie', 'hollow-diamond', 'hollow-hexagon', 'hollow-triangle', 'hollow-triangle-down', 'circle', 'square', 'bowtie', 'diamond', 'hexagon', 'triangle', 'triangle-down', 'cross', 'tick', 'plus', 'hyphen', 'line'],
      line: ['line', 'dash', 'dot', 'smooth'],
      area: ['area', 'smooth', 'line', 'smooth-line'],
      interval: ['rect', 'hollow-rect', 'line', 'tick']
    },
    sizes: [1, 10],
    geometries: {
      interval: {
        rect: {
          "default": {
            style: shapeStyles.interval["default"]
          },
          active: {
            style: shapeStyles.interval.active
          },
          inactive: {
            style: shapeStyles.interval.inactive
          },
          selected: {
            style: function style(element) {
              var coordinate = element.geometry.coordinate;

              if (coordinate.isPolar && coordinate.isTransposed) {
                var _a = graphics_getAngle(element.getModel(), coordinate),
                    startAngle = _a.startAngle,
                    endAngle = _a.endAngle;

                var middleAngle = (startAngle + endAngle) / 2;
                var r = 7.5;
                var x = r * Math.cos(middleAngle);
                var y = r * Math.sin(middleAngle);
                return {
                  matrix: matrix_util_esm["a" /* ext */].transform(null, [['t', x, y]])
                };
              }

              return shapeStyles.interval.selected;
            }
          }
        },
        'hollow-rect': {
          "default": {
            style: shapeStyles.hollowInterval["default"]
          },
          active: {
            style: shapeStyles.hollowInterval.active
          },
          inactive: {
            style: shapeStyles.hollowInterval.inactive
          },
          selected: {
            style: shapeStyles.hollowInterval.selected
          }
        },
        line: {
          "default": {
            style: shapeStyles.hollowInterval["default"]
          },
          active: {
            style: shapeStyles.hollowInterval.active
          },
          inactive: {
            style: shapeStyles.hollowInterval.inactive
          },
          selected: {
            style: shapeStyles.hollowInterval.selected
          }
        },
        tick: {
          "default": {
            style: shapeStyles.hollowInterval["default"]
          },
          active: {
            style: shapeStyles.hollowInterval.active
          },
          inactive: {
            style: shapeStyles.hollowInterval.inactive
          },
          selected: {
            style: shapeStyles.hollowInterval.selected
          }
        },
        funnel: {
          "default": {
            style: shapeStyles.interval["default"]
          },
          active: {
            style: shapeStyles.interval.active
          },
          inactive: {
            style: shapeStyles.interval.inactive
          },
          selected: {
            style: shapeStyles.interval.selected
          }
        },
        pyramid: {
          "default": {
            style: shapeStyles.interval["default"]
          },
          active: {
            style: shapeStyles.interval.active
          },
          inactive: {
            style: shapeStyles.interval.inactive
          },
          selected: {
            style: shapeStyles.interval.selected
          }
        }
      },
      line: {
        line: {
          "default": {
            style: shapeStyles.line["default"]
          },
          active: {
            style: shapeStyles.line.active
          },
          inactive: {
            style: shapeStyles.line.inactive
          },
          selected: {
            style: shapeStyles.line.selected
          }
        },
        dot: {
          "default": {
            style: _assign(_assign({}, shapeStyles.line["default"]), {
              lineDash: [1, 1]
            })
          },
          active: {
            style: _assign(_assign({}, shapeStyles.line.active), {
              lineDash: [1, 1]
            })
          },
          inactive: {
            style: _assign(_assign({}, shapeStyles.line.inactive), {
              lineDash: [1, 1]
            })
          },
          selected: {
            style: _assign(_assign({}, shapeStyles.line.selected), {
              lineDash: [1, 1]
            })
          }
        },
        dash: {
          "default": {
            style: _assign(_assign({}, shapeStyles.line["default"]), {
              lineDash: [5.5, 1]
            })
          },
          active: {
            style: _assign(_assign({}, shapeStyles.line.active), {
              lineDash: [5.5, 1]
            })
          },
          inactive: {
            style: _assign(_assign({}, shapeStyles.line.inactive), {
              lineDash: [5.5, 1]
            })
          },
          selected: {
            style: _assign(_assign({}, shapeStyles.line.selected), {
              lineDash: [5.5, 1]
            })
          }
        },
        smooth: {
          "default": {
            style: shapeStyles.line["default"]
          },
          active: {
            style: shapeStyles.line.active
          },
          inactive: {
            style: shapeStyles.line.inactive
          },
          selected: {
            style: shapeStyles.line.selected
          }
        },
        hv: {
          "default": {
            style: shapeStyles.line["default"]
          },
          active: {
            style: shapeStyles.line.active
          },
          inactive: {
            style: shapeStyles.line.inactive
          },
          selected: {
            style: shapeStyles.line.selected
          }
        },
        vh: {
          "default": {
            style: shapeStyles.line["default"]
          },
          active: {
            style: shapeStyles.line.active
          },
          inactive: {
            style: shapeStyles.line.inactive
          },
          selected: {
            style: shapeStyles.line.selected
          }
        },
        hvh: {
          "default": {
            style: shapeStyles.line["default"]
          },
          active: {
            style: shapeStyles.line.active
          },
          inactive: {
            style: shapeStyles.line.inactive
          },
          selected: {
            style: shapeStyles.line.selected
          }
        },
        vhv: {
          "default": {
            style: shapeStyles.line["default"]
          },
          active: {
            style: shapeStyles.line.active
          },
          inactive: {
            style: shapeStyles.line.inactive
          },
          selected: {
            style: shapeStyles.line.selected
          }
        }
      },
      polygon: {
        polygon: {
          "default": {
            style: shapeStyles.interval["default"]
          },
          active: {
            style: shapeStyles.interval.active
          },
          inactive: {
            style: shapeStyles.interval.inactive
          },
          selected: {
            style: shapeStyles.interval.selected
          }
        }
      },
      point: {
        circle: {
          "default": {
            style: shapeStyles.point["default"]
          },
          active: {
            style: shapeStyles.point.active
          },
          inactive: {
            style: shapeStyles.point.inactive
          },
          selected: {
            style: shapeStyles.point.selected
          }
        },
        square: {
          "default": {
            style: shapeStyles.point["default"]
          },
          active: {
            style: shapeStyles.point.active
          },
          inactive: {
            style: shapeStyles.point.inactive
          },
          selected: {
            style: shapeStyles.point.selected
          }
        },
        bowtie: {
          "default": {
            style: shapeStyles.point["default"]
          },
          active: {
            style: shapeStyles.point.active
          },
          inactive: {
            style: shapeStyles.point.inactive
          },
          selected: {
            style: shapeStyles.point.selected
          }
        },
        diamond: {
          "default": {
            style: shapeStyles.point["default"]
          },
          active: {
            style: shapeStyles.point.active
          },
          inactive: {
            style: shapeStyles.point.inactive
          },
          selected: {
            style: shapeStyles.point.selected
          }
        },
        hexagon: {
          "default": {
            style: shapeStyles.point["default"]
          },
          active: {
            style: shapeStyles.point.active
          },
          inactive: {
            style: shapeStyles.point.inactive
          },
          selected: {
            style: shapeStyles.point.selected
          }
        },
        triangle: {
          "default": {
            style: shapeStyles.point["default"]
          },
          active: {
            style: shapeStyles.point.active
          },
          inactive: {
            style: shapeStyles.point.inactive
          },
          selected: {
            style: shapeStyles.point.selected
          }
        },
        'triangle-down': {
          "default": {
            style: shapeStyles.point["default"]
          },
          active: {
            style: shapeStyles.point.active
          },
          inactive: {
            style: shapeStyles.point.inactive
          },
          selected: {
            style: shapeStyles.point.selected
          }
        },
        'hollow-circle': {
          "default": {
            style: shapeStyles.hollowPoint["default"]
          },
          active: {
            style: shapeStyles.hollowPoint.active
          },
          inactive: {
            style: shapeStyles.hollowPoint.inactive
          },
          selected: {
            style: shapeStyles.hollowPoint.selected
          }
        },
        'hollow-square': {
          "default": {
            style: shapeStyles.hollowPoint["default"]
          },
          active: {
            style: shapeStyles.hollowPoint.active
          },
          inactive: {
            style: shapeStyles.hollowPoint.inactive
          },
          selected: {
            style: shapeStyles.hollowPoint.selected
          }
        },
        'hollow-bowtie': {
          "default": {
            style: shapeStyles.hollowPoint["default"]
          },
          active: {
            style: shapeStyles.hollowPoint.active
          },
          inactive: {
            style: shapeStyles.hollowPoint.inactive
          },
          selected: {
            style: shapeStyles.hollowPoint.selected
          }
        },
        'hollow-diamond': {
          "default": {
            style: shapeStyles.hollowPoint["default"]
          },
          active: {
            style: shapeStyles.hollowPoint.active
          },
          inactive: {
            style: shapeStyles.hollowPoint.inactive
          },
          selected: {
            style: shapeStyles.hollowPoint.selected
          }
        },
        'hollow-hexagon': {
          "default": {
            style: shapeStyles.hollowPoint["default"]
          },
          active: {
            style: shapeStyles.hollowPoint.active
          },
          inactive: {
            style: shapeStyles.hollowPoint.inactive
          },
          selected: {
            style: shapeStyles.hollowPoint.selected
          }
        },
        'hollow-triangle': {
          "default": {
            style: shapeStyles.hollowPoint["default"]
          },
          active: {
            style: shapeStyles.hollowPoint.active
          },
          inactive: {
            style: shapeStyles.hollowPoint.inactive
          },
          selected: {
            style: shapeStyles.hollowPoint.selected
          }
        },
        'hollow-triangle-down': {
          "default": {
            style: shapeStyles.hollowPoint["default"]
          },
          active: {
            style: shapeStyles.hollowPoint.active
          },
          inactive: {
            style: shapeStyles.hollowPoint.inactive
          },
          selected: {
            style: shapeStyles.hollowPoint.selected
          }
        },
        cross: {
          "default": {
            style: shapeStyles.hollowPoint["default"]
          },
          active: {
            style: shapeStyles.hollowPoint.active
          },
          inactive: {
            style: shapeStyles.hollowPoint.inactive
          },
          selected: {
            style: shapeStyles.hollowPoint.selected
          }
        },
        tick: {
          "default": {
            style: shapeStyles.hollowPoint["default"]
          },
          active: {
            style: shapeStyles.hollowPoint.active
          },
          inactive: {
            style: shapeStyles.hollowPoint.inactive
          },
          selected: {
            style: shapeStyles.hollowPoint.selected
          }
        },
        plus: {
          "default": {
            style: shapeStyles.hollowPoint["default"]
          },
          active: {
            style: shapeStyles.hollowPoint.active
          },
          inactive: {
            style: shapeStyles.hollowPoint.inactive
          },
          selected: {
            style: shapeStyles.hollowPoint.selected
          }
        },
        hyphen: {
          "default": {
            style: shapeStyles.hollowPoint["default"]
          },
          active: {
            style: shapeStyles.hollowPoint.active
          },
          inactive: {
            style: shapeStyles.hollowPoint.inactive
          },
          selected: {
            style: shapeStyles.hollowPoint.selected
          }
        },
        line: {
          "default": {
            style: shapeStyles.hollowPoint["default"]
          },
          active: {
            style: shapeStyles.hollowPoint.active
          },
          inactive: {
            style: shapeStyles.hollowPoint.inactive
          },
          selected: {
            style: shapeStyles.hollowPoint.selected
          }
        }
      },
      area: {
        area: {
          "default": {
            style: shapeStyles.area["default"]
          },
          active: {
            style: shapeStyles.area.active
          },
          inactive: {
            style: shapeStyles.area.inactive
          },
          selected: {
            style: shapeStyles.area.selected
          }
        },
        smooth: {
          "default": {
            style: shapeStyles.area["default"]
          },
          active: {
            style: shapeStyles.area.active
          },
          inactive: {
            style: shapeStyles.area.inactive
          },
          selected: {
            style: shapeStyles.area.selected
          }
        },
        line: {
          "default": {
            style: shapeStyles.hollowArea["default"]
          },
          active: {
            style: shapeStyles.hollowArea.active
          },
          inactive: {
            style: shapeStyles.hollowArea.inactive
          },
          selected: {
            style: shapeStyles.hollowArea.selected
          }
        },
        'smooth-line': {
          "default": {
            style: shapeStyles.hollowArea["default"]
          },
          active: {
            style: shapeStyles.hollowArea.active
          },
          inactive: {
            style: shapeStyles.hollowArea.inactive
          },
          selected: {
            style: shapeStyles.hollowArea.selected
          }
        }
      },
      schema: {
        candle: {
          "default": {
            style: shapeStyles.hollowInterval["default"]
          },
          active: {
            style: shapeStyles.hollowInterval.active
          },
          inactive: {
            style: shapeStyles.hollowInterval.inactive
          },
          selected: {
            style: shapeStyles.hollowInterval.selected
          }
        },
        box: {
          "default": {
            style: shapeStyles.hollowInterval["default"]
          },
          active: {
            style: shapeStyles.hollowInterval.active
          },
          inactive: {
            style: shapeStyles.hollowInterval.inactive
          },
          selected: {
            style: shapeStyles.hollowInterval.selected
          }
        }
      },
      edge: {
        line: {
          "default": {
            style: shapeStyles.line["default"]
          },
          active: {
            style: shapeStyles.line.active
          },
          inactive: {
            style: shapeStyles.line.inactive
          },
          selected: {
            style: shapeStyles.line.selected
          }
        },
        vhv: {
          "default": {
            style: shapeStyles.line["default"]
          },
          active: {
            style: shapeStyles.line.active
          },
          inactive: {
            style: shapeStyles.line.inactive
          },
          selected: {
            style: shapeStyles.line.selected
          }
        },
        smooth: {
          "default": {
            style: shapeStyles.line["default"]
          },
          active: {
            style: shapeStyles.line.active
          },
          inactive: {
            style: shapeStyles.line.inactive
          },
          selected: {
            style: shapeStyles.line.selected
          }
        },
        arc: {
          "default": {
            style: shapeStyles.line["default"]
          },
          active: {
            style: shapeStyles.line.active
          },
          inactive: {
            style: shapeStyles.line.inactive
          },
          selected: {
            style: shapeStyles.line.selected
          }
        }
      }
    },
    components: {
      axis: {
        top: Object(esm["deepMix"])({}, axisStyles, {
          position: 'top',
          grid: null,
          title: null
        }),
        bottom: Object(esm["deepMix"])({}, axisStyles, {
          position: 'bottom',
          grid: null,
          title: null
        }),
        left: Object(esm["deepMix"])({}, axisStyles, {
          position: 'left',
          label: {
            offset: 8
          },
          title: null,
          line: null,
          tickLine: null,
          grid: axisGridStyles
        }),
        right: Object(esm["deepMix"])({}, axisStyles, {
          position: 'right',
          label: {
            offset: 8
          },
          title: null,
          line: null,
          tickLine: null,
          grid: axisGridStyles
        }),
        circle: Object(esm["deepMix"])({}, axisStyles, {
          title: null,
          label: {
            offset: 8
          },
          grid: Object(esm["deepMix"])({}, axisGridStyles, {
            line: {
              type: 'line'
            }
          })
        }),
        radius: Object(esm["deepMix"])({}, axisStyles, {
          title: null,
          label: {
            offset: 8
          },
          grid: Object(esm["deepMix"])({}, axisGridStyles, {
            line: {
              type: 'circle'
            }
          })
        })
      },
      legend: {
        right: Object(esm["deepMix"])({}, legendStyles, {
          layout: 'vertical'
        }),
        left: Object(esm["deepMix"])({}, legendStyles, {
          layout: 'vertical'
        }),
        top: Object(esm["deepMix"])({}, legendStyles, {
          layout: 'horizontal'
        }),
        bottom: Object(esm["deepMix"])({}, legendStyles, {
          layout: 'horizontal'
        }),
        continuous: {
          title: null,
          background: null,
          track: {},
          rail: {
            type: 'color',
            size: styleSheet.sliderRailHeight,
            defaultLength: styleSheet.sliderRailWidth,
            style: {
              fill: styleSheet.sliderRailFillColor,
              stroke: styleSheet.sliderRailBorderColor,
              lineWidth: styleSheet.sliderRailBorder
            }
          },
          label: {
            align: 'rail',
            spacing: 4,
            formatter: null,
            style: {
              fill: styleSheet.sliderLabelTextFillColor,
              fontSize: styleSheet.sliderLabelTextFontSize,
              lineHeight: styleSheet.sliderLabelTextLineHeight,
              textBaseline: 'middle',
              fontFamily: styleSheet.fontFamily
            }
          },
          handler: {
            size: styleSheet.sliderHandlerWidth,
            style: {
              fill: styleSheet.sliderHandlerFillColor,
              stroke: styleSheet.sliderHandlerBorderColor
            }
          },
          slidable: true
        },
        // 图例与四条边之间的间距
        margin: [0, 0, 0, 0]
      },
      tooltip: {
        showContent: true,
        follow: true,
        showCrosshairs: false,
        showMarkers: true,
        shared: false,
        enterable: false,
        position: 'auto',
        marker: {
          symbol: 'circle',
          stroke: '#fff',
          shadowBlur: 10,
          shadowOffsetX: 0,
          shadowOffSetY: 0,
          shadowColor: 'rgba(0,0,0,0.09)',
          lineWidth: 2,
          r: 4
        },
        crosshairs: {
          line: {
            style: {
              stroke: styleSheet.tooltipCrosshairsBorderColor,
              lineWidth: styleSheet.tooltipCrosshairsBorder
            }
          },
          text: null,
          textBackground: {
            padding: 2,
            style: {
              fill: 'rgba(0, 0, 0, 0.25)',
              lineWidth: 0,
              stroke: null
            }
          },
          follow: false
        },
        // tooltip dom 样式
        domStyles: (_a = {}, _a["" + css_const["CONTAINER_CLASS"]] = {
          position: 'absolute',
          visibility: 'hidden',
          zIndex: 8,
          transition: 'visibility 0.2s cubic-bezier(0.23, 1, 0.32, 1), ' + 'left 0.4s cubic-bezier(0.23, 1, 0.32, 1), ' + 'top 0.4s cubic-bezier(0.23, 1, 0.32, 1)',
          backgroundColor: styleSheet.tooltipContainerFillColor,
          opacity: styleSheet.tooltipContainerFillOpacity,
          boxShadow: styleSheet.tooltipContainerShadow,
          borderRadius: styleSheet.tooltipContainerBorderRadius + "px",
          color: styleSheet.tooltipTextFillColor,
          fontSize: styleSheet.tooltipTextFontSize + "px",
          fontFamily: styleSheet.fontFamily,
          lineHeight: styleSheet.tooltipTextLineHeight + "px",
          padding: '0 12px 0 12px'
        }, _a["" + css_const["TITLE_CLASS"]] = {
          marginBottom: '12px',
          marginTop: '12px'
        }, _a["" + css_const["LIST_CLASS"]] = {
          margin: 0,
          listStyleType: 'none',
          padding: 0
        }, _a["" + css_const["LIST_ITEM_CLASS"]] = {
          listStyleType: 'none',
          padding: 0,
          marginBottom: '12px',
          marginTop: '12px',
          marginLeft: 0,
          marginRight: 0
        }, _a["" + css_const["MARKER_CLASS"]] = {
          width: '8px',
          height: '8px',
          borderRadius: '50%',
          display: 'inline-block',
          marginRight: '8px'
        }, _a["" + css_const["VALUE_CLASS"]] = {
          display: 'inline-block',
          "float": 'right',
          marginLeft: '30px'
        }, _a)
      },
      annotation: {
        arc: {
          style: {
            stroke: styleSheet.annotationArcBorderColor,
            lineWidth: styleSheet.annotationArcBorder
          },
          animate: true
        },
        line: {
          style: {
            stroke: styleSheet.annotationLineBorderColor,
            lineDash: styleSheet.annotationLineDash,
            lineWidth: styleSheet.annotationLineBorder
          },
          text: {
            position: 'start',
            autoRotate: true,
            style: {
              fill: styleSheet.annotationTextFillColor,
              stroke: styleSheet.annotationTextBorderColor,
              lineWidth: styleSheet.annotationTextBorder,
              fontSize: styleSheet.annotationTextFontSize,
              textAlign: 'start',
              fontFamily: styleSheet.fontFamily,
              textBaseline: 'bottom'
            }
          },
          animate: true
        },
        text: {
          style: {
            fill: styleSheet.annotationTextFillColor,
            stroke: styleSheet.annotationTextBorderColor,
            lineWidth: styleSheet.annotationTextBorder,
            fontSize: styleSheet.annotationTextFontSize,
            textBaseline: 'middle',
            textAlign: 'start',
            fontFamily: styleSheet.fontFamily
          },
          animate: true
        },
        region: {
          top: false,
          style: {
            lineWidth: styleSheet.annotationRegionBorder,
            stroke: styleSheet.annotationRegionBorderColor,
            fill: styleSheet.annotationRegionFillColor,
            fillOpacity: styleSheet.annotationRegionFillOpacity
          },
          animate: true
        },
        image: {
          top: false,
          animate: true
        },
        dataMarker: {
          top: true,
          point: {
            style: {
              r: 3,
              stroke: styleSheet.brandColor,
              lineWidth: 2
            }
          },
          line: {
            style: {
              stroke: styleSheet.annotationLineBorderColor,
              lineWidth: styleSheet.annotationLineBorder
            },
            length: styleSheet.annotationDataMarkerLineLength
          },
          text: {
            style: {
              textAlign: 'start',
              fill: styleSheet.annotationTextFillColor,
              stroke: styleSheet.annotationTextBorderColor,
              lineWidth: styleSheet.annotationTextBorder,
              fontSize: styleSheet.annotationTextFontSize,
              fontFamily: styleSheet.fontFamily
            }
          },
          direction: 'upward',
          autoAdjust: true,
          animate: true
        },
        dataRegion: {
          style: {
            region: {
              fill: styleSheet.annotationRegionFillColor,
              fillOpacity: styleSheet.annotationRegionFillOpacity
            },
            text: {
              textAlign: 'center',
              textBaseline: 'bottom',
              fill: styleSheet.annotationTextFillColor,
              stroke: styleSheet.annotationTextBorderColor,
              lineWidth: styleSheet.annotationTextBorder,
              fontSize: styleSheet.annotationTextFontSize,
              fontFamily: styleSheet.fontFamily
            }
          },
          animate: true
        }
      }
    },
    labels: {
      offset: 12,
      style: {
        fill: styleSheet.labelFillColor,
        fontSize: styleSheet.labelFontSize,
        fontFamily: styleSheet.fontFamily,
        stroke: styleSheet.labelBorderColor,
        lineWidth: styleSheet.labelBorder
      },
      autoRotate: true
    },
    innerLabels: {
      style: {
        fill: styleSheet.innerLabelFillColor,
        fontSize: styleSheet.innerLabelFontSize,
        fontFamily: styleSheet.fontFamily,
        stroke: styleSheet.innerLabelBorderColor,
        lineWidth: styleSheet.innerLabelBorder
      },
      autoRotate: true
    },
    pieLabels: {
      labelHeight: 14,
      offset: 30,
      labelLine: {
        style: {
          lineWidth: styleSheet.labelLineBorder
        }
      },
      autoRotate: true
    }
  };
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/theme/style-sheet/light.js
var BLACK_COLORS = {
  100: '#000',
  95: '#0D0D0D',
  85: '#262626',
  65: '#595959',
  45: '#8C8C8C',
  25: '#BFBFBF',
  15: '#D9D9D9',
  6: '#F0F0F0'
};
var WHITE_COLORS = {
  100: '#FFFFFF',
  95: '#F2F2F2',
  85: '#D9D9D9',
  65: '#A6A6A6',
  45: '#737373',
  25: '#404040',
  15: '#262626',
  6: '#0F0F0F'
};
var QUALITATIVE_10 = ['#5B8FF9', '#5AD8A6', '#5D7092', '#F6BD16', '#E86452', '#6DC8EC', '#945FB9', '#FF9845', '#1E9493', '#FF99C3'];
var QUALITATIVE_20 = ['#5B8FF9', '#CDDDFD', '#5AD8A6', '#CDF3E4', '#5D7092', '#CED4DE', '#F6BD16', '#FCEBB9', '#E86452', '#F8D0CB', '#6DC8EC', '#D3EEF9', '#945FB9', '#DECFEA', '#FF9845', '#FFE0C7', '#1E9493', '#BBDEDE', '#FF99C3', '#FFE0ED'];
var antvLight = {
  backgroundColor: 'transparent',

  /** 主题色 */
  brandColor: QUALITATIVE_10[0],

  /** 分类色板 1，在数据量小于等于 10 时使用 */
  paletteQualitative10: QUALITATIVE_10,

  /** 分类色板 2，在数据量大于 10 时使用 */
  paletteQualitative20: QUALITATIVE_20,

  /** 语义色 */
  paletteSemanticRed: '#F4664A',

  /** 语义色 */
  paletteSemanticGreen: '#30BF78',

  /** 语义色 */
  paletteSemanticYellow: '#FAAD14',

  /** 字体 */
  fontFamily: "\"-apple-system\", \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial,\n  \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\",\n  \"Noto Color Emoji\"",
  // -------------------- 坐标轴 --------------------

  /** 坐标轴线颜色 */
  axisLineBorderColor: BLACK_COLORS[25],

  /** 坐标轴线粗细 */
  axisLineBorder: 0.5,

  /** 坐标轴线 lineDash 设置 */
  axisLineDash: null,

  /** 坐标轴标题颜色 */
  axisTitleTextFillColor: BLACK_COLORS[65],

  /** 坐标轴标题文本字体大小 */
  axisTitleTextFontSize: 12,

  /** 坐标轴标题文本行高 */
  axisTitleTextLineHeight: 12,

  /** 坐标轴标题文本字体粗细 */
  axisTitleTextFontWeight: 'normal',

  /** 坐标轴刻度线颜色 */
  axisTickLineBorderColor: BLACK_COLORS[25],

  /** 坐标轴刻度线长度 */
  axisTickLineLength: 4,

  /** 坐标轴刻度线粗细 */
  axisTickLineBorder: 0.5,

  /** 坐标轴次刻度线颜色 */
  axisSubTickLineBorderColor: BLACK_COLORS[15],

  /** 坐标轴次刻度线长度 */
  axisSubTickLineLength: 2,

  /** 坐标轴次刻度线粗细 */
  axisSubTickLineBorder: 0.5,

  /** 坐标轴刻度文本颜色 */
  axisLabelFillColor: BLACK_COLORS[45],

  /** 坐标轴刻度文本字体大小 */
  axisLabelFontSize: 12,

  /** 坐标轴刻度文本行高 */
  axisLabelLineHeight: 12,

  /** 坐标轴刻度文本字体粗细 */
  axisLabelFontWeight: 'normal',

  /** 坐标轴网格线颜色 */
  axisGridBorderColor: BLACK_COLORS[15],

  /** 坐标轴网格线粗细 */
  axisGridBorder: 0.5,

  /** 坐标轴网格线虚线设置 */
  axisGridLineDash: null,
  // -------------------- 图例 --------------------

  /** 图例标题颜色 */
  legendTitleTextFillColor: BLACK_COLORS[45],

  /** 图例标题文本字体大小 */
  legendTitleTextFontSize: 12,

  /** 图例标题文本行高 */
  legendTitleTextLineHeight: 21,

  /** 图例标题文本字体粗细 */
  legendTitleTextFontWeight: 'normal',

  /** 图例 marker 颜色 */
  legendMarkerColor: QUALITATIVE_10[0],

  /** 图例 marker 默认半径大小 */
  legendMarkerSize: 4,

  /** 图例 'circle' marker 半径 */
  legendCircleMarkerSize: 4,

  /** 图例 'square' marker 半径 */
  legendSquareMarkerSize: 4,

  /** 图例 'line' marker 半径 */
  legendLineMarkerSize: 5,

  /** 图例项文本颜色 */
  legendItemNameFillColor: BLACK_COLORS[65],

  /** 图例项文本字体大小 */
  legendItemNameFontSize: 12,

  /** 图例项文本行高 */
  legendItemNameLineHeight: 12,

  /** 图例项粗细 */
  legendItemNameFontWeight: 'normal',

  /** 连续图例滑块填充色 */
  sliderRailFillColor: BLACK_COLORS[15],

  /** 连续图例滑块边框粗细 */
  sliderRailBorder: 0,

  /** 连续图例滑块边框颜色 */
  sliderRailBorderColor: null,

  /** 连续图例滑块宽度 */
  sliderRailWidth: 100,

  /** 连续图例滑块高度 */
  sliderRailHeight: 12,

  /** 连续图例文本颜色 */
  sliderLabelTextFillColor: BLACK_COLORS[45],

  /** 连续图例文本字体大小 */
  sliderLabelTextFontSize: 12,

  /** 连续图例文本行高 */
  sliderLabelTextLineHeight: 12,

  /** 连续图例文本字体粗细 */
  sliderLabelTextFontWeight: 'normal',

  /** 连续图例滑块颜色 */
  sliderHandlerFillColor: BLACK_COLORS[6],

  /** 连续图例滑块宽度 */
  sliderHandlerWidth: 10,

  /** 连续图例滑块高度 */
  sliderHandlerHeight: 14,

  /** 连续图例滑块边框粗细 */
  sliderHandlerBorder: 1,

  /** 连续图例滑块边框颜色 */
  sliderHandlerBorderColor: BLACK_COLORS[25],
  // -------------------- Annotation，图形标注 --------------------

  /** arc 图形标注描边颜色 */
  annotationArcBorderColor: BLACK_COLORS[15],

  /** arc 图形标注粗细 */
  annotationArcBorder: 0.5,

  /** line 图形标注颜色 */
  annotationLineBorderColor: BLACK_COLORS[25],

  /** line 图形标注粗细 */
  annotationLineBorder: 0.5,

  /** lube 图形标注的虚线间隔 */
  annotationLineDash: null,

  /** text 图形标注文本颜色 */
  annotationTextFillColor: BLACK_COLORS[65],

  /** text 图形标注文本字体大小 */
  annotationTextFontSize: 12,

  /** text 图形标注文本行高 */
  annotationTextLineHeight: 12,

  /** text 图形标注文本字体粗细 */
  annotationTextFontWeight: 'normal',

  /** text 图形标注文本边框颜色 */
  annotationTextBorderColor: WHITE_COLORS[95],

  /** text 图形标注文本边框粗细 */
  annotationTextBorder: 1.5,

  /** region 图形标注填充颜色 */
  annotationRegionFillColor: BLACK_COLORS[100],

  /** region 图形标注填充颜色透明色 */
  annotationRegionFillOpacity: 0.06,

  /** region 图形标注描边粗细 */
  annotationRegionBorder: 0,

  /** region 图形标注描边颜色 */
  annotationRegionBorderColor: null,

  /** dataMarker 图形标注线的长度 */
  annotationDataMarkerLineLength: 16,
  // -------------------- Tooltip --------------------

  /** tooltip crosshairs 辅助线颜色 */
  tooltipCrosshairsBorderColor: BLACK_COLORS[25],

  /** tooltip crosshairs 辅助线粗细 */
  tooltipCrosshairsBorder: 0.5,

  /** tooltip crosshairs 辅助线虚线间隔 */
  tooltipCrosshairsLineDash: null,

  /** tooltip 内容框背景色 */
  tooltipContainerFillColor: 'rgb(255, 255, 255)',
  tooltipContainerFillOpacity: 0.95,

  /** tooltip 内容框阴影 */
  tooltipContainerShadow: '0px 0px 10px #aeaeae',

  /** tooltip 内容框圆角 */
  tooltipContainerBorderRadius: 3,

  /** tooltip 文本颜色 */
  tooltipTextFillColor: BLACK_COLORS[65],

  /** tooltip 文本字体大小 */
  tooltipTextFontSize: 12,

  /** tooltip 文本行高 */
  tooltipTextLineHeight: 12,

  /** tooltip 文本字体粗细 */
  tooltipTextFontWeight: 'bold',
  // -------------------- Geometry labels --------------------

  /** Geometry label 文本颜色 */
  labelFillColor: BLACK_COLORS[65],

  /** Geometry label 文本字体大小 */
  labelFontSize: 12,

  /** Geometry label 文本行高 */
  labelLineHeight: 12,

  /** Geometry label 文本字体粗细 */
  labelFontWeight: 'normal',

  /** Geometry label 文本描边颜色 */
  labelBorderColor: null,

  /** Geometry label 文本描边粗细 */
  labelBorder: 0,

  /** Geometry innerLabel 文本颜色 */
  innerLabelFillColor: WHITE_COLORS[100],

  /** Geometry innerLabel 文本字体大小 */
  innerLabelFontSize: 12,

  /** Geometry innerLabel 文本行高 */
  innerLabelLineHeight: 12,

  /** Geometry innerLabel 文本字体粗细 */
  innerLabelFontWeight: 'normal',

  /** Geometry innerLabel 文本描边颜色 */
  innerLabelBorderColor: null,

  /** Geometry innerLabel 文本描边粗细 */
  innerLabelBorder: 0,

  /** Geometry label　文本连接线粗细 */
  labelLineBorder: 0.5,

  /** Geometry label 文本连接线颜色 */
  labelLineBorderColor: BLACK_COLORS[25],
  // -------------------- Geometry 图形样式--------------------

  /** 点图填充颜色 */
  pointFillColor: QUALITATIVE_10[0],

  /** 点图填充颜色透明度 */
  pointFillOpacity: 0.95,

  /** 点图大小 */
  pointSize: 4,

  /** 点图描边粗细 */
  pointBorder: 1,

  /** 点图描边颜色 */
  pointBorderColor: WHITE_COLORS[100],

  /** 点图描边透明度 */
  pointBorderOpacity: 1,

  /** 点图 active 状态下描边颜色 */
  pointActiveBorderColor: BLACK_COLORS[100],

  /** 点图 selected 状态下描边粗细 */
  pointSelectedBorder: 2,

  /** 点图 selected 状态下描边颜色 */
  pointSelectedBorderColor: BLACK_COLORS[100],

  /** 点图 inactive 状态下填充颜色透明度 */
  pointInactiveFillOpacity: 0.3,

  /** 点图 inactive 状态下描边透明度 */
  pointInactiveBorderOpacity: 0.3,

  /** 空心点图大小 */
  hollowPointSize: 4,

  /** 空心点图描边粗细 */
  hollowPointBorder: 1,

  /** 空心点图描边颜色 */
  hollowPointBorderColor: QUALITATIVE_10[0],

  /** 空心点图描边透明度 */
  hollowPointBorderOpacity: 0.95,
  hollowPointFillColor: WHITE_COLORS[100],

  /** 空心点图 active 状态下描边粗细 */
  hollowPointActiveBorder: 1,

  /** 空心点图 active 状态下描边颜色 */
  hollowPointActiveBorderColor: BLACK_COLORS[100],

  /** 空心点图 active 状态下描边透明度 */
  hollowPointActiveBorderOpacity: 1,

  /** 空心点图 selected 状态下描边粗细 */
  hollowPointSelectedBorder: 2,

  /** 空心点图 selected 状态下描边颜色 */
  hollowPointSelectedBorderColor: BLACK_COLORS[100],

  /** 空心点图 selected 状态下描边透明度 */
  hollowPointSelectedBorderOpacity: 1,

  /** 空心点图 inactive 状态下描边透明度 */
  hollowPointInactiveBorderOpacity: 0.3,

  /** 线图粗细 */
  lineBorder: 2,

  /** 线图颜色 */
  lineBorderColor: QUALITATIVE_10[0],

  /** 线图透明度 */
  lineBorderOpacity: 1,

  /** 线图 Active 状态下粗细 */
  lineActiveBorder: 3,

  /** 线图 selected 状态下粗细 */
  lineSelectedBorder: 3,

  /** 线图 inactive 状态下透明度 */
  lineInactiveBorderOpacity: 0.3,

  /** area 填充颜色 */
  areaFillColor: QUALITATIVE_10[0],

  /** area 填充透明度 */
  areaFillOpacity: 0.25,

  /** area 在 active 状态下的填充透明度 */
  areaActiveFillColor: QUALITATIVE_10[0],
  areaActiveFillOpacity: 0.5,

  /** area 在 selected 状态下的填充透明度 */
  areaSelectedFillColor: QUALITATIVE_10[0],
  areaSelectedFillOpacity: 0.5,

  /** area inactive 状态下填充透明度 */
  areaInactiveFillOpacity: 0.3,

  /** hollowArea 颜色 */
  hollowAreaBorderColor: QUALITATIVE_10[0],

  /** hollowArea 边框粗细 */
  hollowAreaBorder: 2,

  /** hollowArea 边框透明度 */
  hollowAreaBorderOpacity: 1,

  /** hollowArea active 状态下的边框粗细 */
  hollowAreaActiveBorder: 3,
  hollowAreaActiveBorderColor: BLACK_COLORS[100],

  /** hollowArea selected 状态下的边框粗细 */
  hollowAreaSelectedBorder: 3,
  hollowAreaSelectedBorderColor: BLACK_COLORS[100],

  /** hollowArea inactive 状态下的边框透明度 */
  hollowAreaInactiveBorderOpacity: 0.3,

  /** interval 填充颜色 */
  intervalFillColor: QUALITATIVE_10[0],

  /** interval 填充透明度 */
  intervalFillOpacity: 0.95,

  /** interval active 状态下边框粗细 */
  intervalActiveBorder: 1,

  /** interval active 状态下边框颜色 */
  intervalActiveBorderColor: BLACK_COLORS[100],
  intervalActiveBorderOpacity: 1,

  /** interval selected 状态下边框粗细 */
  intervalSelectedBorder: 2,

  /** interval selected 状态下边框颜色 */
  intervalSelectedBorderColor: BLACK_COLORS[100],

  /** interval selected 状态下边框透明度 */
  intervalSelectedBorderOpacity: 1,

  /** interval inactive 状态下边框透明度 */
  intervalInactiveBorderOpacity: 0.3,

  /** interval inactive 状态下填充透明度 */
  intervalInactiveFillOpacity: 0.3,

  /** interval 边框粗细 */
  hollowIntervalBorder: 2,

  /** hollowInterval 边框颜色 */
  hollowIntervalBorderColor: QUALITATIVE_10[0],

  /** hollowInterval 边框透明度 */
  hollowIntervalBorderOpacity: 1,
  hollowIntervalFillColor: WHITE_COLORS[100],

  /** hollowInterval active 状态下边框粗细 */
  hollowIntervalActiveBorder: 2,

  /** hollowInterval active 状态下边框颜色 */
  hollowIntervalActiveBorderColor: BLACK_COLORS[100],

  /** hollowInterval selected 状态下边框粗细 */
  hollowIntervalSelectedBorder: 3,

  /** hollowInterval selected 状态下边框颜色 */
  hollowIntervalSelectedBorderColor: BLACK_COLORS[100],

  /** hollowInterval selected 状态下边框透明度 */
  hollowIntervalSelectedBorderOpacity: 1,

  /** hollowInterval inactive 状态下边框透明度 */
  hollowIntervalInactiveBorderOpacity: 0.3
};
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/theme/index.js



var defaultTheme = createThemeByStylesheet(antvLight); // 所有已经存在的主题

var Themes = {
  "default": defaultTheme
};
/**
 * 获取主题配置信息。
 * @param theme 主题名
 */

function getTheme(theme) {
  return Object(esm["get"])(Themes, Object(esm["lowerCase"])(theme), Themes["default"]);
}
/**
 * 注册新的主题配置信息。
 * @param theme 主题名。
 * @param value 具体的主题配置。
 */

function registerTheme(theme, value) {
  Themes[Object(esm["lowerCase"])(theme)] = Object(esm["deepMix"])({}, Themes["default"], value);
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/util/tooltip.js









function snapEqual(v1, v2, scale) {
  var value1 = scale.translate(v1);
  var value2 = scale.translate(v2);
  return Object(esm["isNumberEqual"])(value1, value2);
}

function getXValueByPoint(point, geometry) {
  var coordinate = geometry.coordinate;
  var xScale = geometry.getXScale();
  var range = xScale.range;
  var rangeMax = range[range.length - 1];
  var rangeMin = range[0];
  var invertPoint = coordinate.invert(point);
  var xValue = invertPoint.x;

  if (coordinate.isPolar && xValue > (1 + rangeMax) / 2) {
    xValue = rangeMin; // 极坐标下，scale 的 range 被做过特殊处理
  }

  return xScale.translate(xScale.invert(xValue));
}

function filterYValue(data, point, geometry) {
  var coordinate = geometry.coordinate;
  var yScale = geometry.getYScale();
  var yField = yScale.field;
  var invertPoint = coordinate.invert(point);
  var yValue = yScale.invert(invertPoint.y);
  var result = Object(esm["find"])(data, function (obj) {
    var originData = obj[FIELD_ORIGIN];
    return originData[yField][0] <= yValue && originData[yField][1] >= yValue;
  });
  return result || data[data.length - 1];
}

var getXDistance = Object(esm["memoize"])(function (scale) {
  if (scale.isCategory) {
    return 1;
  }

  var scaleValues = scale.values; // values 是无序的

  var length = scaleValues.length;
  var min = scale.translate(scaleValues[0]);
  var max = min;

  for (var index = 0; index < length; index++) {
    var value = scaleValues[index]; // 时间类型需要 translate

    var numericValue = scale.translate(value);

    if (numericValue < min) {
      min = numericValue;
    }

    if (numericValue > max) {
      max = numericValue;
    }
  }

  return (max - min) / (length - 1);
});

function getTooltipTitle(originData, geometry, title) {
  var titleField = title;

  if (!title) {
    var positionAttr = geometry.getAttribute('position');
    var fields = positionAttr.getFields();
    titleField = fields[0];
  }

  var scales = geometry.scales;

  if (scales[titleField]) {
    // 如果创建了该字段对应的 scale，则通过 scale.getText() 方式取值，因为用户可能对数据进行了格式化
    return scales[titleField].getText(originData[titleField]);
  } // 如果没有对应的 scale，则从原始数据中取值，如果原始数据中仍不存在，则直接放回 title 值


  return Object(esm["hasKey"])(originData, titleField) ? originData[titleField] : titleField;
}

function getAttributesForLegend(geometry) {
  var attributes = Object(esm["values"])(geometry.attributes);
  return Object(esm["filter"])(attributes, function (attribute) {
    return Object(esm["contains"])(GROUP_ATTRS, attribute.type);
  });
}

function getTooltipValueScale(geometry) {
  var attributes = getAttributesForLegend(geometry);
  var scale;

  for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {
    var attribute = attributes_1[_i];
    var tmpScale = attribute.getScale(attribute.type);

    if (tmpScale && tmpScale.isLinear) {
      // 如果指定字段是非 position 的，同时是连续的
      scale = tmpScale;
      break;
    }
  }

  var xScale = geometry.getXScale();
  var yScale = geometry.getYScale();
  return scale || yScale || xScale;
}

function getTooltipValue(originData, valueScale) {
  var field = valueScale.field;
  var value = originData[field];

  if (Object(esm["isArray"])(value)) {
    var texts = value.map(function (eachValue) {
      return valueScale.getText(eachValue);
    });
    return texts.join('-');
  }

  return valueScale.getText(value);
} // 根据原始数据获取 tooltip item 中 name 值


function getTooltipName(originData, geometry) {
  var nameScale;
  var groupScales = geometry.getGroupScales();

  if (groupScales.length) {
    // 如果存在分组类型，取第一个分组类型
    nameScale = groupScales[0];
  }

  if (nameScale) {
    var field = nameScale.field;
    return nameScale.getText(originData[field]);
  }

  var valueScale = getTooltipValueScale(geometry);
  return getName(valueScale);
}
/**
 * @ignore
 * Finds data from geometry by point
 * @param point canvas point
 * @param data an item of geometry.dataArray
 * @param geometry
 * @returns
 */


function findDataByPoint(point, data, geometry) {
  if (data.length === 0) {
    return null;
  }

  var geometryType = geometry.type;
  var xScale = geometry.getXScale();
  var yScale = geometry.getYScale();
  var xField = xScale.field;
  var yField = yScale.field;
  var rst = null; // 热力图采用最小逼近策略查找 point 击中的数据

  if (geometryType === 'heatmap' || geometryType === 'point') {
    // 将 point 画布坐标转换为原始数据值
    var coordinate = geometry.coordinate;
    var invertPoint = coordinate.invert(point); // 转换成归一化的数据

    var x = xScale.invert(invertPoint.x); // 转换为原始值

    var y = yScale.invert(invertPoint.y); // 转换为原始值

    var min = Infinity;

    for (var index = 0; index < data.length; index++) {
      var obj = data[index];
      var originData = obj[FIELD_ORIGIN];
      var range = Math.pow(originData[xField] - x, 2) + Math.pow(originData[yField] - y, 2);

      if (range < min) {
        min = range;
        rst = obj;
      }
    }

    return rst;
  } // 其他 Geometry 类型按照 x 字段数据进行查找


  var first = data[0];
  var last = data[data.length - 1];
  var xValue = getXValueByPoint(point, geometry);
  var firstXValue = first[FIELD_ORIGIN][xField];
  var firstYValue = first[FIELD_ORIGIN][yField];
  var lastXValue = last[FIELD_ORIGIN][xField];
  var isYArray = yScale.isLinear && Object(esm["isArray"])(firstYValue); // 考虑 x 维度相同，y 是数组区间的情况
  // 如果 x 的值是数组

  if (Object(esm["isArray"])(firstXValue)) {
    for (var index = 0; index < data.length; index++) {
      var record = data[index];
      var originData = record[FIELD_ORIGIN]; // xValue 在 originData[xField] 的数值区间内

      if (xScale.translate(originData[xField][0]) <= xValue && xScale.translate(originData[xField][1]) >= xValue) {
        if (isYArray) {
          // 层叠直方图场景，x 和 y 都是数组区间
          if (!Object(esm["isArray"])(rst)) {
            rst = [];
          }

          rst.push(record);
        } else {
          rst = record;
          break;
        }
      }
    }

    if (Object(esm["isArray"])(rst)) {
      rst = filterYValue(rst, point, geometry);
    }
  } else {
    var next = void 0;

    if (!xScale.isLinear && xScale.type !== 'timeCat') {
      // x 轴对应的数据为非线性以及非时间类型的数据采用遍历查找
      for (var index = 0; index < data.length; index++) {
        var record = data[index];
        var originData = record[FIELD_ORIGIN];

        if (snapEqual(originData[xField], xValue, xScale)) {
          if (isYArray) {
            if (!Object(esm["isArray"])(rst)) {
              rst = [];
            }

            rst.push(record);
          } else {
            rst = record;
            break;
          }
        } else if (xScale.translate(originData[xField]) <= xValue) {
          last = record;
          next = data[index + 1];
        }
      }

      if (Object(esm["isArray"])(rst)) {
        rst = filterYValue(rst, point, geometry);
      }
    } else {
      // x 轴对应的数据为线性以及时间类型，进行二分查找，性能更好
      if ((xValue > xScale.translate(lastXValue) || xValue < xScale.translate(firstXValue)) && (xValue > xScale.max || xValue < xScale.min)) {
        // 不在数据范围内
        return null;
      }

      var firstIdx = 0;
      var lastIdx = data.length - 1;
      var middleIdx = void 0;

      while (firstIdx <= lastIdx) {
        middleIdx = Math.floor((firstIdx + lastIdx) / 2);
        var item = data[middleIdx][FIELD_ORIGIN][xField];

        if (snapEqual(item, xValue, xScale)) {
          return data[middleIdx];
        }

        if (xScale.translate(item) <= xScale.translate(xValue)) {
          firstIdx = middleIdx + 1;
          last = data[middleIdx];
          next = data[middleIdx + 1];
        } else {
          if (lastIdx === 0) {
            last = data[0];
          }

          lastIdx = middleIdx - 1;
        }
      }
    }

    if (last && next) {
      // 计算最逼近的
      if (Math.abs(xScale.translate(last[FIELD_ORIGIN][xField]) - xValue) > Math.abs(xScale.translate(next[FIELD_ORIGIN][xField]) - xValue)) {
        last = next;
      }
    }
  }

  var distance = getXDistance(geometry.getXScale()); // 每个分类间的平均间距

  if (!rst && Math.abs(xScale.translate(last[FIELD_ORIGIN][xField]) - xValue) <= distance / 2) {
    rst = last;
  }

  return rst;
}
/**
 * @ignore
 * Gets tooltip items
 * @param data
 * @param geometry
 * @param [title]
 * @returns
 */

function getTooltipItems(data, geometry, title) {
  if (title === void 0) {
    title = '';
  }

  var originData = data[FIELD_ORIGIN];
  var tooltipTitle = getTooltipTitle(originData, geometry, title);
  var tooltipOption = geometry.tooltipOption;
  var defaultColor = geometry.theme.defaultColor;
  var items = [];
  var name;
  var value;

  function addItem(itemName, itemValue) {
    if (!Object(esm["isNil"])(itemValue) && itemValue !== '') {
      // 值为 null的时候，忽视
      var item = {
        title: tooltipTitle,
        data: originData,
        mappingData: data,
        name: itemName || tooltipTitle,
        value: itemValue,
        color: data.color || defaultColor,
        marker: true
      };
      items.push(item);
    }
  }

  if (Object(esm["isObject"])(tooltipOption)) {
    var fields = tooltipOption.fields,
        callback = tooltipOption.callback;

    if (callback) {
      // 用户定义了回调函数
      var callbackParams = fields.map(function (field) {
        return data[FIELD_ORIGIN][field];
      });
      var cfg = callback.apply(void 0, callbackParams);

      var itemCfg = _assign({
        data: data[FIELD_ORIGIN],
        mappingData: data,
        title: tooltipTitle,
        color: data.color || defaultColor,
        marker: true
      }, cfg);

      items.push(itemCfg);
    } else {
      var scales = geometry.scales;

      for (var _i = 0, fields_1 = fields; _i < fields_1.length; _i++) {
        var field = fields_1[_i];

        if (!Object(esm["isNil"])(originData[field])) {
          // 字段数据为null, undefined 时不显示
          var scale = scales[field];
          name = getName(scale);
          value = scale.getText(originData[field]);
          addItem(name, value);
        }
      }
    }
  } else {
    var valueScale = getTooltipValueScale(geometry);

    if (!Object(esm["isNil"])(originData[valueScale.field])) {
      // 字段数据为null ,undefined时不显示
      value = getTooltipValue(originData, valueScale);
      name = getTooltipName(originData, geometry);
      addItem(name, value);
    }
  }

  return items;
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/chart/controller/index.js




var LOAD_COMPONENT_CONTROLLERS = {};
/**
 * 全局注册组件。
 * @param name 组件名称
 * @param plugin 注册的组件类
 * @returns void
 */

function registerComponentController(name, plugin) {
  LOAD_COMPONENT_CONTROLLERS[name] = plugin;
}
/**
 * 删除全局组件。
 * @param name 组件名
 * @returns void
 */

function unregisterComponentController(name) {
  delete LOAD_COMPONENT_CONTROLLERS[name];
}
/**
 * 获取以注册的组件名。
 * @returns string[] 返回已注册的组件名称
 */

function getComponentControllerNames() {
  return Object.keys(LOAD_COMPONENT_CONTROLLERS);
}
/**
 * 根据组件名获取组件类。
 * @param name 组件名
 * @returns 返回组件类
 */

function getComponentController(name) {
  return LOAD_COMPONENT_CONTROLLERS[name];
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/chart/controller/coordinate.js





/**
 * coordinate controller，职责：
 * 1. 创建实例
 * 2. 暂存配置
 */

var coordinate_CoordinateController =
/** @class */
function () {
  function CoordinateController(option) {
    // 设置默认值，并存储配置
    this.option = this.wrapperOption(option);
  }
  /**
   * 更新配置
   * @param option
   */


  CoordinateController.prototype.update = function (option) {
    this.option = this.wrapperOption(option);
    return this;
  };
  /**
   * 是否存在某一个 action
   * @param actionName
   */


  CoordinateController.prototype.hasAction = function (actionName) {
    var actions = this.option.actions;
    return Object(esm["some"])(actions, function (action) {
      return action[0] === actionName;
    });
  };
  /**
   * 创建坐标系对象
   * @param start 起始位置
   * @param end   结束位置
   * @return 坐标系实例
   */


  CoordinateController.prototype.create = function (start, end) {
    var _a = this.option,
        type = _a.type,
        cfg = _a.cfg;
    var isTheta = type === 'theta'; // 1. 起始位置

    var props = _assign({
      start: start,
      end: end
    }, cfg); // 2. 创建实例


    var C = getCoordinate(isTheta ? 'polar' : type);
    this.coordinate = new C(props); // @ts-ignore FIXME coordinate 包问题导致 type 不正确

    this.coordinate.type = type; // 3. 添加默认 action

    if (isTheta) {
      // 不存在 transpose，为其自动设置一个 action
      if (!this.hasAction('transpose')) {
        this.transpose();
      }
    } // 4. 执行 action


    this.execActions();
    return this.coordinate;
  };
  /**
   * 更新坐标系对象
   * @param start 起始位置
   * @param end   结束位置
   * @return 坐标系实例
   */


  CoordinateController.prototype.adjust = function (start, end) {
    this.coordinate.update({
      start: start,
      end: end
    }); // 更新坐标系大小的时候，需要：
    // 1. 重置 matrix
    // 2. 重新执行作用于 matrix 的 action

    this.coordinate.resetMatrix();
    this.execActions(['scale', 'rotate', 'translate']);
    return this.coordinate;
  };
  /**
   * 旋转弧度
   * @param angle
   */


  CoordinateController.prototype.rotate = function (angle) {
    this.option.actions.push(['rotate', angle]);
    return this;
  };
  /**
   * 镜像
   * @param dim
   */


  CoordinateController.prototype.reflect = function (dim) {
    this.option.actions.push(['reflect', dim]);
    return this;
  };
  /**
   * scale
   * @param sx
   * @param sy
   */


  CoordinateController.prototype.scale = function (sx, sy) {
    this.option.actions.push(['scale', sx, sy]);
    return this;
  };
  /**
   * 对角变换
   */


  CoordinateController.prototype.transpose = function () {
    this.option.actions.push(['transpose']);
    return this;
  };
  /**
   * 获取配置
   */


  CoordinateController.prototype.getOption = function () {
    return this.option;
  };
  /**
   * 获得 coordinate 实例
   */


  CoordinateController.prototype.getCoordinate = function () {
    return this.coordinate;
  };
  /**
   * 包装配置的默认值
   * @param option
   */


  CoordinateController.prototype.wrapperOption = function (option) {
    return _assign({
      type: 'rect',
      actions: [],
      cfg: {}
    }, option);
  };
  /**
   * coordinate 实例执行 actions
   * @params includeActions 如果没有指定，则执行全部，否则，执行指定的 action
   */


  CoordinateController.prototype.execActions = function (includeActions) {
    var _this = this;

    var actions = this.option.actions;
    Object(esm["each"])(actions, function (action) {
      var _a;

      var actionName = action[0],
          args = action.slice(1);
      var shouldExec = Object(esm["isNil"])(includeActions) ? true : includeActions.includes(actionName);

      if (shouldExec) {
        (_a = _this.coordinate)[actionName].apply(_a, args);
      }
    });
  };

  return CoordinateController;
}();

/* harmony default export */ var controller_coordinate = (coordinate_CoordinateController);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/chart/event.js





/**
 * @todo Whether it can(or necessary to) keep consistent with the structure of G.Event or directly use the structure of G.Event
 * G2 事件的事件包装类，基于 G.Event
 */
var Event =
/** @class */
function () {
  function Event(view, gEvent, data) {
    this.view = view;
    this.gEvent = gEvent;
    this.data = data;
    this.type = gEvent.type;
  }

  Object.defineProperty(Event.prototype, "target", {
    // below props are proxy props of G.event convenient

    /** the real trigger shape of the event */
    get: function get() {
      // @todo G 中事件定义为 object 不正确，这里先 ignore
      // @ts-ignore
      return this.gEvent.target;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Event.prototype, "event", {
    /** 获取对应的 dom 原生时间 */
    get: function get() {
      return this.gEvent.originalEvent;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Event.prototype, "x", {
    /** x 画布坐标 */
    get: function get() {
      return this.gEvent.x;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Event.prototype, "y", {
    /** y 画布坐标 */
    get: function get() {
      return this.gEvent.y;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Event.prototype, "clientX", {
    /** x 窗口坐标 */
    get: function get() {
      return this.gEvent.clientX;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Event.prototype, "clientY", {
    /** y 窗口坐标 */
    get: function get() {
      return this.gEvent.clientY;
    },
    enumerable: false,
    configurable: true
  }); // end for proxy events

  /**
   * event string
   * @returns string
   */

  Event.prototype.toString = function () {
    return "[Event (type=" + this.type + ")]";
  };
  /**
   * clone a new event with same attributes
   * @returns [[Event]]
   */


  Event.prototype.clone = function () {
    return new Event(this.view, this.gEvent, this.data);
  };

  return Event;
}();

/* harmony default export */ var chart_event = (Event);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/util/padding.js



/**
 * @ignore
 * 是否是自动 padding
 * @param padding
 */

function isAutoPadding(padding) {
  return !Object(esm["isNumber"])(padding) && !Object(esm["isArray"])(padding);
}
/**
 * @ignore
 * padding 的解析逻辑
 * @param padding
 * @return [ top, right, bottom, left ]
 */

function parsePadding(padding) {
  if (padding === void 0) {
    padding = 0;
  }

  var paddingArray = Object(esm["isArray"])(padding) ? padding : [padding];

  switch (paddingArray.length) {
    case 0:
      paddingArray = [0, 0, 0, 0];
      break;

    case 1:
      paddingArray = new Array(4).fill(paddingArray[0]);
      break;

    case 2:
      paddingArray = __spreadArrays(paddingArray, paddingArray);
      break;

    case 3:
      paddingArray = __spreadArrays(paddingArray, [paddingArray[1]]);
      break;

    default:
      // 其他情况，只去四个
      paddingArray = paddingArray.slice(0, 4);
      break;
  }

  return paddingArray;
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/chart/layout/padding-cal.js

/** @ignore */

var padding_cal_PaddingCal =
/** @class */
function () {
  /**
   * 初始的 padding 数据
   * @param top
   * @param right
   * @param bottom
   * @param left
   */
  function PaddingCal(top, right, bottom, left) {
    if (top === void 0) {
      top = 0;
    }

    if (right === void 0) {
      right = 0;
    }

    if (bottom === void 0) {
      bottom = 0;
    }

    if (left === void 0) {
      left = 0;
    }

    this.top = top;
    this.right = right;
    this.bottom = bottom;
    this.left = left;
  }
  /**
   * 四周增加 padding
   * @param padding
   */


  PaddingCal.prototype.shrink = function (padding) {
    var top = padding[0],
        right = padding[1],
        bottom = padding[2],
        left = padding[3];
    this.top += top;
    this.right += right;
    this.bottom += bottom;
    this.left += left;
    return this;
  };
  /**
   * 在某一个方向增加 padding
   * @param bbox
   * @param direction
   */


  PaddingCal.prototype.inc = function (bbox, direction) {
    var width = bbox.width,
        height = bbox.height;

    switch (direction) {
      case DIRECTION.TOP:
      case DIRECTION.TOP_LEFT:
      case DIRECTION.TOP_RIGHT:
        this.top += height;
        break;

      case DIRECTION.RIGHT:
      case DIRECTION.RIGHT_TOP:
      case DIRECTION.RIGHT_BOTTOM:
        this.right += width;
        break;

      case DIRECTION.BOTTOM:
      case DIRECTION.BOTTOM_LEFT:
      case DIRECTION.BOTTOM_RIGHT:
        this.bottom += height;
        break;

      case DIRECTION.LEFT:
      case DIRECTION.LEFT_TOP:
      case DIRECTION.LEFT_BOTTOM:
        this.left += width;
        break;

      default:
        break;
    }

    return this;
  };
  /**
   * 获得最终的 padding
   */


  PaddingCal.prototype.getPadding = function () {
    return [this.top, this.right, this.bottom, this.left];
  };

  return PaddingCal;
}();


// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/chart/layout/auto.js





/**
 * @ignore
 * 根据 view 中的组件，计算实际的 padding 数值
 * @param view
 */

function calculatePadding(view) {
  var padding = view.padding; // 如果不是 auto padding，那么直接解析之后返回

  if (!isAutoPadding(padding)) {
    return parsePadding(padding);
  } // 是 auto padding，根据组件的情况，来计算 padding


  var viewBBox = view.viewBBox,
      autoPadding = view.autoPadding;
  var paddingCal = new padding_cal_PaddingCal();
  Object(esm["each"])(view.getComponents(), function (co) {
    var component = co.component,
        type = co.type; // grid, tooltip 不参入 padding 布局

    if (type === COMPONENT_TYPE.GRID || type === COMPONENT_TYPE.TOOLTIP) {
      return;
    }

    var bboxObject = component.getLayoutBBox();
    var componentBBox = new bbox_BBox(bboxObject.x, bboxObject.y, bboxObject.width, bboxObject.height);

    if (type === COMPONENT_TYPE.AXIS) {
      var exceed = componentBBox.exceed(viewBBox);
      paddingCal.shrink(exceed);
    } else {
      // 按照方向计算 padding
      var direction = co.direction; // const direction =
      //   type === COMPONENT_TYPE.AXIS ? getTranslateDirection(co.direction, view.getCoordinate()) : co.direction;

      paddingCal.inc(componentBBox, direction);
    }
  });
  var calculatedPadding = paddingCal.getPadding();

  if (autoPadding) {
    var appendPadding = parsePadding(view.appendPadding); // 取上一次以及当前计算结果的最大区间

    return [Math.max(autoPadding[0] - appendPadding[0], calculatedPadding[0]), Math.max(autoPadding[1] - appendPadding[1], calculatedPadding[1]), Math.max(autoPadding[2] - appendPadding[2], calculatedPadding[2]), Math.max(autoPadding[3] - appendPadding[3], calculatedPadding[3])];
  }

  return calculatedPadding;
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/chart/layout/index.js



/**
 * @ignore
 * G2 默认提供的 layout 函数
 * 内置布局函数处理的逻辑：
 *
 * 1. 如果 padding = 'auto'，那么自动根据组件的 direction 来计算 padding 数组
 * 2. 根据 padding 和 direction 去分配对应方向的 padding 数值
 * 3. 移动组件位置
 *
 * 对于组件响应式布局，可以尝试使用约束布局的方式去求解位置信息。
 * @param view
 */

function defaultLayout(view) {
  var axis = view.getController('axis');
  var legend = view.getController('legend');
  var annotation = view.getController('annotation');
  var slider = view.getController('slider'); // 1. 自动加 auto padding -> absolute padding

  var padding = calculatePadding(view); // 2. 计算出新的 coordinateBBox

  view.coordinateBBox = view.viewBBox.shrink(padding).shrink(parsePadding(view.appendPadding));
  view.adjustCoordinate(); // 3. 根据最新的 coordinate 重新布局组件

  [axis, slider, legend, annotation].forEach(function (controller) {
    if (controller) {
      controller.layout();
    }
  });
}
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.number.min-safe-integer.js
var es6_number_min_safe_integer = __webpack_require__("GKqq");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.number.max-safe-integer.js
var es6_number_max_safe_integer = __webpack_require__("KBDK");

// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/chart/util/scale-pool.js













/**
 * view 中缓存 scale 的类
 */


/** @ignore */

var scale_pool_ScalePool =
/** @class */
function () {
  function ScalePool() {
    /** 所有的 scales */
    this.scales = new Map();
    /** 需要同步的 scale 分组， key: scaleKeyArray */

    this.syncScales = new Map();
  }
  /**
   * 创建 scale
   * @param field
   * @param data
   * @param scaleDef
   * @param key
   */


  ScalePool.prototype.createScale = function (field, data, scaleDef, key) {
    var finalScaleDef = scaleDef;
    var cacheScaleMeta = this.getScaleMeta(key);

    if (data.length === 0 && cacheScaleMeta) {
      // 在更新过程中数据变为空，同时 key 对应的 scale 已存在则保持 scale 同类型
      var cacheScale = cacheScaleMeta.scale;
      var cacheScaleDef = {
        type: cacheScale.type
      };

      if (cacheScale.isCategory) {
        // 如果是分类类型，保持 values
        cacheScaleDef.values = cacheScale.values;
      }

      finalScaleDef = Object(esm["deepMix"])(cacheScaleDef, cacheScaleMeta.scaleDef, scaleDef);
    }

    var scale = createScaleByField(field, data, finalScaleDef); // 缓存起来

    this.cacheScale(scale, scaleDef, key);
    return scale;
  };
  /**
   * 同步 scale
   */


  ScalePool.prototype.sync = function () {
    var _this = this; // 对于 syncScales 中每一个 syncKey 下面的 scale 数组进行同步处理


    this.syncScales.forEach(function (scaleKeys, syncKey) {
      // min, max, values
      var min = Number.MAX_SAFE_INTEGER;
      var max = Number.MIN_SAFE_INTEGER;
      var values = []; // 1. 遍历求得最大最小值，values 等

      Object(esm["each"])(scaleKeys, function (key) {
        var scale = _this.getScale(key);

        max = Object(esm["isNumber"])(scale.max) ? Math.max(max, scale.max) : max;
        min = Object(esm["isNumber"])(scale.min) ? Math.min(min, scale.min) : min; // 去重

        Object(esm["each"])(scale.values, function (v) {
          if (!values.includes(v)) {
            values.push(v);
          }
        });
      }); // 2. 同步

      Object(esm["each"])(scaleKeys, function (key) {
        var scale = _this.getScale(key);

        if (scale.isContinuous) {
          scale.change({
            min: min,
            max: max,
            values: values
          });
        } else if (scale.isCategory) {
          scale.change({
            values: values
          });
        }
      });
    });
  };
  /**
   * 缓存一个 scale
   * @param scale
   * @param scaleDef
   * @param key
   */


  ScalePool.prototype.cacheScale = function (scale, scaleDef, key) {
    // 1. 缓存到 scales
    var sm = this.getScaleMeta(key); // 存在则更新，同时检测类型是否一致

    if (sm && sm.scale.type === scale.type) {
      syncScale(sm.scale, scale);
      sm.scaleDef = scaleDef; // 更新 scaleDef
    } else {
      sm = {
        key: key,
        scale: scale,
        scaleDef: scaleDef
      };
      this.scales.set(key, sm);
    } // 2. 缓存到 syncScales，构造 Record<sync, string[]> 数据结构


    var syncKey = this.getSyncKey(sm);
    sm.syncKey = syncKey; // 设置 sync 同步的 key
    // 因为存在更新 scale 机制，所以在缓存之前，先从原 syncScales 中去除 sync 的缓存引用

    this.removeFromSyncScales(key); // 存在 sync 标记才进行 sync

    if (syncKey) {
      // 不存在这个 syncKey，则创建一个空数组
      var scaleKeys = this.syncScales.get(syncKey);

      if (!scaleKeys) {
        scaleKeys = [];
        this.syncScales.set(syncKey, scaleKeys);
      }

      scaleKeys.push(key);
    }
  };
  /**
   * 通过 key 获取 scale
   * @param key
   */


  ScalePool.prototype.getScale = function (key) {
    var scaleMeta = this.getScaleMeta(key);

    if (!scaleMeta) {
      var field = Object(esm["last"])(key.split('-'));
      var scaleKeys = this.syncScales.get(field);

      if (scaleKeys && scaleKeys.length) {
        scaleMeta = this.getScaleMeta(scaleKeys[0]);
      }
    }

    return scaleMeta && scaleMeta.scale;
  };
  /**
   * 在 view 销毁的时候，删除 scale 实例，防止内存泄露
   * @param key
   */


  ScalePool.prototype.deleteScale = function (key) {
    var scaleMeta = this.getScaleMeta(key);

    if (scaleMeta) {
      var syncKey = scaleMeta.syncKey;
      var scaleKeys = this.syncScales.get(syncKey); // 移除同步的关系

      if (scaleKeys && scaleKeys.length) {
        var idx = scaleKeys.indexOf(key);

        if (idx !== -1) {
          scaleKeys.splice(idx, 1);
        }
      }
    } // 删除 scale 实例


    this.scales["delete"](key);
  };
  /**
   * 清空
   */


  ScalePool.prototype.clear = function () {
    this.scales.clear();
    this.syncScales.clear();
  };
  /**
   * 删除 sync scale 引用
   * @param key
   */


  ScalePool.prototype.removeFromSyncScales = function (key) {
    var _this = this;

    this.syncScales.forEach(function (scaleKeys, syncKey) {
      var idx = scaleKeys.indexOf(key);

      if (idx !== -1) {
        scaleKeys.splice(idx, 1); // 删除空数组值

        if (scaleKeys.length === 0) {
          _this.syncScales["delete"](syncKey);
        }

        return false; // 跳出循环
      }
    });
  };
  /**
   * get sync key
   * @param sm
   */


  ScalePool.prototype.getSyncKey = function (sm) {
    var scale = sm.scale,
        scaleDef = sm.scaleDef;
    var field = scale.field;
    var sync = Object(esm["get"])(scaleDef, ['sync']); // 如果 sync = true，则直接使用字段名作为 syncKey

    return sync === true ? field : sync === false ? undefined : sync;
  };
  /**
   * 通过 key 获取 scale
   * @param key
   */


  ScalePool.prototype.getScaleMeta = function (key) {
    return this.scales.get(key);
  };

  return ScalePool;
}();


// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/chart/view.js






























/**
 * G2 视图 View 类
 */

var view_View =
/** @class */
function (_super) {
  __extends(View, _super);

  function View(props) {
    var _this = _super.call(this, {
      visible: props.visible
    }) || this;
    /** view id，全局唯一。 */


    _this.id = Object(esm["uniqueId"])('view');
    /** 所有的子 view。 */

    _this.views = [];
    /** 所有的 geometry 实例。 */

    _this.geometries = [];
    /** 所有的组件 controllers。 */

    _this.controllers = [];
    /** 所有的 Interaction 实例。 */

    _this.interactions = {};
    /** 是否对超出坐标系范围的 Geometry 进行剪切 */

    _this.limitInPlot = false; // 配置信息存储

    _this.options = {
      data: [],
      animate: true
    }; // 初始化为空

    /** 配置开启的组件插件，默认为全局配置的组件。 */

    _this.usedControllers = getComponentControllerNames();
    /** 所有的 scales */

    _this.scalePool = new scale_pool_ScalePool();
    /** 布局函数 */

    _this.layoutFunc = defaultLayout;
    /** 当前鼠标是否在 plot 内（CoordinateBBox） */

    _this.isPreMouseInPlot = false;
    /** 默认标识位，用于判定数据是否更新 */

    _this.isDataChanged = false;
    /** 用于判断坐标系范围是否发生变化的标志位 */

    _this.isCoordinateChanged = false;
    /** 从当前这个 view 创建的 scale key */

    _this.createdScaleKeys = new Map();

    _this.onCanvasEvent = function (evt) {
      var name = evt.name;

      if (!name.includes(':')) {
        // 非委托事件
        var e = _this.createViewEvent(evt); // 处理 plot 事件


        _this.doPlotEvent(e);

        _this.emit(name, e);
      }
    };
    /**
     * 触发事件之后
     * @param evt
     */


    _this.onDelegateEvents = function (evt) {
      // 阻止继续冒泡，防止重复事件触发
      // evt.preventDefault();
      var name = evt.name;

      if (!name.includes(':')) {
        return;
      } // 事件在 view 嵌套中冒泡（暂不提供阻止冒泡的机制）


      var e = _this.createViewEvent(evt); // 包含有基本事件、组合事件


      _this.emit(name, e); // const currentTarget = evt.currentTarget as IShape;
      // const inheritNames = currentTarget.get('inheritNames');
      // if (evt.delegateObject || inheritNames) {
      //   const events = this.getEvents();
      //   each(inheritNames, (subName) => {
      //     const eventName = `${subName}:${type}`;
      //     if (events[eventName]) {
      //       this.emit(eventName, e);
      //     }
      //   });
      // }

    };

    var parent = props.parent,
        canvas = props.canvas,
        backgroundGroup = props.backgroundGroup,
        middleGroup = props.middleGroup,
        foregroundGroup = props.foregroundGroup,
        _a = props.region,
        region = _a === void 0 ? {
      start: {
        x: 0,
        y: 0
      },
      end: {
        x: 1,
        y: 1
      }
    } : _a,
        padding = props.padding,
        appendPadding = props.appendPadding,
        theme = props.theme,
        options = props.options,
        limitInPlot = props.limitInPlot;
    _this.parent = parent;
    _this.canvas = canvas;
    _this.backgroundGroup = backgroundGroup;
    _this.middleGroup = middleGroup;
    _this.foregroundGroup = foregroundGroup;
    _this.region = region;
    _this.padding = padding;
    _this.appendPadding = appendPadding; // 接受父 view 传入的参数

    _this.options = _assign(_assign({}, _this.options), options);
    _this.limitInPlot = limitInPlot; // 初始化 theme

    _this.themeObject = Object(esm["isObject"])(theme) ? Object(esm["deepMix"])({}, getTheme('default'), theme) : getTheme(theme);

    _this.init();

    return _this;
  }
  /**
   * 设置 layout 布局函数
   * @param layout 布局函数
   * @returns void
   */


  View.prototype.setLayout = function (layout) {
    this.layoutFunc = layout;
  };
  /**
   * 生命周期：初始化
   * @returns voids
   */


  View.prototype.init = function () {
    // 计算画布的 viewBBox
    this.calculateViewBBox(); // 事件委托机制

    this.initEvents(); // 初始化组件 controller

    this.initComponentController(); // 创建 coordinate controller

    this.coordinateController = new controller_coordinate(this.options.coordinate);
    this.initOptions(); // 递归初始化子 view

    var views = this.views;

    for (var i = 0; i < views.length; i++) {
      views[i].init();
    }
  };
  /**
   * 生命周期：渲染流程，渲染过程需要处理数据更新的情况。
   * render 函数仅仅会处理 view 和子 view。
   * @param isUpdate 是否触发更新流程。
   */


  View.prototype.render = function (isUpdate) {
    if (isUpdate === void 0) {
      isUpdate = false;
    }

    this.emit(VIEW_LIFE_CIRCLE.BEFORE_RENDER); // 递归渲染

    this.paint(isUpdate);
    this.emit(VIEW_LIFE_CIRCLE.AFTER_RENDER);

    if (this.visible === false) {
      // 用户在初始化的时候声明 visible: false
      this.changeVisible(false);
    }
  };
  /**
   * 生命周期：清空图表上所有的绘制内容，但是不销毁图表，chart 仍可使用。
   * @returns void
   */


  View.prototype.clear = function () {
    var _this = this;

    this.emit(VIEW_LIFE_CIRCLE.BEFORE_CLEAR); // 1. 清空缓存和计算数据

    this.filteredData = [];
    this.coordinateInstance = undefined;
    this.isDataChanged = false; // 复位

    this.isCoordinateChanged = false; // 复位
    // 2. 清空 geometries

    var geometries = this.geometries;

    for (var i = 0; i < geometries.length; i++) {
      geometries[i].clear();
    }

    this.geometries = []; // 3. 清空 controllers

    var controllers = this.controllers;

    for (var i = 0; i < controllers.length; i++) {
      controllers[i].clear();
    } // 4. 删除 scale 缓存


    this.createdScaleKeys.forEach(function (v, k) {
      _this.getRootView().scalePool.deleteScale(k);
    });
    this.createdScaleKeys.clear(); // 递归处理子 view

    var views = this.views;

    for (var i = 0; i < views.length; i++) {
      views[i].clear();
    }

    this.emit(VIEW_LIFE_CIRCLE.AFTER_CLEAR);
  };
  /**
   * 生命周期：销毁，完全无法使用。
   * @returns void
   */


  View.prototype.destroy = function () {
    // 销毁前事件，销毁之后已经没有意义了，所以不抛出事件
    this.emit(VIEW_LIFE_CIRCLE.BEFORE_DESTROY);
    var interactions = this.interactions; // 销毁 interactions

    Object(esm["each"])(interactions, function (interaction) {
      if (interaction) {
        // 有可能已经销毁，设置了 undefined
        interaction.destroy();
      }
    });
    this.clear(); // 销毁 controller 中的组件

    var controllers = this.controllers;

    for (var i = 0, len = controllers.length; i < len; i++) {
      var controller = controllers[i];
      controller.destroy();
    }

    this.backgroundGroup.remove(true);
    this.middleGroup.remove(true);
    this.foregroundGroup.remove(true);

    _super.prototype.destroy.call(this);
  };
  /* end 生命周期函数 */

  /**
   * 显示或者隐藏整个 view。
   * @param visible 是否可见
   * @returns View
   */


  View.prototype.changeVisible = function (visible) {
    _super.prototype.changeVisible.call(this, visible);

    var geometries = this.geometries;

    for (var i = 0, len = geometries.length; i < len; i++) {
      var geometry = geometries[i];
      geometry.changeVisible(visible);
    }

    var controllers = this.controllers;

    for (var i = 0, len = controllers.length; i < len; i++) {
      var controller = controllers[i];
      controller.changeVisible(visible);
    }

    this.foregroundGroup.set('visible', visible);
    this.middleGroup.set('visible', visible);
    this.backgroundGroup.set('visible', visible); // group.set('visible', visible) 不会触发自动刷新

    this.getCanvas().draw();
    return this;
  };
  /**
   * 装载数据源。
   *
   * ```ts
   * view.data([{ city: '杭州', sale: 100 }, { city: '上海', sale: 110 } ]);
   * ```
   *
   * @param data 数据源，json 数组。
   * @returns View
   */


  View.prototype.data = function (data) {
    Object(esm["set"])(this.options, 'data', data);
    this.isDataChanged = true;
    return this;
  };
  /**
   * @deprecated
   * This method will be removed at G2 V4.1. Replaced by {@link #data(data)}
   */


  View.prototype.source = function (data) {
    console.warn('This method will be removed at G2 V4.1. Please use chart.data() instead.');
    return this.data(data);
  };
  /**
   * 设置数据筛选规则。
   *
   * ```ts
   * view.filter('city', (value: any, datum: Datum) => value !== '杭州');
   *
   * // 删除 'city' 字段对应的筛选规则。
   * view.filter('city', null);
   * ```
   *
   * @param field 数据字段
   * @param condition 筛选规则
   * @returns View
   */


  View.prototype.filter = function (field, condition) {
    if (Object(esm["isFunction"])(condition)) {
      Object(esm["set"])(this.options, ['filters', field], condition);
      return this;
    } // condition 为空，则表示删除过滤条件


    if (!condition && Object(esm["get"])(this.options, ['filters', field])) {
      delete this.options.filters[field];
    }

    return this;
  };

  View.prototype.axis = function (field, axisOption) {
    if (Object(esm["isBoolean"])(field)) {
      Object(esm["set"])(this.options, ['axes'], field);
    } else {
      Object(esm["set"])(this.options, ['axes', field], axisOption);
    }

    return this;
  };

  View.prototype.legend = function (field, legendOption) {
    if (Object(esm["isBoolean"])(field)) {
      Object(esm["set"])(this.options, ['legends'], field);
    } else if (Object(esm["isString"])(field)) {
      Object(esm["set"])(this.options, ['legends', field], legendOption);
    } else {
      // 设置全局的 legend 配置
      Object(esm["set"])(this.options, ['legends'], field);
    }

    return this;
  };

  View.prototype.scale = function (field, scaleOption) {
    var _this = this;

    if (Object(esm["isString"])(field)) {
      Object(esm["set"])(this.options, ['scales', field], scaleOption);
    } else if (Object(esm["isObject"])(field)) {
      Object(esm["each"])(field, function (v, k) {
        Object(esm["set"])(_this.options, ['scales', k], v);
      });
    }

    return this;
  };
  /**
   * tooltip 提示信息配置。
   *
   * ```ts
   * view.tooltip(false); // 关闭 tooltip
   *
   * view.tooltip({
   *   shared: true
   * });
   * ```
   *
   * @param cfg Tooltip 配置，更详细的配置项参考：https://github.com/antvis/component#tooltip
   * @returns View
   */


  View.prototype.tooltip = function (cfg) {
    Object(esm["set"])(this.options, 'tooltip', cfg);
    return this;
  };
  /**
   * 辅助标记配置。
   *
   * ```ts
   * view.annotation().line({
   *   start: ['min', 85],
   *   end: ['max', 85],
   *   style: {
   *     stroke: '#595959',
   *     lineWidth: 1,
   *     lineDash: [3, 3],
   *   },
   * });
   * ```
   * 更详细的配置项：https://github.com/antvis/component#annotation
   * @returns [[Annotation]]
   */


  View.prototype.annotation = function () {
    return this.getController('annotation');
  };
  /**
   * @deprecated
   * This method will be removed at G2 V4.1. Replaced by {@link #guide()}
   */


  View.prototype.guide = function () {
    console.warn('This method will be removed at G2 V4.1. Please use chart.annotation() instead.');
    return this.annotation();
  };

  View.prototype.coordinate = function (type, coordinateCfg) {
    // 提供语法糖，使用更简单
    if (Object(esm["isString"])(type)) {
      Object(esm["set"])(this.options, 'coordinate', {
        type: type,
        cfg: coordinateCfg
      });
    } else {
      Object(esm["set"])(this.options, 'coordinate', type);
    } // 更新 coordinate 配置


    this.coordinateController.update(this.options.coordinate);
    return this.coordinateController;
  };
  /**
   * @deprecated
   * This method will be removed at G2 V4.1. Replaced by {@link #coordinate()}
   */


  View.prototype.coord = function (type, coordinateCfg) {
    console.warn('This method will be removed at G2 V4.1. Please use chart.coordinate() instead.'); // @ts-ignore

    return this.coordinate(type, coordinateCfg);
  };
  /**
   * view 分面绘制。
   *
   * ```ts
   * view.facet('rect', {
   *   rowField: 'province',
   *   columnField: 'category',
   *   eachView: (innerView: View, facet?: FacetData) => {
   *     innerView.line().position('city*sale');
   *   },
   * });
   * ```
   *
   * @param type 分面类型
   * @param cfg 分面配置， [[FacetCfgMap]]
   * @returns View
   */


  View.prototype.facet = function (type, cfg) {
    // 先销毁掉之前的分面
    if (this.facetInstance) {
      this.facetInstance.destroy();
    } // 创建新的分面


    var Ctor = facet_getFacet(type);

    if (!Ctor) {
      throw new Error("facet '" + type + "' is not exist!");
    }

    this.facetInstance = new Ctor(this, _assign(_assign({}, cfg), {
      type: type
    }));
    return this;
  };
  /*
   * 开启或者关闭动画。
   *
   * ```ts
   * view.animate(false);
   * ```
   *
   * @param status 动画状态，true 表示开始，false 表示关闭
   * @returns View
   */


  View.prototype.animate = function (status) {
    Object(esm["set"])(this.options, 'animate', status);
    return this;
  };
  /**
   * 更新配置项，用于配置项式声明。
   * @param options 配置项
   */


  View.prototype.updateOptions = function (options) {
    this.clear(); // 清空

    Object(esm["mix"])(this.options, options);
    this.initOptions();
    return this;
  };
  /**
   * 往 `view.options` 属性中存储配置项。
   * @param name 属性名称
   * @param opt 属性值
   * @returns view
   */


  View.prototype.option = function (name, opt) {
    // 对于内置的 option，避免覆盖。
    // name 在原型上，说明可能是内置 API，存在 option 被覆盖的风险，不处理
    if (View.prototype[name]) {
      throw new Error("Can't use built in variable name \"" + name + "\", please change another one.");
    } // 存入到 option 中


    Object(esm["set"])(this.options, name, opt);
    return this;
  };
  /**
   * 设置主题。
   *
   * ```ts
   * view.theme('dark'); // 'dark' 需要事先通过 `registerTheme()` 接口注册完成
   *
   * view.theme({ defaultColor: 'red' });
   * ```
   *
   * @param theme 主题名或者主题配置
   * @returns View
   */


  View.prototype.theme = function (theme) {
    this.themeObject = Object(esm["isObject"])(theme) ? Object(esm["deepMix"])({}, this.themeObject, theme) : getTheme(theme);
    return this;
  };
  /* end 一系列传入配置的 API */

  /**
   * Call the interaction based on the interaction name
   *
   * ```ts
   * view.interaction('my-interaction', { extra: 'hello world' });
   * ```
   * 详细文档可以参考：https://g2.antv.vision/zh/docs/manual/tutorial/interaction
   * @param name interaction name
   * @param cfg interaction config
   * @returns
   */


  View.prototype.interaction = function (name, cfg) {
    var existInteraction = this.interactions[name]; // 存在则先销毁已有的

    if (existInteraction) {
      existInteraction.destroy();
    } // 新建交互实例


    var interaction = createInteraction(name, this, cfg);

    if (interaction) {
      interaction.init();
      this.interactions[name] = interaction;
    }

    return this;
  };
  /**
   * 移除当前 View 的 interaction
   * ```ts
   * view.removeInteraction('my-interaction');
   * ```
   * @param name interaction name
   */


  View.prototype.removeInteraction = function (name) {
    var existInteraction = this.interactions[name]; // 存在则先销毁已有的

    if (existInteraction) {
      existInteraction.destroy();
      this.interactions[name] = undefined;
    }
  };
  /**
   * 修改数据，数据更新逻辑，数据更新仅仅影响当前这一层的 view
   *
   * ```ts
   * view.changeData([{ city: '北京', sale: '200' }]);
   * ```
   *
   * @param data
   * @returns void
   */


  View.prototype.changeData = function (data) {
    this.isDataChanged = true;
    this.emit(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA); // 1. 保存数据

    this.data(data); // 2. 渲染

    this.paint(true); // 3. 遍历子 view 进行 change data

    var views = this.views;

    for (var i = 0, len = views.length; i < len; i++) {
      var view = views[i]; // FIXME 子 view 有自己的数据的情况，该如何处理？

      view.changeData(data);
    }

    this.emit(VIEW_LIFE_CIRCLE.AFTER_CHANGE_DATA);
  };
  /* View 管理相关的 API */

  /**
   * 创建子 view
   *
   * ```ts
   * const innerView = view.createView({
   *   start: { x: 0, y: 0 },
   *   end: { x: 0.5, y: 0.5 },
   *   padding: 8,
   * });
   * ```
   *
   * @param cfg
   * @returns View
   */


  View.prototype.createView = function (cfg) {
    // 子 view 共享 options 配置数据
    var sharedOptions = {
      data: this.options.data,
      scales: Object(esm["clone"])(this.options.scales),
      axes: Object(esm["clone"])(this.options.axes),
      coordinate: Object(esm["clone"])(this.coordinateController.getOption()),
      tooltip: Object(esm["clone"])(this.options.tooltip),
      legends: Object(esm["clone"])(this.options.legends),
      animate: this.options.animate,
      visible: this.visible
    };
    var v = new View(_assign(_assign({
      parent: this,
      canvas: this.canvas,
      // 子 view 共用三层 group
      backgroundGroup: this.backgroundGroup.addGroup({
        zIndex: GROUP_Z_INDEX.BG
      }),
      middleGroup: this.middleGroup.addGroup({
        zIndex: GROUP_Z_INDEX.MID
      }),
      foregroundGroup: this.foregroundGroup.addGroup({
        zIndex: GROUP_Z_INDEX.FORE
      }),
      theme: this.themeObject,
      padding: this.padding
    }, cfg), {
      options: _assign(_assign({}, sharedOptions), Object(esm["get"])(cfg, 'options', {}))
    }));
    this.views.push(v);
    return v;
  };
  /**
   * @deprecated
   * This method will be removed at G2 V4.1. Replaced by {@link #createView()}
   */


  View.prototype.view = function (cfg) {
    console.warn('This method will be removed at G2 V4.1. Please use chart.createView() instead.');
    return this.createView(cfg);
  };
  /**
   * 删除一个子 view
   * @param view
   * @return removedView
   */


  View.prototype.removeView = function (view) {
    var removedView = Object(esm["remove"])(this.views, function (v) {
      return v === view;
    })[0];

    if (removedView) {
      removedView.destroy();
    }

    return removedView;
  };
  /* end View 管理相关的 API */
  // 一些 get 方法

  /**
   * 获取当前坐标系实例。
   * @returns [[Coordinate]]
   */


  View.prototype.getCoordinate = function () {
    return this.coordinateInstance;
  };
  /**
   * 获取当前 view 的主题配置。
   * @returns themeObject
   */


  View.prototype.getTheme = function () {
    return this.themeObject;
  };
  /**
   * 获得 x 轴字段的 scale 实例。
   * @returns view 中 Geometry 对于的 x scale
   */


  View.prototype.getXScale = function () {
    // 拿第一个 Geometry 的 X scale
    // 隐藏逻辑：一个 view 中的 Geometry 必须 x 字段一致
    var g = this.geometries[0];
    return g ? g.getXScale() : null;
  };
  /**
   * 获取 y 轴字段的 scales 实例。
   * @returns view 中 Geometry 对于的 y scale 数组
   */


  View.prototype.getYScales = function () {
    // 拿到所有的 Geometry 的 Y scale，然后去重
    var tmpMap = {};
    return this.geometries.map(function (g) {
      var yScale = g.getYScale();
      var field = yScale.field;

      if (!tmpMap[field]) {
        tmpMap[field] = true;
        return yScale;
      }
    });
  };
  /**
   * 获取 x 轴或者 y 轴对应的所有 scale 实例。
   * @param dimType x | y
   * @returns x 轴或者 y 轴对应的所有 scale 实例。
   */


  View.prototype.getScalesByDim = function (dimType) {
    var geometries = this.geometries;
    var scales = {};

    for (var i = 0, len = geometries.length; i < len; i++) {
      var geometry = geometries[i];
      var scale = dimType === 'x' ? geometry.getXScale() : geometry.getYScale();

      if (scale && !scales[scale.field]) {
        scales[scale.field] = scale;
      }
    }

    return scales;
  };
  /**
   * 根据字段名去获取 scale 实例。
   * @param field 数据字段名称
   * @param key id
   */


  View.prototype.getScaleByField = function (field, key) {
    var defaultKey = key ? key : this.getScaleKey(field); // 调用根节点 view 的方法获取

    return this.getRootView().scalePool.getScale(defaultKey);
  };
  /**
   * 返回所有配置信息。
   * @returns 所有的 view API 配置。
   */


  View.prototype.getOptions = function () {
    return this.options;
  };
  /**
   * 获取 view 的数据（过滤后的数据）。
   * @returns 处理过滤器之后的数据。
   */


  View.prototype.getData = function () {
    return this.filteredData;
  };
  /**
   * 获得绘制的层级 group。
   * @param layer 层级名称。
   * @returns 对应层级的 Group。
   */


  View.prototype.getLayer = function (layer) {
    return layer === LAYER.BG ? this.backgroundGroup : layer === LAYER.MID ? this.middleGroup : layer === LAYER.FORE ? this.foregroundGroup : this.foregroundGroup;
  };
  /**
   * 对外暴露方法，判断一个点是否在绘图区域（即坐标系范围）内部。
   * @param point 坐标点
   */


  View.prototype.isPointInPlot = function (point) {
    return isPointInCoordinate(this.getCoordinate(), point);
  };
  /**
   * 获得所有的 legend 对应的 attribute 实例。
   * @returns 维度字段的 Attribute 数组
   */


  View.prototype.getLegendAttributes = function () {
    return Object(esm["flatten"])(this.geometries.map(function (g) {
      return g.getGroupAttributes();
    }));
  };
  /**
   * 获取所有的分组字段的 scale 实例。
   * @returns 获得分组字段的 scale 实例数组。
   */


  View.prototype.getGroupScales = function () {
    // 拿到所有的 Geometry 的 分组字段 scale，然后打平去重
    var scales = this.geometries.map(function (g) {
      return g.getGroupScales();
    });
    return uniq(Object(esm["flatten"])(scales));
  };
  /**
   * 获取 G.Canvas 实例。
   * @returns G.Canvas 画布实例。
   */


  View.prototype.getCanvas = function () {
    return this.getRootView().canvas;
  };
  /**
   * 获得根节点 view。
   */


  View.prototype.getRootView = function () {
    var v = this;

    while (true) {
      if (v.parent) {
        v = v.parent;
        continue;
      }

      break;
    }

    return v;
  };
  /**
   * 获取该数据在可视化后，对应的画布坐标点。
   * @param data 原始数据记录
   * @returns 对应的画布坐标点
   */


  View.prototype.getXY = function (data) {
    var coordinate = this.getCoordinate();
    var xScales = this.getScalesByDim('x');
    var yScales = this.getScalesByDim('y');
    var x;
    var y;
    Object(esm["each"])(data, function (value, key) {
      if (xScales[key]) {
        x = xScales[key].scale(value);
      }

      if (yScales[key]) {
        y = yScales[key].scale(value);
      }
    });

    if (!Object(esm["isNil"])(x) && !Object(esm["isNil"])(y)) {
      return coordinate.convert({
        x: x,
        y: y
      });
    }
  };
  /**
   * 获取 name 对应的 controller 实例
   * @param name
   */


  View.prototype.getController = function (name) {
    return Object(esm["find"])(this.controllers, function (c) {
      return c.name === name;
    });
  };
  /**
   * 显示 point 坐标点对应的 tooltip。
   * @param point 画布坐标点
   * @returns View
   */


  View.prototype.showTooltip = function (point) {
    var tooltip = this.getController('tooltip');

    if (tooltip) {
      tooltip.showTooltip(point);
    }

    return this;
  };
  /**
   * 隐藏 tooltip。
   * @returns View
   */


  View.prototype.hideTooltip = function () {
    var tooltip = this.getController('tooltip');

    if (tooltip) {
      tooltip.hideTooltip();
    }

    return this;
  };
  /**
   * 将 tooltip 锁定到当前位置不能移动。
   * @returns View
   */


  View.prototype.lockTooltip = function () {
    var tooltip = this.getController('tooltip');

    if (tooltip) {
      tooltip.lockTooltip();
    }

    return this;
  };
  /**
   * 将 tooltip 锁定解除。
   * @returns View
   */


  View.prototype.unlockTooltip = function () {
    var tooltip = this.getController('tooltip');

    if (tooltip) {
      tooltip.unlockTooltip();
    }

    return this;
  };
  /**
   * 是否锁定 tooltip。
   * @returns 是否锁定
   */


  View.prototype.isTooltipLocked = function () {
    var tooltip = this.getController('tooltip');
    return tooltip && tooltip.isTooltipLocked();
  };
  /**
   * 获取当前 point 对应的 tooltip 数据项。
   * @param point 坐标点
   * @returns tooltip 数据项
   */


  View.prototype.getTooltipItems = function (point) {
    var tooltip = this.getController('tooltip');
    return tooltip ? tooltip.getTooltipItems(point) : [];
  };
  /**
   * 获取逼近的点的数据集合
   * @param point 当前坐标点
   * @returns  数据
   */


  View.prototype.getSnapRecords = function (point) {
    var geometries = this.geometries;
    var rst = [];

    for (var i = 0, len = geometries.length; i < len; i++) {
      var geom = geometries[i];
      var dataArray = geom.dataArray;
      geom.sort(dataArray); // 先进行排序，便于 tooltip 查找

      var record = void 0;

      for (var j = 0, dataLen = dataArray.length; j < dataLen; j++) {
        var data = dataArray[j];
        record = findDataByPoint(point, data, geom);

        if (record) {
          rst.push(record);
        }
      }
    } // 同样递归处理子 views


    var views = this.views;

    for (var i = 0, len = views.length; i < len; i++) {
      var view = views[i];
      var snapRecords = view.getSnapRecords(point);
      rst = rst.concat(snapRecords);
    }

    return rst;
  };
  /**
   * 获取所有的 pure component 组件，用于布局。
   */


  View.prototype.getComponents = function () {
    var components = [];
    var controllers = this.controllers;

    for (var i = 0, len = controllers.length; i < len; i++) {
      var controller = controllers[i];
      components = components.concat(controller.getComponents());
    }

    return components;
  };
  /**
   * 将 data 数据进行过滤。
   * @param data
   * @returns 过滤之后的数据
   */


  View.prototype.filterData = function (data) {
    var filters = this.options.filters; // 不存在 filters，则不需要进行数据过滤

    if (Object(esm["size"])(filters) === 0) {
      return data;
    } // 存在过滤器，则逐个执行过滤，过滤器之间是 与 的关系


    return Object(esm["filter"])(data, function (datum, idx) {
      // 所有的 filter 字段
      var fields = Object.keys(filters); // 所有的条件都通过，才算通过

      return fields.every(function (field) {
        var condition = filters[field]; // condition 返回 true，则保留

        return condition(datum[field], datum, idx);
      });
    });
  };
  /**
   * 对某一个字段进行过滤
   * @param field
   * @param data
   */


  View.prototype.filterFieldData = function (field, data) {
    var filters = this.options.filters;
    var condition = Object(esm["get"])(filters, field);

    if (Object(esm["isUndefined"])(condition)) {
      return data;
    }

    return data.filter(function (datum, idx) {
      return condition(datum[field], datum, idx);
    });
  };
  /**
   * 调整 coordinate 的坐标范围。
   */


  View.prototype.adjustCoordinate = function () {
    var _a = this.getCoordinate(),
        curStart = _a.start,
        curEnd = _a.end;

    var start = this.coordinateBBox.bl;
    var end = this.coordinateBBox.tr; // 在 defaultLayoutFn 中只会在 coordinateBBox 发生变化的时候会调用 adjustCoorinate()，所以不用担心被置位

    if (Object(esm["isEqual"])(curStart, start) && Object(esm["isEqual"])(curEnd, end)) {
      this.isCoordinateChanged = false; // 如果大小没有变化则不更新

      return;
    }

    this.isCoordinateChanged = true;
    this.coordinateInstance = this.coordinateController.adjust(start, end);
  };

  View.prototype.paint = function (isUpdate) {
    this.renderDataRecursive(isUpdate); // 处理 sync scale 的逻辑

    this.syncScale();
    this.emit(VIEW_LIFE_CIRCLE.BEFORE_PAINT);
    this.renderLayoutRecursive(isUpdate);
    this.renderPaintRecursive(isUpdate);
    this.emit(VIEW_LIFE_CIRCLE.AFTER_PAINT);
    this.isDataChanged = false; // 渲染完毕复位
  };
  /**
   * 替换处理 view 的布局，最终是计算各个 view 的 coordinateBBox 和 coordinateInstance
   * @param isUpdate
   */


  View.prototype.renderLayoutRecursive = function (isUpdate) {
    // 1. 子 view 大小相对 coordinateBBox，changeSize 的时候需要重新计算
    this.calculateViewBBox(); // 2. 更新 coordinate

    this.adjustCoordinate(); // 3. 初始化组件 component

    this.initComponents(isUpdate); // 4. 进行布局，计算 coordinateBBox，进行组件布局，update 位置

    this.doLayout(); // 5. 更新并存储最终的 padding 值

    var viewBBox = this.viewBBox;
    var coordinateBBox = this.coordinateBBox;

    if (!this.padding) {
      // 用户未设置 padding 时，将自动计算的 padding 保存至 autoPadding 属性中
      this.autoPadding = [coordinateBBox.tl.y - viewBBox.tl.y, viewBBox.tr.x - coordinateBBox.tr.x, viewBBox.bl.y - coordinateBBox.bl.y, coordinateBBox.tl.x - viewBBox.tl.x];
    } // 同样递归处理子 views


    var views = this.views;

    for (var i = 0, len = views.length; i < len; i++) {
      var view = views[i];
      view.renderLayoutRecursive(isUpdate);
    }
  };
  /**
   * 最终递归绘制组件和图形
   * @param isUpdate
   */


  View.prototype.renderPaintRecursive = function (isUpdate) {
    if (this.limitInPlot) {
      var middleGroup = this.middleGroup;

      var _a = getCoordinateClipCfg(this.coordinateInstance),
          type = _a.type,
          attrs = _a.attrs;

      middleGroup.setClip({
        type: type,
        attrs: attrs
      });
    } // 1. 渲染几何标记


    this.paintGeometries(isUpdate); // 2. 绘制组件

    this.renderComponents(isUpdate); // 同样递归处理子 views

    var views = this.views;

    for (var i = 0, len = views.length; i < len; i++) {
      var view = views[i];
      view.renderPaintRecursive(isUpdate);
    }
  }; // end Get 方法

  /**
   * 创建 scale，递归到顶层 view 去创建和缓存 scale
   * @param field
   * @param data
   * @param scaleDef
   * @param key
   */


  View.prototype.createScale = function (field, data, scaleDef, key) {
    // 1. 合并 field 对应的 scaleDef，合并原则是底层覆盖顶层（就近原则）
    var currentScaleDef = Object(esm["get"])(this.options.scales, [field]);

    var mergedScaleDef = _assign(_assign({}, currentScaleDef), scaleDef); // 2. 是否存在父 view，在则递归，否则创建


    if (this.parent) {
      return this.parent.createScale(field, data, mergedScaleDef, key);
    } // 3. 在根节点 view 通过 scalePool 创建


    return this.scalePool.createScale(field, data, mergedScaleDef, key);
  };
  /**
   * 递归渲染中的数据处理
   * @param isUpdate
   */


  View.prototype.renderDataRecursive = function (isUpdate) {
    // 1. 处理数据
    this.doFilterData(); // 2. 创建实例

    this.createCoordinate(); // 3. 初始化 Geometry

    this.initGeometries(isUpdate); // 4. 处理分面逻辑，最终都是生成子 view 和 geometry

    this.renderFacet(isUpdate); // 同样递归处理子 views

    var views = this.views;

    for (var i = 0, len = views.length; i < len; i++) {
      var view = views[i];
      view.renderDataRecursive(isUpdate);
    }
  };
  /**
   * 计算 region，计算实际的像素范围坐标
   * @private
   */


  View.prototype.calculateViewBBox = function () {
    var x;
    var y;
    var width;
    var height;

    if (this.parent) {
      var bbox = this.parent.coordinateBBox; // 存在 parent， 那么就是通过父容器大小计算

      x = bbox.x;
      y = bbox.y;
      width = bbox.width;
      height = bbox.height;
    } else {
      // 顶层容器，从 canvas 中取值 宽高
      x = 0;
      y = 0;
      width = this.canvas.get('width');
      height = this.canvas.get('height');
    }

    var _a = this.region,
        start = _a.start,
        end = _a.end; // 根据 region 计算当前 view 的 bbox 大小。

    var viewBBox = new bbox_BBox(x + width * start.x, y + height * start.y, width * (end.x - start.x), height * (end.y - start.y));

    if (!this.viewBBox || !this.viewBBox.isEqual(viewBBox)) {
      // viewBBox 发生变化的时候进行更新
      this.viewBBox = new bbox_BBox(x + width * start.x, y + height * start.y, width * (end.x - start.x), height * (end.y - start.y)); // 初始的 coordinate bbox 大小

      this.coordinateBBox = this.viewBBox;
    }
  };
  /**
   * 初始化事件机制：G 4.0 底层内置支持 name:event 的机制，那么只要所有组件都有自己的 name 即可。
   *
   * G2 的事件只是获取事件委托，然后在 view 嵌套结构中，形成事件冒泡机制。
   * 当前 view 只委托自己 view 中的 Component 和 Geometry 事件，并向上冒泡
   * @private
   */


  View.prototype.initEvents = function () {
    // 三层 group 中的 shape 事件都会通过 G 冒泡上来的
    this.foregroundGroup.on('*', this.onDelegateEvents);
    this.middleGroup.on('*', this.onDelegateEvents);
    this.backgroundGroup.on('*', this.onDelegateEvents);
    this.canvas.on('*', this.onCanvasEvent);
  };
  /**
   * 初始化插件
   */


  View.prototype.initComponentController = function () {
    var usedControllers = this.usedControllers;

    for (var i = 0, len = usedControllers.length; i < len; i++) {
      var controllerName = usedControllers[i];
      var Ctor = getComponentController(controllerName);

      if (Ctor) {
        this.controllers.push(new Ctor(this));
      }
    }
  };

  View.prototype.createViewEvent = function (evt) {
    var shape = evt.shape,
        name = evt.name;
    var data = shape ? shape.get('origin') : null; // 事件在 view 嵌套中冒泡（暂不提供阻止冒泡的机制）

    var e = new chart_event(this, evt, data);
    e.type = name;
    return e;
  };
  /**
   * 处理 PLOT_EVENTS
   * plot event 需要处理所有的基础事件，并判断是否在画布中，然后再决定是否要 emit。
   * 对于 mouseenter、mouseleave 比较特殊，需要做一下数学比较。
   * @param e
   */


  View.prototype.doPlotEvent = function (e) {
    var type = e.type,
        x = e.x,
        y = e.y;
    var point = {
      x: x,
      y: y
    };
    var ALL_EVENTS = ['mousedown', 'mouseup', 'mousemove', 'mouseleave', 'mousewheel', 'touchstart', 'touchmove', 'touchend', 'touchcancel', 'click', 'dblclick', 'contextmenu'];

    if (ALL_EVENTS.includes(type)) {
      var currentInPlot = this.isPointInPlot(point);

      if (currentInPlot) {
        var TYPE = "plot:" + type; // 组合 plot 事件

        e.type = TYPE;
        this.emit(TYPE, e);

        if (type === 'mouseleave' || type === 'touchend') {
          // 在plot 内部却离开画布
          this.isPreMouseInPlot = false;
        }
      } // 对于 mouseenter, mouseleave 的计算处理


      if (type === 'mousemove' || type === 'touchmove') {
        if (this.isPreMouseInPlot && !currentInPlot) {
          if (type === 'mousemove') {
            e.type = PLOT_EVENTS.MOUSE_LEAVE;
            this.emit(PLOT_EVENTS.MOUSE_LEAVE, e);
          }

          e.type = PLOT_EVENTS.LEAVE;
          this.emit(PLOT_EVENTS.LEAVE, e);
        } else if (!this.isPreMouseInPlot && currentInPlot) {
          if (type === 'mousemove') {
            e.type = PLOT_EVENTS.MOUSE_ENTER;
            this.emit(PLOT_EVENTS.MOUSE_ENTER, e);
          }

          e.type = PLOT_EVENTS.ENTER;
          this.emit(PLOT_EVENTS.ENTER, e);
        } // 赋新的状态值


        this.isPreMouseInPlot = currentInPlot;
      } else if (type === 'mouseleave' || type === 'touchend') {
        // 可能不在 currentInPlot 中
        if (this.isPreMouseInPlot) {
          if (type === 'mouseleave') {
            e.type = PLOT_EVENTS.MOUSE_LEAVE;
            this.emit(PLOT_EVENTS.MOUSE_LEAVE, e);
          }

          e.type = PLOT_EVENTS.LEAVE;
          this.emit(PLOT_EVENTS.LEAVE, e);
          this.isPreMouseInPlot = false;
        }
      }
    }
  }; // view 生命周期 —— 渲染流程

  /**
   * 处理筛选器，筛选数据
   * @private
   */


  View.prototype.doFilterData = function () {
    var data = this.options.data;
    this.filteredData = this.filterData(data);
  };
  /**
   * 初始化 Geometries
   * @private
   */


  View.prototype.initGeometries = function (isUpdate) {
    // 初始化图形的之前，先创建 / 更新 scales
    this.createOrUpdateScales(); // 实例化 Geometry，然后 view 将所有的 scale 管理起来

    var coordinate = this.getCoordinate();
    var scaleDefs = Object(esm["get"])(this.options, 'scales', {});
    var geometries = this.geometries;

    for (var i = 0, len = geometries.length; i < len; i++) {
      var geometry = geometries[i]; // 保持 scales 引用不要变化

      geometry.scales = this.getGeometryScales();
      var cfg = {
        coordinate: coordinate,
        scaleDefs: scaleDefs,
        data: this.filteredData,
        theme: this.themeObject,
        isDataChanged: this.isDataChanged,
        isCoordinateChanged: this.isCoordinateChanged
      };

      if (isUpdate) {
        // 数据发生更新
        geometry.update(cfg);
      } else {
        geometry.init(cfg);
      }
    } // Geometry 初始化之后，生成了 scale，然后进行调整 scale 配置


    this.adjustScales();
  };
  /**
   * 根据 Geometry 的所有字段创建 scales
   * 如果存在，则更新，不存在则创建
   */


  View.prototype.createOrUpdateScales = function () {
    var fields = this.getScaleFields();
    var groupedFields = this.getGroupedFields();

    var _a = this.getOptions(),
        data = _a.data,
        _b = _a.scales,
        scales = _b === void 0 ? {} : _b;

    var filteredData = this.filteredData;

    for (var i = 0, len = fields.length; i < len; i++) {
      var field = fields[i];
      var scaleDef = scales[field]; // 调用方法，递归去创建

      var key = this.getScaleKey(field);
      this.createScale(field, // 分组字段的 scale 使用未过滤的数据创建
      groupedFields.includes(field) ? data : filteredData, scaleDef, key); // 缓存从当前 view 创建的 scale key

      this.createdScaleKeys.set(key, true);
    }
  };
  /**
   * 处理 scale 同步逻辑
   */


  View.prototype.syncScale = function () {
    // 最终调用 root view 的
    this.getRootView().scalePool.sync();
  };
  /**
   * 获得 Geometry 中的 scale 对象
   */


  View.prototype.getGeometryScales = function () {
    var fields = this.getScaleFields();
    var scales = {};

    for (var i = 0; i < fields.length; i++) {
      var field = fields[i];
      scales[field] = this.getScaleByField(field);
    }

    return scales;
  };

  View.prototype.getScaleFields = function () {
    var fields = [];
    var tmpMap = {};
    var geometries = this.geometries;

    for (var i = 0; i < geometries.length; i++) {
      var geometry = geometries[i];
      var geometryScales = geometry.getScaleFields();
      uniq(geometryScales, fields, tmpMap);
    }

    return fields;
  };

  View.prototype.getGroupedFields = function () {
    var fields = [];
    var tmpMap = {};
    var geometries = this.geometries;

    for (var i = 0; i < geometries.length; i++) {
      var geometry = geometries[i];
      var groupFields = geometry.getGroupFields();
      uniq(groupFields, fields, tmpMap);
    }

    return fields;
  };
  /**
   * 调整 scale 配置
   * @private
   */


  View.prototype.adjustScales = function () {
    // 调整目前包括：
    // 分类 scale，调整 range 范围
    this.adjustCategoryScaleRange();
  };
  /**
   * 调整分类 scale 的 range，防止超出坐标系外面
   * @private
   */


  View.prototype.adjustCategoryScaleRange = function () {
    var _this = this;

    var xyScales = __spreadArrays([this.getXScale()], this.getYScales()).filter(function (e) {
      return !!e;
    });

    var coordinate = this.getCoordinate();
    var scaleOptions = this.options.scales;
    Object(esm["each"])(xyScales, function (scale) {
      var field = scale.field,
          values = scale.values,
          isCategory = scale.isCategory,
          isIdentity = scale.isIdentity; // 分类或者 identity 的 scale 才进行处理

      if (isCategory || isIdentity) {
        // 存在 value 值，且用户没有配置 range 配置
        if (values && !Object(esm["get"])(scaleOptions, [field, 'range'])) {
          var count = values.length;
          var range = void 0;

          if (count === 1) {
            range = [0.5, 1]; // 只有一个分类时,防止计算出现 [0.5,0.5] 的状态
          } else {
            var widthRatio = 1;
            var offset = 0;

            if (isFullCircle(coordinate)) {
              if (!coordinate.isTransposed) {
                range = [0, 1 - 1 / count];
              } else {
                widthRatio = Object(esm["get"])(_this.theme, 'widthRatio.multiplePie', 1 / 1.3);
                offset = 1 / count * widthRatio;
                range = [offset / 2, 1 - offset / 2];
              }
            } else {
              offset = 1 / count / 2; // 两边留下分类空间的一半

              range = [offset, 1 - offset]; // 坐标轴最前面和最后面留下空白防止绘制柱状图时
            }
          } // 更新 range


          scale.range = range;
        }
      }
    });
  };
  /**
   * 根据 options 配置、Geometry 字段配置，自动生成 components
   * @param isUpdate 是否是更新
   * @private
   */


  View.prototype.initComponents = function (isUpdate) {
    // 先全部清空，然后 render
    var controllers = this.controllers;

    for (var i = 0; i < controllers.length; i++) {
      var controller = controllers[i]; // 更新则走更新逻辑；否则清空载重绘

      if (isUpdate) {
        controller.update();
      } else {
        controller.clear();
        controller.render();
      }
    }
  };

  View.prototype.doLayout = function () {
    this.layoutFunc(this);
  };
  /**
   * 创建坐标系
   * @private
   */


  View.prototype.createCoordinate = function () {
    var start = this.coordinateBBox.bl;
    var end = this.coordinateBBox.tr;
    this.coordinateInstance = this.coordinateController.create(start, end);
  };
  /**
   * 根据 options 配置自动渲染 geometry
   * @private
   */


  View.prototype.paintGeometries = function (isUpdate) {
    var doAnimation = this.options.animate; // geometry 的 paint 阶段

    var coordinate = this.getCoordinate();
    var canvasRegion = {
      x: this.viewBBox.x,
      y: this.viewBBox.y,
      minX: this.viewBBox.minX,
      minY: this.viewBBox.minY,
      maxX: this.viewBBox.maxX,
      maxY: this.viewBBox.maxY,
      width: this.viewBBox.width,
      height: this.viewBBox.height
    };
    var geometries = this.geometries;

    for (var i = 0; i < geometries.length; i++) {
      var geometry = geometries[i];
      geometry.coordinate = coordinate;
      geometry.canvasRegion = canvasRegion;

      if (!doAnimation) {
        // 如果 view 不执行动画，那么 view 下所有的 geometry 都不执行动画
        geometry.animate(false);
      }

      geometry.paint(isUpdate);
    }
  };
  /**
   * 最后的绘制组件
   * @param isUpdate
   */


  View.prototype.renderComponents = function (isUpdate) {
    // 先全部清空，然后 render
    for (var i = 0; i < this.getComponents().length; i++) {
      var co = this.getComponents()[i];
      co.component.render();
    }
  };
  /**
   * 渲染分面，会在其中进行数据分面，然后进行子 view 创建
   * @param isUpdate
   */


  View.prototype.renderFacet = function (isUpdate) {
    if (this.facetInstance) {
      if (isUpdate) {
        this.facetInstance.update();
      } else {
        this.facetInstance.clear(); // 计算分面数据

        this.facetInstance.init(); // 渲染组件和 views

        this.facetInstance.render();
      }
    }
  };

  View.prototype.initOptions = function () {
    var _a = this.options,
        _b = _a.geometries,
        geometries = _b === void 0 ? [] : _b,
        _c = _a.interactions,
        interactions = _c === void 0 ? [] : _c,
        _d = _a.views,
        views = _d === void 0 ? [] : _d,
        _e = _a.annotations,
        annotations = _e === void 0 ? [] : _e; // 创建 geometry 实例

    for (var i = 0; i < geometries.length; i++) {
      var geometryOption = geometries[i];
      this.createGeometry(geometryOption);
    } // 创建 interactions 实例


    for (var j = 0; j < interactions.length; j++) {
      var interactionOption = interactions[j];
      var type = interactionOption.type,
          cfg = interactionOption.cfg;
      this.interaction(type, cfg);
    } // 创建 view 实例


    for (var k = 0; k < views.length; k++) {
      var viewOption = views[k];
      this.createView(viewOption);
    } // 设置 annotation


    var annotationComponent = this.getController('annotation');

    for (var l = 0; l < annotations.length; l++) {
      var annotationOption = annotations[l];
      annotationComponent.annotation(annotationOption);
    }
  };

  View.prototype.createGeometry = function (geometryOption) {
    var type = geometryOption.type,
        _a = geometryOption.cfg,
        cfg = _a === void 0 ? {} : _a;

    if (this[type]) {
      var geometry_1 = this[type](cfg);
      Object(esm["each"])(geometryOption, function (v, k) {
        if (Object(esm["isFunction"])(geometry_1[k])) {
          geometry_1[k](v);
        }
      });
    }
  };
  /**
   * scale key 的创建方式
   * @param field
   */


  View.prototype.getScaleKey = function (field) {
    return this.id + "-" + field;
  };

  return View;
}(base);


/**
 * 注册 geometry 组件
 * @param name
 * @param Ctor
 * @returns Geometry
 */

function registerGeometry(name, Ctor) {
  // 语法糖，在 view API 上增加原型方法
  view_View.prototype[name.toLowerCase()] = function (cfg) {
    if (cfg === void 0) {
      cfg = {};
    }

    var props = _assign({
      /** 图形容器 */
      container: this.middleGroup.addGroup(),
      labelsContainer: this.foregroundGroup.addGroup()
    }, cfg);

    var geometry = new Ctor(props);
    this.geometries.push(geometry);
    return geometry;
  };
}
/* harmony default export */ var chart_view = (view_View);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/chart/chart.js






/**
 * Chart 类，是使用 G2 进行绘图的入口。
 */

var chart_Chart =
/** @class */
function (_super) {
  __extends(Chart, _super); // @ts-ignore


  function Chart(props) {
    var _this = this;

    var container = props.container,
        width = props.width,
        height = props.height,
        _a = props.autoFit,
        autoFit = _a === void 0 ? false : _a,
        padding = props.padding,
        appendPadding = props.appendPadding,
        _b = props.renderer,
        renderer = _b === void 0 ? 'canvas' : _b,
        pixelRatio = props.pixelRatio,
        _c = props.localRefresh,
        localRefresh = _c === void 0 ? true : _c,
        _d = props.visible,
        visible = _d === void 0 ? true : _d,
        _e = props.defaultInteractions,
        defaultInteractions = _e === void 0 ? ['tooltip', 'legend-filter', 'legend-active', 'continuous-filter'] : _e,
        options = props.options,
        limitInPlot = props.limitInPlot,
        theme = props.theme;
    var ele = Object(esm["isString"])(container) ? document.getElementById(container) : container; // 生成内部正式绘制的 div 元素

    var wrapperElement = createDom('<div style="position:relative;"></div>');
    ele.appendChild(wrapperElement); // if autoFit, use the container size, to avoid the graph render twice.

    var size = getChartSize(ele, autoFit, width, height);
    var G = getEngine(renderer);
    var canvas = new G.Canvas(_assign({
      container: wrapperElement,
      pixelRatio: pixelRatio,
      localRefresh: localRefresh
    }, size)); // 调用 view 的创建

    _this = _super.call(this, {
      parent: null,
      canvas: canvas,
      // create 3 group layers for views.
      backgroundGroup: canvas.addGroup({
        zIndex: GROUP_Z_INDEX.BG
      }),
      middleGroup: canvas.addGroup({
        zIndex: GROUP_Z_INDEX.MID
      }),
      foregroundGroup: canvas.addGroup({
        zIndex: GROUP_Z_INDEX.FORE
      }),
      padding: padding,
      appendPadding: appendPadding,
      visible: visible,
      options: options,
      limitInPlot: limitInPlot,
      theme: theme
    }) || this;
    /**
     * when container size changed, change chart size props, and re-render.
     */

    _this.onResize = Object(esm["debounce"])(function () {
      _this.forceFit();
    }, 300); // 设置主题背景色

    var chartTheme = _this.getTheme();

    if (Object(esm["get"])(chartTheme, 'background')) {
      modifyCSS(wrapperElement, {
        background: Object(esm["get"])(chartTheme, 'background')
      });
    }

    _this.ele = ele;
    _this.canvas = canvas;
    _this.width = size.width;
    _this.height = size.height;
    _this.autoFit = autoFit;
    _this.localRefresh = localRefresh;
    _this.renderer = renderer;
    _this.wrapperElement = wrapperElement; // 自适应大小

    _this.updateCanvasStyle();

    _this.bindAutoFit();

    _this.initDefaultInteractions(defaultInteractions);

    return _this;
  }

  Chart.prototype.initDefaultInteractions = function (interactions) {
    var _this = this;

    Object(esm["each"])(interactions, function (interaction) {
      _this.interaction(interaction);
    });
  };
  /**
   * 改变图表大小，同时重新渲染。
   * @param width 图表宽度
   * @param height 图表高度
   * @returns
   */


  Chart.prototype.changeSize = function (width, height) {
    this.width = width;
    this.height = height;
    this.canvas.changeSize(width, height); // 重新渲染

    this.render(true);
    return this;
  };
  /**
   * 销毁图表，同时解绑事件，销毁创建的 G.Canvas 实例。
   * @returns void
   */


  Chart.prototype.destroy = function () {
    _super.prototype.destroy.call(this);

    this.unbindAutoFit();
    this.canvas.destroy();
    removeDom(this.wrapperElement);
    this.wrapperElement = null;
  };
  /**
   * 显示或隐藏图表
   * @param visible 是否可见，true 表示显示，false 表示隐藏
   * @returns
   */


  Chart.prototype.changeVisible = function (visible) {
    this.wrapperElement.style.display = visible ? '' : 'none';
    return this;
  };
  /**
   * 自动根据容器大小 resize 画布
   */


  Chart.prototype.forceFit = function () {
    // skip if already destroyed
    if (!this.destroyed) {
      // 注意第二参数用 true，意思是即时 autoFit = false，forceFit() 调用之后一样是适配容器
      var _a = getChartSize(this.ele, true, this.width, this.height),
          width = _a.width,
          height = _a.height;

      this.changeSize(width, height);
    }
  };

  Chart.prototype.updateCanvasStyle = function () {
    modifyCSS(this.canvas.get('el'), {
      display: 'inline-block',
      verticalAlign: 'middle'
    });
  };

  Chart.prototype.bindAutoFit = function () {
    if (this.autoFit) {
      window.addEventListener('resize', this.onResize);
    }
  };

  Chart.prototype.unbindAutoFit = function () {
    if (this.autoFit) {
      window.removeEventListener('resize', this.onResize);
    }
  };

  return Chart;
}(chart_view);

/* harmony default export */ var chart = (chart_Chart);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/chart/index.js




// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/chart/controller/base.js


/**
 * Component Controller 规范需要定义的基类
 * 1. 规范的 option 输入
 * 2. 统一的信息获取 API
 * 3. 明确定义的组件事件（名称、数据）
 */

var base_Controller =
/** @class */
function () {
  function Controller(view) {
    /** 是否可见 */
    this.visible = true;
    /** 所有的 component */

    this.components = [];
    this.view = view;
  }
  /**
   * clear
   */


  Controller.prototype.clear = function () {
    // destroy all components
    Object(esm["each"])(this.components, function (co) {
      co.component.destroy();
    }); // clear all component instance

    this.components = [];
  };
  /**
   * destroy the component
   */


  Controller.prototype.destroy = function () {
    this.clear();
  };
  /**
   * get all components
   * @returns components array
   */


  Controller.prototype.getComponents = function () {
    return this.components;
  };
  /**
   * change visibility of component
   * @param visible
   */


  Controller.prototype.changeVisible = function (visible) {
    if (this.visible === visible) {
      return;
    }

    this.components.forEach(function (co) {
      if (visible) {
        co.component.show();
      } else {
        co.component.hide();
      }
    });
    this.visible = visible;
  };

  return Controller;
}();


// CONCATENATED MODULE: ../node_modules/@antv/adjust/esm/constant.js
var DEFAULT_Y = 0; // 默认的 y 的值
// 偏移之后，间距

var MARGIN_RATIO = 1 / 2;
var DODGE_RATIO = 1 / 2; // 散点分开之后，距离边界的距离

var GAP = 0.05;
// CONCATENATED MODULE: ../node_modules/@antv/adjust/esm/adjusts/adjust.js






var adjust_Adjust =
/** @class */
function () {
  function Adjust(cfg) {
    var xField = cfg.xField,
        yField = cfg.yField,
        _a = cfg.adjustNames,
        adjustNames = _a === void 0 ? ['x', 'y'] : _a;
    this.adjustNames = adjustNames;
    this.xField = xField;
    this.yField = yField;
  }
  /**
   * 查看维度是否是 adjust 字段
   * @param dim
   */


  Adjust.prototype.isAdjust = function (dim) {
    return this.adjustNames.indexOf(dim) >= 0;
  };

  Adjust.prototype.getAdjustRange = function (dim, dimValue, values) {
    var yField = this.yField;
    var index = values.indexOf(dimValue);
    var length = values.length;
    var pre;
    var next; // 没有 y 字段，但是需要根据 y 调整

    if (!yField && this.isAdjust('y')) {
      pre = 0;
      next = 1;
    } else if (length > 1) {
      // 如果以其开头，则取之，否则取他前面一个
      pre = values[index === 0 ? 0 : index - 1]; // 如果以其结尾，则取之，否则取他后面一个

      next = values[index === length - 1 ? length - 1 : index + 1];

      if (index !== 0) {
        pre += (dimValue - pre) / 2;
      } else {
        pre -= (next - dimValue) / 2;
      }

      if (index !== length - 1) {
        next -= (next - dimValue) / 2;
      } else {
        next += (dimValue - values[length - 2]) / 2;
      }
    } else {
      pre = dimValue === 0 ? 0 : dimValue - 0.5;
      next = dimValue === 0 ? 1 : dimValue + 0.5;
    }

    return {
      pre: pre,
      next: next
    };
  };

  Adjust.prototype.adjustData = function (groupedDataArray, mergedData) {
    var _this = this; // 所有调整维度的值数组


    var dimValuesMap = this.getDimValues(mergedData); // 按照每一个分组来进行调整

    esm["each"](groupedDataArray, function (dataArray, index) {
      // 遍历所有数据集合
      // 每个分组中，分别按照不同的 dim 进行调整
      esm["each"](dimValuesMap, function (values, dim) {
        // 根据不同的度量分别调整位置
        _this.adjustDim(dim, values, dataArray, index);
      });
    });
  };
  /**
   * 对数据进行分组adjustData
   * @param data 数据
   * @param dim 分组的字段
   * @return 分组结果
   */


  Adjust.prototype.groupData = function (data, dim) {
    // 补齐数据空数据为默认值
    esm["each"](data, function (record) {
      if (record[dim] === undefined) {
        record[dim] = DEFAULT_Y;
      }
    }); // 按照 dim 维度分组


    return esm["groupBy"](data, dim);
  };
  /** @override */


  Adjust.prototype.adjustDim = function (dim, values, data, index) {};
  /**
   * 获取可调整度量对应的值
   * @param mergedData 数据
   * @return 值的映射
   */


  Adjust.prototype.getDimValues = function (mergedData) {
    var _a = this,
        xField = _a.xField,
        yField = _a.yField;

    var dimValuesMap = {}; // 所有的维度

    var dims = [];

    if (xField && this.isAdjust('x')) {
      dims.push(xField);
    }

    if (yField && this.isAdjust('y')) {
      dims.push(yField);
    }

    dims.forEach(function (dim) {
      // 在每个维度上，所有的值
      dimValuesMap[dim] = esm["valuesOfKey"](mergedData, dim).sort(function (v1, v2) {
        return v1 - v2;
      });
    }); // 只有一维的情况下，同时调整 y，赋予默认值

    if (!yField && this.isAdjust('y')) {
      var dim = 'y';
      dimValuesMap[dim] = [DEFAULT_Y, 1]; // 默认分布在 y 轴的 0 与 1 之间
    }

    return dimValuesMap;
  };

  return Adjust;
}();

/* harmony default export */ var adjusts_adjust = (adjust_Adjust);
// CONCATENATED MODULE: ../node_modules/@antv/adjust/esm/factory.js

var ADJUST_MAP = {};
/**
 * 根据类型获取 Adjust 类
 * @param type
 */

var getAdjust = function getAdjust(type) {
  return ADJUST_MAP[type.toLowerCase()];
};
/**
 * 注册自定义 Adjust
 * @param type
 * @param ctor
 */


var registerAdjust = function registerAdjust(type, ctor) {
  // 注册的时候，需要校验 type 重名，不区分大小写
  if (getAdjust(type)) {
    throw new Error("Adjust type '" + type + "' existed.");
  } // 存储到 map 中


  ADJUST_MAP[type.toLowerCase()] = ctor;
};


// CONCATENATED MODULE: ../node_modules/@antv/adjust/esm/adjusts/dodge.js






var dodge_Dodge =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Dodge, _super);

  function Dodge(cfg) {
    var _this = _super.call(this, cfg) || this;

    _this.cacheMap = {};
    _this.adjustDataArray = [];
    _this.mergeData = [];
    var _a = cfg.marginRatio,
        marginRatio = _a === void 0 ? MARGIN_RATIO : _a,
        _b = cfg.dodgeRatio,
        dodgeRatio = _b === void 0 ? DODGE_RATIO : _b,
        dodgeBy = cfg.dodgeBy;
    _this.marginRatio = marginRatio;
    _this.dodgeRatio = dodgeRatio;
    _this.dodgeBy = dodgeBy;
    return _this;
  }

  Dodge.prototype.process = function (groupDataArray) {
    var groupedDataArray = esm["clone"](groupDataArray); // 将数据数组展开一层


    var mergeData = esm["flatten"](groupedDataArray);

    var dodgeBy = this.dodgeBy; // 如果指定了分组 dim 的字段

    var adjustDataArray = dodgeBy ? esm["group"](mergeData, dodgeBy) : groupedDataArray;
    this.cacheMap = {};
    this.adjustDataArray = adjustDataArray;
    this.mergeData = mergeData;
    this.adjustData(adjustDataArray, mergeData);
    this.adjustDataArray = [];
    this.mergeData = [];
    return groupedDataArray;
  };

  Dodge.prototype.adjustDim = function (dim, values, data, frameIndex) {
    var _this = this;

    var map = this.getDistribution(dim);
    var groupData = this.groupData(data, dim); // 根据值分组

    esm["each"](groupData, function (group, key) {
      var range; // xField 中只有一个值，不需要做 dodge

      if (values.length === 1) {
        range = {
          pre: values[0] - 1,
          next: values[0] + 1
        };
      } else {
        // 如果有多个，则需要获取调整的范围
        range = _this.getAdjustRange(dim, parseFloat(key), values);
      }

      esm["each"](group, function (d) {
        var value = d[dim];
        var valueArr = map[value];
        var valIndex = valueArr.indexOf(frameIndex);
        d[dim] = _this.getDodgeOffset(range, valIndex, valueArr.length);
      });
    });

    return [];
  };

  Dodge.prototype.getDodgeOffset = function (range, idx, len) {
    var _a = this,
        dodgeRatio = _a.dodgeRatio,
        marginRatio = _a.marginRatio;

    var pre = range.pre,
        next = range.next;
    var tickLength = next - pre;
    var width = tickLength * dodgeRatio / len;
    var margin = marginRatio * width;
    var offset = 1 / 2 * (tickLength - len * width - (len - 1) * margin) + ((idx + 1) * width + idx * margin) - 1 / 2 * width - 1 / 2 * tickLength;
    return (pre + next) / 2 + offset;
  };

  Dodge.prototype.getDistribution = function (dim) {
    var groupedDataArray = this.adjustDataArray;
    var cacheMap = this.cacheMap;
    var map = cacheMap[dim];

    if (!map) {
      map = {};

      esm["each"](groupedDataArray, function (data, index) {
        var values = esm["valuesOfKey"](data, dim);

        if (!values.length) {
          values.push(0);
        }

        esm["each"](values, function (val) {
          if (!map[val]) {
            map[val] = [];
          }

          map[val].push(index);
        });
      });

      cacheMap[dim] = map;
    }

    return map;
  };

  return Dodge;
}(adjusts_adjust);

/* harmony default export */ var dodge = (dodge_Dodge);
// CONCATENATED MODULE: ../node_modules/@antv/adjust/esm/adjusts/jitter.js





function randomNumber(min, max) {
  return (max - min) * Math.random() + min;
}

var jitter_Jitter =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Jitter, _super);

  function Jitter() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Jitter.prototype.process = function (groupDataArray) {
    var groupedDataArray = esm["clone"](groupDataArray); // 之前分组之后的数据，然后有合并回去（和分组前可以理解成是一样的）


    var mergeData = esm["flatten"](groupedDataArray); // 返回值


    this.adjustData(groupedDataArray, mergeData);
    return groupedDataArray;
  };
  /**
   * 当前数据分组（index）中，按照维度 dim 进行 jitter 调整
   * @param dim
   * @param values
   * @param dataArray
   */


  Jitter.prototype.adjustDim = function (dim, values, dataArray) {
    var _this = this; // 在每一个分组中，将数据再按照 dim 分组，用于散列


    var groupDataArray = this.groupData(dataArray, dim);
    return esm["each"](groupDataArray, function (data, dimValue) {
      return _this.adjustGroup(data, dim, parseFloat(dimValue), values);
    });
  }; // 随机出来的字段值


  Jitter.prototype.getAdjustOffset = function (range) {
    var pre = range.pre,
        next = range.next; // 随机的范围

    var margin = (next - pre) * GAP;
    return randomNumber(pre + margin, next - margin);
  }; // adjust group data


  Jitter.prototype.adjustGroup = function (group, dim, dimValue, values) {
    var _this = this; // 调整范围


    var range = this.getAdjustRange(dim, dimValue, values);

    esm["each"](group, function (data) {
      data[dim] = _this.getAdjustOffset(range); // 获取调整的位置
    });

    return group;
  };

  return Jitter;
}(adjusts_adjust);

/* harmony default export */ var jitter = (jitter_Jitter);
// CONCATENATED MODULE: ../node_modules/@antv/adjust/esm/adjusts/stack.js







var Cache = esm["Cache"];

var stack_Stack =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Stack, _super);

  function Stack(cfg) {
    var _this = _super.call(this, cfg) || this;

    var _a = cfg.adjustNames,
        adjustNames = _a === void 0 ? ['y'] : _a,
        _b = cfg.height,
        height = _b === void 0 ? NaN : _b,
        _c = cfg.size,
        size = _c === void 0 ? 10 : _c,
        _d = cfg.reverseOrder,
        reverseOrder = _d === void 0 ? false : _d;
    _this.adjustNames = adjustNames;
    _this.height = height;
    _this.size = size;
    _this.reverseOrder = reverseOrder;
    return _this;
  }
  /**
   * 方法入参是经过数据分组、数据数字化之后的二维数组
   * @param groupDataArray 分组之后的数据
   */


  Stack.prototype.process = function (groupDataArray) {
    var _a = this,
        yField = _a.yField,
        reverseOrder = _a.reverseOrder; // 如果有指定 y 字段，那么按照 y 字段来 stack
    // 否则，按照高度均分


    var d = yField ? this.processStack(groupDataArray) : this.processOneDimStack(groupDataArray);
    return reverseOrder ? this.reverse(d) : d;
  };

  Stack.prototype.reverse = function (groupedDataArray) {
    return groupedDataArray.slice(0).reverse();
  };

  Stack.prototype.processStack = function (groupDataArray) {
    var _a = this,
        xField = _a.xField,
        yField = _a.yField,
        reverseOrder = _a.reverseOrder; // 层叠顺序翻转


    var groupedDataArray = reverseOrder ? this.reverse(groupDataArray) : groupDataArray; // 用来缓存，正数和负数的堆叠问题

    var positive = new Cache();
    var negative = new Cache();
    return groupedDataArray.map(function (dataArray) {
      return dataArray.map(function (data) {
        var _a;

        var x = esm["get"](data, xField, 0);

        var y = esm["get"](data, yField);

        var xKey = x.toString(); // todo 是否应该取 _origin？因为 y 可能取到的值不正确，比如先 symmetric，再 stack！

        y = esm["isArray"](y) ? y[1] : y;

        if (!esm["isNil"](y)) {
          var cache = y >= 0 ? positive : negative;

          if (!cache.has(xKey)) {
            cache.set(xKey, 0);
          }

          var xValue = cache.get(xKey);
          var newXValue = y + xValue; // 存起来

          cache.set(xKey, newXValue);
          return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, data), (_a = {}, _a[yField] = [xValue, newXValue], _a));
        } // 没有修改，则直接返回


        return data;
      });
    });
  };

  Stack.prototype.processOneDimStack = function (groupDataArray) {
    var _this = this;

    var _a = this,
        xField = _a.xField,
        height = _a.height,
        reverseOrder = _a.reverseOrder;

    var yField = 'y'; // 如果层叠的顺序翻转

    var groupedDataArray = reverseOrder ? this.reverse(groupDataArray) : groupDataArray; // 缓存累加数据

    var cache = new Cache();
    return groupedDataArray.map(function (dataArray) {
      return dataArray.map(function (data) {
        var _a;

        var size = _this.size;
        var xValue = data[xField]; // todo 没有看到这个 stack 计算原理

        var stackHeight = size * 2 / height;

        if (!cache.has(xValue)) {
          cache.set(xValue, stackHeight / 2); // 初始值大小
        }

        var stackValue = cache.get(xValue); // 增加一层 stackHeight

        cache.set(xValue, stackValue + stackHeight);
        return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, data), (_a = {}, _a[yField] = stackValue, _a));
      });
    });
  };

  return Stack;
}(adjusts_adjust);

/* harmony default export */ var stack = (stack_Stack);
// CONCATENATED MODULE: ../node_modules/@antv/adjust/esm/adjusts/symmetric.js









var symmetric_Symmetric =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Symmetric, _super);

  function Symmetric() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Symmetric.prototype.process = function (groupDataArray) {
    var mergeData = esm["flatten"](groupDataArray);

    var _a = this,
        xField = _a.xField,
        yField = _a.yField; // 每个 x 值对应的 最大值


    var cache = this.getXValuesMaxMap(mergeData); // 所有数据的最大的值

    var max = Math.max.apply(Math, Object.keys(cache).map(function (key) {
      return cache[key];
    }));
    return esm["map"](groupDataArray, function (dataArray) {
      return esm["map"](dataArray, function (data) {
        var _a, _b;

        var yValue = data[yField];
        var xValue = data[xField]; // 数组处理逻辑

        if (esm["isArray"](yValue)) {
          var off_1 = (max - cache[xValue]) / 2;
          return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, data), (_a = {}, _a[yField] = esm["map"](yValue, function (y) {
            return off_1 + y;
          }), _a));
        } // 非数组处理逻辑


        var offset = (max - yValue) / 2;
        return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, data), (_b = {}, _b[yField] = [offset, yValue + offset], _b));
      });
    });
  }; // 获取每个 x 对应的最大的值


  Symmetric.prototype.getXValuesMaxMap = function (mergeData) {
    var _this = this;

    var _a = this,
        xField = _a.xField,
        yField = _a.yField; // 根据 xField 的值进行分组


    var groupDataArray = esm["groupBy"](mergeData, function (data) {
      return data[xField];
    }); // 获取每个 xField 值中的最大值


    return esm["mapValues"](groupDataArray, function (dataArray) {
      return _this.getDimMaxValue(dataArray, yField);
    });
  };

  Symmetric.prototype.getDimMaxValue = function (mergeData, dim) {
    // 所有的 value 值
    var dimValues = esm["map"](mergeData, function (data) {
      return esm["get"](data, dim, []);
    }); // 将数组打平（dim value 有可能是数组，比如 stack 之后的）


    var flattenValues = esm["flatten"](dimValues); // 求出数组的最大值


    return Math.max.apply(Math, flattenValues);
  };

  return Symmetric;
}(adjusts_adjust);

/* harmony default export */ var symmetric = (symmetric_Symmetric);
// CONCATENATED MODULE: ../node_modules/@antv/adjust/esm/index.js





 // 注册内置的 adjust

registerAdjust('Dodge', dodge);
registerAdjust('Jitter', jitter);
registerAdjust('Stack', stack);
registerAdjust('Symmetric', symmetric); // 最终暴露给外部的方法


// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/animate/animation/index.js
var ANIMATIONS_MAP = {};
/**
 * 根据名称获取对应的动画执行函数
 * @param type 动画函数名称
 */

function getAnimation(type) {
  return ANIMATIONS_MAP[type.toLowerCase()];
}
/**
 * 注册动画执行函数
 * @param type 动画执行函数名称
 * @param animation 动画执行函数
 */

function registerAnimation(type, animation) {
  ANIMATIONS_MAP[type.toLowerCase()] = animation;
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/animate/index.js



 // 默认的动画参数配置

var DEFAULT_ANIMATE_CFG = {
  appear: {
    duration: 450,
    easing: 'easeQuadOut'
  },
  update: {
    duration: 400,
    easing: 'easeQuadInOut'
  },
  enter: {
    duration: 400,
    easing: 'easeQuadInOut'
  },
  leave: {
    duration: 350,
    easing: 'easeQuadIn'
  }
}; // 各个 Geometry 默认的动画执行函数

var GEOMETRY_ANIMATE_CFG = {
  interval: function interval(coordinate) {
    return {
      enter: {
        animation: coordinate.isRect ? coordinate.isTransposed ? 'scale-in-x' : 'scale-in-y' : 'fade-in'
      },
      update: {
        animation: coordinate.isPolar && coordinate.isTransposed ? 'sector-path-update' : null
      },
      leave: {
        animation: 'fade-out'
      }
    };
  },
  line: {
    enter: {
      animation: 'fade-in'
    },
    leave: {
      animation: 'fade-out'
    }
  },
  path: {
    enter: {
      animation: 'fade-in'
    },
    leave: {
      animation: 'fade-out'
    }
  },
  point: {
    appear: {
      animation: 'zoom-in'
    },
    enter: {
      animation: 'zoom-in'
    },
    leave: {
      animation: 'zoom-out'
    }
  },
  area: {
    enter: {
      animation: 'fade-in'
    },
    leave: {
      animation: 'fade-out'
    }
  },
  polygon: {
    enter: {
      animation: 'fade-in'
    },
    leave: {
      animation: 'fade-out'
    }
  },
  schema: {
    enter: {
      animation: 'fade-in'
    },
    leave: {
      animation: 'fade-out'
    }
  },
  edge: {
    enter: {
      animation: 'fade-in'
    },
    leave: {
      animation: 'fade-out'
    }
  },
  label: {
    appear: {
      animation: 'fade-in',
      delay: 450
    },
    enter: {
      animation: 'fade-in'
    },
    update: {
      animation: 'position-update'
    },
    leave: {
      animation: 'fade-out'
    }
  }
}; // 各个 Geometry 默认的群组出场动画

var GEOMETRY_GROUP_APPEAR_ANIMATION = {
  line: function line() {
    return {
      animation: 'wave-in'
    };
  },
  area: function area() {
    return {
      animation: 'wave-in'
    };
  },
  path: function path() {
    return {
      animation: 'fade-in'
    };
  },
  interval: function interval(coordinate) {
    var animation;

    if (coordinate.isRect) {
      animation = coordinate.isTransposed ? 'grow-in-x' : 'grow-in-y';
    } else {
      animation = 'grow-in-xy';

      if (coordinate.isPolar && coordinate.isTransposed) {
        // pie chart
        animation = 'wave-in';
      }
    }

    return {
      animation: animation
    };
  },
  schema: function schema(coordinate) {
    var animation;

    if (coordinate.isRect) {
      animation = coordinate.isTransposed ? 'grow-in-x' : 'grow-in-y';
    } else {
      animation = 'grow-in-xy';
    }

    return {
      animation: animation
    };
  },
  polygon: function polygon() {
    return {
      animation: 'fade-in',
      duration: 500
    };
  },
  edge: function edge() {
    return {
      animation: 'fade-in'
    };
  }
}; // 解析用户的动画配置

function parseAnimateConfig(animateCfg, data) {
  return {
    delay: Object(esm["isFunction"])(animateCfg.delay) ? animateCfg.delay(data) : animateCfg.delay,
    easing: Object(esm["isFunction"])(animateCfg.easing) ? animateCfg.easing(data) : animateCfg.easing,
    duration: Object(esm["isFunction"])(animateCfg.duration) ? animateCfg.duration(data) : animateCfg.duration,
    callback: animateCfg.callback
  };
}
/**
 * @ignore
 * 获取 elementName 对应的动画配置，当声明了 `animateType`，则返回 `animateType` 对应的动画配置
 * @param elementName 元素名称
 * @param coordinate 做表弟类型
 * @param animateType 可选，动画类型
 */


function getDefaultAnimateCfg(elementName, coordinate, animateType) {
  var animateCfg = GEOMETRY_ANIMATE_CFG[elementName];

  if (animateCfg) {
    if (Object(esm["isFunction"])(animateCfg)) {
      animateCfg = animateCfg(coordinate);
    }

    animateCfg = Object(esm["deepMix"])({}, DEFAULT_ANIMATE_CFG, animateCfg);

    if (animateType) {
      return animateCfg[animateType];
    }
  }

  return animateCfg;
}
/**
 * @ignore
 * 工具函数
 * 根据用户传入的配置为 shape 执行动画
 * @param shape 执行动画的图形元素
 * @param animateCfg 动画配置
 * @param cfg 额外的信息
 */

function doAnimate(shape, animateCfg, cfg) {
  var data = Object(esm["get"])(shape.get('origin'), 'data', FIELD_ORIGIN);
  var animation = animateCfg.animation; // 获取动画执行函数

  var parsedAnimateCfg = parseAnimateConfig(animateCfg, data);

  if (animation) {
    // 用户声明了动画执行函数
    var animateFunction = getAnimation(animation);

    if (animateFunction) {
      animateFunction(shape, parsedAnimateCfg, cfg);
    }
  } else {
    // 没有声明，则根据 toAttrs 做差值动画
    shape.animate(cfg.toAttrs, parsedAnimateCfg);
  }
}
/**
 * @ignore
 * 执行 Geometry 群组入场动画
 * @param container 执行群组动画的图形元素
 * @param animateCfg 动画配置
 * @param geometryType geometry 类型
 * @param coordinate 坐标系对象
 * @param minYPoint y 轴最小值对应的画布坐标点
 */

function doGroupAppearAnimate(container, animateCfg, geometryType, coordinate, minYPoint) {
  if (GEOMETRY_GROUP_APPEAR_ANIMATION[geometryType]) {
    var defaultCfg = GEOMETRY_GROUP_APPEAR_ANIMATION[geometryType](coordinate);
    var animation = getAnimation(Object(esm["get"])(defaultCfg, 'animation', ''));

    if (animation) {
      var cfg = _assign(_assign(_assign({}, DEFAULT_ANIMATE_CFG.appear), defaultCfg), animateCfg);

      container.stopAnimate(); // 先结束当前 container 动画

      animation(container, cfg, {
        coordinate: coordinate,
        minYPoint: minYPoint,
        toAttrs: null
      });
    }
  }
}
// EXTERNAL MODULE: ../node_modules/@antv/component/lib/util/event.js
var util_event = __webpack_require__("X7TY");

// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/element/index.js











/**
 * Element 图形元素。
 * 定义：在 G2 中，我们会将数据通过图形语法映射成不同的图形，比如点图，数据集中的每条数据会对应一个点，柱状图每条数据对应一个柱子，线图则是一组数据对应一条折线，Element 即一条/一组数据对应的图形元素，它代表一条数据或者一个数据集，在图形层面，它可以是单个 Shape 也可以是多个 Shape，我们称之为图形元素。
 */

var element_Element =
/** @class */
function (_super) {
  __extends(Element, _super);

  function Element(cfg) {
    var _this = _super.call(this, cfg) || this; // 存储当前开启的状态


    _this.states = [];
    var shapeFactory = cfg.shapeFactory,
        container = cfg.container,
        offscreenGroup = cfg.offscreenGroup,
        _a = cfg.visible,
        visible = _a === void 0 ? true : _a;
    _this.shapeFactory = shapeFactory;
    _this.container = container;
    _this.offscreenGroup = offscreenGroup;
    _this.visible = visible;
    return _this;
  }
  /**
   * 绘制图形。
   * @param model 绘制数据。
   * @param isUpdate 可选，是否是更新发生后的绘制。
   */


  Element.prototype.draw = function (model, isUpdate) {
    if (isUpdate === void 0) {
      isUpdate = false;
    }

    this.model = model;
    this.data = model.data; // 存储原始数据

    this.shapeType = this.getShapeType(model); // 绘制图形

    this.drawShape(model, isUpdate);

    if (this.visible === false) {
      // 用户在初始化的时候声明 visible: false
      this.changeVisible(false);
    }
  };
  /**
   * 更新图形。
   * @param model 更新的绘制数据。
   */


  Element.prototype.update = function (model) {
    var _a = this,
        shapeFactory = _a.shapeFactory,
        shape = _a.shape;

    if (!shape) {
      return;
    } // 更新数据


    this.model = model;
    this.data = model.data;
    this.shapeType = this.getShapeType(model); // step 1: 更新 shape 携带的信息

    this.setShapeInfo(shape, model); // step 2: 使用虚拟 Group 重新绘制 shape，然后更新当前 shape

    var offscreenGroup = this.getOffscreenGroup();
    var newShape = shapeFactory.drawShape(this.shapeType, model, offscreenGroup); // @ts-ignore

    newShape.cfg.data = this.data; // @ts-ignore

    newShape.cfg.origin = model; // step 3: 同步 shape 样式

    this.syncShapeStyle(shape, newShape, '', this.getAnimateCfg('update'));
  };
  /**
   * 销毁 element 实例。
   */


  Element.prototype.destroy = function () {
    var _a = this,
        shapeFactory = _a.shapeFactory,
        shape = _a.shape;

    if (shape) {
      var animateCfg = this.getAnimateCfg('leave');

      if (animateCfg) {
        // 指定了动画配置则执行销毁动画
        doAnimate(shape, animateCfg, {
          coordinate: shapeFactory.coordinate,
          toAttrs: _assign({}, shape.attr())
        });
      } else {
        // 否则直接销毁
        shape.remove(true);
      }
    } // reset


    this.states = [];
    this.shapeFactory = undefined;
    this.container = undefined;
    this.shape = undefined;
    this.animate = undefined;
    this.geometry = undefined;
    this.labelShape = undefined;
    this.model = undefined;
    this.data = undefined;
    this.offscreenGroup = undefined;
    this.statesStyle = undefined;

    _super.prototype.destroy.call(this);
  };
  /**
   * 显示或者隐藏 element。
   * @param visible 是否可见。
   */


  Element.prototype.changeVisible = function (visible) {
    _super.prototype.changeVisible.call(this, visible);

    if (visible) {
      if (this.shape) {
        this.shape.show();
      }

      if (this.labelShape) {
        this.labelShape.forEach(function (label) {
          label.show();
        });
      }
    } else {
      if (this.shape) {
        this.shape.hide();
      }

      if (this.labelShape) {
        this.labelShape.forEach(function (label) {
          label.hide();
        });
      }
    }
  };
  /**
   * 设置 Element 的状态。
   *
   * 目前 Element 开放三种状态：
   * 1. active
   * 2. selected
   * 3. inactive
   *
   * 这三种状态相互独立，可以进行叠加。
   *
   * 这三种状态的样式可在 [[Theme]] 主题中或者通过 `geometry.state()` 接口进行配置。
   *
   * ```ts
   * // 激活 active 状态
   * setState('active', true);
   * ```
   *
   * @param stateName 状态名
   * @param stateStatus 是否开启状态
   */


  Element.prototype.setState = function (stateName, stateStatus) {
    var _this = this;

    var _a = this,
        states = _a.states,
        shapeFactory = _a.shapeFactory,
        model = _a.model,
        shape = _a.shape,
        shapeType = _a.shapeType;

    var index = states.indexOf(stateName);

    if (stateStatus) {
      // 开启状态
      if (index > -1) {
        // 该状态已经开启，则返回
        return;
      }

      states.push(stateName);

      if (stateName === 'active' || stateName === 'selected') {
        shape.toFront();
      }
    } else {
      if (index === -1) {
        // 关闭状态，但是状态未设置过
        return;
      }

      states.splice(index, 1);

      if (stateName === 'active' || stateName === 'selected') {
        shape.toBack();
      }
    } // 使用虚拟 group 重新绘制 shape，然后对这个 shape 应用状态样式后，更新当前 shape。


    var offscreenShape = shapeFactory.drawShape(shapeType, model, this.getOffscreenGroup());

    if (states.length) {
      // 应用当前状态
      states.forEach(function (state) {
        _this.syncShapeStyle(shape, offscreenShape, state, null);
      });
    } else {
      // 如果没有状态，则需要恢复至原始状态
      this.syncShapeStyle(shape, offscreenShape, 'reset', null);
    }

    offscreenShape.remove(true); // 销毁，减少内存占用

    var eventObject = {
      state: stateName,
      stateStatus: stateStatus,
      element: this,
      target: this.container
    };
    this.container.emit('statechange', eventObject); // @ts-ignore

    Object(util_event["propagationDelegate"])(this.shape, 'statechange', eventObject);
  };
  /**
   * 清空状量态，恢复至初始状态。
   */


  Element.prototype.clearStates = function () {
    var _this = this;

    var states = this.states;
    Object(esm["each"])(states, function (state) {
      _this.setState(state, false);
    });
    this.states = [];
  };
  /**
   * 查询当前 Element 上是否已设置 `stateName` 对应的状态。
   * @param stateName 状态名称。
   * @returns true 表示存在，false 表示不存在。
   */


  Element.prototype.hasState = function (stateName) {
    return this.states.includes(stateName);
  };
  /**
   * 获取当前 Element 上所有的状态。
   * @returns 当前 Element 上所有的状态数组。
   */


  Element.prototype.getStates = function () {
    return this.states;
  };
  /**
   * 获取 Element 对应的原始数据。
   * @returns 原始数据。
   */


  Element.prototype.getData = function () {
    return this.data;
  };
  /**
   * 获取 Element 对应的图形绘制数据。
   * @returns 图形绘制数据。
   */


  Element.prototype.getModel = function () {
    return this.model;
  };
  /**
   * 返回 Element 元素整体的 bbox，包含文本及文本连线（有的话）。
   * @returns 整体包围盒。
   */


  Element.prototype.getBBox = function () {
    var _a = this,
        shape = _a.shape,
        labelShape = _a.labelShape;

    var bbox = {
      x: 0,
      y: 0,
      minX: 0,
      minY: 0,
      maxX: 0,
      maxY: 0,
      width: 0,
      height: 0
    };

    if (shape) {
      bbox = shape.getCanvasBBox();
    }

    if (labelShape) {
      labelShape.forEach(function (label) {
        var labelBBox = label.getCanvasBBox();
        bbox.x = Math.min(labelBBox.x, bbox.x);
        bbox.y = Math.min(labelBBox.y, bbox.y);
        bbox.minX = Math.min(labelBBox.minX, bbox.minX);
        bbox.minY = Math.min(labelBBox.minY, bbox.minY);
        bbox.maxX = Math.max(labelBBox.maxX, bbox.maxX);
        bbox.maxY = Math.max(labelBBox.maxY, bbox.maxY);
      });
    }

    bbox.width = bbox.maxX - bbox.minX;
    bbox.height = bbox.maxY - bbox.minY;
    return bbox;
  };

  Element.prototype.getStatesStyle = function () {
    if (!this.statesStyle) {
      var _a = this,
          shapeType = _a.shapeType,
          geometry = _a.geometry,
          shapeFactory = _a.shapeFactory;

      var stateOption = geometry.stateOption;
      var defaultShapeType = shapeFactory.defaultShapeType;
      var stateTheme = shapeFactory.theme[shapeType] || shapeFactory.theme[defaultShapeType];
      this.statesStyle = Object(esm["deepMix"])({}, stateTheme, stateOption);
    }

    return this.statesStyle;
  }; // 从主题中获取对应状态量的样式


  Element.prototype.getStateStyle = function (stateName, shapeKey) {
    var statesStyle = this.getStatesStyle();
    var stateCfg = Object(esm["get"])(statesStyle, [stateName, 'style'], {});
    var shapeStyle = stateCfg[shapeKey] || stateCfg;

    if (Object(esm["isFunction"])(shapeStyle)) {
      return shapeStyle(this);
    }

    return shapeStyle;
  }; // 获取动画配置


  Element.prototype.getAnimateCfg = function (animateType) {
    var animate = this.animate;

    if (animate) {
      return animate[animateType];
    }

    return null;
  }; // 绘制图形


  Element.prototype.drawShape = function (model, isUpdate) {
    if (isUpdate === void 0) {
      isUpdate = false;
    }

    var _a = this,
        shapeFactory = _a.shapeFactory,
        container = _a.container,
        shapeType = _a.shapeType; // 自定义 shape 有可能返回空 shape


    this.shape = shapeFactory.drawShape(shapeType, model, container);

    if (this.shape) {
      this.setShapeInfo(this.shape, model); // 存储绘图数据
      // @ts-ignore

      var name_1 = this.shape.cfg.name; // 附加 element 的 name, name 现在支持数组了，很好用了

      if (!name_1) {
        // 这个地方如果用户添加了 name, 则附加 name ，否则就添加自己的 name
        // @ts-ignore
        this.shape.cfg.name = ['element', this.shapeFactory.geometryType];
      } else if (Object(esm["isString"])(name_1)) {
        // @ts-ignore
        this.shape.cfg.name = ['element', name_1];
      } // 执行入场动画


      var animateType = isUpdate ? 'enter' : 'appear';
      var animateCfg = this.getAnimateCfg(animateType);

      if (animateCfg) {
        doAnimate(this.shape, animateCfg, {
          coordinate: shapeFactory.coordinate,
          toAttrs: _assign({}, this.shape.attr())
        });
      }
    }
  }; // 获取虚拟 Group


  Element.prototype.getOffscreenGroup = function () {
    if (!this.offscreenGroup) {
      var GroupCtor = this.container.getGroupBase(); // 获取分组的构造函数

      this.offscreenGroup = new GroupCtor({});
    }

    return this.offscreenGroup;
  }; // 设置 shape 上需要携带的信息


  Element.prototype.setShapeInfo = function (shape, data) {
    var _this = this; // @ts-ignore


    shape.cfg.origin = data; // @ts-ignore

    shape.cfg.element = this;

    if (shape.isGroup()) {
      var children = shape.get('children');
      children.forEach(function (child) {
        _this.setShapeInfo(child, data);
      });
    }
  }; // 更新当前 shape 的样式


  Element.prototype.syncShapeStyle = function (sourceShape, targetShape, state, animateCfg, index) {
    if (state === void 0) {
      state = '';
    }

    if (index === void 0) {
      index = 0;
    }

    if (sourceShape.isGroup()) {
      var children = sourceShape.get('children');
      var newChildren = targetShape.get('children');

      for (var i = 0; i < children.length; i++) {
        this.syncShapeStyle(children[i], newChildren[i], state, animateCfg, index + i);
      }
    } else {
      if (state && state !== 'reset') {
        var name_2 = sourceShape.get('name');

        if (Object(esm["isArray"])(name_2)) {
          // 会附加 element 的 name
          name_2 = name_2[1];
        }

        var style = this.getStateStyle(state, name_2 || index); // 如果用户没有设置 name，则默认根据索引值

        targetShape.attr(style);
      }

      var newAttrs = getReplaceAttrs(sourceShape, targetShape);

      if (this.animate) {
        if (animateCfg) {
          // 需要进行动画
          doAnimate(sourceShape, animateCfg, {
            coordinate: this.shapeFactory.coordinate,
            toAttrs: newAttrs,
            shapeModel: this.model
          });
        } else if (state) {
          sourceShape.stopAnimate();
          sourceShape.animate(newAttrs, {
            duration: 300
          });
        } else {
          sourceShape.attr(newAttrs);
        }
      } else {
        sourceShape.attr(newAttrs);
      }
    }
  };

  Element.prototype.getShapeType = function (model) {
    var shape = Object(esm["get"])(model, 'shape');
    return Object(esm["isArray"])(shape) ? shape[0] : shape;
  };

  return Element;
}(base);

/* harmony default export */ var geometry_element = (element_Element);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/label/index.js
var GEOMETRY_LABELS_MAP = {};
var GEOMETRY_LABELS_LAYOUT_MAP = {};
/**
 * 获取 `type` 对应的 [[GeometryLabel]] 类
 * @param type
 * @returns
 */

function getGeometryLabel(type) {
  return GEOMETRY_LABELS_MAP[type.toLowerCase()];
}
/**
 * 注册定义的 GeometryLabel 类
 * @param type GeometryLabel 类型名称
 * @param ctor GeometryLabel 类
 */

function registerGeometryLabel(type, ctor) {
  GEOMETRY_LABELS_MAP[type.toLowerCase()] = ctor;
}
/**
 * 获取 `type` 对应的 [[GeometryLabelsLayoutFn]] label 布局函数
 * @param type 布局函数名称
 * @returns
 */

function getGeometryLabelLayout(type) {
  return GEOMETRY_LABELS_LAYOUT_MAP[type.toLowerCase()];
}
/**
 * 注册定义的 label 布局函数
 * @param type label 布局函数名称
 * @param layoutFn label 布局函数
 */

function registerGeometryLabelLayout(type, layoutFn) {
  GEOMETRY_LABELS_LAYOUT_MAP[type.toLowerCase()] = layoutFn;
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/base.js





/** ShapeFactory 基类 */

var ShapeFactoryBase = {
  /** 坐标系对象 */
  coordinate: null,

  /** 默认绘制的 Shape 类型 */
  defaultShapeType: null,

  /** 主题样式 */
  theme: null,

  /**
   * 获取 shape 绘制需要的关键点
   * @param shapeType shape 类型
   * @param shapePoint 每条数据映射后的坐标点以及 size 数值
   * @returns 图形关键点信息
   */
  getShapePoints: function getShapePoints(shapeType, shapePoint) {
    var shape = this.getShape(shapeType);

    if (shape.getPoints) {
      return shape.getPoints(shapePoint);
    }

    return this.getDefaultPoints(shapePoint);
  },

  /**
   * 根据 shape 类型获取具体的 shape 实例
   * @param shapeType string shape 的类型
   * @returns
   */
  getShape: function getShape(shapeType) {
    var shape = this[shapeType] || this[this.defaultShapeType];
    shape.coordinate = this.coordinate;
    return shape;
  },

  /**
   * 获取 shape 的默认关键点
   * @override
   */
  getDefaultPoints: function getDefaultPoints() {
    return [];
  },

  /**
   * 获取 shape 对应的缩略图配置信息。
   * @param shapeType shape 类型
   * @param color 颜色
   * @param isInPolar 是否在极坐标系下
   * @returns 返回缩略图 marker 配置。
   */
  getMarker: function getMarker(shapeType, markerCfg) {
    var shape = this.getShape(shapeType);

    if (!shape.getMarker) {
      var defaultShapeType = this.defaultShapeType;
      shape = this.getShape(defaultShapeType);
    }

    var theme = this.theme;
    var shapeStyle = Object(esm["get"])(theme, [shapeType, 'default'], {});
    var markerStyle = shape.getMarker(markerCfg);
    return Object(esm["deepMix"])({}, shapeStyle, markerStyle);
  },

  /**
   * 绘制 shape
   * @override
   * @param shapeType 绘制的 shape 类型
   * @param cfg 绘制 shape 需要的信息
   * @param element Element 实例
   * @returns
   */
  drawShape: function drawShape(shapeType, cfg, container) {
    var shape = this.getShape(shapeType);
    return shape.draw(cfg, container);
  }
};
/** Shape 基类 */

var base_ShapeBase = {
  /** 坐标系对象 */
  coordinate: null,

  /**
   * 将归一化的 path 转换成坐标系下的 path
   * @param path 归一化的路径
   * @returns
   */
  parsePath: function parsePath(path) {
    var coordinate = this.coordinate;
    var parsedPath = parsePathString(path);

    if (coordinate.isPolar) {
      parsedPath = convertPolarPath(coordinate, parsedPath);
    } else {
      parsedPath = convertNormalPath(coordinate, parsedPath);
    }

    return parsedPath;
  },

  /**
   * 将归一化的坐标转换成画布坐标
   * @param point 归一化的坐标点数据
   * @returns
   */
  parsePoint: function parsePoint(point) {
    var coordinate = this.coordinate;
    return coordinate.convert(point);
  },

  /**
   * 0～1 points 转 画布 points
   * @param points 节点集合
   * @returns
   */
  parsePoints: function parsePoints(points) {
    var coordinate = this.coordinate;
    return points.map(function (point) {
      return coordinate.convert(point);
    });
  },

  /**
   * 绘制 shape
   * @override
   */
  draw: function draw(cfg, container) {}
};
var ShapeFactoryMap = {};
/**
 * 注册 ShapeFactory。
 * @param factoryName  ShapeFactory 名称，对应 Geometry 几何标记名称。
 * @param cfg 注册 ShapeFactory 需要覆写定义的属性。
 * @returns 返回 ShapeFactory 对象。
 */

function registerShapeFactory(factoryName, cfg) {
  var className = Object(esm["upperFirst"])(factoryName);

  var geomObj = _assign(_assign(_assign({}, ShapeFactoryBase), cfg), {
    geometryType: factoryName
  });

  ShapeFactoryMap[className] = geomObj;
  return geomObj;
}
/**
 * 注册 Shape。
 * @param factoryName 对应的 ShapeFactory 名称。
 * @param shapeType 注册的 shape 名称。
 * @param cfg 注册 Shape 需要覆写定义的属性。
 * @returns shape 返回注册的 shape 对象。
 */

function registerShape(factoryName, shapeType, cfg) {
  var className = Object(esm["upperFirst"])(factoryName);
  var factory = ShapeFactoryMap[className];

  var shapeObj = _assign(_assign({}, base_ShapeBase), cfg);

  factory[shapeType] = shapeObj;
  return shapeObj;
}
/**
 * 获取 factoryName 对应的 shapeFactory
 * @param factoryName
 * @returns shape factory
 */

function getShapeFactory(factoryName) {
  var className = Object(esm["upperFirst"])(factoryName);
  return ShapeFactoryMap[className];
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/util/group-data.js

/** @ignore */

function group_data_group(data, fields, appendConditions) {
  if (appendConditions === void 0) {
    appendConditions = {};
  }

  if (!fields) {
    return [data];
  }

  var groups = Object(esm["groupToMap"])(data, fields);
  var array = [];

  if (fields.length === 1 && appendConditions[fields[0]]) {
    var values = appendConditions[fields[0]];

    for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {
      var value = values_1[_i];
      var arr = groups["_" + value];

      if (arr) {
        // 可能存在用户设置 values ，但是数据中没有对应的字段，则这时候 arr 就为 null
        array.push(arr);
      }
    }
  } else {
    for (var k in groups) {
      if (groups.hasOwnProperty(k)) {
        var eachGroup = groups[k];
        array.push(eachGroup);
      }
    }
  }

  return array;
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/util/is-model-change.js

/**
 * @ignore
 * Determines whether model is change
 * @param currentModel
 * @param preModel
 * @returns
 */

function isModelChange(currentModel, preModel) {
  return Object(esm["some"])(['color', 'shape', 'size', 'x', 'y', 'isInCircle', 'data', 'style', 'defaultStyle', 'points', 'mappingData'], function (key) {
    return !Object(esm["isEqual"])(currentModel[key], preModel[key]);
  });
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/util/parse-fields.js


/** @ignore */

function parseFields(field) {
  if (Object(esm["isArray"])(field)) {
    return field;
  }

  return field.split('*');
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/base.js
























 // 根据 elementId 查找对应的 label，因为有可能一个 element 对应多个 labels，所以在给 labels 打标识时做了处理
// 打标规则详见 ./label/base.ts#L263

function filterLabelsById(id, labelsMap) {
  var labels = [];
  Object(esm["each"])(labelsMap, function (label, labelId) {
    var elementId = labelId.split(' ')[0];

    if (elementId === id) {
      labels.push(label);
    }
  });
  return labels;
}
/**
 * Geometry 几何标记基类，主要负责数据到图形属性的映射以及绘制逻辑。
 */


var base_Geometry =
/** @class */
function (_super) {
  __extends(Geometry, _super);
  /**
   * 创建 Geometry 实例。
   * @param cfg
   */


  function Geometry(cfg) {
    var _this = _super.call(this, cfg) || this;
    /** Geometry 几何标记类型。 */


    _this.type = 'base'; // 内部产生的属性

    /** Attribute map  */

    _this.attributes = {};
    /** Element map */

    _this.elements = [];
    /** 使用 key-value 结构存储 Element，key 为每个 Element 实例对应的唯一 ID */

    _this.elementsMap = {};
    /** animate 配置项 */

    _this.animateOption = true;
    /** 图形属性映射配置 */

    _this.attributeOption = {};
    /** 存储上一次渲染时的 element 映射表，用于更新逻辑 */

    _this.lastElementsMap = {};
    /** 是否生成多个点来绘制图形。 */

    _this.generatePoints = false;
    /** 存储发生图形属性映射前的数据 */

    _this.beforeMappingData = null;
    _this.adjusts = {};
    _this.idFields = [];
    _this.hasSorted = false;
    _this.isCoordinateChanged = false;
    var container = cfg.container,
        labelsContainer = cfg.labelsContainer,
        coordinate = cfg.coordinate,
        data = cfg.data,
        _a = cfg.sortable,
        sortable = _a === void 0 ? false : _a,
        _b = cfg.visible,
        visible = _b === void 0 ? true : _b,
        theme = cfg.theme,
        _c = cfg.scales,
        scales = _c === void 0 ? {} : _c,
        _d = cfg.scaleDefs,
        scaleDefs = _d === void 0 ? {} : _d;
    _this.container = container;
    _this.labelsContainer = labelsContainer;
    _this.coordinate = coordinate;
    _this.data = data;
    _this.sortable = sortable;
    _this.visible = visible;
    _this.userTheme = theme;
    _this.scales = scales;
    _this.scaleDefs = scaleDefs;
    return _this;
  }
  /**
   * 配置 position 通道映射规则。
   *
   * @example
   * ```typescript
   * // 数据结构: [{ x: 'A', y: 10, color: 'red' }]
   * geometry.position('x*y');
   * geometry.position([ 'x', 'y' ]);
   * geometry.position({
   *   fields: [ 'x', 'y' ],
   * });
   * ```
   *
   * @param cfg 映射规则
   * @returns
   */


  Geometry.prototype.position = function (cfg) {
    var positionCfg = cfg;

    if (!Object(esm["isPlainObject"])(cfg)) {
      // 字符串字段或者数组字段
      positionCfg = {
        fields: parseFields(cfg)
      };
    }

    var fields = Object(esm["get"])(positionCfg, 'fields');

    if (fields.length === 1) {
      // 默认填充一维 1*xx
      fields.unshift('1');
      Object(esm["set"])(positionCfg, 'fields', fields);
    }

    Object(esm["set"])(this.attributeOption, 'position', positionCfg);
    return this;
  };

  Geometry.prototype.color = function (field, cfg) {
    this.createAttrOption('color', field, cfg);
    return this;
  };

  Geometry.prototype.shape = function (field, cfg) {
    this.createAttrOption('shape', field, cfg);
    return this;
  };

  Geometry.prototype.size = function (field, cfg) {
    this.createAttrOption('size', field, cfg);
    return this;
  };
  /**
   * 设置数据调整方式。G2 目前内置了四种类型：
   * 1. dodge
   * 2. stack
   * 3. symmetric
   * 4. jitter
   *
   *
   * **Tip**
   * + 对于 'dodge' 类型，可以额外进行如下属性的配置:
   * ```typescript
   * geometry.adjust('dodge', {
   *   marginRatio: 0, // 取 0 到 1 范围的值（相对于每个柱子宽度），用于控制一个分组中柱子之间的间距
   *   dodgeBy: 'x', // 该属性只对 'dodge' 类型生效，声明以哪个数据字段为分组依据
   * });
   * ```
   *
   * + 对于 'stack' 类型，可以额外进行如下属性的配置:
   * ```typescript
   * geometry.adjust('stack', {
   *   reverseOrder: false, // 用于控制是否对数据进行反序操作
   * });
   * ```
   *
   * @example
   * ```typescript
   * geometry.adjust('stack');
   *
   * geometry.adjust({
   *   type: 'stack',
   *   reverseOrder: false,
   * });
   *
   * // 组合使用 adjust
   * geometry.adjust([ 'stack', 'dodge' ]);
   *
   * geometry.adjust([
   *   { type: 'stack' },
   *   { type: 'dodge', dodgeBy: 'x' },
   * ]);
   * ```
   *
   * @param adjustCfg 数据调整配置
   * @returns
   */


  Geometry.prototype.adjust = function (adjustCfg) {
    var adjusts = adjustCfg;

    if (Object(esm["isString"])(adjustCfg) || Object(esm["isPlainObject"])(adjustCfg)) {
      adjusts = [adjustCfg];
    }

    Object(esm["each"])(adjusts, function (adjust, index) {
      if (!Object(esm["isObject"])(adjust)) {
        adjusts[index] = {
          type: adjust
        };
      }
    });
    this.adjustOption = adjusts;
    return this;
  };

  Geometry.prototype.style = function (field, styleFunc) {
    if (Object(esm["isString"])(field)) {
      var fields = parseFields(field);
      this.styleOption = {
        fields: fields,
        callback: styleFunc
      };
    } else {
      var _a = field,
          fields = _a.fields,
          callback = _a.callback,
          cfg = _a.cfg;

      if (fields || callback || cfg) {
        this.styleOption = field;
      } else {
        this.styleOption = {
          cfg: field
        };
      }
    }

    return this;
  };

  Geometry.prototype.tooltip = function (field, cfg) {
    if (Object(esm["isString"])(field)) {
      var fields = parseFields(field);
      this.tooltipOption = {
        fields: fields,
        callback: cfg
      };
    } else {
      this.tooltipOption = field;
    }

    return this;
  };
  /**
   * Geometry 动画配置。
   *
   * + `animate(false)` 关闭动画
   * + `animate(true)` 开启动画，默认开启。
   *
   * 我们将动画分为四个场景：
   * 1. appear: 图表第一次加载时的入场动画；
   * 2. enter: 图表绘制完成，发生更新后，产生的新图形的进场动画；
   * 3. update: 图表绘制完成，数据发生变更后，有状态变更的图形的更新动画；
   * 4. leave: 图表绘制完成，数据发生变更后，被销毁图形的销毁动画。
   *
   * @example
   * ```typescript
   * animate({
   *   enter: {
   *     duration: 1000, // enter 动画执行时间
   *   },
   *   leave: false, // 关闭 leave 销毁动画
   * });
   * ```
   *
   * @param cfg 动画配置
   * @returns
   */


  Geometry.prototype.animate = function (cfg) {
    this.animateOption = cfg;
    return this;
  };

  Geometry.prototype.label = function (field, secondParam, thirdParam) {
    if (Object(esm["isString"])(field)) {
      var labelOption = {};
      var fields = parseFields(field);
      labelOption.fields = fields;

      if (Object(esm["isFunction"])(secondParam)) {
        labelOption.callback = secondParam;
      } else if (Object(esm["isPlainObject"])(secondParam)) {
        labelOption.cfg = secondParam;
      }

      if (thirdParam) {
        labelOption.cfg = thirdParam;
      }

      this.labelOption = labelOption;
    } else {
      this.labelOption = field;
    }

    return this;
  };
  /**
   * 设置状态对应的样式。
   *
   * @example
   * ```ts
   * chart.interval().state({
   *   selected: {
   *     animate: { duration: 100, easing: 'easeLinear' },
   *     style: {
   *       lineWidth: 2,
   *       stroke: '#000',
   *     },
   *   },
   * });
   * ```
   *
   * 如果图形 shape 是由多个 shape 组成，即为一个 G.Group 对象，那么针对 group 中的每个 shape，我们需要使用下列方式进行状态样式设置：
   * 如果我们为 group 中的每个 shape 设置了 'name' 属性(shape.set('name', 'xx'))，则以 'name' 作为 key，否则默认以索引值（即 shape 的 添加顺序）为 key。
   *
   * ```ts
   * chart.interval().shape('groupShape').state({
   *   selected: {
   *     style: {
   *       0: { lineWidth: 2 },
   *       1: { fillOpacity: 1 },
   *     }
   *   }
   * });
   * ```
   *
   * @param cfg 状态样式
   */


  Geometry.prototype.state = function (cfg) {
    this.stateOption = cfg;
    return this;
  };
  /**
   * 初始化 Geomtry 实例：
   * 创建 [[Attribute]] and [[Scale]] 实例，进行数据处理，包括分组、数值化以及数据调整。
   */


  Geometry.prototype.init = function (cfg) {
    if (cfg === void 0) {
      cfg = {};
    }

    this.setCfg(cfg);
    this.initAttributes(); // 创建图形属性
    // 数据加工：分组 -> 数字化 -> adjust

    this.processData(this.data); // 调整 scale

    this.adjustScale();
  };
  /**
   * Geometry 更新。
   * @param [cfg] 更新的配置
   */


  Geometry.prototype.update = function (cfg) {
    if (cfg === void 0) {
      cfg = {};
    }

    var data = cfg.data,
        isDataChanged = cfg.isDataChanged,
        isCoordinateChanged = cfg.isCoordinateChanged;

    var _a = this,
        attributeOption = _a.attributeOption,
        lastAttributeOption = _a.lastAttributeOption;

    if (!Object(esm["isEqual"])(attributeOption, lastAttributeOption)) {
      // 映射发生改变，则重新创建图形属性
      this.init(cfg);
    } else if (data && (isDataChanged || !Object(esm["isEqual"])(data, this.data))) {
      // 数据发生变化
      this.setCfg(cfg);
      this.processData(data); // 数据加工：分组 -> 数字化 -> adjust
    } else {
      // 有可能 coordinate 变化
      this.setCfg(cfg);
    } // 调整 scale


    this.adjustScale();
    this.isCoordinateChanged = isCoordinateChanged;
  };
  /**
   * 将原始数据映射至图形空间，同时创建图形对象。
   */


  Geometry.prototype.paint = function (isUpdate) {
    var _this = this;

    if (isUpdate === void 0) {
      isUpdate = false;
    }

    if (this.animateOption) {
      this.animateOption = Object(esm["deepMix"])({}, getDefaultAnimateCfg(this.type, this.coordinate), this.animateOption);
    }

    this.defaultSize = undefined;
    this.elements = [];
    this.elementsMap = {};
    var offscreenGroup = this.getOffscreenGroup();
    offscreenGroup.clear();
    var beforeMappingData = this.beforeMappingData;
    var dataArray = this.beforeMapping(beforeMappingData);
    var mappingArray = [];

    for (var index = 0, length_1 = dataArray.length; index < length_1; index++) {
      var eachGroup = dataArray[index];
      var mappingData = this.mapping(eachGroup);
      mappingArray.push(mappingData);
      this.createElements(mappingData, index, isUpdate);
    }

    if (this.canDoGroupAnimation(isUpdate)) {
      // 如果用户没有配置 appear.animation，就默认走整体动画
      var container = this.container;
      var type = this.type;
      var coordinate = this.coordinate;
      var animateCfg = Object(esm["get"])(this.animateOption, 'appear');
      var yScale = this.getYScale();
      var yMinPoint = coordinate.convert({
        x: 0,
        y: yScale.scale(this.getYMinValue())
      });
      doGroupAppearAnimate(container, animateCfg, type, coordinate, yMinPoint);
    } // 添加 label


    if (this.labelOption) {
      this.renderLabels(Object(esm["flatten"])(mappingArray), isUpdate);
    }

    this.dataArray = mappingArray; // 销毁被删除的 elements

    Object(esm["each"])(this.lastElementsMap, function (deletedElement) {
      // 更新动画配置，用户有可能在更新之前有对动画进行配置操作
      deletedElement.animate = _this.animateOption;
      deletedElement.destroy();
    });
    this.lastElementsMap = this.elementsMap; // 缓存，用于更新

    this.lastAttributeOption = _assign({}, this.attributeOption);

    if (this.visible === false) {
      // 用户在初始化的时候声明 visible: false
      this.changeVisible(false);
    }
  };
  /**
   * 清空当前 Geometry，配置项仍保留，但是内部创建的对象全部清空。
   * @override
   */


  Geometry.prototype.clear = function () {
    var _a = this,
        container = _a.container,
        geometryLabel = _a.geometryLabel,
        offscreenGroup = _a.offscreenGroup;

    if (container) {
      container.clear();
    }

    if (geometryLabel) {
      geometryLabel.clear();
    }

    if (offscreenGroup) {
      offscreenGroup.clear();
    } // 属性恢复至出厂状态


    this.scaleDefs = undefined;
    this.attributes = {};
    this.scales = {};
    this.elementsMap = {};
    this.lastElementsMap = {};
    this.elements = [];
    this.adjusts = {};
    this.dataArray = null;
    this.beforeMappingData = null;
    this.lastAttributeOption = undefined;
    this.defaultSize = undefined;
    this.idFields = [];
    this.groupScales = undefined;
    this.hasSorted = false;
    this.isCoordinateChanged = false;
  };
  /**
   * 销毁 Geometry 实例。
   */


  Geometry.prototype.destroy = function () {
    this.clear();
    var container = this.container;
    container.remove(true);

    if (this.offscreenGroup) {
      this.offscreenGroup.remove(true);
      this.offscreenGroup = null;
    }

    if (this.geometryLabel) {
      this.geometryLabel.destroy();
      this.geometryLabel = null;
    }

    this.theme = undefined;
    this.shapeFactory = undefined;

    _super.prototype.destroy.call(this);
  };
  /**
   * 获取决定分组的图形属性对应的 scale 实例。
   * @returns
   */


  Geometry.prototype.getGroupScales = function () {
    return this.groupScales;
  };
  /**
   * 根据名字获取图形属性实例。
   */


  Geometry.prototype.getAttribute = function (name) {
    return this.attributes[name];
  };
  /** 获取 x 轴对应的 scale 实例。 */


  Geometry.prototype.getXScale = function () {
    return this.getAttribute('position').scales[0];
  };
  /** 获取 y 轴对应的 scale 实例。 */


  Geometry.prototype.getYScale = function () {
    return this.getAttribute('position').scales[1];
  };
  /**
   * 获取决定分组的图形属性实例。
   */


  Geometry.prototype.getGroupAttributes = function () {
    var rst = [];
    Object(esm["each"])(this.attributes, function (attr) {
      if (GROUP_ATTRS.includes(attr.type)) {
        rst.push(attr);
      }
    });
    return rst;
  };
  /** 获取图形属性默认的映射值。 */


  Geometry.prototype.getDefaultValue = function (attrName) {
    var value;
    var attr = this.getAttribute(attrName);

    if (attr && Object(esm["isEmpty"])(attr.scales)) {
      // 获取映射至常量的值
      value = attr.values[0];
    }

    return value;
  };
  /**
   * 获取该数据发生图形映射后对应的 Attribute 图形空间数据。
   * @param attr Attribute 图形属性实例。
   * @param obj 需要进行映射的原始数据。
   * @returns
   */


  Geometry.prototype.getAttributeValues = function (attr, obj) {
    var params = [];
    var scales = attr.scales;

    for (var index = 0, length_2 = scales.length; index < length_2; index++) {
      var scale = scales[index];
      var field = scale.field;

      if (scale.isIdentity) {
        params.push(scale.values);
      } else {
        params.push(obj[field]);
      }
    }

    return attr.mapping.apply(attr, params);
  };

  Geometry.prototype.getAdjust = function (adjustType) {
    return this.adjusts[adjustType];
  };
  /**
   * 获取 shape 对应的 marker 样式。
   * @param shapeName shape 具体名字
   * @param cfg marker 信息
   * @returns
   */


  Geometry.prototype.getShapeMarker = function (shapeName, cfg) {
    var shapeFactory = this.getShapeFactory();
    return shapeFactory.getMarker(shapeName, cfg);
  };
  /**
   * 根据一定的规则查找 Geometry 的 Elements。
   *
   * ```typescript
   * getElementsBy((element) => {
   *   const data = element.getData();
   *
   *   return data.a === 'a';
   * });
   * ```
   *
   * @param condition 定义查找规则的回调函数。
   * @returns
   */


  Geometry.prototype.getElementsBy = function (condition) {
    return this.elements.filter(function (element) {
      return condition(element);
    });
  };
  /**
   * 获取数据对应的唯一 id。
   * @param data Element 对应的绘制数据
   * @returns
   */


  Geometry.prototype.getElementId = function (data) {
    data = Object(esm["isArray"])(data) ? data[0] : data;
    var originData = data[FIELD_ORIGIN]; // 如果用户声明了使用哪些字段作为 id 值

    if (this.idFields.length) {
      var elementId = originData[this.idFields[0]];

      for (var index = 1; index < this.idFields.length; index++) {
        elementId += '-' + originData[this.idFields[index]];
      }

      return elementId;
    }

    var type = this.type;
    var xScale = this.getXScale();
    var yScale = this.getYScale();
    var xField = xScale.field || 'x';
    var yField = yScale.field || 'y';
    var yVal = originData[yField];
    var xVal;

    if (xScale.type === 'identity') {
      xVal = xScale.values[0];
    } else {
      xVal = originData[xField];
    }

    var id;

    if (type === 'interval' || type === 'schema') {
      id = xVal;
    } else if (type === 'line' || type === 'area' || type === 'path') {
      id = type;
    } else {
      id = xVal + "-" + yVal;
    }

    var groupScales = this.groupScales;

    for (var index = 0, length_3 = groupScales.length; index < length_3; index++) {
      var groupScale = groupScales[index];
      var field = groupScale.field;
      id = id + "-" + originData[field];
    } // 用户在进行 dodge 类型的 adjust 调整的时候设置了 dodgeBy 属性


    var dodgeAdjust = this.getAdjust('dodge');

    if (dodgeAdjust) {
      var dodgeBy = dodgeAdjust.dodgeBy;

      if (dodgeBy) {
        id = id + "-" + originData[dodgeBy];
      }
    }

    if (this.getAdjust('jitter')) {
      id = id + "-" + data.x + "-" + data.y;
    }

    return id;
  };
  /**
   * 获取所有需要创建 scale 的字段名称。
   */


  Geometry.prototype.getScaleFields = function () {
    var fields = [];
    var tmpMap = {};

    var _a = this,
        attributeOption = _a.attributeOption,
        labelOption = _a.labelOption,
        tooltipOption = _a.tooltipOption; // 获取图形属性上的 fields


    for (var attributeType in attributeOption) {
      if (attributeOption.hasOwnProperty(attributeType)) {
        var eachOpt = attributeOption[attributeType];

        if (eachOpt.fields) {
          uniq(eachOpt.fields, fields, tmpMap);
        } else if (eachOpt.values) {
          // 考虑 size(10), shape('circle') 等场景
          uniq(eachOpt.values, fields, tmpMap);
        }
      }
    } // 获取 label 上的字段


    if (labelOption && labelOption.fields) {
      uniq(labelOption.fields, fields, tmpMap);
    } // 获取 tooltip 上的字段


    if (Object(esm["isObject"])(tooltipOption) && tooltipOption.fields) {
      uniq(tooltipOption.fields, fields, tmpMap);
    }

    return fields;
  };
  /**
   * 显示或者隐藏 geometry。
   * @param visible
   */


  Geometry.prototype.changeVisible = function (visible) {
    _super.prototype.changeVisible.call(this, visible);

    var elements = this.elements;

    for (var index = 0, length_4 = elements.length; index < length_4; index++) {
      var element = elements[index];
      element.changeVisible(visible);
    }

    if (visible) {
      if (this.container) {
        this.container.show();
      }

      if (this.labelsContainer) {
        this.labelsContainer.show();
      }
    } else {
      if (this.container) {
        this.container.hide();
      }

      if (this.labelsContainer) {
        this.labelsContainer.hide();
      }
    }
  };
  /**
   * 获取当前配置中的所有分组 & 分类的字段。
   * @return fields string[]
   */


  Geometry.prototype.getGroupFields = function () {
    var groupFields = [];
    var tmpMap = {}; // 用于去重过滤

    for (var index = 0, length_5 = GROUP_ATTRS.length; index < length_5; index++) {
      var attributeName = GROUP_ATTRS[index];
      var cfg = this.attributeOption[attributeName];

      if (cfg && cfg.fields) {
        uniq(cfg.fields, groupFields, tmpMap);
      }
    }

    return groupFields;
  };
  /**
   * 获得图形的 x y 字段。
   */


  Geometry.prototype.getXYFields = function () {
    var _a = this.attributeOption.position.fields,
        x = _a[0],
        y = _a[1];
    return [x, y];
  };
  /**
   * 获取该 Geometry 下所有生成的 shapes。
   * @returns shapes
   */


  Geometry.prototype.getShapes = function () {
    return this.elements.map(function (element) {
      return element.shape;
    });
  };
  /**
   * 获取虚拟 Group。
   * @returns
   */


  Geometry.prototype.getOffscreenGroup = function () {
    if (!this.offscreenGroup) {
      var GroupCtor = this.container.getGroupBase(); // 获取分组的构造函数

      this.offscreenGroup = new GroupCtor({});
    }

    return this.offscreenGroup;
  }; // 对数据进行排序


  Geometry.prototype.sort = function (mappingArray) {
    if (!this.hasSorted) {
      // 未发生过排序
      var xScale_1 = this.getXScale();
      var xField_1 = xScale_1.field;

      for (var index = 0; index < mappingArray.length; index++) {
        var itemArr = mappingArray[index];
        itemArr.sort(function (obj1, obj2) {
          return xScale_1.translate(obj1[FIELD_ORIGIN][xField_1]) - xScale_1.translate(obj2[FIELD_ORIGIN][xField_1]);
        });
      }
    }

    this.hasSorted = true;
  };
  /**
   * 调整度量范围。主要针对发生层叠以及一些特殊需求的 Geometry，比如 Interval 下的柱状图 Y 轴默认从 0 开始。
   */


  Geometry.prototype.adjustScale = function () {
    var yScale = this.getYScale(); // 如果数据发生过 stack adjust，需要调整下 yScale 的数据范围

    if (yScale && this.getAdjust('stack')) {
      this.updateStackRange(yScale, this.beforeMappingData);
    }
  };
  /**
   * 获取当前 Geometry 对应的 Shape 工厂实例。
   */


  Geometry.prototype.getShapeFactory = function () {
    var shapeType = this.shapeType;

    if (!getShapeFactory(shapeType)) {
      return;
    }

    if (!this.shapeFactory) {
      this.shapeFactory = Object(esm["clone"])(getShapeFactory(shapeType)); // 防止多个 view 共享一个 shapeFactory 实例，导致 coordinate 被篡改
    } // 因为这里缓存了 shapeFactory，但是外部可能会变更 coordinate，导致无法重新设置到 shapeFactory 中


    this.shapeFactory.coordinate = this.coordinate; // theme 原因同上

    this.shapeFactory.theme = this.theme.geometries[shapeType] || {};
    return this.shapeFactory;
  };
  /**
   * 获取每个 Shape 对应的关键点数据。
   * @param obj 经过分组 -> 数字化 -> adjust 调整后的数据记录
   * @returns
   */


  Geometry.prototype.createShapePointsCfg = function (obj) {
    var xScale = this.getXScale();
    var yScale = this.getYScale();
    var x = this.normalizeValues(obj[xScale.field], xScale);
    var y; // 存在没有 y 的情况

    if (yScale) {
      y = this.normalizeValues(obj[yScale.field], yScale);
    } else {
      y = obj.y ? obj.y : 0.1;
    }

    return {
      x: x,
      y: y,
      y0: yScale ? yScale.scale(this.getYMinValue()) : undefined
    };
  };
  /**
   * 创建 Element 实例。
   * @param mappingDatum Element 对应的绘制数据
   * @param [isUpdate] 是否处于更新阶段
   * @returns element 返回创建的 Element 实例
   */


  Geometry.prototype.createElement = function (mappingDatum, isUpdate) {
    if (isUpdate === void 0) {
      isUpdate = false;
    }

    var container = this.container;
    var shapeCfg = this.getDrawCfg(mappingDatum); // 获取绘制图形的配置信息

    var shapeFactory = this.getShapeFactory();
    var element = new geometry_element({
      shapeFactory: shapeFactory,
      container: container,
      offscreenGroup: this.getOffscreenGroup()
    });
    element.animate = this.animateOption;
    element.geometry = this;
    element.draw(shapeCfg, isUpdate); // 绘制

    return element;
  };
  /**
   * 获取每条数据对应的图形绘制数据。
   * @param mappingDatum 映射后的数据
   * @returns draw cfg
   */


  Geometry.prototype.getDrawCfg = function (mappingDatum) {
    var originData = mappingDatum[FIELD_ORIGIN]; // 原始数据

    var cfg = {
      mappingData: mappingDatum,
      data: originData,
      x: mappingDatum.x,
      y: mappingDatum.y,
      color: mappingDatum.color,
      size: mappingDatum.size,
      isInCircle: this.coordinate.isPolar
    };
    var shapeName = mappingDatum.shape;

    if (!shapeName && this.getShapeFactory()) {
      shapeName = this.getShapeFactory().defaultShapeType;
    }

    cfg.shape = shapeName; // 获取默认样式

    var theme = this.theme.geometries[this.shapeType];
    cfg.defaultStyle = Object(esm["get"])(theme, [shapeName, 'default'], {}).style;
    var styleOption = this.styleOption;

    if (styleOption) {
      cfg.style = this.getStyleCfg(styleOption, originData);
    }

    if (this.generatePoints) {
      cfg.points = mappingDatum.points;
      cfg.nextPoints = mappingDatum.nextPoints;
    }

    return cfg;
  };
  /**
   * 创建所有的 Elements。
   * @param mappingData
   * @param [isUpdate]
   * @returns elements
   */


  Geometry.prototype.createElements = function (mappingData, index, isUpdate) {
    if (isUpdate === void 0) {
      isUpdate = false;
    }

    var _a = this,
        lastElementsMap = _a.lastElementsMap,
        elementsMap = _a.elementsMap,
        elements = _a.elements;

    for (var subIndex = 0, length_6 = mappingData.length; subIndex < length_6; subIndex++) {
      var mappingDatum = mappingData[subIndex];
      var id = this.getElementId(mappingDatum);

      if (elementsMap[id]) {
        // 存在重复数据，则根据再根据 index 进行区分
        id = id + "-" + index + "-" + subIndex;
      }

      var result = lastElementsMap[id];

      if (!result) {
        // 创建新的 element
        result = this.createElement(mappingDatum, isUpdate);
      } else {
        // element 已经创建
        var currentShapeCfg = this.getDrawCfg(mappingDatum);
        var preShapeCfg = result.getModel();

        if (this.isCoordinateChanged || isModelChange(currentShapeCfg, preShapeCfg)) {
          result.animate = this.animateOption; // 通过绘制数据的变更来判断是否需要更新，因为用户有可能会修改图形属性映射

          result.update(currentShapeCfg); // 更新对应的 element
        }

        delete lastElementsMap[id];
      }

      elements.push(result);
      elementsMap[id] = result;
    }

    return elements;
  };
  /**
   * 获取渲染的 label 类型。
   */


  Geometry.prototype.getLabelType = function () {
    var _a = this,
        labelOption = _a.labelOption,
        coordinate = _a.coordinate,
        type = _a.type;

    var coordinateType = coordinate.type;
    var labelType = Object(esm["get"])(labelOption, ['cfg', 'type']);

    if (!labelType) {
      // 用户未定义，则进行默认的逻辑
      if (coordinateType === 'polar') {
        // 极坐标下使用通用的极坐标文本
        labelType = 'polar';
      } else if (coordinateType === 'theta') {
        // theta 坐标系下使用饼图文本
        labelType = 'pie';
      } else if (type === 'interval' || type === 'polygon') {
        labelType = 'interval';
      } else {
        labelType = 'base';
      }
    }

    return labelType;
  };
  /**
   * 获取 Y 轴上的最小值。
   */


  Geometry.prototype.getYMinValue = function () {
    var yScale = this.getYScale();
    var min = yScale.min,
        max = yScale.max;
    var value;

    if (min >= 0) {
      value = min;
    } else if (max <= 0) {
      // 当值全位于负区间时，需要保证 ymin 在区域内，不可为 0
      value = max;
    } else {
      value = 0;
    }

    return value;
  }; // 创建图形属性相关的配置项


  Geometry.prototype.createAttrOption = function (attrName, field, cfg) {
    if (Object(esm["isNil"])(field) || Object(esm["isObject"])(field)) {
      if (Object(esm["isObject"])(field) && Object(esm["isEqual"])(Object.keys(field), ['values'])) {
        // shape({ values: [ 'funnel' ] })
        Object(esm["set"])(this.attributeOption, attrName, {
          fields: field.values
        });
      } else {
        Object(esm["set"])(this.attributeOption, attrName, field);
      }
    } else {
      var attrCfg = {};

      if (Object(esm["isNumber"])(field)) {
        // size(3)
        attrCfg.values = [field];
      } else {
        attrCfg.fields = parseFields(field);
      }

      if (cfg) {
        if (Object(esm["isFunction"])(cfg)) {
          attrCfg.callback = cfg;
        } else {
          attrCfg.values = cfg;
        }
      }

      Object(esm["set"])(this.attributeOption, attrName, attrCfg);
    }
  };

  Geometry.prototype.initAttributes = function () {
    var _this = this;

    var _a = this,
        attributes = _a.attributes,
        attributeOption = _a.attributeOption,
        theme = _a.theme,
        shapeType = _a.shapeType;

    this.groupScales = [];
    var tmpMap = {};

    var _loop_1 = function _loop_1(attrType) {
      if (attributeOption.hasOwnProperty(attrType)) {
        var option = attributeOption[attrType];

        if (!option) {
          return {
            value: void 0
          };
        }

        var attrCfg = _assign({}, option);

        var callback = attrCfg.callback,
            values = attrCfg.values,
            _a = attrCfg.fields,
            fields = _a === void 0 ? [] : _a; // 获取每一个字段对应的 scale

        var scales = fields.map(function (field) {
          var scale = _this.scales[field];

          if (scale.isCategory && !tmpMap[field] && GROUP_ATTRS.includes(attrType)) {
            _this.groupScales.push(scale);

            tmpMap[field] = true;
          }

          return scale;
        });
        attrCfg.scales = scales;

        if (attrType !== 'position' && scales.length === 1 && scales[0].type === 'identity') {
          // 用户在图形通道上声明了常量字段 color('red'), size(5)
          attrCfg.values = scales[0].values;
        } else if (!callback && !values) {
          // 用户没有指定任何规则，则使用默认的映射规则
          if (attrType === 'size') {
            attrCfg.values = theme.sizes;
          } else if (attrType === 'shape') {
            attrCfg.values = theme.shapes[shapeType] || [];
          } else if (attrType === 'color') {
            if (scales.length) {
              // 根据数值个数使用对应的色板
              attrCfg.values = scales[0].values.length <= 10 ? theme.colors10 : theme.colors20;
            } else {
              attrCfg.values = theme.colors10;
            }
          }
        }

        var AttributeCtor = getAttribute(attrType);
        attributes[attrType] = new AttributeCtor(attrCfg);
      }
    }; // 遍历每一个 attrOption，各自创建 Attribute 实例


    for (var attrType in attributeOption) {
      var state_1 = _loop_1(attrType);

      if (typeof state_1 === "object") return state_1.value;
    }
  }; // 处理数据：分组 -> 数字化 -> adjust 调整


  Geometry.prototype.processData = function (data) {
    this.hasSorted = false;
    var scales = this.getAttribute('position').scales;
    var categoryScales = scales.filter(function (scale) {
      return scale.isCategory;
    });
    var groupedArray = this.groupData(data); // 数据分组

    var beforeAdjust = [];

    for (var i = 0, len = groupedArray.length; i < len; i++) {
      var subData = groupedArray[i];
      var arr = [];

      for (var j = 0, subLen = subData.length; j < subLen; j++) {
        var originData = subData[j];
        var item = {}; // tslint:disable-next-line: forin

        for (var k in originData) {
          item[k] = originData[k];
        }

        item[FIELD_ORIGIN] = originData; // 将分类数据翻译成数据, 仅对位置相关的度量进行数字化处理

        for (var _i = 0, categoryScales_1 = categoryScales; _i < categoryScales_1.length; _i++) {
          var scale = categoryScales_1[_i];
          var field = scale.field;
          item[field] = scale.translate(item[field]);
        }

        arr.push(item);
      }

      beforeAdjust.push(arr);
    }

    var dataArray = this.adjustData(beforeAdjust); // 进行 adjust 数据调整

    this.beforeMappingData = dataArray;
    return dataArray;
  }; // 调整数据


  Geometry.prototype.adjustData = function (dataArray) {
    var adjustOption = this.adjustOption;
    var result = dataArray;

    if (adjustOption) {
      var xScale = this.getXScale();
      var yScale = this.getYScale();
      var xField = xScale.field;
      var yField = yScale ? yScale.field : null;

      for (var i = 0, len = adjustOption.length; i < len; i++) {
        var adjust = adjustOption[i];

        var adjustCfg = _assign({
          xField: xField,
          yField: yField
        }, adjust);

        var type = adjust.type;

        if (type === 'dodge') {
          var adjustNames = [];

          if (xScale.isCategory || xScale.type === 'identity') {
            adjustNames.push('x');
          } else if (!yScale) {
            adjustNames.push('y');
          } else {
            throw new Error('dodge is not support linear attribute, please use category attribute!');
          }

          adjustCfg.adjustNames = adjustNames; // 每个分组内每条柱子的宽度占比，用户不可指定，用户需要通过 columnWidthRatio 指定

          adjustCfg.dodgeRatio = this.theme.columnWidthRatio;
        } else if (type === 'stack') {
          var coordinate = this.coordinate;

          if (!yScale) {
            // 一维的情况下获取高度和默认size
            adjustCfg.height = coordinate.getHeight();
            var size = this.getDefaultValue('size') || 3;
            adjustCfg.size = size;
          } // 不进行 transpose 时，用户又没有设置这个参数时，默认从上向下


          if (!coordinate.isTransposed && Object(esm["isNil"])(adjustCfg.reverseOrder)) {
            adjustCfg.reverseOrder = true;
          }
        }

        var adjustCtor = getAdjust(type);
        var adjustInstance = new adjustCtor(adjustCfg);
        result = adjustInstance.process(result);
        this.adjusts[type] = adjustInstance;
      }
    }

    return result;
  }; // 对数据进行分组


  Geometry.prototype.groupData = function (data) {
    var groupScales = this.getGroupScales();
    var scaleDefs = this.scaleDefs;
    var appendConditions = {};
    var groupFields = [];

    for (var index = 0; index < groupScales.length; index++) {
      var scale = groupScales[index];
      var field = scale.field;
      groupFields.push(field);

      if (Object(esm["get"])(scaleDefs, [field, 'values'])) {
        // 用户通过 view.scale() 接口指定了 values 属性
        appendConditions[field] = scaleDefs[field].values;
      }
    }

    return group_data_group(data, groupFields, appendConditions);
  }; // 更新发生层叠后的数据对应的度量范围


  Geometry.prototype.updateStackRange = function (scale, dataArray) {
    var mergeArray = Object(esm["flatten"])(dataArray);
    var field = scale.field;
    var min = scale.min;
    var max = scale.max;

    for (var index = 0; index < mergeArray.length; index++) {
      var obj = mergeArray[index];
      var tmpMin = Math.min.apply(null, obj[field]);
      var tmpMax = Math.max.apply(null, obj[field]);

      if (tmpMin < min) {
        min = tmpMin;
      }

      if (tmpMax > max) {
        max = tmpMax;
      }
    }

    var scaleDefs = this.scaleDefs;
    var cfg = {};

    if (min < scale.min && !Object(esm["get"])(scaleDefs, [field, 'min'])) {
      // 用户如果在列定义中定义了 min，则以用户定义的为准
      cfg.min = min;
    }

    if (max > scale.max && !Object(esm["get"])(scaleDefs, [field, 'max'])) {
      // 用户如果在列定义中定义了 max
      cfg.max = max;
    }

    scale.change(cfg);
  }; // 将数据映射至图形空间前的操作：排序以及关键点的生成


  Geometry.prototype.beforeMapping = function (beforeMappingData) {
    // 当初加 clone 是因为 points 的引用关系，导致更新失败，可是现在貌似复现不出来了，所以暂时不进行 clone
    // const source = clone(beforeMappingData);
    var source = beforeMappingData;

    if (this.sortable) {
      this.sort(source);
    }

    if (this.generatePoints) {
      // 需要生成关键点
      for (var index = 0, length_7 = source.length; index < length_7; index++) {
        var currentData = source[index];
        this.generateShapePoints(currentData);
        var nextData = source[index + 1];

        if (nextData) {
          this.generateShapePoints(nextData);
          currentData[0].nextPoints = nextData[0].points;
        }
      }
    }

    return source;
  }; // 生成 shape 的关键点


  Geometry.prototype.generateShapePoints = function (data) {
    var shapeFactory = this.getShapeFactory();
    var shapeAttr = this.getAttribute('shape');

    for (var index = 0; index < data.length; index++) {
      var obj = data[index];
      var cfg = this.createShapePointsCfg(obj);
      var shape = shapeAttr ? this.getAttributeValues(shapeAttr, obj) : null;
      var points = shapeFactory.getShapePoints(shape, cfg);
      obj.points = points;
    }
  }; // 将数据归一化


  Geometry.prototype.normalizeValues = function (values, scale) {
    var rst = [];

    if (Object(esm["isArray"])(values)) {
      for (var index = 0; index < values.length; index++) {
        var value = values[index];
        rst.push(scale.scale(value));
      }
    } else {
      rst = scale.scale(values);
    }

    return rst;
  }; // 将数据映射至图形空间


  Geometry.prototype.mapping = function (data) {
    var attributes = this.attributes;
    var mappingData = [];

    for (var index = 0; index < data.length; index++) {
      var record = data[index];
      var newRecord = {
        _origin: record[FIELD_ORIGIN],
        points: record.points,
        nextPoints: record.nextPoints
      };

      for (var k in attributes) {
        if (attributes.hasOwnProperty(k)) {
          var attr = attributes[k];
          var names = attr.names;
          var values = this.getAttributeValues(attr, record);

          if (names.length > 1) {
            // position 之类的生成多个字段的属性
            for (var j = 0; j < values.length; j += 1) {
              var val = values[j];
              var name_1 = names[j];
              newRecord[name_1] = Object(esm["isArray"])(val) && val.length === 1 ? val[0] : val; // 只有一个值时返回第一个属性值
            }
          } else {
            // values.length === 1 的判断是以下情况，获取用户设置的图形属性值
            // shape('a', ['dot', 'dash']), color('a', ['red', 'yellow'])
            newRecord[names[0]] = values.length === 1 ? values[0] : values;
          }
        }
      }

      this.convertPoint(newRecord); // 将 x、y 转换成画布坐标

      mappingData.push(newRecord);
    }

    return mappingData;
  }; // 将归一化的坐标值转换成画布坐标


  Geometry.prototype.convertPoint = function (mappingRecord) {
    var x = mappingRecord.x,
        y = mappingRecord.y;
    var rstX;
    var rstY;
    var obj;
    var coordinate = this.coordinate;

    if (Object(esm["isArray"])(x) && Object(esm["isArray"])(y)) {
      rstX = [];
      rstY = [];

      for (var i = 0, j = 0, xLen = x.length, yLen = y.length; i < xLen && j < yLen; i += 1, j += 1) {
        obj = coordinate.convert({
          x: x[i],
          y: y[j]
        });
        rstX.push(obj.x);
        rstY.push(obj.y);
      }
    } else if (Object(esm["isArray"])(y)) {
      rstY = [];

      for (var index = 0; index < y.length; index++) {
        var yVal = y[index];
        obj = coordinate.convert({
          x: x,
          y: yVal
        });

        if (rstX && rstX !== obj.x) {
          if (!Object(esm["isArray"])(rstX)) {
            rstX = [rstX];
          }

          rstX.push(obj.x);
        } else {
          rstX = obj.x;
        }

        rstY.push(obj.y);
      }
    } else if (Object(esm["isArray"])(x)) {
      rstX = [];

      for (var index = 0; index < x.length; index++) {
        var xVal = x[index];
        obj = coordinate.convert({
          x: xVal,
          y: y
        });

        if (rstY && rstY !== obj.y) {
          if (!Object(esm["isArray"])(rstY)) {
            rstY = [rstY];
          }

          rstY.push(obj.y);
        } else {
          rstY = obj.y;
        }

        rstX.push(obj.x);
      }
    } else {
      var point = coordinate.convert({
        x: x,
        y: y
      });
      rstX = point.x;
      rstY = point.y;
    }

    mappingRecord.x = rstX;
    mappingRecord.y = rstY;
  }; // 获取 style 配置


  Geometry.prototype.getStyleCfg = function (styleOption, originData) {
    var _a = styleOption.fields,
        fields = _a === void 0 ? [] : _a,
        callback = styleOption.callback,
        cfg = styleOption.cfg;

    if (cfg) {
      // 用户直接配置样式属性
      return cfg;
    }

    var params = fields.map(function (field) {
      return originData[field];
    });
    return callback.apply(void 0, params);
  };

  Geometry.prototype.setCfg = function (cfg) {
    var _this = this;

    var coordinate = cfg.coordinate,
        data = cfg.data,
        theme = cfg.theme,
        scaleDefs = cfg.scaleDefs;

    if (coordinate) {
      this.coordinate = coordinate;
    }

    if (data) {
      this.data = data;
    }

    if (scaleDefs) {
      this.scaleDefs = scaleDefs;
      this.idFields = [];
      Object(esm["each"])(scaleDefs, function (scaleDef, field) {
        if (scaleDef && scaleDef.key) {
          _this.idFields.push(field);
        }
      });
    }

    if (theme) {
      this.theme = this.userTheme ? Object(esm["deepMix"])({}, theme, this.userTheme) : theme; // 支持 geometry 层级的主题设置
    }
  };

  Geometry.prototype.renderLabels = function (mappingArray, isUpdate) {
    if (isUpdate === void 0) {
      isUpdate = false;
    }

    var geometryLabel = this.geometryLabel;

    if (!geometryLabel) {
      // 初次创建
      var labelType = this.getLabelType();
      var GeometryLabelsCtor = getGeometryLabel(labelType);
      geometryLabel = new GeometryLabelsCtor(this);
      this.geometryLabel = geometryLabel;
    }

    geometryLabel.render(mappingArray, isUpdate); // 将 label 同 element 进行关联

    var labelsMap = geometryLabel.labelsRenderer.shapesMap;
    Object(esm["each"])(this.elementsMap, function (element, id) {
      var labels = filterLabelsById(id, labelsMap); // element 实例同 label 进行绑定

      if (labels.length) {
        element.labelShape = labels;

        for (var i = 0; i < labels.length; i++) {
          var label = labels[i];
          var labelChildren = label.getChildren();

          for (var j = 0; j < labelChildren.length; j++) {
            var child = labelChildren[j];
            child.cfg.name = ['element', 'label'];
            child.cfg.element = element;
          }
        }
      }
    });
  };
  /**
   * 是否需要进行群组入场动画
   * 规则：
   * 1. 如果发生更新，则不进行
   * 2. 如果用户关闭 geometry 动画，则不进行
   * 3. 如果用户关闭了 appear 动画，则不进行
   * 4. 如果用户配置了 appear.animation，则不进行
   */


  Geometry.prototype.canDoGroupAnimation = function (isUpdate) {
    return !isUpdate && this.animateOption && (Object(esm["get"])(this.animateOption, 'appear') === undefined || Object(esm["get"])(this.animateOption, 'appear') && Object(esm["get"])(this.animateOption, ['appear', 'animation']) === undefined);
  };

  return Geometry;
}(base);

/* harmony default export */ var geometry_base = (base_Geometry);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/util/transform.js

var transform = matrix_util_esm["a" /* ext */].transform;

/**
 * 对元素进行平移操作。
 * @param element 进行变换的元素
 * @param x x 方向位移
 * @param y y 方向位移
 */

function transform_translate(element, x, y) {
  var matrix = transform(element.getMatrix(), [['t', x, y]]);
  element.setMatrix(matrix);
}
/**
 * 对元素进行旋转操作。
 * @param element 进行变换的元素
 * @param rotateRadian 旋转弧度
 */

function transform_rotate(element, rotateRadian) {
  var _a = element.attr(),
      x = _a.x,
      y = _a.y;

  var matrix = transform(element.getMatrix(), [['t', -x, -y], ['r', rotateRadian], ['t', x, y]]);
  element.setMatrix(matrix);
}
/**
 * 获取元矩阵。
 * @returns identity matrix
 */

function getIdentityMatrix() {
  return [1, 0, 0, 0, 1, 0, 0, 0, 1];
}
/**
 * 围绕图形中心点进行缩放
 * @param element 进行缩放的图形元素
 * @param ratio 缩放比例
 */

function zoom(element, ratio) {
  var bbox = element.getBBox();
  var x = (bbox.minX + bbox.maxX) / 2;
  var y = (bbox.minY + bbox.maxY) / 2;
  element.applyToMatrix([x, y, 1]);
  var matrix = transform(element.getMatrix(), [['t', -x, -y], ['s', ratio, ratio], ['t', x, y]]);
  element.setMatrix(matrix);
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/component/labels.js








/**
 * Geometry labels 渲染组件
 */

var labels_Labels =
/** @class */
function () {
  function Labels(cfg) {
    /** 存储当前 shape 的映射表，键值为 shape id */
    this.shapesMap = {};
    this.lastShapesMap = {};
    var layout = cfg.layout,
        container = cfg.container;
    this.layout = layout;
    this.container = container;
  }
  /**
   * 渲染文本
   */


  Labels.prototype.render = function (items, shapes, isUpdate) {
    var _this = this;

    if (isUpdate === void 0) {
      isUpdate = false;
    }

    this.shapesMap = {};
    var container = this.container;
    var offscreenGroup = this.createOffscreenGroup(); // 创建虚拟分组

    if (items.length) {
      // 如果 items 空的话就不进行绘制调整操作
      // step 1: 在虚拟 group 中创建 shapes
      for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {
        var item = items_1[_i];

        if (item) {
          this.renderLabel(item, offscreenGroup);
        }
      } // step 2: 根据布局，调整 labels


      this.doLayout(items, shapes); // step 3: 绘制 labelLine

      this.renderLabelLine(items); // step 4: 根据用户设置的偏移量调整 label

      this.adjustLabel(items);
    } // 进行添加、更新、销毁操作


    var lastShapesMap = this.lastShapesMap;
    var shapesMap = this.shapesMap;
    Object(esm["each"])(shapesMap, function (shape, id) {
      if (shape.destroyed) {
        // label 在布局调整环节被删除了（doLayout）
        delete shapesMap[id];
      } else {
        if (lastShapesMap[id]) {
          // 图形发生更新
          var data_1 = shape.get('data');
          var origin_1 = shape.get('origin');
          var coordinate_1 = shape.get('coordinate');
          var currentShape = lastShapesMap[id]; // 已经在渲染树上的 shape

          var currentAnimateCfg_1 = shape.get('animateCfg');
          currentShape.set('data', data_1);
          currentShape.set('origin', origin_1);
          currentShape.set('animateCfg', currentAnimateCfg_1);
          currentShape.set('coordinate', coordinate_1);
          var updateAnimateCfg_1 = Object(esm["get"])(currentAnimateCfg_1, 'update');
          var currentChildren_1 = currentShape.getChildren();
          shape.getChildren().map(function (child, index) {
            var currentChild = currentChildren_1[index];
            currentChild.set('data', data_1);
            currentChild.set('origin', origin_1);
            currentChild.set('animateCfg', currentAnimateCfg_1);
            currentChild.set('coordinate', coordinate_1);
            var newAttrs = getReplaceAttrs(currentChild, child);

            if (updateAnimateCfg_1) {
              doAnimate(currentChild, updateAnimateCfg_1, {
                toAttrs: newAttrs,
                coordinate: coordinate_1
              });
            } else {
              currentChild.attr(newAttrs);
            }
          });
          _this.shapesMap[id] = currentShape; // 保存引用
        } else {
          // 新生成的 shape
          container.add(shape);
          var animateCfg = Object(esm["get"])(shape.get('animateCfg'), isUpdate ? 'enter' : 'appear');

          if (animateCfg) {
            doAnimate(shape, animateCfg, {
              toAttrs: _assign({}, shape.attr()),
              coordinate: shape.get('coordinate')
            });
          }
        }

        delete lastShapesMap[id];
      }
    }); // 移除

    Object(esm["each"])(lastShapesMap, function (deleteShape) {
      var animateCfg = Object(esm["get"])(deleteShape.get('animateCfg'), 'leave');

      if (animateCfg) {
        doAnimate(deleteShape, animateCfg, {
          toAttrs: null,
          coordinate: deleteShape.get('coordinate')
        });
      } else {
        deleteShape.remove(true); // 移除
      }
    });
    this.lastShapesMap = shapesMap;
    offscreenGroup.destroy();
  };
  /** 清楚当前 labels */


  Labels.prototype.clear = function () {
    this.container.clear();
    this.shapesMap = {};
    this.lastShapesMap = {};
  };
  /** 销毁 */


  Labels.prototype.destroy = function () {
    this.container.destroy();
    this.shapesMap = null;
    this.lastShapesMap = null;
  };

  Labels.prototype.renderLabel = function (cfg, container) {
    var id = cfg.id,
        data = cfg.data,
        mappingData = cfg.mappingData,
        coordinate = cfg.coordinate,
        animate = cfg.animate,
        content = cfg.content;
    var shapeAppendCfg = {
      id: id,
      data: data,
      origin: mappingData,
      coordinate: coordinate
    };
    var labelGroup = container.addGroup(_assign({
      name: 'label',
      // 如果 this.animate === false 或者 cfg.animate === false/null 则不进行动画，否则进行动画配置的合并
      animateCfg: this.animate === false || animate === null || animate === false ? false : Object(esm["deepMix"])({}, this.animate, animate)
    }, shapeAppendCfg));
    var labelShape;

    if (content.isGroup && content.isGroup() || content.isShape && content.isShape()) {
      // 如果 content 是 Group 或者 Shape，根据 textAlign 调整位置后，直接将其加入 labelGroup
      var _a = content.getCanvasBBox(),
          width = _a.width,
          height = _a.height;

      var textAlign = Object(esm["get"])(cfg, 'textAlign', 'left');
      var x = cfg.x;
      var y = cfg.y - height / 2;

      if (textAlign === 'center') {
        x = x - width / 2;
      } else if (textAlign === 'right' || textAlign === 'end') {
        x = x - width;
      }

      transform_translate(content, x, y); // 将 label 平移至 x, y 指定的位置

      labelShape = content;
      labelGroup.add(content);
    } else {
      labelShape = labelGroup.addShape('text', _assign({
        attrs: _assign({
          x: cfg.x,
          y: cfg.y,
          textAlign: cfg.textAlign,
          textBaseline: Object(esm["get"])(cfg, 'textBaseline', 'middle'),
          text: cfg.content
        }, cfg.style)
      }, shapeAppendCfg));
    }

    if (cfg.rotate) {
      transform_rotate(labelShape, cfg.rotate);
    }

    this.shapesMap[id] = labelGroup;
  }; // 根据type对label布局


  Labels.prototype.doLayout = function (items, shapes) {
    var _this = this;

    if (this.layout) {
      var layouts = Object(esm["isArray"])(this.layout) ? this.layout : [this.layout];
      Object(esm["each"])(layouts, function (layout) {
        var layoutFn = getGeometryLabelLayout(Object(esm["get"])(layout, 'type', ''));

        if (layoutFn) {
          var labelShapes_1 = [];
          var geometryShapes_1 = [];
          Object(esm["each"])(_this.shapesMap, function (labelShape, id) {
            labelShapes_1.push(labelShape);
            geometryShapes_1.push(shapes[id]);
          });
          layoutFn(items, labelShapes_1, geometryShapes_1, _this.region, layout.cfg);
        }
      });
    }
  };

  Labels.prototype.renderLabelLine = function (labelItems) {
    var _this = this;

    Object(esm["each"])(labelItems, function (labelItem) {
      if (!labelItem) {
        return;
      }

      if (!labelItem.labelLine) {
        // labelLine: null | false，关闭 label 对应的 labelLine
        return;
      }

      var labelLineCfg = Object(esm["get"])(labelItem, 'labelLine', {});
      var id = labelItem.id;
      var path = labelLineCfg.path;

      if (!path) {
        var start = labelItem.start;
        path = [['M', start.x, start.y], ['L', labelItem.x, labelItem.y]];
      }

      var labelGroup = _this.shapesMap[id];

      if (!labelGroup.destroyed) {
        labelGroup.addShape('path', {
          capture: false,
          attrs: _assign({
            path: path,
            stroke: labelItem.color ? labelItem.color : Object(esm["get"])(labelItem, ['style', 'fill'], '#000'),
            fill: null
          }, labelLineCfg.style),
          id: id,
          origin: labelItem.mappingData,
          data: labelItem.data,
          coordinate: labelItem.coordinate
        });
      }
    });
  };

  Labels.prototype.createOffscreenGroup = function () {
    var container = this.container;
    var GroupClass = container.getGroupBase(); // 获取分组的构造函数

    var newGroup = new GroupClass({});
    return newGroup;
  };

  Labels.prototype.adjustLabel = function (items) {
    var _this = this;

    Object(esm["each"])(items, function (item) {
      if (item) {
        var id = item.id;
        var labelGroup = _this.shapesMap[id];

        if (!labelGroup.destroyed) {
          var labelShape = labelGroup.find(function (ele) {
            return ele.get('type') === 'text';
          });

          if (labelShape) {
            if (item.offsetX) {
              labelShape.attr('x', labelShape.attr('x') + item.offsetX);
            }

            if (item.offsetY) {
              labelShape.attr('y', labelShape.attr('y') + item.offsetY);
            }
          }
        }
      }
    });
  };

  return Labels;
}();

/* harmony default export */ var component_labels = (labels_Labels);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/label/base.js










function avg(arr) {
  var sum = 0;
  Object(esm["each"])(arr, function (value) {
    sum += value;
  });
  return sum / arr.length;
}
/**
 * Geometry Label 基类，用于生成 Geometry 下所有 label 的配置项信息
 */


var base_GeometryLabel =
/** @class */
function () {
  function GeometryLabel(geometry) {
    this.geometry = geometry;
  }

  GeometryLabel.prototype.getLabelItems = function (mapppingArray) {
    var _this = this;

    var items = [];
    var labelCfgs = this.getLabelCfgs(mapppingArray); // 获取 label 相关的 x，y 的值，获取具体的 x, y，防止存在数组

    Object(esm["each"])(mapppingArray, function (mappingData, index) {
      var labelCfg = labelCfgs[index];

      if (!labelCfg || Object(esm["isNil"])(mappingData.x) || Object(esm["isNil"])(mappingData.y)) {
        items.push(null);
        return;
      }

      var labelContent = !Object(esm["isArray"])(labelCfg.content) ? [labelCfg.content] : labelCfg.content;
      labelCfg.content = labelContent;
      var total = labelContent.length;
      Object(esm["each"])(labelContent, function (content, subIndex) {
        if (Object(esm["isNil"])(content) || content === '') {
          items.push(null);
          return;
        }

        var item = _assign(_assign({}, labelCfg), _this.getLabelPoint(labelCfg, mappingData, subIndex));

        if (!item.textAlign) {
          item.textAlign = _this.getLabelAlign(item, subIndex, total);
        }

        if (item.offset <= 0) {
          item.labelLine = null;
        }

        items.push(item);
      });
    });
    return items;
  };

  GeometryLabel.prototype.render = function (mapppingArray, isUpdate) {
    if (isUpdate === void 0) {
      isUpdate = false;
    }

    var labelItems = this.getLabelItems(mapppingArray);
    var labelsRenderer = this.getLabelsRenderer();
    var shapes = this.getGeometryShapes(); // 渲染文本

    labelsRenderer.render(labelItems, shapes, isUpdate);
  };

  GeometryLabel.prototype.clear = function () {
    var labelsRenderer = this.labelsRenderer;

    if (labelsRenderer) {
      labelsRenderer.clear();
    }
  };

  GeometryLabel.prototype.destroy = function () {
    var labelsRenderer = this.labelsRenderer;

    if (labelsRenderer) {
      labelsRenderer.destroy();
    }

    this.labelsRenderer = null;
  }; // geometry 更新之后，对应的 Coordinate 也会更新，为了获取到最新鲜的 Coordinate，故使用方法获取


  GeometryLabel.prototype.getCoordinate = function () {
    return this.geometry.coordinate;
  };
  /**
   * 获取 label 的默认配置
   */


  GeometryLabel.prototype.getDefaultLabelCfg = function () {
    return Object(esm["get"])(this.geometry.theme, 'labels', {});
  };
  /**
   * 设置 label 位置
   * @param labelPointCfg
   * @param mappingData
   * @param index
   * @param position
   */


  GeometryLabel.prototype.setLabelPosition = function (labelPointCfg, mappingData, index, position) {};
  /**
   * 获取文本默认偏移量
   * @param offset
   * @returns
   */


  GeometryLabel.prototype.getDefaultOffset = function (offset) {
    var coordinate = this.getCoordinate();
    var vector = this.getOffsetVector(offset);
    return coordinate.isTransposed ? vector[0] : vector[1];
  };
  /**
   * 获取每个 label 的偏移量
   * @param labelCfg
   * @param index
   * @param total
   * @returns
   */


  GeometryLabel.prototype.getLabelOffset = function (labelCfg, index, total) {
    var offset = this.getDefaultOffset(labelCfg.offset);
    var coordinate = this.getCoordinate();
    var transposed = coordinate.isTransposed;
    var dim = transposed ? 'x' : 'y';
    var factor = transposed ? 1 : -1; // y 方向上越大，像素的坐标越小，所以transposed时将系数变成

    var offsetPoint = {
      x: 0,
      y: 0
    };

    if (index > 0 || total === 1) {
      // 判断是否小于0
      offsetPoint[dim] = offset * factor;
    } else {
      offsetPoint[dim] = offset * factor * -1;
    }

    return offsetPoint;
  };
  /**
   * 获取每个 label 的位置
   * @param labelCfg
   * @param mappingData
   * @param index
   * @returns label point
   */


  GeometryLabel.prototype.getLabelPoint = function (labelCfg, mappingData, index) {
    var coordinate = this.getCoordinate();
    var total = labelCfg.content.length;

    function getDimValue(value, idx) {
      var v = value;

      if (Object(esm["isArray"])(v)) {
        if (labelCfg.content.length === 1) {
          // 如果仅一个 label，多个 y, 取最后一个 y
          if (v.length <= 2) {
            v = v[value.length - 1];
          } else {
            v = avg(v);
          }
        } else {
          v = v[idx];
        }
      }

      return v;
    }

    var label = {
      content: labelCfg.content[index],
      x: 0,
      y: 0,
      start: {
        x: 0,
        y: 0
      },
      color: '#fff'
    }; // 多边形场景，多用于地图

    if (mappingData && this.geometry.type === 'polygon') {
      var centroid = getPolygonCentroid(mappingData.x, mappingData.y);
      label.x = centroid[0];
      label.y = centroid[1];
    } else {
      label.x = getDimValue(mappingData.x, index);
      label.y = getDimValue(mappingData.y, index);
    } // 处理漏斗图文本位置


    var shape = Object(esm["isArray"])(mappingData.shape) ? mappingData.shape[0] : mappingData.shape;

    if (shape === 'funnel' || shape === 'pyramid') {
      var nextPoints = Object(esm["get"])(mappingData, 'nextPoints');
      var points = Object(esm["get"])(mappingData, 'points');

      if (nextPoints) {
        // 非漏斗图底部
        var point1 = coordinate.convert(points[1]);
        var point2 = coordinate.convert(nextPoints[1]);
        label.x = (point1.x + point2.x) / 2;
        label.y = (point1.y + point2.y) / 2;
      } else if (shape === 'pyramid') {
        var point1 = coordinate.convert(points[1]);
        var point2 = coordinate.convert(points[2]);
        label.x = (point1.x + point2.x) / 2;
        label.y = (point1.y + point2.y) / 2;
      }
    }

    if (labelCfg.position) {
      // 如果 label 支持 position 属性
      this.setLabelPosition(label, mappingData, index, labelCfg.position);
    }

    var offsetPoint = this.getLabelOffset(labelCfg, index, total);
    label.start = {
      x: label.x,
      y: label.y
    };
    label.x += offsetPoint.x;
    label.y += offsetPoint.y;
    label.color = mappingData.color;
    return label;
  };
  /**
   * 获取文本的对齐方式
   * @param item
   * @param index
   * @param total
   * @returns
   */


  GeometryLabel.prototype.getLabelAlign = function (item, index, total) {
    var align = 'center';
    var coordinate = this.getCoordinate();

    if (coordinate.isTransposed) {
      var offset = this.getDefaultOffset(item.offset);

      if (offset < 0) {
        align = 'right';
      } else if (offset === 0) {
        align = 'center';
      } else {
        align = 'left';
      }

      if (total > 1 && index === 0) {
        if (align === 'right') {
          align = 'left';
        } else if (align === 'left') {
          align = 'right';
        }
      }
    }

    return align;
  };
  /**
   * 获取每一个 label 的唯一 id
   * @param mappingData label 对应的图形的绘制数据
   */


  GeometryLabel.prototype.getLabelId = function (mappingData) {
    var geometry = this.geometry;
    var type = geometry.type;
    var xScale = geometry.getXScale();
    var yScale = geometry.getYScale();
    var origin = mappingData[FIELD_ORIGIN]; // 原始数据

    var labelId = geometry.getElementId(mappingData);

    if (type === 'line' || type === 'area') {
      // 折线图以及区域图，一条线会对应一组数据，即多个 labels，为了区分这些 labels，需要在 line id 的前提下加上 x 字段值
      labelId += " " + origin[xScale.field];
    } else if (type === 'path') {
      // path 路径图，无序，有可能存在相同 x 不同 y 的情况，需要通过 x y 来确定唯一 id
      labelId += " " + origin[xScale.field] + "-" + origin[yScale.field];
    }

    return labelId;
  }; // 获取 labels 组件


  GeometryLabel.prototype.getLabelsRenderer = function () {
    var _a = this.geometry,
        labelsContainer = _a.labelsContainer,
        labelOption = _a.labelOption,
        canvasRegion = _a.canvasRegion,
        animateOption = _a.animateOption;
    var coordinate = this.geometry.coordinate;
    var labelsRenderer = this.labelsRenderer;

    if (!labelsRenderer) {
      labelsRenderer = new component_labels({
        container: labelsContainer,
        layout: Object(esm["get"])(labelOption, ['cfg', 'layout'], {
          type: this.defaultLayout
        })
      });
      this.labelsRenderer = labelsRenderer;
    }

    labelsRenderer.region = canvasRegion; // 设置动画配置，如果 geometry 的动画关闭了，那么 label 的动画也会关闭

    labelsRenderer.animate = animateOption ? getDefaultAnimateCfg('label', coordinate) : false;
    return labelsRenderer;
  };

  GeometryLabel.prototype.getLabelCfgs = function (mapppingArray) {
    var _this = this;

    var geometry = this.geometry;
    var defaultLabelCfg = this.getDefaultLabelCfg();
    var type = geometry.type,
        theme = geometry.theme,
        labelOption = geometry.labelOption,
        scales = geometry.scales,
        coordinate = geometry.coordinate;
    var _a = labelOption,
        fields = _a.fields,
        callback = _a.callback,
        cfg = _a.cfg;
    var labelScales = fields.map(function (field) {
      return scales[field];
    });
    var labelCfgs = [];
    Object(esm["each"])(mapppingArray, function (mappingData, index) {
      var origin = mappingData[FIELD_ORIGIN]; // 原始数据

      var originText = _this.getLabelText(origin, labelScales);

      var callbackCfg;

      if (callback) {
        // 当同时配置了 callback 和 cfg 时，以 callback 为准
        var originValues = fields.map(function (field) {
          return origin[field];
        });
        callbackCfg = callback.apply(void 0, originValues);

        if (Object(esm["isNil"])(callbackCfg)) {
          labelCfgs.push(null);
          return;
        }
      }

      var labelCfg = _assign(_assign({
        id: _this.getLabelId(mappingData),
        data: origin,
        // 存储原始数据
        mappingData: mappingData,
        coordinate: coordinate
      }, cfg), callbackCfg);

      var content = labelCfg.content;

      if (Object(esm["isFunction"])(content)) {
        labelCfg.content = content(origin, mappingData, index);
      } else if (Object(esm["isUndefined"])(content)) {
        // 用户未配置 content，则默认为映射的第一个字段的值
        labelCfg.content = originText[0];
      }

      if (Object(esm["isFunction"])(labelCfg.position)) {
        labelCfg.position = labelCfg.position(origin, mappingData, index);
      }

      if (type === 'polygon' || labelCfg.offset < 0 && !['line', 'point', 'path'].includes(type)) {
        // polygon 或者 offset 小于 0 时，文本展示在图形内部，将其颜色设置为 白色
        labelCfg = Object(esm["deepMix"])({}, defaultLabelCfg, theme.innerLabels, labelCfg);
      } else {
        labelCfg = Object(esm["deepMix"])({}, defaultLabelCfg, theme.labels, labelCfg);
      }

      labelCfgs.push(labelCfg);
    });
    return labelCfgs;
  };

  GeometryLabel.prototype.getLabelText = function (origin, scales) {
    var labelTexts = [];
    Object(esm["each"])(scales, function (scale) {
      var value = origin[scale.field];

      if (Object(esm["isArray"])(value)) {
        value = value.map(function (subVal) {
          return scale.getText(subVal);
        });
      } else {
        value = scale.getText(value);
      }

      if (Object(esm["isNil"])(value) || value === '') {
        labelTexts.push(null);
      } else {
        labelTexts.push(value);
      }
    });
    return labelTexts;
  };

  GeometryLabel.prototype.getOffsetVector = function (offset) {
    if (offset === void 0) {
      offset = 0;
    }

    var coordinate = this.getCoordinate(); // 如果 x,y 翻转，则偏移 x，否则偏移 y

    return coordinate.isTransposed ? coordinate.applyMatrix(offset, 0) : coordinate.applyMatrix(0, offset);
  };

  GeometryLabel.prototype.getGeometryShapes = function () {
    var geometry = this.geometry;
    var shapes = {};
    Object(esm["each"])(geometry.elementsMap, function (element, id) {
      shapes[id] = element.shape;
    }); // 因为有可能 shape 还在进行动画，导致 shape.getBBox() 获取到的值不是最终态，所以需要从 offscreenGroup 获取

    Object(esm["each"])(geometry.getOffscreenGroup().getChildren(), function (child) {
      var id = geometry.getElementId(child.get('origin').mappingData);
      shapes[id] = child;
    });
    return shapes;
  };

  return GeometryLabel;
}();

/* harmony default export */ var label_base = (base_GeometryLabel);
// EXTERNAL MODULE: ../node_modules/@antv/g2/esm/interface.js
var esm_interface = __webpack_require__("QQye");

// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/core.js
/* G2 的一个壳子，不包含 Geometry，由开发者自己定义和引入 */
var VERSION = '4.0.12'; // 核心基类导出

 // Chart, View 类

 // G2 组件基类

 // Geometry 基类

 // Geometry Label 基类

 // Interaction 基类

 // Facet 基类

 // Interaction Action 基类
// 注册 ComponentController

 // 注册 Geometry

 // 注册 Geometry Shape

 // 注册 Geometry label 以及 Geometry Label 布局函数

 // 注册 interaction

 // 注册 facet

 // 注册主题

 // G engine 管理相关

 // 注册动画函数


 // 因为 typescript 部分版本不支持 export * as 语法。



// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/theme/style-sheet/dark.js
var dark_WHITE_COLORS = {
  100: '#000',
  95: '#0D0D0D',
  85: '#262626',
  65: '#595959',
  45: '#8C8C8C',
  25: '#BFBFBF',
  15: '#D9D9D9',
  6: '#F0F0F0'
};
var dark_BLACK_COLORS = {
  100: '#FFFFFF',
  95: '#F2F2F2',
  85: '#D9D9D9',
  65: '#A6A6A6',
  45: '#737373',
  25: '#404040',
  15: '#262626',
  6: '#0F0F0F'
};
var dark_QUALITATIVE_10 = ['#5B8FF9', '#5AD8A6', '#5D7092', '#F6BD16', '#E86452', '#6DC8EC', '#945FB9', '#FF9845', '#1E9493', '#FF99C3'];
var dark_QUALITATIVE_20 = ['#5B8FF9', '#CDDDFD', '#5AD8A6', '#CDF3E4', '#5D7092', '#CED4DE', '#F6BD16', '#FCEBB9', '#E86452', '#F8D0CB', '#6DC8EC', '#D3EEF9', '#945FB9', '#DECFEA', '#FF9845', '#FFE0C7', '#1E9493', '#BBDEDE', '#FF99C3', '#FFE0ED'];
var antvDark = {
  backgroundColor: '#141414',

  /** 主题色 */
  brandColor: dark_QUALITATIVE_10[0],

  /** 分类色板 1，在数据量小于等于 10 时使用 */
  paletteQualitative10: dark_QUALITATIVE_10,

  /** 分类色板 2，在数据量大于 10 时使用 */
  paletteQualitative20: dark_QUALITATIVE_20,

  /** 语义色 */
  paletteSemanticRed: '#F4664A',

  /** 语义色 */
  paletteSemanticGreen: '#30BF78',

  /** 语义色 */
  paletteSemanticYellow: '#FAAD14',

  /** 字体 */
  fontFamily: "\"-apple-system\", \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial,\n  \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\",\n  \"Noto Color Emoji\"",
  // -------------------- 坐标轴 --------------------

  /** 坐标轴线颜色 */
  axisLineBorderColor: dark_BLACK_COLORS[25],

  /** 坐标轴线粗细 */
  axisLineBorder: 0.5,

  /** 坐标轴线 lineDash 设置 */
  axisLineDash: null,

  /** 坐标轴标题颜色 */
  axisTitleTextFillColor: dark_BLACK_COLORS[65],

  /** 坐标轴标题文本字体大小 */
  axisTitleTextFontSize: 12,

  /** 坐标轴标题文本行高 */
  axisTitleTextLineHeight: 12,

  /** 坐标轴标题文本字体粗细 */
  axisTitleTextFontWeight: 'normal',

  /** 坐标轴刻度线颜色 */
  axisTickLineBorderColor: dark_BLACK_COLORS[25],

  /** 坐标轴刻度线长度 */
  axisTickLineLength: 4,

  /** 坐标轴刻度线粗细 */
  axisTickLineBorder: 0.5,

  /** 坐标轴次刻度线颜色 */
  axisSubTickLineBorderColor: dark_BLACK_COLORS[15],

  /** 坐标轴次刻度线长度 */
  axisSubTickLineLength: 2,

  /** 坐标轴次刻度线粗细 */
  axisSubTickLineBorder: 0.5,

  /** 坐标轴刻度文本颜色 */
  axisLabelFillColor: dark_BLACK_COLORS[45],

  /** 坐标轴刻度文本字体大小 */
  axisLabelFontSize: 12,

  /** 坐标轴刻度文本行高 */
  axisLabelLineHeight: 12,

  /** 坐标轴刻度文本字体粗细 */
  axisLabelFontWeight: 'normal',

  /** 坐标轴网格线颜色 */
  axisGridBorderColor: dark_BLACK_COLORS[15],

  /** 坐标轴网格线粗细 */
  axisGridBorder: 0.5,

  /** 坐标轴网格线虚线设置 */
  axisGridLineDash: null,
  // -------------------- 图例 --------------------

  /** 图例标题颜色 */
  legendTitleTextFillColor: dark_BLACK_COLORS[45],

  /** 图例标题文本字体大小 */
  legendTitleTextFontSize: 12,

  /** 图例标题文本行高 */
  legendTitleTextLineHeight: 21,

  /** 图例标题文本字体粗细 */
  legendTitleTextFontWeight: 'normal',

  /** 图例 marker 颜色 */
  legendMarkerColor: dark_QUALITATIVE_10[0],

  /** 图例 marker 默认半径大小 */
  legendMarkerSize: 4,

  /** 图例 'circle' marker 半径 */
  legendCircleMarkerSize: 4,

  /** 图例 'square' marker 半径 */
  legendSquareMarkerSize: 4,

  /** 图例 'line' marker 半径 */
  legendLineMarkerSize: 5,

  /** 图例项文本颜色 */
  legendItemNameFillColor: dark_BLACK_COLORS[65],

  /** 图例项文本字体大小 */
  legendItemNameFontSize: 12,

  /** 图例项文本行高 */
  legendItemNameLineHeight: 12,

  /** 图例项粗细 */
  legendItemNameFontWeight: 'normal',

  /** 连续图例滑块填充色 */
  sliderRailFillColor: dark_BLACK_COLORS[15],

  /** 连续图例滑块边框粗细 */
  sliderRailBorder: 0,

  /** 连续图例滑块边框颜色 */
  sliderRailBorderColor: null,

  /** 连续图例滑块宽度 */
  sliderRailWidth: 100,

  /** 连续图例滑块高度 */
  sliderRailHeight: 12,

  /** 连续图例文本颜色 */
  sliderLabelTextFillColor: dark_BLACK_COLORS[45],

  /** 连续图例文本字体大小 */
  sliderLabelTextFontSize: 12,

  /** 连续图例文本行高 */
  sliderLabelTextLineHeight: 12,

  /** 连续图例文本字体粗细 */
  sliderLabelTextFontWeight: 'normal',

  /** 连续图例滑块颜色 */
  sliderHandlerFillColor: dark_WHITE_COLORS[6],

  /** 连续图例滑块宽度 */
  sliderHandlerWidth: 10,

  /** 连续图例滑块高度 */
  sliderHandlerHeight: 14,

  /** 连续图例滑块边框粗细 */
  sliderHandlerBorder: 1,

  /** 连续图例滑块边框颜色 */
  sliderHandlerBorderColor: dark_WHITE_COLORS[25],
  // -------------------- Annotation，图形标注 --------------------

  /** arc 图形标注描边颜色 */
  annotationArcBorderColor: dark_BLACK_COLORS[15],

  /** arc 图形标注粗细 */
  annotationArcBorder: 0.5,

  /** line 图形标注颜色 */
  annotationLineBorderColor: dark_BLACK_COLORS[25],

  /** line 图形标注粗细 */
  annotationLineBorder: 0.5,

  /** lube 图形标注的虚线间隔 */
  annotationLineDash: null,

  /** text 图形标注文本颜色 */
  annotationTextFillColor: dark_BLACK_COLORS[65],

  /** text 图形标注文本字体大小 */
  annotationTextFontSize: 12,

  /** text 图形标注文本行高 */
  annotationTextLineHeight: 12,

  /** text 图形标注文本字体粗细 */
  annotationTextFontWeight: 'normal',

  /** text 图形标注文本边框颜色 */
  annotationTextBorderColor: dark_WHITE_COLORS[95],

  /** text 图形标注文本边框粗细 */
  annotationTextBorder: 1.5,

  /** region 图形标注填充颜色 */
  annotationRegionFillColor: dark_BLACK_COLORS[100],

  /** region 图形标注填充颜色透明色 */
  annotationRegionFillOpacity: 0.06,

  /** region 图形标注描边粗细 */
  annotationRegionBorder: 0,

  /** region 图形标注描边颜色 */
  annotationRegionBorderColor: null,

  /** dataMarker 图形标注线的长度 */
  annotationDataMarkerLineLength: 16,
  // -------------------- Tooltip --------------------

  /** tooltip crosshairs 辅助线颜色 */
  tooltipCrosshairsBorderColor: dark_BLACK_COLORS[25],

  /** tooltip crosshairs 辅助线粗细 */
  tooltipCrosshairsBorder: 0.5,

  /** tooltip crosshairs 辅助线虚线间隔 */
  tooltipCrosshairsLineDash: null,

  /** tooltip 内容框背景色 */
  tooltipContainerFillColor: '#1f1f1f',
  tooltipContainerFillOpacity: 0.95,

  /** tooltip 内容框阴影 */
  tooltipContainerShadow: '0px 2px 4px rgba(0,0,0,.5)',

  /** tooltip 内容框圆角 */
  tooltipContainerBorderRadius: 3,

  /** tooltip 文本颜色 */
  tooltipTextFillColor: dark_BLACK_COLORS[65],

  /** tooltip 文本字体大小 */
  tooltipTextFontSize: 12,

  /** tooltip 文本行高 */
  tooltipTextLineHeight: 12,

  /** tooltip 文本字体粗细 */
  tooltipTextFontWeight: 'bold',
  // -------------------- Geometry labels --------------------

  /** Geometry label 文本颜色 */
  labelFillColor: dark_BLACK_COLORS[65],

  /** Geometry label 文本字体大小 */
  labelFontSize: 12,

  /** Geometry label 文本行高 */
  labelLineHeight: 12,

  /** Geometry label 文本字体粗细 */
  labelFontWeight: 'normal',

  /** Geometry label 文本描边颜色 */
  labelBorderColor: null,

  /** Geometry label 文本描边粗细 */
  labelBorder: 0,

  /** Geometry innerLabel 文本颜色 */
  innerLabelFillColor: dark_WHITE_COLORS[100],

  /** Geometry innerLabel 文本字体大小 */
  innerLabelFontSize: 12,

  /** Geometry innerLabel 文本行高 */
  innerLabelLineHeight: 12,

  /** Geometry innerLabel 文本字体粗细 */
  innerLabelFontWeight: 'normal',

  /** Geometry innerLabel 文本描边颜色 */
  innerLabelBorderColor: null,

  /** Geometry innerLabel 文本描边粗细 */
  innerLabelBorder: 0,

  /** Geometry label　文本连接线粗细 */
  labelLineBorder: 0.5,

  /** Geometry label 文本连接线颜色 */
  labelLineBorderColor: dark_BLACK_COLORS[25],
  // -------------------- Geometry 图形样式--------------------

  /** 点图填充颜色 */
  pointFillColor: dark_QUALITATIVE_10[0],

  /** 点图填充颜色透明度 */
  pointFillOpacity: 0.95,

  /** 点图大小 */
  pointSize: 4,

  /** 点图描边粗细 */
  pointBorder: 1,

  /** 点图描边颜色 */
  pointBorderColor: dark_WHITE_COLORS[100],

  /** 点图描边透明度 */
  pointBorderOpacity: 1,

  /** 点图 active 状态下描边颜色 */
  pointActiveBorderColor: dark_BLACK_COLORS[100],

  /** 点图 selected 状态下描边粗细 */
  pointSelectedBorder: 2,

  /** 点图 selected 状态下描边颜色 */
  pointSelectedBorderColor: dark_BLACK_COLORS[100],

  /** 点图 inactive 状态下填充颜色透明度 */
  pointInactiveFillOpacity: 0.3,

  /** 点图 inactive 状态下描边透明度 */
  pointInactiveBorderOpacity: 0.3,

  /** 空心点图大小 */
  hollowPointSize: 4,

  /** 空心点图描边粗细 */
  hollowPointBorder: 1,

  /** 空心点图描边颜色 */
  hollowPointBorderColor: dark_QUALITATIVE_10[0],

  /** 空心点图描边透明度 */
  hollowPointBorderOpacity: 0.95,
  hollowPointFillColor: dark_WHITE_COLORS[100],

  /** 空心点图 active 状态下描边粗细 */
  hollowPointActiveBorder: 1,

  /** 空心点图 active 状态下描边颜色 */
  hollowPointActiveBorderColor: dark_BLACK_COLORS[100],

  /** 空心点图 active 状态下描边透明度 */
  hollowPointActiveBorderOpacity: 1,

  /** 空心点图 selected 状态下描边粗细 */
  hollowPointSelectedBorder: 2,

  /** 空心点图 selected 状态下描边颜色 */
  hollowPointSelectedBorderColor: dark_BLACK_COLORS[100],

  /** 空心点图 selected 状态下描边透明度 */
  hollowPointSelectedBorderOpacity: 1,

  /** 空心点图 inactive 状态下描边透明度 */
  hollowPointInactiveBorderOpacity: 0.3,

  /** 线图粗细 */
  lineBorder: 2,

  /** 线图颜色 */
  lineBorderColor: dark_QUALITATIVE_10[0],

  /** 线图透明度 */
  lineBorderOpacity: 1,

  /** 线图 Active 状态下粗细 */
  lineActiveBorder: 3,

  /** 线图 selected 状态下粗细 */
  lineSelectedBorder: 3,

  /** 线图 inactive 状态下透明度 */
  lineInactiveBorderOpacity: 0.3,

  /** area 填充颜色 */
  areaFillColor: dark_QUALITATIVE_10[0],

  /** area 填充透明度 */
  areaFillOpacity: 0.25,

  /** area 在 active 状态下的填充透明度 */
  areaActiveFillColor: dark_QUALITATIVE_10[0],
  areaActiveFillOpacity: 0.5,

  /** area 在 selected 状态下的填充透明度 */
  areaSelectedFillColor: dark_QUALITATIVE_10[0],
  areaSelectedFillOpacity: 0.5,

  /** area inactive 状态下填充透明度 */
  areaInactiveFillOpacity: 0.3,

  /** hollowArea 颜色 */
  hollowAreaBorderColor: dark_QUALITATIVE_10[0],

  /** hollowArea 边框粗细 */
  hollowAreaBorder: 2,

  /** hollowArea 边框透明度 */
  hollowAreaBorderOpacity: 1,

  /** hollowArea active 状态下的边框粗细 */
  hollowAreaActiveBorder: 3,
  hollowAreaActiveBorderColor: dark_BLACK_COLORS[100],

  /** hollowArea selected 状态下的边框粗细 */
  hollowAreaSelectedBorder: 3,
  hollowAreaSelectedBorderColor: dark_BLACK_COLORS[100],

  /** hollowArea inactive 状态下的边框透明度 */
  hollowAreaInactiveBorderOpacity: 0.3,

  /** interval 填充颜色 */
  intervalFillColor: dark_QUALITATIVE_10[0],

  /** interval 填充透明度 */
  intervalFillOpacity: 0.95,

  /** interval active 状态下边框粗细 */
  intervalActiveBorder: 1,

  /** interval active 状态下边框颜色 */
  intervalActiveBorderColor: dark_BLACK_COLORS[100],
  intervalActiveBorderOpacity: 1,

  /** interval selected 状态下边框粗细 */
  intervalSelectedBorder: 2,

  /** interval selected 状态下边框颜色 */
  intervalSelectedBorderColor: dark_BLACK_COLORS[100],

  /** interval selected 状态下边框透明度 */
  intervalSelectedBorderOpacity: 1,

  /** interval inactive 状态下边框透明度 */
  intervalInactiveBorderOpacity: 0.3,

  /** interval inactive 状态下填充透明度 */
  intervalInactiveFillOpacity: 0.3,

  /** interval 边框粗细 */
  hollowIntervalBorder: 2,

  /** hollowInterval 边框颜色 */
  hollowIntervalBorderColor: dark_QUALITATIVE_10[0],

  /** hollowInterval 边框透明度 */
  hollowIntervalBorderOpacity: 1,
  hollowIntervalFillColor: dark_WHITE_COLORS[100],

  /** hollowInterval active 状态下边框粗细 */
  hollowIntervalActiveBorder: 2,

  /** hollowInterval active 状态下边框颜色 */
  hollowIntervalActiveBorderColor: dark_BLACK_COLORS[100],

  /** hollowInterval selected 状态下边框粗细 */
  hollowIntervalSelectedBorder: 3,

  /** hollowInterval selected 状态下边框颜色 */
  hollowIntervalSelectedBorderColor: dark_BLACK_COLORS[100],

  /** hollowInterval selected 状态下边框透明度 */
  hollowIntervalSelectedBorderOpacity: 1,

  /** hollowInterval inactive 状态下边框透明度 */
  hollowIntervalInactiveBorderOpacity: 0.3
};
// EXTERNAL MODULE: ../node_modules/@antv/g-canvas/esm/index.js
var g_canvas_esm = __webpack_require__("PKNW");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.string.trim.js
var es6_string_trim = __webpack_require__("m8zh");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.from.js
var es6_array_from = __webpack_require__("YhIr");

// CONCATENATED MODULE: ../node_modules/@antv/g-svg/esm/constant.js
var SHAPE_TO_TAGS = {
  rect: 'path',
  circle: 'circle',
  line: 'line',
  path: 'path',
  marker: 'path',
  text: 'text',
  polyline: 'polyline',
  polygon: 'polygon',
  image: 'image',
  ellipse: 'ellipse',
  dom: 'foreignObject'
};
var SVG_ATTR_MAP = {
  opacity: 'opacity',
  fillStyle: 'fill',
  fill: 'fill',
  fillOpacity: 'fill-opacity',
  strokeStyle: 'stroke',
  strokeOpacity: 'stroke-opacity',
  stroke: 'stroke',
  x: 'x',
  y: 'y',
  r: 'r',
  rx: 'rx',
  ry: 'ry',
  width: 'width',
  height: 'height',
  x1: 'x1',
  x2: 'x2',
  y1: 'y1',
  y2: 'y2',
  lineCap: 'stroke-linecap',
  lineJoin: 'stroke-linejoin',
  lineWidth: 'stroke-width',
  lineDash: 'stroke-dasharray',
  lineDashOffset: 'stroke-dashoffset',
  miterLimit: 'stroke-miterlimit',
  font: 'font',
  fontSize: 'font-size',
  fontStyle: 'font-style',
  fontVariant: 'font-variant',
  fontWeight: 'font-weight',
  fontFamily: 'font-family',
  startArrow: 'marker-start',
  endArrow: 'marker-end',
  path: 'd',
  "class": 'class',
  id: 'id',
  style: 'style',
  preserveAspectRatio: 'preserveAspectRatio'
};
var EVENTS = ['click', 'mousedown', 'mouseup', 'dblclick', 'contextmenu', 'mouseenter', 'mouseleave', 'mouseover', 'mouseout', 'mousemove', 'wheel'];
// CONCATENATED MODULE: ../node_modules/@antv/g-svg/esm/util/dom.js








/**
 * 创建并返回图形的 svg 元素
 * @param type svg类型
 */

function createSVGElement(type) {
  return document.createElementNS('http://www.w3.org/2000/svg', type);
}
/**
 * 创建并返回图形的 dom 元素
 * @param  {IShape} shape 图形
 * @return {SVGElement}
 */

function dom_createDom(shape) {
  var type = SHAPE_TO_TAGS[shape.type];
  var parent = shape.getParent();

  if (!type) {
    throw new Error("the type " + shape.type + " is not supported by svg");
  }

  var element = createSVGElement(type);

  if (shape.get('id')) {
    element.id = shape.get('id');
  }

  shape.set('el', element);
  shape.set('attrs', {}); // 对于 defs 下的 dom 节点，parent 为空，通过 context 统一挂载到 defs 节点下

  if (parent) {
    var parentNode = parent.get('el');

    if (parentNode) {
      parentNode.appendChild(element);
    } else {
      // parentNode maybe null for group
      parentNode = parent.createDom();
      parent.set('el', parentNode);
      parentNode.appendChild(element);
    }
  }

  return element;
}
/**
 * 对 dom 元素进行排序
 * @param {IElement} element  元素
 * @param {sorter}   function 排序函数
 */

function sortDom(element, sorter) {
  var el = element.get('el');
  var childList = Object(esm["toArray"])(el.children).sort(sorter); // create empty fragment

  var fragment = document.createDocumentFragment();
  childList.forEach(function (child) {
    fragment.appendChild(child);
  });
  el.appendChild(fragment);
}
/**
 * 将 dom 元素移动到父元素下的指定位置
 * @param {SVGElement} element     dom 元素
 * @param {number}     targetIndex 目标位置(从 0 开始)
 */

function moveTo(element, targetIndex) {
  var parentNode = element.parentNode;
  var siblings = Array.from(parentNode.childNodes).filter( // 要求为元素节点，且不能为 defs 节点
  function (node) {
    return node.nodeType === 1 && node.nodeName.toLowerCase() !== 'defs';
  }); // 获取目标节点

  var target = siblings[targetIndex];
  var currentIndex = siblings.indexOf(element); // 如果目标节点存在

  if (target) {
    // 当前索引 > 目标索引，直接插入到目标节点之前即可
    if (currentIndex > targetIndex) {
      parentNode.insertBefore(element, target);
    } else if (currentIndex < targetIndex) {
      // 当前索引 < 目标索引
      // 获取目标节点的下一个节点
      var targetNext = siblings[targetIndex + 1]; // 如果目标节点的下一个节点存在，插入到该节点之前

      if (targetNext) {
        parentNode.insertBefore(element, targetNext);
      } else {
        // 如果该节点不存在，则追加到末尾
        parentNode.appendChild(element);
      }
    }
  } else {
    parentNode.appendChild(element);
  }
}
// CONCATENATED MODULE: ../node_modules/@antv/g-svg/esm/util/svg.js



function setShadow(model, context) {
  var el = model.cfg.el;
  var attrs = model.attr();
  var cfg = {
    dx: attrs.shadowOffsetX,
    dy: attrs.shadowOffsetY,
    blur: attrs.shadowBlur,
    color: attrs.shadowColor
  };

  if (!cfg.dx && !cfg.dy && !cfg.blur && !cfg.color) {
    el.removeAttribute('filter');
  } else {
    var id = context.find('filter', cfg);

    if (!id) {
      id = context.addShadow(cfg);
    }

    el.setAttribute('filter', "url(#" + id + ")");
  }
}
function setTransform(model) {
  var matrix = model.attr().matrix;

  if (matrix) {
    var el = model.cfg.el;
    var transform = [];

    for (var i = 0; i < 9; i += 3) {
      transform.push(matrix[i] + "," + matrix[i + 1]);
    }

    transform = transform.join(',');

    if (transform.indexOf('NaN') === -1) {
      el.setAttribute('transform', "matrix(" + transform + ")");
    } else {
      console.warn('invalid matrix:', matrix);
    }
  }
}
function setClip(model, context) {
  var clip = model.getClip();
  var el = model.get('el');

  if (!clip) {
    el.removeAttribute('clip-path');
  } else if (clip && !el.hasAttribute('clip-path')) {
    dom_createDom(clip);
    clip.createPath(context);
    var id = context.addClip(clip);
    el.setAttribute('clip-path', "url(#" + id + ")");
  }
}
// CONCATENATED MODULE: ../node_modules/@antv/g-svg/esm/util/draw.js




function drawChildren(context, children) {
  children.forEach(function (child) {
    child.draw(context);
  });
}
/**
 * 更新元素，包括 group 和 shape
 * @param {IElement} element       SVG 元素
 * @param {ChangeType} changeType  更新类型
 */

function refreshElement(element, changeType) {
  // 对于还没有挂载到画布下的元素，canvas 可能为空
  var canvas = element.get('canvas'); // 只有挂载到画布下，才对元素进行实际渲染

  if (canvas && canvas.get('autoDraw')) {
    var context = canvas.get('context');
    var parent_1 = element.getParent();
    var parentChildren = parent_1 ? parent_1.getChildren() : [canvas];
    var el = element.get('el');

    if (changeType === 'remove') {
      var isClipShape = element.get('isClipShape'); // 对于 clip，不仅需要将 clipShape 对于的 SVG 元素删除，还需要将上层的 clipPath 元素也删除

      if (isClipShape) {
        var clipPathEl = el && el.parentNode;
        var defsEl = clipPathEl && clipPathEl.parentNode;

        if (clipPathEl && defsEl) {
          defsEl.removeChild(clipPathEl);
        }
      } else if (el && el.parentNode) {
        el.parentNode.removeChild(el);
      }
    } else if (changeType === 'show') {
      el.setAttribute('visibility', 'visible');
    } else if (changeType === 'hide') {
      el.setAttribute('visibility', 'hidden');
    } else if (changeType === 'zIndex') {
      moveTo(el, parentChildren.indexOf(element));
    } else if (changeType === 'sort') {
      var children_1 = element.get('children');

      if (children_1 && children_1.length) {
        sortDom(element, function (a, b) {
          return children_1.indexOf(a) - children_1.indexOf(b) ? 1 : 0;
        });
      }
    } else if (changeType === 'clear') {
      // el maybe null for group
      if (el) {
        el.innerHTML = '';
      }
    } else if (changeType === 'matrix') {
      setTransform(element);
    } else if (changeType === 'clip') {
      setClip(element, context);
    } else if (changeType === 'attr') {// 已在 afterAttrsChange 进行了处理，此处 do nothing
    } else if (changeType === 'add') {
      element.draw(context);
    }
  }
}
// CONCATENATED MODULE: ../node_modules/@antv/g-svg/esm/group.js









var group_Group =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Group, _super);

  function Group() {
    return _super !== null && _super.apply(this, arguments) || this;
  } // SVG 中分组对应实体标签 <g>


  Group.prototype.isEntityGroup = function () {
    return true;
  };

  Group.prototype.createDom = function () {
    var element = createSVGElement('g');
    this.set('el', element);
    var parent = this.getParent();

    if (parent) {
      var parentNode = parent.get('el');

      if (parentNode) {
        parentNode.appendChild(element);
      } else {
        // parentNode maybe null for group
        parentNode = parent.createDom();
        parent.set('el', parentNode);
        parentNode.appendChild(element);
      }
    }

    return element;
  }; // 覆盖基类的 afterAttrsChange 方法


  Group.prototype.afterAttrsChange = function (targetAttrs) {
    _super.prototype.afterAttrsChange.call(this, targetAttrs);

    var canvas = this.get('canvas'); // 只有挂载到画布下，才对元素进行实际渲染

    if (canvas && canvas.get('autoDraw')) {
      var context = canvas.get('context');
      this.createPath(context, targetAttrs);
    }
  };
  /**
   * 一些方法调用会引起画布变化
   * @param {ChangeType} changeType 改变的类型
   */


  Group.prototype.onCanvasChange = function (changeType) {
    refreshElement(this, changeType);
  };

  Group.prototype.getShapeBase = function () {
    return esm_shape_namespaceObject;
  };

  Group.prototype.getGroupBase = function () {
    return Group;
  };

  Group.prototype.draw = function (context) {
    var children = this.getChildren();
    var el = this.get('el');

    if (this.get('destroyed')) {
      if (el) {
        el.parentNode.removeChild(el);
      }
    } else {
      if (!el) {
        this.createDom();
      }

      setClip(this, context);
      this.createPath(context);

      if (children.length) {
        drawChildren(context, children);
      }
    }
  };
  /**
   * 绘制分组的路径
   * @param {Defs} context 上下文
   * @param {ShapeAttrs} targetAttrs 渲染的目标属性
   */


  Group.prototype.createPath = function (context, targetAttrs) {
    var attrs = this.attr();
    var el = this.get('el');
    Object(esm["each"])(targetAttrs || attrs, function (value, attr) {
      if (SVG_ATTR_MAP[attr]) {
        el.setAttribute(SVG_ATTR_MAP[attr], value);
      }
    });
    setTransform(this);
  };

  return Group;
}(g_base_esm["b" /* AbstractGroup */]);

/* harmony default export */ var esm_group = (group_Group);
// EXTERNAL MODULE: ../node_modules/@antv/g-base/lib/bbox/index.js
var lib_bbox = __webpack_require__("MwAX");

// CONCATENATED MODULE: ../node_modules/@antv/g-svg/esm/shape/base.js













var shape_base_ShapeBase =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(ShapeBase, _super);

  function ShapeBase() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.type = 'svg';
    _this.canFill = false;
    _this.canStroke = false;
    return _this;
  }

  ShapeBase.prototype.getDefaultAttrs = function () {
    var attrs = _super.prototype.getDefaultAttrs.call(this); // 设置默认值


    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, attrs), {
      lineWidth: 1,
      lineAppendWidth: 0,
      strokeOpacity: 1,
      fillOpacity: 1
    });
  }; // 覆盖基类的 afterAttrsChange 方法


  ShapeBase.prototype.afterAttrsChange = function (targetAttrs) {
    _super.prototype.afterAttrsChange.call(this, targetAttrs);

    var canvas = this.get('canvas'); // 只有挂载到画布下，才对元素进行实际渲染

    if (canvas && canvas.get('autoDraw')) {
      var context = canvas.get('context');
      this.draw(context, targetAttrs);
    }
  };

  ShapeBase.prototype.getShapeBase = function () {
    return esm_shape_namespaceObject;
  };

  ShapeBase.prototype.getGroupBase = function () {
    return esm_group;
  };
  /**
   * 一些方法调用会引起画布变化
   * @param {ChangeType} changeType 改变的类型
   */


  ShapeBase.prototype.onCanvasChange = function (changeType) {
    refreshElement(this, changeType);
  };

  ShapeBase.prototype.calculateBBox = function () {
    var el = this.get('el');
    var bbox = null; // 包围盒计算依赖于绘制，如果还没有生成对应的 Dom 元素，则包围盒的长宽均为 0

    if (el) {
      bbox = el.getBBox();
    } else {
      var bboxMethod = Object(lib_bbox["getBBoxMethod"])(this.get('type'));

      if (bboxMethod) {
        bbox = bboxMethod(this);
      }
    }

    if (bbox) {
      var x = bbox.x,
          y = bbox.y,
          width = bbox.width,
          height = bbox.height;
      var lineWidth = this.getHitLineWidth();
      var halfWidth = lineWidth / 2;
      var minX = x - halfWidth;
      var minY = y - halfWidth;
      var maxX = x + width + halfWidth;
      var maxY = y + height + halfWidth;
      return {
        x: minX,
        y: minY,
        minX: minX,
        minY: minY,
        maxX: maxX,
        maxY: maxY,
        width: width + lineWidth,
        height: height + lineWidth
      };
    }

    return {
      x: 0,
      y: 0,
      minX: 0,
      minY: 0,
      maxX: 0,
      maxY: 0,
      width: 0,
      height: 0
    };
  };

  ShapeBase.prototype.isFill = function () {
    var _a = this.attr(),
        fill = _a.fill,
        fillStyle = _a.fillStyle;

    return (fill || fillStyle || this.isClipShape()) && this.canFill;
  };

  ShapeBase.prototype.isStroke = function () {
    var _a = this.attr(),
        stroke = _a.stroke,
        strokeStyle = _a.strokeStyle;

    return (stroke || strokeStyle) && this.canStroke;
  };

  ShapeBase.prototype.draw = function (context, targetAttrs) {
    var el = this.get('el');

    if (this.get('destroyed')) {
      if (el) {
        el.parentNode.removeChild(el);
      }
    } else {
      if (!el) {
        dom_createDom(this);
      }

      setClip(this, context);
      this.createPath(context, targetAttrs);
      this.shadow(context, targetAttrs);
      this.strokeAndFill(context, targetAttrs);
      this.transform(targetAttrs);
    }
  };
  /**
   * @protected
   * 绘制图形的路径
   * @param {Defs} context 上下文
   * @param {ShapeAttrs} targetAttrs 渲染的目标属性
   */


  ShapeBase.prototype.createPath = function (context, targetAttrs) {}; // stroke and fill


  ShapeBase.prototype.strokeAndFill = function (context, targetAttrs) {
    var attrs = targetAttrs || this.attr();
    var fill = attrs.fill,
        fillStyle = attrs.fillStyle,
        stroke = attrs.stroke,
        strokeStyle = attrs.strokeStyle,
        fillOpacity = attrs.fillOpacity,
        strokeOpacity = attrs.strokeOpacity,
        lineWidth = attrs.lineWidth;
    var el = this.get('el');

    if (this.canFill) {
      // 初次渲染和更新渲染的逻辑有所不同: 初次渲染值为空时，需要设置为 none，否则就会是黑色，而更新渲染则不需要
      if (!targetAttrs) {
        this._setColor(context, 'fill', fill || fillStyle);
      } else if ('fill' in attrs) {
        this._setColor(context, 'fill', fill);
      } else if ('fillStyle' in attrs) {
        // compatible with fillStyle
        this._setColor(context, 'fill', fillStyle);
      }

      if (fillOpacity) {
        el.setAttribute(SVG_ATTR_MAP['fillOpacity'], fillOpacity);
      }
    }

    if (this.canStroke && lineWidth > 0) {
      if (!targetAttrs) {
        this._setColor(context, 'stroke', stroke || strokeStyle);
      } else if ('stroke' in attrs) {
        this._setColor(context, 'stroke', stroke);
      } else if ('strokeStyle' in attrs) {
        // compatible with strokeStyle
        this._setColor(context, 'stroke', strokeStyle);
      }

      if (strokeOpacity) {
        el.setAttribute(SVG_ATTR_MAP['strokeOpacity'], strokeOpacity);
      }

      if (lineWidth) {
        el.setAttribute(SVG_ATTR_MAP['lineWidth'], lineWidth);
      }
    }
  };

  ShapeBase.prototype._setColor = function (context, attr, value) {
    var el = this.get('el');

    if (!value) {
      // need to set `none` to avoid default value
      el.setAttribute(SVG_ATTR_MAP[attr], 'none');
      return;
    }

    value = value.trim();

    if (/^[r,R,L,l]{1}[\s]*\(/.test(value)) {
      var id = context.find('gradient', value);

      if (!id) {
        id = context.addGradient(value);
      }

      el.setAttribute(SVG_ATTR_MAP[attr], "url(#" + id + ")");
    } else if (/^[p,P]{1}[\s]*\(/.test(value)) {
      var id = context.find('pattern', value);

      if (!id) {
        id = context.addPattern(value);
      }

      el.setAttribute(SVG_ATTR_MAP[attr], "url(#" + id + ")");
    } else {
      el.setAttribute(SVG_ATTR_MAP[attr], value);
    }
  };

  ShapeBase.prototype.shadow = function (context, targetAttrs) {
    var attrs = this.attr();

    var _a = targetAttrs || attrs,
        shadowOffsetX = _a.shadowOffsetX,
        shadowOffsetY = _a.shadowOffsetY,
        shadowBlur = _a.shadowBlur,
        shadowColor = _a.shadowColor;

    if (shadowOffsetX || shadowOffsetY || shadowBlur || shadowColor) {
      setShadow(this, context);
    }
  };

  ShapeBase.prototype.transform = function (targetAttrs) {
    var attrs = this.attr();
    var matrix = (targetAttrs || attrs).matrix;

    if (matrix) {
      setTransform(this);
    }
  };

  ShapeBase.prototype.isInShape = function (refX, refY) {
    return this.isPointInPath(refX, refY);
  };

  ShapeBase.prototype.isPointInPath = function (refX, refY) {
    var el = this.get('el');
    var canvas = this.get('canvas');
    var bbox = canvas.get('el').getBoundingClientRect();
    var clientX = refX + bbox.left;
    var clientY = refY + bbox.top;
    var element = document.elementFromPoint(clientX, clientY);

    if (element && element.isEqualNode(el)) {
      return true;
    }

    return false;
  };
  /**
   * 获取线拾取的宽度
   * @returns {number} 线的拾取宽度
   */


  ShapeBase.prototype.getHitLineWidth = function () {
    var _a = this.attrs,
        lineWidth = _a.lineWidth,
        lineAppendWidth = _a.lineAppendWidth;

    if (this.isStroke()) {
      return lineWidth + lineAppendWidth;
    }

    return 0;
  };

  return ShapeBase;
}(g_base_esm["c" /* AbstractShape */]);

/* harmony default export */ var shape_base = (shape_base_ShapeBase);
// CONCATENATED MODULE: ../node_modules/@antv/g-svg/esm/shape/circle.js
/**
 * @fileoverview circle
 * @author dengfuping_develop@163.com
 */





var shape_circle_Circle =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Circle, _super);

  function Circle() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.type = 'circle';
    _this.canFill = true;
    _this.canStroke = true;
    return _this;
  }

  Circle.prototype.getDefaultAttrs = function () {
    var attrs = _super.prototype.getDefaultAttrs.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, attrs), {
      x: 0,
      y: 0,
      r: 0
    });
  };

  Circle.prototype.createPath = function (context, targetAttrs) {
    var attrs = this.attr();
    var el = this.get('el');
    Object(esm["each"])(targetAttrs || attrs, function (value, attr) {
      // 圆和椭圆的点坐标属性不是 x, y，而是 cx, cy
      if (attr === 'x' || attr === 'y') {
        el.setAttribute("c" + attr, value);
      } else if (SVG_ATTR_MAP[attr]) {
        el.setAttribute(SVG_ATTR_MAP[attr], value);
      }
    });
  };

  return Circle;
}(shape_base);

/* harmony default export */ var shape_circle = (shape_circle_Circle);
// CONCATENATED MODULE: ../node_modules/@antv/g-svg/esm/shape/dom.js
/**
 * @fileoverview dom
 * @author dengfuping_develop@163.com
 */





var dom_Dom =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Dom, _super);

  function Dom() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.type = 'dom';
    _this.canFill = false;
    _this.canStroke = false;
    return _this;
  }

  Dom.prototype.createPath = function (context, targetAttrs) {
    var attrs = this.attr();
    var el = this.get('el');
    Object(esm["each"])(targetAttrs || attrs, function (value, attr) {
      if (SVG_ATTR_MAP[attr]) {
        el.setAttribute(SVG_ATTR_MAP[attr], value);
      }
    });
    el.innerHTML = attrs['html']; // set innerHTML
  };

  return Dom;
}(shape_base);

/* harmony default export */ var shape_dom = (dom_Dom);
// CONCATENATED MODULE: ../node_modules/@antv/g-svg/esm/shape/ellipse.js
/**
 * @fileoverview ellipse
 * @author dengfuping_develop@163.com
 */





var ellipse_Ellipse =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Ellipse, _super);

  function Ellipse() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.type = 'ellipse';
    _this.canFill = true;
    _this.canStroke = true;
    return _this;
  }

  Ellipse.prototype.getDefaultAttrs = function () {
    var attrs = _super.prototype.getDefaultAttrs.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, attrs), {
      x: 0,
      y: 0,
      rx: 0,
      ry: 0
    });
  };

  Ellipse.prototype.createPath = function (context, targetAttrs) {
    var attrs = this.attr();
    var el = this.get('el');
    Object(esm["each"])(targetAttrs || attrs, function (value, attr) {
      // 圆和椭圆的点坐标属性不是 x, y，而是 cx, cy
      if (attr === 'x' || attr === 'y') {
        el.setAttribute("c" + attr, value);
      } else if (SVG_ATTR_MAP[attr]) {
        el.setAttribute(SVG_ATTR_MAP[attr], value);
      }
    });
  };

  return Ellipse;
}(shape_base);

/* harmony default export */ var ellipse = (ellipse_Ellipse);
// CONCATENATED MODULE: ../node_modules/@antv/g-svg/esm/shape/image.js
/**
 * @fileoverview image
 * @author dengfuping_develop@163.com
 */





var image_Image =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Image, _super);

  function Image() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.type = 'image';
    _this.canFill = false;
    _this.canStroke = false;
    return _this;
  }

  Image.prototype.getDefaultAttrs = function () {
    var attrs = _super.prototype.getDefaultAttrs.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, attrs), {
      x: 0,
      y: 0,
      width: 0,
      height: 0
    });
  };

  Image.prototype.createPath = function (context, targetAttrs) {
    var _this = this;

    var attrs = this.attr();
    var el = this.get('el');
    Object(esm["each"])(targetAttrs || attrs, function (value, attr) {
      if (attr === 'img') {
        _this._setImage(attrs.img);
      } else if (SVG_ATTR_MAP[attr]) {
        el.setAttribute(SVG_ATTR_MAP[attr], value);
      }
    });
  };

  Image.prototype.setAttr = function (name, value) {
    this.attrs[name] = value;

    if (name === 'img') {
      this._setImage(value);
    }
  };

  Image.prototype._setImage = function (img) {
    var attrs = this.attr();
    var el = this.get('el');

    if (Object(esm["isString"])(img)) {
      el.setAttribute('href', img);
    } else if (img instanceof window.Image) {
      if (!attrs.width) {
        el.setAttribute('width', img.width);
        this.attr('width', img.width);
      }

      if (!attrs.height) {
        el.setAttribute('height', img.height);
        this.attr('height', img.height);
      }

      el.setAttribute('href', img.src);
    } else if (img instanceof HTMLElement && Object(esm["isString"])(img.nodeName) && img.nodeName.toUpperCase() === 'CANVAS') {
      // @ts-ignore
      el.setAttribute('href', img.toDataURL());
    } else if (img instanceof ImageData) {
      var canvas = document.createElement('canvas');
      canvas.setAttribute('width', "" + img.width);
      canvas.setAttribute('height', "" + img.height);
      canvas.getContext('2d').putImageData(img, 0, 0);

      if (!attrs.width) {
        el.setAttribute('width', "" + img.width);
        this.attr('width', img.width);
      }

      if (!attrs.height) {
        el.setAttribute('height', "" + img.height);
        this.attr('height', img.height);
      }

      el.setAttribute('href', canvas.toDataURL());
    }
  };

  return Image;
}(shape_base);

/* harmony default export */ var shape_image = (image_Image);
// EXTERNAL MODULE: ../node_modules/@antv/g-math/lib/line.js
var lib_line = __webpack_require__("cU4Z");
var line_default = /*#__PURE__*/__webpack_require__.n(lib_line);

// CONCATENATED MODULE: ../node_modules/@antv/g-svg/esm/shape/line.js

/**
 * @fileoverview line
 * @author dengfuping_develop@163.com
 */






var shape_line_Line =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Line, _super);

  function Line() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.type = 'line';
    _this.canFill = false;
    _this.canStroke = true;
    return _this;
  }

  Line.prototype.getDefaultAttrs = function () {
    var attrs = _super.prototype.getDefaultAttrs.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, attrs), {
      x1: 0,
      y1: 0,
      x2: 0,
      y2: 0,
      startArrow: false,
      endArrow: false
    });
  };

  Line.prototype.createPath = function (context, targetAttrs) {
    var attrs = this.attr();
    var el = this.get('el');
    Object(esm["each"])(targetAttrs || attrs, function (value, attr) {
      if (attr === 'startArrow' || attr === 'endArrow') {
        if (value) {
          var id = Object(esm["isObject"])(value) ? context.addArrow(attrs, SVG_ATTR_MAP[attr]) : context.getDefaultArrow(attrs, SVG_ATTR_MAP[attr]);
          el.setAttribute(SVG_ATTR_MAP[attr], "url(#" + id + ")");
        } else {
          el.removeAttribute(SVG_ATTR_MAP[attr]);
        }
      } else if (SVG_ATTR_MAP[attr]) {
        el.setAttribute(SVG_ATTR_MAP[attr], value);
      }
    });
  };
  /**
   * Use math calculation to get length of line
   * @return {number} length
   */


  Line.prototype.getTotalLength = function () {
    var _a = this.attr(),
        x1 = _a.x1,
        y1 = _a.y1,
        x2 = _a.x2,
        y2 = _a.y2;

    return line_default.a.length(x1, y1, x2, y2);
  };
  /**
   * Use math calculation to get point according to ratio as same sa Canvas version
   * @param {number} ratio
   * @return {Point} point
   */


  Line.prototype.getPoint = function (ratio) {
    var _a = this.attr(),
        x1 = _a.x1,
        y1 = _a.y1,
        x2 = _a.x2,
        y2 = _a.y2;

    return line_default.a.pointAt(x1, y1, x2, y2, ratio);
  };

  return Line;
}(shape_base);

/* harmony default export */ var shape_line = (shape_line_Line);
// CONCATENATED MODULE: ../node_modules/@antv/g-svg/esm/shape/marker/symbols.js
var Symbols = {
  // 圆
  circle: function circle(x, y, r) {
    return [['M', x, y], ['m', -r, 0], ['a', r, r, 0, 1, 0, r * 2, 0], ['a', r, r, 0, 1, 0, -r * 2, 0]];
  },
  // 正方形
  square: function square(x, y, r) {
    return [['M', x - r, y - r], ['L', x + r, y - r], ['L', x + r, y + r], ['L', x - r, y + r], ['Z']];
  },
  // 菱形
  diamond: function diamond(x, y, r) {
    return [['M', x - r, y], ['L', x, y - r], ['L', x + r, y], ['L', x, y + r], ['Z']];
  },
  // 三角形
  triangle: function triangle(x, y, r) {
    var diffY = r * Math.sin(1 / 3 * Math.PI);
    return [['M', x - r, y + diffY], ['L', x, y - diffY], ['L', x + r, y + diffY], ['z']];
  },
  // 倒三角形
  triangleDown: function triangleDown(x, y, r) {
    var diffY = r * Math.sin(1 / 3 * Math.PI);
    return [['M', x - r, y - diffY], ['L', x + r, y - diffY], ['L', x, y + diffY], ['Z']];
  }
};
/* harmony default export */ var symbols = ({
  get: function get(type) {
    return Symbols[type];
  },
  register: function register(type, func) {
    Symbols[type] = func;
  },
  remove: function remove(type) {
    delete Symbols[type];
  },
  getAll: function getAll() {
    return Symbols;
  }
});
// CONCATENATED MODULE: ../node_modules/@antv/g-svg/esm/shape/marker/index.js


/**
 * @fileoverview marker
 * @author dengfuping_develop@163.com
 */





var marker_Marker =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Marker, _super);

  function Marker() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.type = 'marker';
    _this.canFill = true;
    _this.canStroke = true;
    return _this;
  }

  Marker.prototype.createPath = function (context) {
    var el = this.get('el');
    el.setAttribute('d', this._assembleMarker());
  };

  Marker.prototype._assembleMarker = function () {
    var d = this._getPath();

    if (Object(esm["isArray"])(d)) {
      return d.map(function (path) {
        return path.join(' ');
      }).join('');
    }

    return d;
  };

  Marker.prototype._getPath = function () {
    var attrs = this.attr();
    var x = attrs.x,
        y = attrs.y; // 兼容 r 和 radius 两种写法，推荐使用 r

    var r = attrs.r || attrs.radius;
    var symbol = attrs.symbol || 'circle';
    var method;

    if (Object(esm["isFunction"])(symbol)) {
      method = symbol;
    } else {
      method = symbols.get(symbol);
    }

    if (!method) {
      console.warn(method + " symbol is not exist.");
      return null;
    }

    return method(x, y, r);
  }; // 作为其静态属性


  Marker.symbolsFactory = symbols;
  return Marker;
}(shape_base);

/* harmony default export */ var shape_marker = (marker_Marker);
// CONCATENATED MODULE: ../node_modules/@antv/g-svg/esm/shape/path.js







var path_Path =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Path, _super);

  function Path() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.type = 'path';
    _this.canFill = true;
    _this.canStroke = true;
    return _this;
  }

  Path.prototype.getDefaultAttrs = function () {
    var attrs = _super.prototype.getDefaultAttrs.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, attrs), {
      startArrow: false,
      endArrow: false
    });
  };

  Path.prototype.createPath = function (context, targetAttrs) {
    var _this = this;

    var attrs = this.attr();
    var el = this.get('el');
    Object(esm["each"])(targetAttrs || attrs, function (value, attr) {
      if (attr === 'path' && Object(esm["isArray"])(value)) {
        el.setAttribute('d', _this._formatPath(value));
      } else if (attr === 'startArrow' || attr === 'endArrow') {
        if (value) {
          var id = Object(esm["isObject"])(value) ? context.addArrow(attrs, SVG_ATTR_MAP[attr]) : context.getDefaultArrow(attrs, SVG_ATTR_MAP[attr]);
          el.setAttribute(SVG_ATTR_MAP[attr], "url(#" + id + ")");
        } else {
          el.removeAttribute(SVG_ATTR_MAP[attr]);
        }
      } else if (SVG_ATTR_MAP[attr]) {
        el.setAttribute(SVG_ATTR_MAP[attr], value);
      }
    });
  };

  Path.prototype._formatPath = function (value) {
    var newValue = value.map(function (path) {
      return path.join(' ');
    }).join('');

    if (~newValue.indexOf('NaN')) {
      return '';
    }

    return newValue;
  };
  /**
   * Get total length of path
   * 尽管通过浏览器的 SVGPathElement.getTotalLength() 接口获取的 path 长度，
   * 与 Canvas 版本通过数学计算的方式得到的长度有一些细微差异，但最大误差在个位数像素，精度上可以能接受
   * @return {number} length
   */


  Path.prototype.getTotalLength = function () {
    var el = this.get('el');
    return el ? el.getTotalLength() : null;
  };
  /**
   * Get point according to ratio
   * @param {number} ratio
   * @return {Point} point
   */


  Path.prototype.getPoint = function (ratio) {
    var el = this.get('el');
    var totalLength = this.getTotalLength();
    var point = el ? el.getPointAtLength(ratio * totalLength) : null;
    return point ? {
      x: point.x,
      y: point.y
    } : null;
  };

  return Path;
}(shape_base);

/* harmony default export */ var shape_path = (path_Path);
// CONCATENATED MODULE: ../node_modules/@antv/g-svg/esm/shape/polygon.js


/**
 * @fileoverview polygon
 * @author dengfuping_develop@163.com
 */





var polygon_Polygon =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Polygon, _super);

  function Polygon() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.type = 'polygon';
    _this.canFill = true;
    _this.canStroke = true;
    return _this;
  }

  Polygon.prototype.createPath = function (context, targetAttrs) {
    var attrs = this.attr();
    var el = this.get('el');
    Object(esm["each"])(targetAttrs || attrs, function (value, attr) {
      if (attr === 'points' && Object(esm["isArray"])(value) && value.length >= 2) {
        el.setAttribute('points', value.map(function (point) {
          return point[0] + "," + point[1];
        }).join(' '));
      } else if (SVG_ATTR_MAP[attr]) {
        el.setAttribute(SVG_ATTR_MAP[attr], value);
      }
    });
  };

  return Polygon;
}(shape_base);

/* harmony default export */ var polygon = (polygon_Polygon);
// EXTERNAL MODULE: ../node_modules/@antv/g-math/lib/polyline.js
var polyline = __webpack_require__("ng6+");
var polyline_default = /*#__PURE__*/__webpack_require__.n(polyline);

// CONCATENATED MODULE: ../node_modules/@antv/g-svg/esm/shape/polyline.js









var polyline_Polyline =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Polyline, _super);

  function Polyline() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.type = 'polyline';
    _this.canFill = true;
    _this.canStroke = true;
    return _this;
  }

  Polyline.prototype.getDefaultAttrs = function () {
    var attrs = _super.prototype.getDefaultAttrs.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, attrs), {
      startArrow: false,
      endArrow: false
    });
  }; // 更新属性时，检测是否更改了 points


  Polyline.prototype.onAttrChange = function (name, value, originValue) {
    _super.prototype.onAttrChange.call(this, name, value, originValue);

    if (['points'].indexOf(name) !== -1) {
      this._resetCache();
    }
  };

  Polyline.prototype._resetCache = function () {
    this.set('totalLength', null);
    this.set('tCache', null);
  };

  Polyline.prototype.createPath = function (context, targetAttrs) {
    var attrs = this.attr();
    var el = this.get('el');
    Object(esm["each"])(targetAttrs || attrs, function (value, attr) {
      if (attr === 'points' && Object(esm["isArray"])(value) && value.length >= 2) {
        el.setAttribute('points', value.map(function (point) {
          return point[0] + "," + point[1];
        }).join(' '));
      } else if (SVG_ATTR_MAP[attr]) {
        el.setAttribute(SVG_ATTR_MAP[attr], value);
      }
    });
  };
  /**
   * Get length of polyline
   * @return {number} length
   */


  Polyline.prototype.getTotalLength = function () {
    var points = this.attr().points; // get totalLength from cache

    var totalLength = this.get('totalLength');

    if (!Object(esm["isNil"])(totalLength)) {
      return totalLength;
    }

    this.set('totalLength', polyline_default.a.length(points));
    return this.get('totalLength');
  };
  /**
   * Get point according to ratio
   * @param {number} ratio
   * @return {Point} point
   */


  Polyline.prototype.getPoint = function (ratio) {
    var points = this.attr().points; // get tCache from cache

    var tCache = this.get('tCache');

    if (!tCache) {
      this._setTcache();

      tCache = this.get('tCache');
    }

    var subt;
    var index;
    Object(esm["each"])(tCache, function (v, i) {
      if (ratio >= v[0] && ratio <= v[1]) {
        subt = (ratio - v[0]) / (v[1] - v[0]);
        index = i;
      }
    });
    return line_default.a.pointAt(points[index][0], points[index][1], points[index + 1][0], points[index + 1][1], subt);
  };

  Polyline.prototype._setTcache = function () {
    var points = this.attr().points;

    if (!points || points.length === 0) {
      return;
    }

    var totalLength = this.getTotalLength();

    if (totalLength <= 0) {
      return;
    }

    var tempLength = 0;
    var tCache = [];
    var segmentT;
    var segmentL;
    Object(esm["each"])(points, function (p, i) {
      if (points[i + 1]) {
        segmentT = [];
        segmentT[0] = tempLength / totalLength;
        segmentL = line_default.a.length(p[0], p[1], points[i + 1][0], points[i + 1][1]);
        tempLength += segmentL;
        segmentT[1] = tempLength / totalLength;
        tCache.push(segmentT);
      }
    });
    this.set('tCache', tCache);
  };
  /**
   * Get start tangent vector
   * @return {Array}
   */


  Polyline.prototype.getStartTangent = function () {
    var points = this.attr().points;
    var result = [];
    result.push([points[1][0], points[1][1]]);
    result.push([points[0][0], points[0][1]]);
    return result;
  };
  /**
   * Get end tangent vector
   * @return {Array}
   */


  Polyline.prototype.getEndTangent = function () {
    var points = this.attr().points;
    var l = points.length - 1;
    var result = [];
    result.push([points[l - 1][0], points[l - 1][1]]);
    result.push([points[l][0], points[l][1]]);
    return result;
  };

  return Polyline;
}(shape_base);

/* harmony default export */ var shape_polyline = (polyline_Polyline);
// CONCATENATED MODULE: ../node_modules/@antv/g-svg/esm/util/format.js


var format_regexTags = /[MLHVQTCSAZ]([^MLHVQTCSAZ]*)/gi;
var format_regexDot = /[^\s\,]+/gi;
function parseRadius(radius) {
  var r1 = 0;
  var r2 = 0;
  var r3 = 0;
  var r4 = 0;

  if (Object(esm["isArray"])(radius)) {
    if (radius.length === 1) {
      r1 = r2 = r3 = r4 = radius[0];
    } else if (radius.length === 2) {
      r1 = r3 = radius[0];
      r2 = r4 = radius[1];
    } else if (radius.length === 3) {
      r1 = radius[0];
      r2 = r4 = radius[1];
      r3 = radius[2];
    } else {
      r1 = radius[0];
      r2 = radius[1];
      r3 = radius[2];
      r4 = radius[3];
    }
  } else {
    r1 = r2 = r3 = r4 = radius;
  }

  return {
    r1: r1,
    r2: r2,
    r3: r3,
    r4: r4
  };
}
function format_parsePath(path) {
  path = path || [];

  if (Object(esm["isArray"])(path)) {
    return path;
  }

  if (Object(esm["isString"])(path)) {
    path = path.match(format_regexTags);
    Object(esm["each"])(path, function (item, index) {
      item = item.match(format_regexDot);

      if (item[0].length > 1) {
        var tag = item[0].charAt(0);
        item.splice(1, 0, item[0].substr(1));
        item[0] = tag;
      }

      Object(esm["each"])(item, function (sub, i) {
        if (!isNaN(sub)) {
          item[i] = +sub;
        }
      });
      path[index] = item;
    });
    return path;
  }
}
// CONCATENATED MODULE: ../node_modules/@antv/g-svg/esm/shape/rect.js


/**
 * @fileoverview rect
 * @author dengfuping_develop@163.com
 */






var rect_Rect =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Rect, _super);

  function Rect() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.type = 'rect';
    _this.canFill = true;
    _this.canStroke = true;
    return _this;
  }

  Rect.prototype.getDefaultAttrs = function () {
    var attrs = _super.prototype.getDefaultAttrs.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, attrs), {
      x: 0,
      y: 0,
      width: 0,
      height: 0,
      radius: 0
    });
  };

  Rect.prototype.createPath = function (context, targetAttrs) {
    var _this = this;

    var attrs = this.attr();
    var el = this.get('el'); // 加上状态量，用来标记 path 是否已组装

    var completed = false; // 和组装 path 相关的绘图属性

    var pathRelatedAttrs = ['x', 'y', 'width', 'height', 'radius'];
    Object(esm["each"])(targetAttrs || attrs, function (value, attr) {
      if (pathRelatedAttrs.indexOf(attr) !== -1 && !completed) {
        el.setAttribute('d', _this._assembleRect(attrs));
        completed = true;
      } else if (pathRelatedAttrs.indexOf(attr) === -1 && SVG_ATTR_MAP[attr]) {
        el.setAttribute(SVG_ATTR_MAP[attr], value);
      }
    });
  };

  Rect.prototype._assembleRect = function (attrs) {
    var x = attrs.x;
    var y = attrs.y;
    var w = attrs.width;
    var h = attrs.height;
    var radius = attrs.radius;

    if (!radius) {
      return "M " + x + "," + y + " l " + w + ",0 l 0," + h + " l" + -w + " 0 z";
    }

    var r = parseRadius(radius);

    if (Object(esm["isArray"])(radius)) {
      if (radius.length === 1) {
        r.r1 = r.r2 = r.r3 = r.r4 = radius[0];
      } else if (radius.length === 2) {
        r.r1 = r.r3 = radius[0];
        r.r2 = r.r4 = radius[1];
      } else if (radius.length === 3) {
        r.r1 = radius[0];
        r.r2 = r.r4 = radius[1];
        r.r3 = radius[2];
      } else {
        r.r1 = radius[0];
        r.r2 = radius[1];
        r.r3 = radius[2];
        r.r4 = radius[3];
      }
    } else {
      r.r1 = r.r2 = r.r3 = r.r4 = radius;
    }

    var d = [["M " + (x + r.r1) + "," + y], ["l " + (w - r.r1 - r.r2) + ",0"], ["a " + r.r2 + "," + r.r2 + ",0,0,1," + r.r2 + "," + r.r2], ["l 0," + (h - r.r2 - r.r3)], ["a " + r.r3 + "," + r.r3 + ",0,0,1," + -r.r3 + "," + r.r3], ["l " + (r.r3 + r.r4 - w) + ",0"], ["a " + r.r4 + "," + r.r4 + ",0,0,1," + -r.r4 + "," + -r.r4], ["l 0," + (r.r4 + r.r1 - h)], ["a " + r.r1 + "," + r.r1 + ",0,0,1," + r.r1 + "," + -r.r1], ['z']];
    return d.join(' ');
  };

  return Rect;
}(shape_base);

/* harmony default export */ var rect = (rect_Rect);
// EXTERNAL MODULE: ../node_modules/detect-browser/index.js
var detect_browser = __webpack_require__("5v/B");

// CONCATENATED MODULE: ../node_modules/@antv/g-svg/esm/shape/text.js




/**
 * @fileoverview text
 * @author dengfuping_develop@163.com
 */






var LETTER_SPACING = 0.3;
var BASELINE_MAP = {
  top: 'before-edge',
  middle: 'central',
  bottom: 'after-edge',
  alphabetic: 'baseline',
  hanging: 'hanging'
}; // for FireFox

var BASELINE_MAP_FOR_FIREFOX = {
  top: 'text-before-edge',
  middle: 'central',
  bottom: 'text-after-edge',
  alphabetic: 'alphabetic',
  hanging: 'hanging'
};
var ANCHOR_MAP = {
  left: 'left',
  start: 'left',
  center: 'middle',
  right: 'end',
  end: 'end'
};

var text_Text =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Text, _super);

  function Text() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.type = 'text';
    _this.canFill = true;
    _this.canStroke = true;
    return _this;
  }

  Text.prototype.getDefaultAttrs = function () {
    var attrs = _super.prototype.getDefaultAttrs.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, attrs), {
      x: 0,
      y: 0,
      text: null,
      fontSize: 12,
      fontFamily: 'sans-serif',
      fontStyle: 'normal',
      fontWeight: 'normal',
      fontVariant: 'normal',
      textAlign: 'start',
      textBaseline: 'bottom'
    });
  };

  Text.prototype.createPath = function (context, targetAttrs) {
    var _this = this;

    var attrs = this.attr();
    var el = this.get('el');

    this._setFont();

    Object(esm["each"])(targetAttrs || attrs, function (value, attr) {
      if (attr === 'text') {
        _this._setText("" + value);
      } else if (attr === 'matrix' && value) {
        setTransform(_this);
      } else if (SVG_ATTR_MAP[attr]) {
        el.setAttribute(SVG_ATTR_MAP[attr], value);
      }
    });
    el.setAttribute('paint-order', 'stroke');
    el.setAttribute('style', 'stroke-linecap:butt; stroke-linejoin:miter;');
  };

  Text.prototype._setFont = function () {
    var el = this.get('el');

    var _a = this.attr(),
        textBaseline = _a.textBaseline,
        textAlign = _a.textAlign;

    var browser = Object(detect_browser["detect"])();

    if (browser && browser.name === 'firefox') {
      // compatible with FireFox browser, ref: https://github.com/antvis/g/issues/119
      el.setAttribute('dominant-baseline', BASELINE_MAP_FOR_FIREFOX[textBaseline] || 'alphabetic');
    } else {
      el.setAttribute('alignment-baseline', BASELINE_MAP[textBaseline] || 'baseline');
    }

    el.setAttribute('text-anchor', ANCHOR_MAP[textAlign] || 'left');
  };

  Text.prototype._setText = function (text) {
    var el = this.get('el');

    var _a = this.attr(),
        x = _a.x,
        _b = _a.textBaseline,
        baseline = _b === void 0 ? 'bottom' : _b;

    if (!text) {
      el.innerHTML = '';
    } else if (~text.indexOf('\n')) {
      var textArr = text.split('\n');
      var textLen_1 = textArr.length - 1;
      var arr_1 = '';
      Object(esm["each"])(textArr, function (segment, i) {
        if (i === 0) {
          if (baseline === 'alphabetic') {
            arr_1 += "<tspan x=\"" + x + "\" dy=\"" + -textLen_1 + "em\">" + segment + "</tspan>";
          } else if (baseline === 'top') {
            arr_1 += "<tspan x=\"" + x + "\" dy=\"0.9em\">" + segment + "</tspan>";
          } else if (baseline === 'middle') {
            arr_1 += "<tspan x=\"" + x + "\" dy=\"" + -(textLen_1 - 1) / 2 + "em\">" + segment + "</tspan>";
          } else if (baseline === 'bottom') {
            arr_1 += "<tspan x=\"" + x + "\" dy=\"-" + (textLen_1 + LETTER_SPACING) + "em\">" + segment + "</tspan>";
          } else if (baseline === 'hanging') {
            arr_1 += "<tspan x=\"" + x + "\" dy=\"" + (-(textLen_1 - 1) - LETTER_SPACING) + "em\">" + segment + "</tspan>";
          }
        } else {
          arr_1 += "<tspan x=\"" + x + "\" dy=\"1em\">" + segment + "</tspan>";
        }
      });
      el.innerHTML = arr_1;
    } else {
      el.innerHTML = text;
    }
  };

  return Text;
}(shape_base);

/* harmony default export */ var shape_text = (text_Text);
// CONCATENATED MODULE: ../node_modules/@antv/g-svg/esm/shape/index.js












// CONCATENATED MODULE: ../node_modules/@antv/g-svg/esm/defs/gradient.js





/**
 * @fileoverview gradient
 * @author dengfuping_develop@163.com
 */


var gradient_regexLG = /^l\s*\(\s*([\d.]+)\s*\)\s*(.*)/i;
var gradient_regexRG = /^r\s*\(\s*([\d.]+)\s*,\s*([\d.]+)\s*,\s*([\d.]+)\s*\)\s*(.*)/i;
var gradient_regexColorStop = /[\d.]+:(#[^\s]+|[^\)]+\))/gi;

function addStop(steps) {
  var arr = steps.match(gradient_regexColorStop);

  if (!arr) {
    return '';
  }

  var stops = '';
  arr.sort(function (a, b) {
    a = a.split(':');
    b = b.split(':');
    return Number(a[0]) - Number(b[0]);
  });
  Object(esm["each"])(arr, function (item) {
    item = item.split(':');
    stops += "<stop offset=\"" + item[0] + "\" stop-color=\"" + item[1] + "\"></stop>";
  });
  return stops;
}

function parseLineGradient(color, el) {
  var arr = gradient_regexLG.exec(color);
  var angle = Object(esm["mod"])(Object(esm["toRadian"])(parseFloat(arr[1])), Math.PI * 2);
  var steps = arr[2];
  var start;
  var end;

  if (angle >= 0 && angle < 0.5 * Math.PI) {
    start = {
      x: 0,
      y: 0
    };
    end = {
      x: 1,
      y: 1
    };
  } else if (0.5 * Math.PI <= angle && angle < Math.PI) {
    start = {
      x: 1,
      y: 0
    };
    end = {
      x: 0,
      y: 1
    };
  } else if (Math.PI <= angle && angle < 1.5 * Math.PI) {
    start = {
      x: 1,
      y: 1
    };
    end = {
      x: 0,
      y: 0
    };
  } else {
    start = {
      x: 0,
      y: 1
    };
    end = {
      x: 1,
      y: 0
    };
  }

  var tanTheta = Math.tan(angle);
  var tanTheta2 = tanTheta * tanTheta;
  var x = (end.x - start.x + tanTheta * (end.y - start.y)) / (tanTheta2 + 1) + start.x;
  var y = tanTheta * (end.x - start.x + tanTheta * (end.y - start.y)) / (tanTheta2 + 1) + start.y;
  el.setAttribute('x1', start.x);
  el.setAttribute('y1', start.y);
  el.setAttribute('x2', x);
  el.setAttribute('y2', y);
  el.innerHTML = addStop(steps);
}

function parseRadialGradient(color, self) {
  var arr = gradient_regexRG.exec(color);
  var cx = parseFloat(arr[1]);
  var cy = parseFloat(arr[2]);
  var r = parseFloat(arr[3]);
  var steps = arr[4];
  self.setAttribute('cx', cx);
  self.setAttribute('cy', cy);
  self.setAttribute('r', r);
  self.innerHTML = addStop(steps);
}

var gradient_Gradient =
/** @class */
function () {
  function Gradient(cfg) {
    this.cfg = {};
    var el = null;
    var id = Object(esm["uniqueId"])('gradient_');

    if (cfg.toLowerCase()[0] === 'l') {
      el = createSVGElement('linearGradient');
      parseLineGradient(cfg, el);
    } else {
      el = createSVGElement('radialGradient');
      parseRadialGradient(cfg, el);
    }

    el.setAttribute('id', id);
    this.el = el;
    this.id = id;
    this.cfg = cfg;
    return this;
  }

  Gradient.prototype.match = function (type, attr) {
    return this.cfg === attr;
  };

  return Gradient;
}();

/* harmony default export */ var defs_gradient = (gradient_Gradient);
// CONCATENATED MODULE: ../node_modules/@antv/g-svg/esm/defs/shadow.js






/**
 * @fileoverview shadow
 * @author dengfuping_develop@163.com
 */


var ATTR_MAP = {
  shadowColor: 'color',
  shadowOpacity: 'opacity',
  shadowBlur: 'blur',
  shadowOffsetX: 'dx',
  shadowOffsetY: 'dy'
};
var SHADOW_DIMENSION = {
  x: '-40%',
  y: '-40%',
  width: '200%',
  height: '200%'
};

var shadow_Shadow =
/** @class */
function () {
  function Shadow(cfg) {
    this.type = 'filter';
    this.cfg = {};
    this.type = 'filter';
    var el = createSVGElement('filter'); // expand the filter region to fill in shadows

    Object(esm["each"])(SHADOW_DIMENSION, function (v, k) {
      el.setAttribute(k, v);
    });
    this.el = el;
    this.id = Object(esm["uniqueId"])('filter_');
    this.el.id = this.id;
    this.cfg = cfg;

    this._parseShadow(cfg, el);

    return this;
  }

  Shadow.prototype.match = function (type, cfg) {
    if (this.type !== type) {
      return false;
    }

    var flag = true;
    var config = this.cfg;
    Object(esm["each"])(Object.keys(config), function (attr) {
      if (config[attr] !== cfg[attr]) {
        flag = false;
        return false;
      }
    });
    return flag;
  };

  Shadow.prototype.update = function (name, value) {
    var config = this.cfg;
    config[ATTR_MAP[name]] = value;

    this._parseShadow(config, this.el);

    return this;
  };

  Shadow.prototype._parseShadow = function (config, el) {
    var child = "<feDropShadow\n      dx=\"" + (config.dx || 0) + "\"\n      dy=\"" + (config.dy || 0) + "\"\n      stdDeviation=\"" + (config.blur ? config.blur / 10 : 0) + "\"\n      flood-color=\"" + (config.color ? config.color : '#000') + "\"\n      flood-opacity=\"" + (config.opacity ? config.opacity : 1) + "\"\n      />";
    el.innerHTML = child;
  };

  return Shadow;
}();

/* harmony default export */ var defs_shadow = (shadow_Shadow);
// CONCATENATED MODULE: ../node_modules/@antv/g-svg/esm/defs/arrow.js




/**
 * @fileoverview arrow
 * @author dengfuping_develop@163.com
 */



var arrow_Arrow =
/** @class */
function () {
  function Arrow(attrs, type) {
    this.cfg = {};
    var el = createSVGElement('marker');
    var id = Object(esm["uniqueId"])('marker_');
    el.setAttribute('id', id);
    var shape = createSVGElement('path');
    shape.setAttribute('stroke', attrs.stroke || 'none');
    shape.setAttribute('fill', attrs.fill || 'none');
    el.appendChild(shape);
    el.setAttribute('overflow', 'visible');
    el.setAttribute('orient', 'auto-start-reverse');
    this.el = el;
    this.child = shape;
    this.id = id;
    var cfg = attrs[type === 'marker-start' ? 'startArrow' : 'endArrow'];
    this.stroke = attrs.stroke || '#000';

    if (cfg === true) {
      this._setDefaultPath(type, shape);
    } else {
      this.cfg = cfg; // when arrow config exists

      this._setMarker(attrs.lineWidth, shape);
    }

    return this;
  }

  Arrow.prototype.match = function () {
    return false;
  };

  Arrow.prototype._setDefaultPath = function (type, el) {
    var parent = this.el; // 默认箭头的边长为 10，夹角为 60 度

    el.setAttribute('d', "M0,0 L" + 10 * Math.cos(Math.PI / 6) + ",5 L0,10");
    parent.setAttribute('refX', "" + 10 * Math.cos(Math.PI / 6));
    parent.setAttribute('refY', "" + 5);
  };

  Arrow.prototype._setMarker = function (r, el) {
    var parent = this.el;
    var path = this.cfg.path;
    var d = this.cfg.d;

    if (Object(esm["isArray"])(path)) {
      path = path.map(function (segment) {
        return segment.join(' ');
      }).join('');
    }

    el.setAttribute('d', path);
    parent.appendChild(el);

    if (d) {
      parent.setAttribute('refX', "" + d / r);
    }
  };

  Arrow.prototype.update = function (fill) {
    var child = this.child;

    if (child.attr) {
      child.attr('fill', fill);
    } else {
      child.setAttribute('fill', fill);
    }
  };

  return Arrow;
}();

/* harmony default export */ var defs_arrow = (arrow_Arrow);
// CONCATENATED MODULE: ../node_modules/@antv/g-svg/esm/defs/clip.js


/**
 * @fileoverview clip
 * @author dengfuping_develop@163.com
 */



var clip_Clip =
/** @class */
function () {
  function Clip(cfg) {
    this.type = 'clip';
    this.cfg = {};
    var el = createSVGElement('clipPath');
    this.el = el;
    this.id = Object(esm["uniqueId"])('clip_');
    el.id = this.id;
    var shapeEl = cfg.cfg.el;
    el.appendChild(shapeEl);
    this.cfg = cfg;
    return this;
  }

  Clip.prototype.match = function () {
    return false;
  };

  Clip.prototype.remove = function () {
    var el = this.el;
    el.parentNode.removeChild(el);
  };

  return Clip;
}();

/* harmony default export */ var defs_clip = (clip_Clip);
// CONCATENATED MODULE: ../node_modules/@antv/g-svg/esm/defs/pattern.js


/**
 * @fileoverview pattern
 * @author dengfuping_develop@163.com
 */


var regexPR = /^p\s*\(\s*([axyn])\s*\)\s*(.*)/i;

var pattern_Pattern =
/** @class */
function () {
  function Pattern(cfg) {
    this.cfg = {};
    var el = createSVGElement('pattern');
    el.setAttribute('patternUnits', 'userSpaceOnUse');
    var child = createSVGElement('image');
    el.appendChild(child);
    var id = Object(esm["uniqueId"])('pattern_');
    el.id = id;
    this.el = el;
    this.id = id;
    this.cfg = cfg;
    var arr = regexPR.exec(cfg);
    var source = arr[2];
    child.setAttribute('href', source);
    var img = new Image();

    if (!source.match(/^data:/i)) {
      img.crossOrigin = 'Anonymous';
    }

    img.src = source;

    function onload() {
      el.setAttribute('width', "" + img.width);
      el.setAttribute('height', "" + img.height);
    }

    if (img.complete) {
      onload();
    } else {
      img.onload = onload; // Fix onload() bug in IE9

      img.src = img.src;
    }

    return this;
  }

  Pattern.prototype.match = function (type, attr) {
    return this.cfg === attr;
  };

  return Pattern;
}();

/* harmony default export */ var defs_pattern = (pattern_Pattern);
// CONCATENATED MODULE: ../node_modules/@antv/g-svg/esm/defs/index.js



/**
 * @fileoverview defs
 * @author dengfuping_develop@163.com
 */








var defs_Defs =
/** @class */
function () {
  function Defs(canvas) {
    var el = createSVGElement('defs');
    var id = Object(esm["uniqueId"])('defs_');
    el.id = id;
    canvas.appendChild(el);
    this.children = [];
    this.defaultArrow = {};
    this.el = el;
    this.canvas = canvas;
  }

  Defs.prototype.find = function (type, attr) {
    var children = this.children;
    var result = null;

    for (var i = 0; i < children.length; i++) {
      if (children[i].match(type, attr)) {
        result = children[i].id;
        break;
      }
    }

    return result;
  };

  Defs.prototype.findById = function (id) {
    var children = this.children;
    var flag = null;

    for (var i = 0; i < children.length; i++) {
      if (children[i].id === id) {
        flag = children[i];
        break;
      }
    }

    return flag;
  };

  Defs.prototype.add = function (item) {
    this.children.push(item);
    item.canvas = this.canvas;
    item.parent = this;
  };

  Defs.prototype.getDefaultArrow = function (attrs, name) {
    var stroke = attrs.stroke || attrs.strokeStyle;

    if (this.defaultArrow[stroke]) {
      return this.defaultArrow[stroke].id;
    }

    var arrow = new defs_arrow(attrs, name);
    this.defaultArrow[stroke] = arrow;
    this.el.appendChild(arrow.el);
    this.add(arrow);
    return arrow.id;
  };

  Defs.prototype.addGradient = function (cfg) {
    var gradient = new defs_gradient(cfg);
    this.el.appendChild(gradient.el);
    this.add(gradient);
    return gradient.id;
  };

  Defs.prototype.addArrow = function (attrs, name) {
    var arrow = new defs_arrow(attrs, name);
    this.el.appendChild(arrow.el);
    this.add(arrow);
    return arrow.id;
  };

  Defs.prototype.addShadow = function (cfg) {
    var shadow = new defs_shadow(cfg);
    this.el.appendChild(shadow.el);
    this.add(shadow);
    return shadow.id;
  };

  Defs.prototype.addPattern = function (cfg) {
    var pattern = new defs_pattern(cfg);
    this.el.appendChild(pattern.el);
    this.add(pattern);
    return pattern.id;
  };

  Defs.prototype.addClip = function (cfg) {
    var clip = new defs_clip(cfg);
    this.el.appendChild(clip.el);
    this.add(clip);
    return clip.id;
  };

  return Defs;
}();

/* harmony default export */ var defs = (defs_Defs);
// CONCATENATED MODULE: ../node_modules/@antv/g-svg/esm/canvas.js












var canvas_Canvas =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Canvas, _super);

  function Canvas(cfg) {
    return _super.call(this, Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, cfg), {
      autoDraw: true,
      // 设置渲染引擎为 canvas，只读属性
      renderer: 'svg'
    })) || this;
  }

  Canvas.prototype.getShapeBase = function () {
    return esm_shape_namespaceObject;
  };

  Canvas.prototype.getGroupBase = function () {
    return esm_group;
  }; // 覆盖 Container 中通过遍历的方式获取 shape 对象的逻辑，直接走 SVG 的 dom 拾取即可


  Canvas.prototype.getShape = function (x, y, ev) {
    var target = ev.target || ev.srcElement;

    if (!SHAPE_TO_TAGS[target.tagName]) {
      var parent_1 = target.parentNode;

      while (parent_1 && !SHAPE_TO_TAGS[parent_1.tagName]) {
        parent_1 = parent_1.parentNode;
      }

      target = parent_1;
    }

    return this.find(function (child) {
      return child.get('el') === target;
    });
  }; // 复写基类的方法生成标签


  Canvas.prototype.createDom = function () {
    var element = createSVGElement('svg');
    var context = new defs(element);
    element.setAttribute('width', "" + this.get('width'));
    element.setAttribute('height', "" + this.get('height')); // 缓存 context 对象

    this.set('context', context);
    return element;
  };
  /**
   * 一些方法调用会引起画布变化
   * @param {ChangeType} changeType 改变的类型
   */


  Canvas.prototype.onCanvasChange = function (changeType) {
    var context = this.get('context');
    var el = this.get('el');

    if (changeType === 'sort') {
      var children_1 = this.get('children');

      if (children_1 && children_1.length) {
        sortDom(this, function (a, b) {
          return children_1.indexOf(a) - children_1.indexOf(b) ? 1 : 0;
        });
      }
    } else if (changeType === 'clear') {
      // el maybe null for canvas
      if (el) {
        // 清空 SVG 元素
        el.innerHTML = '';
        var defsEl = context.el; // 清空 defs 元素

        defsEl.innerHTML = ''; // 将清空后的 defs 元素挂载到 el 下

        el.appendChild(defsEl);
      }
    } else if (changeType === 'matrix') {
      setTransform(this);
    } else if (changeType === 'clip') {
      setClip(this, context);
    } else if (changeType === 'changeSize') {
      el.setAttribute('width', "" + this.get('width'));
      el.setAttribute('height', "" + this.get('height'));
    }
  }; // 复写基类的 draw 方法


  Canvas.prototype.draw = function () {
    var context = this.get('context');
    var children = this.getChildren();
    setClip(this, context);

    if (children.length) {
      drawChildren(context, children);
    }
  };

  return Canvas;
}(g_base_esm["a" /* AbstractCanvas */]);

/* harmony default export */ var esm_canvas = (canvas_Canvas);
// CONCATENATED MODULE: ../node_modules/@antv/g-svg/esm/index.js


var pkg = __webpack_require__("1lby");

var version = pkg.version;




// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/util/get-path-points.js


function isValueEmpty(value) {
  if (value) {
    return false;
  }

  return value === null || value === undefined || isNaN(value);
}

function isYNil(point) {
  if (Object(esm["isArray"])(point)) {
    // 特殊处理 area 的关键点数据，其关键点结构为 [{x: 0, y: 1}, {x: 0, y: 2}]
    return isValueEmpty(point[1].y);
  }

  var value = point.y;
  return Object(esm["isArray"])(value) ? isValueEmpty(value[0]) : isValueEmpty(value);
}
/**
 * @ignore
 * 分割数据，用于处理在一组点数据中，y 对应的数值存在 null/undefined/NaN 的情况
 * 应用于折线图、区域图以及路径图
 *
 * ```typescript
 * // return [[{x: 1, y: 2}, {x: 3, y: 3}]]
 * getPathPoints([{x: 1, y: 2}, {x: 2, y: null}, {x: 3, y: 3}], true);
 * // return [[{x: 1, y: 2}], [{x: 3, y: 3}]]
 * getPathPoints([{x: 1, y: 2}, {x: 2, y: null}, {x: 3, y: 3}], false);
 * // return [[[{ x: 1, y: 10 }, { x: 2, y: 2 }], [{ x: 9, y: 34 }, { x: 1, y: 1 }]]]
 * getPathPoints([
 *   [{ x: 1, y: 10 }, { x: 2, y: 2 }],
 *   [{ x: 4, y: 2 }, { x: 8, y: NaN }],
 *   [{ x: 9, y: 34 }, { x: 1, y: 1 }],
 * ], true);
 * ```
 *
 * @param points 要进行处理点集合
 * @param connectNulls 是否连接空值数据
 * @returns 返回处理后的点集合
 */


function getPathPoints(points, connectNulls) {
  if (!points.length) {
    return [];
  }

  if (connectNulls) {
    // 即 y 值为空的场景
    var filtered = [];

    for (var i = 0, len = points.length; i < len; i++) {
      var point = points[i];

      if (!isYNil(point)) {
        filtered.push(point);
      }
    }

    return [filtered];
  }

  var result = [];
  var tmp = [];

  for (var i = 0, len = points.length; i < len; i++) {
    var point = points[i];

    if (isYNil(point)) {
      if (tmp.length) {
        result.push(tmp);
        tmp = [];
      }
    } else {
      tmp.push(point);
    }
  }

  if (tmp.length) {
    result.push(tmp);
  }

  return result;
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/util/get-style.js



/**
 * @ignore
 * 获取 Shape 的图形属性
 * @param cfg
 * @param isStroke 是否需要描边
 * @param isFill 是否需要填充
 * @param [sizeName] 可选，表示图形大小的属性，lineWidth 或者 r
 * @returns
 */

function get_style_getStyle(cfg, isStroke, isFill, sizeName) {
  if (sizeName === void 0) {
    sizeName = '';
  }

  var _a = cfg.style,
      style = _a === void 0 ? {} : _a,
      defaultStyle = cfg.defaultStyle,
      color = cfg.color,
      size = cfg.size;

  var attrs = _assign(_assign({}, defaultStyle), style);

  if (color) {
    if (isStroke) {
      if (!style.stroke) {
        // 如果用户在 style() 中配置了 stroke，则以用户配置的为准
        attrs.stroke = color;
      }
    }

    if (isFill) {
      if (!style.fill) {
        // 如果用户在 style() 中配置了 fill
        attrs.fill = color;
      }
    }
  }

  if (sizeName && Object(esm["isNil"])(style[sizeName]) && !Object(esm["isNil"])(size)) {
    // 如果用户在 style() 中配置了 lineWidth 或者 r 属性
    attrs[sizeName] = size;
  }

  return attrs;
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/util/split-points.js


/**
 * @ignore
 * 拆分点数据
 * @example
 * // result: [{x: 20, y: 20}, {x: 20, y: 30}]
 * splitPoints({x: 20,y: [20, 30]});
 * @example
 * // result: [{x: 20, y: 20}, {x: 30, y: 30}]
 * splitPoints({x: [20, 30],y: [20, 30]});
 * @param obj
 */

function splitPoints(obj) {
  // y 有可能是数组，对应原始数据中 y 为一个区间数据，如 [19, 30]，为了统一也将 x 转换为数组
  var x = obj.x;
  var y = Object(esm["isArray"])(obj.y) ? obj.y : [obj.y];
  return y.map(function (eachY, index) {
    return {
      x: Object(esm["isArray"])(x) ? x[index] : x,
      y: eachY
    };
  });
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/line/util.js
var LineSymbols = {
  line: function line(x, y, r) {
    return [['M', x - r, y], ['L', x + r, y]];
  },
  dot: function dot(x, y, r) {
    return [['M', x - r, y], ['L', x + r, y]];
  },
  dash: function dash(x, y, r) {
    return [['M', x - r, y], ['L', x + r, y]];
  },
  smooth: function smooth(x, y, r) {
    return [['M', x - r, y], ['A', r / 2, r / 2, 0, 1, 1, x, y], ['A', r / 2, r / 2, 0, 1, 0, x + r, y]];
  },
  hv: function hv(x, y, r) {
    return [['M', x - r - 1, y - 2.5], ['L', x, y - 2.5], ['L', x, y + 2.5], ['L', x + r + 1, y + 2.5]];
  },
  vh: function vh(x, y, r) {
    return [['M', x - r - 1, y + 2.5], ['L', x, y + 2.5], ['L', x, y - 2.5], ['L', x + r + 1, y - 2.5]];
  },
  hvh: function hvh(x, y, r) {
    return [['M', x - (r + 1), y + 2.5], ['L', x - r / 2, y + 2.5], ['L', x - r / 2, y - 2.5], ['L', x + r / 2, y - 2.5], ['L', x + r / 2, y + 2.5], ['L', x + r + 1, y + 2.5]];
  },
  vhv: function vhv(x, y) {
    // 宽 13px，高 8px
    return [['M', x - 5, y + 2.5], ['L', x - 5, y], ['L', x, y], ['L', x, y - 3], ['L', x, y + 3], ['L', x + 6.5, y + 3]];
  }
};
/**
 * Gets line marker
 * @ignore
 * @param markerCfg
 * @param shapeType
 * @returns 返回 Line 的 marker 配置
 */

function getLineMarker(markerCfg, shapeType) {
  var color = markerCfg.color;
  return {
    symbol: LineSymbols[shapeType],
    style: {
      lineWidth: 2,
      r: 6,
      stroke: color
    }
  };
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/line/index.js








function getShapeAttrs(cfg, smooth, constraint) {
  var isStack = cfg.isStack,
      connectNulls = cfg.connectNulls,
      isInCircle = cfg.isInCircle;
  var points = getPathPoints(cfg.points, connectNulls); // 根据 connectNulls 值处理 points

  var path = [];

  for (var i = 0, len = points.length; i < len; i++) {
    var eachLinePoints = points[i];
    path = path.concat(getPath(eachLinePoints, isInCircle, isStack, smooth, constraint));
  }

  var shapeAttrs = get_style_getStyle(cfg, true, false, 'lineWidth');
  shapeAttrs.path = path;
  return shapeAttrs;
} // 单条 path


function getSinglePath(points, isInCircle, smooth, constraint) {
  var path;

  if (!smooth) {
    path = path_getLinePath(points, false);

    if (isInCircle) {
      path.push(['Z']);
    }
  } else {
    // 直角坐标系下绘制曲线时限制最大值、最小值
    if (isInCircle && points.length) {
      points.push({
        x: points[0].x,
        y: points[0].y
      });
    }

    path = getSplinePath(points, false, constraint);
  }

  return path;
}

function getRangePath(points, isInCircle, isStack, smooth, constraint) {
  var topPoints = [];
  var bottomPoints = [];
  Object(esm["each"])(points, function (point) {
    var result = splitPoints(point);
    topPoints.push(result[1]); // 上边

    bottomPoints.push(result[0]); // 底边
  });
  var topPath = getSinglePath(topPoints, isInCircle, smooth, constraint);
  var bottomPath = getSinglePath(bottomPoints, isInCircle, smooth, constraint);

  if (isStack) {
    return topPath;
  }

  return topPath.concat(bottomPath);
}

function getPath(points, isInCircle, isStack, smooth, constraint) {
  var first = points[0];
  return Object(esm["isArray"])(first.y) ? getRangePath(points, isInCircle, isStack, smooth, constraint) : getSinglePath(points, isInCircle, smooth, constraint);
}

var LineShapeFactory = registerShapeFactory('line', {
  defaultShapeType: 'line'
}); // 这里因为代码公用，所以直接全部注册
// 'line' 默认折线；'dot' 点线 ···；'dash' 断线 - - -

Object(esm["each"])(['line', 'dot', 'dash', 'smooth'], function (shapeType) {
  registerShape('line', shapeType, {
    draw: function draw(cfg, container) {
      var smooth = shapeType === 'smooth';
      var constraint;

      if (smooth) {
        var _a = this.coordinate,
            start = _a.start,
            end = _a.end;
        constraint = [[start.x, end.y], [end.x, start.y]];
      }

      var attrs = getShapeAttrs(cfg, smooth, constraint);
      var shape = container.addShape({
        type: 'path',
        attrs: attrs,
        name: 'line'
      });
      return shape;
    },
    getMarker: function getMarker(markerCfg) {
      return getLineMarker(markerCfg, shapeType);
    }
  });
});
/* harmony default export */ var geometry_shape_line = (LineShapeFactory);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/path.js




/** 引入对应的 ShapeFactory */



/**
 * Path 几何标记。
 * 用于绘制路径图等。
 */

var geometry_path_Path =
/** @class */
function (_super) {
  __extends(Path, _super);

  function Path(cfg) {
    var _this = _super.call(this, cfg) || this;

    _this.type = 'path';
    _this.shapeType = 'line';
    var _a = cfg.connectNulls,
        connectNulls = _a === void 0 ? false : _a;
    _this.connectNulls = connectNulls;
    return _this;
  }
  /**
   * 创建所有的 Element 实例，对于 Path、Line、Area，一组数据对应一个 Element。
   * @param mappingData
   * @param [isUpdate]
   * @returns elements
   */


  Path.prototype.createElements = function (mappingData, index, isUpdate) {
    if (isUpdate === void 0) {
      isUpdate = false;
    } // Path 的每个 element 对应一组数据


    var _a = this,
        lastElementsMap = _a.lastElementsMap,
        elementsMap = _a.elementsMap,
        elements = _a.elements,
        container = _a.container;

    var elementId = this.getElementId(mappingData);
    var shapeCfg = this.getShapeInfo(mappingData);
    var result = lastElementsMap[elementId];

    if (!result) {
      var shapeFactory = this.getShapeFactory();
      result = new geometry_element({
        shapeFactory: shapeFactory,
        container: container,
        offscreenGroup: this.getOffscreenGroup()
      });
      result.geometry = this;
      result.animate = this.animateOption;
      result.draw(shapeCfg, isUpdate); // 绘制 shape
    } else {
      // element 已经创建
      var preShapeCfg = result.getModel();

      if (this.isCoordinateChanged || isModelChange(preShapeCfg, shapeCfg)) {
        result.animate = this.animateOption; // 通过绘制数据的变更来判断是否需要更新，因为用户有可能会修改图形属性映射

        result.update(shapeCfg); // 更新对应的 element
      }

      delete lastElementsMap[elementId];
    }

    elements.push(result);
    elementsMap[elementId] = result;
    return elements;
  };
  /**
   * 获取组成一条线（一组数据）的所有点以及数据
   * @param mappingData 映射后的数组
   */


  Path.prototype.getPointsAndData = function (mappingData) {
    var points = [];
    var data = [];

    for (var i = 0, len = mappingData.length; i < len; i++) {
      var obj = mappingData[i];
      points.push({
        x: obj.x,
        y: obj.y
      });
      data.push(obj[FIELD_ORIGIN]);
    }

    return {
      points: points,
      data: data
    };
  };

  Path.prototype.getShapeInfo = function (mappingData) {
    var shapeCfg = this.getDrawCfg(mappingData[0]);

    var _a = this.getPointsAndData(mappingData),
        points = _a.points,
        data = _a.data;

    shapeCfg.mappingData = mappingData;
    shapeCfg.data = data;
    shapeCfg.isStack = !!this.getAdjust('stack');
    shapeCfg.points = points;
    shapeCfg.connectNulls = this.connectNulls;
    return shapeCfg;
  };

  return Path;
}(geometry_base);

/* harmony default export */ var geometry_path = (geometry_path_Path);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/area/util.js





function util_getPath(points, isInCircle, smooth, registeredShape, constraint) {
  var topLinePoints = []; // area 区域上部分

  var bottomLinePoints = []; // area 区域下部分

  for (var i = 0, len = points.length; i < len; i++) {
    var point = points[i];
    topLinePoints.push(point[1]);
    bottomLinePoints.push(point[0]);
  }

  bottomLinePoints = bottomLinePoints.reverse();
  var path = [];
  Object(esm["each"])([topLinePoints, bottomLinePoints], function (pointsData, index) {
    var subPath = [];
    var parsedPoints = registeredShape.parsePoints(pointsData);
    var p1 = parsedPoints[0];

    if (isInCircle) {
      parsedPoints.push({
        x: p1.x,
        y: p1.y
      });
    }

    if (smooth) {
      subPath = getSplinePath(parsedPoints, false, constraint);
    } else {
      subPath = path_getLinePath(parsedPoints, false);
    }

    if (index > 0) {
      subPath[0][0] = 'L';
    }

    path = path.concat(subPath);
  });
  path.push(['Z']);
  return path;
}
/**
 * @ignore
 * Gets shape attrs
 * @param cfg
 * @param isStroke
 * @param smooth
 * @param registeredShape
 * @param [constraint]
 * @returns
 */


function util_getShapeAttrs(cfg, isStroke, smooth, registeredShape, constraint) {
  var attrs = get_style_getStyle(cfg, isStroke, !isStroke, 'lineWidth');
  var connectNulls = cfg.connectNulls,
      isInCircle = cfg.isInCircle,
      points = cfg.points;
  var pathPoints = getPathPoints(points, connectNulls); // 根据 connectNulls 配置获取图形关键点

  var path = [];

  for (var i = 0, len = pathPoints.length; i < len; i++) {
    var eachPoints = pathPoints[i];
    path = path.concat(util_getPath(eachPoints, isInCircle, smooth, registeredShape, constraint));
  }

  attrs.path = path;
  return attrs;
}
/**
 * @ignore
 * Gets constraint
 * @param coordinate
 * @returns constraint
 */

function getConstraint(coordinate) {
  var start = coordinate.start,
      end = coordinate.end;
  return [[start.x, end.y], [end.x, start.y]];
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/area/index.js




var AreaShapeFactory = registerShapeFactory('area', {
  defaultShapeType: 'area',
  getDefaultPoints: function getDefaultPoints(pointInfo) {
    // area 基本标记的绘制需要获取上下两边的顶点
    var x = pointInfo.x,
        y0 = pointInfo.y0;
    var y = Object(esm["isArray"])(pointInfo.y) ? pointInfo.y : [y0, pointInfo.y];
    return y.map(function (yItem) {
      return {
        x: x,
        y: yItem
      };
    });
  }
}); // Area 几何标记默认的 shape：填充的区域图

registerShape('area', 'area', {
  draw: function draw(cfg, container) {
    var attrs = util_getShapeAttrs(cfg, false, false, this);
    var shape = container.addShape({
      type: 'path',
      attrs: attrs,
      name: 'area'
    });
    return shape;
  },
  getMarker: function getMarker(markerCfg) {
    var color = markerCfg.color;
    return {
      symbol: function symbol(x, y, r) {
        if (r === void 0) {
          r = 5.5;
        }

        return [['M', x - r, y - 4], ['L', x + r, y - 4], ['L', x + r, y + 4], ['L', x - r, y + 4], ['Z']];
      },
      style: {
        r: 5,
        fill: color
      }
    };
  }
});
/* harmony default export */ var shape_area = (AreaShapeFactory);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/area.js




/**
 * Area 几何标记类。
 * 常用于绘制面积图。
 */

var area_Area =
/** @class */
function (_super) {
  __extends(Area, _super);

  function Area(cfg) {
    var _this = _super.call(this, cfg) || this;

    _this.type = 'area';
    _this.shapeType = 'area';
    /** 生成图形关键点 */

    _this.generatePoints = true;
    /**
     * 面积图是否从 0 基准线开始填充。
     * 1. 默认值为 `true`，表现如下：
     * ![image](https://gw.alipayobjects.com/zos/rmsportal/ZQqwUCczalrKqGgagOVp.png)
     * 2. 当值为 `false` 时，表现如下：
     * ![image](https://gw.alipayobjects.com/zos/rmsportal/yPswkaXvUpCYOdhocGwB.png)
     */

    _this.startOnZero = true;
    var _a = cfg.startOnZero,
        startOnZero = _a === void 0 ? true : _a,
        _b = cfg.sortable,
        sortable = _b === void 0 ? true : _b;
    _this.startOnZero = startOnZero; // 默认为 true

    _this.sortable = sortable; // Area 默认会对数据按照 x 轴字段进行正向排序

    return _this;
  }
  /**
   * 获取图形绘制的关键点以及数据
   * @param mappingData 映射后的数据
   */


  Area.prototype.getPointsAndData = function (mappingData) {
    var points = [];
    var data = [];

    for (var i = 0, len = mappingData.length; i < len; i++) {
      var obj = mappingData[i];
      points.push(obj.points);
      data.push(obj[FIELD_ORIGIN]);
    }

    return {
      points: points,
      data: data
    };
  };
  /**
   * 获取 Y 轴上的最小值
   * @returns y 字段最小值
   */


  Area.prototype.getYMinValue = function () {
    if (this.startOnZero) {
      return _super.prototype.getYMinValue.call(this);
    }

    var yScale = this.getYScale();
    return yScale.min;
  };

  return Area;
}(geometry_path);

/* harmony default export */ var geometry_area = (area_Area);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/edge/index.js





var EdgeShapeFactory = registerShapeFactory('edge', {
  defaultShapeType: 'line',
  getDefaultPoints: function getDefaultPoints(pointInfo) {
    return splitPoints(pointInfo);
  }
});
registerShape('edge', 'line', {
  draw: function draw(cfg, container) {
    var style = get_style_getStyle(cfg, true, false, 'lineWidth');
    var path = path_getLinePath(this.parsePoints(cfg.points), this.coordinate.isPolar);
    return container.addShape('path', {
      attrs: _assign(_assign({}, style), {
        path: path
      })
    });
  },
  getMarker: function getMarker(markerCfg) {
    return {
      symbol: 'circle',
      style: {
        r: 4.5,
        fill: markerCfg.color
      }
    };
  }
});
/* harmony default export */ var edge = (EdgeShapeFactory);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/edge.js



/**
 * Edge 几何标记，用于绘制关系图中的**边**图形，如：
 * 1. 流程图
 * 2. 树
 * 3. 弧长连接图
 * 4. 和弦图
 * 5. 桑基图
 */

var edge_Edge =
/** @class */
function (_super) {
  __extends(Edge, _super);

  function Edge() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.type = 'edge';
    _this.shapeType = 'edge';
    _this.generatePoints = true;
    return _this;
  }

  return Edge;
}(geometry_base);

/* harmony default export */ var geometry_edge = (edge_Edge);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/heatmap.js









/**
 * 用于绘制热力图。
 */

var heatmap_Heatmap =
/** @class */
function (_super) {
  __extends(Heatmap, _super);

  function Heatmap() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.type = 'heatmap';
    _this.paletteCache = {};
    return _this;
  }

  Heatmap.prototype.createElements = function (mappingData, index, isUpdate) {
    if (isUpdate === void 0) {
      isUpdate = false;
    }

    var range = this.prepareRange(mappingData);
    var radius = this.prepareSize();
    var blur = Object(esm["get"])(this.styleOption, ['style', 'shadowBlur']);

    if (!Object(esm["isNumber"])(blur)) {
      blur = radius / 2;
    }

    this.prepareGreyScaleBlurredCircle(radius, blur);
    this.drawWithRange(mappingData, range, radius, blur);
    return null;
  };
  /**
   * clear
   */


  Heatmap.prototype.clear = function () {
    _super.prototype.clear.call(this);

    this.clearShadowCanvasCtx();
    this.paletteCache = {};
  };

  Heatmap.prototype.prepareRange = function (data) {
    var colorAttr = this.getAttribute('color');
    var colorField = colorAttr.getFields()[0];
    var min = Infinity;
    var max = -Infinity;
    data.forEach(function (row) {
      var value = row[FIELD_ORIGIN][colorField];

      if (value > max) {
        max = value;
      }

      if (value < min) {
        min = value;
      }
    });

    if (min === max) {
      min = max - 1;
    }

    return [min, max];
  };

  Heatmap.prototype.prepareSize = function () {
    var radius = this.getDefaultValue('size');

    if (!Object(esm["isNumber"])(radius)) {
      radius = this.getDefaultSize();
    }

    return radius;
  };

  Heatmap.prototype.prepareGreyScaleBlurredCircle = function (radius, blur) {
    var grayScaleBlurredCanvas = this.getGrayScaleBlurredCanvas();
    var r2 = radius + blur;
    var ctx = grayScaleBlurredCanvas.getContext('2d');
    grayScaleBlurredCanvas.width = grayScaleBlurredCanvas.height = r2 * 2;
    ctx.clearRect(0, 0, grayScaleBlurredCanvas.width, grayScaleBlurredCanvas.height);
    ctx.shadowOffsetX = ctx.shadowOffsetY = r2 * 2;
    ctx.shadowBlur = blur;
    ctx.shadowColor = 'black';
    ctx.beginPath();
    ctx.arc(-r2, -r2, radius, 0, Math.PI * 2, true);
    ctx.closePath();
    ctx.fill();
  };

  Heatmap.prototype.drawWithRange = function (data, range, radius, blur) {
    // canvas size
    var _a = this.coordinate,
        start = _a.start,
        end = _a.end;
    var width = this.coordinate.getWidth();
    var height = this.coordinate.getHeight(); // value, range, etc

    var colorAttr = this.getAttribute('color');
    var valueField = colorAttr.getFields()[0]; // prepare shadow canvas context

    this.clearShadowCanvasCtx();
    var ctx = this.getShadowCanvasCtx(); // filter data

    if (range) {
      data = data.filter(function (row) {
        return row[FIELD_ORIGIN][valueField] <= range[1] && row[FIELD_ORIGIN][valueField] >= range[0];
      });
    } // step1. draw points with shadow


    var scale = this.scales[valueField];

    for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {
      var obj = data_1[_i];

      var _b = this.getDrawCfg(obj),
          x = _b.x,
          y = _b.y;

      var alpha = scale.scale(obj[FIELD_ORIGIN][valueField]);
      this.drawGrayScaleBlurredCircle(x - start.x, y - end.y, radius + blur, alpha, ctx);
    } // step2. convert pixels


    var colored = ctx.getImageData(0, 0, width, height);
    this.clearShadowCanvasCtx();
    this.colorize(colored);
    ctx.putImageData(colored, 0, 0);
    var imageShape = this.getImageShape();
    imageShape.attr('x', start.x);
    imageShape.attr('y', end.y);
    imageShape.attr('width', width);
    imageShape.attr('height', height);
    imageShape.attr('img', ctx.canvas);
    imageShape.set('origin', this.getShapeInfo(data)); // 存储绘图信息数据
  };

  Heatmap.prototype.getDefaultSize = function () {
    var position = this.getAttribute('position');
    var coordinate = this.coordinate;
    return Math.min(coordinate.getWidth() / (position.scales[0].ticks.length * 4), coordinate.getHeight() / (position.scales[1].ticks.length * 4));
  };

  Heatmap.prototype.clearShadowCanvasCtx = function () {
    var ctx = this.getShadowCanvasCtx();
    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);
  };

  Heatmap.prototype.getShadowCanvasCtx = function () {
    var canvas = this.shadowCanvas;

    if (!canvas) {
      canvas = document.createElement('canvas');
      this.shadowCanvas = canvas;
    }

    canvas.width = this.coordinate.getWidth();
    canvas.height = this.coordinate.getHeight();
    return canvas.getContext('2d');
  };

  Heatmap.prototype.getGrayScaleBlurredCanvas = function () {
    if (!this.grayScaleBlurredCanvas) {
      this.grayScaleBlurredCanvas = document.createElement('canvas');
    }

    return this.grayScaleBlurredCanvas;
  };

  Heatmap.prototype.drawGrayScaleBlurredCircle = function (x, y, r, alpha, ctx) {
    var grayScaleBlurredCanvas = this.getGrayScaleBlurredCanvas();
    ctx.globalAlpha = alpha;
    ctx.drawImage(grayScaleBlurredCanvas, x - r, y - r);
  };

  Heatmap.prototype.colorize = function (img) {
    var colorAttr = this.getAttribute('color');
    var pixels = img.data;
    var paletteCache = this.paletteCache;

    for (var i = 3; i < pixels.length; i += 4) {
      var alpha = pixels[i]; // get gradient color from opacity value

      if (Object(esm["isNumber"])(alpha)) {
        var palette = paletteCache[alpha] ? paletteCache[alpha] : color_util_esm.rgb2arr(colorAttr.gradient(alpha / 256));
        pixels[i - 3] = palette[0];
        pixels[i - 2] = palette[1];
        pixels[i - 1] = palette[2];
        pixels[i] = alpha;
      }
    }
  };

  Heatmap.prototype.getImageShape = function () {
    var imageShape = this.imageShape;

    if (imageShape) {
      return imageShape;
    }

    var container = this.container;
    imageShape = container.addShape({
      type: 'image',
      attrs: {}
    });
    this.imageShape = imageShape;
    return imageShape;
  };

  Heatmap.prototype.getShapeInfo = function (mappingData) {
    var shapeCfg = this.getDrawCfg(mappingData[0]);
    return _assign(_assign({}, shapeCfg), {
      mappingData: mappingData,
      data: this.getData(mappingData)
    });
  };

  Heatmap.prototype.getData = function (mappingData) {
    return mappingData.map(function (obj) {
      return obj[FIELD_ORIGIN];
    });
  };

  return Heatmap;
}(geometry_base);

/* harmony default export */ var heatmap = (heatmap_Heatmap);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/interval/util.js

/**
 * @ignore
 * 根据数据点生成矩形的四个关键点
 * @param pointInfo 数据点信息
 * @param [isPyramid] 是否为尖底漏斗图
 * @returns rect points 返回矩形四个顶点信息
 */

function getRectPoints(pointInfo, isPyramid) {
  if (isPyramid === void 0) {
    isPyramid = false;
  }

  var x = pointInfo.x,
      y = pointInfo.y,
      y0 = pointInfo.y0,
      size = pointInfo.size; // 有 4 种情况，
  // 1. x, y 都不是数组
  // 2. y是数组，x不是
  // 3. x是数组，y不是
  // 4. x, y 都是数组

  var yMin;
  var yMax;

  if (Object(esm["isArray"])(y)) {
    yMin = y[0], yMax = y[1];
  } else {
    yMin = y0;
    yMax = y;
  }

  var xMin;
  var xMax;

  if (Object(esm["isArray"])(x)) {
    xMin = x[0], xMax = x[1];
  } else {
    xMin = x - size / 2;
    xMax = x + size / 2;
  }

  var points = [{
    x: xMin,
    y: yMin
  }, {
    x: xMin,
    y: yMax
  }];

  if (isPyramid) {
    // 绘制尖底漏斗图
    // 金字塔漏斗图的关键点
    // 1
    // |   2
    // 0
    points.push({
      x: xMax,
      y: (yMax + yMin) / 2
    });
  } else {
    // 矩形的四个关键点，结构如下（左下角顺时针连接）
    // 1 ---- 2
    // |      |
    // 0 ---- 3
    points.push({
      x: xMax,
      y: yMax
    }, {
      x: xMax,
      y: yMin
    });
  }

  return points;
}
/**
 * @ignore
 * 根据矩形关键点绘制 path
 * @param points 关键点数组
 * @returns 返回矩形的 path
 */

function getRectPath(points) {
  var path = [];
  var firstPoint = points[0];
  path.push(['M', firstPoint.x, firstPoint.y]);

  for (var i = 1, len = points.length; i < len; i++) {
    path.push(['L', points[i].x, points[i].y]);
  }

  path.push(['L', firstPoint.x, firstPoint.y]); // 需要闭合

  path.push(['z']);
  return path;
}
/**
 * @ignore
 * 根据 funnel 关键点绘制漏斗图的 path
 * @param points 图形关键点信息
 * @param nextPoints 下一个数据的图形关键点信息
 * @param isPyramid 是否为尖底漏斗图
 * @returns 返回漏斗图的图形 path
 */

function getFunnelPath(points, nextPoints, isPyramid) {
  var path = [];

  if (!Object(esm["isNil"])(nextPoints)) {
    path.push(['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['L', nextPoints[1].x, nextPoints[1].y], ['L', nextPoints[0].x, nextPoints[0].y], ['Z']);
  } else if (isPyramid) {
    // 金字塔最底部
    path.push(['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['L', points[2].x, points[2].y], ['L', points[2].x, points[2].y], ['Z']);
  } else {
    // 漏斗图最底部
    path.push(['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['L', points[2].x, points[2].y], ['L', points[3].x, points[3].y], ['Z']);
  }

  return path;
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/interval/index.js




/** Interval 的 shape 工厂 */

var IntervalShapeFactory = registerShapeFactory('interval', {
  defaultShapeType: 'rect',
  getDefaultPoints: function getDefaultPoints(pointInfo) {
    return getRectPoints(pointInfo);
  }
});
/** Inerval 默认 shape，填充的矩形 */

registerShape('interval', 'rect', {
  draw: function draw(cfg, container) {
    var style = get_style_getStyle(cfg, false, true);
    var path = this.parsePath(getRectPath(cfg.points));
    var shape = container.addShape('path', {
      attrs: _assign(_assign({}, style), {
        path: path
      }),
      name: 'interval'
    });
    return shape;
  },
  getMarker: function getMarker(markerCfg) {
    var color = markerCfg.color,
        isInPolar = markerCfg.isInPolar;

    if (isInPolar) {
      return {
        symbol: 'circle',
        style: {
          r: 4.5,
          fill: color
        }
      };
    }

    return {
      symbol: 'square',
      style: {
        r: 4,
        fill: color
      }
    };
  }
});
/* harmony default export */ var shape_interval = (IntervalShapeFactory);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/util/shape-size.js






 // 已经排序后的数据查找距离最小的

function findMinDistance(arr, scale) {
  var count = arr.length;
  var sourceArr = arr;

  if (Object(esm["isString"])(sourceArr[0])) {
    // 日期类型的 values 经常上文本类型，所以需要转换一下
    sourceArr = arr.map(function (v) {
      return scale.translate(v);
    });
  }

  var distance = sourceArr[1] - sourceArr[0];

  for (var i = 2; i < count; i++) {
    var tmp = sourceArr[i] - sourceArr[i - 1];

    if (distance > tmp) {
      distance = tmp;
    }
  }

  return distance;
}

function getDodgeCount(dataArray, dodgeBy) {
  if (dodgeBy) {
    var mergeData = Object(esm["flatten"])(dataArray);
    var values = Object(esm["valuesOfKey"])(mergeData, dodgeBy);
    return values.length;
  }

  return dataArray.length;
}
/** @ignore */


function getDefaultSize(geometry) {
  var theme = geometry.theme;
  var coordinate = geometry.coordinate;
  var xScale = geometry.getXScale();
  var xValues = xScale.values;
  var dataArray = geometry.beforeMappingData;
  var count = xValues.length;

  if (xScale.isLinear && xValues.length > 1) {
    // Linear 类型用户有可能设置了 min, max 范围所以需要根据数据最小区间计算 count
    xValues.sort();
    var interval = findMinDistance(xValues, xScale);
    count = (xScale.max - xScale.min) / interval;

    if (xValues.length > count) {
      count = xValues.length;
    }
  }

  var range = xScale.range;
  var normalizedSize = 1 / count;
  var wr = 1;

  if (coordinate.isPolar) {
    if (coordinate.isTransposed && count > 1) {
      // 极坐标下多层环图
      wr = theme.multiplePieWidthRatio;
    } else {
      wr = theme.roseWidthRatio;
    }
  } else {
    if (xScale.isLinear) {
      normalizedSize *= range[1] - range[0];
    }

    wr = theme.columnWidthRatio;
  }

  normalizedSize *= wr;

  if (geometry.getAdjust('dodge')) {
    var dodgeAdjust = geometry.getAdjust('dodge');
    var dodgeBy = dodgeAdjust.dodgeBy;
    var dodgeCount = getDodgeCount(dataArray, dodgeBy);
    normalizedSize = normalizedSize / dodgeCount;
  } // 最大和最小限制


  var maxColumnWidth = theme.maxColumnWidth,
      minColumnWidth = theme.minColumnWidth;
  var xDimensionLength = getXDimensionLength(geometry.coordinate);

  if (maxColumnWidth) {
    var normalizedMaxColumnWidth = maxColumnWidth / xDimensionLength;

    if (normalizedSize > normalizedMaxColumnWidth) {
      normalizedSize = normalizedMaxColumnWidth;
    }
  }

  if (minColumnWidth) {
    var normalizedMinColumnWidth = minColumnWidth / xDimensionLength;

    if (normalizedSize < normalizedMinColumnWidth) {
      normalizedSize = normalizedMinColumnWidth;
    }
  }

  return normalizedSize;
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/interval.js







/** 引入对应的 ShapeFactory */



/**
 * Interval 几何标记。
 * 用于绘制柱状图、饼图、条形图、玫瑰图等。
 */

var interval_Interval =
/** @class */
function (_super) {
  __extends(Interval, _super);

  function Interval() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.type = 'interval';
    _this.shapeType = 'interval';
    _this.generatePoints = true;
    return _this;
  }
  /**
   * 获取每条数据的 Shape 绘制信息
   * @param obj 经过分组 -> 数字化 -> adjust 调整后的数据记录
   * @returns
   */


  Interval.prototype.createShapePointsCfg = function (obj) {
    var cfg = _super.prototype.createShapePointsCfg.call(this, obj); // 计算每个 shape 的 size


    var size;
    var sizeAttr = this.getAttribute('size');

    if (sizeAttr) {
      size = this.getAttributeValues(sizeAttr, obj)[0]; // 归一化

      var coordinate = this.coordinate;
      var coordinateWidth = getXDimensionLength(coordinate);
      size = size / coordinateWidth;
    } else {
      if (!this.defaultSize) {
        this.defaultSize = getDefaultSize(this);
      }

      size = this.defaultSize;
    }

    cfg.size = size;
    return cfg;
  };
  /**
   * 调整 y 轴的 scale 范围。
   * 对于 Y 轴为数值轴柱状图，默认从 0 开始 生长。
   */


  Interval.prototype.adjustScale = function () {
    _super.prototype.adjustScale.call(this);

    var yScale = this.getYScale(); // 特殊逻辑：饼图需要填充满整个空间

    if (this.coordinate.type === 'theta') {
      yScale.change({
        nice: false,
        min: 0,
        // 发生过 stack 调整，yScale 的 max 被调整过，this.updateStackRange()
        max: Math.max(Math.max.apply(null, yScale.values), yScale.max)
      });
    } else {
      // 柱状图数值轴默认从 0 开始
      var scaleDefs = this.scaleDefs;
      var field = yScale.field,
          min = yScale.min,
          max = yScale.max,
          type = yScale.type;

      if (type !== 'time') {
        // time 类型不做调整
        // 柱状图的 Y 轴要从 0 开始生长，但是如果用户设置了则以用户的为准
        if (min > 0 && !Object(esm["get"])(scaleDefs, [field, 'min'])) {
          yScale.change({
            min: 0
          });
        } // 柱当柱状图全为负值时也需要从 0 开始生长，但是如果用户设置了则以用户的为准


        if (max <= 0 && !Object(esm["get"])(scaleDefs, [field, 'max'])) {
          yScale.change({
            max: 0
          });
        }
      }
    }
  };

  return Interval;
}(geometry_base);

/* harmony default export */ var geometry_interval = (interval_Interval);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/line.js


/** 引入 Path 对应的 ShapeFactory */


/**
 * Line 几何标记。
 * 常用于折线图的绘制。
 */

var geometry_line_Line =
/** @class */
function (_super) {
  __extends(Line, _super);

  function Line(cfg) {
    var _this = _super.call(this, cfg) || this;

    _this.type = 'line';
    var _a = cfg.sortable,
        sortable = _a === void 0 ? true : _a; // Line 默认会对数据按照 x 轴字段进行排序

    _this.sortable = sortable;
    return _this;
  }

  return Line;
}(geometry_path);

/* harmony default export */ var geometry_line = (geometry_line_Line);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/util/marker.js
/** @ignore */
var MarkerSymbols = {
  hexagon: function hexagon(x, y, r) {
    var diffX = r / 2 * Math.sqrt(3);
    return [['M', x, y - r], ['L', x + diffX, y - r / 2], ['L', x + diffX, y + r / 2], ['L', x, y + r], ['L', x - diffX, y + r / 2], ['L', x - diffX, y - r / 2], ['Z']];
  },
  bowtie: function bowtie(x, y, r) {
    var diffY = r - 1.5;
    return [['M', x - r, y - diffY], ['L', x + r, y + diffY], ['L', x + r, y - diffY], ['L', x - r, y + diffY], ['Z']];
  },
  cross: function cross(x, y, r) {
    return [['M', x - r, y - r], ['L', x + r, y + r], ['M', x + r, y - r], ['L', x - r, y + r]];
  },
  tick: function tick(x, y, r) {
    return [['M', x - r / 2, y - r], ['L', x + r / 2, y - r], ['M', x, y - r], ['L', x, y + r], ['M', x - r / 2, y + r], ['L', x + r / 2, y + r]];
  },
  plus: function plus(x, y, r) {
    return [['M', x - r, y], ['L', x + r, y], ['M', x, y - r], ['L', x, y + r]];
  },
  hyphen: function hyphen(x, y, r) {
    return [['M', x - r, y], ['L', x + r, y]];
  },
  line: function line(x, y, r) {
    return [['M', x, y - r], ['L', x, y + r]];
  }
};
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/point/util.js



var SHAPES = ['circle', 'square', 'bowtie', 'diamond', 'hexagon', 'triangle', 'triangle-down'];
var HOLLOW_SHAPES = ['cross', 'tick', 'plus', 'hyphen', 'line'];
/**
 * @ignore
 * Draws points
 * @param shape
 * @param cfg
 * @param container
 * @param shapeName
 * @param isStroke
 * @returns points
 */

function drawPoints(shape, cfg, container, shapeName, isStroke) {
  var style = get_style_getStyle(cfg, isStroke, !isStroke, 'r');
  var points = shape.parsePoints(cfg.points);
  var pointPosition = points[0];

  if (cfg.isStack) {
    pointPosition = points[1];
  } else if (points.length > 1) {
    var group = container.addGroup();

    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {
      var point = points_1[_i];
      group.addShape({
        type: 'marker',
        attrs: _assign(_assign(_assign({}, style), {
          symbol: MarkerSymbols[shapeName] || shapeName
        }), point)
      });
    }

    return group;
  }

  return container.addShape({
    type: 'marker',
    attrs: _assign(_assign(_assign({}, style), {
      symbol: MarkerSymbols[shapeName] || shapeName
    }), pointPosition)
  });
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/point/index.js





var PointShapeFactory = registerShapeFactory('point', {
  defaultShapeType: 'hollow-circle',
  getDefaultPoints: function getDefaultPoints(pointInfo) {
    return splitPoints(pointInfo);
  }
});
Object(esm["each"])(SHAPES, function (shapeName) {
  // 添加该 shape 对应的 hollow-shape
  registerShape('point', "hollow-" + shapeName, {
    draw: function draw(cfg, container) {
      return drawPoints(this, cfg, container, shapeName, true);
    },
    getMarker: function getMarker(markerCfg) {
      var color = markerCfg.color;
      return {
        symbol: MarkerSymbols[shapeName] || shapeName,
        style: {
          r: 4.5,
          stroke: color,
          fill: null
        }
      };
    }
  });
});
/* harmony default export */ var shape_point = (PointShapeFactory);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/point.js


/** 引入 Point 对应的 ShapeFactory */


/**
 * Point 几何标记。
 * 常用于绘制点图。
 */

var point_Point =
/** @class */
function (_super) {
  __extends(Point, _super);

  function Point() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.type = 'point';
    _this.shapeType = 'point';
    _this.generatePoints = true;
    return _this;
  }
  /**
   * 获取一个点的绘制信息。
   * @param mappingDatum
   * @returns draw cfg
   */


  Point.prototype.getDrawCfg = function (mappingDatum) {
    var shapeCfg = _super.prototype.getDrawCfg.call(this, mappingDatum);

    return _assign(_assign({}, shapeCfg), {
      isStack: !!this.getAdjust('stack')
    });
  };

  return Point;
}(geometry_base);

/* harmony default export */ var geometry_point = (point_Point);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/polygon/index.js





function polygon_getPath(points) {
  var flag = points[0];
  var i = 1;
  var path = [['M', flag.x, flag.y]];

  while (i < points.length) {
    var c = points[i];

    if (c.x !== points[i - 1].x || c.y !== points[i - 1].y) {
      path.push(['L', c.x, c.y]);

      if (c.x === flag.x && c.y === flag.y && i < points.length - 1) {
        flag = points[i + 1];
        path.push(['Z']);
        path.push(['M', flag.x, flag.y]);
        i++;
      }
    }

    i++;
  }

  if (!Object(esm["isEqual"])(Object(esm["last"])(path), flag)) {
    path.push(['L', flag.x, flag.y]);
  }

  path.push(['Z']);
  return path;
}

var PolygonShapeFactory = registerShapeFactory('polygon', {
  defaultShapeType: 'polygon',
  getDefaultPoints: function getDefaultPoints(pointInfo) {
    var points = [];
    Object(esm["each"])(pointInfo.x, function (subX, index) {
      var subY = pointInfo.y[index];
      points.push({
        x: subX,
        y: subY
      });
    });
    return points;
  }
});
registerShape('polygon', 'polygon', {
  draw: function draw(cfg, container) {
    if (!Object(esm["isEmpty"])(cfg.points)) {
      var shapeAttrs = get_style_getStyle(cfg, true, true);
      var path = this.parsePath(polygon_getPath(cfg.points));
      return container.addShape('path', {
        attrs: _assign(_assign({}, shapeAttrs), {
          path: path
        }),
        name: 'polygon'
      });
    }
  },
  getMarker: function getMarker(markerCfg) {
    var color = markerCfg.color;
    return {
      symbol: 'square',
      style: {
        r: 4,
        fill: color
      }
    };
  }
});
/* harmony default export */ var shape_polygon = (PolygonShapeFactory);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/polygon.js






/** 引入 Path 对应的 ShapeFactory */


/**
 * Polygon 几何标记。
 * 常用于绘制色块图、日历图等。
 */

var geometry_polygon_Polygon =
/** @class */
function (_super) {
  __extends(Polygon, _super);

  function Polygon() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.type = 'polygon';
    _this.shapeType = 'polygon';
    _this.generatePoints = true;
    return _this;
  }
  /**
   * 获取 Shape 的关键点数据。
   * @param obj
   * @returns
   */


  Polygon.prototype.createShapePointsCfg = function (obj) {
    var cfg = _super.prototype.createShapePointsCfg.call(this, obj);

    var x = cfg.x;
    var y = cfg.y;
    var temp; // x y 都是数组时，不做处理

    if (!(Object(esm["isArray"])(x) && Object(esm["isArray"])(y))) {
      var xScale = this.getXScale();
      var yScale = this.getYScale();
      var xCount = xScale.values.length;
      var yCount = yScale.values.length;
      var xOffset = 0.5 * 1 / xCount;
      var yOffset = 0.5 * 1 / yCount;

      if (xScale.isCategory && yScale.isCategory) {
        // 如果x,y都是分类
        x = [x - xOffset, x - xOffset, x + xOffset, x + xOffset];
        y = [y - yOffset, y + yOffset, y + yOffset, y - yOffset];
      } else if (Object(esm["isArray"])(x)) {
        // x 是数组
        temp = x;
        x = [temp[0], temp[0], temp[1], temp[1]];
        y = [y - yOffset / 2, y + yOffset / 2, y + yOffset / 2, y - yOffset / 2];
      } else if (Object(esm["isArray"])(y)) {
        // y 是数组
        temp = y;
        y = [temp[0], temp[1], temp[1], temp[0]];
        x = [x - xOffset / 2, x - xOffset / 2, x + xOffset / 2, x + xOffset / 2];
      }

      cfg.x = x;
      cfg.y = y;
    }

    return cfg;
  };

  return Polygon;
}(geometry_base);

/* harmony default export */ var geometry_polygon = (geometry_polygon_Polygon);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/schema/index.js

var SchemaShapeFactory = registerShapeFactory('schema', {
  defaultShapeType: ''
});
/* harmony default export */ var schema = (SchemaShapeFactory);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/schema.js



/** 引入对应的 ShapeFactory */



/**
 * Schema 几何标记，用于一些自定义图形的绘制，比如箱型图、股票图等。
 */

var schema_Schema =
/** @class */
function (_super) {
  __extends(Schema, _super);

  function Schema() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.type = 'schema';
    _this.shapeType = 'schema';
    _this.generatePoints = true;
    return _this;
  }
  /**
   * 获取 Shape 的关键点数据。
   * @param record
   * @returns
   */


  Schema.prototype.createShapePointsCfg = function (record) {
    var cfg = _super.prototype.createShapePointsCfg.call(this, record); // 计算每个 shape 的 size


    var size;
    var sizeAttr = this.getAttribute('size');

    if (sizeAttr) {
      size = this.getAttributeValues(sizeAttr, record)[0]; // 归一化

      var coordinate = this.coordinate;
      var coordinateWidth = getXDimensionLength(coordinate);
      size = size / coordinateWidth;
    } else {
      if (!this.defaultSize) {
        this.defaultSize = getDefaultSize(this);
      }

      size = this.defaultSize;
    }

    cfg.size = size;
    return cfg;
  };

  return Schema;
}(geometry_base);

/* harmony default export */ var geometry_schema = (schema_Schema);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/area/line.js


/**
 * 描边但不填充的区域图
 */

registerShape('area', 'line', {
  draw: function draw(cfg, container) {
    var attrs = util_getShapeAttrs(cfg, true, false, this);
    var shape = container.addShape({
      type: 'path',
      attrs: attrs,
      name: 'area'
    });
    return shape;
  },
  getMarker: function getMarker(markerCfg) {
    var color = markerCfg.color;
    return {
      symbol: function symbol(x, y, r) {
        if (r === void 0) {
          r = 5.5;
        }

        return [['M', x - r, y - 4], ['L', x + r, y - 4], ['L', x + r, y + 4], ['L', x - r, y + 4], ['Z']];
      },
      style: {
        r: 5,
        stroke: color,
        fill: null
      }
    };
  }
});
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/area/smooth.js


/**
 * 填充的平滑曲面图
 */

registerShape('area', 'smooth', {
  draw: function draw(cfg, container) {
    var coordinate = this.coordinate;
    var attrs = util_getShapeAttrs(cfg, false, true, this, getConstraint(coordinate));
    var shape = container.addShape({
      type: 'path',
      attrs: attrs,
      name: 'area'
    });
    return shape;
  },
  getMarker: function getMarker(markerCfg) {
    var color = markerCfg.color;
    return {
      symbol: function symbol(x, y, r) {
        if (r === void 0) {
          r = 5.5;
        }

        return [['M', x - r, y - 4], ['L', x + r, y - 4], ['L', x + r, y + 4], ['L', x - r, y + 4], ['Z']];
      },
      style: {
        r: 5,
        fill: color
      }
    };
  }
});
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/area/smooth-line.js


/** 描边的平滑曲面图 */

registerShape('area', 'smooth-line', {
  draw: function draw(cfg, container) {
    var coordinate = this.coordinate;
    var attrs = util_getShapeAttrs(cfg, true, true, this, getConstraint(coordinate));
    var shape = container.addShape({
      type: 'path',
      attrs: attrs,
      name: 'area'
    });
    return shape;
  },
  getMarker: function getMarker(markerCfg) {
    var color = markerCfg.color;
    return {
      symbol: function symbol(x, y, r) {
        if (r === void 0) {
          r = 5.5;
        }

        return [['M', x - r, y - 4], ['L', x + r, y - 4], ['L', x + r, y + 4], ['L', x - r, y + 4], ['Z']];
      },
      style: {
        r: 5,
        stroke: color,
        fill: null
      }
    };
  }
});
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/edge/util.js

/**
 * @ignore
 * Gets cpath
 * @param from
 * @param to
 * @returns
 */

function getCPath(from, to) {
  var points = [];
  points.push({
    x: from.x,
    y: from.y * 1 / 2 + to.y * 1 / 2
  });
  points.push({
    x: to.x,
    y: from.y * 1 / 2 + to.y * 1 / 2
  });
  points.push(to);
  var sub = ['C'];
  Object(esm["each"])(points, function (point) {
    sub.push(point.x, point.y);
  });
  return sub;
}
/**
 * @ignore
 * Gets qpath
 * @param to
 * @param center
 * @returns
 */

function getQPath(to, center) {
  var points = [];
  points.push({
    x: center.x,
    y: center.y
  });
  points.push(to);
  var sub = ['Q'];
  Object(esm["each"])(points, function (point) {
    sub.push(point.x, point.y);
  });
  return sub;
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/edge/arc.js







function getArcShapePath(from, to, center) {
  var sub = getQPath(to, center);
  var path = [['M', from.x, from.y]];
  path.push(sub);
  return path;
}

function getArcShapeWeightPath(points, center) {
  var arc1 = getQPath(points[1], center);
  var arc2 = getQPath(points[3], center);
  var path = [['M', points[0].x, points[0].y]];
  path.push(arc2);
  path.push(['L', points[3].x, points[3].y]);
  path.push(['L', points[2].x, points[2].y]);
  path.push(arc1);
  path.push(['L', points[1].x, points[1].y]);
  path.push(['L', points[0].x, points[0].y]);
  path.push(['Z']);
  return path;
} // 弧线包括笛卡尔坐标系下的半圆弧线、极坐标系下以圆心为控制点的二阶曲线、笛卡尔坐标系下带权重的三阶曲线、极坐标系下带权重的以圆心为控制点的二阶曲线


registerShape('edge', 'arc', {
  draw: function draw(cfg, container) {
    var style = get_style_getStyle(cfg, true, false, 'lineWidth');
    var points = cfg.points;
    var type = points.length > 2 ? 'weight' : 'normal';
    var path;

    if (cfg.isInCircle) {
      var center = {
        x: 0,
        y: 1
      };

      if (type === 'normal') {
        path = getArcShapePath(points[0], points[1], center);
      } else {
        style.fill = style.stroke;
        path = getArcShapeWeightPath(points, center);
      }

      path = this.parsePath(path);
      return container.addShape('path', {
        attrs: _assign(_assign({}, style), {
          path: path
        })
      });
    } else {
      if (type === 'normal') {
        points = this.parsePoints(points);
        path = getArcPath((points[1].x + points[0].x) / 2, points[0].y, Math.abs(points[1].x - points[0].x) / 2, Math.PI, Math.PI * 2);
        return container.addShape('path', {
          attrs: _assign(_assign({}, style), {
            path: path
          })
        });
      } else {
        var c1 = getCPath(points[1], points[3]);
        var c2 = getCPath(points[2], points[0]);
        path = [['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], c1, ['L', points[3].x, points[3].y], ['L', points[2].x, points[2].y], c2, ['Z']];
        path = this.parsePath(path);
        style.fill = style.stroke;
        return container.addShape('path', {
          attrs: _assign(_assign({}, style), {
            path: path
          })
        });
      }
    }
  },
  getMarker: function getMarker(markerCfg) {
    return {
      symbol: 'circle',
      style: {
        r: 4.5,
        fill: markerCfg.color
      }
    };
  }
});
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/edge/smooth.js





function getSmoothPath(from, to) {
  var sub = getCPath(from, to);
  var path = [['M', from.x, from.y]];
  path.push(sub);
  return path;
}

registerShape('edge', 'smooth', {
  draw: function draw(cfg, container) {
    var style = get_style_getStyle(cfg, true, false, 'lineWidth');
    var points = cfg.points;
    var path = this.parsePath(getSmoothPath(points[0], points[1]));
    return container.addShape('path', {
      attrs: _assign(_assign({}, style), {
        path: path
      })
    });
  },
  getMarker: function getMarker(markerCfg) {
    return {
      symbol: 'circle',
      style: {
        r: 4.5,
        fill: markerCfg.color
      }
    };
  }
});
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/edge/vhv.js




var CORNER_PERCENT = 1 / 3;

function getVHVPath(from, to) {
  var points = [];
  points.push({
    x: from.x,
    y: from.y * (1 - CORNER_PERCENT) + to.y * CORNER_PERCENT
  });
  points.push({
    x: to.x,
    y: from.y * (1 - CORNER_PERCENT) + to.y * CORNER_PERCENT
  });
  points.push(to);
  var path = [['M', from.x, from.y]];
  Object(esm["each"])(points, function (point) {
    path.push(['L', point.x, point.y]);
  });
  return path;
}

registerShape('edge', 'vhv', {
  draw: function draw(cfg, container) {
    var style = get_style_getStyle(cfg, true, false, 'lineWidth');
    var points = cfg.points;
    var path = this.parsePath(getVHVPath(points[0], points[1]));
    return container.addShape('path', {
      attrs: _assign(_assign({}, style), {
        path: path
      })
    });
  },
  getMarker: function getMarker(markerCfg) {
    return {
      symbol: 'circle',
      style: {
        r: 4.5,
        fill: markerCfg.color
      }
    };
  }
});
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/interval/funnel.js




/** 漏斗图 */

registerShape('interval', 'funnel', {
  getPoints: function getPoints(shapePoint) {
    shapePoint.size = shapePoint.size * 2; // 漏斗图的 size 是柱状图的两倍

    return getRectPoints(shapePoint);
  },
  draw: function draw(cfg, container) {
    var style = get_style_getStyle(cfg, false, true);
    var path = this.parsePath(getFunnelPath(cfg.points, cfg.nextPoints, false));
    var shape = container.addShape('path', {
      attrs: _assign(_assign({}, style), {
        path: path
      }),
      name: 'interval'
    });
    return shape;
  },
  getMarker: function getMarker(markerCfg) {
    var color = markerCfg.color;
    return {
      symbol: 'square',
      style: {
        r: 4,
        fill: color
      }
    };
  }
});
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/interval/hollow-rect.js




/** 描边柱状图 */

registerShape('interval', 'hollow-rect', {
  draw: function draw(cfg, container) {
    var style = get_style_getStyle(cfg, true, false);
    var path = this.parsePath(getRectPath(cfg.points));
    var shape = container.addShape('path', {
      attrs: _assign(_assign({}, style), {
        path: path
      }),
      name: 'interval'
    });
    return shape;
  },
  getMarker: function getMarker(markerCfg) {
    var color = markerCfg.color,
        isInPolar = markerCfg.isInPolar;

    if (isInPolar) {
      return {
        symbol: 'circle',
        style: {
          r: 4.5,
          stroke: color,
          fill: null
        }
      };
    }

    return {
      symbol: 'square',
      style: {
        r: 4,
        stroke: color,
        fill: null
      }
    };
  }
});
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/interval/line.js





 // 根据数据点生成 Line 的两个关键点

function getLinePoints(pointInfo) {
  var x = pointInfo.x,
      y = pointInfo.y,
      y0 = pointInfo.y0;

  if (Object(esm["isArray"])(y)) {
    return y.map(function (yItem, idx) {
      return {
        x: Object(esm["isArray"])(x) ? x[idx] : x,
        y: yItem
      };
    });
  } // 起始点从 y0 开始


  return [{
    x: x,
    y: y0
  }, {
    x: x,
    y: y
  }];
}

registerShape('interval', 'line', {
  getPoints: function getPoints(shapePoint) {
    return getLinePoints(shapePoint);
  },
  draw: function draw(cfg, container) {
    var style = get_style_getStyle(cfg, true, false, 'lineWidth');
    var path = this.parsePath(getRectPath(cfg.points));
    var shape = container.addShape('path', {
      attrs: _assign(_assign({}, style), {
        path: path
      }),
      name: 'interval'
    });
    return shape;
  },
  getMarker: function getMarker(markerCfg) {
    var color = markerCfg.color;
    return {
      symbol: function symbol(x, y, r) {
        return [['M', x, y - r], ['L', x, y + r]];
      },
      style: {
        r: 5,
        stroke: color
      }
    };
  }
});
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/interval/pyramid.js




/** 金字塔图，尖底漏斗图 */

registerShape('interval', 'pyramid', {
  getPoints: function getPoints(shapePoint) {
    shapePoint.size = shapePoint.size * 2; // 漏斗图的 size 是柱状图的两倍

    return getRectPoints(shapePoint, true);
  },
  draw: function draw(cfg, container) {
    var style = get_style_getStyle(cfg, false, true);
    var path = this.parsePath(getFunnelPath(cfg.points, cfg.nextPoints, true));
    var shape = container.addShape('path', {
      attrs: _assign(_assign({}, style), {
        path: path
      }),
      name: 'interval'
    });
    return shape;
  },
  getMarker: function getMarker(markerCfg) {
    var color = markerCfg.color;
    return {
      symbol: 'square',
      style: {
        r: 4,
        fill: color
      }
    };
  }
});
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/interval/tick.js



 // 根据数据点生成 tick shape 的 6 个关键点

function getTickPoints(pointInfo) {
  var x = pointInfo.x,
      y = pointInfo.y,
      y0 = pointInfo.y0,
      size = pointInfo.size;
  var yMin;
  var yMax;

  if (Object(esm["isArray"])(y)) {
    yMin = y[0], yMax = y[1];
  } else {
    yMin = y0;
    yMax = y;
  }

  var xMax = x + size / 2;
  var xMin = x - size / 2; // tick 关键点顺序
  // 4 - 1 - 5
  //     |
  // 2 - 0 - 3

  return [{
    x: x,
    y: yMin
  }, {
    x: x,
    y: yMax
  }, {
    x: xMin,
    y: yMin
  }, {
    x: xMax,
    y: yMin
  }, {
    x: xMin,
    y: yMax
  }, {
    x: xMax,
    y: yMax
  }];
} // 根据 tick 关键点绘制 path


function getTickPath(points) {
  return [['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['M', points[2].x, points[2].y], ['L', points[3].x, points[3].y], ['M', points[4].x, points[4].y], ['L', points[5].x, points[5].y]];
}
/** I 形状柱状图，常用于 error bar chart */


registerShape('interval', 'tick', {
  getPoints: function getPoints(shapePoint) {
    return getTickPoints(shapePoint);
  },
  draw: function draw(cfg, container) {
    var style = get_style_getStyle(cfg, true, false);
    var path = this.parsePath(getTickPath(cfg.points));
    var shape = container.addShape('path', {
      attrs: _assign(_assign({}, style), {
        path: path
      }),
      name: 'interval'
    });
    return shape;
  },
  getMarker: function getMarker(markerCfg) {
    var color = markerCfg.color;
    return {
      symbol: function symbol(x, y, r) {
        return [['M', x - r / 2, y - r], ['L', x + r / 2, y - r], ['M', x, y - r], ['L', x, y + r], ['M', x - r / 2, y + r], ['L', x + r / 2, y + r]];
      },
      style: {
        r: 5,
        stroke: color
      }
    };
  }
});
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/line/step.js








var interpolateCallback = function interpolateCallback(point, nextPoint, shapeType) {
  var x = point.x;
  var y = point.y;
  var nextX = nextPoint.x;
  var nextY = nextPoint.y;
  var result;

  switch (shapeType) {
    case 'hv':
      result = [{
        x: nextX,
        y: y
      }];
      break;

    case 'vh':
      result = [{
        x: x,
        y: nextY
      }];
      break;

    case 'hvh':
      var middleX = (nextX + x) / 2;
      result = [{
        x: middleX,
        y: y
      }, {
        x: middleX,
        y: nextY
      }];
      break;

    case 'vhv':
      var middleY = (y + nextY) / 2;
      result = [{
        x: x,
        y: middleY
      }, {
        x: nextX,
        y: middleY
      }];
      break;

    default:
      break;
  }

  return result;
};

function getInterpolatePoints(points, shapeType) {
  var result = [];
  Object(esm["each"])(points, function (point, index) {
    var nextPoint = points[index + 1];
    result.push(point);

    if (nextPoint) {
      var interpolatePoint = interpolateCallback(point, nextPoint, shapeType);
      result = result.concat(interpolatePoint);
    }
  });
  return result;
} // 插值的图形path，不考虑null


function getInterpolatePath(points) {
  return points.map(function (point, index) {
    return index === 0 ? ['M', point.x, point.y] : ['L', point.x, point.y];
  });
} // 插值的图形


function getInterpolateShapeAttrs(cfg, shapeType) {
  var points = getPathPoints(cfg.points, cfg.connectNulls); // 根据 connectNulls 值处理 points

  var path = [];
  Object(esm["each"])(points, function (eachLinePoints) {
    var interpolatePoints = getInterpolatePoints(eachLinePoints, shapeType);
    path = path.concat(getInterpolatePath(interpolatePoints));
  });
  return _assign(_assign({}, get_style_getStyle(cfg, true, false, 'lineWidth')), {
    path: path
  });
} // step line


Object(esm["each"])(['hv', 'vh', 'hvh', 'vhv'], function (shapeType) {
  registerShape('line', shapeType, {
    draw: function draw(cfg, container) {
      var attrs = getInterpolateShapeAttrs(cfg, shapeType);
      var shape = container.addShape({
        type: 'path',
        attrs: attrs,
        name: 'line'
      });
      return shape;
    },
    getMarker: function getMarker(markerCfg) {
      return getLineMarker(markerCfg, shapeType);
    }
  });
});
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/point/hollow.js



 // 添加 hollowShape

Object(esm["each"])(HOLLOW_SHAPES, function (shapeName) {
  registerShape('point', shapeName, {
    draw: function draw(cfg, container) {
      return drawPoints(this, cfg, container, shapeName, true);
    },
    getMarker: function getMarker(markerCfg) {
      var color = markerCfg.color;
      return {
        symbol: MarkerSymbols[shapeName],
        style: {
          r: 4.5,
          stroke: color,
          fill: null
        }
      };
    }
  });
});
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/point/image.js


registerShape('point', 'image', {
  draw: function draw(cfg, container) {
    var size = get_style_getStyle(cfg, false, false, 'r').r;
    var points = this.parsePoints(cfg.points);
    var pointPosition = points[0];

    if (cfg.isStack) {
      pointPosition = points[1];
    } else if (points.length > 1) {
      var group = container.addGroup();

      for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {
        var point = points_1[_i];
        group.addShape('image', {
          attrs: {
            x: point.x - size / 2,
            y: point.y - size,
            width: size,
            height: size,
            img: cfg.shape[1]
          }
        });
      }

      return group;
    }

    return container.addShape('image', {
      attrs: {
        x: pointPosition.x - size / 2,
        y: pointPosition.y - size,
        width: size,
        height: size,
        img: cfg.shape[1]
      }
    });
  },
  getMarker: function getMarker(markerCfg) {
    var color = markerCfg.color;
    return {
      symbol: 'circle',
      style: {
        r: 4.5,
        fill: color
      }
    };
  }
});
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/point/solid.js



 // 所有的 SHAPES 都注册一下

Object(esm["each"])(SHAPES, function (shapeName) {
  registerShape('point', shapeName, {
    draw: function draw(cfg, container) {
      return drawPoints(this, cfg, container, shapeName, false);
    },
    getMarker: function getMarker(markerCfg) {
      var color = markerCfg.color;
      return {
        symbol: MarkerSymbols[shapeName] || shapeName,
        style: {
          r: 4.5,
          fill: color
        }
      };
    }
  });
});
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/schema/box.js






function parseValue(value) {
  var array = !Object(esm["isArray"])(value) ? [value] : value;
  var min = array[0]; // 最小值

  var max = array[array.length - 1]; // 最大值

  var min1 = array.length > 1 ? array[1] : min;
  var max1 = array.length > 3 ? array[3] : max;
  var median = array.length > 2 ? array[2] : min1;
  return {
    min: min,
    max: max,
    min1: min1,
    max1: max1,
    median: median
  };
}

function getBoxPoints(x, y, size) {
  var halfSize = size / 2;
  var pointsArray;

  if (Object(esm["isArray"])(y)) {
    // 2维
    var _a = parseValue(y),
        min = _a.min,
        max = _a.max,
        median = _a.median,
        min1 = _a.min1,
        max1 = _a.max1;

    var minX = x - halfSize;
    var maxX = x + halfSize;
    pointsArray = [[minX, max], [maxX, max], [x, max], [x, max1], [minX, min1], [minX, max1], [maxX, max1], [maxX, min1], [x, min1], [x, min], [minX, min], [maxX, min], [minX, median], [maxX, median]];
  } else {
    // 只有一个维度
    y = Object(esm["isNil"])(y) ? 0.5 : y;

    var _b = parseValue(x),
        min = _b.min,
        max = _b.max,
        median = _b.median,
        min1 = _b.min1,
        max1 = _b.max1;

    var minY = y - halfSize;
    var maxY = y + halfSize;
    pointsArray = [[min, minY], [min, maxY], [min, y], [min1, y], [min1, minY], [min1, maxY], [max1, maxY], [max1, minY], [max1, y], [max, y], [max, minY], [max, maxY], [median, minY], [median, maxY]];
  }

  return pointsArray.map(function (arr) {
    return {
      x: arr[0],
      y: arr[1]
    };
  });
}

function getBoxPath(points) {
  return [['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['M', points[2].x, points[2].y], ['L', points[3].x, points[3].y], ['M', points[4].x, points[4].y], ['L', points[5].x, points[5].y], ['L', points[6].x, points[6].y], ['L', points[7].x, points[7].y], ['L', points[4].x, points[4].y], ['Z'], ['M', points[8].x, points[8].y], ['L', points[9].x, points[9].y], ['M', points[10].x, points[10].y], ['L', points[11].x, points[11].y], ['M', points[12].x, points[12].y], ['L', points[13].x, points[13].y]];
} // box shape


registerShape('schema', 'box', {
  getPoints: function getPoints(shapePoint) {
    var x = shapePoint.x,
        y = shapePoint.y,
        size = shapePoint.size;
    return getBoxPoints(x, y, size);
  },
  draw: function draw(cfg, container) {
    var style = get_style_getStyle(cfg, true, false);
    var path = this.parsePath(getBoxPath(cfg.points));
    var shape = container.addShape('path', {
      attrs: _assign(_assign({}, style), {
        path: path,
        name: 'schema'
      })
    });
    return shape;
  },
  getMarker: function getMarker(markerCfg) {
    var color = markerCfg.color;
    return {
      symbol: function symbol(x, y, r) {
        var yValues = [y - 6, y - 3, y, y + 3, y + 6];
        var points = getBoxPoints(x, yValues, r);
        return [['M', points[0].x + 1, points[0].y], ['L', points[1].x - 1, points[1].y], ['M', points[2].x, points[2].y], ['L', points[3].x, points[3].y], ['M', points[4].x, points[4].y], ['L', points[5].x, points[5].y], ['L', points[6].x, points[6].y], ['L', points[7].x, points[7].y], ['L', points[4].x, points[4].y], ['Z'], ['M', points[8].x, points[8].y], ['L', points[9].x, points[9].y], ['M', points[10].x + 1, points[10].y], ['L', points[11].x - 1, points[11].y], ['M', points[12].x, points[12].y], ['L', points[13].x, points[13].y]];
      },
      style: {
        r: 6,
        lineWidth: 1,
        stroke: color
      }
    };
  }
});
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/shape/schema/candle.js







function getCandleYValues(value) {
  var array = !Object(esm["isArray"])(value) ? [value] : value; // 从大到小排序

  var sorted = array.sort(function (a, b) {
    return b - a;
  });
  return padEnd(sorted, 4, sorted[sorted.length - 1]);
} // get candle shape's key points


function getCandlePoints(x, y, size) {
  var yValues = getCandleYValues(y);
  return [{
    x: x,
    y: yValues[0]
  }, {
    x: x,
    y: yValues[1]
  }, {
    x: x - size / 2,
    y: yValues[2]
  }, {
    x: x - size / 2,
    y: yValues[1]
  }, {
    x: x + size / 2,
    y: yValues[1]
  }, {
    x: x + size / 2,
    y: yValues[2]
  }, {
    x: x,
    y: yValues[2]
  }, {
    x: x,
    y: yValues[3]
  }];
}

function getCandlePath(points) {
  return [['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['M', points[2].x, points[2].y], ['L', points[3].x, points[3].y], ['L', points[4].x, points[4].y], ['L', points[5].x, points[5].y], ['Z'], ['M', points[6].x, points[6].y], ['L', points[7].x, points[7].y]];
} // k line shape


registerShape('schema', 'candle', {
  getPoints: function getPoints(shapePoint) {
    var x = shapePoint.x,
        y = shapePoint.y,
        size = shapePoint.size;
    return getCandlePoints(x, y, size);
  },
  draw: function draw(cfg, container) {
    var style = get_style_getStyle(cfg, true, true);
    var path = this.parsePath(getCandlePath(cfg.points));
    var shape = container.addShape('path', {
      attrs: _assign(_assign({}, style), {
        path: path,
        name: 'schema'
      })
    });
    return shape;
  },
  getMarker: function getMarker(markerCfg) {
    var color = markerCfg.color;
    return {
      symbol: function symbol(x, y, r) {
        var yValues = [y + 7.5, y + 3, y - 3, y - 7.5];
        var points = getCandlePoints(x, yValues, r);
        return [['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['M', points[2].x, points[2].y], ['L', points[3].x, points[3].y], ['L', points[4].x, points[4].y], ['L', points[5].x, points[5].y], ['Z'], ['M', points[6].x, points[6].y], ['L', points[7].x, points[7].y]];
      },
      style: {
        lineWidth: 1,
        stroke: color,
        fill: color,
        r: 6
      }
    };
  }
});
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/label/interval.js



/**
 * 柱状图 label
 */

var interval_IntervalLabel =
/** @class */
function (_super) {
  __extends(IntervalLabel, _super);

  function IntervalLabel() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  IntervalLabel.prototype.setLabelPosition = function (labelPointCfg, mappingData, index, position) {
    var coordinate = this.getCoordinate();
    var transposed = coordinate.isTransposed;
    var shapePoints = mappingData.points;
    var point0 = coordinate.convert(shapePoints[0]);
    var point1 = coordinate.convert(shapePoints[2]);
    var flag = transposed ? -1 : 1;
    var width = (point0.x - point1.x) / 2 * flag;
    var height = (point0.y - point1.y) / 2 * flag;

    switch (position) {
      case 'right':
        if (!transposed) {
          labelPointCfg.x -= width;
          labelPointCfg.y += height;
        }

        labelPointCfg.textAlign = Object(esm["get"])(labelPointCfg, 'textAlign', 'left');
        break;

      case 'left':
        if (transposed) {
          labelPointCfg.x -= width * 2;
        } else {
          labelPointCfg.x += width;
          labelPointCfg.y += height;
        }

        labelPointCfg.textAlign = Object(esm["get"])(labelPointCfg, 'textAlign', 'right');
        break;

      case 'bottom':
        if (transposed) {
          labelPointCfg.x -= width;
          labelPointCfg.y -= height;
        } else {
          labelPointCfg.y += height * 2;
        }

        labelPointCfg.textAlign = Object(esm["get"])(labelPointCfg, 'textAlign', 'center');
        labelPointCfg.textBaseline = Object(esm["get"])(labelPointCfg, 'textBaseline', 'top');
        break;

      case 'middle':
        if (transposed) {
          labelPointCfg.x -= width;
        } else {
          labelPointCfg.y += height;
        }

        labelPointCfg.textAlign = Object(esm["get"])(labelPointCfg, 'textAlign', 'center');
        break;

      case 'top':
        if (transposed) {
          labelPointCfg.x -= width;
          labelPointCfg.y += height;
        }

        labelPointCfg.textAlign = Object(esm["get"])(labelPointCfg, 'textAlign', 'center');
        labelPointCfg.textBaseline = Object(esm["get"])(labelPointCfg, 'textBaseline', 'bottom');
        break;

      default:
        break;
    }
  };

  return IntervalLabel;
}(label_base);

/* harmony default export */ var label_interval = (interval_IntervalLabel);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/label/polar.js





var HALF_PI = Math.PI / 2;
/**
 * 极坐标下的图形 label
 */

var polar_PolarLabel =
/** @class */
function (_super) {
  __extends(PolarLabel, _super);

  function PolarLabel() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
   * @override
   * 获取文本的对齐方式
   * @param point
   */


  PolarLabel.prototype.getLabelAlign = function (point) {
    var coordinate = this.getCoordinate();
    var align;

    if (point.labelEmit) {
      align = point.angle <= Math.PI / 2 && point.angle >= -Math.PI / 2 ? 'left' : 'right';
    } else if (!coordinate.isTransposed) {
      align = 'center';
    } else {
      var center = coordinate.getCenter();
      var offset = this.getDefaultOffset(point.offset);

      if (Math.abs(point.x - center.x) < 1) {
        align = 'center';
      } else if (point.angle > Math.PI || point.angle <= 0) {
        align = offset > 0 ? 'left' : 'right';
      } else {
        align = offset > 0 ? 'right' : 'left';
      }
    }

    return align;
  };
  /**
   * @override
   * 获取 label 的位置
   * @param labelCfg
   * @param mappingData
   * @param index
   */


  PolarLabel.prototype.getLabelPoint = function (labelCfg, mappingData, index) {
    var factor = 1;
    var arcPoint;
    var content = labelCfg.content[index];

    if (this.isToMiddle(mappingData)) {
      arcPoint = this.getMiddlePoint(mappingData.points);
    } else {
      if (labelCfg.content.length === 1 && index === 0) {
        index = 1;
      } else if (index === 0) {
        factor = -1;
      }

      arcPoint = this.getArcPoint(mappingData, index);
    }

    var offset = this.getDefaultOffset(labelCfg.offset) * factor;
    var middleAngle = this.getPointAngle(arcPoint);
    var isLabelEmit = labelCfg.labelEmit;
    var labelPositionCfg = this.getCirclePoint(middleAngle, offset, arcPoint, isLabelEmit);

    if (labelPositionCfg.r === 0) {
      // 如果文本位置位于圆心，则不展示
      labelPositionCfg.content = '';
    } else {
      labelPositionCfg.content = content;
      labelPositionCfg.angle = middleAngle;
      labelPositionCfg.color = mappingData.color;
    }

    labelPositionCfg.rotate = labelCfg.autoRotate ? this.getLabelRotate(middleAngle, offset, isLabelEmit) : labelCfg.rotate;
    labelPositionCfg.start = {
      x: arcPoint.x,
      y: arcPoint.y
    };
    return labelPositionCfg;
  };
  /**
   * 获取圆弧的位置
   */


  PolarLabel.prototype.getArcPoint = function (mappingData, index) {
    if (index === void 0) {
      index = 0;
    }

    if (!Object(esm["isArray"])(mappingData.x) && !Object(esm["isArray"])(mappingData.y)) {
      return {
        x: mappingData.x,
        y: mappingData.y
      };
    }

    return {
      x: Object(esm["isArray"])(mappingData.x) ? mappingData.x[index] : mappingData.x,
      y: Object(esm["isArray"])(mappingData.y) ? mappingData.y[index] : mappingData.y
    };
  };
  /**
   * 计算坐标线点在极坐标系下角度
   * @param point
   */


  PolarLabel.prototype.getPointAngle = function (point) {
    return getAngleByPoint(this.getCoordinate(), point);
  };
  /**
   * 获取坐标点与圆心形成的圆的位置信息
   * @param angle
   * @param offset
   * @param point
   * @param isLabelEmit
   */


  PolarLabel.prototype.getCirclePoint = function (angle, offset, point, isLabelEmit) {
    var coordinate = this.getCoordinate();
    var center = coordinate.getCenter();
    var r = getDistanceToCenter(coordinate, point);

    if (r === 0) {
      return _assign(_assign({}, center), {
        r: r
      });
    }

    var labelAngle = angle;

    if (coordinate.isTransposed && r > offset && !isLabelEmit) {
      var appendAngle = Math.asin(offset / (2 * r));
      labelAngle = angle + appendAngle * 2;
    } else {
      r = r + offset;
    }

    return {
      x: center.x + r * Math.cos(labelAngle),
      y: center.y + r * Math.sin(labelAngle),
      r: r
    };
  };
  /**
   * 获取 label 的旋转角度
   * @param angle
   * @param offset
   * @param isLabelEmit
   */


  PolarLabel.prototype.getLabelRotate = function (angle, offset, isLabelEmit) {
    var rotate = angle + HALF_PI;

    if (isLabelEmit) {
      rotate -= HALF_PI;
    }

    if (rotate) {
      if (rotate > HALF_PI) {
        rotate = rotate - Math.PI;
      } else if (rotate < -HALF_PI) {
        rotate = rotate + Math.PI;
      }
    }

    return rotate;
  }; // 获取中心的位置


  PolarLabel.prototype.getMiddlePoint = function (points) {
    var coordinate = this.getCoordinate();
    var count = points.length;
    var middlePoint = {
      x: 0,
      y: 0
    };
    Object(esm["each"])(points, function (point) {
      middlePoint.x += point.x;
      middlePoint.y += point.y;
    });
    middlePoint.x /= count;
    middlePoint.y /= count;
    middlePoint = coordinate.convert(middlePoint);
    return middlePoint;
  }; // 是否居中


  PolarLabel.prototype.isToMiddle = function (mappingData) {
    return mappingData.x.length > 2;
  };

  return PolarLabel;
}(label_base);

/* harmony default export */ var label_polar = (polar_PolarLabel);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/label/pie.js





/**
 * 饼图 label
 */

var pie_PieLabel =
/** @class */
function (_super) {
  __extends(PieLabel, _super);

  function PieLabel(geometry) {
    var _this = _super.call(this, geometry) || this;

    _this.defaultLayout = 'distribute';
    return _this;
  }

  PieLabel.prototype.getDefaultLabelCfg = function () {
    return Object(esm["get"])(this.geometry.theme, 'pieLabels', {});
  };

  PieLabel.prototype.getDefaultOffset = function (offset) {
    return offset || 0;
  };

  PieLabel.prototype.getLabelRotate = function (angle, offset, isLabelLimit) {
    var rotate;

    if (offset < 0) {
      rotate = angle;

      if (rotate > Math.PI / 2) {
        rotate = rotate - Math.PI;
      }

      if (rotate < -Math.PI / 2) {
        rotate = rotate + Math.PI;
      }
    }

    return rotate;
  };

  PieLabel.prototype.getLabelAlign = function (point) {
    var coordinate = this.getCoordinate();
    var center = coordinate.getCenter();
    var align;

    if (point.angle <= Math.PI / 2 && point.x >= center.x) {
      align = 'left';
    } else {
      align = 'right';
    }

    var offset = this.getDefaultOffset(point.offset);

    if (offset <= 0) {
      if (align === 'right') {
        align = 'left';
      } else {
        align = 'right';
      }
    }

    return align;
  };

  PieLabel.prototype.getArcPoint = function (point) {
    return point;
  };

  PieLabel.prototype.getPointAngle = function (point) {
    var coordinate = this.getCoordinate();
    var startPoint = {
      x: Object(esm["isArray"])(point.x) ? point.x[0] : point.x,
      y: point.y[0]
    };
    var endPoint = {
      x: Object(esm["isArray"])(point.x) ? point.x[1] : point.x,
      y: point.y[1]
    };
    var angle;
    var startAngle = getAngleByPoint(coordinate, startPoint);

    if (point.points && point.points[0].y === point.points[1].y) {
      angle = startAngle;
    } else {
      var endAngle = getAngleByPoint(coordinate, endPoint);

      if (startAngle >= endAngle) {
        // 100% pie slice
        endAngle = endAngle + Math.PI * 2;
      }

      angle = startAngle + (endAngle - startAngle) / 2;
    }

    return angle;
  };

  PieLabel.prototype.getCirclePoint = function (angle, offset, p) {
    var coordinate = this.getCoordinate();
    var center = coordinate.getCenter();
    var r = coordinate.getRadius() + offset;
    return _assign(_assign({}, polarToCartesian(center.x, center.y, r, angle)), {
      angle: angle,
      r: r
    });
  };

  return PieLabel;
}(label_polar);

/* harmony default export */ var pie = (pie_PieLabel);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/label/layout/distribute.js






/** label text和line距离 4px */

var MARGIN = 4;

function antiCollision(labelShapes, labels, lineHeight, plotRange, center, isRight) {
  // adjust y position of labels to avoid overlapping
  var overlapping = true;
  var start = plotRange.start;
  var end = plotRange.end;
  var startY = Math.min(start.y, end.y);
  var totalHeight = Math.abs(start.y - end.y);
  var i;
  var maxY = 0;
  var minY = Number.MIN_VALUE;
  var boxes = labels.map(function (label) {
    if (label.y > maxY) {
      maxY = label.y;
    }

    if (label.y < minY) {
      minY = label.y;
    }

    return {
      size: lineHeight,
      targets: [label.y - startY]
    };
  });
  minY -= startY;

  if (maxY - startY > totalHeight) {
    totalHeight = maxY - startY;
  }

  while (overlapping) {
    /* eslint no-loop-func: 0 */
    boxes.forEach(function (box) {
      var target = (Math.min.apply(minY, box.targets) + Math.max.apply(minY, box.targets)) / 2;
      box.pos = Math.min(Math.max(minY, target - box.size / 2), totalHeight - box.size); // box.pos = Math.max(0, target - box.size / 2);
    }); // detect overlapping and join boxes

    overlapping = false;
    i = boxes.length;

    while (i--) {
      if (i > 0) {
        var previousBox = boxes[i - 1];
        var box = boxes[i];

        if (previousBox.pos + previousBox.size > box.pos) {
          // overlapping
          previousBox.size += box.size;
          previousBox.targets = previousBox.targets.concat(box.targets); // overflow, shift up

          if (previousBox.pos + previousBox.size > totalHeight) {
            previousBox.pos = totalHeight - previousBox.size;
          }

          boxes.splice(i, 1); // removing box

          overlapping = true;
        }
      }
    }
  }

  i = 0; // step 4: normalize y and adjust x

  boxes.forEach(function (b) {
    var posInCompositeBox = startY + lineHeight / 2; // middle of the label

    b.targets.forEach(function () {
      labels[i].y = b.pos + posInCompositeBox;
      posInCompositeBox += lineHeight;
      i++;
    });
  });
  var labelsMap = {};

  for (var _i = 0, labelShapes_1 = labelShapes; _i < labelShapes_1.length; _i++) {
    var labelShape = labelShapes_1[_i];
    labelsMap[labelShape.get('id')] = labelShape;
  } // (x - cx)^2 + (y - cy)^2 = totalR^2


  labels.forEach(function (label) {
    var rPow2 = label.r * label.r;
    var dyPow2 = Math.pow(Math.abs(label.y - center.y), 2);

    if (rPow2 < dyPow2) {
      label.x = center.x;
    } else {
      var dx = Math.sqrt(rPow2 - dyPow2);

      if (!isRight) {
        // left
        label.x = center.x - dx;
      } else {
        // right
        label.x = center.x + dx;
      }
    } // adjust labelShape


    var labelShape = labelsMap[label.id];
    labelShape.attr('x', label.x);
    labelShape.attr('y', label.y);
  });
}

function distribute(items, labels, shapes, region) {
  var offset = items[0] ? items[0].offset : 0;
  var coordinate = labels[0].get('coordinate');
  var radius = coordinate.getRadius();
  var center = coordinate.getCenter();

  if (offset > 0) {
    // const lineHeight = get(this.geometry.theme, ['pieLabels', 'labelHeight'], 14);
    var lineHeight_1 = 14; // TODO

    var totalR = radius + offset;
    var totalHeight_1 = totalR * 2 + lineHeight_1 * 2;
    var plotRange_1 = {
      start: coordinate.start,
      end: coordinate.end
    }; // step 1: separate labels

    var halves_1 = [[], []];
    items.forEach(function (labelItem) {
      if (!labelItem) {
        return;
      }

      if (labelItem.textAlign === 'right') {
        // left
        halves_1[0].push(labelItem);
      } else {
        // right or center will be put on the right side
        halves_1[1].push(labelItem);
      }
    });
    halves_1.forEach(function (half, index) {
      // step 2: reduce labels
      var maxLabelsCountForOneSide = totalHeight_1 / lineHeight_1;

      if (half.length > maxLabelsCountForOneSide) {
        half.sort(function (a, b) {
          // sort by percentage DESC
          return b['..percent'] - a['..percent'];
        });
        half.splice(maxLabelsCountForOneSide, half.length - maxLabelsCountForOneSide);
      } // step 3: distribute position (x and y)


      half.sort(function (a, b) {
        // sort by y ASC
        return a.y - b.y;
      });
      antiCollision(labels, half, lineHeight_1, plotRange_1, center, index);
    });
  } // 配置 labelLine


  Object(esm["each"])(items, function (item) {
    if (item && item.labelLine) {
      var distance = item.offset;
      var angle = item.angle; // 贴近圆周

      var startPoint = polarToCartesian(center.x, center.y, radius, angle);
      var innerPoint = polarToCartesian(center.x, center.y, radius + distance / 2, angle);
      var itemX = item.x + Object(esm["get"])(item, 'offsetX', 0);
      var itemY = item.y + Object(esm["get"])(item, 'offsetY', 0);
      var endPoint = {
        x: itemX - Math.cos(angle) * MARGIN,
        y: itemY - Math.sin(angle) * MARGIN
      };

      if (!Object(esm["isObject"])(item.labelLine)) {
        // labelLine: true
        item.labelLine = {};
      }

      item.labelLine.path = ["M " + startPoint.x, startPoint.y + " Q" + innerPoint.x, innerPoint.y + " " + endPoint.x, endPoint.y].join(',');
    }
  });
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/label/layout/limit-in-canvas.js


/**
 * @ignore
 * 将 label 限制在画布范围内，简单得将超出画布的 label 往画布内调整
 * @param labels
 * @param cfg
 */

function limitInCanvas(items, labels, shapes, region) {
  Object(esm["each"])(labels, function (label) {
    var regionMinX = region.minX,
        regionMinY = region.minY,
        regionMaxX = region.maxX,
        regionMaxY = region.maxY;

    var _a = label.getCanvasBBox(),
        minX = _a.minX,
        minY = _a.minY,
        maxX = _a.maxX,
        maxY = _a.maxY,
        x = _a.x,
        y = _a.y,
        width = _a.width,
        height = _a.height;

    var finalX = x;
    var finalY = y;

    if (minX < regionMinX || maxX < regionMinX) {
      // 超出左侧
      finalX = regionMinX;
    }

    if (minY < regionMinY || maxY < regionMinY) {
      // 超出顶部
      finalY = regionMinY;
    }

    if (minX > regionMaxX) {
      // 整体超出右侧
      finalX = regionMaxX - width;
    } else if (maxX > regionMaxX) {
      // 超出右侧
      finalX = finalX - (maxX - regionMaxX);
    }

    if (minY > regionMaxY) {
      // 整体超出顶部
      finalY = regionMaxY - height;
    } else if (maxY > regionMaxY) {
      // 超出底部
      finalY = finalY - (maxY - regionMaxY);
    }

    if (finalX !== x || finalY !== y) {
      transform_translate(label, finalX - x, finalY - y);
    }
  });
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/label/layout/limit-in-shape.js

/**
 * @ignore
 * 根据图形元素以及 label 的 bbox 进行调整，如果 label 超出了 shape 的 bbox 则不展示
 */

function limitInShape(items, labels, shapes, region) {
  Object(esm["each"])(labels, function (label, index) {
    var labelBBox = label.getCanvasBBox(); // 文本有可能发生旋转

    var shapeBBox = shapes[index].getBBox();

    if (labelBBox.minX < shapeBBox.minX || labelBBox.minY < shapeBBox.minY || labelBBox.maxX > shapeBBox.maxX || labelBBox.maxY > shapeBBox.maxY) {
      label.remove(true); // 超出则不展示
    }
  });
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/geometry/label/layout/overlap.js


var MAX_TIMES = 100;
/**
 * @ignore
 * Greedy 贪婪算法
 */

var Greedy =
/** @class */
function () {
  function Greedy(cfg) {
    if (cfg === void 0) {
      cfg = {};
    }

    this.bitmap = {};
    var _a = cfg.xGap,
        xGap = _a === void 0 ? 1 : _a,
        _b = cfg.yGap,
        yGap = _b === void 0 ? 8 : _b;
    this.xGap = xGap;
    this.yGap = yGap;
  }

  Greedy.prototype.hasGap = function (bbox) {
    var hasGap = true;
    var bitmap = this.bitmap;
    var minX = Math.round(bbox.minX);
    var maxX = Math.round(bbox.maxX);
    var minY = Math.round(bbox.minY);
    var maxY = Math.round(bbox.maxY);

    for (var i = minX; i <= maxX; i += 1) {
      if (!bitmap[i]) {
        bitmap[i] = {};
        continue;
      }

      if (i === minX || i === maxX) {
        for (var j = minY; j <= maxY; j++) {
          if (bitmap[i][j]) {
            hasGap = false;
            break;
          }
        }
      } else {
        if (bitmap[i][minY] || bitmap[i][maxY]) {
          hasGap = false;
          break;
        }
      }
    }

    return hasGap;
  };

  Greedy.prototype.fillGap = function (bbox) {
    var bitmap = this.bitmap;
    var minX = Math.round(bbox.minX);
    var maxX = Math.round(bbox.maxX);
    var minY = Math.round(bbox.minY);
    var maxY = Math.round(bbox.maxY); // filling grid

    for (var i = minX; i <= maxX; i += 1) {
      if (!bitmap[i]) {
        bitmap[i] = {};
      }
    }

    for (var i = minX; i <= maxX; i += this.xGap) {
      for (var j = minY; j <= maxY; j += this.yGap) {
        bitmap[i][j] = true;
      }

      bitmap[i][maxY] = true;
    } // filling y edges


    if (this.yGap !== 1) {
      for (var i = minY; i <= maxY; i += 1) {
        bitmap[minX][i] = true;
        bitmap[maxX][i] = true;
      }
    } // filling x edges


    if (this.xGap !== 1) {
      for (var i = minX; i <= maxX; i += 1) {
        bitmap[i][minY] = true;
        bitmap[i][maxY] = true;
      }
    }
  };

  Greedy.prototype.destroy = function () {
    this.bitmap = {};
  };

  return Greedy;
}();

function spiralFill(label, greedy, maxTimes) {
  if (maxTimes === void 0) {
    maxTimes = MAX_TIMES;
  }

  var dt = -1;

  var _a = label.attr(),
      x = _a.x,
      y = _a.y;

  var bbox = label.getCanvasBBox();
  var maxDelta = Math.sqrt(bbox.width * bbox.width + bbox.height * bbox.height);
  var dxdy;
  var t = -dt;
  var dx = 0;
  var dy = 0;

  var f = function f(param) {
    var nt = param * 0.1;
    return [nt * Math.cos(nt), nt * Math.sin(nt)];
  };

  if (greedy.hasGap(bbox)) {
    greedy.fillGap(bbox);
    return true;
  }

  var canFill = false;
  var times = 0;
  var accessedCache = {};

  while (Math.min(Math.abs(dx), Math.abs(dy)) < maxDelta && times < maxTimes) {
    dxdy = f(t += dt);
    dx = ~~dxdy[0];
    dy = ~~dxdy[1];

    if (!dx && !dy || accessedCache[dx + "-" + dy]) {
      continue;
    }

    label.attr({
      x: x + dx,
      y: y + dy
    });

    if (dx + dy < 0) {
      label.attr('textAlign', 'right');
    }

    times++;

    if (greedy.hasGap(label.getCanvasBBox())) {
      greedy.fillGap(label.getCanvasBBox());
      canFill = true;
      accessedCache[dx + "-" + dy] = true;
      break;
    }
  }

  return canFill;
}
/*
 *  根据如下规则尝试放置label
 *                5
 *        ------------------
 *        |    1   |   0   |
 *    8   —————————4————————   7
 *        |    2   |   3   |
 *        ——————————————————
 *                 6
 */


function adjustLabelPosition(label, x, y, index) {
  var _a = label.getCanvasBBox(),
      width = _a.width,
      height = _a.height;

  var attrs = {
    x: x,
    y: y,
    textAlign: 'center'
  };

  switch (index) {
    case 0:
      attrs.y -= height + 1;
      attrs.x += 1;
      attrs.textAlign = 'left';
      break;

    case 1:
      attrs.y -= height + 1;
      attrs.x -= 1;
      attrs.textAlign = 'right';
      break;

    case 2:
      attrs.y += height + 1;
      attrs.x -= 1;
      attrs.textAlign = 'right';
      break;

    case 3:
      attrs.y += height + 1;
      attrs.x += 1;
      attrs.textAlign = 'left';
      break;

    case 5:
      attrs.y -= height * 2 + 2;
      break;

    case 6:
      attrs.y += height * 2 + 2;
      break;

    case 7:
      attrs.x += width + 1;
      attrs.textAlign = 'left';
      break;

    case 8:
      attrs.x -= width + 1;
      attrs.textAlign = 'right';
      break;

    default:
      break;
  }

  label.attr(attrs);
  return label.getCanvasBBox();
}
/**
 * @ignore
 * label 防遮挡布局：在不改变 label 位置的情况下对相互重叠的 label 进行调整。
 * 不同于 'overlap' 类型的布局，该布局不会对 label 的位置进行偏移调整。
 * @param labels 参与布局调整的 label 数组集合
 */


function fixedOverlap(items, labels, shapes, region) {
  var greedy = new Greedy();
  Object(esm["each"])(labels, function (label) {
    var labelShape = label.find(function (shape) {
      return shape.get('type') === 'text';
    });

    if (!spiralFill(labelShape, greedy)) {
      label.remove(true);
    }
  });
  greedy.destroy();
}
/**
 * @ignore
 * label 防遮挡布局：为了防止 label 之间相互覆盖同时保证尽可能多 的 label 展示，通过尝试将 label 向**四周偏移**来剔除放不下的 label
 * @param labels 参与布局调整的 label 数组集合
 */

function overlap(items, labels, shapes, region) {
  var greedy = new Greedy();
  Object(esm["each"])(labels, function (label) {
    var labelShape = label.find(function (shape) {
      return shape.get('type') === 'text';
    });

    var _a = labelShape.attr(),
        x = _a.x,
        y = _a.y;

    var canFill = false;

    for (var i = 0; i <= 8; i++) {
      var bbox = adjustLabelPosition(labelShape, x, y, i);

      if (greedy.hasGap(bbox)) {
        greedy.fillGap(bbox);
        canFill = true;
        break;
      }
    }

    if (!canFill) {
      label.remove(true);
    }
  });
  greedy.destroy();
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/animate/animation/fade.js

/**
 * @ignore
 * 单个 shape 动画
 * 渐现动画
 * @param shape 执行动画的图形元素
 * @param animateCfg 动画配置
 * @param cfg 额外信息
 */

function fadeIn(shape, animateCfg, cfg) {
  var endState = {
    fillOpacity: Object(esm["isNil"])(shape.attr('fillOpacity')) ? 1 : shape.attr('fillOpacity'),
    strokeOpacity: Object(esm["isNil"])(shape.attr('strokeOpacity')) ? 1 : shape.attr('strokeOpacity'),
    opacity: Object(esm["isNil"])(shape.attr('opacity')) ? 1 : shape.attr('opacity')
  };
  shape.attr({
    fillOpacity: 0,
    strokeOpacity: 0,
    opacity: 0
  });
  shape.animate(endState, animateCfg);
}
/**
 * @ignore
 * 单个 shape 动画
 * 渐隐动画
 * @param shape 执行动画的图形元素
 * @param animateCfg 动画配置
 * @param cfg 额外信息
 */

function fadeOut(shape, animateCfg, cfg) {
  var endState = {
    fillOpacity: 0,
    strokeOpacity: 0,
    opacity: 0
  };
  var easing = animateCfg.easing,
      duration = animateCfg.duration,
      delay = animateCfg.delay;
  shape.animate(endState, duration, easing, function () {
    shape.remove(true);
  }, delay);
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/animate/animation/util.js

/**
 * @ignore
 * 对图形元素进行矩阵变换，同时返回变换前的图形矩阵
 * @param shape 进行矩阵变换的图形
 * @param vector 矩阵变换的中心点
 * @param direct 矩阵变换的类型
 */

function transformShape(shape, vector, direct) {
  var scaledMatrix;
  var x = vector[0],
      y = vector[1];
  shape.applyToMatrix([x, y, 1]);

  if (direct === 'x') {
    shape.setMatrix(matrix_util_esm["a" /* ext */].transform(shape.getMatrix(), [['t', -x, -y], ['s', 0.01, 1], ['t', x, y]]));
    scaledMatrix = matrix_util_esm["a" /* ext */].transform(shape.getMatrix(), [['t', -x, -y], ['s', 100, 1], ['t', x, y]]);
  } else if (direct === 'y') {
    shape.setMatrix(matrix_util_esm["a" /* ext */].transform(shape.getMatrix(), [['t', -x, -y], ['s', 1, 0.01], ['t', x, y]]));
    scaledMatrix = matrix_util_esm["a" /* ext */].transform(shape.getMatrix(), [['t', -x, -y], ['s', 1, 100], ['t', x, y]]);
  } else if (direct === 'xy') {
    shape.setMatrix(matrix_util_esm["a" /* ext */].transform(shape.getMatrix(), [['t', -x, -y], ['s', 0.01, 0.01], ['t', x, y]]));
    scaledMatrix = matrix_util_esm["a" /* ext */].transform(shape.getMatrix(), [['t', -x, -y], ['s', 100, 100], ['t', x, y]]);
  }

  return scaledMatrix;
}
/**
 * 对图形元素进行剪切动画
 * @param element 进行动画的图形元素
 * @param animateCfg 动画配置
 * @param coordinate 当前坐标系
 * @param yMinPoint y 轴的最小值对应的图形坐标点
 * @param type 剪切动画的类型
 */

function doScaleAnimate(element, animateCfg, coordinate, yMinPoint, type) {
  var start = coordinate.start,
      end = coordinate.end;
  var width = coordinate.getWidth();
  var height = coordinate.getHeight();
  var x;
  var y;

  if (type === 'y') {
    x = start.x + width / 2;
    y = yMinPoint.y < start.y ? yMinPoint.y : start.y;
  } else if (type === 'x') {
    x = yMinPoint.x > start.x ? yMinPoint.x : start.x;
    y = start.y + height / 2;
  } else if (type === 'xy') {
    if (coordinate.isPolar) {
      x = coordinate.getCenter().x;
      y = coordinate.getCenter().y;
    } else {
      x = (start.x + end.x) / 2;
      y = (start.y + end.y) / 2;
    }
  }

  var endMatrix = transformShape(element, [x, y], type);
  element.animate({
    matrix: endMatrix
  }, animateCfg);
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/animate/animation/grow-in.js

/**
 * @ignore
 * 入场动画
 * x 方向的生长
 * @param element 执行动画的元素
 * @param animateCfg 动画配置
 * @param cfg 额外信息
 */

function growInX(element, animateCfg, cfg) {
  var coordinate = cfg.coordinate,
      minYPoint = cfg.minYPoint;
  doScaleAnimate(element, animateCfg, coordinate, minYPoint, 'x');
}
/**
 * @ignore
 * 入场动画
 * y 轴方向上的生长
 * @param element 执行动画的元素
 * @param animateCfg 动画配置
 * @param cfg 额外信息
 */

function growInY(element, animateCfg, cfg) {
  var coordinate = cfg.coordinate,
      minYPoint = cfg.minYPoint;
  doScaleAnimate(element, animateCfg, coordinate, minYPoint, 'y');
}
/**
 * @ignore
 * 入场
 * 中心点的向四周的生长动画
 * @param element 执行动画的元素
 * @param animateCfg 动画配置
 * @param cfg 额外信息
 */

function growInXY(element, animateCfg, cfg) {
  var coordinate = cfg.coordinate,
      minYPoint = cfg.minYPoint;
  doScaleAnimate(element, animateCfg, coordinate, minYPoint, 'xy');
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/animate/animation/path-in.js
/**
 * @ignore
 * 入场动画
 * path 的入场动画
 * @param element 执行动画的元素
 * @param animateCfg 动画配置
 * @param cfg 额外信息
 */
function pathIn(element, animateCfg, cfg) {
  // @ts-ignore
  var length = element.getTotalLength(); // 设置虚线样式

  element.attr('lineDash', [length]);
  element.animate(function (ratio) {
    return {
      // 对虚线偏移量做动画
      lineDashOffset: (1 - ratio) * length
    };
  }, animateCfg);
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/animate/animation/position-update.js
/**
 * @ignore
 * 坐标移动动画
 * @param shape 图形
 * @param animateCfg
 * @param cfg
 */
function positionUpdate(shape, animateCfg, cfg) {
  var toAttrs = cfg.toAttrs; // @ts-ignore

  var x = toAttrs.x; // @ts-ignore

  var y = toAttrs.y; // @ts-ignore

  delete toAttrs.x; // @ts-ignore

  delete toAttrs.y;
  shape.attr(toAttrs);
  shape.animate({
    x: x,
    y: y
  }, animateCfg);
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/animate/animation/scale-in.js

/**
 * @ignore
 * 沿着 x 方向放大的动画
 * @param shape
 * @param animateCfg
 * @param shapeModel
 */

function scaleInX(shape, animateCfg, cfg) {
  var box = shape.getBBox();
  var mappingData = shape.get('origin').mappingData;
  var points = mappingData.points; // x 数值如果为负值，那么应该从右往左生长

  var x = points[0].y - points[1].y > 0 ? box.maxX : box.minX;
  var y = (box.minY + box.maxY) / 2;
  shape.applyToMatrix([x, y, 1]);
  var matrix = matrix_util_esm["a" /* ext */].transform(shape.getMatrix(), [['t', -x, -y], ['s', 0.01, 1], ['t', x, y]]);
  shape.setMatrix(matrix);
  shape.animate({
    matrix: matrix_util_esm["a" /* ext */].transform(shape.getMatrix(), [['t', -x, -y], ['s', 100, 1], ['t', x, y]])
  }, animateCfg);
}
/**
 * @ignore
 * 沿着 y 方向放大的动画
 * @param shape
 * @param animateCfg
 * @param shapeModel
 */

function scaleInY(shape, animateCfg, cfg) {
  var box = shape.getBBox();
  var mappingData = shape.get('origin').mappingData;
  var x = (box.minX + box.maxX) / 2;
  var points = mappingData.points; // 数值如果为负值，那么应该从上往下生长，通过 shape 的关键点进行判断

  var y = points[0].y - points[1].y <= 0 ? box.maxY : box.minY;
  shape.applyToMatrix([x, y, 1]);
  var matrix = matrix_util_esm["a" /* ext */].transform(shape.getMatrix(), [['t', -x, -y], ['s', 1, 0.01], ['t', x, y]]);
  shape.setMatrix(matrix);
  shape.animate({
    matrix: matrix_util_esm["a" /* ext */].transform(shape.getMatrix(), [['t', -x, -y], ['s', 1, 100], ['t', x, y]])
  }, animateCfg);
}
// EXTERNAL MODULE: ../node_modules/@antv/g-canvas/lib/util/arc-params.js
var arc_params = __webpack_require__("rKUe");
var arc_params_default = /*#__PURE__*/__webpack_require__.n(arc_params);

// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/animate/animation/sector-path-update.js








function sector_path_update_getAngle(startPoint, arcPath) {
  var _a;

  var _b = arc_params_default()(startPoint, arcPath),
      startAngle = _b.startAngle,
      endAngle = _b.endAngle;

  if (!Object(esm["isNumberEqual"])(startAngle, -Math.PI * 0.5) && startAngle < -Math.PI * 0.5) {
    startAngle += Math.PI * 2;
  }

  if (!Object(esm["isNumberEqual"])(endAngle, -Math.PI * 0.5) && endAngle < -Math.PI * 0.5) {
    endAngle += Math.PI * 2;
  }

  if (arcPath[5] === 0) {
    // 逆时针，需要将 startAngle 和 endAngle 转置，因为 G2 极坐标系为顺时针方向
    _a = [endAngle, startAngle], startAngle = _a[0], endAngle = _a[1];
  }

  if (Object(esm["isNumberEqual"])(startAngle, Math.PI * 1.5)) {
    startAngle = Math.PI * -0.5;
  }

  if (Object(esm["isNumberEqual"])(endAngle, Math.PI * -0.5)) {
    endAngle = Math.PI * 1.5;
  }

  return {
    startAngle: startAngle,
    endAngle: endAngle
  };
}

function getArcStartPoint(path) {
  var startPoint;

  if (path[0] === 'M' || path[0] === 'L') {
    startPoint = [path[1], path[2]];
  } else if (path[0] === 'a' || path[0] === 'A') {
    startPoint = [path[path.length - 2], path[path.length - 1]];
  }

  return startPoint;
}
/**
 * path 存在以下情况
 * 1. 饼图不为整圆的 path，命令为 M, L, A, L, Z
 * 2. 饼图为整圆的 path，命令为 M, M, A, A, M, Z
 * 3. 环图不为整圆的 path，命令为 M, A, L, A, L, Z
 * 4. 环图为整圆的 path，命令为 M, A, A, M, A, A, M, Z
 * 5. radial-line, 不为整圆时的 path, 命令为 M, A, A, Z
 * 6. radial-line, 为整圆时的 path，命令为 M, A, A, A, A, Z
 * @param path theta 坐标系下圆弧的 path 命令
 */


function getArcInfo(path) {
  var _a;

  var startAngle;
  var endAngle;
  var arcPaths = path.filter(function (command) {
    return command[0] === 'A' || command[0] === 'a';
  });
  var firstArcPathCommand = arcPaths[0];
  var lastArcPathCommand = arcPaths.length > 1 ? arcPaths[1] : arcPaths[0];
  var firstIndex = path.indexOf(firstArcPathCommand);
  var lastIndex = path.indexOf(lastArcPathCommand);
  var firstStartPoint = getArcStartPoint(path[firstIndex - 1]);
  var lastStartPoint = getArcStartPoint(path[lastIndex - 1]);

  var _b = sector_path_update_getAngle(firstStartPoint, firstArcPathCommand),
      firstStartAngle = _b.startAngle,
      firstEndAngle = _b.endAngle;

  var _c = sector_path_update_getAngle(lastStartPoint, lastArcPathCommand),
      lastStartAngle = _c.startAngle,
      lastEndAngle = _c.endAngle;

  if (Object(esm["isNumberEqual"])(firstStartAngle, lastStartAngle) && Object(esm["isNumberEqual"])(firstEndAngle, lastEndAngle)) {
    startAngle = firstStartAngle;
    endAngle = firstEndAngle;
  } else {
    startAngle = Math.min(firstStartAngle, lastStartAngle);
    endAngle = Math.max(firstEndAngle, lastEndAngle);
  }

  var radius = firstArcPathCommand[1];
  var innerRadius = arcPaths[arcPaths.length - 1][1];

  if (radius < innerRadius) {
    _a = [innerRadius, radius], radius = _a[0], innerRadius = _a[1];
  } else if (radius === innerRadius) {
    innerRadius = 0;
  }

  return {
    startAngle: startAngle,
    endAngle: endAngle,
    radius: radius,
    innerRadius: innerRadius
  };
}
/**
 * @ignore
 * 饼图更新动画
 * @param shape 文本图形
 * @param animateCfg
 * @param cfg
 */


function sectorPathUpdate(shape, animateCfg, cfg) {
  var toAttrs = cfg.toAttrs,
      coordinate = cfg.coordinate; // @ts-ignore

  var path = toAttrs.path;
  var pathCommands = path.map(function (command) {
    return command[0];
  });

  var _a = getArcInfo(path),
      curStartAngle = _a.startAngle,
      curEndAngle = _a.endAngle,
      radius = _a.radius,
      innerRadius = _a.innerRadius;

  var _b = getArcInfo(shape.attr('path')),
      preStartAngle = _b.startAngle,
      preEndAngle = _b.endAngle;

  var center = coordinate.getCenter();
  var diffStartAngle = curStartAngle - preStartAngle;
  var diffEndAngle = curEndAngle - preEndAngle;
  shape.animate(function (ratio) {
    var onFrameStartAngle = preStartAngle + ratio * diffStartAngle;
    var onFrameEndAngle = preEndAngle + ratio * diffEndAngle;
    return _assign(_assign({}, toAttrs), {
      path: // hack, 兼容 /examples/bar/basic/demo/radial-line.ts 动画
      Object(esm["isEqual"])(pathCommands, ['M', 'A', 'A', 'Z']) ? getArcPath(center.x, center.y, radius, onFrameStartAngle, onFrameEndAngle) : getSectorPath(center.x, center.y, radius, onFrameStartAngle, onFrameEndAngle, innerRadius)
    });
  }, _assign(_assign({}, animateCfg), {
    callback: function callback() {
      // 将 path 保持原始态，否则会影响 setState() 的动画
      shape.attr('path', path);
    }
  }));
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/animate/animation/wave-in.js


/**
 * @ignore
 * 整体动画
 * 划入入场动画效果
 * @todo 放两张直角坐标系和极坐标系的图
 * @param element 参与动画的图形元素
 * @param animateCfg 动画配置
 * @param cfg 额外信息
 */

function waveIn(element, animateCfg, cfg) {
  var _a = getCoordinateClipCfg(cfg.coordinate, 20),
      type = _a.type,
      startState = _a.startState,
      endState = _a.endState; // 根据坐标系类型获取整体的剪切区域配置信息


  var clipShape = element.setClip({
    type: type,
    attrs: startState
  }); // 为 shape 设置剪切区域
  // 对剪切图形做动画

  clipShape.animate(endState, _assign(_assign({}, animateCfg), {
    callback: function callback() {
      if (element && !element.get('destroyed')) {
        element.set('clipShape', null);
      }

      clipShape.remove(true); // 动画结束需要将剪切图形销毁
    }
  }));
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/animate/animation/zoom.js




function doShapeZoom(shape, animateCfg, type) {
  if (shape.isGroup()) {
    Object(esm["each"])(shape.getChildren(), function (child) {
      doShapeZoom(child, animateCfg, type);
    });
  } else {
    var bbox = shape.getBBox();
    var x = (bbox.minX + bbox.maxX) / 2;
    var y = (bbox.minY + bbox.maxY) / 2;
    shape.applyToMatrix([x, y, 1]);

    if (type === 'zoomIn') {
      // 放大
      var matrix = matrix_util_esm["a" /* ext */].transform(shape.getMatrix(), [['t', -x, -y], ['s', 0.01, 0.01], ['t', x, y]]);
      shape.setMatrix(matrix);
      shape.animate({
        matrix: matrix_util_esm["a" /* ext */].transform(shape.getMatrix(), [['t', -x, -y], ['s', 100, 100], ['t', x, y]])
      }, animateCfg);
    } else {
      shape.animate({
        matrix: matrix_util_esm["a" /* ext */].transform(shape.getMatrix(), [['t', -x, -y], ['s', 0.01, 0.01], ['t', x, y]])
      }, _assign(_assign({}, animateCfg), {
        callback: function callback() {
          shape.remove(true);
        }
      }));
    }
  }
}
/**
 * @ignore
 * 单个 shape 动画
 * shape 以自身中心点逐渐放大的进入动画
 * @param shape 参与动画的图形元素
 * @param animateCfg 动画配置
 * @param cfg 额外信息
 */


function zoomIn(shape, animateCfg, cfg) {
  doShapeZoom(shape, animateCfg, 'zoomIn');
}
/**
 * @ignore
 * 单个 shape 动画
 * 消失动画，shape 以自身为中心点的逐渐缩小
 * @param shape 参与动画的图形元素
 * @param animateCfg 动画配置
 * @param cfg 额外信息
 */

function zoomOut(shape, animateCfg, cfg) {
  doShapeZoom(shape, animateCfg, 'zoomOut');
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/util/facet.js



/**
 * @ignore
 * 获取 facet title 的最佳默认配置，防止
 */

function getFactTitleConfig(direction) {
  if ([DIRECTION.TOP, DIRECTION.BOTTOM].includes(direction)) {
    return {
      offsetX: 0,
      offsetY: direction === DIRECTION.TOP ? -8 : 8,
      style: {
        textAlign: 'center',
        textBaseline: direction === DIRECTION.TOP ? 'bottom' : 'top'
      }
    };
  }

  if ([DIRECTION.LEFT, DIRECTION.RIGHT].includes(direction)) {
    return {
      offsetX: direction === DIRECTION.LEFT ? -8 : 8,
      offsetY: 0,
      style: {
        textAlign: direction === DIRECTION.LEFT ? 'right' : 'left',
        textBaseline: 'middle',
        rotate: Math.PI / 2
      }
    };
  }

  return {};
}
/**
 * @ignore
 * 根据角度，获取 ○ 上的点
 * @param center
 * @param r
 * @param angle
 */

function getAnglePoint(center, r, angle) {
  return {
    x: center.x + r * Math.cos(angle),
    y: center.y + r * Math.sin(angle)
  };
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/facet/circle.js






/**
 * @ignore
 * 镜像分面
 */

var facet_circle_Circle =
/** @class */
function (_super) {
  __extends(Circle, _super);

  function Circle() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Circle.prototype.getDefaultCfg = function () {
    return Object(esm["deepMix"])({}, _super.prototype.getDefaultCfg.call(this), {
      type: 'circle',
      showTitle: true,
      title: _super.prototype.getDefaultTitleCfg.call(this)
    });
  };

  Circle.prototype.render = function () {
    _super.prototype.render.call(this);

    if (this.cfg.showTitle) {
      this.renderTitle();
    }
  };
  /**
   * 根据总数和当前索引，计算分面的 region
   * @param count
   * @param index
   */


  Circle.prototype.getRegion = function (count, index) {
    var r = 1 / 2; // 画布半径
    // 画布圆心

    var center = {
      x: 0.5,
      y: 0.5
    }; // 每隔分面间隔的弧度

    var avgAngle = Math.PI * 2 / count; // 当前分面所在的弧度

    var angle = -1 * Math.PI / 2 + avgAngle * index; // TODO 没看懂

    var facetR = r / (1 + 1 / Math.sin(avgAngle / 2)); // 分面的中心点

    var middle = getAnglePoint(center, r - facetR, angle);
    var startAngle = Math.PI * 5 / 4; // 右上角

    var endAngle = Math.PI * 1 / 4; // 左下角

    return {
      start: getAnglePoint(middle, facetR, startAngle),
      end: getAnglePoint(middle, facetR, endAngle)
    };
  };

  Circle.prototype.afterEachView = function (view, facet) {
    this.processAxis(view, facet);
  };

  Circle.prototype.beforeEachView = function (view, facet) {};

  Circle.prototype.generateFacets = function (data) {
    var _this = this;

    var _a = this.cfg,
        fields = _a.fields,
        type = _a.type;
    var field = fields[0];

    if (!field) {
      throw new Error('No `fields` specified!');
    }

    var values = this.getFieldValues(data, field);
    var count = values.length;
    var rst = [];
    values.forEach(function (value, index) {
      var conditions = [{
        field: field,
        value: value,
        values: values
      }];
      var facetData = Object(esm["filter"])(data, _this.getFacetDataFilter(conditions));
      var facet = {
        type: type,
        data: facetData,
        region: _this.getRegion(count, index),
        columnValue: value,
        columnField: field,
        columnIndex: index,
        columnValuesLength: count,
        rowValue: null,
        rowField: null,
        rowIndex: 0,
        rowValuesLength: 1
      };
      rst.push(facet);
    });
    return rst;
  };

  Circle.prototype.getXAxisOption = function (x, axes, option, facet) {
    // 不做任何处理
    return option;
  };
  /**
   * 设置 y 坐标轴的文本、title 是否显示
   * @param y
   * @param axes
   * @param option
   * @param facet
   */


  Circle.prototype.getYAxisOption = function (y, axes, option, facet) {
    // 不做任何处理
    return option;
  };
  /**
   * facet title
   */


  Circle.prototype.renderTitle = function () {
    var _this = this;

    Object(esm["each"])(this.facets, function (facet) {
      var columnValue = facet.columnValue,
          view = facet.view;
      var config = Object(esm["deepMix"])({
        position: ['50%', '0%'],
        content: columnValue
      }, getFactTitleConfig(DIRECTION.TOP), _this.cfg.title);
      view.annotation().text(config);
    });
  };

  return Circle;
}(facet_Facet);

/* harmony default export */ var facet_circle = (facet_circle_Circle);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/facet/list.js






/**
 * @ignore
 * 镜像分面
 */

var list_List =
/** @class */
function (_super) {
  __extends(List, _super);

  function List() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  List.prototype.getDefaultCfg = function () {
    return Object(esm["deepMix"])({}, _super.prototype.getDefaultCfg.call(this), {
      type: 'list',
      cols: null,
      showTitle: true,
      title: _super.prototype.getDefaultTitleCfg.call(this)
    });
  };

  List.prototype.render = function () {
    _super.prototype.render.call(this);

    if (this.cfg.showTitle) {
      this.renderTitle();
    }
  };

  List.prototype.afterEachView = function (view, facet) {
    this.processAxis(view, facet);
  };

  List.prototype.beforeEachView = function (view, facet) {};

  List.prototype.generateFacets = function (data) {
    var _this = this;

    var fields = this.cfg.fields;
    var cols = this.cfg.cols;
    var columnField = fields[0];

    if (!columnField) {
      throw new Error('No `fields` specified!');
    }

    var colValues = this.getFieldValues(data, columnField);
    var count = colValues.length;
    cols = cols || count; // 每行有几列数据
    // 总共有几行

    var rows = this.getPageCount(count, cols);
    var rst = [];
    colValues.forEach(function (val, index) {
      // 当前 index 在那个行列
      var _a = _this.getRowCol(index, cols),
          row = _a.row,
          col = _a.col;

      var conditions = [{
        field: columnField,
        value: val,
        values: colValues
      }];
      var facetData = Object(esm["filter"])(data, _this.getFacetDataFilter(conditions));
      var facet = {
        type: _this.cfg.type,
        data: facetData,
        region: _this.getRegion(rows, cols, col, row),
        columnValue: val,
        rowValue: val,
        columnField: columnField,
        rowField: null,
        columnIndex: col,
        rowIndex: row,
        columnValuesLength: cols,
        rowValuesLength: rows,
        total: count
      };
      rst.push(facet);
    });
    return rst;
  };
  /**
   * 设置 x 坐标轴的文本、title 是否显示
   * @param x
   * @param axes
   * @param option
   * @param facet
   */


  List.prototype.getXAxisOption = function (x, axes, option, facet) {
    // 当是最后一行或者下面没有 view 时文本不显示
    if (facet.rowIndex !== facet.rowValuesLength - 1 && facet.columnValuesLength * facet.rowIndex + facet.columnIndex + 1 + facet.columnValuesLength <= facet.total) {
      return _assign(_assign({}, option), {
        label: null,
        title: null
      });
    }

    return option;
  };
  /**
   * 设置 y 坐标轴的文本、title 是否显示
   * @param y
   * @param axes
   * @param option
   * @param facet
   */


  List.prototype.getYAxisOption = function (y, axes, option, facet) {
    if (facet.columnIndex !== 0) {
      return _assign(_assign({}, option), {
        title: null,
        label: null
      });
    }

    return option;
  };
  /**
   * facet title
   */


  List.prototype.renderTitle = function () {
    var _this = this;

    Object(esm["each"])(this.facets, function (facet) {
      var columnValue = facet.columnValue,
          view = facet.view;
      var config = Object(esm["deepMix"])({
        position: ['50%', '0%'],
        content: columnValue
      }, getFactTitleConfig(DIRECTION.TOP), _this.cfg.title);
      view.annotation().text(config);
    });
  };
  /**
   * 计算分页数
   * @param total
   * @param pageSize
   */


  List.prototype.getPageCount = function (total, pageSize) {
    return Math.floor((total + pageSize - 1) / pageSize);
  };
  /**
   * 索引值在哪一页
   * @param index
   * @param pageSize
   */


  List.prototype.getRowCol = function (index, pageSize) {
    var row = Math.floor(index / pageSize);
    var col = index % pageSize;
    return {
      row: row,
      col: col
    };
  };

  return List;
}(facet_Facet);

/* harmony default export */ var facet_list = (list_List);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/facet/matrix.js





/**
 * @ignore
 * 镜像分面
 */

var matrix_Matrix =
/** @class */
function (_super) {
  __extends(Matrix, _super);

  function Matrix() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Matrix.prototype.getDefaultCfg = function () {
    return Object(esm["deepMix"])({}, _super.prototype.getDefaultCfg.call(this), {
      type: 'matrix',
      showTitle: false,
      columnTitle: _assign({}, _super.prototype.getDefaultTitleCfg.call(this)),
      rowTitle: _assign({}, _super.prototype.getDefaultTitleCfg.call(this))
    });
  };

  Matrix.prototype.render = function () {
    _super.prototype.render.call(this);

    if (this.cfg.showTitle) {
      this.renderTitle();
    }
  };

  Matrix.prototype.afterEachView = function (view, facet) {
    this.processAxis(view, facet);
  };

  Matrix.prototype.beforeEachView = function (view, facet) {};

  Matrix.prototype.generateFacets = function (data) {
    var _a = this.cfg,
        fields = _a.fields,
        type = _a.type; // 矩阵中行列相等，等于指定的字段个数

    var rowValuesLength = fields.length;
    var columnValuesLength = rowValuesLength;
    var rst = [];

    for (var i = 0; i < columnValuesLength; i++) {
      var columnField = fields[i];

      for (var j = 0; j < rowValuesLength; j++) {
        var rowField = fields[j];
        var facet = {
          type: type,
          data: data,
          region: this.getRegion(rowValuesLength, columnValuesLength, i, j),
          columnValue: columnField,
          rowValue: rowField,
          columnField: columnField,
          rowField: rowField,
          columnIndex: i,
          rowIndex: j,
          columnValuesLength: columnValuesLength,
          rowValuesLength: rowValuesLength
        };
        rst.push(facet);
      }
    }

    return rst;
  };
  /**
   * 设置 x 坐标轴的文本、title 是否显示
   * @param x
   * @param axes
   * @param option
   * @param facet
   */


  Matrix.prototype.getXAxisOption = function (x, axes, option, facet) {
    // 最后一行显示
    if (facet.rowIndex !== facet.rowValuesLength - 1) {
      return _assign(_assign({}, option), {
        label: null,
        title: null
      });
    }

    return option;
  };
  /**
   * 设置 y 坐标轴的文本、title 是否显示
   * @param y
   * @param axes
   * @param option
   * @param facet
   */


  Matrix.prototype.getYAxisOption = function (y, axes, option, facet) {
    // 第一列显示
    if (facet.columnIndex !== 0) {
      return _assign(_assign({}, option), {
        title: null,
        label: null
      });
    }

    return option;
  };
  /**
   * facet title
   */


  Matrix.prototype.renderTitle = function () {
    var _this = this;

    Object(esm["each"])(this.facets, function (facet, facetIndex) {
      var columnIndex = facet.columnIndex,
          rowIndex = facet.rowIndex,
          columnValuesLength = facet.columnValuesLength,
          rowValuesLength = facet.rowValuesLength,
          columnValue = facet.columnValue,
          rowValue = facet.rowValue,
          view = facet.view; // top

      if (rowIndex === 0) {
        var config = Object(esm["deepMix"])({
          position: ['50%', '0%'],
          content: columnValue
        }, getFactTitleConfig(DIRECTION.TOP), _this.cfg.columnTitle);
        view.annotation().text(config);
      } // right


      if (columnIndex === columnValuesLength - 1) {
        var config = Object(esm["deepMix"])({
          position: ['100%', '50%'],
          content: rowValue
        }, getFactTitleConfig(DIRECTION.RIGHT), _this.cfg.rowTitle);
        view.annotation().text(config);
      }
    });
  };

  return Matrix;
}(facet_Facet);

/* harmony default export */ var facet_matrix = (matrix_Matrix);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/facet/mirror.js






/**
 * @ignore
 * 镜像分面
 */

var mirror_Mirror =
/** @class */
function (_super) {
  __extends(Mirror, _super);

  function Mirror() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Mirror.prototype.getDefaultCfg = function () {
    return Object(esm["deepMix"])({}, _super.prototype.getDefaultCfg.call(this), {
      type: 'mirror',
      showTitle: true,
      title: _super.prototype.getDefaultTitleCfg.call(this),
      transpose: false
    });
  };

  Mirror.prototype.render = function () {
    _super.prototype.render.call(this);

    if (this.cfg.showTitle) {
      this.renderTitle();
    }
  };

  Mirror.prototype.beforeEachView = function (view, facet) {
    // 做一下坐标系转化
    if (this.cfg.transpose) {
      if (facet.columnIndex % 2 === 0) {
        view.coordinate().transpose().reflect('x');
      } else {
        view.coordinate().transpose();
      }
    } else {
      if (facet.rowIndex % 2 !== 0) {
        view.coordinate().reflect('y');
      }
    }
  };

  Mirror.prototype.afterEachView = function (view, facet) {
    this.processAxis(view, facet);
  };

  Mirror.prototype.generateFacets = function (data) {
    var _this = this;

    var f = this.cfg.fields[0];
    var rst = [];
    var columnValuesLength = 1;
    var rowValuesLength = 1;
    var columnValues = [''];
    var rowValues = [''];
    var columnField;
    var rowField;

    if (this.cfg.transpose) {
      columnField = f;
      columnValues = this.getFieldValues(data, columnField).slice(0, 2); // 镜像最多两个

      columnValuesLength = columnValues.length;
    } else {
      rowField = f;
      rowValues = this.getFieldValues(data, rowField).slice(0, 2); // 镜像最多两个

      rowValuesLength = rowValues.length;
    } // 获取每个维度对应的数据配置片段


    columnValues.forEach(function (xVal, xIndex) {
      rowValues.forEach(function (yVal, yIndex) {
        var conditions = [{
          field: columnField,
          value: xVal,
          values: columnValues
        }, {
          field: rowField,
          value: yVal,
          values: rowValues
        }];
        var facetData = Object(esm["filter"])(data, _this.getFacetDataFilter(conditions));
        var facet = {
          type: _this.cfg.type,
          data: facetData,
          region: _this.getRegion(rowValuesLength, columnValuesLength, xIndex, yIndex),
          columnValue: xVal,
          rowValue: yVal,
          columnField: columnField,
          rowField: rowField,
          columnIndex: xIndex,
          rowIndex: yIndex,
          columnValuesLength: columnValuesLength,
          rowValuesLength: rowValuesLength
        };
        rst.push(facet);
      });
    });
    return rst;
  };
  /**
   * 设置 x 坐标轴的文本、title 是否显示
   * @param x
   * @param axes
   * @param option
   * @param facet
   */


  Mirror.prototype.getXAxisOption = function (x, axes, option, facet) {
    // 非最后一行
    // 当是最后一行或者下面没有 view 时文本不显示
    if (facet.columnIndex === 1 || facet.rowIndex === 1) {
      return _assign(_assign({}, option), {
        label: null,
        title: null
      });
    }

    return option;
  };
  /**
   * 设置 y 坐标轴的文本、title 是否显示
   * @param y
   * @param axes
   * @param option
   * @param facet
   */


  Mirror.prototype.getYAxisOption = function (y, axes, option, facet) {
    // do nothing
    return option;
  };

  Mirror.prototype.renderTitle = function () {
    var _this = this;

    Object(esm["each"])(this.facets, function (facet, facetIndex) {
      var columnValue = facet.columnValue,
          rowValue = facet.rowValue,
          view = facet.view;

      if (_this.cfg.transpose) {
        var config = Object(esm["deepMix"])({
          position: ['50%', '0%'],
          content: columnValue
        }, getFactTitleConfig(DIRECTION.TOP), _this.cfg.title);
        view.annotation().text(config);
      } else {
        var config = Object(esm["deepMix"])({
          position: ['100%', '50%'],
          content: rowValue
        }, getFactTitleConfig(DIRECTION.RIGHT), _this.cfg.title);
        view.annotation().text(config);
      }
    });
  };

  return Mirror;
}(facet_Facet);

/* harmony default export */ var mirror = (mirror_Mirror);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/facet/rect.js






/**
 * @ignore
 * 矩阵分面
 */

var facet_rect_Rect =
/** @class */
function (_super) {
  __extends(Rect, _super);

  function Rect() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Rect.prototype.afterEachView = function (view, facet) {
    this.processAxis(view, facet);
  };

  Rect.prototype.beforeEachView = function (view, facet) {// do nothing
  };

  Rect.prototype.getDefaultCfg = function () {
    return Object(esm["deepMix"])({}, _super.prototype.getDefaultCfg.call(this), {
      type: 'rect',
      columnTitle: _assign({}, _super.prototype.getDefaultTitleCfg.call(this)),
      rowTitle: _assign({}, _super.prototype.getDefaultTitleCfg.call(this))
    });
  };

  Rect.prototype.render = function () {
    _super.prototype.render.call(this);

    if (this.cfg.showTitle) {
      this.renderTitle();
    }
  };
  /**
   * 生成矩阵分面的分面数据
   * @param data
   */


  Rect.prototype.generateFacets = function (data) {
    var _this = this;

    var _a = this.cfg.fields,
        columnField = _a[0],
        rowField = _a[1];
    var rst = [];
    var columnValuesLength = 1;
    var rowValuesLength = 1;
    var columnValues = [''];
    var rowValues = [''];

    if (columnField) {
      columnValues = this.getFieldValues(data, columnField);
      columnValuesLength = columnValues.length;
    }

    if (rowField) {
      rowValues = this.getFieldValues(data, rowField);
      rowValuesLength = rowValues.length;
    } // 获取每个维度对应的数据配置片段


    columnValues.forEach(function (xVal, xIndex) {
      rowValues.forEach(function (yVal, yIndex) {
        var conditions = [{
          field: columnField,
          value: xVal,
          values: columnValues
        }, {
          field: rowField,
          value: yVal,
          values: rowValues
        }];
        var facetData = Object(esm["filter"])(data, _this.getFacetDataFilter(conditions));
        var facet = {
          type: _this.cfg.type,
          data: facetData,
          region: _this.getRegion(rowValuesLength, columnValuesLength, xIndex, yIndex),
          columnValue: xVal,
          rowValue: yVal,
          columnField: columnField,
          rowField: rowField,
          columnIndex: xIndex,
          rowIndex: yIndex,
          columnValuesLength: columnValuesLength,
          rowValuesLength: rowValuesLength
        };
        rst.push(facet);
      });
    });
    return rst;
  };

  Rect.prototype.renderTitle = function () {
    var _this = this;

    Object(esm["each"])(this.facets, function (facet, facetIndex) {
      var columnIndex = facet.columnIndex,
          rowIndex = facet.rowIndex,
          columnValuesLength = facet.columnValuesLength,
          rowValuesLength = facet.rowValuesLength,
          columnValue = facet.columnValue,
          rowValue = facet.rowValue,
          view = facet.view; // top

      if (rowIndex === 0) {
        var config = Object(esm["deepMix"])({
          position: ['50%', '0%'],
          content: columnValue
        }, getFactTitleConfig(DIRECTION.TOP), _this.cfg.columnTitle);
        view.annotation().text(config);
      } // right


      if (columnIndex === columnValuesLength - 1) {
        var config = Object(esm["deepMix"])({
          position: ['100%', '50%'],
          content: rowValue
        }, getFactTitleConfig(DIRECTION.RIGHT), _this.cfg.rowTitle);
        view.annotation().text(config);
      }
    });
  };
  /**
   * 设置 x 坐标轴的文本、title 是否显示
   * @param x
   * @param axes
   * @param option
   * @param facet
   */


  Rect.prototype.getXAxisOption = function (x, axes, option, facet) {
    // 非最后一行
    if (facet.rowIndex !== facet.rowValuesLength - 1) {
      return _assign(_assign({}, option), {
        title: null,
        label: null
      });
    } else if (facet.columnIndex !== Math.floor((facet.columnValuesLength - 1) / 2)) {
      // 不是中间列
      return _assign(_assign({}, option), {
        title: null
      });
    }

    return option;
  };
  /**
   * 设置 y 坐标轴的文本、title 是否显示
   * @param y
   * @param axes
   * @param option
   * @param facet
   */


  Rect.prototype.getYAxisOption = function (y, axes, option, facet) {
    if (facet.columnIndex !== 0) {
      return _assign(_assign({}, option), {
        title: null,
        label: null
      });
    } else if (facet.rowIndex !== Math.floor((facet.rowValuesLength - 1) / 2)) {
      return _assign(_assign({}, option), {
        title: null
      });
    }

    return option;
  };

  return Rect;
}(facet_Facet);

/* harmony default export */ var facet_rect = (facet_rect_Rect);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/facet/tree.js



/**
 * Create By Bruce Too
 * On 2020-02-10
 */





/**
 * @ignore
 * Tree Facet
 */

var tree_Tree =
/** @class */
function (_super) {
  __extends(Tree, _super);

  function Tree() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.afterChartRender = function () {
      if (_this.facets && _this.cfg.line) {
        _this.container.clear();

        _this.drawLines(_this.facets);
      }
    };

    return _this;
  }

  Tree.prototype.afterEachView = function (view, facet) {
    this.processAxis(view, facet);
  };

  Tree.prototype.beforeEachView = function (view, facet) {};

  Tree.prototype.init = function () {
    _super.prototype.init.call(this);

    this.view.on(VIEW_LIFE_CIRCLE.AFTER_RENDER, this.afterChartRender);
  };

  Tree.prototype.getDefaultCfg = function () {
    return Object(esm["deepMix"])({}, _super.prototype.getDefaultCfg.call(this), {
      type: 'tree',
      line: {
        style: {
          lineWidth: 1,
          stroke: '#ddd'
        },
        smooth: false
      },
      showTitle: true,
      title: _super.prototype.getDefaultTitleCfg.call(this)
    });
  };

  Tree.prototype.generateFacets = function (data) {
    var fields = this.cfg.fields;

    if (!fields.length) {
      throw new Error('Please specify for the fields for rootFacet!');
    }

    var rst = [];
    var rootFacet = {
      type: this.cfg.type,
      data: data,
      region: null,
      rowValuesLength: this.getRows(),
      columnValuesLength: 1,
      rowIndex: 0,
      columnIndex: 0,
      rowField: '',
      columnField: '',
      rowValue: '',
      columnValue: ''
    };
    rst.push(rootFacet);
    rootFacet.children = this.getChildFacets(data, 1, rst);
    this.setRegion(rst);
    return rst;
  };

  Tree.prototype.setRegion = function (facets) {
    var _this = this;

    this.forceColIndex(facets);
    facets.forEach(function (facet) {
      // @ts-ignore 允许调整
      facet.region = _this.getRegion(facet.rowValuesLength, facet.columnValuesLength, facet.columnIndex, facet.rowIndex);
    });
  };

  Tree.prototype.getRegion = function (rows, cols, xIndex, yIndex) {
    var xWidth = 1 / cols; // x轴方向的每个分面的偏移

    var yWidth = 1 / rows; // y轴方向的每个分面的偏移

    var start = {
      x: xWidth * xIndex,
      y: yWidth * yIndex
    };
    var end = {
      x: start.x + xWidth,
      y: start.y + yWidth * 2 / 3
    };
    return {
      start: start,
      end: end
    };
  };

  Tree.prototype.forceColIndex = function (facets) {
    var _this = this;

    var leafs = [];
    var index = 0;
    facets.forEach(function (facet) {
      if (_this.isLeaf(facet)) {
        leafs.push(facet); // @ts-ignore 允许调整

        facet.columnIndex = index;
        index++;
      }
    });
    leafs.forEach(function (facet) {
      // @ts-ignore
      facet.columnValuesLength = leafs.length;
    });
    var maxLevel = this.cfg.fields.length;

    for (var i = maxLevel - 1; i >= 0; i--) {
      var levelFacets = this.getFacetsByLevel(facets, i); // var yIndex = maxLevel - i;

      for (var _i = 0, levelFacets_1 = levelFacets; _i < levelFacets_1.length; _i++) {
        var facet = levelFacets_1[_i];

        if (!this.isLeaf(facet)) {
          facet.originColIndex = facet.columnIndex; // @ts-ignore

          facet.columnIndex = this.getRegionIndex(facet.children); // @ts-ignore

          facet.columnValuesLength = leafs.length;
        }
      }
    }
  }; // get facet use level


  Tree.prototype.getFacetsByLevel = function (facets, level) {
    var rst = [];
    facets.forEach(function (facet) {
      if (facet.rowIndex === level) {
        rst.push(facet);
      }
    });
    return rst;
  }; // if the facet has children , make it's column index in the middle of it's children


  Tree.prototype.getRegionIndex = function (children) {
    var first = children[0];
    var last = children[children.length - 1];
    return (last.columnIndex - first.columnIndex) / 2 + first.columnIndex;
  }; // is  a leaf without children


  Tree.prototype.isLeaf = function (facet) {
    return !facet.children || !facet.children.length;
  };

  Tree.prototype.getRows = function () {
    return this.cfg.fields.length + 1;
  }; // get child


  Tree.prototype.getChildFacets = function (data, level, arr) {
    var _this = this; // [ 'grade', 'class' ]


    var fields = this.cfg.fields;
    var length = fields.length;

    if (length < level) {
      return;
    }

    var rst = []; // get fist level except root node

    var field = fields[level - 1]; // get field value

    var values = this.getFieldValues(data, field);
    values.forEach(function (value, index) {
      var conditions = [{
        field: field,
        value: value,
        values: values
      }];
      var subData = data.filter(_this.getFacetDataFilter(conditions));

      if (subData.length) {
        var facet = {
          type: _this.cfg.type,
          data: subData,
          region: null,
          columnValue: value,
          rowValue: '',
          columnField: field,
          rowField: '',
          columnIndex: index,
          rowValuesLength: _this.getRows(),
          columnValuesLength: 1,
          rowIndex: level,
          children: _this.getChildFacets(subData, level + 1, arr)
        };
        rst.push(facet);
        arr.push(facet);
      }
    });
    return rst;
  };

  Tree.prototype.render = function () {
    _super.prototype.render.call(this);

    if (this.cfg.showTitle) {
      this.renderTitle();
    }
  };

  Tree.prototype.renderTitle = function () {
    var _this = this;

    Object(esm["each"])(this.facets, function (facet) {
      var columnValue = facet.columnValue,
          view = facet.view;
      var config = Object(esm["deepMix"])({
        position: ['50%', '0%'],
        content: columnValue
      }, getFactTitleConfig(DIRECTION.TOP), _this.cfg.title);
      view.annotation().text(config);
    });
  };

  Tree.prototype.drawLines = function (facets) {
    var _this = this;

    facets.forEach(function (facet) {
      if (!_this.isLeaf(facet)) {
        var children = facet.children;

        _this.addFacetLines(facet, children);
      }
    });
  }; // add lines with it's children


  Tree.prototype.addFacetLines = function (facet, children) {
    var _this = this;

    var view = facet.view;
    var region = view.coordinateBBox; // top, right, bottom, left

    var start = {
      x: region.x + region.width / 2,
      y: region.y + region.height
    };
    children.forEach(function (subFacet) {
      var subRegion = subFacet.view.coordinateBBox;
      var end = {
        x: subRegion.bl.x + (subRegion.tr.x - subRegion.bl.x) / 2,
        y: subRegion.tr.y
      };
      var middle1 = {
        x: start.x,
        y: start.y + (end.y - start.y) / 2
      };
      var middle2 = {
        x: end.x,
        y: middle1.y
      };

      _this.drawLine([start, middle1, middle2, end]);
    });
  };

  Tree.prototype.getPath = function (points) {
    var path = [];
    var smooth = this.cfg.line.smooth;

    if (smooth) {
      path.push(['M', points[0].x, points[0].y]);
      path.push(['C', points[1].x, points[1].y, points[2].x, points[2].y, points[3].x, points[3].y]);
    } else {
      points.forEach(function (point, index) {
        if (index === 0) {
          path.push(['M', point.x, point.y]);
        } else {
          path.push(['L', point.x, point.y]);
        }
      });
    }

    return path;
  }; // draw line width points


  Tree.prototype.drawLine = function (points) {
    var path = this.getPath(points);
    var line = this.cfg.line.style;
    this.container.addShape('path', {
      attrs: Object(esm["assign"])({
        // @ts-ignore
        path: path
      }, line)
    });
  };

  Tree.prototype.getXAxisOption = function (x, axes, option, facet) {
    if (facet.rowIndex !== facet.rowValuesLength - 1) {
      return _assign(_assign({}, option), {
        title: null,
        label: null
      });
    }

    return option;
  };

  Tree.prototype.getYAxisOption = function (y, axes, option, facet) {
    if (facet.originColIndex !== 0 && facet.columnIndex !== 0) {
      return _assign(_assign({}, option), {
        title: null,
        label: null
      });
    }

    return option;
  };

  return Tree;
}(facet_Facet);

/* harmony default export */ var tree = (tree_Tree);
// EXTERNAL MODULE: ../node_modules/core-js/modules/es7.object.values.js
var es7_object_values = __webpack_require__("3DBk");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.weak-map.js
var es6_weak_map = __webpack_require__("orKN");

// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/chart/controller/annotation.js


















/**
 * Annotation controller, 主要作用:
 * 1. 创建 Annotation: line、text、arc ...
 * 2. 生命周期: init、layout、render、clear、destroy
 */

var annotation_Annotation =
/** @class */
function (_super) {
  __extends(Annotation, _super);

  function Annotation(view) {
    var _this = _super.call(this, view) || this;
    /* 组件更新的 cache，组件配置 object : 组件 */


    _this.cache = new Map();
    _this.foregroundContainer = _this.view.getLayer(LAYER.FORE).addGroup();
    _this.backgroundContainer = _this.view.getLayer(LAYER.BG).addGroup();
    _this.option = [];
    return _this;
  }

  Object.defineProperty(Annotation.prototype, "name", {
    get: function get() {
      return 'annotation';
    },
    enumerable: false,
    configurable: true
  });

  Annotation.prototype.init = function () {};

  Annotation.prototype.layout = function () {
    var _this = this;

    var components = this.getComponents();

    var updateComponentFn = function updateComponentFn(co) {
      var component = co.component,
          extra = co.extra;
      var type = extra.type;

      var theme = _this.getAnnotationTheme(type);

      component.update(_this.getAnnotationCfg(type, extra, theme));
    };

    var createComponentFn = function createComponentFn(option) {
      var co = _this.createAnnotation(option);

      if (co) {
        co.component.init(); // Note：regionFilter 特殊处理，regionFilter需要取到 Geometry 中的 Shape，需要在 view render 之后处理
        // 其他组件使用外层的统一 render 逻辑

        if (option.type === 'regionFilter') {
          co.component.render();
        } // 缓存起来


        _this.cache.set(option, co);
      }
    };

    if (components.length) {
      Object(esm["each"])(components, function (co) {
        var component = co.component;

        if (component.get('type') === 'regionFilter') {
          // regionFilter 依赖绘制后的 Geometry Shapes
          _this.view.getRootView().once(VIEW_LIFE_CIRCLE.AFTER_RENDER, function () {
            updateComponentFn(co);
          });
        } else {
          updateComponentFn(co);
        }
      });
    } else {
      Object(esm["each"])(this.option, function (option) {
        if (option.type === 'regionFilter') {
          _this.view.getRootView().once(VIEW_LIFE_CIRCLE.AFTER_RENDER, function () {
            // regionFilter 依赖绘制后的 Geometry Shapes
            createComponentFn(option);
          });
        } else {
          createComponentFn(option);
        }
      });
    }
  };

  Annotation.prototype.render = function () {// 因为 Annotation 不参与布局，但是渲染的位置依赖于坐标系，所以可以将绘制阶段延迟到 layout() 进行
  };
  /**
   * 更新
   */


  Annotation.prototype.update = function () {
    var _this = this; // 已经处理过的 legend


    var updated = new WeakMap();

    var updateComponentFn = function updateComponentFn(option) {
      var type = option.type;

      var theme = _this.getAnnotationTheme(type);

      var cfg = _this.getAnnotationCfg(type, option, theme);

      var existCo = _this.cache.get(option); // 存在，则更新


      if (existCo) {
        // 忽略掉一些配置
        omit(cfg, ['container']);
        existCo.component.update(cfg);
        updated.set(option, true);
      } else {
        // 不存在，则创建
        var co = _this.createAnnotation(option);

        if (co) {
          co.component.init(); // Note：regionFilter 特殊处理，regionFilter需要取到 Geometry 中的 Shape，需要在 view render 之后处理
          // 其他组件使用外层的统一 render 逻辑

          if (option.type === 'regionFilter') {
            co.component.render();
          } // 缓存起来


          _this.cache.set(option, co);

          updated.set(option, true);
        }
      }
    };

    this.view.once(VIEW_LIFE_CIRCLE.AFTER_RENDER, function () {
      // 先看是否有 regionFilter 要更新
      Object(esm["each"])(_this.option, function (option) {
        if (option.type === 'regionFilter') {
          updateComponentFn(option);
        }
      }); // 处理完成之后，销毁删除的
      // 不在处理中的

      var newCache = new Map();

      _this.cache.forEach(function (value, key) {
        if (updated.has(key)) {
          newCache.set(key, value);
        } else {
          // 不存在，则是所有需要被销毁的组件
          value.component.destroy();
        }
      }); // 更新缓存


      _this.cache = newCache;
    });
    Object(esm["each"])(this.option, function (option) {
      if (option.type !== 'regionFilter') {
        updateComponentFn(option);
      }
    });
  };
  /**
   * 清空
   * @param includeOption 是否清空 option 配置项
   */


  Annotation.prototype.clear = function (includeOption) {
    if (includeOption === void 0) {
      includeOption = false;
    }

    _super.prototype.clear.call(this);

    this.cache.clear();
    this.foregroundContainer.clear();
    this.backgroundContainer.clear(); // clear all option

    if (includeOption) {
      this.option = [];
    }
  };

  Annotation.prototype.destroy = function () {
    this.clear(true);
    this.foregroundContainer.remove(true);
    this.backgroundContainer.remove(true);
  };
  /**
   * 复写基类的方法
   */


  Annotation.prototype.getComponents = function () {
    var co = [];
    this.cache.forEach(function (value) {
      co.push(value);
    });
    return co;
  };

  Annotation.prototype.createAnnotation = function (option) {
    var type = option.type;
    var Ctor = annotation_namespaceObject[Object(esm["upperFirst"])(type)];

    if (Ctor) {
      var theme = this.getAnnotationTheme(type);
      var cfg = this.getAnnotationCfg(type, option, theme);
      var annotation = new Ctor(cfg);
      return {
        component: annotation,
        layer: this.isTop(cfg) ? LAYER.FORE : LAYER.BG,
        direction: DIRECTION.NONE,
        type: COMPONENT_TYPE.ANNOTATION,
        extra: option
      };
    }
  }; // APIs for creating annotation component


  Annotation.prototype.annotation = function (option) {
    this.option.push(option);
  };
  /**
   * 创建 Arc
   * @param option
   * @returns AnnotationController
   */


  Annotation.prototype.arc = function (option) {
    this.annotation(_assign({
      type: 'arc'
    }, option));
    return this;
  };
  /**
   * 创建 image
   * @param option
   * @returns AnnotationController
   */


  Annotation.prototype.image = function (option) {
    this.annotation(_assign({
      type: 'image'
    }, option));
    return this;
  };
  /**
   * 创建 Line
   * @param option
   * @returns AnnotationController
   */


  Annotation.prototype.line = function (option) {
    this.annotation(_assign({
      type: 'line'
    }, option));
    return this;
  };
  /**
   * 创建 Region
   * @param option
   * @returns AnnotationController
   */


  Annotation.prototype.region = function (option) {
    this.annotation(_assign({
      type: 'region'
    }, option));
    return this;
  };
  /**
   * 创建 Text
   * @param option
   * @returns AnnotationController
   */


  Annotation.prototype.text = function (option) {
    this.annotation(_assign({
      type: 'text'
    }, option));
    return this;
  };
  /**
   * 创建 DataMarker
   * @param option
   * @returns AnnotationController
   */


  Annotation.prototype.dataMarker = function (option) {
    this.annotation(_assign({
      type: 'dataMarker'
    }, option));
    return this;
  };
  /**
   * 创建 DataRegion
   * @param option
   * @returns AnnotationController
   */


  Annotation.prototype.dataRegion = function (option) {
    this.annotation(_assign({
      type: 'dataRegion'
    }, option));
  };
  /**
   * 创建 RegionFilter
   * @param option
   * @returns AnnotationController
   */


  Annotation.prototype.regionFilter = function (option) {
    this.annotation(_assign({
      type: 'regionFilter'
    }, option));
  }; // end API

  /**
   * parse the point position to [x, y]
   * @param p Position
   * @returns { x, y }
   */


  Annotation.prototype.parsePosition = function (p) {
    var xScale = this.view.getXScale(); // 转成 object

    var yScales = this.view.getScalesByDim('y');
    var position = Object(esm["isFunction"])(p) ? p.call(null, xScale, yScales) : p;
    var x = 0;
    var y = 0; // 入参是 [24, 24] 这类时

    if (Object(esm["isArray"])(position)) {
      var xPos = position[0],
          yPos = position[1]; // 如果数据格式是 ['50%', '50%'] 的格式
      // fix: 原始数据中可能会包含 'xxx5%xxx' 这样的数据，需要判断下 https://github.com/antvis/f2/issues/590
      // @ts-ignore

      if (Object(esm["isString"])(xPos) && xPos.indexOf('%') !== -1 && !isNaN(xPos.slice(0, -1))) {
        return this.parsePercentPosition(position);
      }

      x = this.getNormalizedValue(xPos, xScale);
      y = this.getNormalizedValue(yPos, Object.values(yScales)[0]);
    } else if (!Object(esm["isNil"])(position)) {
      // 入参是 object 结构，数据点
      for (var _i = 0, _a = Object(esm["keys"])(position); _i < _a.length; _i++) {
        var key = _a[_i];
        var value = position[key];

        if (key === xScale.field) {
          x = this.getNormalizedValue(value, xScale);
        }

        if (yScales[key]) {
          y = this.getNormalizedValue(value, yScales[key]);
        }
      }
    }

    return this.view.getCoordinate().convert({
      x: x,
      y: y
    });
  };
  /**
   * parse all the points between start and end
   * @param start
   * @param end
   * @return Point[]
   */


  Annotation.prototype.getRegionPoints = function (start, end) {
    var _this = this;

    var xScale = this.view.getXScale();
    var yScales = this.view.getScalesByDim('y');
    var yScale = Object.values(yScales)[0];
    var xField = xScale.field;
    var viewData = this.view.getData();
    var startXValue = Object(esm["isArray"])(start) ? start[0] : start[xField];
    var endXValue = Object(esm["isArray"])(end) ? end[0] : end[xField];
    var arr = [];
    var startIndex;
    Object(esm["each"])(viewData, function (item, idx) {
      if (item[xField] === startXValue) {
        startIndex = idx;
      }

      if (idx >= startIndex) {
        var point = _this.parsePosition([item[xField], item[yScale.field]]);

        if (point) {
          arr.push(point);
        }
      }

      if (item[xField] === endXValue) {
        return false;
      }
    });
    return arr;
  };
  /**
   * parse the value position
   * @param val
   * @param scale
   */


  Annotation.prototype.getNormalizedValue = function (val, scale) {
    var result;
    var scaled;

    switch (val) {
      case 'start':
        result = 0;
        break;

      case 'end':
        result = 1;
        break;

      case 'median':
        {
          scaled = scale.isCategory ? (scale.values.length - 1) / 2 : (scale.min + scale.max) / 2;
          result = scale.scale(scaled);
          break;
        }

      case 'min':
      case 'max':
        if (scale.isCategory) {
          scaled = val === 'min' ? 0 : scale.values.length - 1;
        } else {
          scaled = scale[val];
        }

        result = scale.scale(scaled);
        break;

      default:
        result = scale.scale(val);
    }

    return result;
  };
  /**
   * parse percent position
   * @param position
   */


  Annotation.prototype.parsePercentPosition = function (position) {
    var xPercent = parseFloat(position[0]) / 100;
    var yPercent = parseFloat(position[1]) / 100;
    var coordinate = this.view.getCoordinate();
    var start = coordinate.start,
        end = coordinate.end;
    var topLeft = {
      x: Math.min(start.x, end.x),
      y: Math.min(start.y, end.y)
    };
    var x = coordinate.getWidth() * xPercent + topLeft.x;
    var y = coordinate.getHeight() * yPercent + topLeft.y;
    return {
      x: x,
      y: y
    };
  };
  /**
   * get coordinate bbox
   */


  Annotation.prototype.getCoordinateBBox = function () {
    var coordinate = this.view.getCoordinate();
    var start = coordinate.start,
        end = coordinate.end;
    var width = coordinate.getWidth();
    var height = coordinate.getHeight();
    var topLeft = {
      x: Math.min(start.x, end.x),
      y: Math.min(start.y, end.y)
    };
    return {
      x: topLeft.x,
      y: topLeft.y,
      minX: topLeft.x,
      minY: topLeft.y,
      maxX: topLeft.x + width,
      maxY: topLeft.y + height,
      width: width,
      height: height
    };
  };
  /**
   * get annotation component config by different type
   * @param type
   * @param option 用户的配置
   * @param theme
   */


  Annotation.prototype.getAnnotationCfg = function (type, option, theme) {
    var coordinate = this.view.getCoordinate();
    var o = {};

    if (Object(esm["isNil"])(option)) {
      return null;
    }

    if (type === 'arc') {
      var _a = option,
          start = _a.start,
          end = _a.end;
      var sp = this.parsePosition(start);
      var ep = this.parsePosition(end);
      var startAngle = getAngleByPoint(coordinate, sp);
      var endAngle = getAngleByPoint(coordinate, ep);

      if (startAngle > endAngle) {
        endAngle = Math.PI * 2 + endAngle;
      }

      o = {
        center: coordinate.getCenter(),
        radius: getDistanceToCenter(coordinate, sp),
        startAngle: startAngle,
        endAngle: endAngle
      };
    } else if (type === 'image') {
      var _b = option,
          start = _b.start,
          end = _b.end;
      o = {
        start: this.parsePosition(start),
        end: this.parsePosition(end),
        src: option.src
      };
    } else if (type === 'line') {
      var _c = option,
          start = _c.start,
          end = _c.end;
      o = {
        start: this.parsePosition(start),
        end: this.parsePosition(end),
        text: Object(esm["get"])(option, 'text', null)
      };
    } else if (type === 'region') {
      var _d = option,
          start = _d.start,
          end = _d.end;
      o = {
        start: this.parsePosition(start),
        end: this.parsePosition(end)
      };
    } else if (type === 'text') {
      var _e = option,
          position = _e.position,
          rotate = _e.rotate;
      o = _assign(_assign({}, this.parsePosition(position)), {
        content: option.content,
        rotate: rotate
      });
    } else if (type === 'dataMarker') {
      var _f = option,
          position = _f.position,
          point = _f.point,
          line = _f.line,
          text = _f.text,
          autoAdjust = _f.autoAdjust,
          direction = _f.direction;
      o = _assign(_assign({}, this.parsePosition(position)), {
        coordinateBBox: this.getCoordinateBBox(),
        point: point,
        line: line,
        text: text,
        autoAdjust: autoAdjust,
        direction: direction
      });
    } else if (type === 'dataRegion') {
      var _g = option,
          start = _g.start,
          end = _g.end,
          region = _g.region,
          text = _g.text,
          lineLength = _g.lineLength;
      o = {
        points: this.getRegionPoints(start, end),
        region: region,
        text: text,
        lineLength: lineLength
      };
    } else if (type === 'regionFilter') {
      var _h = option,
          start = _h.start,
          end = _h.end,
          apply_1 = _h.apply,
          color = _h.color;
      var geometries = this.view.geometries;
      var shapes_1 = [];

      var addShapes_1 = function addShapes_1(item) {
        if (!item) {
          return;
        }

        if (item.isGroup()) {
          item.getChildren().forEach(function (child) {
            return addShapes_1(child);
          });
        } else {
          shapes_1.push(item);
        }
      };

      Object(esm["each"])(geometries, function (geom) {
        if (apply_1) {
          if (Object(esm["contains"])(apply_1, geom.type)) {
            Object(esm["each"])(geom.elements, function (elem) {
              addShapes_1(elem.shape);
            });
          }
        } else {
          Object(esm["each"])(geom.elements, function (elem) {
            addShapes_1(elem.shape);
          });
        }
      });
      o = {
        color: color,
        shapes: shapes_1,
        start: this.parsePosition(start),
        end: this.parsePosition(end)
      };
    } // 合并主题，用户配置优先级高于默认主题


    var cfg = Object(esm["deepMix"])({}, theme, _assign(_assign({}, o), {
      top: option.top,
      style: option.style,
      offsetX: option.offsetX,
      offsetY: option.offsetY
    }));
    cfg.container = this.getComponentContainer(cfg);
    cfg.animate = this.view.getOptions().animate && cfg.animate && Object(esm["get"])(option, 'animate', cfg.animate); // 如果 view 关闭动画，则不执行

    cfg.animateOption = Object(esm["deepMix"])({}, DEFAULT_ANIMATE_CFG, cfg.animateOption, option.animateOption);
    return cfg;
  };
  /**
   * is annotation render on top
   * @param option
   * @return whethe on top
   */


  Annotation.prototype.isTop = function (option) {
    return Object(esm["get"])(option, 'top', true);
  };
  /**
   * get the container by option.top
   * default is on top
   * @param option
   * @returns the container
   */


  Annotation.prototype.getComponentContainer = function (option) {
    return this.isTop(option) ? this.foregroundContainer : this.backgroundContainer;
  };

  Annotation.prototype.getAnnotationTheme = function (type) {
    return Object(esm["get"])(this.view.getTheme(), ['components', 'annotation', type], {});
  };

  return Annotation;
}(base_Controller);

/* harmony default export */ var controller_annotation = (annotation_Annotation);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/util/grid.js





/**
 * @ignore
 * get the grid theme by type
 * @param theme
 * @param direction
 * @returns theme object
 */

function getGridThemeCfg(theme, direction) {
  return Object(esm["get"])(theme, ['components', 'axis', direction, 'grid'], {});
}
/**
 * @ignore
 * get axis grid items
 * @param coordinate
 * @param scale
 * @param dim
 * @return items
 */

function getLineGridItems(coordinate, scale, dim, alignTick) {
  var items = [];
  var ticks = scale.getTicks();

  if (coordinate.isPolar) {
    // 补全 ticks
    ticks.push({
      value: 1,
      text: '',
      tickValue: ''
    });
  }

  ticks.reduce(function (preTick, currentTick, currentIndex) {
    var currentValue = currentTick.value;

    if (alignTick) {
      items.push({
        points: [coordinate.convert(dim === 'y' ? {
          x: 0,
          y: currentValue
        } : {
          x: currentValue,
          y: 0
        }), coordinate.convert(dim === 'y' ? {
          x: 1,
          y: currentValue
        } : {
          x: currentValue,
          y: 1
        })]
      });
    } else {
      if (currentIndex) {
        var preValue = preTick.value;
        var middleValue = (preValue + currentValue) / 2;
        items.push({
          points: [coordinate.convert(dim === 'y' ? {
            x: 0,
            y: middleValue
          } : {
            x: middleValue,
            y: 0
          }), coordinate.convert(dim === 'y' ? {
            x: 1,
            y: middleValue
          } : {
            x: middleValue,
            y: 1
          })]
        });
      }
    }

    return currentTick;
  }, ticks[0]);
  return items;
}
/**
 * @ignore
 * get
 * @param coordinate
 * @param xScale
 * @param yScale
 * @param dim
 * @returns items
 */

function getCircleGridItems(coordinate, xScale, yScale, alignTick, dim) {
  var count = xScale.values.length;
  var items = [];
  var ticks = yScale.getTicks();
  ticks.reduce(function (preTick, currentTick) {
    var preValue = preTick ? preTick.value : currentTick.value; // 只有一项数据时取当前值

    var currentValue = currentTick.value;
    var middleValue = (preValue + currentValue) / 2;

    if (dim === 'x') {
      // 如果是 x 轴作为半径轴，那么只需要取圆弧收尾两个即可
      items.push({
        points: [coordinate.convert({
          x: alignTick ? currentValue : middleValue,
          y: 0
        }), coordinate.convert({
          x: alignTick ? currentValue : middleValue,
          y: 1
        })]
      });
    } else {
      items.push({
        points: Object(esm["map"])(Array(count + 1), function (__, idx) {
          return coordinate.convert({
            x: idx / count,
            y: alignTick ? currentValue : middleValue
          });
        })
      });
    }

    return currentTick;
  }, ticks[0]);
  return items;
}
/**
 * @ignore
 * show grid or not
 * @param axisTheme
 * @param axisOption
 */

function showGrid(axisTheme, axisOption) {
  var userGrid = Object(esm["get"])(axisOption, 'grid');

  if (userGrid === null) {
    return false;
  }

  var themeGrid = Object(esm["get"])(axisTheme, 'grid');
  return !(userGrid === undefined && themeGrid === null);
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/chart/controller/axis.js

















 // update 组件的时候，忽略的数据更新

var OMIT_CFG = ['container']; // 坐标轴默认动画配置

var AXIS_DEFAULT_ANIMATE_CFG = _assign(_assign({}, DEFAULT_ANIMATE_CFG), {
  appear: null
});
/**
 * @ignore
 * G2 Axis controller, will:
 *  - create component
 *    - axis
 *    - grid
 *  - life circle
 */


var axis_Axis =
/** @class */
function (_super) {
  __extends(Axis, _super);

  function Axis(view) {
    var _this = _super.call(this, view) || this;
    /** 使用 object 存储组件 */


    _this.cache = new Map(); // 先创建 gridContainer，将 grid 放到 axis 底层

    _this.gridContainer = _this.view.getLayer(LAYER.BG).addGroup();
    _this.axisContainer = _this.view.getLayer(LAYER.BG).addGroup();
    return _this;
  }

  Object.defineProperty(Axis.prototype, "name", {
    get: function get() {
      return 'axis';
    },
    enumerable: false,
    configurable: true
  });

  Axis.prototype.init = function () {};

  Axis.prototype.render = function () {
    this.option = this.view.getOptions().axes;
    this.createXAxes();
    this.createYAxes();
  };
  /**
   * 更新组件布局，位置大小
   */


  Axis.prototype.layout = function () {
    var _this = this;

    var coordinate = this.view.getCoordinate();
    Object(esm["each"])(this.getComponents(), function (co) {
      var component = co.component,
          direction = co.direction,
          type = co.type,
          extra = co.extra;
      var dim = extra.dim,
          scale = extra.scale,
          alignTick = extra.alignTick;
      var updated;

      if (type === COMPONENT_TYPE.AXIS) {
        if (coordinate.isPolar) {
          if (dim === 'x') {
            updated = coordinate.isTransposed ? getAxisRegion(coordinate, direction) : getCircleAxisCenterRadius(coordinate);
          } else if (dim === 'y') {
            updated = coordinate.isTransposed ? getCircleAxisCenterRadius(coordinate) : getAxisRegion(coordinate, direction);
          }
        } else {
          updated = getAxisRegion(coordinate, direction);
        }
      } else if (type === COMPONENT_TYPE.GRID) {
        if (coordinate.isPolar) {
          var items = void 0;

          if (coordinate.isTransposed) {
            items = dim === 'x' ? getCircleGridItems(coordinate, _this.view.getYScales()[0], scale, alignTick, dim) : getLineGridItems(coordinate, scale, dim, alignTick);
          } else {
            items = dim === 'x' ? getLineGridItems(coordinate, scale, dim, alignTick) : getCircleGridItems(coordinate, _this.view.getXScale(), scale, alignTick, dim);
          }

          updated = {
            items: items,
            // coordinate 更新之后，center 也变化了
            center: _this.view.getCoordinate().getCenter()
          };
        } else {
          updated = {
            items: getLineGridItems(coordinate, scale, dim, alignTick)
          };
        }
      }

      component.update(updated);
    });
  };
  /**
   * 更新 axis 组件
   */


  Axis.prototype.update = function () {
    this.option = this.view.getOptions().axes;
    var updatedCache = new Map();
    this.updateXAxes(updatedCache);
    this.updateYAxes(updatedCache); // 处理完成之后，销毁删除的
    // 不在处理中的

    var newCache = new Map();
    this.cache.forEach(function (co, key) {
      if (updatedCache.has(key)) {
        newCache.set(key, co);
      } else {
        // 不存在，则是所有需要被销毁的组件
        co.component.destroy();
      }
    }); // 更新缓存

    this.cache = newCache;
  };

  Axis.prototype.clear = function () {
    _super.prototype.clear.call(this);

    this.cache.clear();
    this.gridContainer.clear();
    this.axisContainer.clear();
  };

  Axis.prototype.destroy = function () {
    _super.prototype.destroy.call(this);

    this.gridContainer.remove(true);
    this.axisContainer.remove(true);
  };
  /**
   * @override
   */


  Axis.prototype.getComponents = function () {
    var co = [];
    this.cache.forEach(function (value) {
      co.push(value);
    });
    return co;
  };
  /**
   * 更新 x axis
   * @param updatedCache
   */


  Axis.prototype.updateXAxes = function (updatedCache) {
    // x axis
    var scale = this.view.getXScale(); // @ts-ignore

    if (!scale || scale.isIdentity) {
      return;
    }

    var field = scale.field;
    var xAxisOption = getAxisOption(this.option, scale.field);

    if (xAxisOption === false) {
      return;
    }

    var coordinate = this.view.getCoordinate();
    var axisId = this.getId('axis', field);
    var gridId = this.getId('grid', field);
    var direction = getAxisDirection(xAxisOption, DIRECTION.BOTTOM);
    var layer = LAYER.BG;
    var dim = 'x';

    if (coordinate.isRect) {
      // 1. do axis update
      var axis = this.cache.get(axisId); // 存在则更新

      if (axis) {
        var cfg = this.getLineAxisCfg(scale, xAxisOption, direction);
        omit(cfg, OMIT_CFG);
        axis.component.update(cfg);
        updatedCache.set(axisId, axis);
      } else {
        // 不存在，则创建
        axis = this.createLineAxis(scale, xAxisOption, layer, direction, dim);
        this.cache.set(axisId, axis);
        updatedCache.set(axisId, axis);
      } // 2. do grid update


      var grid = this.cache.get(gridId); // 存在则更新

      if (grid) {
        var cfg = this.getLineGridCfg(scale, xAxisOption, direction, dim);
        omit(cfg, OMIT_CFG);
        grid.component.update(cfg);
        updatedCache.set(gridId, grid);
      } else {
        // 不存在则创建
        grid = this.createLineGrid(scale, xAxisOption, layer, direction, dim);

        if (grid) {
          this.cache.set(gridId, grid);
          updatedCache.set(gridId, grid);
        }
      }
    } else if (coordinate.isPolar) {
      // 1. do axis update
      var axis = this.cache.get(axisId); // 存在则更新

      if (axis) {
        var cfg = coordinate.isTransposed ? // @ts-ignore
        this.getLineAxisCfg(scale, xAxisOption, 'radius') : this.getCircleAxisCfg(scale, xAxisOption, direction);
        omit(cfg, OMIT_CFG);
        axis.component.update(cfg);
        updatedCache.set(axisId, axis);
      } else {
        // 不存在，则创建
        if (coordinate.isTransposed) {
          if (Object(esm["isUndefined"])(xAxisOption)) {
            // 默认不渲染转置极坐标下的坐标轴
            return;
          } else {
            // @ts-ignore
            axis = this.createLineAxis(scale, xAxisOption, layer, 'radius', dim);
          }
        } else {
          axis = this.createCircleAxis(scale, xAxisOption, layer, direction, dim);
        }

        this.cache.set(axisId, axis);
        updatedCache.set(axisId, axis);
      } // 2. do grid update


      var grid = this.cache.get(gridId); // 存在则更新

      if (grid) {
        var cfg = coordinate.isTransposed ? // @ts-ignore
        this.getCircleGridCfg(scale, xAxisOption, 'radius', dim) : // @ts-ignore
        this.getLineGridCfg(scale, xAxisOption, 'circle', dim);
        omit(cfg, OMIT_CFG);
        grid.component.update(cfg);
        updatedCache.set(gridId, grid);
      } else {
        // 不存在则创建
        if (coordinate.isTransposed) {
          if (Object(esm["isUndefined"])(xAxisOption)) {
            return;
          } else {
            // @ts-ignore
            grid = this.createCircleGrid(scale, xAxisOption, layer, 'radius', dim);
          }
        } else {
          // @ts-ignore
          grid = this.createLineGrid(scale, xAxisOption, layer, 'circle', dim);
        }

        if (grid) {
          this.cache.set(gridId, grid);
          updatedCache.set(gridId, grid);
        }
      }
    } else {// helix and other, do not draw axis
    }
  };

  Axis.prototype.updateYAxes = function (updatedCache) {
    var _this = this; // y axes


    var yScales = this.view.getYScales();
    Object(esm["each"])(yScales, function (scale, idx) {
      // @ts-ignore
      if (!scale || scale.isIdentity) {
        return;
      }

      var field = scale.field;
      var yAxisOption = getAxisOption(_this.option, field);

      if (yAxisOption !== false) {
        var layer = LAYER.BG;
        var dim = 'y';

        var axisId = _this.getId('axis', field);

        var gridId = _this.getId('grid', field);

        var coordinate = _this.view.getCoordinate();

        if (coordinate.isRect) {
          var direction = getAxisDirection(yAxisOption, idx === 0 ? DIRECTION.LEFT : DIRECTION.RIGHT); // 1. do axis update

          var axis = _this.cache.get(axisId); // 存在则更新


          if (axis) {
            var cfg = _this.getLineAxisCfg(scale, yAxisOption, direction);

            omit(cfg, OMIT_CFG);
            axis.component.update(cfg);
            updatedCache.set(axisId, axis);
          } else {
            // 不存在，则创建
            axis = _this.createLineAxis(scale, yAxisOption, layer, direction, dim);

            _this.cache.set(axisId, axis);

            updatedCache.set(axisId, axis);
          } // 2. do grid update


          var grid = _this.cache.get(gridId); // 存在则更新


          if (grid) {
            var cfg = _this.getLineGridCfg(scale, yAxisOption, direction, dim);

            omit(cfg, OMIT_CFG);
            grid.component.update(cfg);
            updatedCache.set(gridId, grid);
          } else {
            // 不存在则创建
            grid = _this.createLineGrid(scale, yAxisOption, layer, direction, dim);

            if (grid) {
              _this.cache.set(gridId, grid);

              updatedCache.set(gridId, grid);
            }
          }
        } else if (coordinate.isPolar) {
          // 1. do axis update
          var axis = _this.cache.get(axisId); // 存在则更新


          if (axis) {
            var cfg = coordinate.isTransposed ? // @ts-ignore
            _this.getCircleAxisCfg(scale, yAxisOption, 'circle') : // @ts-ignore
            _this.getLineAxisCfg(scale, yAxisOption, 'radius'); // @ts-ignore

            omit(cfg, OMIT_CFG);
            axis.component.update(cfg);
            updatedCache.set(axisId, axis);
          } else {
            // 不存在，则创建
            if (coordinate.isTransposed) {
              if (Object(esm["isUndefined"])(yAxisOption)) {
                return;
              } else {
                // @ts-ignore
                axis = _this.createCircleAxis(scale, yAxisOption, layer, 'circle', dim);
              }
            } else {
              // @ts-ignore
              axis = _this.createLineAxis(scale, yAxisOption, layer, 'radius', dim);
            }

            _this.cache.set(axisId, axis);

            updatedCache.set(axisId, axis);
          } // 2. do grid update


          var grid = _this.cache.get(gridId); // 存在则更新


          if (grid) {
            var cfg = coordinate.isTransposed ? // @ts-ignore
            _this.getLineGridCfg(scale, yAxisOption, 'circle', dim) : // @ts-ignore
            _this.getCircleGridCfg(scale, yAxisOption, 'radius', dim);
            omit(cfg, OMIT_CFG);
            grid.component.update(cfg);
            updatedCache.set(gridId, grid);
          } else {
            // 不存在则创建
            if (coordinate.isTransposed) {
              if (Object(esm["isUndefined"])(yAxisOption)) {
                return;
              } else {
                // @ts-ignore
                grid = _this.createLineGrid(scale, yAxisOption, layer, 'circle', dim);
              }
            } else {
              // @ts-ignore
              grid = _this.createCircleGrid(scale, yAxisOption, layer, 'radius', dim);
            }

            if (grid) {
              _this.cache.set(gridId, grid);

              updatedCache.set(gridId, grid);
            }
          }
        } else {// helix and other, do not draw axis
        }
      }
    });
  };
  /**
   * 创建 x axis 组件
   */


  Axis.prototype.createXAxes = function () {
    // x axis
    var scale = this.view.getXScale();

    if (!scale || scale.isIdentity) {
      return;
    }

    var xAxisOption = getAxisOption(this.option, scale.field);

    if (xAxisOption !== false) {
      var direction = getAxisDirection(xAxisOption, DIRECTION.BOTTOM);
      var layer = LAYER.BG;
      var dim = 'x';
      var coordinate = this.view.getCoordinate();
      var axisId = this.getId('axis', scale.field);
      var gridId = this.getId('grid', scale.field);

      if (coordinate.isRect) {
        // axis
        var axis = this.createLineAxis(scale, xAxisOption, layer, direction, dim);
        this.cache.set(axisId, axis); // grid

        var grid = this.createLineGrid(scale, xAxisOption, layer, direction, dim);

        if (grid) {
          this.cache.set(gridId, grid);
        }
      } else if (coordinate.isPolar) {
        var axis = void 0;
        var grid = void 0;

        if (coordinate.isTransposed) {
          if (Object(esm["isUndefined"])(xAxisOption)) {
            // 默认不渲染转置极坐标的坐标轴
            return;
          } else {
            // 如果用户打开了隐藏的坐标轴 chart.axis(true)/chart.axis('x', true)
            // 那么对于转置了的极坐标，半径轴显示的是 x 轴对应的数据
            // @ts-ignore
            axis = this.createLineAxis(scale, xAxisOption, layer, 'radius', dim); // @ts-ignore

            grid = this.createCircleGrid(scale, xAxisOption, layer, 'radius', dim);
          }
        } else {
          axis = this.createCircleAxis(scale, xAxisOption, layer, direction, dim); // grid，极坐标下的 x 轴网格线沿着半径方向绘制
          // @ts-ignore

          grid = this.createLineGrid(scale, xAxisOption, layer, 'circle', dim);
        }

        this.cache.set(axisId, axis);

        if (grid) {
          this.cache.set(gridId, grid);
        }
      } else {// helix and other, do not draw axis
      }
    }
  };
  /**
   * create y axis
   */


  Axis.prototype.createYAxes = function () {
    var _this = this; // y axes


    var yScales = this.view.getYScales();
    Object(esm["each"])(yScales, function (scale, idx) {
      // @ts-ignore
      if (!scale || scale.isIdentity) {
        return;
      }

      var field = scale.field;
      var yAxisOption = getAxisOption(_this.option, field);

      if (yAxisOption !== false) {
        var layer = LAYER.BG;
        var dim = 'y';

        var axisId = _this.getId('axis', field);

        var gridId = _this.getId('grid', field);

        var coordinate = _this.view.getCoordinate();

        if (coordinate.isRect) {
          var direction = getAxisDirection(yAxisOption, idx === 0 ? DIRECTION.LEFT : DIRECTION.RIGHT); // axis

          var axis = _this.createLineAxis(scale, yAxisOption, layer, direction, dim);

          _this.cache.set(axisId, axis); // grid


          var grid = _this.createLineGrid(scale, yAxisOption, layer, direction, dim);

          if (grid) {
            _this.cache.set(gridId, grid);
          }
        } else if (coordinate.isPolar) {
          var axis = void 0;
          var grid = void 0;

          if (coordinate.isTransposed) {
            if (Object(esm["isUndefined"])(yAxisOption)) {
              return;
            } else {
              // @ts-ignore
              axis = _this.createCircleAxis(scale, yAxisOption, layer, 'circle', dim); // @ts-ignore

              grid = _this.createLineGrid(scale, yAxisOption, layer, 'circle', dim);
            }
          } else {
            // @ts-ignore
            axis = _this.createLineAxis(scale, yAxisOption, layer, 'radius', dim); // @ts-ignore

            grid = _this.createCircleGrid(scale, yAxisOption, layer, 'radius', dim);
          }

          _this.cache.set(_this.getId('axis', scale.field), axis);

          if (grid) {
            _this.cache.set(gridId, grid);
          }
        } else {// helix and other, do not draw axis
        }
      }
    });
  };
  /**
   * 创建 line axis
   * @param scale
   * @param option
   * @param layer
   * @param direction
   * @param dim
   */


  Axis.prototype.createLineAxis = function (scale, option, layer, direction, dim) {
    // axis
    var axis = {
      component: new LineAxis(this.getLineAxisCfg(scale, option, direction)),
      layer: layer,
      // @ts-ignore
      direction: direction === 'radius' ? DIRECTION.NONE : direction,
      type: COMPONENT_TYPE.AXIS,
      extra: {
        dim: dim,
        scale: scale
      }
    };
    axis.component.set('field', scale.field);
    axis.component.init();
    return axis;
  };

  Axis.prototype.createLineGrid = function (scale, option, layer, direction, dim) {
    var cfg = this.getLineGridCfg(scale, option, direction, dim);

    if (cfg) {
      var grid = {
        component: new LineGrid(cfg),
        layer: layer,
        direction: DIRECTION.NONE,
        type: COMPONENT_TYPE.GRID,
        extra: {
          dim: dim,
          scale: scale,
          alignTick: Object(esm["get"])(cfg, 'alignTick', true)
        }
      };
      grid.component.init();
      return grid;
    }
  };

  Axis.prototype.createCircleAxis = function (scale, option, layer, direction, dim) {
    var axis = {
      component: new CircleAxis(this.getCircleAxisCfg(scale, option, direction)),
      layer: layer,
      direction: direction,
      type: COMPONENT_TYPE.AXIS,
      extra: {
        dim: dim,
        scale: scale
      }
    };
    axis.component.set('field', scale.field);
    axis.component.init();
    return axis;
  };

  Axis.prototype.createCircleGrid = function (scale, option, layer, direction, dim) {
    var cfg = this.getCircleGridCfg(scale, option, direction, dim);

    if (cfg) {
      var grid = {
        component: new CircleGrid(cfg),
        layer: layer,
        direction: DIRECTION.NONE,
        type: COMPONENT_TYPE.GRID,
        extra: {
          dim: dim,
          scale: scale,
          alignTick: Object(esm["get"])(cfg, 'alignTick', true)
        }
      };
      grid.component.init();
      return grid;
    }
  };
  /**
   * generate line axis cfg
   * @param scale
   * @param axisOption
   * @param direction
   * @return line axis cfg
   */


  Axis.prototype.getLineAxisCfg = function (scale, axisOption, direction) {
    var container = this.axisContainer;
    var coordinate = this.view.getCoordinate();
    var region = getAxisRegion(coordinate, direction);
    var titleText = getAxisTitleText(scale, axisOption);
    var axisThemeCfg = getAxisThemeCfg(this.view.getTheme(), direction); // the cfg order should be ensure

    var optionWithTitle = Object(esm["get"])(axisOption, ['title']) ? Object(esm["deepMix"])({
      title: {
        style: {
          text: titleText
        }
      }
    }, axisOption) : axisOption;
    var cfg = Object(esm["deepMix"])(_assign(_assign({
      container: container
    }, region), {
      ticks: scale.getTicks().map(function (tick) {
        return {
          id: "" + tick.tickValue,
          name: tick.text,
          value: tick.value
        };
      }),
      verticalFactor: coordinate.isPolar ? getAxisFactorByRegion(region, coordinate.getCenter()) * -1 : getAxisFactorByRegion(region, coordinate.getCenter())
    }), axisThemeCfg, optionWithTitle);

    var _a = this.getAnimateCfg(cfg),
        animate = _a.animate,
        animateOption = _a.animateOption;

    cfg.animateOption = animateOption;
    cfg.animate = animate;
    return cfg;
  };
  /**
   * generate line grid cfg
   * @param scale
   * @param axisOption
   * @param direction
   * @param dim
   * @return line grid cfg
   */


  Axis.prototype.getLineGridCfg = function (scale, axisOption, direction, dim) {
    if (!showGrid(getAxisThemeCfg(this.view.getTheme(), direction), axisOption)) {
      return undefined;
    }

    var gridThemeCfg = getGridThemeCfg(this.view.getTheme(), direction); // the cfg order should be ensure
    // grid 动画以 axis 为准

    var gridCfg = Object(esm["deepMix"])({
      container: this.gridContainer
    }, gridThemeCfg, Object(esm["get"])(axisOption, 'grid'), this.getAnimateCfg(axisOption));
    gridCfg.items = getLineGridItems(this.view.getCoordinate(), scale, dim, Object(esm["get"])(gridCfg, 'alignTick', true));
    return gridCfg;
  };
  /**
   * generate circle axis cfg
   * @param scale
   * @param axisOption
   * @param direction
   * @return circle axis cfg
   */


  Axis.prototype.getCircleAxisCfg = function (scale, axisOption, direction) {
    var container = this.axisContainer;
    var coordinate = this.view.getCoordinate();
    var ticks = scale.getTicks().map(function (tick) {
      return {
        id: "" + tick.tickValue,
        name: tick.text,
        value: tick.value
      };
    });

    if (!scale.isCategory && Math.abs(coordinate.endAngle - coordinate.startAngle) === Math.PI * 2) {
      // x 轴对应的值如果是非 cat 类型，在整圆的情况下坐标轴第一个和最后一个文本会重叠，默认只展示第一个文本
      ticks.pop();
    }

    var titleText = getAxisTitleText(scale, axisOption);
    var axisThemeCfg = getAxisThemeCfg(this.view.getTheme(), 'circle'); // the cfg order should be ensure

    var optionWithTitle = Object(esm["get"])(axisOption, ['title']) ? Object(esm["deepMix"])({
      title: {
        style: {
          text: titleText
        }
      }
    }, axisOption) : axisOption;
    var cfg = Object(esm["deepMix"])(_assign(_assign({
      container: container
    }, getCircleAxisCenterRadius(this.view.getCoordinate())), {
      ticks: ticks,
      verticalFactor: 1
    }), axisThemeCfg, optionWithTitle);

    var _a = this.getAnimateCfg(cfg),
        animate = _a.animate,
        animateOption = _a.animateOption;

    cfg.animate = animate;
    cfg.animateOption = animateOption;
    return cfg;
  };
  /**
   * generate circle grid cfg
   * @param scale
   * @param axisOption
   * @param direction
   * @return circle grid cfg
   */


  Axis.prototype.getCircleGridCfg = function (scale, axisOption, direction, dim) {
    if (!showGrid(getAxisThemeCfg(this.view.getTheme(), direction), axisOption)) {
      return undefined;
    } // the cfg order should be ensure
    // grid 动画以 axis 为准
    // @ts-ignore


    var gridThemeCfg = getGridThemeCfg(this.view.getTheme(), 'radius');
    var gridCfg = Object(esm["deepMix"])({
      container: this.gridContainer,
      center: this.view.getCoordinate().getCenter()
    }, gridThemeCfg, Object(esm["get"])(axisOption, 'grid'), this.getAnimateCfg(axisOption));
    var alignTick = Object(esm["get"])(gridCfg, 'alignTick', true);
    var verticalScale = dim === 'x' ? this.view.getYScales()[0] : this.view.getXScale();
    gridCfg.items = getCircleGridItems(this.view.getCoordinate(), verticalScale, scale, alignTick, dim); // the cfg order should be ensure
    // grid 动画以 axis 为准

    return gridCfg;
  };

  Axis.prototype.getId = function (name, key) {
    var coordinate = this.view.getCoordinate(); // 坐标系类型也作为组件的 key

    return name + "-" + key + "-" + coordinate.type;
  };

  Axis.prototype.getAnimateCfg = function (cfg) {
    return {
      animate: this.view.getOptions().animate && Object(esm["get"])(cfg, 'animate'),
      animateOption: cfg && cfg.animateOption ? Object(esm["deepMix"])({}, AXIS_DEFAULT_ANIMATE_CFG, cfg.animateOption) : AXIS_DEFAULT_ANIMATE_CFG
    };
  };

  return Axis;
}(base_Controller);

/* harmony default export */ var controller_axis = (axis_Axis);
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.string.starts-with.js
var es6_string_starts_with = __webpack_require__("FEHE");

// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/util/direction.js

/**
 * @ignore
 * 方位常量转实际的 bbox 位置大小
 * @param parentBBox
 * @param bbox
 * @param direction
 */

function directionToPosition(parentBBox, bbox, direction) {
  if (direction === DIRECTION.TOP) {
    return [parentBBox.minX + parentBBox.width / 2 - bbox.width / 2, parentBBox.minY];
  }

  if (direction === DIRECTION.BOTTOM) {
    return [parentBBox.minX + parentBBox.width / 2 - bbox.width / 2, parentBBox.maxY - bbox.height];
  }

  if (direction === DIRECTION.LEFT) {
    return [parentBBox.minX, parentBBox.minY + parentBBox.height / 2 - bbox.height / 2];
  }

  if (direction === DIRECTION.RIGHT) {
    return [parentBBox.maxX - bbox.width, parentBBox.minY + parentBBox.height / 2 - bbox.height / 2];
  }

  if (direction === DIRECTION.TOP_LEFT || direction === DIRECTION.LEFT_TOP) {
    return [parentBBox.tl.x, parentBBox.tl.y];
  }

  if (direction === DIRECTION.TOP_RIGHT || direction === DIRECTION.RIGHT_TOP) {
    return [parentBBox.tr.x - bbox.width, parentBBox.tr.y];
  }

  if (direction === DIRECTION.BOTTOM_LEFT || direction === DIRECTION.LEFT_BOTTOM) {
    return [parentBBox.bl.x, parentBBox.bl.y - bbox.height];
  }

  if (direction === DIRECTION.BOTTOM_RIGHT || direction === DIRECTION.RIGHT_BOTTOM) {
    return [parentBBox.br.x - bbox.width, parentBBox.br.y - bbox.height];
  }

  return [0, 0];
}
/**
 * get direction after coordinate transpose
 * @param direction
 * @param coordinate
 * @returns direction after transpose or not
 */

function getTransposedDirection(direction, coordinate) {
  if (coordinate.isTransposed) {
    switch (direction) {
      case DIRECTION.BOTTOM:
        return DIRECTION.LEFT;

      case DIRECTION.LEFT:
        return DIRECTION.BOTTOM;

      case DIRECTION.RIGHT:
        return DIRECTION.TOP;

      case DIRECTION.TOP:
        return DIRECTION.RIGHT;
    }
  }

  return direction;
}

function reflectX(direct) {
  if (direct === DIRECTION.LEFT) {
    return DIRECTION.RIGHT;
  }

  if (direct === DIRECTION.RIGHT) {
    return DIRECTION.LEFT;
  }

  return direct;
}

function reflectY(direct) {
  if (direct === DIRECTION.TOP) {
    return DIRECTION.BOTTOM;
  }

  if (direct === DIRECTION.BOTTOM) {
    return DIRECTION.TOP;
  }

  return direct;
}
/**
 * get direction after coordinate.scale
 * @param direction
 * @param coordinate
 */


function getScaleDirection(direction, coordinate) {
  var x = coordinate.matrix[0];
  var y = coordinate.matrix[4];
  var d = direction;

  if (x < 0) {
    d = reflectX(d);
  }

  if (y < 0) {
    d = reflectY(d);
  }

  return d;
}
/**
 *
 * @param direction
 * @param coordinate
 */


function getReflectDirection(direction, coordinate) {
  var d = direction;

  if (coordinate.isReflect('x')) {
    d = reflectX(d);
  }

  if (coordinate.isReflect('y')) {
    d = reflectY(d);
  }

  return d;
}
/**
 * @ignore
 * get direction after coordinate translate
 * @param direction
 * @param coordinate
 */


function getTranslateDirection(direction, coordinate) {
  var d = direction;
  d = getTransposedDirection(d, coordinate);
  d = getScaleDirection(d, coordinate);
  d = getReflectDirection(d, coordinate);
  return d;
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/util/attr.js


/**
 * @ignore
 * get the mapping value by attribute, if mapping value is nil, return def
 * @param attr
 * @param value
 * @param def
 * @returns get mapping value
 */

function getMappingValue(attr, value, def) {
  if (!attr) {
    return def;
  }

  var r; // 多参数映射，阻止程序报错

  if (attr.callback && attr.callback.length > 1) {
    var restArgs = Array(attr.callback.length - 1).fill('');
    r = attr.mapping.apply(attr, __spreadArrays([value], restArgs)).join('');
  } else {
    r = attr.mapping(value).join('');
  }

  return r || def;
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/util/legend.js







function setMarkerSymbol(marker) {
  var symbol = marker.symbol;

  if (Object(esm["isString"])(symbol) && MarkerSymbols[symbol]) {
    marker.symbol = MarkerSymbols[symbol];
  }
}
/**
 * @ignore
 * get the legend layout from direction
 * @param direction
 * @returns layout 'horizontal' | 'vertical'
 */


function getLegendLayout(direction) {
  return direction.startsWith(DIRECTION.LEFT) || direction.startsWith(DIRECTION.RIGHT) ? 'vertical' : 'horizontal';
}
/**
 * @ignore
 * get the legend items
 * @param view
 * @param geometry
 * @param attr
 * @param themeMarker
 * @param userMarker
 * @returns legend items
 */

function getLegendItems(view, geometry, attr, themeMarker, userMarker) {
  var scale = attr.getScale(attr.type);

  if (scale.isCategory) {
    var field_1 = scale.field;
    var colorAttr_1 = geometry.getAttribute('color');
    var shapeAttr_1 = geometry.getAttribute('shape');
    var defaultColor_1 = view.getTheme().defaultColor;
    var isInPolar_1 = geometry.coordinate.isPolar;
    return scale.getTicks().map(function (tick) {
      var _a;

      var text = tick.text,
          scaleValue = tick.value;
      var name = text;
      var value = scale.invert(scaleValue); // 通过过滤图例项的数据，来看是否 unchecked

      var unchecked = view.filterFieldData(field_1, [(_a = {}, _a[field_1] = value, _a)]).length === 0; // @ts-ignore

      var color = getMappingValue(colorAttr_1, value, defaultColor_1);
      var shape = getMappingValue(shapeAttr_1, value, 'point');
      var marker = geometry.getShapeMarker(shape, {
        color: color,
        isInPolar: isInPolar_1
      }); // the marker configure order should be ensure

      marker = Object(esm["deepMix"])({}, themeMarker, marker, userMarker);
      setMarkerSymbol(marker);
      return {
        id: value,
        name: name,
        value: value,
        marker: marker,
        unchecked: unchecked
      };
    });
  }

  return [];
}
/**
 * @ignore
 * custom legend 的 items 获取
 * @param themeMarker
 * @param userMarker
 * @param customItems
 */

function getCustomLegendItems(themeMarker, userMarker, customItems) {
  // 如果有自定义的 item，那么就直接使用，并合并主题的 marker 配置
  return customItems.map(function (item) {
    var marker = Object(esm["deepMix"])({}, themeMarker, userMarker, item.marker);
    setMarkerSymbol(marker);
    item.marker = marker;
    return item;
  });
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/chart/controller/legend.js

















/**
 * 从配置中获取单个字段的 legend 配置
 * @param legends
 * @param field
 * @returns the option of one legend field
 */

function getLegendOption(legends, field) {
  if (Object(esm["isBoolean"])(legends)) {
    return legends === false ? false : {};
  }

  return Object(esm["get"])(legends, [field], legends);
}

function getDirection(legendOption) {
  return Object(esm["get"])(legendOption, 'position', DIRECTION.BOTTOM);
}
/**
 * @ignore
 * legend Controller
 */


var legend_Legend =
/** @class */
function (_super) {
  __extends(Legend, _super);

  function Legend(view) {
    var _this = _super.call(this, view) || this;

    _this.container = _this.view.getLayer(LAYER.FORE).addGroup();
    return _this;
  }

  Object.defineProperty(Legend.prototype, "name", {
    get: function get() {
      return 'legend';
    },
    enumerable: false,
    configurable: true
  });

  Legend.prototype.init = function () {};
  /**
   * render the legend component by legend options
   */


  Legend.prototype.render = function () {
    var _this = this;

    this.option = this.view.getOptions().legends;

    var doEachLegend = function doEachLegend(geometry, attr, scale) {
      var legend = _this.createFieldLegend(geometry, attr, scale);

      if (legend) {
        legend.component.init();

        _this.components.push(legend);
      }
    }; // 全局自定义图例


    if (Object(esm["get"])(this.option, 'custom')) {
      var component = this.createCustomLegend(undefined, undefined, undefined, this.option);

      if (component) {
        component.init();
        var layer = LAYER.FORE;
        var direction = getDirection(this.option);
        this.components.push({
          id: 'global-custom',
          component: component,
          layer: layer,
          direction: direction,
          type: COMPONENT_TYPE.LEGEND,
          extra: undefined
        });
      }
    } else {
      // 遍历处理每一个创建逻辑
      this.loopLegends(doEachLegend);
    }
  };
  /**
   * layout legend
   * 计算出 legend 的 direction 位置 x, y
   */


  Legend.prototype.layout = function () {
    var _this = this;

    this.layoutBBox = this.view.viewBBox;
    var margin = Object(esm["get"])(this.view.getTheme(), ['components', 'legend', 'margin'], [0, 0, 0, 0]);
    Object(esm["each"])(this.components, function (co) {
      var component = co.component,
          direction = co.direction;
      var layout = getLegendLayout(direction);

      var maxSize = _this.getCategoryLegendSizeCfg(layout);

      var maxWidth = component.get('maxWidth');
      var maxHeight = component.get('maxHeight'); // 先更新 maxSize，更新 layoutBBox，以便计算正确的 x y

      component.update({
        maxWidth: Math.min(maxSize.maxWidth, maxWidth || 0),
        maxHeight: Math.min(maxSize.maxHeight, maxHeight || 0)
      });
      var bboxObject = component.getLayoutBBox(); // 这里只需要他的 width、height 信息做位置调整

      var bbox = new bbox_BBox(bboxObject.x, bboxObject.y, bboxObject.width, bboxObject.height);

      var _a = directionToPosition(_this.view.viewBBox, bbox, direction),
          x1 = _a[0],
          y1 = _a[1];

      var _b = directionToPosition(_this.layoutBBox, bbox, direction),
          x2 = _b[0],
          y2 = _b[1];

      var x = 0;
      var y = 0; // 因为 legend x y 要和 coordinateBBox 对齐，所以要做一个简单的判断

      if (direction.startsWith('top') || direction.startsWith('bottom')) {
        x = x1;
        y = y2;
      } else {
        x = x2;
        y = y1;
      } // 加上 margin


      if (direction.indexOf('left') >= 0) {
        x += margin[3];
      }

      if (direction.indexOf('right') >= 0) {
        x -= margin[1];
      }

      if (direction.indexOf('top') >= 0) {
        y += margin[0];
      }

      if (direction.indexOf('bottom') >= 0) {
        y -= margin[2];
      } // 更新位置


      component.update({
        x: x,
        y: y
      });
      _this.layoutBBox = _this.layoutBBox.cut(bbox, direction);
    });
  };
  /**
   * legend 的更新逻辑
   */


  Legend.prototype.update = function () {
    var _this = this;

    this.option = this.view.getOptions().legends; // 已经处理过的 legend

    var updated = {};

    var eachLegend = function eachLegend(geometry, attr, scale) {
      var id = _this.getId(scale.field);

      var existCo = _this.getComponentById(id); // 存在则 update


      if (existCo) {
        var cfg = void 0;
        var legendOption = getLegendOption(_this.option, scale.field); // if the legend option is not false, means legend should be created.

        if (legendOption !== false) {
          if (Object(esm["get"])(legendOption, 'custom')) {
            cfg = _this.getCategoryCfg(geometry, attr, scale, legendOption, true);
          } else {
            if (scale.isLinear) {
              // linear field, create continuous legend
              cfg = _this.getContinuousCfg(geometry, attr, scale, legendOption);
            } else if (scale.isCategory) {
              // category field, create category legend
              cfg = _this.getCategoryCfg(geometry, attr, scale, legendOption);
            }
          }
        } // 如果 cfg 为空，则不在 updated 标记，那么会在后面逻辑中删除


        if (cfg) {
          // omit 掉一些属性，比如 container 等
          omit(cfg, ['container']);
          existCo.direction = getDirection(legendOption);
          existCo.component.update(cfg); // 标记为新的

          updated[id] = true;
        }
      } else {
        // 不存在则 create
        var legend = _this.createFieldLegend(geometry, attr, scale);

        if (legend) {
          legend.component.init();

          _this.components.push(legend); // 标记为新的


          updated[id] = true;
        }
      }
    }; // 全局自定义图例


    if (Object(esm["get"])(this.option, 'custom')) {
      var id = 'global-custom';
      var existCo = this.getComponentById(id);

      if (existCo) {
        var customCfg = this.getCategoryCfg(undefined, undefined, undefined, this.option, true);
        omit(customCfg, ['container']);
        existCo.component.update(customCfg);
        updated[id] = true;
      } else {
        var component = this.createCustomLegend(undefined, undefined, undefined, this.option);

        if (component) {
          component.init();
          var layer = LAYER.FORE;
          var direction = getDirection(this.option);
          this.components.push({
            id: id,
            component: component,
            layer: layer,
            direction: direction,
            type: COMPONENT_TYPE.LEGEND,
            extra: undefined
          }); // 标记为更新

          updated[id] = true;
        }
      }
    } else {
      // 遍历处理每一个创建逻辑
      this.loopLegends(eachLegend);
    } // 处理完成之后，销毁删除的
    // 不在处理中的


    var components = [];
    Object(esm["each"])(this.getComponents(), function (co) {
      if (updated[co.id]) {
        components.push(co);
      } else {
        co.component.destroy();
      }
    }); // 更新当前已有的 components

    this.components = components;
  };

  Legend.prototype.clear = function () {
    _super.prototype.clear.call(this);

    this.container.clear();
  };

  Legend.prototype.destroy = function () {
    _super.prototype.destroy.call(this);

    this.container.remove(true);
  };
  /**
   * 递归获取所有的 Geometry
   */


  Legend.prototype.getGeometries = function (view) {
    var _this = this;

    var geometries = view.geometries;
    Object(esm["each"])(view.views, function (v) {
      geometries = geometries.concat(_this.getGeometries(v));
    });
    return geometries;
  };
  /**
   * 遍历 Geometry，处理 legend 逻辑
   * @param doEach 每个 loop 中的处理方法
   */


  Legend.prototype.loopLegends = function (doEach) {
    var isRootView = this.view.getRootView() === this.view; // 非根 view，不处理 legend

    if (!isRootView) {
      return;
    } // 递归 view 中所有的 Geometry，进行创建 legend


    var geometries = this.getGeometries(this.view);
    var looped = {}; // 防止一个字段创建两个 legend

    Object(esm["each"])(geometries, function (geometry) {
      var attributes = geometry.getGroupAttributes();
      Object(esm["each"])(attributes, function (attr) {
        var scale = attr.getScale(attr.type); // 如果在视觉通道上映射常量值，如 size(2) shape('circle') 不创建 legend

        if (!scale || scale.type === 'identity' || looped[scale.field]) {
          return;
        }

        doEach(geometry, attr, scale);
        looped[scale.field] = true;
      });
    });
  };
  /**
   * 创建一个 legend
   * @param geometry
   * @param attr
   * @param scale
   */


  Legend.prototype.createFieldLegend = function (geometry, attr, scale) {
    var component;
    var legendOption = getLegendOption(this.option, scale.field);
    var layer = LAYER.FORE;
    var direction = getDirection(legendOption); // if the legend option is not false, means legend should be created.

    if (legendOption !== false) {
      if (Object(esm["get"])(legendOption, 'custom')) {
        component = this.createCustomLegend(geometry, attr, scale, legendOption);
      } else {
        if (scale.isLinear) {
          // linear field, create continuous legend
          component = this.createContinuousLegend(geometry, attr, scale, legendOption);
        } else if (scale.isCategory) {
          // category field, create category legend
          component = this.createCategoryLegend(geometry, attr, scale, legendOption);
        }
      }
    }

    if (component) {
      component.set('field', scale.field);
      return {
        id: this.getId(scale.field),
        component: component,
        layer: layer,
        direction: direction,
        type: COMPONENT_TYPE.LEGEND,
        extra: {
          scale: scale
        }
      };
    }
  };
  /**
   * 自定义图例使用 category 图例去渲染
   * @param geometry
   * @param attr
   * @param scale
   * @param legendOption
   */


  Legend.prototype.createCustomLegend = function (geometry, attr, scale, legendOption) {
    // 直接使用 分类图例渲染
    var cfg = this.getCategoryCfg(geometry, attr, scale, legendOption, true);
    return new CategoryLegend(cfg);
  };
  /**
   * 创建连续图例
   * @param geometry
   * @param attr
   * @param scale
   * @param legendOption
   */


  Legend.prototype.createContinuousLegend = function (geometry, attr, scale, legendOption) {
    var cfg = this.getContinuousCfg(geometry, attr, scale, legendOption);
    return new ContinuousLegend(cfg);
  };
  /**
   * 创建分类图例
   * @param geometry
   * @param attr
   * @param scale
   * @param legendOption
   */


  Legend.prototype.createCategoryLegend = function (geometry, attr, scale, legendOption) {
    var cfg = this.getCategoryCfg(geometry, attr, scale, legendOption);
    return new CategoryLegend(cfg);
  };
  /**
   * 获得连续图例的配置
   * @param geometry
   * @param attr
   * @param scale
   * @param legendOption
   */


  Legend.prototype.getContinuousCfg = function (geometry, attr, scale, legendOption) {
    var ticks = scale.getTicks();
    var containMin = Object(esm["find"])(ticks, function (tick) {
      return tick.value === 0;
    });
    var containMax = Object(esm["find"])(ticks, function (tick) {
      return tick.value === 1;
    });
    var items = ticks.map(function (tick) {
      var value = tick.value,
          tickValue = tick.tickValue;
      var attrValue = attr.mapping(scale.invert(value)).join('');
      return {
        value: tickValue,
        attrValue: attrValue,
        color: attrValue,
        scaleValue: value
      };
    });

    if (!containMin) {
      items.push({
        value: scale.min,
        attrValue: attr.mapping(scale.invert(0)).join(''),
        color: attr.mapping(scale.invert(0)).join(''),
        scaleValue: 0
      });
    }

    if (!containMax) {
      items.push({
        value: scale.max,
        attrValue: attr.mapping(scale.invert(1)).join(''),
        color: attr.mapping(scale.invert(1)).join(''),
        scaleValue: 1
      });
    } // 排序


    items.sort(function (a, b) {
      return a.value - b.value;
    }); // 跟 attr 相关的配置
    // size color 区别的配置

    var attrLegendCfg = {
      min: Object(esm["head"])(items).value,
      max: Object(esm["last"])(items).value,
      colors: [],
      rail: {
        type: attr.type
      },
      track: {}
    };

    if (attr.type === 'size') {
      attrLegendCfg.track = {
        style: {
          // size 的选中前景色，对于 color，则直接使用 color 标识
          // @ts-ignore
          fill: attr.type === 'size' ? this.view.getTheme().defaultColor : undefined
        }
      };
    }

    if (attr.type === 'color') {
      attrLegendCfg.colors = items.map(function (item) {
        return item.attrValue;
      });
    }

    var container = this.container; // if position is not set, use top as default

    var direction = getDirection(legendOption);
    var layout = getLegendLayout(direction);
    var title = Object(esm["get"])(legendOption, 'title');

    if (title) {
      title = Object(esm["deepMix"])({
        text: getName(scale)
      }, title);
    } // 基础配置，从当前数据中读到的配置


    attrLegendCfg.container = container;
    attrLegendCfg.layout = layout;
    attrLegendCfg.title = title;
    attrLegendCfg.animateOption = DEFAULT_ANIMATE_CFG; // @ts-ignore

    return this.mergeLegendCfg(attrLegendCfg, legendOption, 'continuous');
  };
  /**
   * 获取分类图例的配置项
   * @param geometry
   * @param attr
   * @param scale
   * @param custom
   * @param legendOption
   */


  Legend.prototype.getCategoryCfg = function (geometry, attr, scale, legendOption, custom) {
    var container = this.container; // if position is not set, use top as default

    var direction = Object(esm["get"])(legendOption, 'position', DIRECTION.BOTTOM); // the default marker style

    var themeMarker = Object(esm["get"])(this.view.getTheme(), ['components', 'legend', direction, 'marker']);
    var userMarker = Object(esm["get"])(legendOption, 'marker');
    var layout = getLegendLayout(direction);
    var items = custom ? getCustomLegendItems(themeMarker, userMarker, legendOption.items) : getLegendItems(this.view, geometry, attr, themeMarker, userMarker);
    var title = Object(esm["get"])(legendOption, 'title');

    if (title) {
      title = Object(esm["deepMix"])({
        text: scale ? getName(scale) : ''
      }, title);
    }

    var baseCfg = this.getCategoryLegendSizeCfg(layout);
    baseCfg.container = container;
    baseCfg.layout = layout;
    baseCfg.items = items;
    baseCfg.title = title;
    baseCfg.animateOption = DEFAULT_ANIMATE_CFG;
    var categoryCfg = this.mergeLegendCfg(baseCfg, legendOption, direction);

    if (categoryCfg.reversed) {
      // 图例项需要逆序
      categoryCfg.items.reverse();
    }

    return categoryCfg;
  };
  /**
   * get legend config, use option > suggestion > theme
   * @param baseCfg
   * @param legendOption
   * @param direction
   */


  Legend.prototype.mergeLegendCfg = function (baseCfg, legendOption, direction) {
    var themeObject = Object(esm["get"])(this.view.getTheme(), ['components', 'legend', direction], {});
    return Object(esm["deepMix"])({}, themeObject, baseCfg, legendOption);
  };
  /**
   * 生成 id
   * @param key
   */


  Legend.prototype.getId = function (key) {
    return this.name + "-" + key;
  };
  /**
   * 根据 id 来获取组件
   * @param id
   */


  Legend.prototype.getComponentById = function (id) {
    return Object(esm["find"])(this.components, function (co) {
      return co.id === id;
    });
  };

  Legend.prototype.getCategoryLegendSizeCfg = function (layout) {
    var _a = this.view.viewBBox,
        vw = _a.width,
        vh = _a.height; // 目前 legend 的布局是以 viewBBox 为参照
    // const { width: cw, height: ch } = this.view.coordinateBBox;

    return layout === 'vertical' ? {
      maxWidth: vw * COMPONENT_MAX_VIEW_PERCENTAGE,
      maxHeight: vh
    } : {
      maxWidth: vw,
      maxHeight: vh * COMPONENT_MAX_VIEW_PERCENTAGE
    };
  };

  return Legend;
}(base_Controller);

/* harmony default export */ var controller_legend = (legend_Legend);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/chart/controller/slider.js











/**
 * @ignore
 * slider Controller
 */

var controller_slider_Slider =
/** @class */
function (_super) {
  __extends(Slider, _super);

  function Slider(view) {
    var _this = _super.call(this, view) || this;
    /**
     * 滑块滑动的时候出发
     * @param v
     */


    _this.onValueChanged = function (v) {
      var min = v[0],
          max = v[1];

      _this.updateMinMaxText(min, max);

      _this.view.render(true);
    };

    _this.container = _this.view.getLayer(LAYER.FORE).addGroup();
    return _this;
  }

  Object.defineProperty(Slider.prototype, "name", {
    get: function get() {
      return 'slider';
    },
    enumerable: false,
    configurable: true
  });
  /**
   * 初始化
   */

  Slider.prototype.init = function () {};
  /**
   * 渲染
   */


  Slider.prototype.render = function () {
    this.option = this.view.getOptions().slider;

    if (this.option) {
      if (this.slider) {
        // exist, update
        this.slider = this.updateSlider();
      } else {
        // not exist, create
        this.slider = this.createSlider(); // 监听事件，绑定交互

        this.slider.component.on('sliderchange', this.onValueChanged);
      } // changeData 的时候同样需要更新
      // 设置初始的 text


      var min = this.slider.component.get('start') || 0;
      var max = this.slider.component.get('end') || 1;
      this.updateMinMaxText(min, max);
    } else {
      if (this.slider) {
        // exist, destroy
        this.slider.component.destroy();
        this.slider = undefined;
      } else {// do nothing
      }
    }
  };
  /**
   * 布局
   */


  Slider.prototype.layout = function () {
    if (this.slider) {
      var width = this.view.coordinateBBox.width; // 获取组件的 layout bbox

      var bboxObject = this.slider.component.getLayoutBBox();
      var bbox = new bbox_BBox(bboxObject.x, bboxObject.y, Math.min(bboxObject.width, width), bboxObject.height);

      var _a = directionToPosition(this.view.viewBBox, bbox, DIRECTION.BOTTOM),
          x1 = _a[0],
          y1 = _a[1];

      var _b = directionToPosition(this.view.coordinateBBox, bbox, DIRECTION.BOTTOM),
          x2 = _b[0],
          y2 = _b[1]; // 默认放在 bottom


      this.slider.component.update({
        x: x2,
        y: y1,
        width: width
      });
    }
  };
  /**
   * 更新
   */


  Slider.prototype.update = function () {
    // 逻辑和 render 保持一致
    this.render();
  };
  /**
   * 创建 slider 组件
   */


  Slider.prototype.createSlider = function () {
    var cfg = this.getSliderCfg(); // 添加 slider 组件

    var component = new slider_Slider(_assign({
      container: this.container
    }, cfg));
    component.init();
    return {
      component: component,
      layer: LAYER.FORE,
      direction: DIRECTION.BOTTOM,
      type: COMPONENT_TYPE.OTHER
    };
  };
  /**
   * 更新配置
   */


  Slider.prototype.updateSlider = function () {
    var cfg = this.getSliderCfg();
    omit(cfg, ['x', 'y', 'width', 'start', 'end', 'minText', 'maxText']);
    this.slider.component.update(cfg);
    return this.slider;
  };
  /**
   * 生成 slider 配置
   */


  Slider.prototype.getSliderCfg = function () {
    if (Object(esm["isObject"])(this.option)) {
      // 用户配置的数据，优先级更高
      var trendCfg = _assign({
        data: this.getData()
      }, Object(esm["get"])(this.option, 'trendCfg', {})); // 初始的位置大小信息


      var x = 0;
      var y = 0;
      var width = this.view.coordinateBBox.width; // 因为有样式，所以深层覆盖

      var cfg = Object(esm["deepMix"])({}, {
        x: x,
        y: y,
        width: width
      }, this.option); // trendCfg 因为有数据数组，所以使用浅替换

      return _assign(_assign({}, cfg), {
        trendCfg: trendCfg
      });
    }

    return {};
  };
  /**
   * 从 view 中获取数据，缩略轴使用全量的数据
   */


  Slider.prototype.getData = function () {
    var data = this.view.getOptions().data;
    var yScale = this.view.getYScales()[0];
    return data.map(function (datum) {
      return datum[yScale.field] || 0;
    });
  };

  Slider.prototype.updateMinMaxText = function (min, max) {
    var data = this.view.getOptions().data;
    var dataSize = Object(esm["size"])(data);
    var xScale = this.view.getXScale();

    if (!xScale || !dataSize) {
      return;
    }

    var x = xScale.field; // x 轴数据

    var xData = data.map(function (datum) {
      return datum[x] || '';
    });
    var minIndex = Math.floor(min * (dataSize - 1));
    var maxIndex = Math.floor(max * (dataSize - 1));
    var minText = Object(esm["get"])(xData, [minIndex]);
    var maxText = Object(esm["get"])(xData, [maxIndex]);
    var formatter = this.getSliderCfg().formatter;

    if (formatter) {
      minText = formatter(minText, data[minIndex], minIndex);
      maxText = formatter(maxText, data[maxIndex], maxIndex);
    } // 更新文本


    this.slider.component.update({
      minText: minText,
      maxText: maxText,
      start: min,
      end: max
    }); // 增加 x 轴的过滤器

    this.view.filter(xScale.field, function (value, datum, idx) {
      return helper_isBetween(idx, minIndex, maxIndex);
    });
  };
  /**
   * 覆写父类方法
   */


  Slider.prototype.getComponents = function () {
    return this.slider ? [this.slider] : [];
  };

  return Slider;
}(base_Controller);

/* harmony default export */ var controller_slider = (controller_slider_Slider);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/chart/controller/tooltip.js











 // Filter duplicates, use `name`, `color`, `value` and `title` property values as condition

function tooltip_uniq(items) {
  var uniqItems = [];

  var _loop_1 = function _loop_1(index) {
    var item = items[index];
    var result = Object(esm["find"])(uniqItems, function (subItem) {
      return subItem.color === item.color && subItem.name === item.name && subItem.value === item.value && subItem.title === item.title;
    });

    if (!result) {
      uniqItems.push(item);
    }
  };

  for (var index = 0; index < items.length; index++) {
    _loop_1(index);
  }

  return uniqItems;
}
/** @ignore */


var tooltip_Tooltip =
/** @class */
function (_super) {
  __extends(Tooltip, _super);

  function Tooltip() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.isLocked = false;
    _this.isVisible = true;
    return _this;
  }

  Object.defineProperty(Tooltip.prototype, "name", {
    get: function get() {
      return 'tooltip';
    },
    enumerable: false,
    configurable: true
  });

  Tooltip.prototype.init = function () {};

  Tooltip.prototype.render = function () {
    var option = this.view.getOptions().tooltip;
    this.isVisible = option !== false;
  };
  /**
   * Shows tooltip
   * @param point
   */


  Tooltip.prototype.showTooltip = function (point) {
    this.point = point;

    if (!this.isVisible) {
      // 如果设置 tooltip(false) 则始终不显示
      return;
    }

    var view = this.view;
    var items = this.getTooltipItems(point);

    if (!items.length) {
      // 无内容则不展示，同时 tooltip 需要隐藏
      this.hideTooltip();
      return;
    }

    var title = this.getTitle(items);
    var dataPoint = {
      x: items[0].x,
      y: items[0].y
    }; // 数据点位置

    view.emit('tooltip:show', _assign({
      items: items,
      title: title
    }, point));
    var cfg = this.getTooltipCfg();
    var follow = cfg.follow,
        showMarkers = cfg.showMarkers,
        showCrosshairs = cfg.showCrosshairs,
        showContent = cfg.showContent,
        marker = cfg.marker;
    var lastItems = this.items;
    var lastTitle = this.title;

    if (!Object(esm["isEqual"])(lastTitle, title) || !Object(esm["isEqual"])(lastItems, items)) {
      // 内容发生变化了更新 tooltip
      view.emit('tooltip:change', _assign({
        items: items,
        title: title
      }, point));

      if (showContent) {
        // 展示 tooltip 内容框才渲染 tooltip
        if (!this.tooltip) {
          // 延迟生成
          this.renderTooltip();
        }

        this.tooltip.update(Object(esm["mix"])({}, cfg, {
          items: items,
          title: title
        }, follow ? point : {}));
        this.tooltip.show();
      }

      if (showMarkers) {
        // 展示 tooltipMarkers，tooltipMarkers 跟随数据
        this.renderTooltipMarkers(items, marker);
      }
    } else {
      // 内容未发生变化，则更新位置
      if (this.tooltip && follow) {
        this.tooltip.update(point);
        this.tooltip.show(); // tooltip 有可能被隐藏，需要保证显示状态
      }

      if (this.tooltipMarkersGroup) {
        this.tooltipMarkersGroup.show();
      }
    }

    this.items = items;
    this.title = title;

    if (showCrosshairs) {
      // 展示 tooltip 辅助线
      var isCrosshairsFollowCursor = Object(esm["get"])(cfg, ['crosshairs', 'follow'], false); // 辅助线是否要跟随鼠标

      this.renderCrosshairs(isCrosshairsFollowCursor ? point : dataPoint, cfg);
    }
  };

  Tooltip.prototype.hideTooltip = function () {
    var follow = this.getTooltipCfg().follow;

    if (!follow) {
      this.point = null;
      return;
    } // hide the tooltipMarkers


    var tooltipMarkersGroup = this.tooltipMarkersGroup;

    if (tooltipMarkersGroup) {
      tooltipMarkersGroup.hide();
    } // hide crosshairs


    var xCrosshair = this.xCrosshair;
    var yCrosshair = this.yCrosshair;

    if (xCrosshair) {
      xCrosshair.hide();
    }

    if (yCrosshair) {
      yCrosshair.hide();
    }

    var tooltip = this.tooltip;

    if (tooltip) {
      tooltip.hide();
    }

    this.view.emit('tooltip:hide', {});
    this.point = null;
  };
  /**
   * lockTooltip
   */


  Tooltip.prototype.lockTooltip = function () {
    this.isLocked = true;

    if (this.tooltip) {
      // tooltip contianer 可捕获事件
      this.tooltip.setCapture(true);
    }
  };
  /**
   * unlockTooltip
   */


  Tooltip.prototype.unlockTooltip = function () {
    this.isLocked = false;
    var cfg = this.getTooltipCfg();

    if (this.tooltip) {
      // 重置 capture 属性
      this.tooltip.setCapture(cfg.capture);
    }
  };
  /**
   * isTooltipLocked
   */


  Tooltip.prototype.isTooltipLocked = function () {
    return this.isLocked;
  };

  Tooltip.prototype.clear = function () {
    var _a = this,
        tooltip = _a.tooltip,
        xCrosshair = _a.xCrosshair,
        yCrosshair = _a.yCrosshair,
        tooltipMarkersGroup = _a.tooltipMarkersGroup;

    if (tooltip) {
      tooltip.hide();
      tooltip.clear();
    }

    if (xCrosshair) {
      xCrosshair.clear();
    }

    if (yCrosshair) {
      yCrosshair.clear();
    }

    if (tooltipMarkersGroup) {
      tooltipMarkersGroup.clear();
    }
  };

  Tooltip.prototype.destroy = function () {
    if (this.tooltip) {
      this.tooltip.destroy();
    }

    if (this.xCrosshair) {
      this.xCrosshair.destroy();
    }

    if (this.yCrosshair) {
      this.yCrosshair.destroy();
    }

    if (this.guideGroup) {
      this.guideGroup.remove(true);
    }

    this.items = null;
    this.title = null;
    this.tooltipMarkersGroup = null;
    this.tooltipCrosshairsGroup = null;
    this.xCrosshair = null;
    this.yCrosshair = null;
    this.tooltip = null;
    this.guideGroup = null;
    this.isLocked = false;
    this.point = null;
  };

  Tooltip.prototype.changeVisible = function (visible) {
    if (this.visible === visible) {
      return;
    }

    var _a = this,
        tooltip = _a.tooltip,
        tooltipMarkersGroup = _a.tooltipMarkersGroup,
        xCrosshair = _a.xCrosshair,
        yCrosshair = _a.yCrosshair;

    if (visible) {
      if (tooltip) {
        tooltip.show();
      }

      if (tooltipMarkersGroup) {
        tooltipMarkersGroup.show();
      }

      if (xCrosshair) {
        xCrosshair.show();
      }

      if (yCrosshair) {
        yCrosshair.show();
      }
    } else {
      if (tooltip) {
        tooltip.hide();
      }

      if (tooltipMarkersGroup) {
        tooltipMarkersGroup.hide();
      }

      if (xCrosshair) {
        xCrosshair.hide();
      }

      if (yCrosshair) {
        yCrosshair.hide();
      }
    }

    this.visible = visible;
  };

  Tooltip.prototype.getTooltipItems = function (point) {
    var items = this.findItemsFromView(this.view, point);

    if (items.length) {
      // 三层
      items = Object(esm["flatten"])(items);

      for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {
        var itemArr = items_1[_i];

        for (var _a = 0, itemArr_1 = itemArr; _a < itemArr_1.length; _a++) {
          var item = itemArr_1[_a];
          var _b = item.mappingData,
              x = _b.x,
              y = _b.y;
          item.x = Object(esm["isArray"])(x) ? x[x.length - 1] : x;
          item.y = Object(esm["isArray"])(y) ? y[y.length - 1] : y;
        }
      }

      var shared = this.getTooltipCfg().shared; // shared: false 代表只显示当前拾取到的 shape 的数据，但是一个 view 会有多个 Geometry，所以有可能会拾取到多个 shape

      if (shared === false && items.length > 1) {
        var snapItem = items[0];
        var min = Math.abs(point.y - snapItem[0].y);

        for (var _c = 0, items_2 = items; _c < items_2.length; _c++) {
          var aItem = items_2[_c];
          var yDistance = Math.abs(point.y - aItem[0].y);

          if (yDistance <= min) {
            snapItem = aItem;
            min = yDistance;
          }
        }

        items = [snapItem];
      }

      return tooltip_uniq(Object(esm["flatten"])(items));
    }

    return [];
  };

  Tooltip.prototype.layout = function () {};

  Tooltip.prototype.update = function () {
    if (this.point) {
      this.showTooltip(this.point);
    }
  }; // 获取 tooltip 配置，因为用户可能会通过 view.tooltip() 重新配置 tooltip，所以就不做缓存，每次直接读取


  Tooltip.prototype.getTooltipCfg = function () {
    var view = this.view;
    var option = view.getOptions().tooltip;
    var theme = view.getTheme();
    var defaultCfg = Object(esm["get"])(theme, ['components', 'tooltip'], {});
    var enterable = Object(esm["isUndefined"])(Object(esm["get"])(option, 'enterable')) ? defaultCfg.enterable : Object(esm["get"])(option, 'enterable');
    return Object(esm["deepMix"])({}, defaultCfg, option, {
      capture: enterable || this.isLocked ? true : false
    });
  };

  Tooltip.prototype.getTitle = function (items) {
    var title = items[0].title || items[0].name;
    this.title = title;
    return title;
  };

  Tooltip.prototype.renderTooltip = function () {
    var canvas = this.view.getCanvas();
    var region = {
      start: {
        x: 0,
        y: 0
      },
      end: {
        x: canvas.get('width'),
        y: canvas.get('height')
      }
    };
    var cfg = this.getTooltipCfg();
    var tooltip = new HtmlTooltip(_assign(_assign({
      parent: canvas.get('el').parentNode,
      region: region
    }, cfg), {
      visible: false,
      crosshairs: null
    }));
    tooltip.init();
    this.tooltip = tooltip;
  };

  Tooltip.prototype.renderTooltipMarkers = function (items, marker) {
    var tooltipMarkersGroup = this.getTooltipMarkersGroup();

    for (var _i = 0, items_3 = items; _i < items_3.length; _i++) {
      var item = items_3[_i];
      var x = item.x,
          y = item.y;

      var attrs = _assign(_assign({
        fill: item.color,
        symbol: 'circle',
        shadowColor: item.color
      }, marker), {
        x: x,
        y: y
      });

      tooltipMarkersGroup.addShape('marker', {
        attrs: attrs
      });
    }
  };

  Tooltip.prototype.renderCrosshairs = function (point, cfg) {
    var crosshairsType = Object(esm["get"])(cfg, ['crosshairs', 'type'], 'x'); // 默认展示 x 轴上的辅助线

    if (crosshairsType === 'x') {
      if (this.yCrosshair) {
        this.yCrosshair.hide();
      }

      this.renderXCrosshairs(point, cfg);
    } else if (crosshairsType === 'y') {
      if (this.xCrosshair) {
        this.xCrosshair.hide();
      }

      this.renderYCrosshairs(point, cfg);
    } else if (crosshairsType === 'xy') {
      this.renderXCrosshairs(point, cfg);
      this.renderYCrosshairs(point, cfg);
    }
  }; // 渲染 x 轴上的 tooltip 辅助线


  Tooltip.prototype.renderXCrosshairs = function (point, tooltipCfg) {
    var coordinate = this.getViewWithGeometry(this.view).getCoordinate();

    if (!isPointInCoordinate(coordinate, point)) {
      return;
    }

    var start;
    var end;

    if (coordinate.isRect) {
      if (coordinate.isTransposed) {
        start = {
          x: coordinate.start.x,
          y: point.y
        };
        end = {
          x: coordinate.end.x,
          y: point.y
        };
      } else {
        start = {
          x: point.x,
          y: coordinate.end.y
        };
        end = {
          x: point.x,
          y: coordinate.start.y
        };
      }
    } else {
      // 极坐标下 x 轴上的 crosshairs 表现为半径
      var angle = getAngleByPoint(coordinate, point);
      var center = coordinate.getCenter();
      var radius = coordinate.getRadius();
      end = polarToCartesian(center.x, center.y, radius, angle);
      start = center;
    }

    var cfg = Object(esm["deepMix"])({
      start: start,
      end: end,
      container: this.getTooltipCrosshairsGroup()
    }, Object(esm["get"])(tooltipCfg, 'crosshairs', {}), this.getCrosshairsText('x', point, tooltipCfg));
    delete cfg.type; // 与 Crosshairs 组件的 type 冲突故删除

    var xCrosshair = this.xCrosshair;

    if (xCrosshair) {
      xCrosshair.update(cfg);
    } else {
      xCrosshair = new crosshair_namespaceObject.Line(cfg);
      xCrosshair.init();
    }

    xCrosshair.render();
    xCrosshair.show();
    this.xCrosshair = xCrosshair;
  }; // 渲染 y 轴上的辅助线


  Tooltip.prototype.renderYCrosshairs = function (point, tooltipCfg) {
    var coordinate = this.getViewWithGeometry(this.view).getCoordinate();

    if (!isPointInCoordinate(coordinate, point)) {
      return;
    }

    var cfg;
    var type;

    if (coordinate.isRect) {
      var start = void 0;
      var end = void 0;

      if (coordinate.isTransposed) {
        start = {
          x: point.x,
          y: coordinate.end.y
        };
        end = {
          x: point.x,
          y: coordinate.start.y
        };
      } else {
        start = {
          x: coordinate.start.x,
          y: point.y
        };
        end = {
          x: coordinate.end.x,
          y: point.y
        };
      }

      cfg = {
        start: start,
        end: end
      };
      type = 'Line';
    } else {
      // 极坐标下 y 轴上的 crosshairs 表现为圆弧
      cfg = {
        center: coordinate.getCenter(),
        // @ts-ignore
        radius: getDistanceToCenter(coordinate, point),
        startAngle: coordinate.startAngle,
        endAngle: coordinate.endAngle
      };
      type = 'Circle';
    }

    cfg = Object(esm["deepMix"])({
      container: this.getTooltipCrosshairsGroup()
    }, cfg, Object(esm["get"])(tooltipCfg, 'crosshairs', {}), this.getCrosshairsText('y', point, tooltipCfg));
    delete cfg.type; // 与 Crosshairs 组件的 type 冲突故删除

    var yCrosshair = this.yCrosshair;

    if (yCrosshair) {
      // 如果坐标系发生直角坐标系与极坐标的切换操作
      if (coordinate.isRect && yCrosshair.get('type') === 'circle' || !coordinate.isRect && yCrosshair.get('type') === 'line') {
        yCrosshair = new crosshair_namespaceObject[type](cfg);
        yCrosshair.init();
      } else {
        yCrosshair.update(cfg);
      }
    } else {
      yCrosshair = new crosshair_namespaceObject[type](cfg);
      yCrosshair.init();
    }

    yCrosshair.render();
    yCrosshair.show();
    this.yCrosshair = yCrosshair;
  };

  Tooltip.prototype.getCrosshairsText = function (type, point, tooltipCfg) {
    var textCfg = Object(esm["get"])(tooltipCfg, ['crosshairs', 'text']);
    var follow = Object(esm["get"])(tooltipCfg, ['crosshairs', 'follow']);
    var items = this.items;

    if (textCfg) {
      var view = this.getViewWithGeometry(this.view); // 需要展示文本

      var firstItem = items[0];
      var xScale = view.getXScale();
      var yScale = view.getYScales()[0];
      var xValue = void 0;
      var yValue = void 0;

      if (follow) {
        // 如果需要跟随鼠标移动，就需要将当前鼠标坐标点转换为对应的数值
        var invertPoint = this.view.getCoordinate().invert(point);
        xValue = xScale.invert(invertPoint.x); // 转换为原始值

        yValue = yScale.invert(invertPoint.y); // 转换为原始值
      } else {
        xValue = firstItem.data[xScale.field];
        yValue = firstItem.data[yScale.field];
      }

      var content = type === 'x' ? xValue : yValue;

      if (Object(esm["isFunction"])(textCfg)) {
        textCfg = textCfg(type, content, items, point);
      } else {
        textCfg.content = content;
      }

      return {
        text: textCfg
      };
    }
  }; // 获取存储 tooltipMarkers 和 crosshairs 的容器


  Tooltip.prototype.getGuideGroup = function () {
    if (!this.guideGroup) {
      var foregroundGroup = this.view.foregroundGroup;
      this.guideGroup = foregroundGroup.addGroup({
        name: 'tooltipGuide',
        capture: false
      });
    }

    return this.guideGroup;
  }; // 获取 tooltipMarkers 存储的容器


  Tooltip.prototype.getTooltipMarkersGroup = function () {
    var tooltipMarkersGroup = this.tooltipMarkersGroup;

    if (tooltipMarkersGroup && !tooltipMarkersGroup.destroyed) {
      tooltipMarkersGroup.clear();
      tooltipMarkersGroup.show();
    } else {
      tooltipMarkersGroup = this.getGuideGroup().addGroup({
        name: 'tooltipMarkersGroup'
      });
      tooltipMarkersGroup.toFront();
      this.tooltipMarkersGroup = tooltipMarkersGroup;
    }

    return tooltipMarkersGroup;
  }; // 获取 tooltip crosshairs 存储的容器


  Tooltip.prototype.getTooltipCrosshairsGroup = function () {
    var tooltipCrosshairsGroup = this.tooltipCrosshairsGroup;

    if (!tooltipCrosshairsGroup) {
      tooltipCrosshairsGroup = this.getGuideGroup().addGroup({
        name: 'tooltipCrosshairsGroup',
        capture: false
      });
      tooltipCrosshairsGroup.toBack();
      this.tooltipCrosshairsGroup = tooltipCrosshairsGroup;
    }

    return tooltipCrosshairsGroup;
  };

  Tooltip.prototype.getTooltipItemsByHitShape = function (geometry, point, title) {
    var result = [];
    var container = geometry.container;
    var shape = container.getShape(point.x, point.y);

    if (shape && shape.get('visible') && shape.get('origin')) {
      var mappingData = shape.get('origin').mappingData;
      var items = getTooltipItems(mappingData, geometry, title);

      if (items.length) {
        result.push(items);
      }
    }

    return result;
  };

  Tooltip.prototype.getTooltipItemsByFindData = function (geometry, point, title) {
    var result = [];
    var dataArray = geometry.dataArray;
    geometry.sort(dataArray); // 先进行排序，便于 tooltip 查找

    for (var _i = 0, dataArray_1 = dataArray; _i < dataArray_1.length; _i++) {
      var data = dataArray_1[_i];
      var record = findDataByPoint(point, data, geometry);

      if (record) {
        var elementId = geometry.getElementId(record);
        var element = geometry.elementsMap[elementId];

        if (geometry.type === 'heatmap' || element.visible) {
          // Heatmap 没有 Element
          // 如果图形元素隐藏了，怎不再 tooltip 上展示相关数据
          var items = getTooltipItems(record, geometry, title);

          if (items.length) {
            result.push(items);
          }
        }
      }
    }

    return result;
  };

  Tooltip.prototype.findItemsFromView = function (view, point) {
    if (view.getOptions().tooltip === false) {
      // 如果 view 关闭了 tooltip
      return [];
    }

    var result = []; // 先从 view 本身查找

    var geometries = view.geometries;

    var _a = this.getTooltipCfg(),
        shared = _a.shared,
        title = _a.title;

    for (var _i = 0, geometries_1 = geometries; _i < geometries_1.length; _i++) {
      var geometry = geometries_1[_i];

      if (geometry.visible && geometry.tooltipOption !== false) {
        // geometry 可见同时未关闭 tooltip
        var geometryType = geometry.type;
        var tooltipItems = void 0;

        if (['point', 'edge', 'polygon'].includes(geometryType)) {
          // 始终通过图形拾取
          tooltipItems = this.getTooltipItemsByHitShape(geometry, point, title);
        } else if (['area', 'line', 'path', 'heatmap'].includes(geometryType)) {
          // 如果是 'area', 'line', 'path'，始终通过数据查找方法查找 tooltip
          tooltipItems = this.getTooltipItemsByFindData(geometry, point, title);
        } else {
          if (shared !== false) {
            tooltipItems = this.getTooltipItemsByFindData(geometry, point, title);
          } else {
            tooltipItems = this.getTooltipItemsByHitShape(geometry, point, title);
          }
        }

        if (tooltipItems.length) {
          // geometry 有可能会有多个 item，因为用户可以设置 geometry.tooltip('x*y*z')
          result.push(tooltipItems);
        }
      }
    } // 递归查找，并合并结果


    for (var _b = 0, _c = view.views; _b < _c.length; _b++) {
      var childView = _c[_b];
      result = result.concat(this.findItemsFromView(childView, point));
    }

    return result;
  }; // FIXME: hack 方法
  // 因为 tooltip 的交互是挂载在 Chart 上，所以当chart 上没有绘制 Geometry 的时候，就查找不到数据，并且绘图区域同子 View 的区域不同


  Tooltip.prototype.getViewWithGeometry = function (view) {
    var _this = this;

    if (view.geometries.length) {
      return view;
    }

    return Object(esm["find"])(view.views, function (childView) {
      return _this.getViewWithGeometry(childView);
    });
  };

  return Tooltip;
}(base_Controller);

/* harmony default export */ var controller_tooltip = (tooltip_Tooltip);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/active-region.js




/**
 * 背景框的 Action
 * @ignore
 */

var active_region_ActiveRegion =
/** @class */
function (_super) {
  __extends(ActiveRegion, _super);

  function ActiveRegion() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
   * 显示
   */


  ActiveRegion.prototype.show = function () {
    var view = this.context.view;
    var ev = this.context.event;
    var tooltipItems = view.getTooltipItems({
      x: ev.x,
      y: ev.y
    });

    if (Object(esm["isEqual"])(tooltipItems, this.items)) {
      // 如果拾取数据同上次相同，则不重复绘制
      return;
    }

    this.items = tooltipItems;

    if (tooltipItems.length) {
      var xField_1 = view.getXScale().field;
      var xValue_1 = tooltipItems[0].data[xField_1]; // 根据 x 对应的值查找 elements

      var elements_1 = [];
      var geometries = view.geometries;
      Object(esm["each"])(geometries, function (geometry) {
        if (geometry.type === 'interval' || geometry.type === 'schema') {
          var result = geometry.getElementsBy(function (ele) {
            var eleData = ele.getData();
            return eleData[xField_1] === xValue_1;
          });
          elements_1 = elements_1.concat(result);
        }
      }); // 根据 bbox 计算背景框的面积区域

      if (elements_1.length) {
        var coordinate_1 = view.getCoordinate();
        var firstBBox_1 = elements_1[0].shape.getCanvasBBox();
        var lastBBox_1 = elements_1[0].shape.getCanvasBBox();
        var groupBBox_1 = firstBBox_1;
        Object(esm["each"])(elements_1, function (ele) {
          var bbox = ele.shape.getCanvasBBox();

          if (coordinate_1.isTransposed) {
            if (bbox.minY < firstBBox_1.minY) {
              firstBBox_1 = bbox;
            }

            if (bbox.maxY > lastBBox_1.maxY) {
              lastBBox_1 = bbox;
            }
          } else {
            if (bbox.minX < firstBBox_1.minX) {
              firstBBox_1 = bbox;
            }

            if (bbox.maxX > lastBBox_1.maxX) {
              lastBBox_1 = bbox;
            }
          }

          groupBBox_1.x = Math.min(bbox.minX, groupBBox_1.minX);
          groupBBox_1.y = Math.min(bbox.minY, groupBBox_1.minY);
          groupBBox_1.width = Math.max(bbox.maxX, groupBBox_1.maxX) - groupBBox_1.x;
          groupBBox_1.height = Math.max(bbox.maxY, groupBBox_1.maxY) - groupBBox_1.y;
        });
        var backgroundGroup = view.backgroundGroup,
            coordinateBBox = view.coordinateBBox;
        var path = void 0;

        if (coordinate_1.isRect) {
          var xScale = view.getXScale();
          var appendRatio = xScale.isLinear ? 0 : 0.25; // 如果 x 轴是数值类型，如直方图，不需要家额外的宽度

          var minX = void 0;
          var minY = void 0;
          var width = void 0;
          var height = void 0;

          if (coordinate_1.isTransposed) {
            minX = coordinateBBox.minX;
            minY = Math.min(lastBBox_1.minY, firstBBox_1.minY) - appendRatio * lastBBox_1.height;
            width = coordinateBBox.width;
            height = groupBBox_1.height + appendRatio * 2 * lastBBox_1.height;
          } else {
            minX = Math.min(firstBBox_1.minX, lastBBox_1.minX) - appendRatio * firstBBox_1.width;
            minY = Math.min(coordinateBBox.minY, firstBBox_1.minY);
            width = groupBBox_1.width + appendRatio * 2 * firstBBox_1.width;
            height = coordinateBBox.height;
          }

          path = [['M', minX, minY], ['L', minX + width, minY], ['L', minX + width, minY + height], ['L', minX, minY + height], ['Z']];
        } else {
          var firstElement = Object(esm["head"])(elements_1);
          var lastElement = Object(esm["last"])(elements_1);
          var startAngle = graphics_getAngle(firstElement.getModel(), coordinate_1).startAngle;
          var endAngle = graphics_getAngle(lastElement.getModel(), coordinate_1).endAngle;
          var center = coordinate_1.getCenter();
          var radius = coordinate_1.getRadius();
          var innterRadius = coordinate_1.innerRadius * radius;
          path = getSectorPath(center.x, center.y, radius, startAngle, endAngle, innterRadius);
        }

        if (this.regionPath) {
          this.regionPath.attr('path', path);
          this.regionPath.show();
        } else {
          this.regionPath = backgroundGroup.addShape({
            type: 'path',
            name: 'active-region',
            capture: false,
            attrs: {
              path: path,
              fill: '#CCD6EC',
              opacity: 0.3
            }
          });
        }
      }
    }
  };
  /**
   * 隐藏
   */


  ActiveRegion.prototype.hide = function () {
    if (this.regionPath) {
      this.regionPath.hide();
    } // this.regionPath = null;


    this.items = null;
  };
  /**
   * 销毁
   */


  ActiveRegion.prototype.destroy = function () {
    this.hide();

    if (this.regionPath) {
      this.regionPath.remove(true);
    }

    _super.prototype.destroy.call(this);
  };

  return ActiveRegion;
}(action_base);

/* harmony default export */ var active_region = (active_region_ActiveRegion);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/component/tooltip.js




 // 判断是否有样式

function tooltip_hasClass(dom, className) {
  if (!dom) {
    return false;
  }

  var cls = '';

  if (!dom.className) {
    return false;
  }

  if (!Object(esm["isNil"])(dom.className.baseVal)) {
    cls = dom.className.baseVal;
  } else {
    cls = dom.className;
  }

  return cls.includes(className);
}

function isParent(dom, cls) {
  var parent = dom.parentNode;
  var rst = false;

  while (parent && parent !== document.body) {
    if (tooltip_hasClass(parent, cls)) {
      rst = true;
      break;
    }

    parent = parent.parentNode;
  }

  return rst;
}
/**
 * Tooltip 展示隐藏的 Action
 * @ignore
 */


var tooltip_TooltipAction =
/** @class */
function (_super) {
  __extends(TooltipAction, _super);

  function TooltipAction() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.timeStamp = 0;
    return _this;
  }
  /**
   * 显示 Tooltip
   * @returns
   */


  TooltipAction.prototype.show = function () {
    var context = this.context;
    var ev = context.event;
    var view = context.view;
    var isTooltipLocked = view.isTooltipLocked();

    if (isTooltipLocked) {
      // 锁定时不移动 tooltip
      return;
    }

    var lastTimeStamp = this.timeStamp;
    var timeStamp = +new Date();

    if (timeStamp - lastTimeStamp > 16) {
      var preLoc = this.location;
      var curLoc = {
        x: ev.x,
        y: ev.y
      };

      if (!preLoc || !Object(esm["isEqual"])(preLoc, curLoc)) {
        this.showTooltip(view, curLoc);
      }

      this.timeStamp = timeStamp;
      this.location = curLoc;
    }
  };
  /**
   * 隐藏 Tooltip。
   * @returns
   */


  TooltipAction.prototype.hide = function () {
    var view = this.context.view;
    var isTooltipLocked = view.isTooltipLocked();

    if (isTooltipLocked) {
      // 锁定 tooltip 时不隐藏
      return;
    }

    this.hideTooltip(view);
    this.location = null;
  };

  TooltipAction.prototype.showTooltip = function (view, point) {
    // 相同位置不重复展示
    view.showTooltip(point);
  };

  TooltipAction.prototype.hideTooltip = function (view) {
    view.hideTooltip();
  };

  return TooltipAction;
}(action_base);

/* harmony default export */ var component_tooltip = (tooltip_TooltipAction);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/component/sibling-tooltp.js




/**
 * 存在多个 view 时，控制其他 view 上的 tooltip 显示
 * @ignore
 */

var sibling_tooltp_SiblingTooltip =
/** @class */
function (_super) {
  __extends(SiblingTooltip, _super);

  function SiblingTooltip() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
   * 所有同一层级的 tooltip 显示
   * @param view
   * @param point
   */


  SiblingTooltip.prototype.showTooltip = function (view, point) {
    var siblings = getSilbings(view);
    Object(esm["each"])(siblings, function (sibling) {
      var siblingPoint = getSiblingPoint(view, sibling, point);
      sibling.showTooltip(siblingPoint);
    });
  };
  /**
   * 隐藏同一层级的 tooltip
   * @param view
   */


  SiblingTooltip.prototype.hideTooltip = function (view) {
    var siblings = getSilbings(view);
    Object(esm["each"])(siblings, function (sibling) {
      sibling.hideTooltip();
    });
  };

  return SiblingTooltip;
}(component_tooltip);

/* harmony default export */ var sibling_tooltp = (sibling_tooltp_SiblingTooltip);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/element/state-base.js




/**
 * 状态量 Action 的基类
 * @abstract
 * @class
 * @ignore
 */

var state_base_StateBase =
/** @class */
function (_super) {
  __extends(StateBase, _super);

  function StateBase() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    /**
     * 状态名称
     */


    _this.stateName = '';
    return _this;
  }
  /**
   * 是否具有某个状态
   * @param element 图表 Element 元素
   */


  StateBase.prototype.hasState = function (element) {
    return element.hasState(this.stateName);
  };
  /**
   * 设置状态激活
   * @param enable 状态值
   */


  StateBase.prototype.setElementState = function (element, enable) {
    // 防止闪烁
    element.setState(this.stateName, enable);
  };
  /**
   * 设置状态
   */


  StateBase.prototype.setState = function () {
    this.setStateEnable(true);
  };
  /**
   * 清除所有 Element 的状态
   */


  StateBase.prototype.clear = function () {
    var view = this.context.view;
    this.clearViewState(view);
  };

  StateBase.prototype.clearViewState = function (view) {
    var _this = this;

    var elements = getElementsByState(view, this.stateName);
    Object(esm["each"])(elements, function (el) {
      _this.setElementState(el, false);
    });
  };

  return StateBase;
}(action_base);

/* harmony default export */ var state_base = (state_base_StateBase);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/element/state.js







function getItem(shape) {
  return Object(esm["get"])(shape.get('delegateObject'), 'item');
}
/**
 * 状态量 Action 的基类，允许多个 Element 同时拥有某个状态
 * @class
 * @ignore
 */


var state_ElementState =
/** @class */
function (_super) {
  __extends(ElementState, _super);

  function ElementState() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.ignoreListItemStates = ['unchecked'];
    return _this;
  } // 是否忽略触发的列表项


  ElementState.prototype.isItemIgnore = function (item, list) {
    var states = this.ignoreListItemStates;
    var filtered = states.filter(function (state) {
      return list.hasState(item, state);
    });
    return !!filtered.length;
  }; // 设置由组件选项导致的状态变化


  ElementState.prototype.setStateByComponent = function (component, item, enable) {
    var view = this.context.view;
    var field = component.get('field');
    var elements = getElements(view);
    this.setElementsStateByItem(elements, field, item, enable);
  }; // 处理触发源由 element 导致的状态变化


  ElementState.prototype.setStateByElement = function (element, enable) {
    this.setElementState(element, enable);
  };
  /** 组件的选项是否同 element 匹配 */


  ElementState.prototype.isMathItem = function (element, field, item) {
    var view = this.context.view;
    var scale = getScaleByField(view, field);
    var value = getElementValue(element, field);
    return !Object(esm["isNil"])(value) && item.name === scale.getText(value);
  };

  ElementState.prototype.setElementsStateByItem = function (elements, field, item, enable) {
    var _this = this;

    Object(esm["each"])(elements, function (el) {
      if (_this.isMathItem(el, field, item)) {
        el.setState(_this.stateName, enable);
      }
    });
  };
  /** 设置状态是否激活 */


  ElementState.prototype.setStateEnable = function (enable) {
    var element = getCurrentElement(this.context);

    if (element) {
      // 触发源由于 element 导致
      if (isElementChange(this.context)) {
        this.setStateByElement(element, enable);
      }
    } else {
      // 触发源由组件导致
      var delegateObject = getDelegationObject(this.context); // 如果触发源时列表，图例、坐标轴

      if (isList(delegateObject)) {
        var item = delegateObject.item,
            component = delegateObject.component;

        if (item && component && !this.isItemIgnore(item, component)) {
          var event_1 = this.context.event.gEvent; // 防止闪烁

          if (event_1 && event_1.fromShape && event_1.toShape && getItem(event_1.fromShape) === getItem(event_1.toShape)) {
            return;
          }

          this.setStateByComponent(component, item, enable);
        }
      }
    }
  };
  /**
   * 切换状态
   */


  ElementState.prototype.toggle = function () {
    var element = getCurrentElement(this.context);

    if (element) {
      var hasState = element.hasState(this.stateName);
      this.setElementState(element, !hasState);
    }
  };
  /**
   * 取消当前时间影响的状态
   */


  ElementState.prototype.reset = function () {
    this.setStateEnable(false);
  };

  return ElementState;
}(state_base);

/* harmony default export */ var element_state = (state_ElementState);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/element/active.js


/**
 * 元素 active 的 Action，允许多个元素同时 active
 * @class
 * @ignore
 */

var active_ElementActive =
/** @class */
function (_super) {
  __extends(ElementActive, _super);

  function ElementActive() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.stateName = 'active';
    return _this;
  }
  /**
   * Active Element
   */


  ElementActive.prototype.active = function () {
    this.setState();
  };

  return ElementActive;
}(element_state);

/* harmony default export */ var active = (active_ElementActive);
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.string.link.js
var es6_string_link = __webpack_require__("ScpY");

// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/element/link-by-color.js





/**
 * Link Elements by color
 * @ignore
 */

var link_by_color_LinkByColor =
/** @class */
function (_super) {
  __extends(LinkByColor, _super);

  function LinkByColor() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.cache = {};
    return _this;
  } // 获取颜色对应的 scale


  LinkByColor.prototype.getColorScale = function (view, element) {
    var colorAttr = element.geometry.getAttribute('color');

    if (!colorAttr) {
      return null;
    }

    var scale = view.getScaleByField(colorAttr.getFields()[0]);
    return scale;
  }; // 获取连接的 path


  LinkByColor.prototype.getLinkPath = function (element, nextElement) {
    var bbox = element.shape.getCanvasBBox();
    var nextBBox = nextElement.shape.getCanvasBBox();
    var path = [['M', bbox.maxX, bbox.minY], ['L', nextBBox.minX, nextBBox.minY], ['L', nextBBox.minX, nextBBox.maxY], ['L', bbox.maxX, bbox.maxY], ['Z']];
    return path;
  }; // 添加连接的图形


  LinkByColor.prototype.addLinkShape = function (group, element, nextElement) {
    group.addShape({
      type: 'path',
      attrs: {
        opacity: 0.4,
        fill: element.shape.attr('fill'),
        path: this.getLinkPath(element, nextElement)
      }
    });
  }; // 使用图形连接


  LinkByColor.prototype.linkByElement = function (element) {
    var _this = this;

    var view = this.context.view;
    var scale = this.getColorScale(view, element);

    if (!scale) {
      return;
    }

    var value = getElementValue(element, scale.field);

    if (!this.cache[value]) {
      var elements_1 = getElementsByField(view, scale.field, value);
      var linkGroup = this.linkGroup;
      var group_1 = linkGroup.addGroup();
      this.cache[value] = group_1; // 缓存

      var count_1 = elements_1.length;
      Object(esm["each"])(elements_1, function (el, index) {
        if (index < count_1 - 1) {
          var nextEl = elements_1[index + 1];

          _this.addLinkShape(group_1, el, nextEl);
        }
      });
    }
  }; // 移除连接


  LinkByColor.prototype.removeLink = function (element) {
    var scale = this.getColorScale(this.context.view, element);

    if (!scale) {
      return;
    }

    var value = getElementValue(element, scale.field);

    if (this.cache[value]) {
      this.cache[value].remove();
      this.cache[value] = null;
    }
  };
  /**
   * 连接 elements
   */


  LinkByColor.prototype.link = function () {
    var context = this.context;

    if (!this.linkGroup) {
      // 不允许被拾取
      this.linkGroup = context.view.foregroundGroup.addGroup({
        capture: false
      });
    }

    var element = getCurrentElement(context);

    if (element) {
      this.linkByElement(element);
    }
  };
  /**
   * 取消连接 elements
   */


  LinkByColor.prototype.unlink = function () {
    var element = getCurrentElement(this.context);

    if (element) {
      this.removeLink(element);
    }
  };
  /**
   * 清除所有连接
   */


  LinkByColor.prototype.clear = function () {
    if (this.linkGroup) {
      this.linkGroup.clear();
    }
  };
  /**
   * 销毁
   */


  LinkByColor.prototype.destroy = function () {
    _super.prototype.destroy.call(this);

    if (this.linkGroup) {
      this.linkGroup.remove();
    }
  };

  return LinkByColor;
}(action_base);

/* harmony default export */ var link_by_color = (link_by_color_LinkByColor);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/element/range-state.js








/**
 * @ignore
 * 区域设置状态的基础 Action
 */

var range_state_ElementRangeState =
/** @class */
function (_super) {
  __extends(ElementRangeState, _super);

  function ElementRangeState() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.startPoint = null;
    _this.endPoint = null;
    _this.isStarted = false;
    /**
     * 是否作用于当前 view 的 siblings，默认是 false 仅作用于自己
     */

    _this.effectSiblings = false;
    /**
     * 是否受 element 的数据影响，还是受包围盒的影响
     */

    _this.effectByRecord = false;
    return _this;
  } // 获取当前的位置


  ElementRangeState.prototype.getCurrentPoint = function () {
    var event = this.context.event;
    return {
      x: event.x,
      y: event.y
    };
  };
  /**
   * 开始，记录开始选中的位置
   */


  ElementRangeState.prototype.start = function () {
    this.clear(); // 开始的时候清理之前的状态

    this.startPoint = this.getCurrentPoint();
    this.isStarted = true;
  };

  ElementRangeState.prototype.getIntersectElements = function () {
    var elements = null;

    if (isMask(this.context)) {
      elements = getMaskedElements(this.context, 10);
    } else {
      var startPoint = this.startPoint;
      var endPoint = this.isStarted ? this.getCurrentPoint() : this.endPoint; // 如果没有开始，则不允许范围设置状态，保护性质

      if (!startPoint || !endPoint) {
        return;
      } // 计算框选区域


      var box = {
        minX: Math.min(startPoint.x, endPoint.x),
        minY: Math.min(startPoint.y, endPoint.y),
        maxX: Math.max(startPoint.x, endPoint.x),
        maxY: Math.max(startPoint.y, endPoint.y)
      }; // this.clear(); // 不全部清理，会导致闪烁

      var view = this.context.view;
      elements = getIntersectElements(view, box);
    }

    return elements;
  };
  /**
   * 选中
   */


  ElementRangeState.prototype.setStateEnable = function (enable) {
    if (this.effectSiblings && !this.effectByRecord) {
      this.setSiblingsState(enable);
    } else {
      var allElements = getElements(this.context.view);
      var elements = this.getIntersectElements();

      if (elements && elements.length) {
        if (this.effectByRecord) {
          this.setSiblingsStateByRecord(elements, enable);
        } else {
          this.setElementsState(elements, enable, allElements);
        }
      } else {
        this.clear();
      }
    }
  }; // 根据选中的 element 的数据进行设置状态


  ElementRangeState.prototype.setSiblingsStateByRecord = function (elements, enable) {
    var _this = this;

    var view = this.context.view;
    var siblings = getSilbings(view);
    var records = elements.map(function (el) {
      return el.getModel().data;
    });
    var xFiled = view.getXScale().field;
    var yField = view.getYScales()[0].field;
    Object(esm["each"])(siblings, function (sibling) {
      var allElements = getElements(sibling);
      var effectElements = allElements.filter(function (el) {
        var record = el.getModel().data;
        return isInRecords(records, record, xFiled, yField);
      });

      _this.setElementsState(effectElements, enable, allElements);
    });
  }; // 设置兄弟 view 的状态


  ElementRangeState.prototype.setSiblingsState = function (enable) {
    var _this = this;

    var view = this.context.view;
    var siblings = getSilbings(view);

    if (isMask(this.context)) {
      // 受 mask 影响
      Object(esm["each"])(siblings, function (sibling) {
        var allElements = getElements(sibling);
        var effectElements = getSiblingMaskElements(_this.context, sibling, 10);

        if (effectElements && effectElements.length) {
          _this.setElementsState(effectElements, enable, allElements);
        } else {
          _this.clearViewState(sibling);
        }
      });
    }
  };

  ElementRangeState.prototype.setElementsState = function (elements, enable, allElements) {
    var _this = this;

    Object(esm["each"])(allElements, function (el) {
      if (!elements.includes(el)) {
        _this.setElementState(el, false);
      } else {
        _this.setElementState(el, enable);
      }
    });
  };
  /**
   * 结束
   */


  ElementRangeState.prototype.end = function () {
    this.isStarted = false;
    this.endPoint = this.getCurrentPoint();
  }; // 复写 clear


  ElementRangeState.prototype.clear = function () {
    var _this = this;

    var view = this.context.view; // 判断是否影响 siblings

    if (this.effectSiblings) {
      var siblings = getSilbings(view);
      Object(esm["each"])(siblings, function (sibling) {
        _this.clearViewState(sibling);
      });
    } else {
      this.clearViewState(view);
    }
  };

  return ElementRangeState;
}(state_base);

/* harmony default export */ var range_state = (range_state_ElementRangeState);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/element/range-active.js


/**
 * @ignore
 * 图表元素区域 Active 的 Action
 */

var range_active_ElementRangeActive =
/** @class */
function (_super) {
  __extends(ElementRangeActive, _super);

  function ElementRangeActive() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.stateName = 'active';
    return _this;
  }
  /**
   * 图表元素 Active
   */


  ElementRangeActive.prototype.active = function () {
    this.setState();
  };

  return ElementRangeActive;
}(range_state);

/* harmony default export */ var range_active = (range_active_ElementRangeActive);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/element/single-state.js



/**
 * 单状态量的 Action 基类
 * @class
 * @ignore
 */

var single_state_ElementSingleState =
/** @class */
function (_super) {
  __extends(ElementSingleState, _super);

  function ElementSingleState() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  ElementSingleState.prototype.setStateEnable = function (enable) {
    var element = getCurrentElement(this.context);

    if (element) {
      // 在同一个 element 内部移动，忽视 label 和 shape 之间
      if (!isElementChange(this.context)) {
        return;
      } // 仅支持单个状态量的元素，只能由 element 触发


      if (enable) {
        this.clear();
        this.setElementState(element, true);
      } else if (this.hasState(element)) {
        this.setElementState(element, false);
      }
    }
  };
  /**
   * 切换选中，只允许选中一个
   */


  ElementSingleState.prototype.toggle = function () {
    var element = getCurrentElement(this.context);

    if (element) {
      var hasState = this.hasState(element); // 提前获取状态

      if (!hasState) {
        this.clear();
      }

      this.setElementState(element, !hasState);
    }
  };
  /**
   * 取消当前时间影响的状态
   */


  ElementSingleState.prototype.reset = function () {
    this.setStateEnable(false);
  };

  return ElementSingleState;
}(state_base);

/* harmony default export */ var single_state = (single_state_ElementSingleState);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/element/single-active.js


/**
 * @ignore
 * 仅允许单个 Element Active 的 Action
 */

var single_active_ElementSingleActive =
/** @class */
function (_super) {
  __extends(ElementSingleActive, _super);

  function ElementSingleActive() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.stateName = 'active';
    return _this;
  }
  /**
   * 当前事件相关的 Element Active
   */


  ElementSingleActive.prototype.active = function () {
    this.setState();
  };

  return ElementSingleActive;
}(single_state);

/* harmony default export */ var single_active = (single_active_ElementSingleActive);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/element/highlight-util.js


var STATUS_UNACTIVE = 'inactive';
var STATUS_ACTIVE = 'active';
/**
 * @ignore
 * 清理 highlight 效果
 * @param view View 或者 Chart
 */

function clearHighlight(view) {
  var elements = getElements(view);
  Object(esm["each"])(elements, function (el) {
    if (el.hasState(STATUS_ACTIVE)) {
      el.setState(STATUS_ACTIVE, false);
    }

    if (el.hasState(STATUS_UNACTIVE)) {
      el.setState(STATUS_UNACTIVE, false);
    }
  });
}
/**
 * @ignore
 * 设置多个元素的 highlight
 * @param elements 元素集合
 * @param callback 设置回调函数
 * @param enable 设置或者取消
 */

function setHighlightBy(elements, callback, enable) {
  Object(esm["each"])(elements, function (el) {
    // 需要处理 active 和 unactive 的互斥
    if (callback(el)) {
      if (el.hasState(STATUS_UNACTIVE)) {
        el.setState(STATUS_UNACTIVE, false);
      }

      el.setState(STATUS_ACTIVE, enable);
    } else {
      if (el.hasState(STATUS_ACTIVE)) {
        el.setState(STATUS_ACTIVE, false);
      }

      el.setState(STATUS_UNACTIVE, enable);
    }
  });
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/element/highlight.js






var highlight_STATUS_UNACTIVE = ELEMENT_STATE.INACTIVE;
var highlight_STATUS_ACTIVE = ELEMENT_STATE.ACTIVE;
/**
 * @ignore
 * highlight，指定图形高亮，其他图形变暗
 */

var highlight_ElementHighlight =
/** @class */
function (_super) {
  __extends(ElementHighlight, _super);

  function ElementHighlight() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.stateName = highlight_STATUS_ACTIVE;
    return _this;
  } // 多个元素设置、取消 highlight


  ElementHighlight.prototype.setElementsStateByItem = function (elements, field, item, enable) {
    var _this = this;

    var callback = function callback(el) {
      return _this.isMathItem(el, field, item);
    };

    this.setHighlightBy(elements, callback, enable);
  }; // 设置元素的 highlight


  ElementHighlight.prototype.setElementHighlight = function (el, callback) {
    if (callback(el)) {
      if (el.hasState(highlight_STATUS_UNACTIVE)) {
        el.setState(highlight_STATUS_UNACTIVE, false);
      }

      el.setState(highlight_STATUS_ACTIVE, true);
    } else if (!el.hasState(highlight_STATUS_ACTIVE)) {
      el.setState(highlight_STATUS_UNACTIVE, true);
    }
  };

  ElementHighlight.prototype.setHighlightBy = function (elements, callback, enable) {
    var _this = this;

    if (enable) {
      // 如果是设置 highlight ，则将匹配的 element 设置成 active，
      // 其他如果不是 active，则设置成 unactive
      Object(esm["each"])(elements, function (el) {
        _this.setElementHighlight(el, callback);
      });
    } else {
      // 如果取消 highlight，则要检测是否全部取消 highlight
      var activeElements = getElementsByState(this.context.view, highlight_STATUS_ACTIVE);
      var allCancel_1 = true; // 检测所有 activeElements 都要取消 highlight

      Object(esm["each"])(activeElements, function (el) {
        if (!callback(el)) {
          allCancel_1 = false;
          return false;
        }
      });

      if (allCancel_1) {
        // 都要取消，则取消所有的 active，unactive 状态
        this.clear();
      } else {
        // 如果不是都要取消 highlight, 则设置匹配的 element 的状态为 unactive
        // 其他 element 状态不变
        Object(esm["each"])(elements, function (el) {
          if (callback(el)) {
            if (el.hasState(highlight_STATUS_ACTIVE)) {
              el.setState(highlight_STATUS_ACTIVE, false);
            }

            el.setState(highlight_STATUS_UNACTIVE, true);
          }
        });
      }
    }
  }; // 单个元素设置和取消 highlight


  ElementHighlight.prototype.setElementState = function (element, enable) {
    var view = this.context.view;
    var elements = getElements(view);
    this.setHighlightBy(elements, function (el) {
      return element === el;
    }, enable);
  };

  ElementHighlight.prototype.highlight = function () {
    this.setState();
  }; // 清理掉所有的 active， unactive 状态


  ElementHighlight.prototype.clear = function () {
    var view = this.context.view;
    clearHighlight(view);
  };

  return ElementHighlight;
}(element_state);

/* harmony default export */ var highlight = (highlight_ElementHighlight);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/element/highlight-by-color.js






/**
 * Highlight color
 * @ignore
 */

var highlight_by_color_HighlightColor =
/** @class */
function (_super) {
  __extends(HighlightColor, _super);

  function HighlightColor() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  HighlightColor.prototype.setStateByElement = function (element, enable) {
    var view = this.context.view;
    var colorAttr = element.geometry.getAttribute('color');

    if (!colorAttr) {
      return;
    }

    var scale = view.getScaleByField(colorAttr.getFields()[0]);
    var value = getElementValue(element, scale.field);
    var elements = getElements(view);
    var highlightElements = elements.filter(function (el) {
      return getElementValue(el, scale.field) === value;
    });
    this.setHighlightBy(elements, function (el) {
      return highlightElements.includes(el);
    }, enable);
  };

  return HighlightColor;
}(highlight);

/* harmony default export */ var highlight_by_color = (highlight_by_color_HighlightColor);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/element/highlight-by-x.js






/**
 * Highlight x
 * @ignore
 */

var highlight_by_x_HighlightX =
/** @class */
function (_super) {
  __extends(HighlightX, _super);

  function HighlightX() {
    return _super !== null && _super.apply(this, arguments) || this;
  } // 不允许多选


  HighlightX.prototype.setElementHighlight = function (el, callback) {
    if (callback(el)) {
      if (el.hasState(highlight_STATUS_UNACTIVE)) {
        el.setState(highlight_STATUS_UNACTIVE, false);
      }

      el.setState(highlight_STATUS_ACTIVE, true);
    } else {
      el.setState(highlight_STATUS_UNACTIVE, true);

      if (el.hasState(highlight_STATUS_ACTIVE)) {
        el.setState(highlight_STATUS_ACTIVE, false);
      }
    }
  };

  HighlightX.prototype.setStateByElement = function (element, enable) {
    var view = this.context.view;
    var scale = view.getXScale();
    var value = getElementValue(element, scale.field);
    var elements = getElements(view);
    var highlightElements = elements.filter(function (el) {
      return getElementValue(el, scale.field) === value;
    });
    this.setHighlightBy(elements, function (el) {
      return highlightElements.includes(el);
    }, enable);
  };
  /**
   * 切换状态
   */


  HighlightX.prototype.toggle = function () {
    var element = getCurrentElement(this.context);

    if (element) {
      var hasState = element.hasState(this.stateName);
      this.setStateByElement(element, !hasState);
    }
  };

  return HighlightX;
}(highlight);

/* harmony default export */ var highlight_by_x = (highlight_by_x_HighlightX);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/element/range-highlight.js




/**
 * @ignore
 * 区域 highlight 的 Action
 */

var range_highlight_ElementRangeHighlight =
/** @class */
function (_super) {
  __extends(ElementRangeHighlight, _super);

  function ElementRangeHighlight() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.stateName = 'active';
    return _this;
  } // 清理掉所有的 active， unactive 状态


  ElementRangeHighlight.prototype.clearViewState = function (view) {
    clearHighlight(view);
  };
  /**
   * 设置 highlight
   */


  ElementRangeHighlight.prototype.highlight = function () {
    this.setState();
  };

  ElementRangeHighlight.prototype.setElementsState = function (elements, enable, allElements) {
    setHighlightBy(allElements, function (el) {
      return elements.indexOf(el) >= 0;
    }, enable);
  };

  return ElementRangeHighlight;
}(range_state);

/* harmony default export */ var range_highlight = (range_highlight_ElementRangeHighlight);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/element/single-highlight.js




/**
 * @ignore
 * 单个 Element Highlight 的 Action
 */

var single_highlight_ElementSingleHighlight =
/** @class */
function (_super) {
  __extends(ElementSingleHighlight, _super);

  function ElementSingleHighlight() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.stateName = 'active';
    return _this;
  }
  /**
   * Element Highlight
   */


  ElementSingleHighlight.prototype.highlight = function () {
    this.setState();
  };

  ElementSingleHighlight.prototype.setElementState = function (element, enable) {
    var view = this.context.view;
    var elements = getElements(view);
    setHighlightBy(elements, function (el) {
      return element === el;
    }, enable);
  }; // 清理掉所有的 active， unactive 状态


  ElementSingleHighlight.prototype.clear = function () {
    var view = this.context.view;
    clearHighlight(view);
  };

  return ElementSingleHighlight;
}(single_state);

/* harmony default export */ var single_highlight = (single_highlight_ElementSingleHighlight);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/element/range-selected.js


/**
 * @ignore
 * 区域选中的 Action
 */

var range_selected_ElementRangeSelected =
/** @class */
function (_super) {
  __extends(ElementRangeSelected, _super);

  function ElementRangeSelected() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.stateName = 'selected';
    return _this;
  }
  /**
   * 选中
   */


  ElementRangeSelected.prototype.selected = function () {
    this.setState();
  };

  return ElementRangeSelected;
}(range_state);

/* harmony default export */ var range_selected = (range_selected_ElementRangeSelected);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/element/selected.js


/**
 * @ignore
 * 允许多选的 Action
 * @class
 */

var selected_ElementMultipleSelected =
/** @class */
function (_super) {
  __extends(ElementMultipleSelected, _super);

  function ElementMultipleSelected() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.stateName = 'selected';
    return _this;
  }
  /**
   * 选中节点，允许多选
   */


  ElementMultipleSelected.prototype.selected = function () {
    this.setState();
  };

  return ElementMultipleSelected;
}(element_state);

/* harmony default export */ var selected = (selected_ElementMultipleSelected);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/element/single-selected.js


/**
 * @ignore
 * 单选的 Action
 */

var single_selected_ElementSingleSelected =
/** @class */
function (_super) {
  __extends(ElementSingleSelected, _super);

  function ElementSingleSelected() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.stateName = 'selected';
    return _this;
  }
  /**
   * 选中
   */


  ElementSingleSelected.prototype.selected = function () {
    this.setState();
  };

  return ElementSingleSelected;
}(single_state);

/* harmony default export */ var single_selected = (single_selected_ElementSingleSelected);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/component/list-state.js








/**
 * 列表项状态 Action 的基础类
 * @class
 * @ignore
 */

var list_state_ListState =
/** @class */
function (_super) {
  __extends(ListState, _super);

  function ListState() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.stateName = '';
    _this.ignoreItemStates = [];
    return _this;
  }
  /** 获取触发的列表组件 */


  ListState.prototype.getTriggerListInfo = function () {
    var delegateObject = getDelegationObject(this.context);
    var info = null;

    if (isList(delegateObject)) {
      info = {
        item: delegateObject.item,
        list: delegateObject.component
      };
    }

    return info;
  }; // 获取所有允许执行 Action 的组件


  ListState.prototype.getAllowComponents = function () {
    var _this = this;

    var view = this.context.view;
    var components = getComponents(view);
    var rst = [];
    Object(esm["each"])(components, function (component) {
      if (component.isList() && _this.allowSetStateByElement(component)) {
        rst.push(component);
      }
    });
    return rst;
  };
  /** 是否存在指定的状态 */


  ListState.prototype.hasState = function (list, item) {
    return list.hasState(item, this.stateName);
  };
  /** 清理组件的状态 */


  ListState.prototype.clearAllComponentsState = function () {
    var _this = this;

    var components = this.getAllowComponents();
    Object(esm["each"])(components, function (component) {
      component.clearItemsState(_this.stateName);
    });
  }; // 不是所有的 component 都能进行 active，目前仅支持分类 scale 对应的组件


  ListState.prototype.allowSetStateByElement = function (component) {
    var field = component.get('field');

    if (!field) {
      return false;
    }

    if (this.cfg && this.cfg.componentNames) {
      var name_1 = component.get('name'); // 如果配置了限制的 component name，则要进行检测

      if (this.cfg.componentNames.indexOf(name_1) === -1) {
        return false;
      }
    }

    var view = this.context.view;
    var scale = getScaleByField(view, field);
    return scale && scale.isCategory;
  }; // 检测是否允许触发对应的状态改变事件


  ListState.prototype.allowSetStateByItem = function (item, list) {
    var ignoreStates = this.ignoreItemStates;

    if (ignoreStates.length) {
      var filterStates = ignoreStates.filter(function (state) {
        return list.hasState(item, state);
      });
      return filterStates.length === 0;
    }

    return true; // 没有定义忽略的状态时，允许
  }; // 设置组件的 item active


  ListState.prototype.setStateByElement = function (component, element, enable) {
    var field = component.get('field');
    var view = this.context.view;
    var scale = getScaleByField(view, field);
    var value = getElementValue(element, field);
    var text = scale.getText(value);
    this.setItemsState(component, text, enable);
  }; // 设置状态


  ListState.prototype.setStateEnable = function (enable) {
    var _this = this;

    var element = getCurrentElement(this.context);

    if (element) {
      // trigger by element
      var components = this.getAllowComponents();
      Object(esm["each"])(components, function (component) {
        _this.setStateByElement(component, element, enable);
      });
    } else {
      // 被组件触发
      var delegateObject = getDelegationObject(this.context);

      if (isList(delegateObject)) {
        var item = delegateObject.item,
            component = delegateObject.component;

        if (this.allowSetStateByElement(component) && this.allowSetStateByItem(item, component)) {
          this.setItemState(component, item, enable);
        }
      }
    }
  }; // 多个 item 设置状态


  ListState.prototype.setItemsState = function (list, name, enable) {
    var _this = this;

    var items = list.getItems();
    Object(esm["each"])(items, function (item) {
      if (item.name === name) {
        _this.setItemState(list, item, enable);
      }
    });
  }; // 单个 item 设置状态


  ListState.prototype.setItemState = function (list, item, enable) {
    list.setItemState(item, this.stateName, enable);
  };
  /**
   * 设置状态
   */


  ListState.prototype.setState = function () {
    this.setStateEnable(true);
  };
  /**
   * 取消状态
   */


  ListState.prototype.reset = function () {
    this.setStateEnable(false);
  };
  /**
   * 切换状态
   */


  ListState.prototype.toggle = function () {
    var triggerInfo = this.getTriggerListInfo();

    if (triggerInfo && triggerInfo.item) {
      var list = triggerInfo.list,
          item = triggerInfo.item;
      var enable = this.hasState(list, item);
      this.setItemState(list, item, !enable);
    }
  };
  /**
   * 取消状态
   */


  ListState.prototype.clear = function () {
    var triggerInfo = this.getTriggerListInfo();

    if (triggerInfo) {
      triggerInfo.list.clearItemsState(this.stateName);
    } else {
      this.clearAllComponentsState();
    }
  };

  return ListState;
}(action_base);

/* harmony default export */ var list_state = (list_state_ListState);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/component/list-active.js


/**
 * 列表项（图例项、坐标轴文本）激活的 Action
 * @class
 * @ignore
 */

var list_active_ListActive =
/** @class */
function (_super) {
  __extends(ListActive, _super);

  function ListActive() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.stateName = 'active';
    return _this;
  }
  /**
   * 激活选项
   */


  ListActive.prototype.active = function () {
    this.setState();
  };

  return ListActive;
}(list_state);

/* harmony default export */ var list_active = (list_active_ListActive);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/component/list-highlight-util.js

var list_highlight_util_STATUS_UNACTIVE = 'inactive';
var list_highlight_util_STATUS_ACTIVE = 'active';
/**
 * 清理图例的 Highlight 效果
 * @param list 列表组件，图例或者坐标轴
 * @ignore
 */

function clearList(list) {
  var items = list.getItems();
  Object(esm["each"])(items, function (item) {
    if (list.hasState(item, list_highlight_util_STATUS_ACTIVE)) {
      list.setItemState(item, list_highlight_util_STATUS_ACTIVE, false);
    }

    if (list.hasState(item, list_highlight_util_STATUS_UNACTIVE)) {
      list.setItemState(item, list_highlight_util_STATUS_UNACTIVE, false);
    }
  });
}
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/component/list-highlight.js





var list_highlight_STATUS_UNACTIVE = 'inactive';
var list_highlight_STATUS_ACTIVE = 'active';
/**
 * highlight Action 的效果是 active 和 inactive 两个状态的组合
 * @class
 * @ignore
 */

var list_highlight_ListHighlight =
/** @class */
function (_super) {
  __extends(ListHighlight, _super);

  function ListHighlight() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.stateName = list_highlight_STATUS_ACTIVE;
    _this.ignoreItemStates = ['unchecked']; // 当存在 unchecked 状态时不触发

    return _this;
  } // 如果 item.name 匹配，则设置 highlight 以及取消


  ListHighlight.prototype.setItemsState = function (list, name, enable) {
    this.setHighlightBy(list, function (item) {
      return item.name === name;
    }, enable);
  }; // 单个 item 设置状态


  ListHighlight.prototype.setItemState = function (list, item, enable) {
    var items = list.getItems();
    this.setHighlightBy(list, function (el) {
      return el === item;
    }, enable);
  }; // 根据条件设置 highlight


  ListHighlight.prototype.setHighlightBy = function (list, callback, enable) {
    var items = list.getItems();

    if (enable) {
      // 设置 highlight 时，保留之前已经 Highlight 的项
      Object(esm["each"])(items, function (item) {
        if (callback(item)) {
          if (list.hasState(item, list_highlight_STATUS_UNACTIVE)) {
            list.setItemState(item, list_highlight_STATUS_UNACTIVE, false);
          }

          list.setItemState(item, list_highlight_STATUS_ACTIVE, true);
        } else if (!list.hasState(item, list_highlight_STATUS_ACTIVE)) {
          list.setItemState(item, list_highlight_STATUS_UNACTIVE, true);
        }
      });
    } else {
      var activeItems = list.getItemsByState(list_highlight_STATUS_ACTIVE);
      var allCancel_1 = true; // 检测 activeItems 是否要全部取消

      Object(esm["each"])(activeItems, function (item) {
        if (!callback(item)) {
          allCancel_1 = false;
          return false;
        }
      });

      if (allCancel_1) {
        this.clear();
      } else {
        // 如果不是都要取消 highlight, 则设置匹配的 element 的状态为 unactive
        // 其他 element 状态不变
        Object(esm["each"])(items, function (item) {
          if (callback(item)) {
            if (list.hasState(item, list_highlight_STATUS_ACTIVE)) {
              list.setItemState(item, list_highlight_STATUS_ACTIVE, false);
            }

            list.setItemState(item, list_highlight_STATUS_UNACTIVE, true);
          }
        });
      }
    }
  };
  /**
   * highlight 图例项（坐标轴文本）
   */


  ListHighlight.prototype.highlight = function () {
    this.setState();
  }; // 需要全部清理 active 和 unactive


  ListHighlight.prototype.clear = function () {
    var triggerInfo = this.getTriggerListInfo();

    if (triggerInfo) {
      clearList(triggerInfo.list);
    } else {
      // 如果不是 component 的事件触发，则所有满足触发条件的组件都清除该状态
      var components = this.getAllowComponents();
      Object(esm["each"])(components, function (component) {
        component.clearItemsState(list_highlight_STATUS_ACTIVE);
        component.clearItemsState(list_highlight_STATUS_UNACTIVE);
      });
    }
  };

  return ListHighlight;
}(list_state);

/* harmony default export */ var list_highlight = (list_highlight_ListHighlight);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/component/list-selected.js


/**
 * 图例项和坐标轴文本选中的 Action
 * @ignore
 */

var list_selected_ListSelected =
/** @class */
function (_super) {
  __extends(ListSelected, _super);

  function ListSelected() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.stateName = 'selected';
    return _this;
  }

  ListSelected.prototype.selected = function () {
    this.setState();
  };

  return ListSelected;
}(list_state);

/* harmony default export */ var list_selected = (list_selected_ListSelected);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/component/list-unchecked.js


/**
 * 图例项取消勾选的 Action
 * @ignore
 */

var list_unchecked_ListUnchecked =
/** @class */
function (_super) {
  __extends(ListUnchecked, _super);

  function ListUnchecked() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.stateName = 'unchecked';
    return _this;
  }
  /**
   * 取消勾选
   */


  ListUnchecked.prototype.unchecked = function () {
    this.setState();
  };

  return ListUnchecked;
}(list_state);

/* harmony default export */ var list_unchecked = (list_unchecked_ListUnchecked);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/mask/base.js



/**
 * @ignore
 * 辅助框 Action 的基类
 */

var base_MaskBase =
/** @class */
function (_super) {
  __extends(MaskBase, _super);

  function MaskBase() {
    var _this = _super !== null && _super.apply(this, arguments) || this; // mask 图形


    _this.maskShape = null; // 组成 mask 的各个点

    _this.points = []; // 开始 mask 的标记

    _this.starting = false; // 开始移动的标记

    _this.moving = false;
    _this.preMovePoint = null;
    _this.shapeType = 'path';
    return _this;
  } // 获取当前的位置


  MaskBase.prototype.getCurrentPoint = function () {
    var event = this.context.event;
    return {
      x: event.x,
      y: event.y
    };
  }; // 触发 mask 的事件


  MaskBase.prototype.emitEvent = function (type) {
    var eventName = "mask:" + type;
    var view = this.context.view;
    var event = this.context.event;
    view.emit(eventName, {
      target: this.maskShape,
      shape: this.maskShape,
      points: this.points,
      x: event.x,
      y: event.y
    });
  }; // 创建 mask


  MaskBase.prototype.createMask = function () {
    var view = this.context.view;
    var maskAttrs = this.getMaskAttrs();
    var maskShape = view.foregroundGroup.addShape({
      type: this.shapeType,
      name: 'mask',
      draggable: true,
      attrs: _assign({
        fill: '#C5D4EB',
        opacity: 0.3
      }, maskAttrs)
    });
    return maskShape;
  }; // 生成 mask 的路径


  MaskBase.prototype.getMaskPath = function () {
    return [];
  };
  /**
   * 显示
   */


  MaskBase.prototype.show = function () {
    if (this.maskShape) {
      this.maskShape.show();
      this.emitEvent('show');
    }
  };
  /**
   * 开始
   */


  MaskBase.prototype.start = function () {
    this.starting = true; // 开始时，保证移动结束

    this.moving = false;
    this.points = [this.getCurrentPoint()];

    if (!this.maskShape) {
      this.maskShape = this.createMask(); // 开始时设置 capture: false，可以避免创建、resize 时触发事件

      this.maskShape.set('capture', false);
    }

    this.updateMask();
    this.emitEvent('start');
  };
  /**
   * 开始移动
   */


  MaskBase.prototype.moveStart = function () {
    this.moving = true;
    this.preMovePoint = this.getCurrentPoint();
  };
  /**
   * 移动 mask
   */


  MaskBase.prototype.move = function () {
    if (!this.moving || !this.maskShape) {
      return;
    }

    var currentPoint = this.getCurrentPoint();
    var preMovePoint = this.preMovePoint;
    var dx = currentPoint.x - preMovePoint.x;
    var dy = currentPoint.y - preMovePoint.y;
    var points = this.points;
    Object(esm["each"])(points, function (point) {
      point.x += dx;
      point.y += dy;
    });
    this.updateMask();
    this.emitEvent('change');
    this.preMovePoint = currentPoint;
  };

  MaskBase.prototype.updateMask = function () {
    var attrs = this.getMaskAttrs();
    this.maskShape.attr(attrs);
  };
  /**
   * 结束移动
   */


  MaskBase.prototype.moveEnd = function () {
    this.moving = false;
    this.preMovePoint = null;
  };
  /**
   * 结束
   */


  MaskBase.prototype.end = function () {
    this.starting = false;
    this.emitEvent('end');

    if (this.maskShape) {
      this.maskShape.set('capture', true);
    }
  };
  /**
   * 隐藏
   */


  MaskBase.prototype.hide = function () {
    if (this.maskShape) {
      this.maskShape.hide();
      this.emitEvent('hide');
    }
  };
  /**
   * 大小变化
   */


  MaskBase.prototype.resize = function () {
    // 只有进行中，才会允许大小变化
    if (this.starting && this.maskShape) {
      this.points.push(this.getCurrentPoint());
      this.updateMask();
      this.emitEvent('change');
    }
  };
  /**
   * 销毁
   */


  MaskBase.prototype.destroy = function () {
    this.points = [];

    if (this.maskShape) {
      this.maskShape.remove();
    }

    this.maskShape = null;
    this.preMovePoint = null;

    _super.prototype.destroy.call(this);
  };

  return MaskBase;
}(action_base);

/* harmony default export */ var mask_base = (base_MaskBase);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/mask/circle.js




/**
 * @ignore
 * 圆形辅助框 Action
 */

var circle_CircleMask =
/** @class */
function (_super) {
  __extends(CircleMask, _super);

  function CircleMask() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.shapeType = 'circle';
    return _this;
  }

  CircleMask.prototype.getMaskAttrs = function () {
    var points = this.points;
    var currentPoint = Object(esm["last"])(this.points);
    var r = 0;
    var x = 0;
    var y = 0;

    if (points.length) {
      var first = points[0];
      r = action_util_distance(first, currentPoint) / 2;
      x = (currentPoint.x + first.x) / 2;
      y = (currentPoint.y + first.y) / 2;
    }

    return {
      x: x,
      y: y,
      r: r
    };
  };

  return CircleMask;
}(mask_base);

/* harmony default export */ var mask_circle = (circle_CircleMask);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/mask/rect.js



/**
 * @ignore
 * 矩形的辅助框 Action
 */

var rect_RectMask =
/** @class */
function (_super) {
  __extends(RectMask, _super);

  function RectMask() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.shapeType = 'rect';
    return _this;
  }

  RectMask.prototype.getRegion = function () {
    var points = this.points;
    return {
      start: Object(esm["head"])(points),
      end: Object(esm["last"])(points)
    };
  }; // 添加图形


  RectMask.prototype.getMaskAttrs = function () {
    var _a = this.getRegion(),
        start = _a.start,
        end = _a.end;

    var x = Math.min(start.x, end.x);
    var y = Math.min(start.y, end.y);
    var width = Math.abs(end.x - start.x);
    var height = Math.abs(end.y - start.y);
    return {
      x: x,
      y: y,
      width: width,
      height: height
    };
  };

  return RectMask;
}(mask_base);

/* harmony default export */ var mask_rect = (rect_RectMask);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/mask/dim-rect.js




function clampPoint(point) {
  point.x = Object(esm["clamp"])(point.x, 0, 1);
  point.y = Object(esm["clamp"])(point.y, 0, 1);
}
/**
 * @ignore
 */


var dim_rect_DimRect =
/** @class */
function (_super) {
  __extends(DimRect, _super);

  function DimRect() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.dim = 'x';
    _this.inPlot = true;
    return _this;
  }

  DimRect.prototype.getRegion = function () {
    var start = null;
    var end = null;
    var points = this.points;
    var dim = this.dim;
    var coord = this.context.view.getCoordinate();
    var normalStart = coord.invert(Object(esm["head"])(points));
    var normalEnd = coord.invert(Object(esm["last"])(points));

    if (this.inPlot) {
      // 约束到 0 - 1 范围内
      clampPoint(normalStart);
      clampPoint(normalEnd);
    }

    if (dim === 'x') {
      // x 轴方向扩展, y 轴方向占满全部
      start = coord.convert({
        x: normalStart.x,
        y: 0
      });
      end = coord.convert({
        x: normalEnd.x,
        y: 1
      });
    } else {
      // y 轴方向扩展, x 轴方向占满全部
      start = coord.convert({
        x: 0,
        y: normalStart.y
      });
      end = coord.convert({
        x: 1,
        y: normalEnd.y
      });
    }

    return {
      start: start,
      end: end
    };
  };

  return DimRect;
}(mask_rect);

/* harmony default export */ var dim_rect = (dim_rect_DimRect);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/mask/path.js



/**
 * @ignore
 * 多个点构成的 Path 辅助框 Action
 */

var path_PathMask =
/** @class */
function (_super) {
  __extends(PathMask, _super);

  function PathMask() {
    return _super !== null && _super.apply(this, arguments) || this;
  } // 生成 mask 的路径


  PathMask.prototype.getMaskPath = function () {
    var points = this.points;
    var path = [];

    if (points.length) {
      Object(esm["each"])(points, function (point, index) {
        if (index === 0) {
          path.push(['M', point.x, point.y]);
        } else {
          path.push(['L', point.x, point.y]);
        }
      });
      path.push(['L', points[0].x, points[0].y]);
    }

    return path;
  };

  PathMask.prototype.getMaskAttrs = function () {
    return {
      path: this.getMaskPath()
    };
  };
  /**
   * 添加一个点
   */


  PathMask.prototype.addPoint = function () {
    this.resize();
  };

  return PathMask;
}(mask_base);

/* harmony default export */ var mask_path = (path_PathMask);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/mask/smooth-path.js



/**
 * Smooth path mask
 * @ignore
 */

var smooth_path_SmoothPathMask =
/** @class */
function (_super) {
  __extends(SmoothPathMask, _super);

  function SmoothPathMask() {
    return _super !== null && _super.apply(this, arguments) || this;
  } // 生成 mask 的路径


  SmoothPathMask.prototype.getMaskPath = function () {
    var points = this.points;
    return getSpline(points, true);
  };

  return SmoothPathMask;
}(mask_path);

/* harmony default export */ var smooth_path = (smooth_path_SmoothPathMask);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/cursor.js

/**
 * @fileoverview 设置画布的箭头，参看：https://www.w3school.com.cn/jsref/prop_style_cursor.asp
 * @author dxq613
 */


/**
 * 鼠标形状的 Action
 * @ignore
 */

var cursor_CursorAction =
/** @class */
function (_super) {
  __extends(CursorAction, _super);

  function CursorAction() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  CursorAction.prototype.setCursor = function (cursor) {
    var view = this.context.view;
    view.getCanvas().setCursor(cursor);
  };
  /**
   * 默认光标（通常是一个箭头）
   */


  CursorAction.prototype["default"] = function () {
    this.setCursor('default');
  };
  /** 光标呈现为指示链接的指针（一只手） */


  CursorAction.prototype.pointer = function () {
    this.setCursor('pointer');
  };
  /** 此光标指示某对象可被移动。 */


  CursorAction.prototype.move = function () {
    this.setCursor('move');
  };
  /** 光标呈现为十字线。 */


  CursorAction.prototype.crosshair = function () {
    this.setCursor('crosshair');
  };
  /** 此光标指示程序正忙（通常是一只表或沙漏）。 */


  CursorAction.prototype.wait = function () {
    this.setCursor('wait');
  };
  /** 此光标指示可用的帮助（通常是一个问号或一个气球）。 */


  CursorAction.prototype.help = function () {
    this.setCursor('help');
  };
  /** 此光标指示文本。 */


  CursorAction.prototype.text = function () {
    this.setCursor('text');
  };
  /**
   * 此光标指示矩形框的边缘可被向右（东）移动。
   */


  CursorAction.prototype.eResize = function () {
    this.setCursor('e-resize');
  };
  /**
   * 此光标指示矩形框的边缘可被向左（西）移动。
   */


  CursorAction.prototype.wResize = function () {
    this.setCursor('w-resize');
  };
  /**
   * 此光标指示矩形框的边缘可被向上（北）移动。
   */


  CursorAction.prototype.nResize = function () {
    this.setCursor('n-resize');
  };
  /**
   * 此光标指示矩形框的边缘可被向下（南）移动。
   */


  CursorAction.prototype.sResize = function () {
    this.setCursor('s-resize');
  };
  /**
   * 光标指示可移动的方向 右上方（东北）
   */


  CursorAction.prototype.neResize = function () {
    this.setCursor('ne-resize');
  };
  /**
   * 光标指示可移动的方向 左上方（西北）
   */


  CursorAction.prototype.nwResize = function () {
    this.setCursor('nw-resize');
  };
  /**
   * 光标指示可移动的方向右下方（东南）
   */


  CursorAction.prototype.seResize = function () {
    this.setCursor('se-resize');
  };
  /**
   * 光标指示可移动的方向左下方（西南）
   */


  CursorAction.prototype.swResize = function () {
    this.setCursor('sw-resize');
  };
  /**
   * 光标指示可以在上下方向移动
   */


  CursorAction.prototype.nsResize = function () {
    this.setCursor('ns-resize');
  };
  /**
   * 光标指示可以在左右方向移动
   */


  CursorAction.prototype.ewResize = function () {
    this.setCursor('ew-resize');
  };

  return CursorAction;
}(action_base);

/* harmony default export */ var cursor = (cursor_CursorAction);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/data/filter.js









/**
 * 数据过滤。
 * @ignore
 */

var filter_DataFilter =
/** @class */
function (_super) {
  __extends(DataFilter, _super);

  function DataFilter() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  DataFilter.prototype.filterView = function (view, field, filter) {
    var _this = this; // 只有存在这个 scale 时才生效


    if (view.getScaleByField(field)) {
      view.filter(field, filter);
    }

    if (view.views && view.views.length) {
      Object(esm["each"])(view.views, function (subView) {
        _this.filterView(subView, field, filter);
      });
    }
  };
  /**
   * 过滤数据
   */


  DataFilter.prototype.filter = function () {
    var delegateObject = getDelegationObject(this.context);

    if (delegateObject) {
      var view = this.context.view;
      var component = delegateObject.component;
      var field = component.get('field'); // 列表类的组件能够触发

      if (isList(delegateObject)) {
        if (field) {
          var unCheckedItems = component.getItemsByState('unchecked');
          var scale_1 = getScaleByField(view, field);
          var names_1 = unCheckedItems.map(function (item) {
            return item.name;
          });

          if (names_1.length) {
            this.filterView(view, field, function (value) {
              var text = scale_1.getText(value);
              return !names_1.includes(text);
            });
          } else {
            this.filterView(view, field, null);
          }

          view.render(true);
        }
      } else if (isSlider(delegateObject)) {
        var range = component.getValue();
        var min_1 = range[0],
            max_1 = range[1];
        this.filterView(view, field, function (value) {
          return value >= min_1 && value <= max_1;
        });
        view.render(true);
      }
    }
  };

  return DataFilter;
}(action_base);

/* harmony default export */ var data_filter = (filter_DataFilter);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/data/range-filter.js









 // 获取对应的 scale

function getFilter(scale, dim, point1, point2) {
  var min = Math.min(point1[dim], point2[dim]);
  var max = Math.max(point1[dim], point2[dim]);
  var _a = scale.range,
      rangeMin = _a[0],
      rangeMax = _a[1]; // 约束值在 scale 的 range 之间

  if (min < rangeMin) {
    min = rangeMin;
  }

  if (max > rangeMax) {
    max = rangeMax;
  } // 范围大于整个 view 的范围，则返回 null


  if (min === rangeMax && max === rangeMax) {
    return null;
  }

  var minValue = scale.invert(min);
  var maxValue = scale.invert(max);

  if (scale.isCategory) {
    var minIndex = scale.values.indexOf(minValue);
    var maxIndex = scale.values.indexOf(maxValue);
    var arr_1 = scale.values.slice(minIndex, maxIndex + 1);
    return function (value) {
      return arr_1.includes(value);
    };
  } else {
    return function (value) {
      return value >= minValue && value <= maxValue;
    };
  }
}
/**
 * 范围过滤的 Action
 * @ignore
 */


var range_filter_RangeFilter =
/** @class */
function (_super) {
  __extends(RangeFilter, _super);

  function RangeFilter() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    /**
     * 范围过滤生效的字段/维度，可以是 x, y
     */


    _this.dims = ['x', 'y'];
    /** 起始点 */

    _this.startPoint = null;
    _this.isStarted = false;
    return _this;
  } // x,y 是否生效


  RangeFilter.prototype.hasDim = function (dim) {
    return this.dims.includes(dim);
  };
  /**
   * 开始范围过滤，记录范围过滤的起点
   */


  RangeFilter.prototype.start = function () {
    var context = this.context;
    this.isStarted = true;
    this.startPoint = context.getCurrentPoint();
  };
  /**
   * 过滤，以开始的点和当前点对数据进行过滤
   */


  RangeFilter.prototype.filter = function () {
    var startPoint;
    var currentPoint;

    if (isMask(this.context)) {
      var maskShape = this.context.event.target;
      var bbox = maskShape.getCanvasBBox();
      startPoint = {
        x: bbox.x,
        y: bbox.y
      };
      currentPoint = {
        x: bbox.maxX,
        y: bbox.maxY
      };
    } else {
      if (!this.isStarted) {
        // 如果没有开始，则不执行过滤
        return;
      }

      startPoint = this.startPoint;
      currentPoint = this.context.getCurrentPoint();
    }

    if (Math.abs(startPoint.x - currentPoint.x) < 5 || Math.abs(startPoint.x - currentPoint.y) < 5) {
      // 距离过小也不生效
      return;
    }

    var view = this.context.view;
    var coord = view.getCoordinate();
    var normalCurrent = coord.invert(currentPoint);
    var normalStart = coord.invert(startPoint); // 设置 x 方向的 filter

    if (this.hasDim('x')) {
      var xScale = view.getXScale();
      var filter = getFilter(xScale, 'x', normalCurrent, normalStart);
      this.filterView(view, xScale.field, filter);
    } // 设置 y 方向的 filter


    if (this.hasDim('y')) {
      var yScale = view.getYScales()[0];
      var filter = getFilter(yScale, 'y', normalCurrent, normalStart);
      this.filterView(view, yScale.field, filter);
    }

    this.reRender(view);
  };
  /**
   * 结束
   */


  RangeFilter.prototype.end = function () {
    this.isStarted = false;
  };
  /**
   * 取消同当前 Action 相关的过滤，指定的 x,y
   */


  RangeFilter.prototype.reset = function () {
    var view = this.context.view;
    this.isStarted = false;

    if (this.hasDim('x')) {
      var xScale = view.getXScale();
      this.filterView(view, xScale.field, null); // 取消过滤
    }

    if (this.hasDim('y')) {
      // y 轴过滤仅取第一个 yScale
      var yScale = view.getYScales()[0];
      this.filterView(view, yScale.field, null); // 取消过滤
    }

    this.reRender(view);
  };
  /**
   * 对 view 进行过滤
   */


  RangeFilter.prototype.filterView = function (view, field, filter) {
    view.filter(field, filter);
  };
  /**
   * 重新渲染
   * @param view
   */


  RangeFilter.prototype.reRender = function (view) {
    view.render(true);
  };

  return RangeFilter;
}(action_base);

/* harmony default export */ var range_filter = (range_filter_RangeFilter);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/data/sibling-filter.js





/**
 * 数据范围过滤，但不在当前的 view 上生效，而在当前的 view 同一层级的其他 views 上生效，用于实现联动过滤。
 * @ignore
 */

var sibling_filter_SiblingFilter =
/** @class */
function (_super) {
  __extends(SiblingFilter, _super);

  function SiblingFilter() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
   * 对 view 进行过滤
   * @param view
   * @param field
   * @param filter
   */


  SiblingFilter.prototype.filterView = function (view, field, filter) {
    var siblings = getSilbings(view);
    Object(esm["each"])(siblings, function (sibling) {
      sibling.filter(field, filter);
    });
  };
  /**
   * 重新渲染
   * @param view
   */


  SiblingFilter.prototype.reRender = function (view) {
    var siblings = getSilbings(view);
    Object(esm["each"])(siblings, function (sibling) {
      sibling.render(true);
    });
  };

  return SiblingFilter;
}(range_filter);

/* harmony default export */ var sibling_filter = (sibling_filter_SiblingFilter);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/element/filter.js










/**
 * 元素过滤的 Action，控制元素的显示隐藏
 * @ignore
 */

var filter_ElementFilter =
/** @class */
function (_super) {
  __extends(ElementFilter, _super);

  function ElementFilter() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
   * 过滤
   */


  ElementFilter.prototype.filter = function () {
    var delegateObject = getDelegationObject(this.context);
    var view = this.context.view;
    var elements = getElements(view);

    if (isMask(this.context)) {
      var maskElements_1 = getMaskedElements(this.context, 10);

      if (maskElements_1) {
        Object(esm["each"])(elements, function (el) {
          if (maskElements_1.includes(el)) {
            el.show();
          } else {
            el.hide();
          }
        });
      }
    } else if (delegateObject) {
      var component = delegateObject.component;
      var field_1 = component.get('field'); // 列表类的组件能够触发

      if (isList(delegateObject)) {
        if (field_1) {
          var unCheckedItems = component.getItemsByState('unchecked');
          var scale_1 = getScaleByField(view, field_1);
          var names_1 = unCheckedItems.map(function (item) {
            return item.name;
          }); // 直接控制显示、隐藏

          Object(esm["each"])(elements, function (el) {
            var value = getElementValue(el, field_1);
            var text = scale_1.getText(value);

            if (names_1.indexOf(text) >= 0) {
              el.hide();
            } else {
              el.show();
            }
          });
        }
      } else if (isSlider(delegateObject)) {
        var range = component.getValue();
        var min_1 = range[0],
            max_1 = range[1];
        Object(esm["each"])(elements, function (el) {
          var value = getElementValue(el, field_1);

          if (value >= min_1 && value <= max_1) {
            el.show();
          } else {
            el.hide();
          }
        });
      }
    }
  };
  /**
   * 清除过滤
   */


  ElementFilter.prototype.clear = function () {
    var elements = getElements(this.context.view);
    Object(esm["each"])(elements, function (el) {
      el.show();
    });
  };
  /**
   * 恢复发生的过滤，保持同 data-filter 命名的一致
   */


  ElementFilter.prototype.reset = function () {
    this.clear();
  };

  return ElementFilter;
}(action_base);

/* harmony default export */ var element_filter = (filter_ElementFilter);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/element/sibling-filter.js








/**
 * Sibling filter
 * @ignore
 */

var element_sibling_filter_SiblingFilter =
/** @class */
function (_super) {
  __extends(SiblingFilter, _super);

  function SiblingFilter() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.byRecord = false;
    return _this;
  }
  /**
   * 过滤隐藏图形
   */


  SiblingFilter.prototype.filter = function () {
    // 仅考虑 mask 导致的过滤
    if (isMask(this.context)) {
      if (this.byRecord) {
        this.filterByRecord();
      } else {
        this.filterByBBox();
      }
    }
  }; // 根据框选的记录来做过滤


  SiblingFilter.prototype.filterByRecord = function () {
    var view = this.context.view;
    var maskElements = getMaskedElements(this.context, 10);

    if (!maskElements) {
      return;
    }

    var xFiled = view.getXScale().field;
    var yField = view.getYScales()[0].field;
    var records = maskElements.map(function (el) {
      return el.getModel().data;
    });
    var siblings = getSilbings(view);
    Object(esm["each"])(siblings, function (sibling) {
      var elements = getElements(sibling);
      Object(esm["each"])(elements, function (el) {
        var record = el.getModel().data; // records.includes(record) 不生效，应该是数据的引用被改了

        if (isInRecords(records, record, xFiled, yField)) {
          el.show();
        } else {
          el.hide();
        }
      });
    });
  }; // 根据被框选的包围盒做过滤


  SiblingFilter.prototype.filterByBBox = function () {
    var _this = this;

    var view = this.context.view;
    var siblings = getSilbings(view);
    Object(esm["each"])(siblings, function (sibling) {
      var maskElements = getSiblingMaskElements(_this.context, sibling, 10);
      var elements = getElements(sibling);

      if (maskElements) {
        // mask 过小时返回为 null，不能是空数组，否则同未框选到混淆
        Object(esm["each"])(elements, function (el) {
          if (maskElements.includes(el)) {
            el.show();
          } else {
            el.hide();
          }
        });
      }
    });
  };
  /**
   * 清理所有隐藏的图形
   */


  SiblingFilter.prototype.reset = function () {
    var siblings = getSilbings(this.context.view);
    Object(esm["each"])(siblings, function (sibling) {
      var elements = getElements(sibling);
      Object(esm["each"])(elements, function (el) {
        el.show();
      });
    });
  };

  return SiblingFilter;
}(action_base);

/* harmony default export */ var element_sibling_filter = (element_sibling_filter_SiblingFilter);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/view/button.js






var PADDING_RIGHT = 10;
var PADDING_TOP = 5;
/**
 * Button action
 * @ignore
 */

var button_ButtonAction =
/** @class */
function (_super) {
  __extends(ButtonAction, _super);

  function ButtonAction() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.buttonGroup = null;
    _this.buttonCfg = {
      name: 'button',
      text: 'button',
      textStyle: {
        x: 0,
        y: 0,
        fontSize: 12,
        fill: '#333333',
        cursor: 'pointer'
      },
      padding: [8, 10],
      style: {
        fill: '#f7f7f7',
        stroke: '#cccccc',
        cursor: 'pointer'
      },
      activeStyle: {
        fill: '#e6e6e6'
      }
    };
    return _this;
  } // mix 默认的配置和用户配置


  ButtonAction.prototype.getButtonCfg = function () {
    return Object(esm["deepMix"])(this.buttonCfg, this.cfg);
  }; // 绘制 Button 和 文本


  ButtonAction.prototype.drawButton = function () {
    var config = this.getButtonCfg();
    var group = this.context.view.foregroundGroup.addGroup({
      name: config.name
    }); // 添加文本

    var textShape = group.addShape({
      type: 'text',
      name: 'button-text',
      attrs: _assign({
        text: config.text
      }, config.textStyle)
    });
    var textBBox = textShape.getBBox();
    var padding = parsePadding(config.padding); // 添加背景按钮

    var buttonShape = group.addShape({
      type: 'rect',
      name: 'button-rect',
      attrs: _assign({
        x: textBBox.x - padding[3],
        y: textBBox.y - padding[0],
        width: textBBox.width + padding[1] + padding[3],
        height: textBBox.height + padding[0] + padding[2]
      }, config.style)
    });
    buttonShape.toBack(); // 在后面
    // active 效果内置

    group.on('mouseenter', function () {
      buttonShape.attr(config.activeStyle);
    });
    group.on('mouseleave', function () {
      buttonShape.attr(config.style);
    });
    this.buttonGroup = group;
  }; // 重置位置


  ButtonAction.prototype.resetPosition = function () {
    var view = this.context.view;
    var coord = view.getCoordinate();
    var point = coord.convert({
      x: 1,
      y: 1
    }); // 后面直接改成左上角

    var buttonGroup = this.buttonGroup;
    var bbox = buttonGroup.getBBox();
    var matrix = matrix_util_esm["a" /* ext */].transform(null, [['t', point.x - bbox.width - PADDING_RIGHT, point.y + bbox.height + PADDING_TOP]]);
    buttonGroup.setMatrix(matrix);
  };
  /**
   * 显示
   */


  ButtonAction.prototype.show = function () {
    if (!this.buttonGroup) {
      this.drawButton();
    }

    this.resetPosition();
    this.buttonGroup.show();
  };
  /**
   * 隐藏
   */


  ButtonAction.prototype.hide = function () {
    if (this.buttonGroup) {
      this.buttonGroup.hide();
    }
  };
  /**
   * 销毁
   */


  ButtonAction.prototype.destroy = function () {
    var buttonGroup = this.buttonGroup;

    if (buttonGroup) {
      buttonGroup.remove();
    }

    _super.prototype.destroy.call(this);
  };

  return ButtonAction;
}(action_base);

/* harmony default export */ var view_button = (button_ButtonAction);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/view/drag.js



var DISTANCE = 4; // 移动的最小距离

/**
 * @ignore
 * View 支持 Drag 的 Action
 */

var drag_Drag =
/** @class */
function (_super) {
  __extends(Drag, _super);

  function Drag() {
    var _this = _super !== null && _super.apply(this, arguments) || this; // Action 开始，不等同于 拖拽开始，需要判定移动的范围


    _this.starting = false; // 拖拽开始

    _this.dragStart = false;
    return _this;
  }
  /**
   * 开始
   */


  Drag.prototype.start = function () {
    this.starting = true;
    this.startPoint = this.context.getCurrentPoint();
  };
  /**
   * 拖拽
   */


  Drag.prototype.drag = function () {
    if (!this.startPoint) {
      return;
    }

    var current = this.context.getCurrentPoint();
    var view = this.context.view;
    var event = this.context.event;

    if (!this.dragStart) {
      if (action_util_distance(current, this.startPoint) > DISTANCE) {
        view.emit('dragstart', {
          target: event.target,
          x: event.x,
          y: event.y
        });
        this.dragStart = true;
      }
    } else {
      view.emit('drag', {
        target: event.target,
        x: event.x,
        y: event.y
      });
    }
  };
  /**
   * 结束
   */


  Drag.prototype.end = function () {
    if (this.dragStart) {
      var view = this.context.view;
      var event_1 = this.context.event;
      view.emit('dragend', {
        target: event_1.target,
        x: event_1.x,
        y: event_1.y
      });
    }

    this.starting = false;
    this.dragStart = false;
  };

  return Drag;
}(action_base);

/* harmony default export */ var drag = (drag_Drag);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/view/move.js




var MIN_DISTANCE = 5;
/**
 * @ignore
 * View 移动的 Action
 */

var move_Move =
/** @class */
function (_super) {
  __extends(Move, _super);

  function Move() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.starting = false;
    _this.isMoving = false; // private cacheRange = null;

    _this.startPoint = null;
    _this.startMatrix = null;
    return _this;
  }
  /**
   * 开始移动
   */


  Move.prototype.start = function () {
    this.starting = true;
    this.startPoint = this.context.getCurrentPoint(); // 缓存开始时的矩阵，防止反复拖拽

    this.startMatrix = this.context.view.middleGroup.getMatrix();
  };
  /**
   * 移动
   */


  Move.prototype.move = function () {
    if (!this.starting) {
      return;
    }

    var startPoint = this.startPoint;
    var currentPoint = this.context.getCurrentPoint();
    var d = action_util_distance(startPoint, currentPoint);

    if (d > MIN_DISTANCE && !this.isMoving) {
      this.isMoving = true;
    }

    if (this.isMoving) {
      var view = this.context.view;
      var matrix = matrix_util_esm["a" /* ext */].transform(this.startMatrix, [['t', currentPoint.x - startPoint.x, currentPoint.y - startPoint.y]]);
      view.backgroundGroup.setMatrix(matrix);
      view.foregroundGroup.setMatrix(matrix);
      view.middleGroup.setMatrix(matrix);
    }
  };
  /**
   * 结束移动
   */


  Move.prototype.end = function () {
    if (this.isMoving) {
      this.isMoving = false;
    }

    this.startMatrix = null;
    this.starting = false;
    this.startPoint = null;
  };
  /**
   * 回滚
   */


  Move.prototype.reset = function () {
    this.starting = false;
    this.startPoint = null;
    this.isMoving = false;
    var view = this.context.view;
    view.backgroundGroup.resetMatrix();
    view.foregroundGroup.resetMatrix();
    view.middleGroup.resetMatrix();
    this.isMoving = false;
  };

  return Move;
}(action_base);

/* harmony default export */ var move = (move_Move);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/view/scale-transform.js




var DIM_X = 'x';
var DIM_Y = 'y';
/**
 * Scale translate
 * @ignore
 */

var scale_transform_ScaleTranslate =
/** @class */
function (_super) {
  __extends(ScaleTranslate, _super);

  function ScaleTranslate() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.dims = [DIM_X, DIM_Y];
    _this.cfgFields = ['dims'];
    _this.cacheScaleDefs = {};
    return _this;
  } // 是否支持对应字段的平移


  ScaleTranslate.prototype.hasDim = function (dim) {
    return this.dims.includes(dim);
  };

  ScaleTranslate.prototype.getScale = function (dim) {
    var view = this.context.view;

    if (dim === 'x') {
      return view.getXScale();
    } else {
      return view.getYScales()[0];
    }
  };

  ScaleTranslate.prototype.resetDim = function (dim) {
    var view = this.context.view;

    if (this.hasDim(dim) && this.cacheScaleDefs[dim]) {
      var scale = this.getScale(dim);
      view.scale(scale.field, this.cacheScaleDefs[dim]);
      this.cacheScaleDefs[dim] = null;
    }
  };
  /**
   * 回滚
   */


  ScaleTranslate.prototype.reset = function () {
    this.resetDim(DIM_X);
    this.resetDim(DIM_Y);
    var view = this.context.view;
    view.render(true);
  };

  return ScaleTranslate;
}(action_base);

/* harmony default export */ var scale_transform = (scale_transform_ScaleTranslate);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/view/scale-translate.js






/**
 * 拖拽 Scale 的 Action
 * @ignore
 */

var scale_translate_ScaleTranslate =
/** @class */
function (_super) {
  __extends(ScaleTranslate, _super);

  function ScaleTranslate() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.startPoint = null;
    _this.starting = false;
    _this.startCache = {};
    return _this;
  }
  /**
   * 开始
   */


  ScaleTranslate.prototype.start = function () {
    var _this = this;

    this.startPoint = this.context.getCurrentPoint();
    this.starting = true;
    var dims = this.dims;
    Object(esm["each"])(dims, function (dim) {
      var scale = _this.getScale(dim);

      var min = scale.min,
          max = scale.max,
          values = scale.values;
      _this.startCache[dim] = {
        min: min,
        max: max,
        values: values
      };
    });
  }; // 平移分类的度量
  // private translateCategory(dim, scale, normalPoint) {
  // }

  /**
   * 结束
   */


  ScaleTranslate.prototype.end = function () {
    this.startPoint = null;
    this.starting = false;
    this.startCache = {};
  };
  /**
   * 平移
   */


  ScaleTranslate.prototype.translate = function () {
    var _this = this;

    if (!this.starting) {
      return;
    }

    var startPoint = this.startPoint;
    var coord = this.context.view.getCoordinate();
    var currentPoint = this.context.getCurrentPoint();
    var normalStart = coord.invert(startPoint);
    var noramlCurrent = coord.invert(currentPoint);
    var dx = noramlCurrent.x - normalStart.x;
    var dy = noramlCurrent.y - normalStart.y;
    var view = this.context.view;
    var dims = this.dims;
    Object(esm["each"])(dims, function (dim) {
      _this.translateDim(dim, {
        x: dx * -1,
        y: dy * -1
      });
    });
    view.render(true);
  }; // 平移度量


  ScaleTranslate.prototype.translateDim = function (dim, normalPoint) {
    if (this.hasDim(dim)) {
      var scale = this.getScale(dim);

      if (scale.isLinear) {
        this.translateLinear(dim, scale, normalPoint);
      } //  else { // 暂时仅处理连续字段
      // this.translateCategory(dim, scale, normalPoint);
      // }

    }
  }; // linear 度量平移


  ScaleTranslate.prototype.translateLinear = function (dim, scale, normalPoint) {
    var view = this.context.view;
    var _a = this.startCache[dim],
        min = _a.min,
        max = _a.max;
    var range = max - min;
    var d = normalPoint[dim] * range; // 只有第一次缓存，否则无法回滚

    if (!this.cacheScaleDefs[dim]) {
      this.cacheScaleDefs[dim] = {
        // @ts-ignore
        nice: scale.nice,
        min: min,
        max: max
      };
    }

    view.scale(scale.field, {
      // @ts-ignore
      nice: false,
      min: min + d,
      max: max + d
    });
  }; // 平移分类的度量
  // private translateCategory(dim, scale, normalPoint) {
  // }

  /**
   * 回滚
   */


  ScaleTranslate.prototype.reset = function () {
    _super.prototype.reset.call(this);

    this.startPoint = null;
    this.starting = false;
  };

  return ScaleTranslate;
}(scale_transform);

/* harmony default export */ var scale_translate = (scale_translate_ScaleTranslate);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/interaction/action/view/scale-zoom.js



/**
 * 缩放 Scale 的 Action
 * @ignore
 */

var scale_zoom_ScaleTranslate =
/** @class */
function (_super) {
  __extends(ScaleTranslate, _super);

  function ScaleTranslate() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.zoomRatio = 0.05;
    return _this; // 平移分类的度量
    // private translateCategory(dim, scale, normalPoint) {
    // }
  }
  /**
   * 缩小
   */


  ScaleTranslate.prototype.zoomIn = function () {
    this.zoom(this.zoomRatio);
  };

  ScaleTranslate.prototype.zoom = function (scale) {
    var _this = this;

    var dims = this.dims;
    Object(esm["each"])(dims, function (dim) {
      _this.zoomDim(dim, scale);
    });
    this.context.view.render(true);
  };
  /**
   * 放大
   */


  ScaleTranslate.prototype.zoomOut = function () {
    this.zoom(-1 * this.zoomRatio);
  }; // 缩放度量


  ScaleTranslate.prototype.zoomDim = function (dim, dRatio) {
    if (this.hasDim(dim)) {
      var scale = this.getScale(dim);

      if (scale.isLinear) {
        this.zoomLinear(dim, scale, dRatio);
      } //  else { // 暂时仅处理连续字段
      // this.zoomCategory(dim, scale, normalPoint);
      // }

    }
  }; // linear 度量平移


  ScaleTranslate.prototype.zoomLinear = function (dim, scale, dRatio) {
    var view = this.context.view; // 只有第一次缓存，否则无法回滚

    if (!this.cacheScaleDefs[dim]) {
      this.cacheScaleDefs[dim] = {
        // @ts-ignore
        nice: scale.nice,
        min: scale.min,
        max: scale.max
      };
    } // 使用使用原始度量作为缩放标准


    var scaleDef = this.cacheScaleDefs[dim];
    var range = scaleDef.max - scaleDef.min;
    var min = scale.min,
        max = scale.max;
    var d = dRatio * range;
    var toMin = min - d;
    var toMax = max + d;
    var curRange = toMax - toMin;
    var scaled = curRange / range;

    if (toMax > toMin && scaled < 100 && scaled > 0.01) {
      view.scale(scale.field, {
        // @ts-ignore
        nice: false,
        min: min - d,
        max: max + d
      });
    }
  };

  return ScaleTranslate;
}(scale_transform);

/* harmony default export */ var scale_zoom = (scale_zoom_ScaleTranslate);
// CONCATENATED MODULE: ../node_modules/@antv/g2/esm/index.js
// 注册黑暗主题



registerTheme('dark', createThemeByStylesheet(antvDark)); // 注册 G 渲染引擎




registerEngine('canvas', g_canvas_esm);
registerEngine('svg', g_svg_esm_namespaceObject); // 注册 G2 内置的 geometry











registerGeometry('Polygon', geometry_polygon);
registerGeometry('Interval', geometry_interval);
registerGeometry('Schema', geometry_schema);
registerGeometry('Path', geometry_path);
registerGeometry('Point', geometry_point);
registerGeometry('Line', geometry_line);
registerGeometry('Area', geometry_area);
registerGeometry('Edge', geometry_edge);
registerGeometry('Heatmap', heatmap); // 引入所有内置的 shapes

















 // 注册 Geometry 内置的 label






registerGeometryLabel('base', label_base);
registerGeometryLabel('interval', label_interval);
registerGeometryLabel('pie', pie);
registerGeometryLabel('polar', label_polar); // 注册 Geometry label 内置的布局函数






registerGeometryLabelLayout('overlap', overlap);
registerGeometryLabelLayout('distribute', distribute);
registerGeometryLabelLayout('fixed-overlap', fixedOverlap);
registerGeometryLabelLayout('limit-in-shape', limitInShape);
registerGeometryLabelLayout('limit-in-canvas', limitInCanvas); // 注册需要的动画执行函数










registerAnimation('fade-in', fadeIn);
registerAnimation('fade-out', fadeOut);
registerAnimation('grow-in-x', growInX);
registerAnimation('grow-in-xy', growInXY);
registerAnimation('grow-in-y', growInY);
registerAnimation('scale-in-x', scaleInX);
registerAnimation('scale-in-y', scaleInY);
registerAnimation('wave-in', waveIn);
registerAnimation('zoom-in', zoomIn);
registerAnimation('zoom-out', zoomOut);
registerAnimation('position-update', positionUpdate);
registerAnimation('sector-path-update', sectorPathUpdate);
registerAnimation('path-in', pathIn); // 注册内置的 Facet








facet_registerFacet('rect', facet_rect);
facet_registerFacet('mirror', mirror);
facet_registerFacet('list', facet_list);
facet_registerFacet('matrix', facet_matrix);
facet_registerFacet('circle', facet_circle);
facet_registerFacet('tree', tree); // 注册内置的 Component






 // register build-in components

registerComponentController('axis', controller_axis);
registerComponentController('legend', controller_legend);
registerComponentController('tooltip', controller_tooltip);
registerComponentController('annotation', controller_annotation);
registerComponentController('slider', controller_slider); // 注册 Interaction Action





































registerAction('tooltip', component_tooltip);
registerAction('sibling-tooltip', sibling_tooltp);
registerAction('element-active', active);
registerAction('element-single-active', single_active);
registerAction('element-range-active', range_active);
registerAction('element-highlight', highlight);
registerAction('element-highlight-by-x', highlight_by_x);
registerAction('element-highlight-by-color', highlight_by_color);
registerAction('element-single-highlight', single_highlight);
registerAction('element-range-highlight', range_highlight);
registerAction('element-sibling-highlight', range_highlight, {
  effectSiblings: true,
  effectByRecord: true
});
registerAction('element-selected', selected);
registerAction('element-single-selected', single_selected);
registerAction('element-range-selected', range_selected);
registerAction('element-link-by-color', link_by_color);
registerAction('active-region', active_region);
registerAction('list-active', list_active);
registerAction('list-selected', list_selected);
registerAction('list-highlight', list_highlight);
registerAction('list-unchecked', list_unchecked);
registerAction('legend-item-highlight', list_highlight, {
  componentNames: ['legend']
});
registerAction('axis-label-highlight', list_highlight, {
  componentNames: ['axis']
});
registerAction('rect-mask', mask_rect);
registerAction('x-rect-mask', dim_rect, {
  dim: 'x'
});
registerAction('y-rect-mask', dim_rect, {
  dim: 'y'
});
registerAction('circle-mask', mask_circle);
registerAction('path-mask', mask_path);
registerAction('smooth-path-mask', smooth_path);
registerAction('cursor', cursor);
registerAction('data-filter', data_filter);
registerAction('brush', range_filter);
registerAction('brush-x', range_filter, {
  dims: ['x']
});
registerAction('brush-y', range_filter, {
  dims: ['y']
});
registerAction('sibling-filter', sibling_filter);
registerAction('sibling-x-filter', sibling_filter);
registerAction('sibling-y-filter', sibling_filter);
registerAction('element-filter', element_filter);
registerAction('element-sibling-filter', element_sibling_filter);
registerAction('element-sibling-filter-record', element_sibling_filter, {
  byRecord: true
});
registerAction('view-drag', drag);
registerAction('view-move', move);
registerAction('scale-translate', scale_translate);
registerAction('scale-zoom', scale_zoom);
registerAction('reset-button', view_button, {
  name: 'reset-button',
  text: 'reset'
}); // 注册默认的 Interaction 交互行为



function isPointInView(context) {
  return context.isInPlot();
} // 注册 tooltip 的 interaction


registerInteraction('tooltip', {
  start: [{
    trigger: 'plot:mousemove',
    action: 'tooltip:show',
    throttle: {
      wait: 50,
      leading: true,
      trailing: false
    }
  }, {
    trigger: 'plot:touchmove',
    action: 'tooltip:show',
    throttle: {
      wait: 50,
      leading: true,
      trailing: false
    }
  }],
  end: [{
    trigger: 'plot:mouseleave',
    action: 'tooltip:hide'
  }, {
    trigger: 'plot:leave',
    action: 'tooltip:hide'
  }, {
    trigger: 'plot:touchend',
    action: 'tooltip:hide'
  }]
}); // 移动到 elment 上 active

registerInteraction('element-active', {
  start: [{
    trigger: 'element:mouseenter',
    action: 'element-active:active'
  }],
  end: [{
    trigger: 'element:mouseleave',
    action: 'element-active:reset'
  }]
}); // 点击选中，允许取消

registerInteraction('element-selected', {
  start: [{
    trigger: 'element:click',
    action: 'element-selected:toggle'
  }]
}); // hover highlight，允许取消

registerInteraction('element-highlight', {
  start: [{
    trigger: 'element:mouseenter',
    action: 'element-highlight:highlight'
  }],
  end: [{
    trigger: 'element:mouseleave',
    action: 'element-highlight:reset'
  }]
}); // hover highlight by x，允许取消

registerInteraction('element-highlight-by-x', {
  start: [{
    trigger: 'element:mouseenter',
    action: 'element-highlight-by-x:highlight'
  }],
  end: [{
    trigger: 'element:mouseleave',
    action: 'element-highlight-by-x:reset'
  }]
}); // hover highlight by y，允许取消

registerInteraction('element-highlight-by-color', {
  start: [{
    trigger: 'element:mouseenter',
    action: 'element-highlight-by-color:highlight'
  }],
  end: [{
    trigger: 'element:mouseleave',
    action: 'element-highlight-by-color:reset'
  }]
}); // legend hover，element active

registerInteraction('legend-active', {
  start: [{
    trigger: 'legend-item:mouseenter',
    action: ['list-active:active', 'element-active:active']
  }],
  end: [{
    trigger: 'legend-item:mouseleave',
    action: ['list-active:reset', 'element-active:reset']
  }]
}); // legend hover，element active

registerInteraction('legend-highlight', {
  start: [{
    trigger: 'legend-item:mouseenter',
    action: ['legend-item-highlight:highlight', 'element-highlight:highlight']
  }],
  end: [{
    trigger: 'legend-item:mouseleave',
    action: ['legend-item-highlight:reset', 'element-highlight:reset']
  }]
}); // legend hover，element active

registerInteraction('axis-label-highlight', {
  start: [{
    trigger: 'axis-label:mouseenter',
    action: ['axis-label-highlight:highlight', 'element-highlight:highlight']
  }],
  end: [{
    trigger: 'axis-label:mouseleave',
    action: ['axis-label-highlight:reset', 'element-highlight:reset']
  }]
}); // legend hover，element active

registerInteraction('element-list-highlight', {
  start: [{
    trigger: 'element:mouseenter',
    action: ['list-highlight:highlight', 'element-highlight:highlight']
  }],
  end: [{
    trigger: 'element:mouseleave',
    action: ['list-highlight:reset', 'element-highlight:reset']
  }]
}); // 框选

registerInteraction('element-range-highlight', {
  showEnable: [{
    trigger: 'plot:mouseenter',
    action: 'cursor:crosshair'
  }, {
    trigger: 'mask:mouseenter',
    action: 'cursor:move'
  }, {
    trigger: 'plot:mouseleave',
    action: 'cursor:default'
  }, {
    trigger: 'mask:mouseleave',
    action: 'cursor:crosshair'
  }],
  start: [{
    trigger: 'plot:mousedown',
    isEnable: function isEnable(context) {
      // 不要点击在 mask 上重新开始
      return !context.isInShape('mask');
    },
    action: ['rect-mask:start', 'rect-mask:show']
  }, {
    trigger: 'mask:dragstart',
    action: ['rect-mask:moveStart']
  }],
  processing: [{
    trigger: 'plot:mousemove',
    action: ['rect-mask:resize']
  }, {
    trigger: 'mask:drag',
    action: ['rect-mask:move']
  }, {
    trigger: 'mask:change',
    action: ['element-range-highlight:highlight']
  }],
  end: [{
    trigger: 'plot:mouseup',
    action: ['rect-mask:end']
  }, {
    trigger: 'mask:dragend',
    action: ['rect-mask:moveEnd']
  }, {
    trigger: 'document:mouseup',
    isEnable: function isEnable(context) {
      return !context.isInPlot();
    },
    action: ['element-range-highlight:clear', 'rect-mask:end', 'rect-mask:hide']
  }],
  rollback: [{
    trigger: 'dblclick',
    action: ['element-range-highlight:clear', 'rect-mask:hide']
  }]
});
registerInteraction('brush', {
  showEnable: [{
    trigger: 'plot:mouseenter',
    action: 'cursor:crosshair'
  }, {
    trigger: 'plot:mouseleave',
    action: 'cursor:default'
  }],
  start: [{
    trigger: 'mousedown',
    isEnable: isPointInView,
    action: ['brush:start', 'rect-mask:start', 'rect-mask:show']
  }],
  processing: [{
    trigger: 'mousemove',
    isEnable: isPointInView,
    action: ['rect-mask:resize']
  }],
  end: [{
    trigger: 'mouseup',
    isEnable: isPointInView,
    action: ['brush:filter', 'brush:end', 'rect-mask:end', 'rect-mask:hide', 'reset-button:show']
  }],
  rollback: [{
    trigger: 'reset-button:click',
    action: ['brush:reset', 'reset-button:hide', 'cursor:crosshair']
  }]
});
registerInteraction('brush-visible', {
  showEnable: [{
    trigger: 'plot:mouseenter',
    action: 'cursor:crosshair'
  }, {
    trigger: 'plot:mouseleave',
    action: 'cursor:default'
  }],
  start: [{
    trigger: 'plot:mousedown',
    action: ['rect-mask:start', 'rect-mask:show']
  }],
  processing: [{
    trigger: 'plot:mousemove',
    action: ['rect-mask:resize']
  }, {
    trigger: 'mask:change',
    action: ['element-range-highlight:highlight']
  }],
  end: [{
    trigger: 'plot:mouseup',
    action: ['rect-mask:end', 'rect-mask:hide', 'element-filter:filter', 'element-range-highlight:clear']
  }],
  rollback: [{
    trigger: 'dblclick',
    action: ['element-filter:clear']
  }]
});
registerInteraction('brush-x', {
  showEnable: [{
    trigger: 'plot:mouseenter',
    action: 'cursor:crosshair'
  }, {
    trigger: 'plot:mouseleave',
    action: 'cursor:default'
  }],
  start: [{
    trigger: 'mousedown',
    isEnable: isPointInView,
    action: ['brush-x:start', 'x-rect-mask:start', 'x-rect-mask:show']
  }],
  processing: [{
    trigger: 'mousemove',
    isEnable: isPointInView,
    action: ['x-rect-mask:resize']
  }],
  end: [{
    trigger: 'mouseup',
    isEnable: isPointInView,
    action: ['brush-x:filter', 'brush-x:end', 'x-rect-mask:end', 'x-rect-mask:hide']
  }],
  rollback: [{
    trigger: 'dblclick',
    action: ['brush-x:reset']
  }]
});
registerInteraction('element-path-highlight', {
  showEnable: [{
    trigger: 'plot:mouseenter',
    action: 'cursor:crosshair'
  }, {
    trigger: 'plot:mouseleave',
    action: 'cursor:default'
  }],
  start: [{
    trigger: 'mousedown',
    isEnable: isPointInView,
    action: 'path-mask:start'
  }, {
    trigger: 'mousedown',
    isEnable: isPointInView,
    action: 'path-mask:show'
  }],
  processing: [{
    trigger: 'mousemove',
    action: 'path-mask:addPoint'
  }],
  end: [{
    trigger: 'mouseup',
    action: 'path-mask:end'
  }],
  rollback: [{
    trigger: 'dblclick',
    action: 'path-mask:hide'
  }]
}); // 点击选中，允许取消

registerInteraction('element-single-selected', {
  start: [{
    trigger: 'element:click',
    action: 'element-single-selected:toggle'
  }]
}); // 筛选数据

registerInteraction('legend-filter', {
  showEnable: [{
    trigger: 'legend-item:mouseenter',
    action: 'cursor:pointer'
  }, {
    trigger: 'legend-item:mouseleave',
    action: 'cursor:default'
  }],
  start: [{
    trigger: 'legend-item:click',
    action: ['list-unchecked:toggle', 'data-filter:filter']
  }]
}); // 筛选数据

registerInteraction('continuous-filter', {
  start: [{
    trigger: 'legend:valuechanged',
    action: 'data-filter:filter'
  }]
}); // 筛选数据

registerInteraction('continuous-visible-filter', {
  start: [{
    trigger: 'legend:valuechanged',
    action: 'element-filter:filter'
  }]
}); // 筛选图形

registerInteraction('legend-visible-filter', {
  showEnable: [{
    trigger: 'legend-item:mouseenter',
    action: 'cursor:pointer'
  }, {
    trigger: 'legend-item:mouseleave',
    action: 'cursor:default'
  }],
  start: [{
    trigger: 'legend-item:click',
    action: ['list-unchecked:toggle', 'element-filter:filter']
  }]
}); // 出现背景框

registerInteraction('active-region', {
  start: [{
    trigger: 'plot:mousemove',
    action: 'active-region:show'
  }],
  end: [{
    trigger: 'plot:mouseleave',
    action: 'active-region:hide'
  }]
});

function isWheelDown(event) {
  event.gEvent.preventDefault();
  return event.gEvent.originalEvent.deltaY > 0;
}

registerInteraction('view-zoom', {
  start: [{
    trigger: 'plot:mousewheel',
    isEnable: function isEnable(context) {
      return isWheelDown(context.event);
    },
    action: 'scale-zoom:zoomOut',
    throttle: {
      wait: 100,
      leading: true,
      trailing: false
    }
  }, {
    trigger: 'plot:mousewheel',
    isEnable: function isEnable(context) {
      return !isWheelDown(context.event);
    },
    action: 'scale-zoom:zoomIn',
    throttle: {
      wait: 100,
      leading: true,
      trailing: false
    }
  }]
});
registerInteraction('sibling-tooltip', {
  start: [{
    trigger: 'plot:mousemove',
    action: 'sibling-tooltip:show'
  }],
  end: [{
    trigger: 'plot:mouseleave',
    action: 'sibling-tooltip:hide'
  }]
});
 // 一些工具方法导出



var Util = {
  translate: transform_translate,
  rotate: transform_rotate,
  zoom: zoom,
  transform: transform,
  getAngle: graphics_getAngle,
  polarToCartesian: polarToCartesian
};
// CONCATENATED MODULE: ./src/index.ts

/* harmony default export */ var src_0 = __webpack_exports__["default"] = (/* Cannot get final name for export "default" in "../node_modules/@antv/g2/esm/index.js" (known exports: Util, known reexports: VERSION Chart View Event ComponentController Geometry GeometryLabel Interaction Facet InteractionAction registerComponentController registerGeometry registerShape registerShapeFactory getShapeFactory registerGeometryLabel registerGeometryLabelLayout getGeometryLabel getGeometryLabelLayout getInteraction registerInteraction registerAction getActionClass getFacet registerFacet getTheme registerTheme registerEngine getEngine registerAnimation getAnimation LAYER DIRECTION Types) */ undefined);

/***/ }),

/***/ "/Lgp":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__("Qqke");
var enumBugKeys = __webpack_require__("miGZ");

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),

/***/ "/Vl9":
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),

/***/ "/dwC":
/***/ (function(module, exports, __webpack_require__) {

// 26.1.9 Reflect.has(target, propertyKey)
var $export = __webpack_require__("X6VK");

$export($export.S, 'Reflect', {
  has: function has(target, propertyKey) {
    return propertyKey in target;
  }
});


/***/ }),

/***/ "/hZi":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // This icon file is generated automatically.

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var CloseCircleOutlined = {
  "icon": {
    "tag": "svg",
    "attrs": {
      "viewBox": "64 64 896 896",
      "focusable": "false"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "d": "M685.4 354.8c0-4.4-3.6-8-8-8l-66 .3L512 465.6l-99.3-118.4-66.1-.3c-4.4 0-8 3.5-8 8 0 1.9.7 3.7 1.9 5.2l130.1 155L340.5 670a8.32 8.32 0 00-1.9 5.2c0 4.4 3.6 8 8 8l66.1-.3L512 564.4l99.3 118.4 66 .3c4.4 0 8-3.5 8-8 0-1.9-.7-3.7-1.9-5.2L553.5 515l130.1-155c1.2-1.4 1.8-3.3 1.8-5.2z"
      }
    }, {
      "tag": "path",
      "attrs": {
        "d": "M512 65C264.6 65 64 265.6 64 513s200.6 448 448 448 448-200.6 448-448S759.4 65 512 65zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
      }
    }]
  },
  "name": "close-circle",
  "theme": "outlined"
};
exports["default"] = CloseCircleOutlined;

/***/ }),

/***/ "/l6L":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------

var _require = __webpack_require__("uUP6"),
    Just = _require.Just,
    Nothing = _require.Nothing;
/*~
 * stability: stable
 * authors:
 *   - "@boris-marinov"
 *
 * type: |
 *   forall a, b:
 *     (Result a b) => Maybe b
 */


var resultToMaybe = function resultToMaybe(aResult) {
  return aResult.matchWith({
    Error: function Error(_ref) {
      var _ = _ref.value;
      return Nothing();
    },
    Ok: function Ok(_ref2) {
      var value = _ref2.value;
      return Just(value);
    }
  });
};

module.exports = resultToMaybe;

/***/ }),

/***/ "0942":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _assertThisInitialized; });
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

/***/ }),

/***/ "0ONX":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------

__webpack_require__("7lGJ");

__webpack_require__("d3/y");

__webpack_require__("ABKx");

__webpack_require__("W1QL");

__webpack_require__("K/PF");

__webpack_require__("t91x");

__webpack_require__("75LO");

var keys = Object.keys;
var symbols = Object.getOwnPropertySymbols;
var defineProperty = Object.defineProperty;
var property = Object.getOwnPropertyDescriptor;
/*
 * Extends an objects with own enumerable key/value pairs from other sources.
 *
 * This is used to define objects for the ADTs througout this file, and there
 * are some important differences from Object.assign:
 *
 *   - This code is only concerned with own enumerable property *names*.
 *   - Additionally this code copies all own symbols (important for tags).
 *
 * When copying, this function copies **whole property descriptors**, which
 * means getters/setters are not executed during the copying. The only
 * exception is when the property name is `prototype`, which is not
 * configurable in functions by default.
 *
 * This code only special cases `prototype` because any other non-configurable
 * property is considered an error, and should crash the program so it can be
 * fixed.
 */

function extend(target) {
  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    sources[_key - 1] = arguments[_key];
  }

  sources.forEach(function (source) {
    keys(source).forEach(function (key) {
      if (key === 'prototype') {
        target[key] = source[key];
      } else {
        defineProperty(target, key, property(source, key));
      }
    });
    symbols(source).forEach(function (symbol) {
      defineProperty(target, symbol, property(source, symbol));
    });
  });
  return target;
}

module.exports = extend;

/***/ }),

/***/ "0Xeg":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return I18nContext; });
/* unused harmony export setDefaults */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return getDefaults; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return ReportNamespaces; });
/* unused harmony export setI18n */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return getI18n; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return initReactI18next; });
/* unused harmony export composeInitialProps */
/* unused harmony export getInitialProps */
/* harmony import */ var core_js_modules_es6_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("DbwS");
/* harmony import */ var core_js_modules_es6_promise__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_promise__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("d3/y");
/* harmony import */ var core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es6_object_define_properties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("6/FK");
/* harmony import */ var core_js_modules_es6_object_define_properties__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_define_properties__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es7_object_get_own_property_descriptors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("2Tod");
/* harmony import */ var core_js_modules_es7_object_get_own_property_descriptors__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es7_object_get_own_property_descriptors__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es6_array_for_each__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("7lGJ");
/* harmony import */ var core_js_modules_es6_array_for_each__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_for_each__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es6_array_filter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("9p7t");
/* harmony import */ var core_js_modules_es6_array_filter__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_filter__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("ABKx");
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("W1QL");
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es6_array_iterator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("K/PF");
/* harmony import */ var core_js_modules_es6_array_iterator__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_iterator__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("t91x");
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_es6_object_keys__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("75LO");
/* harmony import */ var core_js_modules_es6_object_keys__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_keys__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("SDJZ");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("NToG");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("OvAC");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__("mXGw");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_14__);















function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_13___default()(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}


var defaultOptions = {
  bindI18n: 'languageChanged',
  bindI18nStore: '',
  transEmptyNodeValue: '',
  transSupportBasicHtmlNodes: true,
  transKeepBasicHtmlNodesFor: ['br', 'strong', 'i', 'p'],
  useSuspense: true
};
var i18nInstance;
var I18nContext = react__WEBPACK_IMPORTED_MODULE_14___default.a.createContext();
function setDefaults() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  defaultOptions = _objectSpread({}, defaultOptions, {}, options);
}
function getDefaults() {
  return defaultOptions;
}
var ReportNamespaces = function () {
  function ReportNamespaces() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_11___default()(this, ReportNamespaces);

    this.usedNamespaces = {};
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_12___default()(ReportNamespaces, [{
    key: "addUsedNamespaces",
    value: function addUsedNamespaces(namespaces) {
      var _this = this;

      namespaces.forEach(function (ns) {
        if (!_this.usedNamespaces[ns]) _this.usedNamespaces[ns] = true;
      });
    }
  }, {
    key: "getUsedNamespaces",
    value: function getUsedNamespaces() {
      return Object.keys(this.usedNamespaces);
    }
  }]);

  return ReportNamespaces;
}();
function setI18n(instance) {
  i18nInstance = instance;
}
function getI18n() {
  return i18nInstance;
}
var initReactI18next = {
  type: '3rdParty',
  init: function init(instance) {
    setDefaults(instance.options.react);
    setI18n(instance);
  }
};
function composeInitialProps(ForComponent) {
  return function (ctx) {
    return new Promise(function (resolve) {
      var i18nInitialProps = getInitialProps();

      if (ForComponent.getInitialProps) {
        ForComponent.getInitialProps(ctx).then(function (componentsInitialProps) {
          resolve(_objectSpread({}, componentsInitialProps, {}, i18nInitialProps));
        });
      } else {
        resolve(i18nInitialProps);
      }
    });
  };
}
function getInitialProps() {
  var i18n = getI18n();
  var namespaces = i18n.reportNamespaces ? i18n.reportNamespaces.getUsedNamespaces() : [];
  var ret = {};
  var initialI18nStore = {};
  i18n.languages.forEach(function (l) {
    initialI18nStore[l] = {};
    namespaces.forEach(function (ns) {
      initialI18nStore[l][ns] = i18n.getResourceBundle(l, ns) || {};
    });
  });
  ret.initialI18nStore = initialI18nStore;
  ret.initialLanguage = i18n.language;
  return ret;
}

/***/ }),

/***/ "0oPD":
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "1Alt":
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),

/***/ "1Tj+":
/***/ (function(module, exports, __webpack_require__) {

var pIE = __webpack_require__("IdFN");
var createDesc = __webpack_require__("WWmS");
var toIObject = __webpack_require__("ml72");
var toPrimitive = __webpack_require__("5MU4");
var has = __webpack_require__("ezc+");
var IE8_DOM_DEFINE = __webpack_require__("HWsP");
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__("GGqZ") ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};


/***/ }),

/***/ "1UZS":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "1ZPH":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/tc39/proposal-string-pad-start-end
var $export = __webpack_require__("X6VK");
var $pad = __webpack_require__("cb3D");
var userAgent = __webpack_require__("ROCd");

// https://github.com/zloirock/core-js/issues/280
var WEBKIT_BUG = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(userAgent);

$export($export.P + $export.F * WEBKIT_BUG, 'String', {
  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {
    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
  }
});


/***/ }),

/***/ "1lby":
/***/ (function(module) {

module.exports = JSON.parse("{\"name\":\"@antv/g-svg\",\"version\":\"0.4.7\",\"description\":\"A canvas library which providing 2d\",\"main\":\"lib/index.js\",\"module\":\"esm/index.js\",\"unpkg\":\"dist/g.min.js\",\"types\":\"lib/index.d.ts\",\"files\":[\"package.json\",\"esm\",\"lib\",\"dist\",\"LICENSE\",\"README.md\"],\"scripts\":{\"build\":\"npm run clean && run-p build:*\",\"build:esm\":\"tsc -p tsconfig.json --target ES5 --module ESNext --outDir esm\",\"build:cjs\":\"tsc -p tsconfig.json --target ES5 --module commonjs --outDir lib\",\"build:umd\":\"webpack --config webpack.config.js --mode production\",\"clean\":\"rm -rf esm lib dist\",\"coverage\":\"npm run coverage-generator && npm run coverage-viewer\",\"coverage-generator\":\"torch --coverage --compile --source-pattern src/*.js,src/**/*.js --opts tests/mocha.opts\",\"coverage-viewer\":\"torch-coverage\",\"test\":\"torch --renderer --compile --opts tests/mocha.opts\",\"test-live\":\"torch --compile --interactive --opts tests/mocha.opts\",\"tsc\":\"tsc --noEmit\",\"typecheck\":\"tsc --noEmit\"},\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/antvis/g.git\"},\"keywords\":[\"util\",\"antv\",\"g\"],\"publishConfig\":{\"access\":\"public\"},\"author\":\"https://github.com/orgs/antvis/people\",\"license\":\"ISC\",\"bugs\":{\"url\":\"https://github.com/antvis/g/issues\"},\"devDependencies\":{\"@antv/torch\":\"^1.0.0\",\"less\":\"^3.9.0\",\"npm-run-all\":\"^4.1.5\",\"webpack\":\"^4.39.3\",\"webpack-cli\":\"^3.3.7\"},\"homepage\":\"https://github.com/antvis/g#readme\",\"dependencies\":{\"@antv/g-base\":\"^0.4.7\",\"@antv/g-math\":\"^0.1.3\",\"@antv/util\":\"~2.0.0\",\"detect-browser\":\"^4.6.0\"},\"__npminstall_done\":false,\"gitHead\":\"eb6a2503cb7bb8154697592b10680939d954a31a\"}");

/***/ }),

/***/ "1qKx":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.19 Object.setPrototypeOf(O, proto)
var $export = __webpack_require__("X6VK");
$export($export.S, 'Object', { setPrototypeOf: __webpack_require__("3ydu").set });


/***/ }),

/***/ "1qWy":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("Z8gF");

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getUserLangKey = __webpack_require__("nsWf");

var _getUserLangKey2 = _interopRequireDefault(_getUserLangKey);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * Redirect to user language home page, from: / to: /langKey/
 * @param {[String]} langs allowed lang keys ['en', 'fr', 'pt']
 * @param {String} defaultLangKey default browser language key
 * @return {void}
 */


var redirectToHome = function redirectToHome(langs, defaultLangKey) {
  if (typeof window === 'undefined') {
    return;
  }

  var langKey = (0, _getUserLangKey2["default"])(langs, defaultLangKey);
  var newUrl = '/' + langKey + '/';
  window.location.replace(newUrl);
};

exports["default"] = redirectToHome;

/***/ }),

/***/ "1rpk":
/***/ (function(module, exports, __webpack_require__) {

var _curry2 = __webpack_require__("OFPg");
/**
 * Returns true if its arguments are identical, false otherwise. Values are
 * identical if they reference the same memory. `NaN` is identical to `NaN`;
 * `0` and `-0` are not identical.
 *
 * @func
 * @memberOf R
 * @since v0.15.0
 * @category Relation
 * @sig a -> a -> Boolean
 * @param {*} a
 * @param {*} b
 * @return {Boolean}
 * @example
 *
 *      var o = {};
 *      R.identical(o, o); //=> true
 *      R.identical(1, 1); //=> true
 *      R.identical(1, '1'); //=> false
 *      R.identical([], []); //=> false
 *      R.identical(0, -0); //=> false
 *      R.identical(NaN, NaN); //=> true
 */


module.exports = _curry2(function identical(a, b) {
  // SameValue algorithm
  if (a === b) {
    // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    return a !== 0 || 1 / a === 1 / b;
  } else {
    // Step 6.a: NaN == NaN
    return a !== a && b !== b;
  }
});

/***/ }),

/***/ "1t9a":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var scale_1 = __webpack_require__("G3Xc");

exports.Scale = scale_1.Scale;

/***/ }),

/***/ "1wfo":
/***/ (function(module, exports, __webpack_require__) {

// 0 -> Array#forEach
// 1 -> Array#map
// 2 -> Array#filter
// 3 -> Array#some
// 4 -> Array#every
// 5 -> Array#find
// 6 -> Array#findIndex
var ctx = __webpack_require__("9liC");
var IObject = __webpack_require__("Cmsx");
var toObject = __webpack_require__("UnHL");
var toLength = __webpack_require__("Sp5b");
var asc = __webpack_require__("C5nI");
module.exports = function (TYPE, $create) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  var create = $create || asc;
  return function ($this, callbackfn, that) {
    var O = toObject($this);
    var self = IObject(O);
    var f = ctx(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var val, res;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      val = self[index];
      res = f(val, index, O);
      if (TYPE) {
        if (IS_MAP) result[index] = res;   // map
        else if (res) switch (TYPE) {
          case 3: return true;             // some
          case 5: return val;              // find
          case 6: return index;            // findIndex
          case 2: result.push(val);        // filter
        } else if (IS_EVERY) return false; // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
  };
};


/***/ }),

/***/ "2FXK":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

/***/ }),

/***/ "2Hgx":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("9ovy");

__webpack_require__("75LO");

__webpack_require__("4aJ6");

__webpack_require__("M/4x");

__webpack_require__("iur1");

__webpack_require__("J8hF");

__webpack_require__("+3V6");

__webpack_require__("m1Dn");

__webpack_require__("W1QL");

__webpack_require__("K/PF");

__webpack_require__("t91x");

__webpack_require__("lQyR");

__webpack_require__("zx98");

/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */
var hasElementType = typeof Element !== 'undefined';
var hasMap = typeof Map === 'function';
var hasSet = typeof Set === 'function';
var hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView; // Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js

function equal(a, b) {
  // START: fast-deep-equal es6/index.js 3.1.1
  if (a === b) return true;

  if (a && b && typeof a == 'object' && typeof b == 'object') {
    if (a.constructor !== b.constructor) return false;
    var length, i, keys;

    if (Array.isArray(a)) {
      length = a.length;
      if (length != b.length) return false;

      for (i = length; i-- !== 0;) {
        if (!equal(a[i], b[i])) return false;
      }

      return true;
    } // START: Modifications:
    // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code
    //    to co-exist with es5.
    // 2. Replace `for of` with es5 compliant iteration using `for`.
    //    Basically, take:
    //
    //    ```js
    //    for (i of a.entries())
    //      if (!b.has(i[0])) return false;
    //    ```
    //
    //    ... and convert to:
    //
    //    ```js
    //    it = a.entries();
    //    while (!(i = it.next()).done)
    //      if (!b.has(i.value[0])) return false;
    //    ```
    //
    //    **Note**: `i` access switches to `i.value`.


    var it;

    if (hasMap && a instanceof Map && b instanceof Map) {
      if (a.size !== b.size) return false;
      it = a.entries();

      while (!(i = it.next()).done) {
        if (!b.has(i.value[0])) return false;
      }

      it = a.entries();

      while (!(i = it.next()).done) {
        if (!equal(i.value[1], b.get(i.value[0]))) return false;
      }

      return true;
    }

    if (hasSet && a instanceof Set && b instanceof Set) {
      if (a.size !== b.size) return false;
      it = a.entries();

      while (!(i = it.next()).done) {
        if (!b.has(i.value[0])) return false;
      }

      return true;
    } // END: Modifications


    if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {
      length = a.length;
      if (length != b.length) return false;

      for (i = length; i-- !== 0;) {
        if (a[i] !== b[i]) return false;
      }

      return true;
    }

    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;
    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();
    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();
    keys = Object.keys(a);
    length = keys.length;
    if (length !== Object.keys(b).length) return false;

    for (i = length; i-- !== 0;) {
      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;
    } // END: fast-deep-equal
    // START: react-fast-compare
    // custom handling for DOM elements


    if (hasElementType && a instanceof Element) return false; // custom handling for React/Preact

    for (i = length; i-- !== 0;) {
      if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) {
        // React-specific: avoid traversing React elements' _owner
        // Preact-specific: avoid traversing Preact elements' __v and __o
        //    __v = $_original / $_vnode
        //    __o = $_owner
        // These properties contain circular references and are not needed when
        // comparing the actual elements (and not their owners)
        // .$$typeof and ._store on just reasonable markers of elements
        continue;
      } // all other properties should be traversed as usual


      if (!equal(a[keys[i]], b[keys[i]])) return false;
    } // END: react-fast-compare
    // START: fast-deep-equal


    return true;
  }

  return a !== a && b !== b;
} // end fast-deep-equal


module.exports = function isEqual(a, b) {
  try {
    return equal(a, b);
  } catch (error) {
    if ((error.message || '').match(/stack|recursion/i)) {
      // warn on circular references, don't crash
      // browsers give this different errors name and messages:
      // chrome/safari: "RangeError", "Maximum call stack size exceeded"
      // firefox: "InternalError", too much recursion"
      // edge: "Error", "Out of stack space"
      console.warn('react-fast-compare cannot handle circular refs');
      return false;
    } // some other error. we should definitely know about these


    throw error;
  }
};

/***/ }),

/***/ "2LOZ":
/***/ (function(module, exports, __webpack_require__) {

// check on default Array iterator
var Iterators = __webpack_require__("Ibj2");
var ITERATOR = __webpack_require__("9dxi")('iterator');
var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};


/***/ }),

/***/ "2Tod":
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-object-getownpropertydescriptors
var $export = __webpack_require__("X6VK");
var ownKeys = __webpack_require__("j/vf");
var toIObject = __webpack_require__("ml72");
var gOPD = __webpack_require__("1Tj+");
var createProperty = __webpack_require__("CIiV");

$export($export.S, 'Object', {
  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
    var O = toIObject(object);
    var getDesc = gOPD.f;
    var keys = ownKeys(O);
    var result = {};
    var i = 0;
    var key, desc;
    while (keys.length > i) {
      desc = getDesc(O, key = keys[i++]);
      if (desc !== undefined) createProperty(result, key, desc);
    }
    return result;
  }
});


/***/ }),

/***/ "2UZ+":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
var $export = __webpack_require__("X6VK");
var $find = __webpack_require__("1wfo")(6);
var KEY = 'findIndex';
var forced = true;
// Shouldn't skip holes
if (KEY in []) Array(1)[KEY](function () { forced = false; });
$export($export.P + $export.F * forced, 'Array', {
  findIndex: function findIndex(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
__webpack_require__("OfmW")(KEY);


/***/ }),

/***/ "2agF":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // Dependencies

__webpack_require__("V7cS");

__webpack_require__("+3V6");

var protocols = __webpack_require__("30gj");
/**
 * isSsh
 * Checks if an input value is a ssh url or not.
 *
 * @name isSsh
 * @function
 * @param {String|Array} input The input url or an array of protocols.
 * @return {Boolean} `true` if the input is a ssh url, `false` otherwise.
 */


function isSsh(input) {
  if (Array.isArray(input)) {
    return input.indexOf("ssh") !== -1 || input.indexOf("rsync") !== -1;
  }

  if (typeof input !== "string") {
    return false;
  }

  var prots = protocols(input);
  input = input.substring(input.indexOf("://") + 3);

  if (isSsh(prots)) {
    return true;
  } // TODO This probably could be improved :)


  return input.indexOf("@") < input.indexOf(":");
}

module.exports = isSsh;

/***/ }),

/***/ "2b4w":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return useControlledState; });
/* harmony import */ var core_js_modules_es6_array_is_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("+3V6");
/* harmony import */ var core_js_modules_es6_array_is_array__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_is_array__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("W1QL");
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("+jjx");
/* harmony import */ var core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("ABKx");
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es6_string_iterator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("lQyR");
/* harmony import */ var core_js_modules_es6_string_iterator__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_string_iterator__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es6_array_from__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("YhIr");
/* harmony import */ var core_js_modules_es6_array_from__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_from__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("GkPX");
/* harmony import */ var core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("4aJ6");
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("M/4x");
/* harmony import */ var core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("t91x");
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("mXGw");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_10__);











function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

function _iterableToArrayLimit(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}


function useControlledState(defaultStateValue, option) {
  var _ref = option || {},
      defaultValue = _ref.defaultValue,
      value = _ref.value,
      onChange = _ref.onChange,
      postState = _ref.postState;

  var _React$useState = react__WEBPACK_IMPORTED_MODULE_10__["useState"](function () {
    if (value !== undefined) {
      return value;
    }

    if (defaultValue !== undefined) {
      return typeof defaultValue === 'function' ? defaultValue() : defaultValue;
    }

    return typeof defaultStateValue === 'function' ? defaultStateValue() : defaultStateValue;
  }),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      innerValue = _React$useState2[0],
      setInnerValue = _React$useState2[1];

  var mergedValue = value !== undefined ? value : innerValue;

  if (postState) {
    mergedValue = postState(mergedValue);
  }

  function triggerChange(newValue) {
    setInnerValue(newValue);

    if (mergedValue !== newValue && onChange) {
      onChange(newValue, mergedValue);
    }
  } // Effect of reset value to `undefined`


  var firstRenderRef = react__WEBPACK_IMPORTED_MODULE_10__["useRef"](true);
  react__WEBPACK_IMPORTED_MODULE_10__["useEffect"](function () {
    if (firstRenderRef.current) {
      firstRenderRef.current = false;
      return;
    }

    if (value === undefined) {
      setInnerValue(value);
    }
  }, [value]);
  return [mergedValue, triggerChange];
}

/***/ }),

/***/ "2jw+":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "2y5g":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("9ovy");

__webpack_require__("V7cS");

// CodeMirror, copyright (c) by Marijn Haverbeke and others
// Distributed under an MIT license: https://codemirror.net/LICENSE
(function (mod) {
  if (true) // CommonJS
    mod(__webpack_require__("Dln1"));else {}
})(function (CodeMirror) {
  "use strict";

  CodeMirror.multiplexingMode = function (outer
  /*, others */
  ) {
    // Others should be {open, close, mode [, delimStyle] [, innerStyle]} objects
    var others = Array.prototype.slice.call(arguments, 1);

    function indexOf(string, pattern, from, returnEnd) {
      if (typeof pattern == "string") {
        var found = string.indexOf(pattern, from);
        return returnEnd && found > -1 ? found + pattern.length : found;
      }

      var m = pattern.exec(from ? string.slice(from) : string);
      return m ? m.index + from + (returnEnd ? m[0].length : 0) : -1;
    }

    return {
      startState: function startState() {
        return {
          outer: CodeMirror.startState(outer),
          innerActive: null,
          inner: null
        };
      },
      copyState: function copyState(state) {
        return {
          outer: CodeMirror.copyState(outer, state.outer),
          innerActive: state.innerActive,
          inner: state.innerActive && CodeMirror.copyState(state.innerActive.mode, state.inner)
        };
      },
      token: function token(stream, state) {
        if (!state.innerActive) {
          var cutOff = Infinity,
              oldContent = stream.string;

          for (var i = 0; i < others.length; ++i) {
            var other = others[i];
            var found = indexOf(oldContent, other.open, stream.pos);

            if (found == stream.pos) {
              if (!other.parseDelimiters) stream.match(other.open);
              state.innerActive = other; // Get the outer indent, making sure to handle CodeMirror.Pass

              var outerIndent = 0;

              if (outer.indent) {
                var possibleOuterIndent = outer.indent(state.outer, "", "");
                if (possibleOuterIndent !== CodeMirror.Pass) outerIndent = possibleOuterIndent;
              }

              state.inner = CodeMirror.startState(other.mode, outerIndent);
              return other.delimStyle && other.delimStyle + " " + other.delimStyle + "-open";
            } else if (found != -1 && found < cutOff) {
              cutOff = found;
            }
          }

          if (cutOff != Infinity) stream.string = oldContent.slice(0, cutOff);
          var outerToken = outer.token(stream, state.outer);
          if (cutOff != Infinity) stream.string = oldContent;
          return outerToken;
        } else {
          var curInner = state.innerActive,
              oldContent = stream.string;

          if (!curInner.close && stream.sol()) {
            state.innerActive = state.inner = null;
            return this.token(stream, state);
          }

          var found = curInner.close ? indexOf(oldContent, curInner.close, stream.pos, curInner.parseDelimiters) : -1;

          if (found == stream.pos && !curInner.parseDelimiters) {
            stream.match(curInner.close);
            state.innerActive = state.inner = null;
            return curInner.delimStyle && curInner.delimStyle + " " + curInner.delimStyle + "-close";
          }

          if (found > -1) stream.string = oldContent.slice(0, found);
          var innerToken = curInner.mode.token(stream, state.inner);
          if (found > -1) stream.string = oldContent;
          if (found == stream.pos && curInner.parseDelimiters) state.innerActive = state.inner = null;

          if (curInner.innerStyle) {
            if (innerToken) innerToken = innerToken + " " + curInner.innerStyle;else innerToken = curInner.innerStyle;
          }

          return innerToken;
        }
      },
      indent: function indent(state, textAfter, line) {
        var mode = state.innerActive ? state.innerActive.mode : outer;
        if (!mode.indent) return CodeMirror.Pass;
        return mode.indent(state.innerActive ? state.inner : state.outer, textAfter, line);
      },
      blankLine: function blankLine(state) {
        var mode = state.innerActive ? state.innerActive.mode : outer;

        if (mode.blankLine) {
          mode.blankLine(state.innerActive ? state.inner : state.outer);
        }

        if (!state.innerActive) {
          for (var i = 0; i < others.length; ++i) {
            var other = others[i];

            if (other.open === "\n") {
              state.innerActive = other;
              state.inner = CodeMirror.startState(other.mode, mode.indent ? mode.indent(state.outer, "", "") : 0);
            }
          }
        } else if (state.innerActive.close === "\n") {
          state.innerActive = state.inner = null;
        }
      },
      electricChars: outer.electricChars,
      innerMode: function innerMode(state) {
        return state.inner ? {
          state: state.inner,
          mode: state.innerActive.mode
        } : {
          state: state.outer,
          mode: outer
        };
      }
    };
  };
});

/***/ }),

/***/ "30gj":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * protocols
 * Returns the protocols of an input url.
 *
 * @name protocols
 * @function
 * @param {String} input The input url.
 * @param {Boolean|Number} first If `true`, the first protocol will be returned. If number, it will represent the zero-based index of the protocols array.
 * @return {Array|String} The array of protocols or the specified protocol.
 */

__webpack_require__("asZ9");

__webpack_require__("9p7t");

__webpack_require__("V7cS");

module.exports = function protocols(input, first) {
  if (first === true) {
    first = 0;
  }

  var index = input.indexOf("://"),
      splits = input.substring(0, index).split("+").filter(Boolean);

  if (typeof first === "number") {
    return splits[first];
  }

  return splits;
};

/***/ }),

/***/ "3AxU":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------

/*~
 * stability: stable
 * authors:
 *   - Quildreen Motta
 *
 * complexity: O(n), n is the number of own enumerable properties.
 * type: |
 *   (Object 'a, ('a) => 'b) => Object 'b
 */

__webpack_require__("W1QL");

__webpack_require__("K/PF");

__webpack_require__("t91x");

__webpack_require__("75LO");

var mapValues = function mapValues(object, transformation) {
  var keys = Object.keys(object);
  var result = {};

  for (var i = 0; i < keys.length; ++i) {
    var key = keys[i];
    result[key] = transformation(object[key]);
  }

  return result;
}; // --[ Convenience ]---------------------------------------------------

/*~
 * stability: stable
 * authors:
 *   - Quildreen Motta
 * 
 * complexity: O(n), n is the number of own enumerable properties.
 * type: |
 *   (Object 'a) . (('a) => 'b) => Object 'b
 */


mapValues.infix = function (transformation) {
  return mapValues(this, transformation);
}; // --[ Exports ]-------------------------------------------------------


module.exports = mapValues;

/***/ }),

/***/ "3D/W":
/***/ (function(module, exports, __webpack_require__) {

var _arity = __webpack_require__("r/sL");

var _curry1 = __webpack_require__("AN6r");

var _curry2 = __webpack_require__("OFPg");

var _curryN = __webpack_require__("ZWs+");
/**
 * Returns a curried equivalent of the provided function, with the specified
 * arity. The curried function has two unusual capabilities. First, its
 * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the
 * following are equivalent:
 *
 *   - `g(1)(2)(3)`
 *   - `g(1)(2, 3)`
 *   - `g(1, 2)(3)`
 *   - `g(1, 2, 3)`
 *
 * Secondly, the special placeholder value [`R.__`](#__) may be used to specify
 * "gaps", allowing partial application of any combination of arguments,
 * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),
 * the following are equivalent:
 *
 *   - `g(1, 2, 3)`
 *   - `g(_, 2, 3)(1)`
 *   - `g(_, _, 3)(1)(2)`
 *   - `g(_, _, 3)(1, 2)`
 *   - `g(_, 2)(1)(3)`
 *   - `g(_, 2)(1, 3)`
 *   - `g(_, 2)(_, 3)(1)`
 *
 * @func
 * @memberOf R
 * @since v0.5.0
 * @category Function
 * @sig Number -> (* -> a) -> (* -> a)
 * @param {Number} length The arity for the returned function.
 * @param {Function} fn The function to curry.
 * @return {Function} A new, curried function.
 * @see R.curry
 * @example
 *
 *      var sumArgs = (...args) => R.sum(args);
 *
 *      var curriedAddFourNumbers = R.curryN(4, sumArgs);
 *      var f = curriedAddFourNumbers(1, 2);
 *      var g = f(3);
 *      g(4); //=> 10
 */


module.exports = _curry2(function curryN(length, fn) {
  if (length === 1) {
    return _curry1(fn);
  }

  return _arity(length, _curryN(length, [], fn));
});

/***/ }),

/***/ "3DBk":
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-object-values-entries
var $export = __webpack_require__("X6VK");
var $values = __webpack_require__("pGW6")(false);

$export($export.S, 'Object', {
  values: function values(it) {
    return $values(it);
  }
});


/***/ }),

/***/ "3PM6":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------

var _require = __webpack_require__("mthV"),
    Success = _require.Success,
    Failure = _require.Failure;
/*~
 * stability: stable
 * authors:
 *   - "@boris-marinov"
 * 
 * type: |
 *   forall a, b:
 *     (Maybe a, b) => Validation b a
 */


var maybeToValidation = function maybeToValidation(aMaybe, failureValue) {
  return aMaybe.matchWith({
    Nothing: function Nothing() {
      return Failure(failureValue);
    },
    Just: function Just(_ref) {
      var value = _ref.value;
      return Success(value);
    }
  });
};

module.exports = maybeToValidation;

/***/ }),

/***/ "3Q0B":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("V7cS");

var containers = []; // will store container HTMLElement references

var styleElements = []; // will store {prepend: HTMLElement, append: HTMLElement}

var usage = 'insert-css: You need to provide a CSS string. Usage: insertCss(cssString[, options]).';

function insertCss(css, options) {
  options = options || {};

  if (css === undefined) {
    throw new Error(usage);
  }

  var position = options.prepend === true ? 'prepend' : 'append';
  var container = options.container !== undefined ? options.container : document.querySelector('head');
  var containerId = containers.indexOf(container); // first time we see this container, create the necessary entries

  if (containerId === -1) {
    containerId = containers.push(container) - 1;
    styleElements[containerId] = {};
  } // try to get the correponding container + position styleElement, create it otherwise


  var styleElement;

  if (styleElements[containerId] !== undefined && styleElements[containerId][position] !== undefined) {
    styleElement = styleElements[containerId][position];
  } else {
    styleElement = styleElements[containerId][position] = createStyleElement();

    if (position === 'prepend') {
      container.insertBefore(styleElement, container.childNodes[0]);
    } else {
      container.appendChild(styleElement);
    }
  } // strip potential UTF-8 BOM if css was read from a file


  if (css.charCodeAt(0) === 0xFEFF) {
    css = css.substr(1, css.length);
  } // actually add the stylesheet


  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText += css;
  } else {
    styleElement.textContent += css;
  }

  return styleElement;
}

;

function createStyleElement() {
  var styleElement = document.createElement('style');
  styleElement.setAttribute('type', 'text/css');
  return styleElement;
}

module.exports = insertCss;
module.exports.insertCss = insertCss;

/***/ }),

/***/ "3mMe":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return getPixelRatio; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return distance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return inBox; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return intersectRect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return mergeRegion; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return isSamePoint; });
/* harmony import */ var _antv_util_lib_is_nil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("SS24");
/* harmony import */ var _antv_util_lib_is_nil__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_antv_util_lib_is_nil__WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (default from non-harmony) */ __webpack_require__.d(__webpack_exports__, "i", function() { return _antv_util_lib_is_nil__WEBPACK_IMPORTED_MODULE_0___default.a; });
/* harmony import */ var _antv_util_lib_is_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("bLny");
/* harmony import */ var _antv_util_lib_is_string__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_antv_util_lib_is_string__WEBPACK_IMPORTED_MODULE_1__);
/* harmony reexport (default from non-harmony) */ __webpack_require__.d(__webpack_exports__, "k", function() { return _antv_util_lib_is_string__WEBPACK_IMPORTED_MODULE_1___default.a; });
/* harmony import */ var _antv_util_lib_is_function__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("joUm");
/* harmony import */ var _antv_util_lib_is_function__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_antv_util_lib_is_function__WEBPACK_IMPORTED_MODULE_2__);
/* harmony reexport (default from non-harmony) */ __webpack_require__.d(__webpack_exports__, "h", function() { return _antv_util_lib_is_function__WEBPACK_IMPORTED_MODULE_2___default.a; });
/* harmony import */ var _antv_util_lib_is_array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("QAqn");
/* harmony import */ var _antv_util_lib_is_array__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_antv_util_lib_is_array__WEBPACK_IMPORTED_MODULE_3__);
/* harmony reexport (default from non-harmony) */ __webpack_require__.d(__webpack_exports__, "g", function() { return _antv_util_lib_is_array__WEBPACK_IMPORTED_MODULE_3___default.a; });
/* harmony import */ var _antv_util_lib_each__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("mU+h");
/* harmony import */ var _antv_util_lib_each__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_antv_util_lib_each__WEBPACK_IMPORTED_MODULE_4__);
/* harmony reexport (default from non-harmony) */ __webpack_require__.d(__webpack_exports__, "c", function() { return _antv_util_lib_each__WEBPACK_IMPORTED_MODULE_4___default.a; });
/* harmony import */ var _antv_util_lib_to_radian__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("Ce2C");
/* harmony import */ var _antv_util_lib_to_radian__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_antv_util_lib_to_radian__WEBPACK_IMPORTED_MODULE_5__);
/* harmony reexport (default from non-harmony) */ __webpack_require__.d(__webpack_exports__, "o", function() { return _antv_util_lib_to_radian__WEBPACK_IMPORTED_MODULE_5___default.a; });
/* harmony import */ var _antv_util_lib_mod__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("QQd8");
/* harmony import */ var _antv_util_lib_mod__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_antv_util_lib_mod__WEBPACK_IMPORTED_MODULE_6__);
/* harmony reexport (default from non-harmony) */ __webpack_require__.d(__webpack_exports__, "m", function() { return _antv_util_lib_mod__WEBPACK_IMPORTED_MODULE_6___default.a; });
/* harmony import */ var _antv_util_lib_is_number_equal__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("OQzY");
/* harmony import */ var _antv_util_lib_is_number_equal__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_antv_util_lib_is_number_equal__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _antv_util_lib_request_animation_frame__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("wuHH");
/* harmony import */ var _antv_util_lib_request_animation_frame__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_antv_util_lib_request_animation_frame__WEBPACK_IMPORTED_MODULE_8__);
/* harmony reexport (default from non-harmony) */ __webpack_require__.d(__webpack_exports__, "n", function() { return _antv_util_lib_request_animation_frame__WEBPACK_IMPORTED_MODULE_8___default.a; });
/* harmony import */ var _antv_util_lib_clear_animation_frame__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("KaQE");
/* harmony import */ var _antv_util_lib_clear_animation_frame__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_antv_util_lib_clear_animation_frame__WEBPACK_IMPORTED_MODULE_9__);
/* harmony reexport (default from non-harmony) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _antv_util_lib_clear_animation_frame__WEBPACK_IMPORTED_MODULE_9___default.a; });
function getPixelRatio() {
  return window ? window.devicePixelRatio : 1;
}
/**
 * 两点之间的距离
 * @param {number} x1 起始点 x
 * @param {number} y1 起始点 y
 * @param {number} x2 结束点 x
 * @param {number} y2 结束点 y
 */

function distance(x1, y1, x2, y2) {
  var dx = x1 - x2;
  var dy = y1 - y2;
  return Math.sqrt(dx * dx + dy * dy);
}
/**
 * 是否在包围盒内
 * @param {number} minX   包围盒开始的点 x
 * @param {number} minY   包围盒开始的点 y
 * @param {number} width  宽度
 * @param {number} height 高度
 * @param {[type]} x      检测点的 x
 * @param {[type]} y      监测点的 y
 */

function inBox(minX, minY, width, height, x, y) {
  return x >= minX && x <= minX + width && y >= minY && y <= minY + height;
}
function intersectRect(box1, box2) {
  return !(box2.minX > box1.maxX || box2.maxX < box1.minX || box2.minY > box1.maxY || box2.maxY < box1.minY);
} // 合并两个区域

function mergeRegion(region1, region2) {
  if (!region1 || !region2) {
    return region1 || region2;
  }

  return {
    minX: Math.min(region1.minX, region2.minX),
    minY: Math.min(region1.minY, region2.minY),
    maxX: Math.max(region1.maxX, region2.maxX),
    maxY: Math.max(region1.maxY, region2.maxY)
  };
}
/**
 * 判断两个点是否重合，点坐标的格式为 [x, y]
 * @param {Array} point1 第一个点
 * @param {Array} point2 第二个点
 */

function isSamePoint(point1, point2) {
  return point1[0] === point2[0] && point1[1] === point2[1];
}











/***/ }),

/***/ "3vGZ":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("mXGw");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

var LocaleContext = /*#__PURE__*/Object(react__WEBPACK_IMPORTED_MODULE_0__["createContext"])(undefined);
/* harmony default export */ __webpack_exports__["a"] = (LocaleContext);

/***/ }),

/***/ "3y5y":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__("X6VK");
var $reduce = __webpack_require__("9Bb+");

$export($export.P + $export.F * !__webpack_require__("/6rt")([].reduce, true), 'Array', {
  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
  reduce: function reduce(callbackfn /* , initialValue */) {
    return $reduce(this, callbackfn, arguments.length, arguments[1], false);
  }
});


/***/ }),

/***/ "3yYG":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("U8p0");

__webpack_require__("7lGJ");

__webpack_require__("V7cS");

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _ = __webpack_require__("NFQX");

var constant_1 = __webpack_require__("Cwc3");

var Adjust =
/** @class */
function () {
  function Adjust(cfg) {
    var xField = cfg.xField,
        yField = cfg.yField,
        _a = cfg.adjustNames,
        adjustNames = _a === void 0 ? ['x', 'y'] : _a;
    this.adjustNames = adjustNames;
    this.xField = xField;
    this.yField = yField;
  }
  /**
   * 查看维度是否是 adjust 字段
   * @param dim
   */


  Adjust.prototype.isAdjust = function (dim) {
    return this.adjustNames.indexOf(dim) >= 0;
  };

  Adjust.prototype.getAdjustRange = function (dim, dimValue, values) {
    var yField = this.yField;
    var index = values.indexOf(dimValue);
    var length = values.length;
    var pre;
    var next; // 没有 y 字段，但是需要根据 y 调整

    if (!yField && this.isAdjust('y')) {
      pre = 0;
      next = 1;
    } else if (length > 1) {
      // 如果以其开头，则取之，否则取他前面一个
      pre = values[index === 0 ? 0 : index - 1]; // 如果以其结尾，则取之，否则取他后面一个

      next = values[index === length - 1 ? length - 1 : index + 1];

      if (index !== 0) {
        pre += (dimValue - pre) / 2;
      } else {
        pre -= (next - dimValue) / 2;
      }

      if (index !== length - 1) {
        next -= (next - dimValue) / 2;
      } else {
        next += (dimValue - values[length - 2]) / 2;
      }
    } else {
      pre = dimValue === 0 ? 0 : dimValue - 0.5;
      next = dimValue === 0 ? 1 : dimValue + 0.5;
    }

    return {
      pre: pre,
      next: next
    };
  };

  Adjust.prototype.adjustData = function (groupedDataArray, mergedData) {
    var _this = this; // 所有调整维度的值数组


    var dimValuesMap = this.getDimValues(mergedData); // 按照每一个分组来进行调整

    _.each(groupedDataArray, function (dataArray, index) {
      // 遍历所有数据集合
      // 每个分组中，分别按照不同的 dim 进行调整
      _.each(dimValuesMap, function (values, dim) {
        // 根据不同的度量分别调整位置
        _this.adjustDim(dim, values, dataArray, index);
      });
    });
  };
  /**
   * 对数据进行分组adjustData
   * @param data 数据
   * @param dim 分组的字段
   * @return 分组结果
   */


  Adjust.prototype.groupData = function (data, dim) {
    // 补齐数据空数据为默认值
    _.each(data, function (record) {
      if (record[dim] === undefined) {
        record[dim] = constant_1.DEFAULT_Y;
      }
    }); // 按照 dim 维度分组


    return _.groupBy(data, dim);
  };
  /** @override */


  Adjust.prototype.adjustDim = function (dim, values, data, index) {};
  /**
   * 获取可调整度量对应的值
   * @param mergedData 数据
   * @return 值的映射
   */


  Adjust.prototype.getDimValues = function (mergedData) {
    var _a = this,
        xField = _a.xField,
        yField = _a.yField;

    var dimValuesMap = {}; // 所有的维度

    var dims = [];

    if (xField && this.isAdjust('x')) {
      dims.push(xField);
    }

    if (yField && this.isAdjust('y')) {
      dims.push(yField);
    }

    dims.forEach(function (dim) {
      // 在每个维度上，所有的值
      dimValuesMap[dim] = _.valuesOfKey(mergedData, dim).sort(function (v1, v2) {
        return v1 - v2;
      });
    }); // 只有一维的情况下，同时调整 y，赋予默认值

    if (!yField && this.isAdjust('y')) {
      var dim = 'y';
      dimValuesMap[dim] = [constant_1.DEFAULT_Y, 1]; // 默认分布在 y 轴的 0 与 1 之间
    }

    return dimValuesMap;
  };

  return Adjust;
}();

exports["default"] = Adjust;

/***/ }),

/***/ "3ydu":
/***/ (function(module, exports, __webpack_require__) {

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = __webpack_require__("Bsg+");
var anObject = __webpack_require__("PAFS");
var check = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = __webpack_require__("9liC")(Function.call, __webpack_require__("1Tj+").f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};


/***/ }),

/***/ "41F1":
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),

/***/ "4Alm":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return addEventListenerWrap; });
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("xARA");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_0__);

function addEventListenerWrap(target, eventType, cb, option) {
  /* eslint camelcase: 2 */
  var callback = react_dom__WEBPACK_IMPORTED_MODULE_0___default.a.unstable_batchedUpdates ? function run(e) {
    react_dom__WEBPACK_IMPORTED_MODULE_0___default.a.unstable_batchedUpdates(cb, e);
  } : cb;

  if (target.addEventListener) {
    target.addEventListener(eventType, callback, option);
  }

  return {
    remove: function remove() {
      if (target.removeEventListener) {
        target.removeEventListener(eventType, callback);
      }
    }
  };
}

/***/ }),

/***/ "4IO6":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ../node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__("bb6g");

// EXTERNAL MODULE: ../node_modules/@antv/g-base/esm/index.js + 39 modules
var esm = __webpack_require__("AKAt");

// EXTERNAL MODULE: ../node_modules/@antv/g-base/lib/util/util.js
var util = __webpack_require__("GgH8");

// EXTERNAL MODULE: ../node_modules/@antv/g-base/lib/util/matrix.js
var util_matrix = __webpack_require__("E07J");

// CONCATENATED MODULE: ../node_modules/@antv/g-canvas/esm/util/hit.js



function invertFromMatrix(v, matrix) {
  if (matrix) {
    var invertMatrix = Object(util_matrix["invert"])(matrix);
    return Object(util_matrix["multiplyVec2"])(invertMatrix, v);
  }

  return v;
}

function getRefXY(element, x, y) {
  // @ts-ignore
  var totalMatrix = element.getTotalMatrix();

  if (totalMatrix) {
    var _a = invertFromMatrix([x, y, 1], totalMatrix),
        refX = _a[0],
        refY = _a[1];

    return [refX, refY];
  }

  return [x, y];
} // 拾取前的检测，只有通过检测才能继续拾取


function preTest(element, x, y) {
  // @ts-ignore
  if (element.isCanvas && element.isCanvas()) {
    return true;
  } // 不允许被拾取，则返回 null
  // @ts-ignore


  if (!Object(util["isAllowCapture"])(element) && element.cfg.isInView === false) {
    return false;
  }

  if (element.cfg.clipShape) {
    // 如果存在 clip
    var _a = getRefXY(element, x, y),
        refX = _a[0],
        refY = _a[1];

    if (element.isClipped(refX, refY)) {
      return false;
    }
  } // @ts-ignore ，这个地方调用过于频繁


  var bbox = element.cfg.cacheCanvasBBox;

  if (!bbox) {
    bbox = element.getCanvasBBox();
  }

  if (!(x >= bbox.minX && x <= bbox.maxX && y >= bbox.minY && y <= bbox.maxY)) {
    return false;
  }

  return true;
}

function getShape(container, x, y) {
  // 没有通过检测，则返回 null
  if (!preTest(container, x, y)) {
    return null;
  }

  var shape = null;
  var children = container.getChildren();
  var count = children.length;

  for (var i = count - 1; i >= 0; i--) {
    var child = children[i];

    if (child.isGroup()) {
      shape = getShape(child, x, y);
    } else if (preTest(child, x, y)) {
      var curShape = child;

      var _a = getRefXY(child, x, y),
          refX = _a[0],
          refY = _a[1]; // @ts-ignore


      if (curShape.isInShape(refX, refY)) {
        shape = child;
      }
    }

    if (shape) {
      break;
    }
  }

  return shape;
}
// EXTERNAL MODULE: ../node_modules/@antv/g-canvas/esm/shape/index.js + 19 modules
var shape = __webpack_require__("FjZ0");

// EXTERNAL MODULE: ../node_modules/@antv/g-canvas/esm/group.js
var group = __webpack_require__("MApM");

// EXTERNAL MODULE: ../node_modules/@antv/g-canvas/esm/util/draw.js + 1 modules
var draw = __webpack_require__("5nqB");

// EXTERNAL MODULE: ../node_modules/@antv/g-canvas/esm/util/util.js
var util_util = __webpack_require__("3mMe");

// CONCATENATED MODULE: ../node_modules/@antv/g-canvas/esm/canvas.js








var canvas_Canvas =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Canvas, _super);

  function Canvas() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Canvas.prototype.getDefaultCfg = function () {
    var cfg = _super.prototype.getDefaultCfg.call(this); // 设置渲染引擎为 canvas，只读属性


    cfg['renderer'] = 'canvas'; // 是否自动绘制，不需要用户调用 draw 方法

    cfg['autoDraw'] = true; // 是否允许局部刷新图表

    cfg['localRefresh'] = true;
    cfg['refreshElements'] = []; // 是否在视图内自动裁剪

    cfg['clipView'] = true;
    cfg['quickHit'] = false;
    return cfg;
  };
  /**
   * 一些方法调用会引起画布变化
   * @param {ChangeType} changeType 改变的类型
   */


  Canvas.prototype.onCanvasChange = function (changeType) {
    /**
     * 触发画布更新的三种 changeType
     * 1. attr: 修改画布的绘图属性
     * 2. sort: 画布排序，图形的层次会发生变化
     * 3. changeSize: 改变画布大小
     */
    if (changeType === 'attr' || changeType === 'sort' || changeType === 'changeSize') {
      this.set('refreshElements', [this]);
      this.draw();
    }
  };

  Canvas.prototype.getShapeBase = function () {
    return shape;
  };

  Canvas.prototype.getGroupBase = function () {
    return group["a" /* default */];
  };
  /**
   * 获取屏幕像素比
   */


  Canvas.prototype.getPixelRatio = function () {
    var pixelRatio = this.get('pixelRatio') || Object(util_util["d" /* getPixelRatio */])(); // 不足 1 的取 1，超出 1 的取整

    return pixelRatio >= 1 ? Math.ceil(pixelRatio) : 1;
  };

  Canvas.prototype.getViewRange = function () {
    return {
      minX: 0,
      minY: 0,
      maxX: this.get('width'),
      maxY: this.get('height')
    };
  }; // 复写基类的方法生成标签


  Canvas.prototype.createDom = function () {
    var element = document.createElement('canvas');
    var context = element.getContext('2d'); // 缓存 context 对象

    this.set('context', context);
    return element;
  };

  Canvas.prototype.setDOMSize = function (width, height) {
    _super.prototype.setDOMSize.call(this, width, height);

    var context = this.get('context');
    var el = this.get('el');
    var pixelRatio = this.getPixelRatio();
    el.width = pixelRatio * width;
    el.height = pixelRatio * height; // 设置 canvas 元素的宽度和高度，会重置缩放，因此 context.scale 需要在每次设置宽、高后调用

    if (pixelRatio > 1) {
      context.scale(pixelRatio, pixelRatio);
    }
  }; // 复写基类方法


  Canvas.prototype.clear = function () {
    _super.prototype.clear.call(this);

    this._clearFrame(); // 需要清理掉延迟绘制的帧


    var context = this.get('context');
    var element = this.get('el');
    context.clearRect(0, 0, element.width, element.height);
  };

  Canvas.prototype.getShape = function (x, y) {
    if (this.get('quickHit')) {
      return getShape(this, x, y);
    }

    return _super.prototype.getShape.call(this, x, y, null);
  }; // 对绘制区域边缘取整，避免浮点数问题


  Canvas.prototype._getRefreshRegion = function () {
    var elements = this.get('refreshElements');
    var viewRegion = this.getViewRange();
    var region; // 如果是当前画布整体发生了变化，则直接重绘整个画布

    if (elements.length && elements[0] === this) {
      region = viewRegion;
    } else {
      region = Object(draw["d" /* getMergedRegion */])(elements);

      if (region) {
        region.minX = Math.floor(region.minX);
        region.minY = Math.floor(region.minY);
        region.maxX = Math.ceil(region.maxX);
        region.maxY = Math.ceil(region.maxY);
        var clipView = this.get('clipView'); // 自动裁剪不在 view 内的区域

        if (clipView) {
          region = Object(draw["e" /* mergeView */])(region, viewRegion);
        }
      }
    }

    return region;
  };
  /**
   * 刷新图形元素，这里仅仅是放入队列，下次绘制时进行绘制
   * @param {IElement} element 图形元素
   */


  Canvas.prototype.refreshElement = function (element) {
    var refreshElements = this.get('refreshElements');
    refreshElements.push(element); // if (this.get('autoDraw')) {
    //   this._startDraw();
    // }
  }; // 清理还在进行的绘制


  Canvas.prototype._clearFrame = function () {
    var drawFrame = this.get('drawFrame');

    if (drawFrame) {
      // 如果全部渲染时，存在局部渲染，则抛弃掉局部渲染
      Object(util_util["a" /* clearAnimationFrame */])(drawFrame);
      this.set('drawFrame', null);
      this.set('refreshElements', []);
    }
  }; // 手工调用绘制接口


  Canvas.prototype.draw = function () {
    var drawFrame = this.get('drawFrame');

    if (this.get('autoDraw') && drawFrame) {
      return;
    }

    this._startDraw();
  }; // 绘制所有图形


  Canvas.prototype._drawAll = function () {
    var context = this.get('context');
    var element = this.get('el');
    var children = this.getChildren();
    context.clearRect(0, 0, element.width, element.height);
    Object(draw["a" /* applyAttrsToContext */])(context, this);
    Object(draw["b" /* drawChildren */])(context, children); // 对于 https://github.com/antvis/g/issues/422 的场景，全局渲染的模式下也会记录更新的元素队列，因此全局渲染完后也需要置空

    this.set('refreshElements', []);
  }; // 绘制局部


  Canvas.prototype._drawRegion = function () {
    var context = this.get('context');
    var refreshElements = this.get('refreshElements');
    var children = this.getChildren();

    var region = this._getRefreshRegion(); // 需要注意可能没有 region 的场景
    // 一般发生在设置了 localRefresh ,在没有图形发生变化的情况下，用户调用了 draw


    if (region) {
      // 清理指定区域
      context.clearRect(region.minX, region.minY, region.maxX - region.minX, region.maxY - region.minY); // 保存上下文，设置 clip

      context.save();
      context.beginPath();
      context.rect(region.minX, region.minY, region.maxX - region.minX, region.maxY - region.minY);
      context.clip();
      Object(draw["a" /* applyAttrsToContext */])(context, this); // 绘制子元素

      Object(draw["b" /* drawChildren */])(context, children, region);
      context.restore();
    }

    Object(util_util["c" /* each */])(refreshElements, function (element) {
      if (element.get('hasChanged')) {
        // 在视窗外的 Group 元素会加入到更新队列里，但实际却没有执行 draw() 逻辑，也就没有清除 hasChanged 标记
        // 即已经重绘完、但 hasChanged 标记没有清除的元素，需要统一清除掉。主要是 Group 存在问题，具体原因待排查
        element.set('hasChanged', false);
      }
    });
    this.set('refreshElements', []);
  }; // 触发绘制


  Canvas.prototype._startDraw = function () {
    var _this = this;

    var drawFrame = this.get('drawFrame');

    if (!drawFrame) {
      drawFrame = Object(util_util["n" /* requestAnimationFrame */])(function () {
        if (_this.get('localRefresh')) {
          _this._drawRegion();
        } else {
          _this._drawAll();
        }

        _this.set('drawFrame', null);
      });
      this.set('drawFrame', drawFrame);
    }
  };

  Canvas.prototype.skipDraw = function () {};

  return Canvas;
}(esm["a" /* AbstractCanvas */]);

/* harmony default export */ var canvas = __webpack_exports__["a"] = (canvas_Canvas);

/***/ }),

/***/ "4NbO":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // This icon file is generated automatically.

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var CheckCircleFilled = {
  "icon": {
    "tag": "svg",
    "attrs": {
      "viewBox": "64 64 896 896",
      "focusable": "false"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm193.5 301.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.5 12.7z"
      }
    }]
  },
  "name": "check-circle",
  "theme": "filled"
};
exports["default"] = CheckCircleFilled;

/***/ }),

/***/ "4SiD":
/***/ (function(module, exports, __webpack_require__) {

var nth = __webpack_require__("HCJm");
/**
 * Returns the first element of the given list or string. In some libraries
 * this function is named `first`.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig [a] -> a | Undefined
 * @sig String -> String
 * @param {Array|String} list
 * @return {*}
 * @see R.tail, R.init, R.last
 * @example
 *
 *      R.head(['fi', 'fo', 'fum']); //=> 'fi'
 *      R.head([]); //=> undefined
 *
 *      R.head('abc'); //=> 'a'
 *      R.head(''); //=> ''
 */


module.exports = nth(0);

/***/ }),

/***/ "4T8+":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

var _interopRequireDefault = __webpack_require__("63Ad");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setTwoToneColor = setTwoToneColor;
exports.getTwoToneColor = getTwoToneColor;

var _slicedToArray2 = _interopRequireDefault(__webpack_require__("nxTg"));

var _IconBase = _interopRequireDefault(__webpack_require__("SfRV"));

var _utils = __webpack_require__("OgXt");

function setTwoToneColor(twoToneColor) {
  var _normalizeTwoToneColo = (0, _utils.normalizeTwoToneColors)(twoToneColor),
      _normalizeTwoToneColo2 = (0, _slicedToArray2["default"])(_normalizeTwoToneColo, 2),
      primaryColor = _normalizeTwoToneColo2[0],
      secondaryColor = _normalizeTwoToneColo2[1];

  return _IconBase["default"].setTwoToneColors({
    primaryColor: primaryColor,
    secondaryColor: secondaryColor
  });
}

function getTwoToneColor() {
  var colors = _IconBase["default"].getTwoToneColors();

  if (!colors.calculated) {
    return colors.primaryColor;
  }

  return [colors.primaryColor, colors.secondaryColor];
}

/***/ }),

/***/ "4aJ6":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

__webpack_require__("iur1");
var anObject = __webpack_require__("PAFS");
var $flags = __webpack_require__("MBcE");
var DESCRIPTORS = __webpack_require__("GGqZ");
var TO_STRING = 'toString';
var $toString = /./[TO_STRING];

var define = function (fn) {
  __webpack_require__("sU/p")(RegExp.prototype, TO_STRING, fn, true);
};

// 21.2.5.14 RegExp.prototype.toString()
if (__webpack_require__("E7Vc")(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {
  define(function toString() {
    var R = anObject(this);
    return '/'.concat(R.source, '/',
      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
  });
// FF44- RegExp#toString has a wrong name
} else if ($toString.name != TO_STRING) {
  define(function toString() {
    return $toString.call(this);
  });
}


/***/ }),

/***/ "4dnM":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------

var deprecated = __webpack_require__("GFZo");

module.exports = function (methodName) {
  return function (result) {
    deprecated('Type.' + methodName + '() is being deprecated in favour of Type[\'fantasy-land/' + methodName + '\'](). \n    Your data structure is using the old-style fantasy-land methods,\n    and these won\'t be supported in Folktale 3');
    return result;
  };
};

/***/ }),

/***/ "5BMI":
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__("9liC");
var invoke = __webpack_require__("KFSm");
var html = __webpack_require__("CLuC");
var cel = __webpack_require__("mggL");
var global = __webpack_require__("P56o");
var process = global.process;
var setTask = global.setImmediate;
var clearTask = global.clearImmediate;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;
var run = function () {
  var id = +this;
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function (event) {
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!setTask || !clearTask) {
  setTask = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (__webpack_require__("n+VH")(process) == 'process') {
    defer = function (id) {
      process.nextTick(ctx(run, id, 1));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
    defer = function (id) {
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in cel('script')) {
    defer = function (id) {
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set: setTask,
  clear: clearTask
};


/***/ }),

/***/ "5ERL":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // This icon file is generated automatically.

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var DownOutlined = {
  "icon": {
    "tag": "svg",
    "attrs": {
      "viewBox": "64 64 896 896",
      "focusable": "false"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
      }
    }]
  },
  "name": "down",
  "theme": "outlined"
};
exports["default"] = DownOutlined;

/***/ }),

/***/ "5Fu2":
/***/ (function(module, exports, __webpack_require__) {

// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject = __webpack_require__("PAFS");
var aFunction = __webpack_require__("b8Rm");
var SPECIES = __webpack_require__("9dxi")('species');
module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};


/***/ }),

/***/ "5IsQ":
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
  throw new Error('setTimeout has not been defined');
}

function defaultClearTimeout() {
  throw new Error('clearTimeout has not been defined');
}

(function () {
  try {
    if (typeof setTimeout === 'function') {
      cachedSetTimeout = setTimeout;
    } else {
      cachedSetTimeout = defaultSetTimout;
    }
  } catch (e) {
    cachedSetTimeout = defaultSetTimout;
  }

  try {
    if (typeof clearTimeout === 'function') {
      cachedClearTimeout = clearTimeout;
    } else {
      cachedClearTimeout = defaultClearTimeout;
    }
  } catch (e) {
    cachedClearTimeout = defaultClearTimeout;
  }
})();

function runTimeout(fun) {
  if (cachedSetTimeout === setTimeout) {
    //normal enviroments in sane situations
    return setTimeout(fun, 0);
  } // if setTimeout wasn't available but was latter defined


  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
    cachedSetTimeout = setTimeout;
    return setTimeout(fun, 0);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedSetTimeout(fun, 0);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
      return cachedSetTimeout.call(null, fun, 0);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
      return cachedSetTimeout.call(this, fun, 0);
    }
  }
}

function runClearTimeout(marker) {
  if (cachedClearTimeout === clearTimeout) {
    //normal enviroments in sane situations
    return clearTimeout(marker);
  } // if clearTimeout wasn't available but was latter defined


  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
    cachedClearTimeout = clearTimeout;
    return clearTimeout(marker);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedClearTimeout(marker);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
      return cachedClearTimeout.call(null, marker);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
      // Some versions of I.E. have different rules for clearTimeout vs setTimeout
      return cachedClearTimeout.call(this, marker);
    }
  }
}

var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
  if (!draining || !currentQueue) {
    return;
  }

  draining = false;

  if (currentQueue.length) {
    queue = currentQueue.concat(queue);
  } else {
    queueIndex = -1;
  }

  if (queue.length) {
    drainQueue();
  }
}

function drainQueue() {
  if (draining) {
    return;
  }

  var timeout = runTimeout(cleanUpNextTick);
  draining = true;
  var len = queue.length;

  while (len) {
    currentQueue = queue;
    queue = [];

    while (++queueIndex < len) {
      if (currentQueue) {
        currentQueue[queueIndex].run();
      }
    }

    queueIndex = -1;
    len = queue.length;
  }

  currentQueue = null;
  draining = false;
  runClearTimeout(timeout);
}

process.nextTick = function (fun) {
  var args = new Array(arguments.length - 1);

  if (arguments.length > 1) {
    for (var i = 1; i < arguments.length; i++) {
      args[i - 1] = arguments[i];
    }
  }

  queue.push(new Item(fun, args));

  if (queue.length === 1 && !draining) {
    runTimeout(drainQueue);
  }
}; // v8 likes predictible objects


function Item(fun, array) {
  this.fun = fun;
  this.array = array;
}

Item.prototype.run = function () {
  this.fun.apply(null, this.array);
};

process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues

process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) {
  return [];
};

process.binding = function (name) {
  throw new Error('process.binding is not supported');
};

process.cwd = function () {
  return '/';
};

process.chdir = function (dir) {
  throw new Error('process.chdir is not supported');
};

process.umask = function () {
  return 0;
};

/***/ }),

/***/ "5LHb":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.useScrollRestoration = exports.ScrollContainer = exports.ScrollContext = void 0;

var _scrollHandler = __webpack_require__("czn3");

exports.ScrollContext = _scrollHandler.ScrollHandler;

var _scrollContainer = __webpack_require__("7UJ8");

exports.ScrollContainer = _scrollContainer.ScrollContainer;

var _useScrollRestoration = __webpack_require__("xvMO");

exports.useScrollRestoration = _useScrollRestoration.useScrollRestoration;

/***/ }),

/***/ "5MU4":
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__("Bsg+");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "5WRv":
/***/ (function(module, exports, __webpack_require__) {

var arrayWithoutHoles = __webpack_require__("iNmH");

var iterableToArray = __webpack_require__("Qatm");

var unsupportedIterableToArray = __webpack_require__("Zhxd");

var nonIterableSpread = __webpack_require__("kluZ");

function _toConsumableArray(arr) {
  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();
}

module.exports = _toConsumableArray;

/***/ }),

/***/ "5hJT":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.1 Object.assign(target, source)
var $export = __webpack_require__("X6VK");

$export($export.S + $export.F, 'Object', { assign: __webpack_require__("NR3o") });


/***/ }),

/***/ "5nqB":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ applyAttrsToContext; });
__webpack_require__.d(__webpack_exports__, "b", function() { return /* binding */ drawChildren; });
__webpack_require__.d(__webpack_exports__, "c", function() { return /* binding */ drawPath; });
__webpack_require__.d(__webpack_exports__, "f", function() { return /* binding */ refreshElement; });
__webpack_require__.d(__webpack_exports__, "d", function() { return /* binding */ getMergedRegion; });
__webpack_require__.d(__webpack_exports__, "e", function() { return /* binding */ mergeView; });

// UNUSED EXPORTS: getRefreshRegion

// EXTERNAL MODULE: ../node_modules/@antv/util/esm/index.js + 105 modules
var esm = __webpack_require__("NFQX");

// EXTERNAL MODULE: ../node_modules/@antv/g-canvas/esm/util/parse.js
var parse = __webpack_require__("KbVQ");

// EXTERNAL MODULE: ../node_modules/@antv/g-canvas/esm/util/util.js
var util = __webpack_require__("3mMe");

// CONCATENATED MODULE: ../node_modules/@antv/g-canvas/esm/util/arc-params.js
 // 向量长度

function vMag(v) {
  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);
} // u.v/|u||v|，计算夹角的余弦值


function vRatio(u, v) {
  // 当存在一个向量的长度为 0 时，夹角也为 0，即夹角的余弦值为 1
  return vMag(u) * vMag(v) ? (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v)) : 1;
} // 向量角度


function vAngle(u, v) {
  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));
} // A 0:rx 1:ry 2:x-axis-rotation 3:large-arc-flag 4:sweep-flag 5: x 6: y


function getArcParams(startPoint, params) {
  var rx = params[1];
  var ry = params[2];
  var xRotation = Object(util["m" /* mod */])(Object(util["o" /* toRadian */])(params[3]), Math.PI * 2);
  var arcFlag = params[4];
  var sweepFlag = params[5]; // 弧形起点坐标

  var x1 = startPoint[0];
  var y1 = startPoint[1]; // 弧形终点坐标

  var x2 = params[6];
  var y2 = params[7];
  var xp = Math.cos(xRotation) * (x1 - x2) / 2.0 + Math.sin(xRotation) * (y1 - y2) / 2.0;
  var yp = -1 * Math.sin(xRotation) * (x1 - x2) / 2.0 + Math.cos(xRotation) * (y1 - y2) / 2.0;
  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);

  if (lambda > 1) {
    rx *= Math.sqrt(lambda);
    ry *= Math.sqrt(lambda);
  }

  var diff = rx * rx * (yp * yp) + ry * ry * (xp * xp);
  var f = diff ? Math.sqrt((rx * rx * (ry * ry) - diff) / diff) : 1;

  if (arcFlag === sweepFlag) {
    f *= -1;
  }

  if (isNaN(f)) {
    f = 0;
  } // 旋转前的起点坐标，且当长半轴和短半轴的长度为 0 时，坐标按 (0, 0) 处理


  var cxp = ry ? f * rx * yp / ry : 0;
  var cyp = rx ? f * -ry * xp / rx : 0; // 椭圆圆心坐标

  var cx = (x1 + x2) / 2.0 + Math.cos(xRotation) * cxp - Math.sin(xRotation) * cyp;
  var cy = (y1 + y2) / 2.0 + Math.sin(xRotation) * cxp + Math.cos(xRotation) * cyp; // 起始点的单位向量

  var u = [(xp - cxp) / rx, (yp - cyp) / ry]; // 终止点的单位向量

  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry]; // 计算起始点和圆心的连线，与 x 轴正方向的夹角

  var theta = vAngle([1, 0], u); // 计算圆弧起始点和终止点与椭圆圆心连线的夹角

  var dTheta = vAngle(u, v);

  if (vRatio(u, v) <= -1) {
    dTheta = Math.PI;
  }

  if (vRatio(u, v) >= 1) {
    dTheta = 0;
  }

  if (sweepFlag === 0 && dTheta > 0) {
    dTheta = dTheta - 2 * Math.PI;
  }

  if (sweepFlag === 1 && dTheta < 0) {
    dTheta = dTheta + 2 * Math.PI;
  }

  return {
    cx: cx,
    cy: cy,
    // 弧形的起点和终点相同时，长轴和短轴的长度按 0 处理
    rx: Object(util["j" /* isSamePoint */])(startPoint, [x2, y2]) ? 0 : rx,
    ry: Object(util["j" /* isSamePoint */])(startPoint, [x2, y2]) ? 0 : ry,
    startAngle: theta,
    endAngle: theta + dTheta,
    xRotation: xRotation,
    arcFlag: arcFlag,
    sweepFlag: sweepFlag
  };
}
// EXTERNAL MODULE: ../node_modules/@antv/g-canvas/esm/util/arrow.js
var arrow = __webpack_require__("H/jw");

// CONCATENATED MODULE: ../node_modules/@antv/g-canvas/esm/util/draw.js





var SHAPE_ATTRS_MAP = {
  fill: 'fillStyle',
  stroke: 'strokeStyle',
  opacity: 'globalAlpha'
};
function applyAttrsToContext(context, element) {
  var attrs = element.attr();

  for (var k in attrs) {
    var v = attrs[k]; // 转换一下不与 canvas 兼容的属性名

    var name_1 = SHAPE_ATTRS_MAP[k] ? SHAPE_ATTRS_MAP[k] : k;

    if (name_1 === 'matrix' && v) {
      // 设置矩阵
      context.transform(v[0], v[1], v[3], v[4], v[6], v[7]);
    } else if (name_1 === 'lineDash' && context.setLineDash) {
      // 设置虚线，只支持数组形式，非数组形式不做任何操作
      Object(esm["isArray"])(v) && context.setLineDash(v);
    } else {
      if (name_1 === 'strokeStyle' || name_1 === 'fillStyle') {
        // 如果存在渐变、pattern 这个开销有些大
        // 可以考虑缓存机制，通过 hasUpdate 来避免一些运算
        v = Object(parse["b" /* parseStyle */])(context, element, v);
      } else if (name_1 === 'globalAlpha') {
        // opacity 效果可以叠加，子元素的 opacity 需要与父元素 opacity 相乘
        v = v * context.globalAlpha;
      }

      context[name_1] = v;
    }
  }
}
function drawChildren(context, children, region) {
  for (var i = 0; i < children.length; i++) {
    var child = children[i];

    if (child.get('visible')) {
      child.draw(context, region);
    } else {
      child.skipDraw();
    }
  }
} // 绘制 path

function drawPath(shape, context, attrs, arcParamsCache) {
  var path = attrs.path,
      startArrow = attrs.startArrow,
      endArrow = attrs.endArrow;
  var currentPoint = [0, 0]; // 当前图形

  var startMovePoint = [0, 0]; // 开始 M 的点，可能会有多个

  var distance = {
    dx: 0,
    dy: 0
  };
  context.beginPath();

  for (var i = 0; i < path.length; i++) {
    var params = path[i];
    var command = params[0];

    if (i === 0 && startArrow && startArrow.d) {
      var tangent = shape.getStartTangent();
      distance = arrow["c" /* getShortenOffset */](tangent[0][0], tangent[0][1], tangent[1][0], tangent[1][1], startArrow.d);
    } else if (i === path.length - 2 && path[i + 1][0] === 'Z' && endArrow && endArrow.d) {
      // 为了防止结尾为 Z 的 segment 缩短不起效，需要取最后两个 segment 特殊处理
      var lastPath = path[i + 1];

      if (lastPath[0] === 'Z') {
        var tangent = shape.getEndTangent();
        distance = arrow["c" /* getShortenOffset */](tangent[0][0], tangent[0][1], tangent[1][0], tangent[1][1], endArrow.d);
      }
    } else if (i === path.length - 1 && endArrow && endArrow.d) {
      if (path[0] !== 'Z') {
        var tangent = shape.getEndTangent();
        distance = arrow["c" /* getShortenOffset */](tangent[0][0], tangent[0][1], tangent[1][0], tangent[1][1], endArrow.d);
      }
    }

    var dx = distance.dx,
        dy = distance.dy; // V,H,S,T 都在前面被转换成标准形式

    switch (command) {
      case 'M':
        context.moveTo(params[1] - dx, params[2] - dy);
        startMovePoint = [params[1], params[2]];
        break;

      case 'L':
        context.lineTo(params[1] - dx, params[2] - dy);
        break;

      case 'Q':
        context.quadraticCurveTo(params[1], params[2], params[3] - dx, params[4] - dy);
        break;

      case 'C':
        context.bezierCurveTo(params[1], params[2], params[3], params[4], params[5] - dx, params[6] - dy);
        break;

      case 'A':
        {
          var arcParams = void 0; // 为了加速绘制，可以提供参数的缓存，各个图形自己缓存

          if (arcParamsCache) {
            arcParams = arcParamsCache[i];

            if (!arcParams) {
              arcParams = getArcParams(currentPoint, params);
              arcParamsCache[i] = arcParams;
            }
          } else {
            arcParams = getArcParams(currentPoint, params);
          }

          var cx = arcParams.cx,
              cy = arcParams.cy,
              rx = arcParams.rx,
              ry = arcParams.ry,
              startAngle = arcParams.startAngle,
              endAngle = arcParams.endAngle,
              xRotation = arcParams.xRotation,
              sweepFlag = arcParams.sweepFlag; // 直接使用椭圆的 api

          if (context.ellipse) {
            context.ellipse(cx, cy, rx, ry, xRotation, startAngle, endAngle, 1 - sweepFlag);
          } else {
            var r = rx > ry ? rx : ry;
            var scaleX = rx > ry ? 1 : rx / ry;
            var scaleY = rx > ry ? ry / rx : 1;
            context.translate(cx, cy);
            context.rotate(xRotation);
            context.scale(scaleX, scaleY);
            context.arc(0, 0, r, startAngle, endAngle, 1 - sweepFlag);
            context.scale(1 / scaleX, 1 / scaleY);
            context.rotate(-xRotation);
            context.translate(-cx, -cy);
          }

          break;
        }

      case 'Z':
        context.closePath();
        break;

      default:
        break;
    } // 有了 Z 后，当前节点从开始 M 的点开始


    if (command === 'Z') {
      currentPoint = startMovePoint;
    } else {
      var len = params.length;
      currentPoint = [params[len - 2], params[len - 1]];
    }
  }
} // 刷新图形元素(Shape 或者 Group)

function refreshElement(element, changeType) {
  var canvas = element.get('canvas'); // 只有存在于 canvas 上时生效

  if (canvas) {
    if (changeType === 'remove') {
      // 一旦 remove，则无法在 element 上拿到包围盒
      // destroy 后所有属性都拿不到，所以需要暂存一下
      // 这是一段 hack 的代码
      element._cacheCanvasBBox = element.get('cacheCanvasBBox');
    } // 防止反复刷新


    if (!element.get('hasChanged')) {
      // 本来只有局部渲染模式下，才需要记录更新的元素队列
      // if (canvas.get('localRefresh')) {
      //   canvas.refreshElement(element, changeType, canvas);
      // }
      // 但对于 https://github.com/antvis/g/issues/422 的场景，全局渲染的模式下也需要记录更新的元素队列
      canvas.refreshElement(element, changeType, canvas);

      if (canvas.get('autoDraw')) {
        canvas.draw();
      }

      element.set('hasChanged', true);
    }
  }
}
function getRefreshRegion(element) {
  var region;

  if (!element.destroyed) {
    var cacheBox = element.get('cacheCanvasBBox');
    var validCache = cacheBox && !!(cacheBox.width && cacheBox.height);
    var bbox = element.getCanvasBBox();
    var validBBox = bbox && !!(bbox.width && bbox.height); // 是否是有效 bbox 判定，一些 NaN 或者 宽高为 0 的情况过滤掉

    if (validCache && validBBox) {
      region = Object(util["l" /* mergeRegion */])(cacheBox, bbox);
    } else if (validCache) {
      region = cacheBox;
    } else if (validBBox) {
      region = bbox;
    }
  } else {
    // 因为元素已经销毁所以无法获取到缓存的包围盒
    region = element['_cacheCanvasBBox'];
  }

  return region;
}
function getMergedRegion(elements) {
  if (!elements.length) {
    return null;
  }

  var minXArr = [];
  var minYArr = [];
  var maxXArr = [];
  var maxYArr = [];
  Object(esm["each"])(elements, function (el) {
    var region = getRefreshRegion(el);

    if (region) {
      minXArr.push(region.minX);
      minYArr.push(region.minY);
      maxXArr.push(region.maxX);
      maxYArr.push(region.maxY);
    }
  });
  return {
    minX: Math.min.apply(null, minXArr),
    minY: Math.min.apply(null, minYArr),
    maxX: Math.max.apply(null, maxXArr),
    maxY: Math.max.apply(null, maxYArr)
  };
}
function mergeView(region, viewRegion) {
  if (!region || !viewRegion) {
    return null;
  } // 不相交，则直接返回 null


  if (!Object(util["f" /* intersectRect */])(region, viewRegion)) {
    return null;
  }

  return {
    minX: Math.max(region.minX, viewRegion.minX),
    minY: Math.max(region.minY, viewRegion.minY),
    maxX: Math.min(region.maxX, viewRegion.maxX),
    maxY: Math.min(region.maxY, viewRegion.maxY)
  };
}

/***/ }),

/***/ "5v/B":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

__webpack_require__("asZ9");

__webpack_require__("3y5y");

__webpack_require__("GkPX");

__webpack_require__("d3/y");

var __spreadArrays = this && this.__spreadArrays || function () {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {
    s += arguments[i].length;
  }

  for (var r = Array(s), k = 0, i = 0; i < il; i++) {
    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {
      r[k] = a[j];
    }
  }

  return r;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var BrowserInfo =
/** @class */
function () {
  function BrowserInfo(name, version, os) {
    this.name = name;
    this.version = version;
    this.os = os;
  }

  return BrowserInfo;
}();

exports.BrowserInfo = BrowserInfo;

var NodeInfo =
/** @class */
function () {
  function NodeInfo(version) {
    this.version = version;
    this.name = 'node';
    this.os = process.platform;
  }

  return NodeInfo;
}();

exports.NodeInfo = NodeInfo;

var BotInfo =
/** @class */
function () {
  function BotInfo() {
    this.bot = true; // NOTE: deprecated test name instead

    this.name = 'bot';
    this.version = null;
    this.os = null;
  }

  return BotInfo;
}();

exports.BotInfo = BotInfo; // tslint:disable-next-line:max-line-length

var SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;
var SEARCHBOT_OS_REGEX = /(nuhk)|(Googlebot)|(Yammybot)|(Openbot)|(Slurp)|(MSNBot)|(Ask Jeeves\/Teoma)|(ia_archiver)/;
var REQUIRED_VERSION_PARTS = 3;
var userAgentRules = [['aol', /AOLShield\/([0-9\._]+)/], ['edge', /Edge\/([0-9\._]+)/], ['edge-ios', /EdgiOS\/([0-9\._]+)/], ['yandexbrowser', /YaBrowser\/([0-9\._]+)/], ['vivaldi', /Vivaldi\/([0-9\.]+)/], ['kakaotalk', /KAKAOTALK\s([0-9\.]+)/], ['samsung', /SamsungBrowser\/([0-9\.]+)/], ['silk', /\bSilk\/([0-9._-]+)\b/], ['miui', /MiuiBrowser\/([0-9\.]+)$/], ['beaker', /BeakerBrowser\/([0-9\.]+)/], ['edge-chromium', /Edg\/([0-9\.]+)/], ['chromium-webview', /(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/], ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/], ['phantomjs', /PhantomJS\/([0-9\.]+)(:?\s|$)/], ['crios', /CriOS\/([0-9\.]+)(:?\s|$)/], ['firefox', /Firefox\/([0-9\.]+)(?:\s|$)/], ['fxios', /FxiOS\/([0-9\.]+)/], ['opera-mini', /Opera Mini.*Version\/([0-9\.]+)/], ['opera', /Opera\/([0-9\.]+)(?:\s|$)/], ['opera', /OPR\/([0-9\.]+)(:?\s|$)/], ['ie', /Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/], ['ie', /MSIE\s([0-9\.]+);.*Trident\/[4-7].0/], ['ie', /MSIE\s(7\.0)/], ['bb10', /BB10;\sTouch.*Version\/([0-9\.]+)/], ['android', /Android\s([0-9\.]+)/], ['ios', /Version\/([0-9\._]+).*Mobile.*Safari.*/], ['safari', /Version\/([0-9\._]+).*Safari/], ['facebook', /FBAV\/([0-9\.]+)/], ['instagram', /Instagram\s([0-9\.]+)/], ['ios-webview', /AppleWebKit\/([0-9\.]+).*Mobile/], ['ios-webview', /AppleWebKit\/([0-9\.]+).*Gecko\)$/], ['searchbot', SEARCHBOX_UA_REGEX]];
var operatingSystemRules = [['iOS', /iP(hone|od|ad)/], ['Android OS', /Android/], ['BlackBerry OS', /BlackBerry|BB10/], ['Windows Mobile', /IEMobile/], ['Amazon OS', /Kindle/], ['Windows 3.11', /Win16/], ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/], ['Windows 98', /(Windows 98)|(Win98)/], ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/], ['Windows XP', /(Windows NT 5.1)|(Windows XP)/], ['Windows Server 2003', /(Windows NT 5.2)/], ['Windows Vista', /(Windows NT 6.0)/], ['Windows 7', /(Windows NT 6.1)/], ['Windows 8', /(Windows NT 6.2)/], ['Windows 8.1', /(Windows NT 6.3)/], ['Windows 10', /(Windows NT 10.0)/], ['Windows ME', /Windows ME/], ['Open BSD', /OpenBSD/], ['Sun OS', /SunOS/], ['Chrome OS', /CrOS/], ['Linux', /(Linux)|(X11)/], ['Mac OS', /(Mac_PowerPC)|(Macintosh)/], ['QNX', /QNX/], ['BeOS', /BeOS/], ['OS/2', /OS\/2/], ['Search Bot', SEARCHBOT_OS_REGEX]];

function detect(userAgent) {
  if (!!userAgent) {
    return parseUserAgent(userAgent);
  }

  if (typeof navigator !== 'undefined') {
    return parseUserAgent(navigator.userAgent);
  }

  return getNodeVersion();
}

exports.detect = detect;

function parseUserAgent(ua) {
  // opted for using reduce here rather than Array#first with a regex.test call
  // this is primarily because using the reduce we only perform the regex
  // execution once rather than once for the test and for the exec again below
  // probably something that needs to be benchmarked though
  var matchedRule = ua !== '' && userAgentRules.reduce(function (matched, _a) {
    var browser = _a[0],
        regex = _a[1];

    if (matched) {
      return matched;
    }

    var uaMatch = regex.exec(ua);
    return !!uaMatch && [browser, uaMatch];
  }, false);

  if (!matchedRule) {
    return null;
  }

  var name = matchedRule[0],
      match = matchedRule[1];

  if (name === 'searchbot') {
    return new BotInfo();
  }

  var versionParts = match[1] && match[1].split(/[._]/).slice(0, 3);

  if (versionParts) {
    if (versionParts.length < REQUIRED_VERSION_PARTS) {
      versionParts = __spreadArrays(versionParts, createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length));
    }
  } else {
    versionParts = [];
  }

  return new BrowserInfo(name, versionParts.join('.'), detectOS(ua));
}

exports.parseUserAgent = parseUserAgent;

function detectOS(ua) {
  for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {
    var _a = operatingSystemRules[ii],
        os = _a[0],
        regex = _a[1];
    var match = regex.test(ua);

    if (match) {
      return os;
    }
  }

  return null;
}

exports.detectOS = detectOS;

function getNodeVersion() {
  var isNode = typeof process !== 'undefined' && process.version;
  return isNode ? new NodeInfo(process.version.slice(1)) : null;
}

exports.getNodeVersion = getNodeVersion;

function createVersionParts(count) {
  var output = [];

  for (var ii = 0; ii < count; ii++) {
    output.push('0');
  }

  return output;
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("5IsQ")))

/***/ }),

/***/ "5xfP":
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;__webpack_require__("Z8gF");

__webpack_require__("J8hF");

__webpack_require__("V7cS");

__webpack_require__("4aJ6");

__webpack_require__("M/4x");

__webpack_require__("t91x");

// TinyColor v1.4.1
// https://github.com/bgrins/TinyColor
// Brian Grinstead, MIT License
(function (Math) {
  var trimLeft = /^\s+/,
      trimRight = /\s+$/,
      tinyCounter = 0,
      mathRound = Math.round,
      mathMin = Math.min,
      mathMax = Math.max,
      mathRandom = Math.random;

  function tinycolor(color, opts) {
    color = color ? color : '';
    opts = opts || {}; // If input is already a tinycolor, return itself

    if (color instanceof tinycolor) {
      return color;
    } // If we are called as a function, call using new instead


    if (!(this instanceof tinycolor)) {
      return new tinycolor(color, opts);
    }

    var rgb = inputToRGB(color);
    this._originalInput = color, this._r = rgb.r, this._g = rgb.g, this._b = rgb.b, this._a = rgb.a, this._roundA = mathRound(100 * this._a) / 100, this._format = opts.format || rgb.format;
    this._gradientType = opts.gradientType; // Don't let the range of [0,255] come back in [0,1].
    // Potentially lose a little bit of precision here, but will fix issues where
    // .5 gets interpreted as half of the total, instead of half of 1
    // If it was supposed to be 128, this was already taken care of by `inputToRgb`

    if (this._r < 1) {
      this._r = mathRound(this._r);
    }

    if (this._g < 1) {
      this._g = mathRound(this._g);
    }

    if (this._b < 1) {
      this._b = mathRound(this._b);
    }

    this._ok = rgb.ok;
    this._tc_id = tinyCounter++;
  }

  tinycolor.prototype = {
    isDark: function isDark() {
      return this.getBrightness() < 128;
    },
    isLight: function isLight() {
      return !this.isDark();
    },
    isValid: function isValid() {
      return this._ok;
    },
    getOriginalInput: function getOriginalInput() {
      return this._originalInput;
    },
    getFormat: function getFormat() {
      return this._format;
    },
    getAlpha: function getAlpha() {
      return this._a;
    },
    getBrightness: function getBrightness() {
      //http://www.w3.org/TR/AERT#color-contrast
      var rgb = this.toRgb();
      return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;
    },
    getLuminance: function getLuminance() {
      //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef
      var rgb = this.toRgb();
      var RsRGB, GsRGB, BsRGB, R, G, B;
      RsRGB = rgb.r / 255;
      GsRGB = rgb.g / 255;
      BsRGB = rgb.b / 255;

      if (RsRGB <= 0.03928) {
        R = RsRGB / 12.92;
      } else {
        R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);
      }

      if (GsRGB <= 0.03928) {
        G = GsRGB / 12.92;
      } else {
        G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);
      }

      if (BsRGB <= 0.03928) {
        B = BsRGB / 12.92;
      } else {
        B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);
      }

      return 0.2126 * R + 0.7152 * G + 0.0722 * B;
    },
    setAlpha: function setAlpha(value) {
      this._a = boundAlpha(value);
      this._roundA = mathRound(100 * this._a) / 100;
      return this;
    },
    toHsv: function toHsv() {
      var hsv = rgbToHsv(this._r, this._g, this._b);
      return {
        h: hsv.h * 360,
        s: hsv.s,
        v: hsv.v,
        a: this._a
      };
    },
    toHsvString: function toHsvString() {
      var hsv = rgbToHsv(this._r, this._g, this._b);
      var h = mathRound(hsv.h * 360),
          s = mathRound(hsv.s * 100),
          v = mathRound(hsv.v * 100);
      return this._a == 1 ? "hsv(" + h + ", " + s + "%, " + v + "%)" : "hsva(" + h + ", " + s + "%, " + v + "%, " + this._roundA + ")";
    },
    toHsl: function toHsl() {
      var hsl = rgbToHsl(this._r, this._g, this._b);
      return {
        h: hsl.h * 360,
        s: hsl.s,
        l: hsl.l,
        a: this._a
      };
    },
    toHslString: function toHslString() {
      var hsl = rgbToHsl(this._r, this._g, this._b);
      var h = mathRound(hsl.h * 360),
          s = mathRound(hsl.s * 100),
          l = mathRound(hsl.l * 100);
      return this._a == 1 ? "hsl(" + h + ", " + s + "%, " + l + "%)" : "hsla(" + h + ", " + s + "%, " + l + "%, " + this._roundA + ")";
    },
    toHex: function toHex(allow3Char) {
      return rgbToHex(this._r, this._g, this._b, allow3Char);
    },
    toHexString: function toHexString(allow3Char) {
      return '#' + this.toHex(allow3Char);
    },
    toHex8: function toHex8(allow4Char) {
      return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);
    },
    toHex8String: function toHex8String(allow4Char) {
      return '#' + this.toHex8(allow4Char);
    },
    toRgb: function toRgb() {
      return {
        r: mathRound(this._r),
        g: mathRound(this._g),
        b: mathRound(this._b),
        a: this._a
      };
    },
    toRgbString: function toRgbString() {
      return this._a == 1 ? "rgb(" + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ")" : "rgba(" + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ", " + this._roundA + ")";
    },
    toPercentageRgb: function toPercentageRgb() {
      return {
        r: mathRound(bound01(this._r, 255) * 100) + "%",
        g: mathRound(bound01(this._g, 255) * 100) + "%",
        b: mathRound(bound01(this._b, 255) * 100) + "%",
        a: this._a
      };
    },
    toPercentageRgbString: function toPercentageRgbString() {
      return this._a == 1 ? "rgb(" + mathRound(bound01(this._r, 255) * 100) + "%, " + mathRound(bound01(this._g, 255) * 100) + "%, " + mathRound(bound01(this._b, 255) * 100) + "%)" : "rgba(" + mathRound(bound01(this._r, 255) * 100) + "%, " + mathRound(bound01(this._g, 255) * 100) + "%, " + mathRound(bound01(this._b, 255) * 100) + "%, " + this._roundA + ")";
    },
    toName: function toName() {
      if (this._a === 0) {
        return "transparent";
      }

      if (this._a < 1) {
        return false;
      }

      return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;
    },
    toFilter: function toFilter(secondColor) {
      var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);
      var secondHex8String = hex8String;
      var gradientType = this._gradientType ? "GradientType = 1, " : "";

      if (secondColor) {
        var s = tinycolor(secondColor);
        secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);
      }

      return "progid:DXImageTransform.Microsoft.gradient(" + gradientType + "startColorstr=" + hex8String + ",endColorstr=" + secondHex8String + ")";
    },
    toString: function toString(format) {
      var formatSet = !!format;
      format = format || this._format;
      var formattedString = false;
      var hasAlpha = this._a < 1 && this._a >= 0;
      var needsAlphaFormat = !formatSet && hasAlpha && (format === "hex" || format === "hex6" || format === "hex3" || format === "hex4" || format === "hex8" || format === "name");

      if (needsAlphaFormat) {
        // Special case for "transparent", all other non-alpha formats
        // will return rgba when there is transparency.
        if (format === "name" && this._a === 0) {
          return this.toName();
        }

        return this.toRgbString();
      }

      if (format === "rgb") {
        formattedString = this.toRgbString();
      }

      if (format === "prgb") {
        formattedString = this.toPercentageRgbString();
      }

      if (format === "hex" || format === "hex6") {
        formattedString = this.toHexString();
      }

      if (format === "hex3") {
        formattedString = this.toHexString(true);
      }

      if (format === "hex4") {
        formattedString = this.toHex8String(true);
      }

      if (format === "hex8") {
        formattedString = this.toHex8String();
      }

      if (format === "name") {
        formattedString = this.toName();
      }

      if (format === "hsl") {
        formattedString = this.toHslString();
      }

      if (format === "hsv") {
        formattedString = this.toHsvString();
      }

      return formattedString || this.toHexString();
    },
    clone: function clone() {
      return tinycolor(this.toString());
    },
    _applyModification: function _applyModification(fn, args) {
      var color = fn.apply(null, [this].concat([].slice.call(args)));
      this._r = color._r;
      this._g = color._g;
      this._b = color._b;
      this.setAlpha(color._a);
      return this;
    },
    lighten: function lighten() {
      return this._applyModification(_lighten, arguments);
    },
    brighten: function brighten() {
      return this._applyModification(_brighten, arguments);
    },
    darken: function darken() {
      return this._applyModification(_darken, arguments);
    },
    desaturate: function desaturate() {
      return this._applyModification(_desaturate, arguments);
    },
    saturate: function saturate() {
      return this._applyModification(_saturate, arguments);
    },
    greyscale: function greyscale() {
      return this._applyModification(_greyscale, arguments);
    },
    spin: function spin() {
      return this._applyModification(_spin, arguments);
    },
    _applyCombination: function _applyCombination(fn, args) {
      return fn.apply(null, [this].concat([].slice.call(args)));
    },
    analogous: function analogous() {
      return this._applyCombination(_analogous, arguments);
    },
    complement: function complement() {
      return this._applyCombination(_complement, arguments);
    },
    monochromatic: function monochromatic() {
      return this._applyCombination(_monochromatic, arguments);
    },
    splitcomplement: function splitcomplement() {
      return this._applyCombination(_splitcomplement, arguments);
    },
    triad: function triad() {
      return this._applyCombination(_triad, arguments);
    },
    tetrad: function tetrad() {
      return this._applyCombination(_tetrad, arguments);
    }
  }; // If input is an object, force 1 into "1.0" to handle ratios properly
  // String input requires "1.0" as input, so 1 will be treated as 1

  tinycolor.fromRatio = function (color, opts) {
    if (typeof color == "object") {
      var newColor = {};

      for (var i in color) {
        if (color.hasOwnProperty(i)) {
          if (i === "a") {
            newColor[i] = color[i];
          } else {
            newColor[i] = convertToPercentage(color[i]);
          }
        }
      }

      color = newColor;
    }

    return tinycolor(color, opts);
  }; // Given a string or object, convert that input to RGB
  // Possible string inputs:
  //
  //     "red"
  //     "#f00" or "f00"
  //     "#ff0000" or "ff0000"
  //     "#ff000000" or "ff000000"
  //     "rgb 255 0 0" or "rgb (255, 0, 0)"
  //     "rgb 1.0 0 0" or "rgb (1, 0, 0)"
  //     "rgba (255, 0, 0, 1)" or "rgba 255, 0, 0, 1"
  //     "rgba (1.0, 0, 0, 1)" or "rgba 1.0, 0, 0, 1"
  //     "hsl(0, 100%, 50%)" or "hsl 0 100% 50%"
  //     "hsla(0, 100%, 50%, 1)" or "hsla 0 100% 50%, 1"
  //     "hsv(0, 100%, 100%)" or "hsv 0 100% 100%"
  //


  function inputToRGB(color) {
    var rgb = {
      r: 0,
      g: 0,
      b: 0
    };
    var a = 1;
    var s = null;
    var v = null;
    var l = null;
    var ok = false;
    var format = false;

    if (typeof color == "string") {
      color = stringInputToObject(color);
    }

    if (typeof color == "object") {
      if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {
        rgb = rgbToRgb(color.r, color.g, color.b);
        ok = true;
        format = String(color.r).substr(-1) === "%" ? "prgb" : "rgb";
      } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {
        s = convertToPercentage(color.s);
        v = convertToPercentage(color.v);
        rgb = hsvToRgb(color.h, s, v);
        ok = true;
        format = "hsv";
      } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {
        s = convertToPercentage(color.s);
        l = convertToPercentage(color.l);
        rgb = hslToRgb(color.h, s, l);
        ok = true;
        format = "hsl";
      }

      if (color.hasOwnProperty("a")) {
        a = color.a;
      }
    }

    a = boundAlpha(a);
    return {
      ok: ok,
      format: color.format || format,
      r: mathMin(255, mathMax(rgb.r, 0)),
      g: mathMin(255, mathMax(rgb.g, 0)),
      b: mathMin(255, mathMax(rgb.b, 0)),
      a: a
    };
  } // Conversion Functions
  // --------------------
  // `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:
  // <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>
  // `rgbToRgb`
  // Handle bounds / percentage checking to conform to CSS color spec
  // <http://www.w3.org/TR/css3-color/>
  // *Assumes:* r, g, b in [0, 255] or [0, 1]
  // *Returns:* { r, g, b } in [0, 255]


  function rgbToRgb(r, g, b) {
    return {
      r: bound01(r, 255) * 255,
      g: bound01(g, 255) * 255,
      b: bound01(b, 255) * 255
    };
  } // `rgbToHsl`
  // Converts an RGB color value to HSL.
  // *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]
  // *Returns:* { h, s, l } in [0,1]


  function rgbToHsl(r, g, b) {
    r = bound01(r, 255);
    g = bound01(g, 255);
    b = bound01(b, 255);
    var max = mathMax(r, g, b),
        min = mathMin(r, g, b);
    var h,
        s,
        l = (max + min) / 2;

    if (max == min) {
      h = s = 0; // achromatic
    } else {
      var d = max - min;
      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);

      switch (max) {
        case r:
          h = (g - b) / d + (g < b ? 6 : 0);
          break;

        case g:
          h = (b - r) / d + 2;
          break;

        case b:
          h = (r - g) / d + 4;
          break;
      }

      h /= 6;
    }

    return {
      h: h,
      s: s,
      l: l
    };
  } // `hslToRgb`
  // Converts an HSL color value to RGB.
  // *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]
  // *Returns:* { r, g, b } in the set [0, 255]


  function hslToRgb(h, s, l) {
    var r, g, b;
    h = bound01(h, 360);
    s = bound01(s, 100);
    l = bound01(l, 100);

    function hue2rgb(p, q, t) {
      if (t < 0) t += 1;
      if (t > 1) t -= 1;
      if (t < 1 / 6) return p + (q - p) * 6 * t;
      if (t < 1 / 2) return q;
      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;
      return p;
    }

    if (s === 0) {
      r = g = b = l; // achromatic
    } else {
      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
      var p = 2 * l - q;
      r = hue2rgb(p, q, h + 1 / 3);
      g = hue2rgb(p, q, h);
      b = hue2rgb(p, q, h - 1 / 3);
    }

    return {
      r: r * 255,
      g: g * 255,
      b: b * 255
    };
  } // `rgbToHsv`
  // Converts an RGB color value to HSV
  // *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]
  // *Returns:* { h, s, v } in [0,1]


  function rgbToHsv(r, g, b) {
    r = bound01(r, 255);
    g = bound01(g, 255);
    b = bound01(b, 255);
    var max = mathMax(r, g, b),
        min = mathMin(r, g, b);
    var h,
        s,
        v = max;
    var d = max - min;
    s = max === 0 ? 0 : d / max;

    if (max == min) {
      h = 0; // achromatic
    } else {
      switch (max) {
        case r:
          h = (g - b) / d + (g < b ? 6 : 0);
          break;

        case g:
          h = (b - r) / d + 2;
          break;

        case b:
          h = (r - g) / d + 4;
          break;
      }

      h /= 6;
    }

    return {
      h: h,
      s: s,
      v: v
    };
  } // `hsvToRgb`
  // Converts an HSV color value to RGB.
  // *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]
  // *Returns:* { r, g, b } in the set [0, 255]


  function hsvToRgb(h, s, v) {
    h = bound01(h, 360) * 6;
    s = bound01(s, 100);
    v = bound01(v, 100);
    var i = Math.floor(h),
        f = h - i,
        p = v * (1 - s),
        q = v * (1 - f * s),
        t = v * (1 - (1 - f) * s),
        mod = i % 6,
        r = [v, q, p, p, t, v][mod],
        g = [t, v, v, q, p, p][mod],
        b = [p, p, t, v, v, q][mod];
    return {
      r: r * 255,
      g: g * 255,
      b: b * 255
    };
  } // `rgbToHex`
  // Converts an RGB color to hex
  // Assumes r, g, and b are contained in the set [0, 255]
  // Returns a 3 or 6 character hex


  function rgbToHex(r, g, b, allow3Char) {
    var hex = [pad2(mathRound(r).toString(16)), pad2(mathRound(g).toString(16)), pad2(mathRound(b).toString(16))]; // Return a 3 character hex if possible

    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {
      return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);
    }

    return hex.join("");
  } // `rgbaToHex`
  // Converts an RGBA color plus alpha transparency to hex
  // Assumes r, g, b are contained in the set [0, 255] and
  // a in [0, 1]. Returns a 4 or 8 character rgba hex


  function rgbaToHex(r, g, b, a, allow4Char) {
    var hex = [pad2(mathRound(r).toString(16)), pad2(mathRound(g).toString(16)), pad2(mathRound(b).toString(16)), pad2(convertDecimalToHex(a))]; // Return a 4 character hex if possible

    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {
      return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);
    }

    return hex.join("");
  } // `rgbaToArgbHex`
  // Converts an RGBA color to an ARGB Hex8 string
  // Rarely used, but required for "toFilter()"


  function rgbaToArgbHex(r, g, b, a) {
    var hex = [pad2(convertDecimalToHex(a)), pad2(mathRound(r).toString(16)), pad2(mathRound(g).toString(16)), pad2(mathRound(b).toString(16))];
    return hex.join("");
  } // `equals`
  // Can be called with any tinycolor input


  tinycolor.equals = function (color1, color2) {
    if (!color1 || !color2) {
      return false;
    }

    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();
  };

  tinycolor.random = function () {
    return tinycolor.fromRatio({
      r: mathRandom(),
      g: mathRandom(),
      b: mathRandom()
    });
  }; // Modification Functions
  // ----------------------
  // Thanks to less.js for some of the basics here
  // <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>


  function _desaturate(color, amount) {
    amount = amount === 0 ? 0 : amount || 10;
    var hsl = tinycolor(color).toHsl();
    hsl.s -= amount / 100;
    hsl.s = clamp01(hsl.s);
    return tinycolor(hsl);
  }

  function _saturate(color, amount) {
    amount = amount === 0 ? 0 : amount || 10;
    var hsl = tinycolor(color).toHsl();
    hsl.s += amount / 100;
    hsl.s = clamp01(hsl.s);
    return tinycolor(hsl);
  }

  function _greyscale(color) {
    return tinycolor(color).desaturate(100);
  }

  function _lighten(color, amount) {
    amount = amount === 0 ? 0 : amount || 10;
    var hsl = tinycolor(color).toHsl();
    hsl.l += amount / 100;
    hsl.l = clamp01(hsl.l);
    return tinycolor(hsl);
  }

  function _brighten(color, amount) {
    amount = amount === 0 ? 0 : amount || 10;
    var rgb = tinycolor(color).toRgb();
    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * -(amount / 100))));
    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * -(amount / 100))));
    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * -(amount / 100))));
    return tinycolor(rgb);
  }

  function _darken(color, amount) {
    amount = amount === 0 ? 0 : amount || 10;
    var hsl = tinycolor(color).toHsl();
    hsl.l -= amount / 100;
    hsl.l = clamp01(hsl.l);
    return tinycolor(hsl);
  } // Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.
  // Values outside of this range will be wrapped into this range.


  function _spin(color, amount) {
    var hsl = tinycolor(color).toHsl();
    var hue = (hsl.h + amount) % 360;
    hsl.h = hue < 0 ? 360 + hue : hue;
    return tinycolor(hsl);
  } // Combination Functions
  // ---------------------
  // Thanks to jQuery xColor for some of the ideas behind these
  // <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>


  function _complement(color) {
    var hsl = tinycolor(color).toHsl();
    hsl.h = (hsl.h + 180) % 360;
    return tinycolor(hsl);
  }

  function _triad(color) {
    var hsl = tinycolor(color).toHsl();
    var h = hsl.h;
    return [tinycolor(color), tinycolor({
      h: (h + 120) % 360,
      s: hsl.s,
      l: hsl.l
    }), tinycolor({
      h: (h + 240) % 360,
      s: hsl.s,
      l: hsl.l
    })];
  }

  function _tetrad(color) {
    var hsl = tinycolor(color).toHsl();
    var h = hsl.h;
    return [tinycolor(color), tinycolor({
      h: (h + 90) % 360,
      s: hsl.s,
      l: hsl.l
    }), tinycolor({
      h: (h + 180) % 360,
      s: hsl.s,
      l: hsl.l
    }), tinycolor({
      h: (h + 270) % 360,
      s: hsl.s,
      l: hsl.l
    })];
  }

  function _splitcomplement(color) {
    var hsl = tinycolor(color).toHsl();
    var h = hsl.h;
    return [tinycolor(color), tinycolor({
      h: (h + 72) % 360,
      s: hsl.s,
      l: hsl.l
    }), tinycolor({
      h: (h + 216) % 360,
      s: hsl.s,
      l: hsl.l
    })];
  }

  function _analogous(color, results, slices) {
    results = results || 6;
    slices = slices || 30;
    var hsl = tinycolor(color).toHsl();
    var part = 360 / slices;
    var ret = [tinycolor(color)];

    for (hsl.h = (hsl.h - (part * results >> 1) + 720) % 360; --results;) {
      hsl.h = (hsl.h + part) % 360;
      ret.push(tinycolor(hsl));
    }

    return ret;
  }

  function _monochromatic(color, results) {
    results = results || 6;
    var hsv = tinycolor(color).toHsv();
    var h = hsv.h,
        s = hsv.s,
        v = hsv.v;
    var ret = [];
    var modification = 1 / results;

    while (results--) {
      ret.push(tinycolor({
        h: h,
        s: s,
        v: v
      }));
      v = (v + modification) % 1;
    }

    return ret;
  } // Utility Functions
  // ---------------------


  tinycolor.mix = function (color1, color2, amount) {
    amount = amount === 0 ? 0 : amount || 50;
    var rgb1 = tinycolor(color1).toRgb();
    var rgb2 = tinycolor(color2).toRgb();
    var p = amount / 100;
    var rgba = {
      r: (rgb2.r - rgb1.r) * p + rgb1.r,
      g: (rgb2.g - rgb1.g) * p + rgb1.g,
      b: (rgb2.b - rgb1.b) * p + rgb1.b,
      a: (rgb2.a - rgb1.a) * p + rgb1.a
    };
    return tinycolor(rgba);
  }; // Readability Functions
  // ---------------------
  // <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)
  // `contrast`
  // Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)


  tinycolor.readability = function (color1, color2) {
    var c1 = tinycolor(color1);
    var c2 = tinycolor(color2);
    return (Math.max(c1.getLuminance(), c2.getLuminance()) + 0.05) / (Math.min(c1.getLuminance(), c2.getLuminance()) + 0.05);
  }; // `isReadable`
  // Ensure that foreground and background color combinations meet WCAG2 guidelines.
  // The third argument is an optional Object.
  //      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';
  //      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.
  // If the entire object is absent, isReadable defaults to {level:"AA",size:"small"}.
  // *Example*
  //    tinycolor.isReadable("#000", "#111") => false
  //    tinycolor.isReadable("#000", "#111",{level:"AA",size:"large"}) => false


  tinycolor.isReadable = function (color1, color2, wcag2) {
    var readability = tinycolor.readability(color1, color2);
    var wcag2Parms, out;
    out = false;
    wcag2Parms = validateWCAG2Parms(wcag2);

    switch (wcag2Parms.level + wcag2Parms.size) {
      case "AAsmall":
      case "AAAlarge":
        out = readability >= 4.5;
        break;

      case "AAlarge":
        out = readability >= 3;
        break;

      case "AAAsmall":
        out = readability >= 7;
        break;
    }

    return out;
  }; // `mostReadable`
  // Given a base color and a list of possible foreground or background
  // colors for that base, returns the most readable color.
  // Optionally returns Black or White if the most readable color is unreadable.
  // *Example*
  //    tinycolor.mostReadable(tinycolor.mostReadable("#123", ["#124", "#125"],{includeFallbackColors:false}).toHexString(); // "#112255"
  //    tinycolor.mostReadable(tinycolor.mostReadable("#123", ["#124", "#125"],{includeFallbackColors:true}).toHexString();  // "#ffffff"
  //    tinycolor.mostReadable("#a8015a", ["#faf3f3"],{includeFallbackColors:true,level:"AAA",size:"large"}).toHexString(); // "#faf3f3"
  //    tinycolor.mostReadable("#a8015a", ["#faf3f3"],{includeFallbackColors:true,level:"AAA",size:"small"}).toHexString(); // "#ffffff"


  tinycolor.mostReadable = function (baseColor, colorList, args) {
    var bestColor = null;
    var bestScore = 0;
    var readability;
    var includeFallbackColors, level, size;
    args = args || {};
    includeFallbackColors = args.includeFallbackColors;
    level = args.level;
    size = args.size;

    for (var i = 0; i < colorList.length; i++) {
      readability = tinycolor.readability(baseColor, colorList[i]);

      if (readability > bestScore) {
        bestScore = readability;
        bestColor = tinycolor(colorList[i]);
      }
    }

    if (tinycolor.isReadable(baseColor, bestColor, {
      "level": level,
      "size": size
    }) || !includeFallbackColors) {
      return bestColor;
    } else {
      args.includeFallbackColors = false;
      return tinycolor.mostReadable(baseColor, ["#fff", "#000"], args);
    }
  }; // Big List of Colors
  // ------------------
  // <http://www.w3.org/TR/css3-color/#svg-color>


  var names = tinycolor.names = {
    aliceblue: "f0f8ff",
    antiquewhite: "faebd7",
    aqua: "0ff",
    aquamarine: "7fffd4",
    azure: "f0ffff",
    beige: "f5f5dc",
    bisque: "ffe4c4",
    black: "000",
    blanchedalmond: "ffebcd",
    blue: "00f",
    blueviolet: "8a2be2",
    brown: "a52a2a",
    burlywood: "deb887",
    burntsienna: "ea7e5d",
    cadetblue: "5f9ea0",
    chartreuse: "7fff00",
    chocolate: "d2691e",
    coral: "ff7f50",
    cornflowerblue: "6495ed",
    cornsilk: "fff8dc",
    crimson: "dc143c",
    cyan: "0ff",
    darkblue: "00008b",
    darkcyan: "008b8b",
    darkgoldenrod: "b8860b",
    darkgray: "a9a9a9",
    darkgreen: "006400",
    darkgrey: "a9a9a9",
    darkkhaki: "bdb76b",
    darkmagenta: "8b008b",
    darkolivegreen: "556b2f",
    darkorange: "ff8c00",
    darkorchid: "9932cc",
    darkred: "8b0000",
    darksalmon: "e9967a",
    darkseagreen: "8fbc8f",
    darkslateblue: "483d8b",
    darkslategray: "2f4f4f",
    darkslategrey: "2f4f4f",
    darkturquoise: "00ced1",
    darkviolet: "9400d3",
    deeppink: "ff1493",
    deepskyblue: "00bfff",
    dimgray: "696969",
    dimgrey: "696969",
    dodgerblue: "1e90ff",
    firebrick: "b22222",
    floralwhite: "fffaf0",
    forestgreen: "228b22",
    fuchsia: "f0f",
    gainsboro: "dcdcdc",
    ghostwhite: "f8f8ff",
    gold: "ffd700",
    goldenrod: "daa520",
    gray: "808080",
    green: "008000",
    greenyellow: "adff2f",
    grey: "808080",
    honeydew: "f0fff0",
    hotpink: "ff69b4",
    indianred: "cd5c5c",
    indigo: "4b0082",
    ivory: "fffff0",
    khaki: "f0e68c",
    lavender: "e6e6fa",
    lavenderblush: "fff0f5",
    lawngreen: "7cfc00",
    lemonchiffon: "fffacd",
    lightblue: "add8e6",
    lightcoral: "f08080",
    lightcyan: "e0ffff",
    lightgoldenrodyellow: "fafad2",
    lightgray: "d3d3d3",
    lightgreen: "90ee90",
    lightgrey: "d3d3d3",
    lightpink: "ffb6c1",
    lightsalmon: "ffa07a",
    lightseagreen: "20b2aa",
    lightskyblue: "87cefa",
    lightslategray: "789",
    lightslategrey: "789",
    lightsteelblue: "b0c4de",
    lightyellow: "ffffe0",
    lime: "0f0",
    limegreen: "32cd32",
    linen: "faf0e6",
    magenta: "f0f",
    maroon: "800000",
    mediumaquamarine: "66cdaa",
    mediumblue: "0000cd",
    mediumorchid: "ba55d3",
    mediumpurple: "9370db",
    mediumseagreen: "3cb371",
    mediumslateblue: "7b68ee",
    mediumspringgreen: "00fa9a",
    mediumturquoise: "48d1cc",
    mediumvioletred: "c71585",
    midnightblue: "191970",
    mintcream: "f5fffa",
    mistyrose: "ffe4e1",
    moccasin: "ffe4b5",
    navajowhite: "ffdead",
    navy: "000080",
    oldlace: "fdf5e6",
    olive: "808000",
    olivedrab: "6b8e23",
    orange: "ffa500",
    orangered: "ff4500",
    orchid: "da70d6",
    palegoldenrod: "eee8aa",
    palegreen: "98fb98",
    paleturquoise: "afeeee",
    palevioletred: "db7093",
    papayawhip: "ffefd5",
    peachpuff: "ffdab9",
    peru: "cd853f",
    pink: "ffc0cb",
    plum: "dda0dd",
    powderblue: "b0e0e6",
    purple: "800080",
    rebeccapurple: "663399",
    red: "f00",
    rosybrown: "bc8f8f",
    royalblue: "4169e1",
    saddlebrown: "8b4513",
    salmon: "fa8072",
    sandybrown: "f4a460",
    seagreen: "2e8b57",
    seashell: "fff5ee",
    sienna: "a0522d",
    silver: "c0c0c0",
    skyblue: "87ceeb",
    slateblue: "6a5acd",
    slategray: "708090",
    slategrey: "708090",
    snow: "fffafa",
    springgreen: "00ff7f",
    steelblue: "4682b4",
    tan: "d2b48c",
    teal: "008080",
    thistle: "d8bfd8",
    tomato: "ff6347",
    turquoise: "40e0d0",
    violet: "ee82ee",
    wheat: "f5deb3",
    white: "fff",
    whitesmoke: "f5f5f5",
    yellow: "ff0",
    yellowgreen: "9acd32"
  }; // Make it easy to access colors via `hexNames[hex]`

  var hexNames = tinycolor.hexNames = flip(names); // Utilities
  // ---------
  // `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`

  function flip(o) {
    var flipped = {};

    for (var i in o) {
      if (o.hasOwnProperty(i)) {
        flipped[o[i]] = i;
      }
    }

    return flipped;
  } // Return a valid alpha value [0,1] with all invalid values being set to 1


  function boundAlpha(a) {
    a = parseFloat(a);

    if (isNaN(a) || a < 0 || a > 1) {
      a = 1;
    }

    return a;
  } // Take input from [0, n] and return it as [0, 1]


  function bound01(n, max) {
    if (isOnePointZero(n)) {
      n = "100%";
    }

    var processPercent = isPercentage(n);
    n = mathMin(max, mathMax(0, parseFloat(n))); // Automatically convert percentage into number

    if (processPercent) {
      n = parseInt(n * max, 10) / 100;
    } // Handle floating point rounding errors


    if (Math.abs(n - max) < 0.000001) {
      return 1;
    } // Convert into [0, 1] range if it isn't already


    return n % max / parseFloat(max);
  } // Force a number between 0 and 1


  function clamp01(val) {
    return mathMin(1, mathMax(0, val));
  } // Parse a base-16 hex value into a base-10 integer


  function parseIntFromHex(val) {
    return parseInt(val, 16);
  } // Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1
  // <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>


  function isOnePointZero(n) {
    return typeof n == "string" && n.indexOf('.') != -1 && parseFloat(n) === 1;
  } // Check to see if string passed in is a percentage


  function isPercentage(n) {
    return typeof n === "string" && n.indexOf('%') != -1;
  } // Force a hex value to have 2 characters


  function pad2(c) {
    return c.length == 1 ? '0' + c : '' + c;
  } // Replace a decimal with it's percentage value


  function convertToPercentage(n) {
    if (n <= 1) {
      n = n * 100 + "%";
    }

    return n;
  } // Converts a decimal to a hex value


  function convertDecimalToHex(d) {
    return Math.round(parseFloat(d) * 255).toString(16);
  } // Converts a hex value to a decimal


  function convertHexToDecimal(h) {
    return parseIntFromHex(h) / 255;
  }

  var matchers = function () {
    // <http://www.w3.org/TR/css3-values/#integers>
    var CSS_INTEGER = "[-\\+]?\\d+%?"; // <http://www.w3.org/TR/css3-values/#number-value>

    var CSS_NUMBER = "[-\\+]?\\d*\\.\\d+%?"; // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.

    var CSS_UNIT = "(?:" + CSS_NUMBER + ")|(?:" + CSS_INTEGER + ")"; // Actual matching.
    // Parentheses and commas are optional, but not required.
    // Whitespace can take the place of commas or opening paren

    var PERMISSIVE_MATCH3 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
    var PERMISSIVE_MATCH4 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
    return {
      CSS_UNIT: new RegExp(CSS_UNIT),
      rgb: new RegExp("rgb" + PERMISSIVE_MATCH3),
      rgba: new RegExp("rgba" + PERMISSIVE_MATCH4),
      hsl: new RegExp("hsl" + PERMISSIVE_MATCH3),
      hsla: new RegExp("hsla" + PERMISSIVE_MATCH4),
      hsv: new RegExp("hsv" + PERMISSIVE_MATCH3),
      hsva: new RegExp("hsva" + PERMISSIVE_MATCH4),
      hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
      hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
      hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
      hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
    };
  }(); // `isValidCSSUnit`
  // Take in a single string / number and check to see if it looks like a CSS unit
  // (see `matchers` above for definition).


  function isValidCSSUnit(color) {
    return !!matchers.CSS_UNIT.exec(color);
  } // `stringInputToObject`
  // Permissive string parsing.  Take in a number of formats, and output an object
  // based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`


  function stringInputToObject(color) {
    color = color.replace(trimLeft, '').replace(trimRight, '').toLowerCase();
    var named = false;

    if (names[color]) {
      color = names[color];
      named = true;
    } else if (color == 'transparent') {
      return {
        r: 0,
        g: 0,
        b: 0,
        a: 0,
        format: "name"
      };
    } // Try to match string input using regular expressions.
    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]
    // Just return an object and let the conversion functions handle that.
    // This way the result will be the same whether the tinycolor is initialized with string or object.


    var match;

    if (match = matchers.rgb.exec(color)) {
      return {
        r: match[1],
        g: match[2],
        b: match[3]
      };
    }

    if (match = matchers.rgba.exec(color)) {
      return {
        r: match[1],
        g: match[2],
        b: match[3],
        a: match[4]
      };
    }

    if (match = matchers.hsl.exec(color)) {
      return {
        h: match[1],
        s: match[2],
        l: match[3]
      };
    }

    if (match = matchers.hsla.exec(color)) {
      return {
        h: match[1],
        s: match[2],
        l: match[3],
        a: match[4]
      };
    }

    if (match = matchers.hsv.exec(color)) {
      return {
        h: match[1],
        s: match[2],
        v: match[3]
      };
    }

    if (match = matchers.hsva.exec(color)) {
      return {
        h: match[1],
        s: match[2],
        v: match[3],
        a: match[4]
      };
    }

    if (match = matchers.hex8.exec(color)) {
      return {
        r: parseIntFromHex(match[1]),
        g: parseIntFromHex(match[2]),
        b: parseIntFromHex(match[3]),
        a: convertHexToDecimal(match[4]),
        format: named ? "name" : "hex8"
      };
    }

    if (match = matchers.hex6.exec(color)) {
      return {
        r: parseIntFromHex(match[1]),
        g: parseIntFromHex(match[2]),
        b: parseIntFromHex(match[3]),
        format: named ? "name" : "hex"
      };
    }

    if (match = matchers.hex4.exec(color)) {
      return {
        r: parseIntFromHex(match[1] + '' + match[1]),
        g: parseIntFromHex(match[2] + '' + match[2]),
        b: parseIntFromHex(match[3] + '' + match[3]),
        a: convertHexToDecimal(match[4] + '' + match[4]),
        format: named ? "name" : "hex8"
      };
    }

    if (match = matchers.hex3.exec(color)) {
      return {
        r: parseIntFromHex(match[1] + '' + match[1]),
        g: parseIntFromHex(match[2] + '' + match[2]),
        b: parseIntFromHex(match[3] + '' + match[3]),
        format: named ? "name" : "hex"
      };
    }

    return false;
  }

  function validateWCAG2Parms(parms) {
    // return valid WCAG2 parms for isReadable.
    // If input parms are invalid, return {"level":"AA", "size":"small"}
    var level, size;
    parms = parms || {
      "level": "AA",
      "size": "small"
    };
    level = (parms.level || "AA").toUpperCase();
    size = (parms.size || "small").toLowerCase();

    if (level !== "AA" && level !== "AAA") {
      level = "AA";
    }

    if (size !== "small" && size !== "large") {
      size = "small";
    }

    return {
      "level": level,
      "size": size
    };
  } // Node: Export function


  if ( true && module.exports) {
    module.exports = tinycolor;
  } // AMD/requirejs: Define the module
  else if (true) {
      !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
        return tinycolor;
      }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    } // Browser: Expose to window
    else {}
})(Math);

/***/ }),

/***/ "5yr3":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.map.js
var es6_array_map = __webpack_require__("yIlq");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.index-of.js
var es6_array_index_of = __webpack_require__("V7cS");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.create.js
var es6_object_create = __webpack_require__("PAbq");

// CONCATENATED MODULE: ../node_modules/mitt/dist/mitt.es.js




//      
// An event handler can take an optional event argument
// and should not return a value
// An array of all currently registered event handlers for a type
// A map of event types and their corresponding event handlers.

/** Mitt: Tiny (~200b) functional event emitter / pubsub.
 *  @name mitt
 *  @returns {Mitt}
 */
function mitt(all) {
  all = all || Object.create(null);
  return {
    /**
     * Register an event handler for the given type.
     *
     * @param  {String} type	Type of event to listen for, or `"*"` for all events
     * @param  {Function} handler Function to call in response to given event
     * @memberOf mitt
     */
    on: function on(type, handler) {
      (all[type] || (all[type] = [])).push(handler);
    },

    /**
     * Remove an event handler for the given type.
     *
     * @param  {String} type	Type of event to unregister `handler` from, or `"*"`
     * @param  {Function} handler Handler function to remove
     * @memberOf mitt
     */
    off: function off(type, handler) {
      if (all[type]) {
        all[type].splice(all[type].indexOf(handler) >>> 0, 1);
      }
    },

    /**
     * Invoke all handlers for the given type.
     * If present, `"*"` handlers are invoked after type-matched handlers.
     *
     * @param {String} type  The event type to invoke
     * @param {Any} [evt]  Any value (object is recommended and powerful), passed to each handler
     * @memberOf mitt
     */
    emit: function emit(type, evt) {
      (all[type] || []).slice().map(function (handler) {
        handler(evt);
      });
      (all['*'] || []).slice().map(function (handler) {
        handler(type, evt);
      });
    }
  };
}

/* harmony default export */ var mitt_es = (mitt);
// CONCATENATED MODULE: ./.cache/emitter.js
var emitter=mitt_es();/* harmony default export */ var _cache_emitter = __webpack_exports__["a"] = (emitter);

/***/ }),

/***/ "6/FK":
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__("X6VK");
// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
$export($export.S + $export.F * !__webpack_require__("GGqZ"), 'Object', { defineProperties: __webpack_require__("pU1/") });


/***/ }),

/***/ "63Ad":
/***/ (function(module, exports) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

module.exports = _interopRequireDefault;

/***/ }),

/***/ "65Qc":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("4aJ6");

__webpack_require__("M/4x");

__webpack_require__("t91x");

__webpack_require__("GkPX");

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var GraphEvent =
/** @class */
function () {
  function GraphEvent(type, event) {
    /**
     * 是否允许冒泡
     * @type {boolean}
     */
    this.bubbles = true;
    /**
     * 触发对象
     * @type {object}
     */

    this.target = null;
    /**
     * 监听对象
     * @type {object}
     */

    this.currentTarget = null;
    /**
     * 委托对象
     * @type {object}
     */

    this.delegateTarget = null;
    /**
     * 委托事件监听对象的代理对象，即 ev.delegateObject = ev.currentTarget.get('delegateObject')
     * @type {object}
     */

    this.delegateObject = null;
    /**
     * 是否阻止了原生事件
     * @type {boolean}
     */

    this.defaultPrevented = false;
    /**
     * 是否阻止传播（向上冒泡）
     * @type {boolean}
     */

    this.propagationStopped = false;
    /**
     * 触发事件的图形
     * @type {IShape}
     */

    this.shape = null;
    /**
     * 开始触发事件的图形
     * @type {IShape}
     */

    this.fromShape = null;
    /**
     * 事件结束时的触发图形
     * @type {IShape}
     */

    this.toShape = null; // 触发事件的路径

    this.propagationPath = [];
    this.type = type;
    this.name = type;
    this.originalEvent = event;
    this.timeStamp = event.timeStamp;
  }
  /**
   * 阻止浏览器默认的行为
   */


  GraphEvent.prototype.preventDefault = function () {
    this.defaultPrevented = true;

    if (this.originalEvent.preventDefault) {
      this.originalEvent.preventDefault();
    }
  };
  /**
   * 阻止冒泡
   */


  GraphEvent.prototype.stopPropagation = function () {
    this.propagationStopped = true;
  };

  GraphEvent.prototype.toString = function () {
    var type = this.type;
    return "[Event (type=" + type + ")]";
  };

  GraphEvent.prototype.save = function () {};

  GraphEvent.prototype.restore = function () {};

  return GraphEvent;
}();

exports["default"] = GraphEvent;

/***/ }),

/***/ "67sl":
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__("TaGV");
var global = __webpack_require__("41F1");
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__("gtwY") ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "67vp":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export genCSSMotion */
/* harmony import */ var core_js_modules_es6_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("1qKx");
/* harmony import */ var core_js_modules_es6_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_object_create__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("PAbq");
/* harmony import */ var core_js_modules_es6_object_create__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_create__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("d3/y");
/* harmony import */ var core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("5hJT");
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("mXGw");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var rc_util_es_Dom_findDOMNode__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("vXvS");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("8Jek");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var raf__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("rQBY");
/* harmony import */ var raf__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(raf__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _util_motion__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("vmon");





var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var _createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
/* eslint-disable react/default-props-match-prop-types, react/no-multi-comp, react/prop-types */







var STATUS_NONE = 'none';
var STATUS_APPEAR = 'appear';
var STATUS_ENTER = 'enter';
var STATUS_LEAVE = 'leave';
/**
 * `transitionSupport` is used for none transition test case.
 * Default we use browser transition event support check.
 */

function genCSSMotion(config) {
  var transitionSupport = config;
  var forwardRef = !!react__WEBPACK_IMPORTED_MODULE_4___default.a.forwardRef;

  if (typeof config === 'object') {
    transitionSupport = config.transitionSupport;
    forwardRef = 'forwardRef' in config ? config.forwardRef : forwardRef;
  }

  function isSupportTransition(props) {
    return !!(props.motionName && transitionSupport);
  }

  var CSSMotion = function (_React$Component) {
    _inherits(CSSMotion, _React$Component);

    function CSSMotion() {
      _classCallCheck(this, CSSMotion);

      var _this = _possibleConstructorReturn(this, (CSSMotion.__proto__ || Object.getPrototypeOf(CSSMotion)).call(this));

      _this.onDomUpdate = function () {
        var _this$state = _this.state,
            status = _this$state.status,
            newStatus = _this$state.newStatus;
        var _this$props = _this.props,
            onAppearStart = _this$props.onAppearStart,
            onEnterStart = _this$props.onEnterStart,
            onLeaveStart = _this$props.onLeaveStart,
            onAppearActive = _this$props.onAppearActive,
            onEnterActive = _this$props.onEnterActive,
            onLeaveActive = _this$props.onLeaveActive,
            motionAppear = _this$props.motionAppear,
            motionEnter = _this$props.motionEnter,
            motionLeave = _this$props.motionLeave;

        if (!isSupportTransition(_this.props)) {
          return;
        } // Event injection


        var $ele = _this.getElement();

        if (_this.$cacheEle !== $ele) {
          _this.removeEventListener(_this.$cacheEle);

          _this.addEventListener($ele);

          _this.$cacheEle = $ele;
        } // Init status


        if (newStatus && status === STATUS_APPEAR && motionAppear) {
          _this.updateStatus(onAppearStart, null, null, function () {
            _this.updateActiveStatus(onAppearActive, STATUS_APPEAR);
          });
        } else if (newStatus && status === STATUS_ENTER && motionEnter) {
          _this.updateStatus(onEnterStart, null, null, function () {
            _this.updateActiveStatus(onEnterActive, STATUS_ENTER);
          });
        } else if (newStatus && status === STATUS_LEAVE && motionLeave) {
          _this.updateStatus(onLeaveStart, null, null, function () {
            _this.updateActiveStatus(onLeaveActive, STATUS_LEAVE);
          });
        }
      };

      _this.onMotionEnd = function (event) {
        var _this$state2 = _this.state,
            status = _this$state2.status,
            statusActive = _this$state2.statusActive;
        var _this$props2 = _this.props,
            onAppearEnd = _this$props2.onAppearEnd,
            onEnterEnd = _this$props2.onEnterEnd,
            onLeaveEnd = _this$props2.onLeaveEnd;

        if (status === STATUS_APPEAR && statusActive) {
          _this.updateStatus(onAppearEnd, {
            status: STATUS_NONE
          }, event);
        } else if (status === STATUS_ENTER && statusActive) {
          _this.updateStatus(onEnterEnd, {
            status: STATUS_NONE
          }, event);
        } else if (status === STATUS_LEAVE && statusActive) {
          _this.updateStatus(onLeaveEnd, {
            status: STATUS_NONE
          }, event);
        }
      };

      _this.setNodeRef = function (node) {
        var internalRef = _this.props.internalRef;
        _this.node = node;

        if (typeof internalRef === 'function') {
          internalRef(node);
        } else if (internalRef && 'current' in internalRef) {
          internalRef.current = node;
        }
      };

      _this.getElement = function () {
        try {
          return Object(rc_util_es_Dom_findDOMNode__WEBPACK_IMPORTED_MODULE_5__[/* default */ "a"])(_this.node || _this);
        } catch (e) {
          /**
           * Fallback to cache element.
           * This is only happen when `motionDeadline` trigger but element removed.
           */
          return _this.$cacheEle;
        }
      };

      _this.addEventListener = function ($ele) {
        if (!$ele) return;
        $ele.addEventListener(_util_motion__WEBPACK_IMPORTED_MODULE_8__[/* transitionEndName */ "d"], _this.onMotionEnd);
        $ele.addEventListener(_util_motion__WEBPACK_IMPORTED_MODULE_8__[/* animationEndName */ "a"], _this.onMotionEnd);
      };

      _this.removeEventListener = function ($ele) {
        if (!$ele) return;
        $ele.removeEventListener(_util_motion__WEBPACK_IMPORTED_MODULE_8__[/* transitionEndName */ "d"], _this.onMotionEnd);
        $ele.removeEventListener(_util_motion__WEBPACK_IMPORTED_MODULE_8__[/* animationEndName */ "a"], _this.onMotionEnd);
      };

      _this.updateStatus = function (styleFunc, additionalState, event, callback) {
        var statusStyle = styleFunc ? styleFunc(_this.getElement(), event) : null;
        if (statusStyle === false || _this._destroyed) return;
        var nextStep = void 0;

        if (callback) {
          nextStep = function nextStep() {
            _this.nextFrame(callback);
          };
        }

        _this.setState(_extends({
          statusStyle: typeof statusStyle === 'object' ? statusStyle : null,
          newStatus: false
        }, additionalState), nextStep); // Trigger before next frame & after `componentDidMount`

      };

      _this.updateActiveStatus = function (styleFunc, currentStatus) {
        // `setState` use `postMessage` to trigger at the end of frame.
        // Let's use requestAnimationFrame to update new state in next frame.
        _this.nextFrame(function () {
          var status = _this.state.status;
          if (status !== currentStatus) return;
          var motionDeadline = _this.props.motionDeadline;

          _this.updateStatus(styleFunc, {
            statusActive: true
          });

          if (motionDeadline > 0) {
            setTimeout(function () {
              _this.onMotionEnd({
                deadline: true
              });
            }, motionDeadline);
          }
        });
      };

      _this.nextFrame = function (func) {
        _this.cancelNextFrame();

        _this.raf = raf__WEBPACK_IMPORTED_MODULE_7___default()(func);
      };

      _this.cancelNextFrame = function () {
        if (_this.raf) {
          raf__WEBPACK_IMPORTED_MODULE_7___default.a.cancel(_this.raf);
          _this.raf = null;
        }
      };

      _this.state = {
        status: STATUS_NONE,
        statusActive: false,
        newStatus: false,
        statusStyle: null
      };
      _this.$cacheEle = null;
      _this.node = null;
      _this.raf = null;
      return _this;
    }

    _createClass(CSSMotion, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        this.onDomUpdate();
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate() {
        this.onDomUpdate();
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        this._destroyed = true;
        this.removeEventListener(this.$cacheEle);
        this.cancelNextFrame();
      }
    }, {
      key: 'render',
      value: function render() {
        var _classNames;

        var _state = this.state,
            status = _state.status,
            statusActive = _state.statusActive,
            statusStyle = _state.statusStyle;
        var _props = this.props,
            children = _props.children,
            motionName = _props.motionName,
            visible = _props.visible,
            removeOnLeave = _props.removeOnLeave,
            leavedClassName = _props.leavedClassName,
            eventProps = _props.eventProps;
        if (!children) return null;

        if (status === STATUS_NONE || !isSupportTransition(this.props)) {
          if (visible) {
            return children(_extends({}, eventProps), this.setNodeRef);
          } else if (!removeOnLeave) {
            return children(_extends({}, eventProps, {
              className: leavedClassName
            }), this.setNodeRef);
          }

          return null;
        }

        return children(_extends({}, eventProps, {
          className: classnames__WEBPACK_IMPORTED_MODULE_6___default()((_classNames = {}, _defineProperty(_classNames, Object(_util_motion__WEBPACK_IMPORTED_MODULE_8__[/* getTransitionName */ "b"])(motionName, status), status !== STATUS_NONE), _defineProperty(_classNames, Object(_util_motion__WEBPACK_IMPORTED_MODULE_8__[/* getTransitionName */ "b"])(motionName, status + '-active'), status !== STATUS_NONE && statusActive), _defineProperty(_classNames, motionName, typeof motionName === 'string'), _classNames)),
          style: statusStyle
        }), this.setNodeRef);
      }
    }], [{
      key: 'getDerivedStateFromProps',
      value: function getDerivedStateFromProps(props, _ref) {
        var prevProps = _ref.prevProps,
            prevStatus = _ref.status;
        if (!isSupportTransition(props)) return {};
        var visible = props.visible,
            motionAppear = props.motionAppear,
            motionEnter = props.motionEnter,
            motionLeave = props.motionLeave,
            motionLeaveImmediately = props.motionLeaveImmediately;
        var newState = {
          prevProps: props
        }; // Clean up status if prop set to false

        if (prevStatus === STATUS_APPEAR && !motionAppear || prevStatus === STATUS_ENTER && !motionEnter || prevStatus === STATUS_LEAVE && !motionLeave) {
          newState.status = STATUS_NONE;
          newState.statusActive = false;
          newState.newStatus = false;
        } // Appear


        if (!prevProps && visible && motionAppear) {
          newState.status = STATUS_APPEAR;
          newState.statusActive = false;
          newState.newStatus = true;
        } // Enter


        if (prevProps && !prevProps.visible && visible && motionEnter) {
          newState.status = STATUS_ENTER;
          newState.statusActive = false;
          newState.newStatus = true;
        } // Leave


        if (prevProps && prevProps.visible && !visible && motionLeave || !prevProps && motionLeaveImmediately && !visible && motionLeave) {
          newState.status = STATUS_LEAVE;
          newState.statusActive = false;
          newState.newStatus = true;
        }

        return newState;
      }
    }]);

    return CSSMotion;
  }(react__WEBPACK_IMPORTED_MODULE_4___default.a.Component);

  CSSMotion.defaultProps = {
    visible: true,
    motionEnter: true,
    motionAppear: true,
    motionLeave: true,
    removeOnLeave: true
  };

  if (!forwardRef) {
    return CSSMotion;
  }

  return react__WEBPACK_IMPORTED_MODULE_4___default.a.forwardRef(function (props, ref) {
    return react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(CSSMotion, _extends({
      internalRef: ref
    }, props));
  });
}
/* harmony default export */ __webpack_exports__["a"] = (genCSSMotion(_util_motion__WEBPACK_IMPORTED_MODULE_8__[/* supportTransition */ "c"]));

/***/ }),

/***/ "68WS":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------
// --[ Dependencies ]---------------------------------------------------

__webpack_require__("lQyR");

__webpack_require__("m1Dn");

__webpack_require__("W1QL");

__webpack_require__("K/PF");

__webpack_require__("75LO");

__webpack_require__("+3V6");

__webpack_require__("4aJ6");

__webpack_require__("M/4x");

__webpack_require__("t91x");

var assertType = __webpack_require__("yCBR");

var flEquals = __webpack_require__("Uy6E");

var fl = __webpack_require__("nl0c");

var provideAliases = __webpack_require__("JiyH");

var copyDocs = __webpack_require__("E6WT");

var _require = __webpack_require__("vgDc"),
    tagSymbol = _require.tagSymbol,
    typeSymbol = _require.typeSymbol;

var toString = Object.prototype.toString;
var prototypeOf = Object.getPrototypeOf; // --[ Helpers ]--------------------------------------------------------

/*~
 * type: (Any) => Boolean
 */

var isSetoid = function isSetoid(value) {
  return value != null && (typeof value[fl.equals] === 'function' || typeof value.equals === 'function');
};
/*~
 * type: (Variant, Variant) => Boolean
 */


var sameType = function sameType(a, b) {
  return a[typeSymbol] === b[typeSymbol] && a[tagSymbol] === b[tagSymbol];
};

var isPlainObject = function isPlainObject(object) {
  if (Object(object) !== object) return false;
  return !prototypeOf(object) || !object.toString || toString.call(object) === object.toString();
};

var deepEquals = function deepEquals(a, b) {
  if (a === b) return true;
  var leftSetoid = isSetoid(a);
  var rightSetoid = isSetoid(b);

  if (leftSetoid) {
    if (rightSetoid) return flEquals(a, b);else return false;
  }

  if (Array.isArray(a) && Array.isArray(b)) {
    return a.length === b.length && a.every(function (x, i) {
      return deepEquals(x, b[i]);
    });
  }

  if (isPlainObject(a) && isPlainObject(b)) {
    var keysA = Object.keys(a);
    var keysB = Object.keys(b);
    var setB = new Set(keysB);
    return keysA.length === keysB.length && prototypeOf(a) === prototypeOf(b) && keysA.every(function (k) {
      return setB.has(k) && a[k] === b[k];
    });
  }

  return false;
}; // --[ Implementation ]------------------------------------------------

/*~
 * stability: experimental
 * authors:
 *   - "@boris-marinov"
 * 
 * type: |
 *   (('a, 'a) => Boolean) => (Variant, Union) => Void
 */


var createDerivation = function createDerivation(valuesEqual) {
  /*~
   * type: ('a, 'a) => Boolean
   */
  var equals = function equals(a, b) {
    // identical objects must be equal
    if (a === b) return true; // we require both values to be setoids if one of them is

    var leftSetoid = isSetoid(a);
    var rightSetoid = isSetoid(b);

    if (leftSetoid) {
      if (rightSetoid) return flEquals(a, b);else return false;
    } // fall back to the provided equality


    return valuesEqual(a, b);
  };
  /*~
   * type: (Object Any, Object Any, Array String) => Boolean
   */


  var compositesEqual = function compositesEqual(a, b, keys) {
    for (var i = 0; i < keys.length; ++i) {
      var keyA = a[keys[i]];
      var keyB = b[keys[i]];

      if (!equals(keyA, keyB)) {
        return false;
      }
    }

    return true;
  };

  var derivation = function derivation(variant, adt) {
    /*~
     * stability: experimental
     * module: null
     * authors:
     *   - "@boris-marinov"
     *   - Quildreen Motta
     * 
     * type: |
     *   forall S, a:
     *     (S a).(S a) => Boolean
     *   where S is Setoid
     */
    variant.prototype.equals = function (value) {
      assertType(adt)(this[tagSymbol] + '#equals', value);
      return sameType(this, value) && compositesEqual(this, value, Object.keys(this));
    };

    provideAliases(variant.prototype);
    return variant;
  };

  copyDocs(createDerivation, derivation, {
    type: '(Variant, Union) => Void'
  });
  return derivation;
}; // --[ Exports ]-------------------------------------------------------

/*~~inheritsMeta: createDerivation */


module.exports = createDerivation(deepEquals);
module.exports.withCustomComparison = createDerivation;

/***/ }),

/***/ "6CzD":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ _toConsumableArray; });

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js
var arrayLikeToArray = __webpack_require__("YZeP");

// CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return Object(arrayLikeToArray["a" /* default */])(arr);
}
// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/iterableToArray.js
var iterableToArray = __webpack_require__("tdEy");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js
var unsupportedIterableToArray = __webpack_require__("TJjZ");

// CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
// CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js




function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || Object(iterableToArray["a" /* default */])(arr) || Object(unsupportedIterableToArray["a" /* default */])(arr) || _nonIterableSpread();
}

/***/ }),

/***/ "6Dst":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _LeftOutlined = _interopRequireDefault(__webpack_require__("tWFn"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    'default': obj
  };
}

var _default = _LeftOutlined;
exports["default"] = _default;
module.exports = _default;

/***/ }),

/***/ "6K2M":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _interopRequireDefault=__webpack_require__("63Ad");var _gatsby=__webpack_require__("Wbzz");var _catchLinks=_interopRequireDefault(__webpack_require__("TCCx"));exports.onClientEntry=function(_,pluginOptions){if(pluginOptions===void 0){pluginOptions={};}(0,_catchLinks.default)(window,pluginOptions,function(href){(0,_gatsby.navigate)(href);});};

/***/ }),

/***/ "6d4m":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 21.1.3.7 String.prototype.includes(searchString, position = 0)

var $export = __webpack_require__("X6VK");
var context = __webpack_require__("Alw5");
var INCLUDES = 'includes';

$export($export.P + $export.F * __webpack_require__("Fl7L")(INCLUDES), 'String', {
  includes: function includes(searchString /* , position = 0 */) {
    return !!~context(this, searchString, INCLUDES)
      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "6kVO":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("5hJT");

__webpack_require__("d3/y");

var _interopRequireDefault = __webpack_require__("63Ad");

var _interopRequireWildcard = __webpack_require__("vdEC");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var React = _interopRequireWildcard(__webpack_require__("mXGw"));

var _LoadingOutlined = _interopRequireDefault(__webpack_require__("q7lU"));

var _AntdIcon = _interopRequireDefault(__webpack_require__("CxZ5")); // GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY


var LoadingOutlined = function LoadingOutlined(props, ref) {
  return React.createElement(_AntdIcon["default"], Object.assign({}, props, {
    ref: ref,
    icon: _LoadingOutlined["default"]
  }));
};

LoadingOutlined.displayName = 'LoadingOutlined';

var _default = React.forwardRef(LoadingOutlined);

exports["default"] = _default;

/***/ }),

/***/ "6vZ6":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _interopRequireDefault=__webpack_require__("63Ad");var _gatsby=__webpack_require__("Wbzz");var _getManifestPathname=_interopRequireDefault(__webpack_require__("Prd0"));/* global __MANIFEST_PLUGIN_HAS_LOCALISATION__ */ // when we don't have localisation in our manifest, we tree shake everything away
if(undefined){var withPrefix=_gatsby.withAssetPrefix||_gatsby.withPrefix;exports.onRouteUpdate=function(_ref,pluginOptions){var location=_ref.location;var localize=pluginOptions.localize;var manifestFilename=(0,_getManifestPathname.default)(location.pathname,localize);var manifestEl=document.head.querySelector("link[rel=\"manifest\"]");if(manifestEl){manifestEl.setAttribute("href",withPrefix(manifestFilename));}};}

/***/ }),

/***/ "6wgB":
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__("g2rQ");
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),

/***/ "6xm/":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("9ovy");

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var each_1 = __webpack_require__("mU+h");

var is_array_1 = __webpack_require__("QAqn");

var is_string_1 = __webpack_require__("bLny");

var regexTags = /[MLHVQTCSAZ]([^MLHVQTCSAZ]*)/ig;
var regexDot = /[^\s\,]+/ig;

function parsePath(p) {
  var path = p || [];

  if (is_array_1["default"](path)) {
    return path;
  }

  if (is_string_1["default"](path)) {
    path = path.match(regexTags);
    each_1["default"](path, function (item, index) {
      // @ts-ignore
      item = item.match(regexDot);

      if (item[0].length > 1) {
        var tag = item[0].charAt(0); // @ts-ignore

        item.splice(1, 0, item[0].substr(1)); // @ts-ignore

        item[0] = tag;
      } // @ts-ignore


      each_1["default"](item, function (sub, i) {
        if (!isNaN(sub)) {
          // @ts-ignore
          item[i] = +sub;
        }
      }); // @ts-ignore

      path[index] = item;
    });
    return path;
  }
}

exports["default"] = parsePath;

/***/ }),

/***/ "6z9p":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("9ovy");

module.exports = function _functionName(f) {
  // String(x => x) evaluates to "x => x", so the pattern may not match.
  var match = String(f).match(/^function (\w*)/);
  return match == null ? '' : match[1];
};

/***/ }),

/***/ "74ju":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("4aJ6");

__webpack_require__("M/4x");

__webpack_require__("t91x");

module.exports = function _isString(x) {
  return Object.prototype.toString.call(x) === '[object String]';
};

/***/ }),

/***/ "75LO":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 Object.keys(O)
var toObject = __webpack_require__("UnHL");
var $keys = __webpack_require__("LuBU");

__webpack_require__("gRlk")('keys', function () {
  return function keys(it) {
    return $keys(toObject(it));
  };
});


/***/ }),

/***/ "7KvB":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin
module.exports = {"footer":"Footer-module--footer--24bmA","description":"Footer-module--description--SiWEE","bottom":"Footer-module--bottom--21XBa"};

/***/ }),

/***/ "7UJ8":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__("vdEC");

var _interopRequireDefault = __webpack_require__("63Ad");

exports.__esModule = true;
exports.ScrollContainer = void 0;

var _extends2 = _interopRequireDefault(__webpack_require__("8VmE"));

var _inheritsLoose2 = _interopRequireDefault(__webpack_require__("QKC2"));

var React = _interopRequireWildcard(__webpack_require__("mXGw"));

var _reactDom = _interopRequireDefault(__webpack_require__("xARA"));

var _scrollHandler = __webpack_require__("czn3");

var _router = __webpack_require__("JF+v"); // TODO: In Gatsby v3, this file should be removed.
// We are deprecating this in V2 in favor of useScrollRestoration


var hasNotWarnedDeprecation = true;

var ScrollContainerImplementation = /*#__PURE__*/function (_React$Component) {
  (0, _inheritsLoose2["default"])(ScrollContainerImplementation, _React$Component);

  function ScrollContainerImplementation(props) {
    var _this;

    _this = _React$Component.call(this, props) || this;

    if (false) {}

    return _this;
  }

  var _proto = ScrollContainerImplementation.prototype;

  _proto.componentDidMount = function componentDidMount() {
    var _this2 = this; // eslint-disable-next-line react/no-find-dom-node


    var node = _reactDom["default"].findDOMNode(this);

    var _this$props = this.props,
        location = _this$props.location,
        scrollKey = _this$props.scrollKey;
    if (!node) return;
    node.addEventListener("scroll", function () {
      _this2.props.context.save(location, scrollKey, node.scrollTop);
    });
    var position = this.props.context.read(location, scrollKey);
    node.scrollTo(0, position || 0);
  };

  _proto.render = function render() {
    return this.props.children;
  };

  return ScrollContainerImplementation;
}(React.Component);

var ScrollContainer = function ScrollContainer(props) {
  return /*#__PURE__*/React.createElement(_router.Location, null, function (_ref) {
    var location = _ref.location;
    return /*#__PURE__*/React.createElement(_scrollHandler.ScrollContext.Consumer, null, function (context) {
      return /*#__PURE__*/React.createElement(ScrollContainerImplementation, (0, _extends2["default"])({}, props, {
        context: context,
        location: location
      }));
    });
  });
};

exports.ScrollContainer = ScrollContainer;

/***/ }),

/***/ "7lGJ":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__("X6VK");
var $forEach = __webpack_require__("1wfo")(0);
var STRICT = __webpack_require__("/6rt")([].forEach, true);

$export($export.P + $export.F * !STRICT, 'Array', {
  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
  forEach: function forEach(callbackfn /* , thisArg */) {
    return $forEach(this, callbackfn, arguments[1]);
  }
});


/***/ }),

/***/ "7t+O":
/***/ (function(module, exports, __webpack_require__) {

// 20.3.3.1 / 15.9.4.4 Date.now()
var $export = __webpack_require__("X6VK");

$export($export.S, 'Date', { now: function () { return new Date().getTime(); } });


/***/ }),

/***/ "87BP":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _DownOutlined = _interopRequireDefault(__webpack_require__("bh9w"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    'default': obj
  };
}

var _default = _DownOutlined;
exports["default"] = _default;
module.exports = _default;

/***/ }),

/***/ "893G":
/***/ (function(module, exports, __webpack_require__) {

var _contains = __webpack_require__("io9E");

var _curry2 = __webpack_require__("OFPg");
/**
 * Returns `true` if the specified value is equal, in [`R.equals`](#equals)
 * terms, to at least one element of the given list; `false` otherwise.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig a -> [a] -> Boolean
 * @param {Object} a The item to compare against.
 * @param {Array} list The array to consider.
 * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.
 * @see R.any
 * @example
 *
 *      R.contains(3, [1, 2, 3]); //=> true
 *      R.contains(4, [1, 2, 3]); //=> false
 *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true
 *      R.contains([42], [[42]]); //=> true
 */


module.exports = _curry2(_contains);

/***/ }),

/***/ "8Jek":
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;__webpack_require__("+3V6");

/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/

/* global define */
(function () {
  'use strict';

  var hasOwn = {}.hasOwnProperty;

  function classNames() {
    var classes = [];

    for (var i = 0; i < arguments.length; i++) {
      var arg = arguments[i];
      if (!arg) continue;
      var argType = typeof arg;

      if (argType === 'string' || argType === 'number') {
        classes.push(arg);
      } else if (Array.isArray(arg) && arg.length) {
        var inner = classNames.apply(null, arg);

        if (inner) {
          classes.push(inner);
        }
      } else if (argType === 'object') {
        for (var key in arg) {
          if (hasOwn.call(arg, key) && arg[key]) {
            classes.push(key);
          }
        }
      }
    }

    return classes.join(' ');
  }

  if ( true && module.exports) {
    classNames["default"] = classNames;
    module.exports = classNames;
  } else if (true) {
    // register as 'classnames', consistent with npm package name
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return classNames;
    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})();

/***/ }),

/***/ "8UeR":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var line_1 = __webpack_require__("cU4Z");

var util_1 = __webpack_require__("H4Zb");

var bezier_1 = __webpack_require__("SBFf"); // 差值公式


function quadraticAt(p0, p1, p2, t) {
  var onet = 1 - t;
  return onet * onet * p0 + 2 * t * onet * p1 + t * t * p2;
} // 求极值


function extrema(p0, p1, p2) {
  var a = p0 + p2 - 2 * p1;

  if (util_1.isNumberEqual(a, 0)) {
    return [0.5];
  }

  var rst = (p0 - p1) / a;

  if (rst <= 1 && rst >= 0) {
    return [rst];
  }

  return [];
}

function derivativeAt(p0, p1, p2, t) {
  return 2 * (1 - t) * (p1 - p0) + 2 * t * (p2 - p1);
} // 分割贝塞尔曲线


function divideQuadratic(x1, y1, x2, y2, x3, y3, t) {
  // 划分点
  var xt = quadraticAt(x1, x2, x3, t);
  var yt = quadraticAt(y1, y2, y3, t); // 分割的第一条曲线的控制点

  var controlPoint1 = line_1["default"].pointAt(x1, y1, x2, y2, t); // 分割的第二条曲线的控制点

  var controlPoint2 = line_1["default"].pointAt(x2, y2, x3, y3, t);
  return [[x1, y1, controlPoint1.x, controlPoint1.y, xt, yt], [xt, yt, controlPoint2.x, controlPoint2.y, x3, y3]];
} // 使用迭代法取贝塞尔曲线的长度


function quadraticLength(x1, y1, x2, y2, x3, y3, iterationCount) {
  if (iterationCount === 0) {
    return (util_1.distance(x1, y1, x2, y2) + util_1.distance(x2, y2, x3, y3) + util_1.distance(x1, y1, x3, y3)) / 2;
  }

  var quadratics = divideQuadratic(x1, y1, x2, y2, x3, y3, 0.5);
  var left = quadratics[0];
  var right = quadratics[1];
  left.push(iterationCount - 1);
  right.push(iterationCount - 1);
  return quadraticLength.apply(null, left) + quadraticLength.apply(null, right);
}

exports["default"] = {
  box: function box(x1, y1, x2, y2, x3, y3) {
    var xExtrema = extrema(x1, x2, x3)[0];
    var yExtrema = extrema(y1, y2, y3)[0]; // 控制点不加入 box 的计算

    var xArr = [x1, x3];
    var yArr = [y1, y3];

    if (xExtrema !== undefined) {
      xArr.push(quadraticAt(x1, x2, x3, xExtrema));
    }

    if (yExtrema !== undefined) {
      yArr.push(quadraticAt(y1, y2, y3, yExtrema));
    }

    return util_1.getBBoxByArray(xArr, yArr);
  },
  length: function length(x1, y1, x2, y2, x3, y3) {
    return quadraticLength(x1, y1, x2, y2, x3, y3, 3);
  },
  nearestPoint: function nearestPoint(x1, y1, x2, y2, x3, y3, x0, y0) {
    return bezier_1.nearestPoint([x1, x2, x3], [y1, y2, y3], x0, y0, quadraticAt);
  },
  pointDistance: function pointDistance(x1, y1, x2, y2, x3, y3, x0, y0) {
    var point = this.nearestPoint(x1, y1, x2, y2, x3, y3, x0, y0);
    return util_1.distance(point.x, point.y, x0, y0);
  },
  interpolationAt: quadraticAt,
  pointAt: function pointAt(x1, y1, x2, y2, x3, y3, t) {
    return {
      x: quadraticAt(x1, x2, x3, t),
      y: quadraticAt(y1, y2, y3, t)
    };
  },
  divide: function divide(x1, y1, x2, y2, x3, y3, t) {
    return divideQuadratic(x1, y1, x2, y2, x3, y3, t);
  },
  tangentAngle: function tangentAngle(x1, y1, x2, y2, x3, y3, t) {
    var dx = derivativeAt(x1, x2, x3, t);
    var dy = derivativeAt(y1, y2, y3, t);
    var angle = Math.atan2(dy, dx);
    return util_1.piMod(angle);
  }
};

/***/ }),

/***/ "8VmE":
/***/ (function(module, exports) {

function _extends() {
  module.exports = _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

module.exports = _extends;

/***/ }),

/***/ "8Xl/":
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__("HD3J");
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "8kJd":
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__("ZVIm")('keys');
var uid = __webpack_require__("1Alt");
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),

/***/ "8oA1":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("Z8gF");

__webpack_require__("J8hF");

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var is_array_1 = __webpack_require__("QAqn");

var SPACES = "\t\n\x0B\f\r \xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029";
var PATH_COMMAND = new RegExp('([a-z])[' + SPACES + ',]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[' + SPACES + ']*,?[' + SPACES + ']*)+)', 'ig');
var PATH_VALUES = new RegExp('(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[' + SPACES + ']*,?[' + SPACES + ']*', 'ig'); // Parses given path string into an array of arrays of path segments

function parsePathString(pathString) {
  if (!pathString) {
    return null;
  }

  if (is_array_1["default"](pathString)) {
    return pathString;
  }

  var paramCounts = {
    a: 7,
    c: 6,
    o: 2,
    h: 1,
    l: 2,
    m: 2,
    r: 4,
    q: 4,
    s: 4,
    t: 2,
    v: 1,
    u: 3,
    z: 0
  };
  var data = [];
  String(pathString).replace(PATH_COMMAND, function (a, b, c) {
    var params = [];
    var name = b.toLowerCase();
    c.replace(PATH_VALUES, function (a, b) {
      b && params.push(+b);
    });

    if (name === 'm' && params.length > 2) {
      data.push([b].concat(params.splice(0, 2)));
      name = 'l';
      b = b === 'm' ? 'l' : 'L';
    }

    if (name === 'o' && params.length === 1) {
      data.push([b, params[0]]);
    }

    if (name === 'r') {
      data.push([b].concat(params));
    } else {
      while (params.length >= paramCounts[name]) {
        data.push([b].concat(params.splice(0, paramCounts[name])));

        if (!paramCounts[name]) {
          break;
        }
      }
    }

    return '';
  });
  return data;
}

exports["default"] = parsePathString;

/***/ }),

/***/ "8rx3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("5hJT");

__webpack_require__("d3/y");

var _interopRequireDefault = __webpack_require__("63Ad");

var _interopRequireWildcard = __webpack_require__("vdEC");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var React = _interopRequireWildcard(__webpack_require__("mXGw"));

var _RightOutlined = _interopRequireDefault(__webpack_require__("GYOe"));

var _AntdIcon = _interopRequireDefault(__webpack_require__("CxZ5")); // GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY


var RightOutlined = function RightOutlined(props, ref) {
  return React.createElement(_AntdIcon["default"], Object.assign({}, props, {
    ref: ref,
    icon: _RightOutlined["default"]
  }));
};

RightOutlined.displayName = 'RightOutlined';

var _default = React.forwardRef(RightOutlined);

exports["default"] = _default;

/***/ }),

/***/ "91KL":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var util_1 = __webpack_require__("H4Zb");

var ellipse_1 = __webpack_require__("Q5fm"); // 偏导数 x


function derivativeXAt(cx, cy, rx, ry, xRotation, startAngle, endAngle, angle) {
  return -1 * rx * Math.cos(xRotation) * Math.sin(angle) - ry * Math.sin(xRotation) * Math.cos(angle);
} // 偏导数 y


function derivativeYAt(cx, cy, rx, ry, xRotation, startAngle, endAngle, angle) {
  return -1 * rx * Math.sin(xRotation) * Math.sin(angle) + ry * Math.cos(xRotation) * Math.cos(angle);
} // x 的极值


function xExtrema(rx, ry, xRotation) {
  return Math.atan(-ry / rx * Math.tan(xRotation));
} // y 的极值


function yExtrema(rx, ry, xRotation) {
  return Math.atan(ry / (rx * Math.tan(xRotation)));
} // 根据角度求 x 坐标


function xAt(cx, cy, rx, ry, xRotation, angle) {
  return rx * Math.cos(xRotation) * Math.cos(angle) - ry * Math.sin(xRotation) * Math.sin(angle) + cx;
} // 根据角度求 y 坐标


function yAt(cx, cy, rx, ry, xRotation, angle) {
  return rx * Math.sin(xRotation) * Math.cos(angle) + ry * Math.cos(xRotation) * Math.sin(angle) + cy;
} // 获取点在椭圆上的角度


function getAngle(rx, ry, x0, y0) {
  var angle = Math.atan2(y0 * rx, x0 * ry); // 转换到 0 - 2PI 内

  return (angle + Math.PI * 2) % (Math.PI * 2);
} // 根据角度获取，x,y


function getPoint(rx, ry, angle) {
  return {
    x: rx * Math.cos(angle),
    y: ry * Math.sin(angle)
  };
} // 旋转


function rotate(x, y, angle) {
  var cos = Math.cos(angle);
  var sin = Math.sin(angle);
  return [x * cos - y * sin, x * sin + y * cos];
}

exports["default"] = {
  /**
   * 计算包围盒
   * @param {number} cx         圆心 x
   * @param {number} cy         圆心 y
   * @param {number} rx         x 轴方向的半径
   * @param {number} ry         y 轴方向的半径
   * @param {number} xRotation  旋转角度
   * @param {number} startAngle 起始角度
   * @param {number} endAngle   结束角度
   * @return {object} 包围盒对象
   */
  box: function box(cx, cy, rx, ry, xRotation, startAngle, endAngle) {
    var xDim = xExtrema(rx, ry, xRotation);
    var minX = Infinity;
    var maxX = -Infinity;
    var xs = [startAngle, endAngle];

    for (var i = -Math.PI * 2; i <= Math.PI * 2; i += Math.PI) {
      var xAngle = xDim + i;

      if (startAngle < endAngle) {
        if (startAngle < xAngle && xAngle < endAngle) {
          xs.push(xAngle);
        }
      } else {
        if (endAngle < xAngle && xAngle < startAngle) {
          xs.push(xAngle);
        }
      }
    }

    for (var i = 0; i < xs.length; i++) {
      var x = xAt(cx, cy, rx, ry, xRotation, xs[i]);

      if (x < minX) {
        minX = x;
      }

      if (x > maxX) {
        maxX = x;
      }
    }

    var yDim = yExtrema(rx, ry, xRotation);
    var minY = Infinity;
    var maxY = -Infinity;
    var ys = [startAngle, endAngle];

    for (var i = -Math.PI * 2; i <= Math.PI * 2; i += Math.PI) {
      var yAngle = yDim + i;

      if (startAngle < endAngle) {
        if (startAngle < yAngle && yAngle < endAngle) {
          ys.push(yAngle);
        }
      } else {
        if (endAngle < yAngle && yAngle < startAngle) {
          ys.push(yAngle);
        }
      }
    }

    for (var i = 0; i < ys.length; i++) {
      var y = yAt(cx, cy, rx, ry, xRotation, ys[i]);

      if (y < minY) {
        minY = y;
      }

      if (y > maxY) {
        maxY = y;
      }
    }

    return {
      x: minX,
      y: minY,
      width: maxX - minX,
      height: maxY - minY
    };
  },

  /**
   * 获取圆弧的长度，计算圆弧长度时不考虑旋转角度，
   * 仅跟 rx, ry, startAngle, endAngle 相关
   * @param {number} cx         圆心 x
   * @param {number} cy         圆心 y
   * @param {number} rx         x 轴方向的半径
   * @param {number} ry         y 轴方向的半径
   * @param {number} xRotation  旋转角度
   * @param {number} startAngle 起始角度
   * @param {number} endAngle   结束角度
   */
  length: function length(cx, cy, rx, ry, xRotation, startAngle, endAngle) {},

  /**
   * 获取指定点到圆弧的最近距离的点
   * @param {number} cx         圆心 x
   * @param {number} cy         圆心 y
   * @param {number} rx         x 轴方向的半径
   * @param {number} ry         y 轴方向的半径
   * @param {number} xRotation  旋转角度
   * @param {number} startAngle 起始角度
   * @param {number} endAngle   结束角度
   * @param {number} x0         指定点的 x
   * @param {number} y0         指定点的 y
   * @return {object} 到指定点最近距离的点
   */
  nearestPoint: function nearestPoint(cx, cy, rx, ry, xRotation, startAngle, endAngle, x0, y0) {
    // 将最近距离问题转换成到椭圆中心 0,0 没有旋转的椭圆问题
    var relativeVector = rotate(x0 - cx, y0 - cy, -xRotation);
    var x1 = relativeVector[0],
        y1 = relativeVector[1]; // 计算点到椭圆的最近的点

    var relativePoint = ellipse_1["default"].nearestPoint(0, 0, rx, ry, x1, y1); // 获取点在椭圆上的角度

    var angle = getAngle(rx, ry, relativePoint.x, relativePoint.y); // 点没有在圆弧上

    if (angle < startAngle) {
      // 小于起始圆弧
      relativePoint = getPoint(rx, ry, startAngle);
    } else if (angle > endAngle) {
      // 大于结束圆弧
      relativePoint = getPoint(rx, ry, endAngle);
    } // 旋转到 xRotation 的角度


    var vector = rotate(relativePoint.x, relativePoint.y, xRotation);
    return {
      x: vector[0] + cx,
      y: vector[1] + cy
    };
  },
  pointDistance: function pointDistance(cx, cy, rx, ry, xRotation, startAngle, endAngle, x0, y0) {
    var nearestPoint = this.nearestPoint(cx, cy, rx, ry, x0, y0);
    return util_1.distance(nearestPoint.x, nearestPoint.y, x0, y0);
  },
  pointAt: function pointAt(cx, cy, rx, ry, xRotation, startAngle, endAngle, t) {
    var angle = (endAngle - startAngle) * t + startAngle;
    return {
      x: xAt(cx, cy, rx, ry, xRotation, angle),
      y: yAt(cx, cy, rx, ry, xRotation, angle)
    };
  },
  tangentAngle: function tangentAngle(cx, cy, rx, ry, xRotation, startAngle, endAngle, t) {
    var angle = (endAngle - startAngle) * t + startAngle;
    var dx = derivativeXAt(cx, cy, rx, ry, xRotation, startAngle, endAngle, angle);
    var dy = derivativeYAt(cx, cy, rx, ry, xRotation, startAngle, endAngle, angle);
    return util_1.piMod(Math.atan2(dy, dx));
  }
};

/***/ }),

/***/ "94DX":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("dtzt");

__webpack_require__("V7cS");

// CodeMirror, copyright (c) by Marijn Haverbeke and others
// Distributed under an MIT license: https://codemirror.net/LICENSE
(function (mod) {
  if (true) // CommonJS
    mod(__webpack_require__("Dln1"));else {}
})(function (CodeMirror) {
  var defaults = {
    pairs: "()[]{}''\"\"",
    closeBefore: ")]}'\":;>",
    triples: "",
    explode: "[]{}"
  };
  var Pos = CodeMirror.Pos;
  CodeMirror.defineOption("autoCloseBrackets", false, function (cm, val, old) {
    if (old && old != CodeMirror.Init) {
      cm.removeKeyMap(keyMap);
      cm.state.closeBrackets = null;
    }

    if (val) {
      ensureBound(getOption(val, "pairs"));
      cm.state.closeBrackets = val;
      cm.addKeyMap(keyMap);
    }
  });

  function getOption(conf, name) {
    if (name == "pairs" && typeof conf == "string") return conf;
    if (typeof conf == "object" && conf[name] != null) return conf[name];
    return defaults[name];
  }

  var keyMap = {
    Backspace: handleBackspace,
    Enter: handleEnter
  };

  function ensureBound(chars) {
    for (var i = 0; i < chars.length; i++) {
      var ch = chars.charAt(i),
          key = "'" + ch + "'";
      if (!keyMap[key]) keyMap[key] = handler(ch);
    }
  }

  ensureBound(defaults.pairs + "`");

  function handler(ch) {
    return function (cm) {
      return handleChar(cm, ch);
    };
  }

  function getConfig(cm) {
    var deflt = cm.state.closeBrackets;
    if (!deflt || deflt.override) return deflt;
    var mode = cm.getModeAt(cm.getCursor());
    return mode.closeBrackets || deflt;
  }

  function handleBackspace(cm) {
    var conf = getConfig(cm);
    if (!conf || cm.getOption("disableInput")) return CodeMirror.Pass;
    var pairs = getOption(conf, "pairs");
    var ranges = cm.listSelections();

    for (var i = 0; i < ranges.length; i++) {
      if (!ranges[i].empty()) return CodeMirror.Pass;
      var around = charsAround(cm, ranges[i].head);
      if (!around || pairs.indexOf(around) % 2 != 0) return CodeMirror.Pass;
    }

    for (var i = ranges.length - 1; i >= 0; i--) {
      var cur = ranges[i].head;
      cm.replaceRange("", Pos(cur.line, cur.ch - 1), Pos(cur.line, cur.ch + 1), "+delete");
    }
  }

  function handleEnter(cm) {
    var conf = getConfig(cm);
    var explode = conf && getOption(conf, "explode");
    if (!explode || cm.getOption("disableInput")) return CodeMirror.Pass;
    var ranges = cm.listSelections();

    for (var i = 0; i < ranges.length; i++) {
      if (!ranges[i].empty()) return CodeMirror.Pass;
      var around = charsAround(cm, ranges[i].head);
      if (!around || explode.indexOf(around) % 2 != 0) return CodeMirror.Pass;
    }

    cm.operation(function () {
      var linesep = cm.lineSeparator() || "\n";
      cm.replaceSelection(linesep + linesep, null);
      cm.execCommand("goCharLeft");
      ranges = cm.listSelections();

      for (var i = 0; i < ranges.length; i++) {
        var line = ranges[i].head.line;
        cm.indentLine(line, null, true);
        cm.indentLine(line + 1, null, true);
      }
    });
  }

  function contractSelection(sel) {
    var inverted = CodeMirror.cmpPos(sel.anchor, sel.head) > 0;
    return {
      anchor: new Pos(sel.anchor.line, sel.anchor.ch + (inverted ? -1 : 1)),
      head: new Pos(sel.head.line, sel.head.ch + (inverted ? 1 : -1))
    };
  }

  function handleChar(cm, ch) {
    var conf = getConfig(cm);
    if (!conf || cm.getOption("disableInput")) return CodeMirror.Pass;
    var pairs = getOption(conf, "pairs");
    var pos = pairs.indexOf(ch);
    if (pos == -1) return CodeMirror.Pass;
    var closeBefore = getOption(conf, "closeBefore");
    var triples = getOption(conf, "triples");
    var identical = pairs.charAt(pos + 1) == ch;
    var ranges = cm.listSelections();
    var opening = pos % 2 == 0;
    var type;

    for (var i = 0; i < ranges.length; i++) {
      var range = ranges[i],
          cur = range.head,
          curType;
      var next = cm.getRange(cur, Pos(cur.line, cur.ch + 1));

      if (opening && !range.empty()) {
        curType = "surround";
      } else if ((identical || !opening) && next == ch) {
        if (identical && stringStartsAfter(cm, cur)) curType = "both";else if (triples.indexOf(ch) >= 0 && cm.getRange(cur, Pos(cur.line, cur.ch + 3)) == ch + ch + ch) curType = "skipThree";else curType = "skip";
      } else if (identical && cur.ch > 1 && triples.indexOf(ch) >= 0 && cm.getRange(Pos(cur.line, cur.ch - 2), cur) == ch + ch) {
        if (cur.ch > 2 && /\bstring/.test(cm.getTokenTypeAt(Pos(cur.line, cur.ch - 2)))) return CodeMirror.Pass;
        curType = "addFour";
      } else if (identical) {
        var prev = cur.ch == 0 ? " " : cm.getRange(Pos(cur.line, cur.ch - 1), cur);
        if (!CodeMirror.isWordChar(next) && prev != ch && !CodeMirror.isWordChar(prev)) curType = "both";else return CodeMirror.Pass;
      } else if (opening && (next.length === 0 || /\s/.test(next) || closeBefore.indexOf(next) > -1)) {
        curType = "both";
      } else {
        return CodeMirror.Pass;
      }

      if (!type) type = curType;else if (type != curType) return CodeMirror.Pass;
    }

    var left = pos % 2 ? pairs.charAt(pos - 1) : ch;
    var right = pos % 2 ? ch : pairs.charAt(pos + 1);
    cm.operation(function () {
      if (type == "skip") {
        cm.execCommand("goCharRight");
      } else if (type == "skipThree") {
        for (var i = 0; i < 3; i++) {
          cm.execCommand("goCharRight");
        }
      } else if (type == "surround") {
        var sels = cm.getSelections();

        for (var i = 0; i < sels.length; i++) {
          sels[i] = left + sels[i] + right;
        }

        cm.replaceSelections(sels, "around");
        sels = cm.listSelections().slice();

        for (var i = 0; i < sels.length; i++) {
          sels[i] = contractSelection(sels[i]);
        }

        cm.setSelections(sels);
      } else if (type == "both") {
        cm.replaceSelection(left + right, null);
        cm.triggerElectric(left + right);
        cm.execCommand("goCharLeft");
      } else if (type == "addFour") {
        cm.replaceSelection(left + left + left + left, "before");
        cm.execCommand("goCharRight");
      }
    });
  }

  function charsAround(cm, pos) {
    var str = cm.getRange(Pos(pos.line, pos.ch - 1), Pos(pos.line, pos.ch + 1));
    return str.length == 2 ? str : null;
  }

  function stringStartsAfter(cm, pos) {
    var token = cm.getTokenAt(Pos(pos.line, pos.ch + 1));
    return /\bstring/.test(token.type) && token.start == pos.ch && (pos.ch == 0 || !/\bstring/.test(cm.getTokenTypeAt(pos)));
  }
});

/***/ }),

/***/ "94VI":
/***/ (function(module, exports) {

exports.polyfill=function(Component){return Component;};

/***/ }),

/***/ "9Bb+":
/***/ (function(module, exports, __webpack_require__) {

var aFunction = __webpack_require__("b8Rm");
var toObject = __webpack_require__("UnHL");
var IObject = __webpack_require__("Cmsx");
var toLength = __webpack_require__("Sp5b");

module.exports = function (that, callbackfn, aLen, memo, isRight) {
  aFunction(callbackfn);
  var O = toObject(that);
  var self = IObject(O);
  var length = toLength(O.length);
  var index = isRight ? length - 1 : 0;
  var i = isRight ? -1 : 1;
  if (aLen < 2) for (;;) {
    if (index in self) {
      memo = self[index];
      index += i;
      break;
    }
    index += i;
    if (isRight ? index < 0 : length <= index) {
      throw TypeError('Reduce of empty array with no initial value');
    }
  }
  for (;isRight ? index >= 0 : length > index; index += i) if (index in self) {
    memo = callbackfn(memo, self[index], index, O);
  }
  return memo;
};


/***/ }),

/***/ "9K2m":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


__webpack_require__("+jjx");

__webpack_require__("ABKx");

var b = "function" === typeof Symbol && Symbol["for"],
    c = b ? Symbol["for"]("react.element") : 60103,
    d = b ? Symbol["for"]("react.portal") : 60106,
    e = b ? Symbol["for"]("react.fragment") : 60107,
    f = b ? Symbol["for"]("react.strict_mode") : 60108,
    g = b ? Symbol["for"]("react.profiler") : 60114,
    h = b ? Symbol["for"]("react.provider") : 60109,
    k = b ? Symbol["for"]("react.context") : 60110,
    l = b ? Symbol["for"]("react.async_mode") : 60111,
    m = b ? Symbol["for"]("react.concurrent_mode") : 60111,
    n = b ? Symbol["for"]("react.forward_ref") : 60112,
    p = b ? Symbol["for"]("react.suspense") : 60113,
    q = b ? Symbol["for"]("react.suspense_list") : 60120,
    r = b ? Symbol["for"]("react.memo") : 60115,
    t = b ? Symbol["for"]("react.lazy") : 60116,
    v = b ? Symbol["for"]("react.block") : 60121,
    w = b ? Symbol["for"]("react.fundamental") : 60117,
    x = b ? Symbol["for"]("react.responder") : 60118,
    y = b ? Symbol["for"]("react.scope") : 60119;

function z(a) {
  if ("object" === typeof a && null !== a) {
    var u = a.$$typeof;

    switch (u) {
      case c:
        switch (a = a.type, a) {
          case l:
          case m:
          case e:
          case g:
          case f:
          case p:
            return a;

          default:
            switch (a = a && a.$$typeof, a) {
              case k:
              case n:
              case t:
              case r:
              case h:
                return a;

              default:
                return u;
            }

        }

      case d:
        return u;
    }
  }
}

function A(a) {
  return z(a) === m;
}

exports.AsyncMode = l;
exports.ConcurrentMode = m;
exports.ContextConsumer = k;
exports.ContextProvider = h;
exports.Element = c;
exports.ForwardRef = n;
exports.Fragment = e;
exports.Lazy = t;
exports.Memo = r;
exports.Portal = d;
exports.Profiler = g;
exports.StrictMode = f;
exports.Suspense = p;

exports.isAsyncMode = function (a) {
  return A(a) || z(a) === l;
};

exports.isConcurrentMode = A;

exports.isContextConsumer = function (a) {
  return z(a) === k;
};

exports.isContextProvider = function (a) {
  return z(a) === h;
};

exports.isElement = function (a) {
  return "object" === typeof a && null !== a && a.$$typeof === c;
};

exports.isForwardRef = function (a) {
  return z(a) === n;
};

exports.isFragment = function (a) {
  return z(a) === e;
};

exports.isLazy = function (a) {
  return z(a) === t;
};

exports.isMemo = function (a) {
  return z(a) === r;
};

exports.isPortal = function (a) {
  return z(a) === d;
};

exports.isProfiler = function (a) {
  return z(a) === g;
};

exports.isStrictMode = function (a) {
  return z(a) === f;
};

exports.isSuspense = function (a) {
  return z(a) === p;
};

exports.isValidElementType = function (a) {
  return "string" === typeof a || "function" === typeof a || a === e || a === m || a === g || a === f || a === p || a === q || "object" === typeof a && null !== a && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n || a.$$typeof === w || a.$$typeof === x || a.$$typeof === y || a.$$typeof === v);
};

exports.typeOf = z;

/***/ }),

/***/ "9XxO":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("4aJ6");

__webpack_require__("M/4x");

__webpack_require__("t91x");

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var is_nil_1 = __webpack_require__("SS24");

exports["default"] = function (value) {
  if (is_nil_1["default"](value)) return '';
  return value.toString();
};

/***/ }),

/***/ "9dxi":
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__("ZVIm")('wks');
var uid = __webpack_require__("1Alt");
var Symbol = __webpack_require__("P56o").Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),

/***/ "9liC":
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__("b8Rm");
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "9ovy":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var anObject = __webpack_require__("PAFS");
var toLength = __webpack_require__("Sp5b");
var advanceStringIndex = __webpack_require__("dVhv");
var regExpExec = __webpack_require__("Fu0I");

// @@match logic
__webpack_require__("Wifh")('match', 1, function (defined, MATCH, $match, maybeCallNative) {
  return [
    // `String.prototype.match` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.match
    function match(regexp) {
      var O = defined(this);
      var fn = regexp == undefined ? undefined : regexp[MATCH];
      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
    },
    // `RegExp.prototype[@@match]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match
    function (regexp) {
      var res = maybeCallNative($match, regexp, this);
      if (res.done) return res.value;
      var rx = anObject(regexp);
      var S = String(this);
      if (!rx.global) return regExpExec(rx, S);
      var fullUnicode = rx.unicode;
      rx.lastIndex = 0;
      var A = [];
      var n = 0;
      var result;
      while ((result = regExpExec(rx, S)) !== null) {
        var matchStr = String(result[0]);
        A[n] = matchStr;
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
        n++;
      }
      return n === 0 ? null : A;
    }
  ];
});


/***/ }),

/***/ "9p7t":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__("X6VK");
var $filter = __webpack_require__("1wfo")(2);

$export($export.P + $export.F * !__webpack_require__("/6rt")([].filter, true), 'Array', {
  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
  filter: function filter(callbackfn /* , thisArg */) {
    return $filter(this, callbackfn, arguments[1]);
  }
});


/***/ }),

/***/ "A1KM":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__("ezc+");
var toObject = __webpack_require__("UnHL");
var IE_PROTO = __webpack_require__("8kJd")('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),

/***/ "ABKx":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// ECMAScript 6 symbols shim
var global = __webpack_require__("P56o");
var has = __webpack_require__("ezc+");
var DESCRIPTORS = __webpack_require__("GGqZ");
var $export = __webpack_require__("X6VK");
var redefine = __webpack_require__("sU/p");
var META = __webpack_require__("zIP/").KEY;
var $fails = __webpack_require__("E7Vc");
var shared = __webpack_require__("ZVIm");
var setToStringTag = __webpack_require__("jPEw");
var uid = __webpack_require__("1Alt");
var wks = __webpack_require__("9dxi");
var wksExt = __webpack_require__("fxUj");
var wksDefine = __webpack_require__("z6KD");
var enumKeys = __webpack_require__("ltS6");
var isArray = __webpack_require__("Xfku");
var anObject = __webpack_require__("PAFS");
var isObject = __webpack_require__("Bsg+");
var toObject = __webpack_require__("UnHL");
var toIObject = __webpack_require__("ml72");
var toPrimitive = __webpack_require__("5MU4");
var createDesc = __webpack_require__("WWmS");
var _create = __webpack_require__("Vx+c");
var gOPNExt = __webpack_require__("UYXy");
var $GOPD = __webpack_require__("1Tj+");
var $GOPS = __webpack_require__("0oPD");
var $DP = __webpack_require__("U1KF");
var $keys = __webpack_require__("LuBU");
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function' && !!$GOPS.f;
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  __webpack_require__("zIds").f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__("IdFN").f = $propertyIsEnumerable;
  $GOPS.f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !__webpack_require__("wEu9")) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
var FAILS_ON_PRIMITIVES = $fails(function () { $GOPS.f(1); });

$export($export.S + $export.F * FAILS_ON_PRIMITIVES, 'Object', {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return $GOPS.f(toObject(it));
  }
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__("tjmq")($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);


/***/ }),

/***/ "ACU4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__("X6VK");
var toObject = __webpack_require__("UnHL");
var toPrimitive = __webpack_require__("5MU4");

$export($export.P + $export.F * __webpack_require__("E7Vc")(function () {
  return new Date(NaN).toJSON() !== null
    || Date.prototype.toJSON.call({ toISOString: function () { return 1; } }) !== 1;
}), 'Date', {
  // eslint-disable-next-line no-unused-vars
  toJSON: function toJSON(key) {
    var O = toObject(this);
    var pv = toPrimitive(O);
    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
  }
});


/***/ }),

/***/ "ADe/":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("fGh/");
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),

/***/ "AFnJ":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("CAwg");
module.exports = __webpack_require__("TaGV").Object.assign;


/***/ }),

/***/ "AKAt":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "e", function() { return /* reexport */ graph_event; });
__webpack_require__.d(__webpack_exports__, "d", function() { return /* reexport */ base; });
__webpack_require__.d(__webpack_exports__, "a", function() { return /* reexport */ abstract_canvas; });
__webpack_require__.d(__webpack_exports__, "b", function() { return /* reexport */ abstract_group; });
__webpack_require__.d(__webpack_exports__, "c", function() { return /* reexport */ abstract_shape; });
__webpack_require__.d(__webpack_exports__, "f", function() { return /* reexport */ path_namespaceObject; });

// UNUSED EXPORTS: version

// NAMESPACE OBJECT: ../node_modules/@antv/g-base/esm/util/path.js
var path_namespaceObject = {};
__webpack_require__.r(path_namespaceObject);
__webpack_require__.d(path_namespaceObject, "catmullRomToBezier", function() { return catmullRomToBezier; });
__webpack_require__.d(path_namespaceObject, "fillPath", function() { return fillPath; });
__webpack_require__.d(path_namespaceObject, "fillPathByDiff", function() { return fillPathByDiff; });
__webpack_require__.d(path_namespaceObject, "formatPath", function() { return formatPath; });
__webpack_require__.d(path_namespaceObject, "intersection", function() { return intersection; });
__webpack_require__.d(path_namespaceObject, "parsePathArray", function() { return parsePathArray; });
__webpack_require__.d(path_namespaceObject, "parsePathString", function() { return path_parsePathString; });
__webpack_require__.d(path_namespaceObject, "pathToAbsolute", function() { return pathToAbsolute; });
__webpack_require__.d(path_namespaceObject, "pathToCurve", function() { return pathToCurve; });
__webpack_require__.d(path_namespaceObject, "rectPath", function() { return rectPath; });

// NAMESPACE OBJECT: ../node_modules/d3-ease/src/index.js
var src_namespaceObject = {};
__webpack_require__.r(src_namespaceObject);
__webpack_require__.d(src_namespaceObject, "easeLinear", function() { return linear; });
__webpack_require__.d(src_namespaceObject, "easeQuad", function() { return quadInOut; });
__webpack_require__.d(src_namespaceObject, "easeQuadIn", function() { return quadIn; });
__webpack_require__.d(src_namespaceObject, "easeQuadOut", function() { return quadOut; });
__webpack_require__.d(src_namespaceObject, "easeQuadInOut", function() { return quadInOut; });
__webpack_require__.d(src_namespaceObject, "easeCubic", function() { return cubicInOut; });
__webpack_require__.d(src_namespaceObject, "easeCubicIn", function() { return cubicIn; });
__webpack_require__.d(src_namespaceObject, "easeCubicOut", function() { return cubicOut; });
__webpack_require__.d(src_namespaceObject, "easeCubicInOut", function() { return cubicInOut; });
__webpack_require__.d(src_namespaceObject, "easePoly", function() { return polyInOut; });
__webpack_require__.d(src_namespaceObject, "easePolyIn", function() { return polyIn; });
__webpack_require__.d(src_namespaceObject, "easePolyOut", function() { return polyOut; });
__webpack_require__.d(src_namespaceObject, "easePolyInOut", function() { return polyInOut; });
__webpack_require__.d(src_namespaceObject, "easeSin", function() { return sinInOut; });
__webpack_require__.d(src_namespaceObject, "easeSinIn", function() { return sinIn; });
__webpack_require__.d(src_namespaceObject, "easeSinOut", function() { return sinOut; });
__webpack_require__.d(src_namespaceObject, "easeSinInOut", function() { return sinInOut; });
__webpack_require__.d(src_namespaceObject, "easeExp", function() { return expInOut; });
__webpack_require__.d(src_namespaceObject, "easeExpIn", function() { return expIn; });
__webpack_require__.d(src_namespaceObject, "easeExpOut", function() { return expOut; });
__webpack_require__.d(src_namespaceObject, "easeExpInOut", function() { return expInOut; });
__webpack_require__.d(src_namespaceObject, "easeCircle", function() { return circleInOut; });
__webpack_require__.d(src_namespaceObject, "easeCircleIn", function() { return circleIn; });
__webpack_require__.d(src_namespaceObject, "easeCircleOut", function() { return circleOut; });
__webpack_require__.d(src_namespaceObject, "easeCircleInOut", function() { return circleInOut; });
__webpack_require__.d(src_namespaceObject, "easeBounce", function() { return bounceOut; });
__webpack_require__.d(src_namespaceObject, "easeBounceIn", function() { return bounceIn; });
__webpack_require__.d(src_namespaceObject, "easeBounceOut", function() { return bounceOut; });
__webpack_require__.d(src_namespaceObject, "easeBounceInOut", function() { return bounceInOut; });
__webpack_require__.d(src_namespaceObject, "easeBack", function() { return backInOut; });
__webpack_require__.d(src_namespaceObject, "easeBackIn", function() { return backIn; });
__webpack_require__.d(src_namespaceObject, "easeBackOut", function() { return backOut; });
__webpack_require__.d(src_namespaceObject, "easeBackInOut", function() { return backInOut; });
__webpack_require__.d(src_namespaceObject, "easeElastic", function() { return elasticOut; });
__webpack_require__.d(src_namespaceObject, "easeElasticIn", function() { return elasticIn; });
__webpack_require__.d(src_namespaceObject, "easeElasticOut", function() { return elasticOut; });
__webpack_require__.d(src_namespaceObject, "easeElasticInOut", function() { return elasticInOut; });

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.reduce.js
var es6_array_reduce = __webpack_require__("3y5y");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.map.js
var es6_array_map = __webpack_require__("yIlq");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.split.js
var es6_regexp_split = __webpack_require__("asZ9");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.replace.js
var es6_regexp_replace = __webpack_require__("Z8gF");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.constructor.js
var es6_regexp_constructor = __webpack_require__("J8hF");

// EXTERNAL MODULE: ../node_modules/@antv/util/esm/index.js + 105 modules
var esm = __webpack_require__("NFQX");

// CONCATENATED MODULE: ../node_modules/@antv/g-base/esm/util/path.js






var SPACES = "\t\n\x0B\f\r \xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029";
var PATH_COMMAND = new RegExp("([a-z])[" + SPACES + ",]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[" + SPACES + "]*,?[" + SPACES + "]*)+)", 'ig');
var PATH_VALUES = new RegExp("(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[" + SPACES + "]*,?[" + SPACES + "]*", 'ig'); // Parse given path string into an array of arrays of path segments

var path_parsePathString = function parsePathString(pathString) {
  if (!pathString) {
    return null;
  }

  if (Object(esm["isArray"])(pathString)) {
    return pathString;
  }

  var paramCounts = {
    a: 7,
    c: 6,
    o: 2,
    h: 1,
    l: 2,
    m: 2,
    r: 4,
    q: 4,
    s: 4,
    t: 2,
    v: 1,
    u: 3,
    z: 0
  };
  var data = [];
  String(pathString).replace(PATH_COMMAND, function (a, b, c) {
    var params = [];
    var name = b.toLowerCase();
    c.replace(PATH_VALUES, function (a, b) {
      b && params.push(+b);
    });

    if (name === 'm' && params.length > 2) {
      data.push([b].concat(params.splice(0, 2)));
      name = 'l';
      b = b === 'm' ? 'l' : 'L';
    }

    if (name === 'o' && params.length === 1) {
      data.push([b, params[0]]);
    }

    if (name === 'r') {
      data.push([b].concat(params));
    } else {
      while (params.length >= paramCounts[name]) {
        data.push([b].concat(params.splice(0, paramCounts[name])));

        if (!paramCounts[name]) {
          break;
        }
      }
    }

    return pathString;
  });
  return data;
}; // http://schepers.cc/getting-to-the-point


var catmullRomToBezier = function catmullRomToBezier(crp, z) {
  var d = []; // @ts-ignore

  for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {
    var p = [{
      x: +crp[i - 2],
      y: +crp[i - 1]
    }, {
      x: +crp[i],
      y: +crp[i + 1]
    }, {
      x: +crp[i + 2],
      y: +crp[i + 3]
    }, {
      x: +crp[i + 4],
      y: +crp[i + 5]
    }];

    if (z) {
      if (!i) {
        p[0] = {
          x: +crp[iLen - 2],
          y: +crp[iLen - 1]
        };
      } else if (iLen - 4 === i) {
        p[3] = {
          x: +crp[0],
          y: +crp[1]
        };
      } else if (iLen - 2 === i) {
        p[2] = {
          x: +crp[0],
          y: +crp[1]
        };
        p[3] = {
          x: +crp[2],
          y: +crp[3]
        };
      }
    } else {
      if (iLen - 4 === i) {
        p[3] = p[2];
      } else if (!i) {
        p[0] = {
          x: +crp[i],
          y: +crp[i + 1]
        };
      }
    }

    d.push(['C', (-p[0].x + 6 * p[1].x + p[2].x) / 6, (-p[0].y + 6 * p[1].y + p[2].y) / 6, (p[1].x + 6 * p[2].x - p[3].x) / 6, (p[1].y + 6 * p[2].y - p[3].y) / 6, p[2].x, p[2].y]);
  }

  return d;
};

var ellipsePath = function ellipsePath(x, y, rx, ry, a) {
  var res = [];

  if (a === null && ry === null) {
    ry = rx;
  }

  x = +x;
  y = +y;
  rx = +rx;
  ry = +ry;

  if (a !== null) {
    var rad = Math.PI / 180;
    var x1 = x + rx * Math.cos(-ry * rad);
    var x2 = x + rx * Math.cos(-a * rad);
    var y1 = y + rx * Math.sin(-ry * rad);
    var y2 = y + rx * Math.sin(-a * rad);
    res = [['M', x1, y1], ['A', rx, rx, 0, +(a - ry > 180), 0, x2, y2]];
  } else {
    res = [['M', x, y], ['m', 0, -ry], ['a', rx, ry, 0, 1, 1, 0, 2 * ry], ['a', rx, ry, 0, 1, 1, 0, -2 * ry], ['z']];
  }

  return res;
};

var pathToAbsolute = function pathToAbsolute(pathArray) {
  pathArray = path_parsePathString(pathArray);

  if (!pathArray || !pathArray.length) {
    return [['M', 0, 0]];
  }

  var res = [];
  var x = 0;
  var y = 0;
  var mx = 0;
  var my = 0;
  var start = 0;
  var pa0;
  var dots;

  if (pathArray[0][0] === 'M') {
    x = +pathArray[0][1];
    y = +pathArray[0][2];
    mx = x;
    my = y;
    start++;
    res[0] = ['M', x, y];
  }

  var crz = pathArray.length === 3 && pathArray[0][0] === 'M' && pathArray[1][0].toUpperCase() === 'R' && pathArray[2][0].toUpperCase() === 'Z';

  for (var r = void 0, pa = void 0, i = start, ii = pathArray.length; i < ii; i++) {
    res.push(r = []);
    pa = pathArray[i];
    pa0 = pa[0];

    if (pa0 !== pa0.toUpperCase()) {
      r[0] = pa0.toUpperCase();

      switch (r[0]) {
        case 'A':
          r[1] = pa[1];
          r[2] = pa[2];
          r[3] = pa[3];
          r[4] = pa[4];
          r[5] = pa[5];
          r[6] = +pa[6] + x;
          r[7] = +pa[7] + y;
          break;

        case 'V':
          r[1] = +pa[1] + y;
          break;

        case 'H':
          r[1] = +pa[1] + x;
          break;

        case 'R':
          dots = [x, y].concat(pa.slice(1));

          for (var j = 2, jj = dots.length; j < jj; j++) {
            dots[j] = +dots[j] + x;
            dots[++j] = +dots[j] + y;
          }

          res.pop();
          res = res.concat(catmullRomToBezier(dots, crz));
          break;

        case 'O':
          res.pop();
          dots = ellipsePath(x, y, pa[1], pa[2]);
          dots.push(dots[0]);
          res = res.concat(dots);
          break;

        case 'U':
          res.pop();
          res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));
          r = ['U'].concat(res[res.length - 1].slice(-2));
          break;

        case 'M':
          mx = +pa[1] + x;
          my = +pa[2] + y;
          break;
        // for lint

        default:
          for (var j = 1, jj = pa.length; j < jj; j++) {
            r[j] = +pa[j] + (j % 2 ? x : y);
          }

      }
    } else if (pa0 === 'R') {
      dots = [x, y].concat(pa.slice(1));
      res.pop();
      res = res.concat(catmullRomToBezier(dots, crz));
      r = ['R'].concat(pa.slice(-2));
    } else if (pa0 === 'O') {
      res.pop();
      dots = ellipsePath(x, y, pa[1], pa[2]);
      dots.push(dots[0]);
      res = res.concat(dots);
    } else if (pa0 === 'U') {
      res.pop();
      res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));
      r = ['U'].concat(res[res.length - 1].slice(-2));
    } else {
      for (var k = 0, kk = pa.length; k < kk; k++) {
        r[k] = pa[k];
      }
    }

    pa0 = pa0.toUpperCase();

    if (pa0 !== 'O') {
      switch (r[0]) {
        case 'Z':
          x = +mx;
          y = +my;
          break;

        case 'H':
          x = r[1];
          break;

        case 'V':
          y = r[1];
          break;

        case 'M':
          mx = r[r.length - 2];
          my = r[r.length - 1];
          break;
        // for lint

        default:
          x = r[r.length - 2];
          y = r[r.length - 1];
      }
    }
  }

  return res;
};

var l2c = function l2c(x1, y1, x2, y2) {
  return [x1, y1, x2, y2, x2, y2];
};

var q2c = function q2c(x1, y1, ax, ay, x2, y2) {
  var _13 = 1 / 3;

  var _23 = 2 / 3;

  return [_13 * x1 + _23 * ax, _13 * y1 + _23 * ay, _13 * x2 + _23 * ax, _13 * y2 + _23 * ay, x2, y2];
};

var a2c = function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {
  // for more information of where this math came from visit:
  // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes
  if (rx === ry) {
    rx += 1;
  }

  var _120 = Math.PI * 120 / 180;

  var rad = Math.PI / 180 * (+angle || 0);
  var res = [];
  var xy;
  var f1;
  var f2;
  var cx;
  var cy;

  var rotate = function rotate(x, y, rad) {
    var X = x * Math.cos(rad) - y * Math.sin(rad);
    var Y = x * Math.sin(rad) + y * Math.cos(rad);
    return {
      x: X,
      y: Y
    };
  };

  if (!recursive) {
    xy = rotate(x1, y1, -rad);
    x1 = xy.x;
    y1 = xy.y;
    xy = rotate(x2, y2, -rad);
    x2 = xy.x;
    y2 = xy.y;

    if (x1 === x2 && y1 === y2) {
      // 若弧的起始点和终点重叠则错开一点
      x2 += 1;
      y2 += 1;
    } // const cos = Math.cos(Math.PI / 180 * angle);
    // const sin = Math.sin(Math.PI / 180 * angle);


    var x = (x1 - x2) / 2;
    var y = (y1 - y2) / 2;
    var h = x * x / (rx * rx) + y * y / (ry * ry);

    if (h > 1) {
      h = Math.sqrt(h);
      rx = h * rx;
      ry = h * ry;
    }

    var rx2 = rx * rx;
    var ry2 = ry * ry;
    var k = (large_arc_flag === sweep_flag ? -1 : 1) * Math.sqrt(Math.abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x)));
    cx = k * rx * y / ry + (x1 + x2) / 2;
    cy = k * -ry * x / rx + (y1 + y2) / 2; // @ts-ignore

    f1 = Math.asin(((y1 - cy) / ry).toFixed(9)); // @ts-ignore

    f2 = Math.asin(((y2 - cy) / ry).toFixed(9));
    f1 = x1 < cx ? Math.PI - f1 : f1;
    f2 = x2 < cx ? Math.PI - f2 : f2;
    f1 < 0 && (f1 = Math.PI * 2 + f1);
    f2 < 0 && (f2 = Math.PI * 2 + f2);

    if (sweep_flag && f1 > f2) {
      f1 = f1 - Math.PI * 2;
    }

    if (!sweep_flag && f2 > f1) {
      f2 = f2 - Math.PI * 2;
    }
  } else {
    f1 = recursive[0];
    f2 = recursive[1];
    cx = recursive[2];
    cy = recursive[3];
  }

  var df = f2 - f1;

  if (Math.abs(df) > _120) {
    var f2old = f2;
    var x2old = x2;
    var y2old = y2;
    f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);
    x2 = cx + rx * Math.cos(f2);
    y2 = cy + ry * Math.sin(f2);
    res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);
  }

  df = f2 - f1;
  var c1 = Math.cos(f1);
  var s1 = Math.sin(f1);
  var c2 = Math.cos(f2);
  var s2 = Math.sin(f2);
  var t = Math.tan(df / 4);
  var hx = 4 / 3 * rx * t;
  var hy = 4 / 3 * ry * t;
  var m1 = [x1, y1];
  var m2 = [x1 + hx * s1, y1 - hy * c1];
  var m3 = [x2 + hx * s2, y2 - hy * c2];
  var m4 = [x2, y2];
  m2[0] = 2 * m1[0] - m2[0];
  m2[1] = 2 * m1[1] - m2[1];

  if (recursive) {
    return [m2, m3, m4].concat(res);
  }

  res = [m2, m3, m4].concat(res).join().split(',');
  var newres = [];

  for (var i = 0, ii = res.length; i < ii; i++) {
    newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;
  }

  return newres;
};

var pathToCurve = function pathToCurve(path, path2) {
  var p = pathToAbsolute(path);
  var p2 = path2 && pathToAbsolute(path2);
  var attrs = {
    x: 0,
    y: 0,
    bx: 0,
    by: 0,
    X: 0,
    Y: 0,
    qx: null,
    qy: null
  };
  var attrs2 = {
    x: 0,
    y: 0,
    bx: 0,
    by: 0,
    X: 0,
    Y: 0,
    qx: null,
    qy: null
  };
  var pcoms1 = []; // path commands of original path p

  var pcoms2 = []; // path commands of original path p2

  var pfirst = ''; // temporary holder for original path command

  var pcom = ''; // holder for previous path command of original path

  var ii;

  var processPath = function processPath(path, d, pcom) {
    var nx;
    var ny;

    if (!path) {
      return ['C', d.x, d.y, d.x, d.y, d.x, d.y];
    }

    !(path[0] in {
      T: 1,
      Q: 1
    }) && (d.qx = d.qy = null);

    switch (path[0]) {
      case 'M':
        d.X = path[1];
        d.Y = path[2];
        break;

      case 'A':
        path = ['C'].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));
        break;

      case 'S':
        if (pcom === 'C' || pcom === 'S') {
          // In "S" case we have to take into account, if the previous command is C/S.
          nx = d.x * 2 - d.bx; // And reflect the previous

          ny = d.y * 2 - d.by; // command's control point relative to the current point.
        } else {
          // or some else or nothing
          nx = d.x;
          ny = d.y;
        }

        path = ['C', nx, ny].concat(path.slice(1));
        break;

      case 'T':
        if (pcom === 'Q' || pcom === 'T') {
          // In "T" case we have to take into account, if the previous command is Q/T.
          d.qx = d.x * 2 - d.qx; // And make a reflection similar

          d.qy = d.y * 2 - d.qy; // to case "S".
        } else {
          // or something else or nothing
          d.qx = d.x;
          d.qy = d.y;
        }

        path = ['C'].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));
        break;

      case 'Q':
        d.qx = path[1];
        d.qy = path[2];
        path = ['C'].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));
        break;

      case 'L':
        path = ['C'].concat(l2c(d.x, d.y, path[1], path[2]));
        break;

      case 'H':
        path = ['C'].concat(l2c(d.x, d.y, path[1], d.y));
        break;

      case 'V':
        path = ['C'].concat(l2c(d.x, d.y, d.x, path[1]));
        break;

      case 'Z':
        path = ['C'].concat(l2c(d.x, d.y, d.X, d.Y));
        break;

      default:
        break;
    }

    return path;
  };

  var fixArc = function fixArc(pp, i) {
    if (pp[i].length > 7) {
      pp[i].shift();
      var pi = pp[i];

      while (pi.length) {
        pcoms1[i] = 'A'; // if created multiple C:s, their original seg is saved

        p2 && (pcoms2[i] = 'A'); // the same as above

        pp.splice(i++, 0, ['C'].concat(pi.splice(0, 6)));
      }

      pp.splice(i, 1);
      ii = Math.max(p.length, p2 && p2.length || 0);
    }
  };

  var fixM = function fixM(path1, path2, a1, a2, i) {
    if (path1 && path2 && path1[i][0] === 'M' && path2[i][0] !== 'M') {
      path2.splice(i, 0, ['M', a2.x, a2.y]);
      a1.bx = 0;
      a1.by = 0;
      a1.x = path1[i][1];
      a1.y = path1[i][2];
      ii = Math.max(p.length, p2 && p2.length || 0);
    }
  };

  ii = Math.max(p.length, p2 && p2.length || 0);

  for (var i = 0; i < ii; i++) {
    p[i] && (pfirst = p[i][0]); // save current path command

    if (pfirst !== 'C') {
      // C is not saved yet, because it may be result of conversion
      pcoms1[i] = pfirst; // Save current path command

      i && (pcom = pcoms1[i - 1]); // Get previous path command pcom
    }

    p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath

    if (pcoms1[i] !== 'A' && pfirst === 'C') pcoms1[i] = 'C'; // A is the only command
    // which may produce multiple C:s
    // so we have to make sure that C is also C in original path

    fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1

    if (p2) {
      // the same procedures is done to p2
      p2[i] && (pfirst = p2[i][0]);

      if (pfirst !== 'C') {
        pcoms2[i] = pfirst;
        i && (pcom = pcoms2[i - 1]);
      }

      p2[i] = processPath(p2[i], attrs2, pcom);

      if (pcoms2[i] !== 'A' && pfirst === 'C') {
        pcoms2[i] = 'C';
      }

      fixArc(p2, i);
    }

    fixM(p, p2, attrs, attrs2, i);
    fixM(p2, p, attrs2, attrs, i);
    var seg = p[i];
    var seg2 = p2 && p2[i];
    var seglen = seg.length;
    var seg2len = p2 && seg2.length;
    attrs.x = seg[seglen - 2];
    attrs.y = seg[seglen - 1];
    attrs.bx = parseFloat(seg[seglen - 4]) || attrs.x;
    attrs.by = parseFloat(seg[seglen - 3]) || attrs.y;
    attrs2.bx = p2 && (parseFloat(seg2[seg2len - 4]) || attrs2.x);
    attrs2.by = p2 && (parseFloat(seg2[seg2len - 3]) || attrs2.y);
    attrs2.x = p2 && seg2[seg2len - 2];
    attrs2.y = p2 && seg2[seg2len - 1];
  }

  return p2 ? [p, p2] : p;
};

var p2s = /,?([a-z]),?/gi;

var parsePathArray = function parsePathArray(path) {
  return path.join(',').replace(p2s, '$1');
};

var base3 = function base3(t, p1, p2, p3, p4) {
  var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4;
  var t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;
  return t * t2 - 3 * p1 + 3 * p2;
};

var bezlen = function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {
  if (z === null) {
    z = 1;
  }

  z = z > 1 ? 1 : z < 0 ? 0 : z;
  var z2 = z / 2;
  var n = 12;
  var Tvalues = [-0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699, 0.7699, -0.9041, 0.9041, -0.9816, 0.9816];
  var Cvalues = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472];
  var sum = 0;

  for (var i = 0; i < n; i++) {
    var ct = z2 * Tvalues[i] + z2;
    var xbase = base3(ct, x1, x2, x3, x4);
    var ybase = base3(ct, y1, y2, y3, y4);
    var comb = xbase * xbase + ybase * ybase;
    sum += Cvalues[i] * Math.sqrt(comb);
  }

  return z2 * sum;
};

var curveDim = function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {
  var tvalues = [];
  var bounds = [[], []];
  var a;
  var b;
  var c;
  var t;

  for (var i = 0; i < 2; ++i) {
    if (i === 0) {
      b = 6 * x0 - 12 * x1 + 6 * x2;
      a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;
      c = 3 * x1 - 3 * x0;
    } else {
      b = 6 * y0 - 12 * y1 + 6 * y2;
      a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;
      c = 3 * y1 - 3 * y0;
    }

    if (Math.abs(a) < 1e-12) {
      if (Math.abs(b) < 1e-12) {
        continue;
      }

      t = -c / b;

      if (t > 0 && t < 1) {
        tvalues.push(t);
      }

      continue;
    }

    var b2ac = b * b - 4 * c * a;
    var sqrtb2ac = Math.sqrt(b2ac);

    if (b2ac < 0) {
      continue;
    }

    var t1 = (-b + sqrtb2ac) / (2 * a);

    if (t1 > 0 && t1 < 1) {
      tvalues.push(t1);
    }

    var t2 = (-b - sqrtb2ac) / (2 * a);

    if (t2 > 0 && t2 < 1) {
      tvalues.push(t2);
    }
  }

  var j = tvalues.length;
  var jlen = j;
  var mt;

  while (j--) {
    t = tvalues[j];
    mt = 1 - t;
    bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;
    bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;
  }

  bounds[0][jlen] = x0;
  bounds[1][jlen] = y0;
  bounds[0][jlen + 1] = x3;
  bounds[1][jlen + 1] = y3;
  bounds[0].length = bounds[1].length = jlen + 2;
  return {
    min: {
      x: Math.min.apply(0, bounds[0]),
      y: Math.min.apply(0, bounds[1])
    },
    max: {
      x: Math.max.apply(0, bounds[0]),
      y: Math.max.apply(0, bounds[1])
    }
  };
};

var intersect = function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {
  if (Math.max(x1, x2) < Math.min(x3, x4) || Math.min(x1, x2) > Math.max(x3, x4) || Math.max(y1, y2) < Math.min(y3, y4) || Math.min(y1, y2) > Math.max(y3, y4)) {
    return;
  }

  var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4);
  var ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4);
  var denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);

  if (!denominator) {
    return;
  }

  var px = nx / denominator;
  var py = ny / denominator;
  var px2 = +px.toFixed(2);
  var py2 = +py.toFixed(2);

  if (px2 < +Math.min(x1, x2).toFixed(2) || px2 > +Math.max(x1, x2).toFixed(2) || px2 < +Math.min(x3, x4).toFixed(2) || px2 > +Math.max(x3, x4).toFixed(2) || py2 < +Math.min(y1, y2).toFixed(2) || py2 > +Math.max(y1, y2).toFixed(2) || py2 < +Math.min(y3, y4).toFixed(2) || py2 > +Math.max(y3, y4).toFixed(2)) {
    return;
  }

  return {
    x: px,
    y: py
  };
};

var isPointInsideBBox = function isPointInsideBBox(bbox, x, y) {
  return x >= bbox.x && x <= bbox.x + bbox.width && y >= bbox.y && y <= bbox.y + bbox.height;
};

var rectPath = function rectPath(x, y, w, h, r) {
  if (r) {
    return [['M', +x + +r, y], ['l', w - r * 2, 0], ['a', r, r, 0, 0, 1, r, r], ['l', 0, h - r * 2], ['a', r, r, 0, 0, 1, -r, r], ['l', r * 2 - w, 0], ['a', r, r, 0, 0, 1, -r, -r], ['l', 0, r * 2 - h], ['a', r, r, 0, 0, 1, r, -r], ['z']];
  }

  var res = [['M', x, y], ['l', w, 0], ['l', 0, h], ['l', -w, 0], ['z']]; // @ts-ignore

  res.parsePathArray = parsePathArray;
  return res;
};

var path_box = function box(x, y, width, height) {
  if (x === null) {
    x = y = width = height = 0;
  }

  if (y === null) {
    y = x.y;
    width = x.width;
    height = x.height;
    x = x.x;
  }

  return {
    x: x,
    y: y,
    width: width,
    w: width,
    height: height,
    h: height,
    x2: x + width,
    y2: y + height,
    cx: x + width / 2,
    cy: y + height / 2,
    r1: Math.min(width, height) / 2,
    r2: Math.max(width, height) / 2,
    r0: Math.sqrt(width * width + height * height) / 2,
    path: rectPath(x, y, width, height),
    vb: [x, y, width, height].join(' ')
  };
};

var isBBoxIntersect = function isBBoxIntersect(bbox1, bbox2) {
  bbox1 = path_box(bbox1);
  bbox2 = path_box(bbox2);
  return isPointInsideBBox(bbox2, bbox1.x, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2) || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x) && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);
};

var path_bezierBBox = function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {
  if (!Object(esm["isArray"])(p1x)) {
    p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];
  }

  var bbox = curveDim.apply(null, p1x);
  return path_box(bbox.min.x, bbox.min.y, bbox.max.x - bbox.min.x, bbox.max.y - bbox.min.y);
};

var findDotsAtSegment = function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {
  var t1 = 1 - t;
  var t13 = Math.pow(t1, 3);
  var t12 = Math.pow(t1, 2);
  var t2 = t * t;
  var t3 = t2 * t;
  var x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x;
  var y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y;
  var mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x);
  var my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y);
  var nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x);
  var ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y);
  var ax = t1 * p1x + t * c1x;
  var ay = t1 * p1y + t * c1y;
  var cx = t1 * c2x + t * p2x;
  var cy = t1 * c2y + t * p2y;
  var alpha = 90 - Math.atan2(mx - nx, my - ny) * 180 / Math.PI; // (mx > nx || my < ny) && (alpha += 180);

  return {
    x: x,
    y: y,
    m: {
      x: mx,
      y: my
    },
    n: {
      x: nx,
      y: ny
    },
    start: {
      x: ax,
      y: ay
    },
    end: {
      x: cx,
      y: cy
    },
    alpha: alpha
  };
};

var interHelper = function interHelper(bez1, bez2, justCount) {
  var bbox1 = path_bezierBBox(bez1);
  var bbox2 = path_bezierBBox(bez2);

  if (!isBBoxIntersect(bbox1, bbox2)) {
    return justCount ? 0 : [];
  }

  var l1 = bezlen.apply(0, bez1);
  var l2 = bezlen.apply(0, bez2);
  var n1 = ~~(l1 / 8);
  var n2 = ~~(l2 / 8);
  var dots1 = [];
  var dots2 = [];
  var xy = {};
  var res = justCount ? 0 : [];

  for (var i = 0; i < n1 + 1; i++) {
    var d = findDotsAtSegment.apply(0, bez1.concat(i / n1));
    dots1.push({
      x: d.x,
      y: d.y,
      t: i / n1
    });
  }

  for (var i = 0; i < n2 + 1; i++) {
    var d = findDotsAtSegment.apply(0, bez2.concat(i / n2));
    dots2.push({
      x: d.x,
      y: d.y,
      t: i / n2
    });
  }

  for (var i = 0; i < n1; i++) {
    for (var j = 0; j < n2; j++) {
      var di = dots1[i];
      var di1 = dots1[i + 1];
      var dj = dots2[j];
      var dj1 = dots2[j + 1];
      var ci = Math.abs(di1.x - di.x) < 0.001 ? 'y' : 'x';
      var cj = Math.abs(dj1.x - dj.x) < 0.001 ? 'y' : 'x';
      var is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);

      if (is) {
        if (xy[is.x.toFixed(4)] === is.y.toFixed(4)) {
          continue;
        }

        xy[is.x.toFixed(4)] = is.y.toFixed(4);
        var t1 = di.t + Math.abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t);
        var t2 = dj.t + Math.abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);

        if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {
          if (justCount) {
            // @ts-ignore
            res += 1;
          } else {
            // @ts-ignore
            res.push({
              x: is.x,
              y: is.y,
              t1: t1,
              t2: t2
            });
          }
        }
      }
    }
  }

  return res;
};

var interPathHelper = function interPathHelper(path1, path2, justCount) {
  path1 = pathToCurve(path1);
  path2 = pathToCurve(path2);
  var x1;
  var y1;
  var x2;
  var y2;
  var x1m;
  var y1m;
  var x2m;
  var y2m;
  var bez1;
  var bez2;
  var res = justCount ? 0 : [];

  for (var i = 0, ii = path1.length; i < ii; i++) {
    var pi = path1[i];

    if (pi[0] === 'M') {
      x1 = x1m = pi[1];
      y1 = y1m = pi[2];
    } else {
      if (pi[0] === 'C') {
        bez1 = [x1, y1].concat(pi.slice(1));
        x1 = bez1[6];
        y1 = bez1[7];
      } else {
        bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];
        x1 = x1m;
        y1 = y1m;
      }

      for (var j = 0, jj = path2.length; j < jj; j++) {
        var pj = path2[j];

        if (pj[0] === 'M') {
          x2 = x2m = pj[1];
          y2 = y2m = pj[2];
        } else {
          if (pj[0] === 'C') {
            bez2 = [x2, y2].concat(pj.slice(1));
            x2 = bez2[6];
            y2 = bez2[7];
          } else {
            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];
            x2 = x2m;
            y2 = y2m;
          }

          var intr = interHelper(bez1, bez2, justCount);

          if (justCount) {
            // @ts-ignore
            res += intr;
          } else {
            // @ts-ignore
            for (var k = 0, kk = intr.length; k < kk; k++) {
              intr[k].segment1 = i;
              intr[k].segment2 = j;
              intr[k].bez1 = bez1;
              intr[k].bez2 = bez2;
            } // @ts-ignore


            res = res.concat(intr);
          }
        }
      }
    }
  }

  return res;
};

var intersection = function intersection(path1, path2) {
  return interPathHelper(path1, path2);
};

function decasteljau(points, t) {
  var left = [];
  var right = [];

  function recurse(points, t) {
    if (points.length === 1) {
      left.push(points[0]);
      right.push(points[0]);
    } else {
      var middlePoints = [];

      for (var i = 0; i < points.length - 1; i++) {
        if (i === 0) {
          left.push(points[0]);
        }

        if (i === points.length - 2) {
          right.push(points[i + 1]);
        }

        middlePoints[i] = [(1 - t) * points[i][0] + t * points[i + 1][0], (1 - t) * points[i][1] + t * points[i + 1][1]];
      }

      recurse(middlePoints, t);
    }
  }

  if (points.length) {
    recurse(points, t);
  }

  return {
    left: left,
    right: right.reverse()
  };
}

function splitCurve(start, end, count) {
  var points = [[start[1], start[2]]];
  count = count || 2;
  var segments = [];

  if (end[0] === 'A') {
    points.push(end[6]);
    points.push(end[7]);
  } else if (end[0] === 'C') {
    points.push([end[1], end[2]]);
    points.push([end[3], end[4]]);
    points.push([end[5], end[6]]);
  } else if (end[0] === 'S' || end[0] === 'Q') {
    points.push([end[1], end[2]]);
    points.push([end[3], end[4]]);
  } else {
    points.push([end[1], end[2]]);
  }

  var leftSegments = points;
  var t = 1 / count;

  for (var i = 0; i < count - 1; i++) {
    var rt = t / (1 - t * i);
    var split = decasteljau(leftSegments, rt);
    segments.push(split.left);
    leftSegments = split.right;
  }

  segments.push(leftSegments);
  var result = segments.map(function (segment) {
    var cmd = [];

    if (segment.length === 4) {
      cmd.push('C');
      cmd = cmd.concat(segment[2]);
    }

    if (segment.length >= 3) {
      if (segment.length === 3) {
        cmd.push('Q');
      }

      cmd = cmd.concat(segment[1]);
    }

    if (segment.length === 2) {
      cmd.push('L');
    }

    cmd = cmd.concat(segment[segment.length - 1]);
    return cmd;
  });
  return result;
}

var splitSegment = function splitSegment(start, end, count) {
  if (count === 1) {
    return [[].concat(start)];
  }

  var segments = [];

  if (end[0] === 'L' || end[0] === 'C' || end[0] === 'Q') {
    segments = segments.concat(splitCurve(start, end, count));
  } else {
    var temp = [].concat(start);

    if (temp[0] === 'M') {
      temp[0] = 'L';
    }

    for (var i = 0; i <= count - 1; i++) {
      segments.push(temp);
    }
  }

  return segments;
};

var fillPath = function fillPath(source, target) {
  if (source.length === 1) {
    return source;
  }

  var sourceLen = source.length - 1;
  var targetLen = target.length - 1;
  var ratio = sourceLen / targetLen;
  var segmentsToFill = [];

  if (source.length === 1 && source[0][0] === 'M') {
    for (var i = 0; i < targetLen - sourceLen; i++) {
      source.push(source[0]);
    }

    return source;
  }

  for (var i = 0; i < targetLen; i++) {
    var index = Math.floor(ratio * i);
    segmentsToFill[index] = (segmentsToFill[index] || 0) + 1;
  }

  var filled = segmentsToFill.reduce(function (filled, count, i) {
    if (i === sourceLen) {
      return filled.concat(source[sourceLen]);
    }

    return filled.concat(splitSegment(source[i], source[i + 1], count));
  }, []);
  filled.unshift(source[0]);

  if (target[targetLen] === 'Z' || target[targetLen] === 'z') {
    filled.push('Z');
  }

  return filled;
};

var path_isEqual = function isEqual(obj1, obj2) {
  if (obj1.length !== obj2.length) {
    return false;
  }

  var result = true;
  Object(esm["each"])(obj1, function (item, i) {
    if (item !== obj2[i]) {
      result = false;
      return false;
    }
  });
  return result;
};

function getMinDiff(del, add, modify) {
  var type = null;
  var min = modify;

  if (add < min) {
    min = add;
    type = 'add';
  }

  if (del < min) {
    min = del;
    type = 'del';
  }

  return {
    type: type,
    min: min
  };
}
/*
 * https://en.wikipedia.org/wiki/Levenshtein_distance
 * 计算两条path的编辑距离
 */


var levenshteinDistance = function levenshteinDistance(source, target) {
  var sourceLen = source.length;
  var targetLen = target.length;
  var sourceSegment;
  var targetSegment;
  var temp = 0;

  if (sourceLen === 0 || targetLen === 0) {
    return null;
  }

  var dist = [];

  for (var i = 0; i <= sourceLen; i++) {
    dist[i] = [];
    dist[i][0] = {
      min: i
    };
  }

  for (var j = 0; j <= targetLen; j++) {
    dist[0][j] = {
      min: j
    };
  }

  for (var i = 1; i <= sourceLen; i++) {
    sourceSegment = source[i - 1];

    for (var j = 1; j <= targetLen; j++) {
      targetSegment = target[j - 1];

      if (path_isEqual(sourceSegment, targetSegment)) {
        temp = 0;
      } else {
        temp = 1;
      }

      var del = dist[i - 1][j].min + 1;
      var add = dist[i][j - 1].min + 1;
      var modify = dist[i - 1][j - 1].min + temp;
      dist[i][j] = getMinDiff(del, add, modify);
    }
  }

  return dist;
};

var fillPathByDiff = function fillPathByDiff(source, target) {
  var diffMatrix = levenshteinDistance(source, target);
  var sourceLen = source.length;
  var targetLen = target.length;
  var changes = [];
  var index = 1;
  var minPos = 1; // 如果source和target不是完全不相等

  if (diffMatrix[sourceLen][targetLen].min !== sourceLen) {
    // 获取从source到target所需改动
    for (var i = 1; i <= sourceLen; i++) {
      var min = diffMatrix[i][i].min;
      minPos = i;

      for (var j = index; j <= targetLen; j++) {
        if (diffMatrix[i][j].min < min) {
          min = diffMatrix[i][j].min;
          minPos = j;
        }
      }

      index = minPos;

      if (diffMatrix[i][index].type) {
        changes.push({
          index: i - 1,
          type: diffMatrix[i][index].type
        });
      }
    } // 对source进行增删path


    for (var i = changes.length - 1; i >= 0; i--) {
      index = changes[i].index;

      if (changes[i].type === 'add') {
        source.splice(index, 0, [].concat(source[index]));
      } else {
        source.splice(index, 1);
      }
    }
  } // source尾部补齐


  sourceLen = source.length;
  var diff = targetLen - sourceLen;

  if (sourceLen < targetLen) {
    for (var i = 0; i < diff; i++) {
      if (source[sourceLen - 1][0] === 'z' || source[sourceLen - 1][0] === 'Z') {
        source.splice(sourceLen - 2, 0, source[sourceLen - 2]);
      } else {
        source.push(source[sourceLen - 1]);
      }

      sourceLen += 1;
    }
  }

  return source;
}; // 将两个点均分成count个点


function _splitPoints(points, former, count) {
  var result = [].concat(points);
  var index;
  var t = 1 / (count + 1);

  var formerEnd = _getSegmentPoints(former)[0];

  for (var i = 1; i <= count; i++) {
    t *= i;
    index = Math.floor(points.length * t);

    if (index === 0) {
      result.unshift([formerEnd[0] * t + points[index][0] * (1 - t), formerEnd[1] * t + points[index][1] * (1 - t)]);
    } else {
      result.splice(index, 0, [formerEnd[0] * t + points[index][0] * (1 - t), formerEnd[1] * t + points[index][1] * (1 - t)]);
    }
  }

  return result;
}
/*
 * 抽取pathSegment中的关键点
 * M,L,A,Q,H,V一个端点
 * Q, S抽取一个端点，一个控制点
 * C抽取一个端点，两个控制点
 */


function _getSegmentPoints(segment) {
  var points = [];

  switch (segment[0]) {
    case 'M':
      points.push([segment[1], segment[2]]);
      break;

    case 'L':
      points.push([segment[1], segment[2]]);
      break;

    case 'A':
      points.push([segment[6], segment[7]]);
      break;

    case 'Q':
      points.push([segment[3], segment[4]]);
      points.push([segment[1], segment[2]]);
      break;

    case 'T':
      points.push([segment[1], segment[2]]);
      break;

    case 'C':
      points.push([segment[5], segment[6]]);
      points.push([segment[1], segment[2]]);
      points.push([segment[3], segment[4]]);
      break;

    case 'S':
      points.push([segment[3], segment[4]]);
      points.push([segment[1], segment[2]]);
      break;

    case 'H':
      points.push([segment[1], segment[1]]);
      break;

    case 'V':
      points.push([segment[1], segment[1]]);
      break;

    default:
  }

  return points;
}

var formatPath = function formatPath(fromPath, toPath) {
  if (fromPath.length <= 1) {
    return fromPath;
  }

  var points;

  for (var i = 0; i < toPath.length; i++) {
    if (fromPath[i][0] !== toPath[i][0]) {
      // 获取fromPath的pathSegment的端点，根据toPath的指令对其改造
      points = _getSegmentPoints(fromPath[i]);

      switch (toPath[i][0]) {
        case 'M':
          fromPath[i] = ['M'].concat(points[0]);
          break;

        case 'L':
          fromPath[i] = ['L'].concat(points[0]);
          break;

        case 'A':
          fromPath[i] = [].concat(toPath[i]);
          fromPath[i][6] = points[0][0];
          fromPath[i][7] = points[0][1];
          break;

        case 'Q':
          if (points.length < 2) {
            if (i > 0) {
              points = _splitPoints(points, fromPath[i - 1], 1);
            } else {
              fromPath[i] = toPath[i];
              break;
            }
          }

          fromPath[i] = ['Q'].concat(points.reduce(function (arr, i) {
            return arr.concat(i);
          }, []));
          break;

        case 'T':
          fromPath[i] = ['T'].concat(points[0]);
          break;

        case 'C':
          if (points.length < 3) {
            if (i > 0) {
              points = _splitPoints(points, fromPath[i - 1], 2);
            } else {
              fromPath[i] = toPath[i];
              break;
            }
          }

          fromPath[i] = ['C'].concat(points.reduce(function (arr, i) {
            return arr.concat(i);
          }, []));
          break;

        case 'S':
          if (points.length < 2) {
            if (i > 0) {
              points = _splitPoints(points, fromPath[i - 1], 1);
            } else {
              fromPath[i] = toPath[i];
              break;
            }
          }

          fromPath[i] = ['S'].concat(points.reduce(function (arr, i) {
            return arr.concat(i);
          }, []));
          break;

        default:
          fromPath[i] = toPath[i];
      }
    }
  }

  return fromPath;
};


// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.to-string.js
var es6_regexp_to_string = __webpack_require__("4aJ6");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.date.to-string.js
var es6_date_to_string = __webpack_require__("M/4x");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.to-string.js
var es6_object_to_string = __webpack_require__("t91x");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.function.name.js
var es6_function_name = __webpack_require__("GkPX");

// CONCATENATED MODULE: ../node_modules/@antv/g-base/esm/event/graph-event.js





var GraphEvent =
/** @class */
function () {
  function GraphEvent(type, event) {
    /**
     * 是否允许冒泡
     * @type {boolean}
     */
    this.bubbles = true;
    /**
     * 触发对象
     * @type {object}
     */

    this.target = null;
    /**
     * 监听对象
     * @type {object}
     */

    this.currentTarget = null;
    /**
     * 委托对象
     * @type {object}
     */

    this.delegateTarget = null;
    /**
     * 委托事件监听对象的代理对象，即 ev.delegateObject = ev.currentTarget.get('delegateObject')
     * @type {object}
     */

    this.delegateObject = null;
    /**
     * 是否阻止了原生事件
     * @type {boolean}
     */

    this.defaultPrevented = false;
    /**
     * 是否阻止传播（向上冒泡）
     * @type {boolean}
     */

    this.propagationStopped = false;
    /**
     * 触发事件的图形
     * @type {IShape}
     */

    this.shape = null;
    /**
     * 开始触发事件的图形
     * @type {IShape}
     */

    this.fromShape = null;
    /**
     * 事件结束时的触发图形
     * @type {IShape}
     */

    this.toShape = null; // 触发事件的路径

    this.propagationPath = [];
    this.type = type;
    this.name = type;
    this.originalEvent = event;
    this.timeStamp = event.timeStamp;
  }
  /**
   * 阻止浏览器默认的行为
   */


  GraphEvent.prototype.preventDefault = function () {
    this.defaultPrevented = true;

    if (this.originalEvent.preventDefault) {
      this.originalEvent.preventDefault();
    }
  };
  /**
   * 阻止冒泡
   */


  GraphEvent.prototype.stopPropagation = function () {
    this.propagationStopped = true;
  };

  GraphEvent.prototype.toString = function () {
    var type = this.type;
    return "[Event (type=" + type + ")]";
  };

  GraphEvent.prototype.save = function () {};

  GraphEvent.prototype.restore = function () {};

  return GraphEvent;
}();

/* harmony default export */ var graph_event = (GraphEvent);
// EXTERNAL MODULE: ../node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__("bb6g");

// EXTERNAL MODULE: ../node_modules/@antv/event-emitter/esm/index.js
var event_emitter_esm = __webpack_require__("g3ZY");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.index-of.js
var es6_array_index_of = __webpack_require__("V7cS");

// EXTERNAL MODULE: ../node_modules/@antv/util/lib/is-nil.js
var is_nil = __webpack_require__("SS24");
var is_nil_default = /*#__PURE__*/__webpack_require__.n(is_nil);

// EXTERNAL MODULE: ../node_modules/@antv/util/lib/is-function.js
var is_function = __webpack_require__("joUm");
var is_function_default = /*#__PURE__*/__webpack_require__.n(is_function);

// EXTERNAL MODULE: ../node_modules/@antv/util/lib/is-string.js
var is_string = __webpack_require__("bLny");
var is_string_default = /*#__PURE__*/__webpack_require__.n(is_string);

// EXTERNAL MODULE: ../node_modules/@antv/util/lib/is-object.js
var is_object = __webpack_require__("JN4+");
var is_object_default = /*#__PURE__*/__webpack_require__.n(is_object);

// EXTERNAL MODULE: ../node_modules/@antv/util/lib/is-array.js
var is_array = __webpack_require__("QAqn");

// EXTERNAL MODULE: ../node_modules/@antv/util/lib/mix.js
var mix = __webpack_require__("hjsu");
var mix_default = /*#__PURE__*/__webpack_require__.n(mix);

// EXTERNAL MODULE: ../node_modules/@antv/util/lib/each.js
var each = __webpack_require__("mU+h");
var each_default = /*#__PURE__*/__webpack_require__.n(each);

// EXTERNAL MODULE: ../node_modules/@antv/util/lib/upper-first.js
var upper_first = __webpack_require__("tR8E");
var upper_first_default = /*#__PURE__*/__webpack_require__.n(upper_first);

// CONCATENATED MODULE: ../node_modules/@antv/g-base/esm/util/util.js

function removeFromArray(arr, obj) {
  var index = arr.indexOf(obj);

  if (index !== -1) {
    arr.splice(index, 1);
  }
}
var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';







 // 是否元素的父容器

function isParent(container, shape) {
  // 所有 shape 都是 canvas 的子元素
  if (container.isCanvas()) {
    return true;
  }

  var parent = shape.getParent();
  var isParent = false;

  while (parent) {
    if (parent === container) {
      isParent = true;
      break;
    }

    parent = parent.getParent();
  }

  return isParent;
}
function isAllowCapture(element) {
  // @ts-ignore
  return element.cfg.visible && element.cfg.capture;
}
// CONCATENATED MODULE: ../node_modules/@antv/g-base/esm/abstract/base.js




var base_Base =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Base, _super);

  function Base(cfg) {
    var _this = _super.call(this) || this;
    /**
     * 是否被销毁
     * @type {boolean}
     */


    _this.destroyed = false;

    var defaultCfg = _this.getDefaultCfg();

    _this.cfg = mix_default()(defaultCfg, cfg);
    return _this;
  }
  /**
   * @protected
   * 默认的配置项
   * @returns {object} 默认的配置项
   */


  Base.prototype.getDefaultCfg = function () {
    return {};
  }; // 实现接口的方法


  Base.prototype.get = function (name) {
    return this.cfg[name];
  }; // 实现接口的方法


  Base.prototype.set = function (name, value) {
    this.cfg[name] = value;
  }; // 实现接口的方法


  Base.prototype.destroy = function () {
    this.cfg = {
      destroyed: true
    };
    this.off();
    this.destroyed = true;
  };

  return Base;
}(event_emitter_esm["a" /* default */]);

/* harmony default export */ var base = (base_Base);
// EXTERNAL MODULE: ../node_modules/@antv/g-base/node_modules/detect-browser/es/index.js
var es = __webpack_require__("c+5F");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.find.js
var es6_array_find = __webpack_require__("it7j");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.sort.js
var es6_array_sort = __webpack_require__("U8p0");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.filter.js
var es6_array_filter = __webpack_require__("9p7t");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.for-each.js
var es6_array_for_each = __webpack_require__("7lGJ");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.string.repeat.js
var es6_string_repeat = __webpack_require__("NhxO");

// EXTERNAL MODULE: ../node_modules/@antv/matrix-util/esm/index.js + 2 modules
var matrix_util_esm = __webpack_require__("iXSg");

// CONCATENATED MODULE: ../node_modules/@antv/g-base/esm/util/matrix.js
/**
 * @fileoverview 矩阵运算，本来是要引入 gl-matrix, 但是考虑到 g-mobile 对大小有限制，同时 g-webgl 使用的 matrix 不一致
 * 所以，这里仅实现 2D 几个运算，上层自己引入 gl-matrix
 * @author dxq613@gmail.com
 */

/**
 * 3阶矩阵相乘
 * @param {number[]} a 矩阵1
 * @param {number[]} b 矩阵2
 */
function multiplyMatrix(a, b) {
  var out = [];
  var a00 = a[0];
  var a01 = a[1];
  var a02 = a[2];
  var a10 = a[3];
  var a11 = a[4];
  var a12 = a[5];
  var a20 = a[6];
  var a21 = a[7];
  var a22 = a[8];
  var b00 = b[0];
  var b01 = b[1];
  var b02 = b[2];
  var b10 = b[3];
  var b11 = b[4];
  var b12 = b[5];
  var b20 = b[6];
  var b21 = b[7];
  var b22 = b[8];
  out[0] = b00 * a00 + b01 * a10 + b02 * a20;
  out[1] = b00 * a01 + b01 * a11 + b02 * a21;
  out[2] = b00 * a02 + b01 * a12 + b02 * a22;
  out[3] = b10 * a00 + b11 * a10 + b12 * a20;
  out[4] = b10 * a01 + b11 * a11 + b12 * a21;
  out[5] = b10 * a02 + b11 * a12 + b12 * a22;
  out[6] = b20 * a00 + b21 * a10 + b22 * a20;
  out[7] = b20 * a01 + b21 * a11 + b22 * a21;
  out[8] = b20 * a02 + b21 * a12 + b22 * a22;
  return out;
}
/**
 * 3阶矩阵同2阶向量相乘
 * @param {number[]} m 矩阵
 * @param {number[]} v 二阶向量
 */

function multiplyVec2(m, v) {
  var out = [];
  var x = v[0];
  var y = v[1];
  out[0] = m[0] * x + m[3] * y + m[6];
  out[1] = m[1] * x + m[4] * y + m[7];
  return out;
}
/**
 * 矩阵的逆
 * @param {number[]} a 矩阵
 */

function invert(a) {
  var out = [];
  var a00 = a[0];
  var a01 = a[1];
  var a02 = a[2];
  var a10 = a[3];
  var a11 = a[4];
  var a12 = a[5];
  var a20 = a[6];
  var a21 = a[7];
  var a22 = a[8];
  var b01 = a22 * a11 - a12 * a21;
  var b11 = -a22 * a10 + a12 * a20;
  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant

  var det = a00 * b01 + a01 * b11 + a02 * b21;

  if (!det) {
    return null;
  }

  det = 1.0 / det;
  out[0] = b01 * det;
  out[1] = (-a22 * a01 + a02 * a21) * det;
  out[2] = (a12 * a01 - a02 * a11) * det;
  out[3] = b11 * det;
  out[4] = (a22 * a00 - a02 * a20) * det;
  out[5] = (-a12 * a00 + a02 * a10) * det;
  out[6] = b21 * det;
  out[7] = (-a21 * a00 + a01 * a20) * det;
  out[8] = (a11 * a00 - a01 * a10) * det;
  return out;
}
// CONCATENATED MODULE: ../node_modules/@antv/g-base/esm/abstract/element.js










var MATRIX = 'matrix';
var CLONE_CFGS = ['zIndex', 'capture', 'visible', 'type']; // 可以在 toAttrs 中设置，但不属于绘图属性的字段

var RESERVED_PORPS = ['repeat'];
var DELEGATION_SPLIT = ':';
var WILDCARD = '*'; // 需要考虑数组嵌套数组的场景
// 数组嵌套对象的场景不考虑

function _cloneArrayAttr(arr) {
  var result = [];

  for (var i = 0; i < arr.length; i++) {
    if (Object(esm["isArray"])(arr[i])) {
      result.push([].concat(arr[i]));
    } else {
      result.push(arr[i]);
    }
  }

  return result;
}

function getFormatFromAttrs(toAttrs, shape) {
  var fromAttrs = {};
  var attrs = shape.attrs;

  for (var k in toAttrs) {
    fromAttrs[k] = attrs[k];
  }

  return fromAttrs;
}

function getFormatToAttrs(props, shape) {
  var toAttrs = {};
  var attrs = shape.attr();
  Object(esm["each"])(props, function (v, k) {
    if (RESERVED_PORPS.indexOf(k) === -1 && !Object(esm["isEqual"])(attrs[k], v)) {
      toAttrs[k] = v;
    }
  });
  return toAttrs;
}

function checkExistedAttrs(animations, animation) {
  if (animation.onFrame) {
    return animations;
  }

  var startTime = animation.startTime,
      delay = animation.delay,
      duration = animation.duration;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  Object(esm["each"])(animations, function (item) {
    // 后一个动画开始执行的时间 < 前一个动画的结束时间 && 后一个动画的执行时间 > 前一个动画的延迟
    if (startTime + delay < item.startTime + item.delay + item.duration && duration > item.delay) {
      Object(esm["each"])(animation.toAttrs, function (v, k) {
        if (hasOwnProperty.call(item.toAttrs, k)) {
          delete item.toAttrs[k];
          delete item.fromAttrs[k];
        }
      });
    }
  });
  return animations;
}

var element_Element =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Element, _super);

  function Element(cfg) {
    var _this = _super.call(this, cfg) || this;
    /**
     * @protected
     * 图形属性
     * @type {ShapeAttrs}
     */


    _this.attrs = {};

    var attrs = _this.getDefaultAttrs();

    Object(esm["mix"])(attrs, cfg.attrs);
    _this.attrs = attrs;

    _this.initAttrs(attrs);

    _this.initAnimate(); // 初始化动画


    return _this;
  } // override


  Element.prototype.getDefaultCfg = function () {
    return {
      visible: true,
      capture: true,
      zIndex: 0
    };
  };
  /**
   * @protected
   * 获取默认的属相
   */


  Element.prototype.getDefaultAttrs = function () {
    return {
      matrix: this.getDefaultMatrix(),
      opacity: 1
    };
  };
  /**
   * @protected
   * 一些方法调用会引起画布变化
   * @param {ChangeType} changeType 改变的类型
   */


  Element.prototype.onCanvasChange = function (changeType) {};
  /**
   * @protected
   * 初始化属性，有些属性需要加工
   * @param {object} attrs 属性值
   */


  Element.prototype.initAttrs = function (attrs) {};
  /**
   * @protected
   * 初始化动画
   */


  Element.prototype.initAnimate = function () {
    this.set('animable', true);
    this.set('animating', false);
  };

  Element.prototype.isGroup = function () {
    return false;
  };

  Element.prototype.getParent = function () {
    return this.get('parent');
  };

  Element.prototype.getCanvas = function () {
    return this.get('canvas');
  };

  Element.prototype.attr = function () {
    var _a;

    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    var name = args[0],
        value = args[1];
    if (!name) return this.attrs;

    if (Object(esm["isObject"])(name)) {
      for (var k in name) {
        this.setAttr(k, name[k]);
      }

      this.afterAttrsChange(name);
      return this;
    }

    if (args.length === 2) {
      this.setAttr(name, value);
      this.afterAttrsChange((_a = {}, _a[name] = value, _a));
      return this;
    }

    return this.attrs[name];
  }; // 是否被裁剪，被裁剪则不显示，不参与拾取


  Element.prototype.isClipped = function (refX, refY) {
    var clip = this.getClip();
    return clip && !clip.isHit(refX, refY);
  };
  /**
   * 内部设置属性值的接口
   * @param {string} name 属性名
   * @param {any} value 属性值
   */


  Element.prototype.setAttr = function (name, value) {
    var originValue = this.attrs[name];

    if (originValue !== value) {
      this.attrs[name] = value;
      this.onAttrChange(name, value, originValue);
    }
  };
  /**
   * @protected
   * 属性值发生改变
   * @param {string} name 属性名
   * @param {any} value 属性值
   * @param {any} originValue 属性值
   */


  Element.prototype.onAttrChange = function (name, value, originValue) {
    if (name === 'matrix') {
      this.set('totalMatrix', null);
    }
  };
  /**
   * 属性更改后需要做的事情
   * @protected
   */


  Element.prototype.afterAttrsChange = function (targetAttrs) {
    this.onCanvasChange('attr');
  };

  Element.prototype.show = function () {
    // 不是高频操作直接使用 set
    this.set('visible', true);
    this.onCanvasChange('show');
    return this;
  };

  Element.prototype.hide = function () {
    // 不是高频操作直接使用 set
    this.set('visible', false);
    this.onCanvasChange('hide');
    return this;
  };

  Element.prototype.setZIndex = function (zIndex) {
    this.set('zIndex', zIndex);
    var parent = this.getParent();

    if (parent) {
      // 改变 zIndex 不应该立即触发渲染 (调用 onCanvasChange('zIndex'))，需要经过 sort 再触发
      parent.sort();
    }

    return this;
  };

  Element.prototype.toFront = function () {
    var parent = this.getParent();

    if (!parent) {
      return;
    }

    var children = parent.getChildren();
    var el = this.get('el');
    var index = children.indexOf(this);
    children.splice(index, 1);
    children.push(this);
    this.onCanvasChange('zIndex');
  };

  Element.prototype.toBack = function () {
    var parent = this.getParent();

    if (!parent) {
      return;
    }

    var children = parent.getChildren();
    var el = this.get('el');
    var index = children.indexOf(this);
    children.splice(index, 1);
    children.unshift(this);
    this.onCanvasChange('zIndex');
  };

  Element.prototype.remove = function (destroy) {
    if (destroy === void 0) {
      destroy = true;
    }

    var parent = this.getParent();

    if (parent) {
      removeFromArray(parent.getChildren(), this);

      if (!parent.get('clearing')) {
        // 如果父元素正在清理，当前元素不触发 remove
        this.onCanvasChange('remove');
      }
    } else {
      this.onCanvasChange('remove');
    }

    if (destroy) {
      this.destroy();
    }
  };

  Element.prototype.resetMatrix = function () {
    this.attr(MATRIX, this.getDefaultMatrix());
    this.onCanvasChange('matrix');
  };

  Element.prototype.getMatrix = function () {
    return this.attr(MATRIX);
  };

  Element.prototype.setMatrix = function (m) {
    this.attr(MATRIX, m);
    this.onCanvasChange('matrix');
  }; // 获取总的 matrix


  Element.prototype.getTotalMatrix = function () {
    var totalMatrix = this.get('totalMatrix');

    if (!totalMatrix) {
      var currentMatrix = this.attr('matrix');
      var parentMatrix = this.get('parentMatrix');

      if (parentMatrix && currentMatrix) {
        totalMatrix = multiplyMatrix(parentMatrix, currentMatrix);
      } else {
        totalMatrix = currentMatrix || parentMatrix;
      }

      this.set('totalMatrix', totalMatrix);
    }

    return totalMatrix;
  }; // 上层分组设置 matrix


  Element.prototype.applyMatrix = function (matrix) {
    var currentMatrix = this.attr('matrix');
    var totalMatrix = null;

    if (matrix && currentMatrix) {
      totalMatrix = multiplyMatrix(matrix, currentMatrix);
    } else {
      totalMatrix = currentMatrix || matrix;
    }

    this.set('totalMatrix', totalMatrix);
    this.set('parentMatrix', matrix);
  };
  /**
   * @protected
   * 获取默认的矩阵
   * @returns {number[]|null} 默认的矩阵
   */


  Element.prototype.getDefaultMatrix = function () {
    return null;
  }; // 将向量应用设置的矩阵


  Element.prototype.applyToMatrix = function (v) {
    var matrix = this.attr('matrix');

    if (matrix) {
      return multiplyVec2(matrix, v);
    }

    return v;
  }; // 根据设置的矩阵，将向量转换相对于图形/分组的位置


  Element.prototype.invertFromMatrix = function (v) {
    var matrix = this.attr('matrix');

    if (matrix) {
      var invertMatrix = invert(matrix);

      if (invertMatrix) {
        return multiplyVec2(invertMatrix, v);
      }
    }

    return v;
  }; // 设置 clip


  Element.prototype.setClip = function (clipCfg) {
    var canvas = this.getCanvas(); // 应该只设置当前元素的 clip，不应该去修改 clip 本身，方便 clip 被复用
    // TODO: setClip 的传参既 shape 配置，也支持 shape 对象
    // const preShape = this.get('clipShape');
    // if (preShape) {
    //   // 将之前的 clipShape 销毁
    //   preShape.destroy();
    // }

    var clipShape = null; // 如果配置项为 null，则不移除 clipShape

    if (clipCfg) {
      var ShapeBase = this.getShapeBase();
      var shapeType = Object(esm["upperFirst"])(clipCfg.type);
      var Cons = ShapeBase[shapeType];

      if (Cons) {
        clipShape = new Cons({
          type: clipCfg.type,
          isClipShape: true,
          attrs: clipCfg.attrs,
          canvas: canvas
        });
      }
    }

    this.set('clipShape', clipShape);
    this.onCanvasChange('clip');
    return clipShape;
  };

  Element.prototype.getClip = function () {
    // 高频率调用的地方直接使用 this.cfg.xxx
    var clipShape = this.cfg.clipShape; // 未设置时返回 Null，保证一致性

    if (!clipShape) {
      return null;
    }

    return clipShape;
  };

  Element.prototype.clone = function () {
    var _this = this;

    var originAttrs = this.attrs;
    var attrs = {};
    Object(esm["each"])(originAttrs, function (i, k) {
      if (Object(esm["isArray"])(originAttrs[k])) {
        attrs[k] = _cloneArrayAttr(originAttrs[k]);
      } else {
        attrs[k] = originAttrs[k];
      }
    });
    var cons = this.constructor; // @ts-ignore

    var clone = new cons({
      attrs: attrs
    });
    Object(esm["each"])(CLONE_CFGS, function (cfgName) {
      clone.set(cfgName, _this.get(cfgName));
    });
    return clone;
  };

  Element.prototype.destroy = function () {
    var destroyed = this.destroyed;

    if (destroyed) {
      return;
    }

    this.attrs = {};

    _super.prototype.destroy.call(this); // this.onCanvasChange('destroy');

  };
  /**
   * 是否处于动画暂停状态
   * @return {boolean} 是否处于动画暂停状态
   */


  Element.prototype.isAnimatePaused = function () {
    return this.get('_pause').isPaused;
  };
  /**
   * 执行动画，支持多种函数签名
   * 1. animate(toAttrs: ElementAttrs, duration: number, easing?: string, callback?: () => void, delay?: number)
   * 2. animate(onFrame: OnFrame, duration: number, easing?: string, callback?: () => void, delay?: number)
   * 3. animate(toAttrs: ElementAttrs, cfg: AnimateCfg)
   * 4. animate(onFrame: OnFrame, cfg: AnimateCfg)
   * 各个参数的含义为:
   *   toAttrs  动画最终状态
   *   onFrame  自定义帧动画函数
   *   duration 动画执行时间
   *   easing   动画缓动效果
   *   callback 动画执行后的回调
   *   delay    动画延迟时间
   */


  Element.prototype.animate = function () {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    this.set('animating', true);
    var timeline = this.get('timeline');

    if (!timeline) {
      timeline = this.get('canvas').get('timeline');
      this.set('timeline', timeline);
    }

    var animations = this.get('animations') || []; // 初始化 tick

    if (!timeline.timer) {
      timeline.initTimer();
    }

    var toAttrs = args[0],
        duration = args[1],
        _a = args[2],
        easing = _a === void 0 ? 'easeLinear' : _a,
        _b = args[3],
        callback = _b === void 0 ? esm["noop"] : _b,
        _c = args[4],
        delay = _c === void 0 ? 0 : _c;
    var onFrame;
    var repeat;
    var pauseCallback;
    var resumeCallback;
    var animateCfg; // 第二个参数，既可以是动画最终状态 toAttrs，也可以是自定义帧动画函数 onFrame

    if (Object(esm["isFunction"])(toAttrs)) {
      onFrame = toAttrs;
      toAttrs = {};
    } else if (Object(esm["isObject"])(toAttrs) && toAttrs.onFrame) {
      // 兼容 3.0 中的写法，onFrame 和 repeat 可在 toAttrs 中设置
      onFrame = toAttrs.onFrame;
      repeat = toAttrs.repeat;
    } // 第二个参数，既可以是执行时间 duration，也可以是动画参数 animateCfg


    if (Object(esm["isObject"])(duration)) {
      animateCfg = duration;
      duration = animateCfg.duration;
      easing = animateCfg.easing || 'easeLinear';
      delay = animateCfg.delay || 0; // animateCfg 中的设置优先级更高

      repeat = animateCfg.repeat || repeat || false;
      callback = animateCfg.callback || esm["noop"];
      pauseCallback = animateCfg.pauseCallback || esm["noop"];
      resumeCallback = animateCfg.resumeCallback || esm["noop"];
    } else {
      // 第四个参数，既可以是回调函数 callback，也可以是延迟时间 delay
      if (Object(esm["isNumber"])(callback)) {
        delay = callback;
        callback = null;
      } // 第三个参数，既可以是缓动参数 easing，也可以是回调函数 callback


      if (Object(esm["isFunction"])(easing)) {
        callback = easing;
        easing = 'easeLinear';
      } else {
        easing = easing || 'easeLinear';
      }
    }

    var formatToAttrs = getFormatToAttrs(toAttrs, this);
    var animation = {
      fromAttrs: getFormatFromAttrs(formatToAttrs, this),
      toAttrs: formatToAttrs,
      duration: duration,
      easing: easing,
      repeat: repeat,
      callback: callback,
      pauseCallback: pauseCallback,
      resumeCallback: resumeCallback,
      delay: delay,
      startTime: timeline.getTime(),
      id: Object(esm["uniqueId"])(),
      onFrame: onFrame,
      pathFormatted: false
    }; // 如果动画元素队列中已经有这个图形了

    if (animations.length > 0) {
      // 先检查是否需要合并属性。若有相同的动画，将该属性从前一个动画中删除,直接用后一个动画中
      animations = checkExistedAttrs(animations, animation);
    } else {
      // 否则将图形添加到动画元素队列
      timeline.addAnimator(this);
    }

    animations.push(animation);
    this.set('animations', animations);
    this.set('_pause', {
      isPaused: false
    });
  };
  /**
   * 停止动画
   * @param {boolean} toEnd 是否到动画的最终状态
   */


  Element.prototype.stopAnimate = function (toEnd) {
    var _this = this;

    if (toEnd === void 0) {
      toEnd = true;
    }

    var animations = this.get('animations');
    Object(esm["each"])(animations, function (animation) {
      // 将动画执行到最后一帧
      if (toEnd) {
        if (animation.onFrame) {
          _this.attr(animation.onFrame(1));
        } else {
          _this.attr(animation.toAttrs);
        }
      }

      if (animation.callback) {
        // 动画停止时的回调
        animation.callback();
      }
    });
    this.set('animating', false);
    this.set('animations', []);
  };
  /**
   * 暂停动画
   */


  Element.prototype.pauseAnimate = function () {
    var timeline = this.get('timeline');
    var animations = this.get('animations');
    var pauseTime = timeline.getTime();
    Object(esm["each"])(animations, function (animation) {
      animation._paused = true;
      animation._pauseTime = pauseTime;

      if (animation.pauseCallback) {
        // 动画暂停时的回调
        animation.pauseCallback();
      }
    }); // 记录下是在什么时候暂停的

    this.set('_pause', {
      isPaused: true,
      pauseTime: pauseTime
    });
    return this;
  };
  /**
   * 恢复动画
   */


  Element.prototype.resumeAnimate = function () {
    var timeline = this.get('timeline');
    var current = timeline.getTime();
    var animations = this.get('animations');
    var pauseTime = this.get('_pause').pauseTime; // 之后更新属性需要计算动画已经执行的时长，如果暂停了，就把初始时间调后

    Object(esm["each"])(animations, function (animation) {
      animation.startTime = animation.startTime + (current - pauseTime);
      animation._paused = false;
      animation._pauseTime = null;

      if (animation.resumeCallback) {
        animation.resumeCallback();
      }
    });
    this.set('_pause', {
      isPaused: false
    });
    this.set('animations', animations);
    return this;
  };
  /**
   * 触发委托事件
   * @param  {string}     type 事件类型
   * @param  {GraphEvent} eventObj 事件对象
   */


  Element.prototype.emitDelegation = function (type, eventObj) {
    var _this = this;

    var paths = eventObj.propagationPath;
    var events = this.getEvents();
    var relativeShape;

    if (type === 'mouseenter') {
      relativeShape = eventObj.fromShape;
    } else if (type === 'mouseleave') {
      relativeShape = eventObj.toShape;
    }

    var _loop_1 = function _loop_1(i) {
      var element = paths[i]; // 暂定跟 name 绑定

      var name_1 = element.get('name');

      if (name_1) {
        // 第一个 mouseenter 和 mouseleave 的停止即可，因为后面的都是前面的 Parent
        if ( // 只有 element 是 Group 或者 Canvas 的时候，才需要判断 isParent
        (element.isGroup() || element.isCanvas && element.isCanvas()) && relativeShape && isParent(element, relativeShape)) {
          return "break";
        }

        if (Object(esm["isArray"])(name_1)) {
          Object(esm["each"])(name_1, function (subName) {
            _this.emitDelegateEvent(element, subName, eventObj);
          });
        } else {
          this_1.emitDelegateEvent(element, name_1, eventObj);
        }
      }
    };

    var this_1 = this; // 至少有一个对象，且第一个对象为 shape

    for (var i = 0; i < paths.length; i++) {
      var state_1 = _loop_1(i);

      if (state_1 === "break") break;
    }
  };

  Element.prototype.emitDelegateEvent = function (element, name, eventObj) {
    var events = this.getEvents(); // 事件委托的形式 name:type

    var eventName = name + DELEGATION_SPLIT + eventObj.type;

    if (events[eventName] || events[WILDCARD]) {
      // 对于通配符 *，事件名称 = 委托事件名称
      eventObj.name = eventName;
      eventObj.currentTarget = element;
      eventObj.delegateTarget = this; // 将委托事件的监听对象 delegateObject 挂载到事件对象上

      eventObj.delegateObject = element.get('delegateObject');
      this.emit(eventName, eventObj);
    }
  };
  /**
   * 移动元素
   * @param {number} translateX 水平移动距离
   * @param {number} translateY 垂直移动距离
   * @return {IElement} 元素
   */


  Element.prototype.translate = function (translateX, translateY) {
    if (translateX === void 0) {
      translateX = 0;
    }

    if (translateY === void 0) {
      translateY = 0;
    }

    var matrix = this.getMatrix();
    var newMatrix = matrix_util_esm["a" /* ext */].transform(matrix, [['t', translateX, translateY]]);
    this.setMatrix(newMatrix);
    return this;
  };
  /**
   * 移动元素到目标位置
   * @param {number} targetX 目标位置的水平坐标
   * @param {number} targetX 目标位置的垂直坐标
   * @return {IElement} 元素
   */


  Element.prototype.move = function (targetX, targetY) {
    var x = this.attr('x') || 0;
    var y = this.attr('y') || 0;
    this.translate(targetX - x, targetY - y);
    return this;
  };
  /**
   * 移动元素到目标位置，等价于 move 方法。由于 moveTo 的语义性更强，因此在文档中推荐使用 moveTo 方法
   * @param {number} targetX 目标位置的 x 轴坐标
   * @param {number} targetY 目标位置的 y 轴坐标
   * @return {IElement} 元素
   */


  Element.prototype.moveTo = function (targetX, targetY) {
    return this.move(targetX, targetY);
  };
  /**
   * 缩放元素
   * @param {number} ratioX 水平缩放比例
   * @param {number} ratioY 垂直缩放比例
   * @return {IElement} 元素
   */


  Element.prototype.scale = function (ratioX, ratioY) {
    var matrix = this.getMatrix();
    var newMatrix = matrix_util_esm["a" /* ext */].transform(matrix, [['s', ratioX, ratioY || ratioX]]);
    this.setMatrix(newMatrix);
    return this;
  };
  /**
   * 以画布左上角 (0, 0) 为中心旋转元素
   * @param {number} radian 旋转角度(弧度值)
   * @return {IElement} 元素
   */


  Element.prototype.rotate = function (radian) {
    var matrix = this.getMatrix();
    var newMatrix = matrix_util_esm["a" /* ext */].transform(matrix, [['r', radian]]);
    this.setMatrix(newMatrix);
    return this;
  };
  /**
   * 以起始点为中心旋转元素
   * @param {number} radian 旋转角度(弧度值)
   * @return {IElement} 元素
   */


  Element.prototype.rotateAtStart = function (rotate) {
    var _a = this.attr(),
        x = _a.x,
        y = _a.y;

    var matrix = this.getMatrix();
    var newMatrix = matrix_util_esm["a" /* ext */].transform(matrix, [['t', -x, -y], ['r', rotate], ['t', x, y]]);
    this.setMatrix(newMatrix);
    return this;
  };
  /**
   * 以任意点 (x, y) 为中心旋转元素
   * @param {number} radian 旋转角度(弧度值)
   * @return {IElement} 元素
   */


  Element.prototype.rotateAtPoint = function (x, y, rotate) {
    var matrix = this.getMatrix();
    var newMatrix = matrix_util_esm["a" /* ext */].transform(matrix, [['t', -x, -y], ['r', rotate], ['t', x, y]]);
    this.setMatrix(newMatrix);
    return this;
  };

  return Element;
}(base);

/* harmony default export */ var abstract_element = (element_Element);
// CONCATENATED MODULE: ../node_modules/@antv/g-base/esm/abstract/container.js








var SHAPE_MAP = {};
var INDEX = '_INDEX';

function afterAdd(element) {
  if (element.isGroup()) {
    if (element.isEntityGroup() || element.get('children').length) {
      element.onCanvasChange('add');
    }
  } else {
    element.onCanvasChange('add');
  }
}
/**
 * 设置 canvas
 * @param {IElement} element 元素
 * @param {ICanvas}  canvas  画布
 */


function setCanvas(element, canvas) {
  element.set('canvas', canvas);

  if (element.isGroup()) {
    var children = element.get('children');

    if (children.length) {
      children.forEach(function (child) {
        setCanvas(child, canvas);
      });
    }
  }
}
/**
 * 设置 timeline
 * @param {IElement} element  元素
 * @param {Timeline} timeline 时间轴
 */


function setTimeline(element, timeline) {
  element.set('timeline', timeline);

  if (element.isGroup()) {
    var children = element.get('children');

    if (children.length) {
      children.forEach(function (child) {
        setTimeline(child, timeline);
      });
    }
  }
}

function contains(container, element) {
  var children = container.getChildren();
  return children.indexOf(element) >= 0;
}

function removeChild(container, element, destroy) {
  if (destroy === void 0) {
    destroy = true;
  } // 不再调用 element.remove() 方法，会出现循环调用


  if (destroy) {
    element.destroy();
  } else {
    element.set('parent', null);
    element.set('canvas', null);
  }

  removeFromArray(container.getChildren(), element);
}

function getComparer(compare) {
  return function (left, right) {
    var result = compare(left, right);
    return result === 0 ? left[INDEX] - right[INDEX] : result;
  };
}

var container_Container =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Container, _super);

  function Container() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Container.prototype.isCanvas = function () {
    return false;
  }; // 根据子节点确定 BBox


  Container.prototype.getBBox = function () {
    // 所有的值可能在画布的可视区外
    var minX = Infinity;
    var maxX = -Infinity;
    var minY = Infinity;
    var maxY = -Infinity;
    var xArr = [];
    var yArr = []; // 将可见元素、图形以及不为空的图形分组筛选出来，用于包围盒合并

    var children = this.getChildren().filter(function (child) {
      return child.get('visible') && (!child.isGroup() || child.isGroup() && child.getChildren().length > 0);
    });

    if (children.length > 0) {
      each_default()(children, function (child) {
        var box = child.getBBox();
        xArr.push(box.minX, box.maxX);
        yArr.push(box.minY, box.maxY);
      });
      minX = Math.min.apply(null, xArr);
      maxX = Math.max.apply(null, xArr);
      minY = Math.min.apply(null, yArr);
      maxY = Math.max.apply(null, yArr);
    } else {
      minX = 0;
      maxX = 0;
      minY = 0;
      maxY = 0;
    }

    var box = {
      x: minX,
      y: minY,
      minX: minX,
      minY: minY,
      maxX: maxX,
      maxY: maxY,
      width: maxX - minX,
      height: maxY - minY
    };
    return box;
  }; // 获取画布的包围盒


  Container.prototype.getCanvasBBox = function () {
    var minX = Infinity;
    var maxX = -Infinity;
    var minY = Infinity;
    var maxY = -Infinity;
    var xArr = [];
    var yArr = []; // 将可见元素、图形以及不为空的图形分组筛选出来，用于包围盒合并

    var children = this.getChildren().filter(function (child) {
      return child.get('visible') && (!child.isGroup() || child.isGroup() && child.getChildren().length > 0);
    });

    if (children.length > 0) {
      each_default()(children, function (child) {
        var box = child.getCanvasBBox();
        xArr.push(box.minX, box.maxX);
        yArr.push(box.minY, box.maxY);
      });
      minX = Math.min.apply(null, xArr);
      maxX = Math.max.apply(null, xArr);
      minY = Math.min.apply(null, yArr);
      maxY = Math.max.apply(null, yArr);
    } else {
      minX = 0;
      maxX = 0;
      minY = 0;
      maxY = 0;
    }

    var box = {
      x: minX,
      y: minY,
      minX: minX,
      minY: minY,
      maxX: maxX,
      maxY: maxY,
      width: maxX - minX,
      height: maxY - minY
    };
    return box;
  };

  Container.prototype.getDefaultCfg = function () {
    var cfg = _super.prototype.getDefaultCfg.call(this);

    cfg['children'] = [];
    return cfg;
  };

  Container.prototype.onAttrChange = function (name, value, originValue) {
    _super.prototype.onAttrChange.call(this, name, value, originValue);

    if (name === 'matrix') {
      var totalMatrix = this.getTotalMatrix();

      this._applyChildrenMarix(totalMatrix);
    }
  }; // 不但应用到自己身上还要应用于子元素


  Container.prototype.applyMatrix = function (matrix) {
    var preTotalMatrix = this.getTotalMatrix();

    _super.prototype.applyMatrix.call(this, matrix);

    var totalMatrix = this.getTotalMatrix(); // totalMatrix 没有发生变化时，这里仅考虑两者都为 null 时
    // 不继续向下传递矩阵

    if (totalMatrix === preTotalMatrix) {
      return;
    }

    this._applyChildrenMarix(totalMatrix);
  }; // 在子元素上设置矩阵


  Container.prototype._applyChildrenMarix = function (totalMatrix) {
    var children = this.getChildren();
    each_default()(children, function (child) {
      child.applyMatrix(totalMatrix);
    });
  }; // 兼容老版本的接口


  Container.prototype.addShape = function () {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    var type = args[0];
    var cfg = args[1];

    if (is_object_default()(type)) {
      cfg = type;
    } else {
      cfg['type'] = type;
    }

    var shapeType = SHAPE_MAP[cfg.type];

    if (!shapeType) {
      shapeType = upper_first_default()(cfg.type);
      SHAPE_MAP[cfg.type] = shapeType;
    }

    var ShapeBase = this.getShapeBase();
    var shape = new ShapeBase[shapeType](cfg);
    this.add(shape);
    return shape;
  };

  Container.prototype.addGroup = function () {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    var groupClass = args[0],
        cfg = args[1];
    var group;

    if (is_function_default()(groupClass)) {
      if (cfg) {
        group = new groupClass(cfg);
      } else {
        group = new groupClass({
          // canvas,
          parent: this
        });
      }
    } else {
      var tmpCfg = groupClass || {};
      var TmpGroupClass = this.getGroupBase();
      group = new TmpGroupClass(tmpCfg);
    }

    this.add(group);
    return group;
  };

  Container.prototype.getCanvas = function () {
    var canvas;

    if (this.isCanvas()) {
      canvas = this;
    } else {
      canvas = this.get('canvas');
    }

    return canvas;
  };

  Container.prototype.getShape = function (x, y, ev) {
    // 如果不支持拾取，则直接返回
    if (!isAllowCapture(this)) {
      return null;
    }

    var children = this.getChildren();
    var shape; // 如果容器是 group

    if (!this.isCanvas()) {
      var v = [x, y, 1]; // 将 x, y 转换成对应于 group 的局部坐标

      v = this.invertFromMatrix(v);

      if (!this.isClipped(v[0], v[1])) {
        shape = this._findShape(children, v[0], v[1], ev);
      }
    } else {
      shape = this._findShape(children, x, y, ev);
    }

    return shape;
  };

  Container.prototype._findShape = function (children, x, y, ev) {
    var shape = null;

    for (var i = children.length - 1; i >= 0; i--) {
      var child = children[i];

      if (isAllowCapture(child)) {
        if (child.isGroup()) {
          shape = child.getShape(x, y, ev);
        } else if (child.isHit(x, y)) {
          shape = child;
        }
      }

      if (shape) {
        break;
      }
    }

    return shape;
  };

  Container.prototype.add = function (element) {
    var canvas = this.getCanvas();
    var children = this.getChildren();
    var timeline = this.get('timeline');
    var preParent = element.getParent();

    if (preParent) {
      removeChild(preParent, element, false);
    }

    element.set('parent', this);

    if (canvas) {
      setCanvas(element, canvas);
    }

    if (timeline) {
      setTimeline(element, timeline);
    }

    children.push(element);
    afterAdd(element);

    this._applyElementMatrix(element);
  }; // 将当前容器的矩阵应用到子元素


  Container.prototype._applyElementMatrix = function (element) {
    var totalMatrix = this.getTotalMatrix(); // 添加图形或者分组时，需要把当前图元的矩阵设置进去

    if (totalMatrix) {
      element.applyMatrix(totalMatrix);
    }
  };

  Container.prototype.getChildren = function () {
    return this.get('children');
  };

  Container.prototype.sort = function () {
    var children = this.getChildren(); // 稳定排序

    each_default()(children, function (child, index) {
      child[INDEX] = index;
      return child;
    });
    children.sort(getComparer(function (obj1, obj2) {
      return obj1.get('zIndex') - obj2.get('zIndex');
    }));
    this.onCanvasChange('sort');
  };

  Container.prototype.clear = function () {
    this.set('clearing', true);

    if (this.destroyed) {
      return;
    }

    var children = this.getChildren();

    for (var i = children.length - 1; i >= 0; i--) {
      children[i].destroy(); // 销毁子元素
    }

    this.set('children', []);
    this.onCanvasChange('clear');
    this.set('clearing', false);
  };

  Container.prototype.destroy = function () {
    if (this.get('destroyed')) {
      return;
    }

    this.clear();

    _super.prototype.destroy.call(this);
  };
  /**
   * 获取第一个子元素
   * @return {IElement} 第一个元素
   */


  Container.prototype.getFirst = function () {
    return this.getChildByIndex(0);
  };
  /**
   * 获取最后一个子元素
   * @return {IElement} 元素
   */


  Container.prototype.getLast = function () {
    var children = this.getChildren();
    return this.getChildByIndex(children.length - 1);
  };
  /**
   * 根据索引获取子元素
   * @return {IElement} 第一个元素
   */


  Container.prototype.getChildByIndex = function (index) {
    var children = this.getChildren();
    return children[index];
  };
  /**
   * 子元素的数量
   * @return {number} 子元素数量
   */


  Container.prototype.getCount = function () {
    var children = this.getChildren();
    return children.length;
  };
  /**
   * 是否包含对应元素
   * @param {IElement} element 元素
   * @return {boolean}
   */


  Container.prototype.contain = function (element) {
    var children = this.getChildren();
    return children.indexOf(element) > -1;
  };
  /**
   * 移除对应子元素
   * @param {IElement} element 子元素
   * @param {boolean} destroy 是否销毁子元素，默认为 true
   */


  Container.prototype.removeChild = function (element, destroy) {
    if (destroy === void 0) {
      destroy = true;
    }

    if (this.contain(element)) {
      element.remove(destroy);
    }
  };
  /**
   * 查找所有匹配的元素
   * @param  {ElementFilterFn}   fn  匹配函数
   * @return {IElement[]} 元素数组
   */


  Container.prototype.findAll = function (fn) {
    var rst = [];
    var children = this.getChildren();
    each_default()(children, function (element) {
      if (fn(element)) {
        rst.push(element);
      }

      if (element.isGroup()) {
        rst = rst.concat(element.findAll(fn));
      }
    });
    return rst;
  };
  /**
   * 查找元素，找到第一个返回
   * @param  {ElementFilterFn} fn    匹配函数
   * @return {IElement|null} 元素，可以为空
   */


  Container.prototype.find = function (fn) {
    var rst = null;
    var children = this.getChildren();
    each_default()(children, function (element) {
      if (fn(element)) {
        rst = element;
      } else if (element.isGroup()) {
        rst = element.find(fn);
      }

      if (rst) {
        return false;
      }
    });
    return rst;
  };
  /**
   * 根据 ID 查找元素
   * @param {string} id 元素 id
   * @return {IElement|null} 元素
   */


  Container.prototype.findById = function (id) {
    return this.find(function (element) {
      return element.get('id') === id;
    });
  };
  /**
   * 该方法即将废弃，不建议使用
   * 根据 className 查找元素
   * TODO: 该方式定义暂时只给 G6 3.3 以后的版本使用，待 G6 中的 findByClassName 方法移除后，G 也需要同步移除
   * @param {string} className 元素 className
   * @return {IElement | null} 元素
   */


  Container.prototype.findByClassName = function (className) {
    return this.find(function (element) {
      return element.get('className') === className;
    });
  };
  /**
   * 根据 name 查找元素列表
   * @param {string}      name 元素名称
   * @return {IElement[]} 元素
   */


  Container.prototype.findAllByName = function (name) {
    return this.findAll(function (element) {
      return element.get('name') === name;
    });
  };

  return Container;
}(abstract_element);

/* harmony default export */ var abstract_container = (container_Container);
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.function.bind.js
var es6_function_bind = __webpack_require__("o7PZ");

// CONCATENATED MODULE: ../node_modules/d3-timer/src/timer.js

var timer_frame = 0,
    // is an animation frame pending?
timeout = 0,
    // is a timeout pending?
interval = 0,
    // are any timers active?
pokeDelay = 1000,
    // how frequently we check for clock skew
taskHead,
    taskTail,
    clockLast = 0,
    clockNow = 0,
    clockSkew = 0,
    clock = typeof performance === "object" && performance.now ? performance : Date,
    setFrame = typeof window === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function (f) {
  setTimeout(f, 17);
};
function now() {
  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
}

function clearNow() {
  clockNow = 0;
}

function Timer() {
  this._call = this._time = this._next = null;
}
Timer.prototype = timer.prototype = {
  constructor: Timer,
  restart: function restart(callback, delay, time) {
    if (typeof callback !== "function") throw new TypeError("callback is not a function");
    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);

    if (!this._next && taskTail !== this) {
      if (taskTail) taskTail._next = this;else taskHead = this;
      taskTail = this;
    }

    this._call = callback;
    this._time = time;
    sleep();
  },
  stop: function stop() {
    if (this._call) {
      this._call = null;
      this._time = Infinity;
      sleep();
    }
  }
};
function timer(callback, delay, time) {
  var t = new Timer();
  t.restart(callback, delay, time);
  return t;
}
function timerFlush() {
  now(); // Get the current time, if not already set.

  ++timer_frame; // Pretend we’ve set an alarm, if we haven’t already.

  var t = taskHead,
      e;

  while (t) {
    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);
    t = t._next;
  }

  --timer_frame;
}

function wake() {
  clockNow = (clockLast = clock.now()) + clockSkew;
  timer_frame = timeout = 0;

  try {
    timerFlush();
  } finally {
    timer_frame = 0;
    nap();
    clockNow = 0;
  }
}

function poke() {
  var now = clock.now(),
      delay = now - clockLast;
  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;
}

function nap() {
  var t0,
      t1 = taskHead,
      t2,
      time = Infinity;

  while (t1) {
    if (t1._call) {
      if (time > t1._time) time = t1._time;
      t0 = t1, t1 = t1._next;
    } else {
      t2 = t1._next, t1._next = null;
      t1 = t0 ? t0._next = t2 : taskHead = t2;
    }
  }

  taskTail = t0;
  sleep(time);
}

function sleep(time) {
  if (timer_frame) return; // Soonest alarm already set, or will be.

  if (timeout) timeout = clearTimeout(timeout);
  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.

  if (delay > 24) {
    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);
    if (interval) interval = clearInterval(interval);
  } else {
    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);
    timer_frame = 1, setFrame(wake);
  }
}
// CONCATENATED MODULE: ../node_modules/d3-ease/src/linear.js
function linear(t) {
  return +t;
}
// CONCATENATED MODULE: ../node_modules/d3-ease/src/quad.js
function quadIn(t) {
  return t * t;
}
function quadOut(t) {
  return t * (2 - t);
}
function quadInOut(t) {
  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;
}
// CONCATENATED MODULE: ../node_modules/d3-ease/src/cubic.js
function cubicIn(t) {
  return t * t * t;
}
function cubicOut(t) {
  return --t * t * t + 1;
}
function cubicInOut(t) {
  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
}
// CONCATENATED MODULE: ../node_modules/d3-ease/src/poly.js
var exponent = 3;
var polyIn = function custom(e) {
  e = +e;

  function polyIn(t) {
    return Math.pow(t, e);
  }

  polyIn.exponent = custom;
  return polyIn;
}(exponent);
var polyOut = function custom(e) {
  e = +e;

  function polyOut(t) {
    return 1 - Math.pow(1 - t, e);
  }

  polyOut.exponent = custom;
  return polyOut;
}(exponent);
var polyInOut = function custom(e) {
  e = +e;

  function polyInOut(t) {
    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;
  }

  polyInOut.exponent = custom;
  return polyInOut;
}(exponent);
// CONCATENATED MODULE: ../node_modules/d3-ease/src/sin.js
var pi = Math.PI,
    halfPi = pi / 2;
function sinIn(t) {
  return 1 - Math.cos(t * halfPi);
}
function sinOut(t) {
  return Math.sin(t * halfPi);
}
function sinInOut(t) {
  return (1 - Math.cos(pi * t)) / 2;
}
// CONCATENATED MODULE: ../node_modules/d3-ease/src/exp.js
function expIn(t) {
  return Math.pow(2, 10 * t - 10);
}
function expOut(t) {
  return 1 - Math.pow(2, -10 * t);
}
function expInOut(t) {
  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;
}
// CONCATENATED MODULE: ../node_modules/d3-ease/src/circle.js
function circleIn(t) {
  return 1 - Math.sqrt(1 - t * t);
}
function circleOut(t) {
  return Math.sqrt(1 - --t * t);
}
function circleInOut(t) {
  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;
}
// CONCATENATED MODULE: ../node_modules/d3-ease/src/bounce.js
var b1 = 4 / 11,
    b2 = 6 / 11,
    b3 = 8 / 11,
    b4 = 3 / 4,
    b5 = 9 / 11,
    b6 = 10 / 11,
    b7 = 15 / 16,
    b8 = 21 / 22,
    b9 = 63 / 64,
    b0 = 1 / b1 / b1;
function bounceIn(t) {
  return 1 - bounceOut(1 - t);
}
function bounceOut(t) {
  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;
}
function bounceInOut(t) {
  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;
}
// CONCATENATED MODULE: ../node_modules/d3-ease/src/back.js
var overshoot = 1.70158;
var backIn = function custom(s) {
  s = +s;

  function backIn(t) {
    return t * t * ((s + 1) * t - s);
  }

  backIn.overshoot = custom;
  return backIn;
}(overshoot);
var backOut = function custom(s) {
  s = +s;

  function backOut(t) {
    return --t * t * ((s + 1) * t + s) + 1;
  }

  backOut.overshoot = custom;
  return backOut;
}(overshoot);
var backInOut = function custom(s) {
  s = +s;

  function backInOut(t) {
    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;
  }

  backInOut.overshoot = custom;
  return backInOut;
}(overshoot);
// CONCATENATED MODULE: ../node_modules/d3-ease/src/elastic.js
var tau = 2 * Math.PI,
    amplitude = 1,
    period = 0.3;
var elasticIn = function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticIn(t) {
    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);
  }

  elasticIn.amplitude = function (a) {
    return custom(a, p * tau);
  };

  elasticIn.period = function (p) {
    return custom(a, p);
  };

  return elasticIn;
}(amplitude, period);
var elasticOut = function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticOut(t) {
    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);
  }

  elasticOut.amplitude = function (a) {
    return custom(a, p * tau);
  };

  elasticOut.period = function (p) {
    return custom(a, p);
  };

  return elasticOut;
}(amplitude, period);
var elasticInOut = function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticInOut(t) {
    return ((t = t * 2 - 1) < 0 ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p) : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;
  }

  elasticInOut.amplitude = function (a) {
    return custom(a, p * tau);
  };

  elasticInOut.period = function (p) {
    return custom(a, p);
  };

  return elasticInOut;
}(amplitude, period);
// CONCATENATED MODULE: ../node_modules/d3-ease/src/index.js










// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.is-array.js
var es6_array_is_array = __webpack_require__("+3V6");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.string.trim.js
var es6_string_trim = __webpack_require__("m8zh");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.assign.js
var es6_object_assign = __webpack_require__("5hJT");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.create.js
var es6_object_create = __webpack_require__("PAbq");

// CONCATENATED MODULE: ../node_modules/d3-color/src/define.js

/* harmony default export */ var define = (function (constructor, factory, prototype) {
  constructor.prototype = factory.prototype = prototype;
  prototype.constructor = constructor;
});
function extend(parent, definition) {
  var prototype = Object.create(parent.prototype);

  for (var key in definition) {
    prototype[key] = definition[key];
  }

  return prototype;
}
// CONCATENATED MODULE: ../node_modules/d3-color/src/color.js







function Color() {}
var _darker = 0.7;


var _brighter = 1 / _darker;


var reI = "\\s*([+-]?\\d+)\\s*",
    reN = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",
    reP = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
    reHex = /^#([0-9a-f]{3,8})$/,
    reRgbInteger = new RegExp("^rgb\\(" + [reI, reI, reI] + "\\)$"),
    reRgbPercent = new RegExp("^rgb\\(" + [reP, reP, reP] + "\\)$"),
    reRgbaInteger = new RegExp("^rgba\\(" + [reI, reI, reI, reN] + "\\)$"),
    reRgbaPercent = new RegExp("^rgba\\(" + [reP, reP, reP, reN] + "\\)$"),
    reHslPercent = new RegExp("^hsl\\(" + [reN, reP, reP] + "\\)$"),
    reHslaPercent = new RegExp("^hsla\\(" + [reN, reP, reP, reN] + "\\)$");
var named = {
  aliceblue: 0xf0f8ff,
  antiquewhite: 0xfaebd7,
  aqua: 0x00ffff,
  aquamarine: 0x7fffd4,
  azure: 0xf0ffff,
  beige: 0xf5f5dc,
  bisque: 0xffe4c4,
  black: 0x000000,
  blanchedalmond: 0xffebcd,
  blue: 0x0000ff,
  blueviolet: 0x8a2be2,
  brown: 0xa52a2a,
  burlywood: 0xdeb887,
  cadetblue: 0x5f9ea0,
  chartreuse: 0x7fff00,
  chocolate: 0xd2691e,
  coral: 0xff7f50,
  cornflowerblue: 0x6495ed,
  cornsilk: 0xfff8dc,
  crimson: 0xdc143c,
  cyan: 0x00ffff,
  darkblue: 0x00008b,
  darkcyan: 0x008b8b,
  darkgoldenrod: 0xb8860b,
  darkgray: 0xa9a9a9,
  darkgreen: 0x006400,
  darkgrey: 0xa9a9a9,
  darkkhaki: 0xbdb76b,
  darkmagenta: 0x8b008b,
  darkolivegreen: 0x556b2f,
  darkorange: 0xff8c00,
  darkorchid: 0x9932cc,
  darkred: 0x8b0000,
  darksalmon: 0xe9967a,
  darkseagreen: 0x8fbc8f,
  darkslateblue: 0x483d8b,
  darkslategray: 0x2f4f4f,
  darkslategrey: 0x2f4f4f,
  darkturquoise: 0x00ced1,
  darkviolet: 0x9400d3,
  deeppink: 0xff1493,
  deepskyblue: 0x00bfff,
  dimgray: 0x696969,
  dimgrey: 0x696969,
  dodgerblue: 0x1e90ff,
  firebrick: 0xb22222,
  floralwhite: 0xfffaf0,
  forestgreen: 0x228b22,
  fuchsia: 0xff00ff,
  gainsboro: 0xdcdcdc,
  ghostwhite: 0xf8f8ff,
  gold: 0xffd700,
  goldenrod: 0xdaa520,
  gray: 0x808080,
  green: 0x008000,
  greenyellow: 0xadff2f,
  grey: 0x808080,
  honeydew: 0xf0fff0,
  hotpink: 0xff69b4,
  indianred: 0xcd5c5c,
  indigo: 0x4b0082,
  ivory: 0xfffff0,
  khaki: 0xf0e68c,
  lavender: 0xe6e6fa,
  lavenderblush: 0xfff0f5,
  lawngreen: 0x7cfc00,
  lemonchiffon: 0xfffacd,
  lightblue: 0xadd8e6,
  lightcoral: 0xf08080,
  lightcyan: 0xe0ffff,
  lightgoldenrodyellow: 0xfafad2,
  lightgray: 0xd3d3d3,
  lightgreen: 0x90ee90,
  lightgrey: 0xd3d3d3,
  lightpink: 0xffb6c1,
  lightsalmon: 0xffa07a,
  lightseagreen: 0x20b2aa,
  lightskyblue: 0x87cefa,
  lightslategray: 0x778899,
  lightslategrey: 0x778899,
  lightsteelblue: 0xb0c4de,
  lightyellow: 0xffffe0,
  lime: 0x00ff00,
  limegreen: 0x32cd32,
  linen: 0xfaf0e6,
  magenta: 0xff00ff,
  maroon: 0x800000,
  mediumaquamarine: 0x66cdaa,
  mediumblue: 0x0000cd,
  mediumorchid: 0xba55d3,
  mediumpurple: 0x9370db,
  mediumseagreen: 0x3cb371,
  mediumslateblue: 0x7b68ee,
  mediumspringgreen: 0x00fa9a,
  mediumturquoise: 0x48d1cc,
  mediumvioletred: 0xc71585,
  midnightblue: 0x191970,
  mintcream: 0xf5fffa,
  mistyrose: 0xffe4e1,
  moccasin: 0xffe4b5,
  navajowhite: 0xffdead,
  navy: 0x000080,
  oldlace: 0xfdf5e6,
  olive: 0x808000,
  olivedrab: 0x6b8e23,
  orange: 0xffa500,
  orangered: 0xff4500,
  orchid: 0xda70d6,
  palegoldenrod: 0xeee8aa,
  palegreen: 0x98fb98,
  paleturquoise: 0xafeeee,
  palevioletred: 0xdb7093,
  papayawhip: 0xffefd5,
  peachpuff: 0xffdab9,
  peru: 0xcd853f,
  pink: 0xffc0cb,
  plum: 0xdda0dd,
  powderblue: 0xb0e0e6,
  purple: 0x800080,
  rebeccapurple: 0x663399,
  red: 0xff0000,
  rosybrown: 0xbc8f8f,
  royalblue: 0x4169e1,
  saddlebrown: 0x8b4513,
  salmon: 0xfa8072,
  sandybrown: 0xf4a460,
  seagreen: 0x2e8b57,
  seashell: 0xfff5ee,
  sienna: 0xa0522d,
  silver: 0xc0c0c0,
  skyblue: 0x87ceeb,
  slateblue: 0x6a5acd,
  slategray: 0x708090,
  slategrey: 0x708090,
  snow: 0xfffafa,
  springgreen: 0x00ff7f,
  steelblue: 0x4682b4,
  tan: 0xd2b48c,
  teal: 0x008080,
  thistle: 0xd8bfd8,
  tomato: 0xff6347,
  turquoise: 0x40e0d0,
  violet: 0xee82ee,
  wheat: 0xf5deb3,
  white: 0xffffff,
  whitesmoke: 0xf5f5f5,
  yellow: 0xffff00,
  yellowgreen: 0x9acd32
};
define(Color, color_color, {
  copy: function copy(channels) {
    return Object.assign(new this.constructor(), this, channels);
  },
  displayable: function displayable() {
    return this.rgb().displayable();
  },
  hex: color_formatHex,
  // Deprecated! Use color.formatHex.
  formatHex: color_formatHex,
  formatHsl: color_formatHsl,
  formatRgb: color_formatRgb,
  toString: color_formatRgb
});

function color_formatHex() {
  return this.rgb().formatHex();
}

function color_formatHsl() {
  return hslConvert(this).formatHsl();
}

function color_formatRgb() {
  return this.rgb().formatRgb();
}

function color_color(format) {
  var m, l;
  format = (format + "").trim().toLowerCase();
  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000
  : l === 3 ? new Rgb(m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, (m & 0xf) << 4 | m & 0xf, 1) // #f00
  : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000
  : l === 4 ? rgba(m >> 12 & 0xf | m >> 8 & 0xf0, m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, ((m & 0xf) << 4 | m & 0xf) / 0xff) // #f000
  : null // invalid hex
  ) : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
  : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
  : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
  : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
  : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
  : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
  : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins
  : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0) : null;
}

function rgbn(n) {
  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
}

function rgba(r, g, b, a) {
  if (a <= 0) r = g = b = NaN;
  return new Rgb(r, g, b, a);
}

function rgbConvert(o) {
  if (!(o instanceof Color)) o = color_color(o);
  if (!o) return new Rgb();
  o = o.rgb();
  return new Rgb(o.r, o.g, o.b, o.opacity);
}
function color_rgb(r, g, b, opacity) {
  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
}
function Rgb(r, g, b, opacity) {
  this.r = +r;
  this.g = +g;
  this.b = +b;
  this.opacity = +opacity;
}
define(Rgb, color_rgb, extend(Color, {
  brighter: function brighter(k) {
    k = k == null ? _brighter : Math.pow(_brighter, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  darker: function darker(k) {
    k = k == null ? _darker : Math.pow(_darker, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  rgb: function rgb() {
    return this;
  },
  displayable: function displayable() {
    return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;
  },
  hex: rgb_formatHex,
  // Deprecated! Use color.formatHex.
  formatHex: rgb_formatHex,
  formatRgb: rgb_formatRgb,
  toString: rgb_formatRgb
}));

function rgb_formatHex() {
  return "#" + hex(this.r) + hex(this.g) + hex(this.b);
}

function rgb_formatRgb() {
  var a = this.opacity;
  a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
  return (a === 1 ? "rgb(" : "rgba(") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a === 1 ? ")" : ", " + a + ")");
}

function hex(value) {
  value = Math.max(0, Math.min(255, Math.round(value) || 0));
  return (value < 16 ? "0" : "") + value.toString(16);
}

function hsla(h, s, l, a) {
  if (a <= 0) h = s = l = NaN;else if (l <= 0 || l >= 1) h = s = NaN;else if (s <= 0) h = NaN;
  return new Hsl(h, s, l, a);
}

function hslConvert(o) {
  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Color)) o = color_color(o);
  if (!o) return new Hsl();
  if (o instanceof Hsl) return o;
  o = o.rgb();
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      min = Math.min(r, g, b),
      max = Math.max(r, g, b),
      h = NaN,
      s = max - min,
      l = (max + min) / 2;

  if (s) {
    if (r === max) h = (g - b) / s + (g < b) * 6;else if (g === max) h = (b - r) / s + 2;else h = (r - g) / s + 4;
    s /= l < 0.5 ? max + min : 2 - max - min;
    h *= 60;
  } else {
    s = l > 0 && l < 1 ? 0 : h;
  }

  return new Hsl(h, s, l, o.opacity);
}
function hsl(h, s, l, opacity) {
  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
}

function Hsl(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

define(Hsl, hsl, extend(Color, {
  brighter: function brighter(k) {
    k = k == null ? _brighter : Math.pow(_brighter, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function darker(k) {
    k = k == null ? _darker : Math.pow(_darker, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function rgb() {
    var h = this.h % 360 + (this.h < 0) * 360,
        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,
        l = this.l,
        m2 = l + (l < 0.5 ? l : 1 - l) * s,
        m1 = 2 * l - m2;
    return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);
  },
  displayable: function displayable() {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;
  },
  formatHsl: function formatHsl() {
    var a = this.opacity;
    a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
    return (a === 1 ? "hsl(" : "hsla(") + (this.h || 0) + ", " + (this.s || 0) * 100 + "%, " + (this.l || 0) * 100 + "%" + (a === 1 ? ")" : ", " + a + ")");
  }
}));
/* From FvD 13.37, CSS Color Module Level 3 */

function hsl2rgb(h, m1, m2) {
  return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;
}
// CONCATENATED MODULE: ../node_modules/d3-interpolate/src/basis.js
function basis(t1, v0, v1, v2, v3) {
  var t2 = t1 * t1,
      t3 = t2 * t1;
  return ((1 - 3 * t1 + 3 * t2 - t3) * v0 + (4 - 6 * t2 + 3 * t3) * v1 + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 + t3 * v3) / 6;
}
/* harmony default export */ var src_basis = (function (values) {
  var n = values.length - 1;
  return function (t) {
    var i = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),
        v1 = values[i],
        v2 = values[i + 1],
        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,
        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
    return basis((t - i / n) * n, v0, v1, v2, v3);
  };
});
// CONCATENATED MODULE: ../node_modules/d3-interpolate/src/basisClosed.js

/* harmony default export */ var basisClosed = (function (values) {
  var n = values.length;
  return function (t) {
    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),
        v0 = values[(i + n - 1) % n],
        v1 = values[i % n],
        v2 = values[(i + 1) % n],
        v3 = values[(i + 2) % n];
    return basis((t - i / n) * n, v0, v1, v2, v3);
  };
});
// CONCATENATED MODULE: ../node_modules/d3-interpolate/src/constant.js
/* harmony default export */ var constant = (function (x) {
  return function () {
    return x;
  };
});
// CONCATENATED MODULE: ../node_modules/d3-interpolate/src/color.js


function color_linear(a, d) {
  return function (t) {
    return a + t * d;
  };
}

function exponential(a, b, y) {
  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function (t) {
    return Math.pow(a + t * b, y);
  };
}

function hue(a, b) {
  var d = b - a;
  return d ? color_linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);
}
function gamma(y) {
  return (y = +y) === 1 ? nogamma : function (a, b) {
    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);
  };
}
function nogamma(a, b) {
  var d = b - a;
  return d ? color_linear(a, d) : constant(isNaN(a) ? b : a);
}
// CONCATENATED MODULE: ../node_modules/d3-interpolate/src/rgb.js




/* harmony default export */ var src_rgb = ((function rgbGamma(y) {
  var color = gamma(y);

  function rgb(start, end) {
    var r = color((start = color_rgb(start)).r, (end = color_rgb(end)).r),
        g = color(start.g, end.g),
        b = color(start.b, end.b),
        opacity = nogamma(start.opacity, end.opacity);
    return function (t) {
      start.r = r(t);
      start.g = g(t);
      start.b = b(t);
      start.opacity = opacity(t);
      return start + "";
    };
  }

  rgb.gamma = rgbGamma;
  return rgb;
})(1));

function rgbSpline(spline) {
  return function (colors) {
    var n = colors.length,
        r = new Array(n),
        g = new Array(n),
        b = new Array(n),
        i,
        color;

    for (i = 0; i < n; ++i) {
      color = color_rgb(colors[i]);
      r[i] = color.r || 0;
      g[i] = color.g || 0;
      b[i] = color.b || 0;
    }

    r = spline(r);
    g = spline(g);
    b = spline(b);
    color.opacity = 1;
    return function (t) {
      color.r = r(t);
      color.g = g(t);
      color.b = b(t);
      return color + "";
    };
  };
}

var rgbBasis = rgbSpline(src_basis);
var rgbBasisClosed = rgbSpline(basisClosed);
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.typed.data-view.js
var es6_typed_data_view = __webpack_require__("o6jA");

// CONCATENATED MODULE: ../node_modules/d3-interpolate/src/numberArray.js

/* harmony default export */ var numberArray = (function (a, b) {
  if (!b) b = [];
  var n = a ? Math.min(b.length, a.length) : 0,
      c = b.slice(),
      i;
  return function (t) {
    for (i = 0; i < n; ++i) {
      c[i] = a[i] * (1 - t) + b[i] * t;
    }

    return c;
  };
});
function isNumberArray(x) {
  return ArrayBuffer.isView(x) && !(x instanceof DataView);
}
// CONCATENATED MODULE: ../node_modules/d3-interpolate/src/array.js


/* harmony default export */ var array = (function (a, b) {
  return (isNumberArray(b) ? numberArray : genericArray)(a, b);
});
function genericArray(a, b) {
  var nb = b ? b.length : 0,
      na = a ? Math.min(nb, a.length) : 0,
      x = new Array(na),
      c = new Array(nb),
      i;

  for (i = 0; i < na; ++i) {
    x[i] = src_value(a[i], b[i]);
  }

  for (; i < nb; ++i) {
    c[i] = b[i];
  }

  return function (t) {
    for (i = 0; i < na; ++i) {
      c[i] = x[i](t);
    }

    return c;
  };
}
// CONCATENATED MODULE: ../node_modules/d3-interpolate/src/date.js
/* harmony default export */ var date = (function (a, b) {
  var d = new Date();
  return a = +a, b = +b, function (t) {
    return d.setTime(a * (1 - t) + b * t), d;
  };
});
// CONCATENATED MODULE: ../node_modules/d3-interpolate/src/number.js
/* harmony default export */ var number = (function (a, b) {
  return a = +a, b = +b, function (t) {
    return a * (1 - t) + b * t;
  };
});
// CONCATENATED MODULE: ../node_modules/d3-interpolate/src/object.js

/* harmony default export */ var object = (function (a, b) {
  var i = {},
      c = {},
      k;
  if (a === null || typeof a !== "object") a = {};
  if (b === null || typeof b !== "object") b = {};

  for (k in b) {
    if (k in a) {
      i[k] = src_value(a[k], b[k]);
    } else {
      c[k] = b[k];
    }
  }

  return function (t) {
    for (k in i) {
      c[k] = i[k](t);
    }

    return c;
  };
});
// CONCATENATED MODULE: ../node_modules/d3-interpolate/src/string.js


var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
    reB = new RegExp(reA.source, "g");

function zero(b) {
  return function () {
    return b;
  };
}

function one(b) {
  return function (t) {
    return b(t) + "";
  };
}

/* harmony default export */ var string = (function (a, b) {
  var bi = reA.lastIndex = reB.lastIndex = 0,
      // scan index for next number in b
  am,
      // current match in a
  bm,
      // current match in b
  bs,
      // string preceding current number in b, if any
  i = -1,
      // index in s
  s = [],
      // string constants and placeholders
  q = []; // number interpolators
  // Coerce inputs to strings.

  a = a + "", b = b + ""; // Interpolate pairs of numbers in a & b.

  while ((am = reA.exec(a)) && (bm = reB.exec(b))) {
    if ((bs = bm.index) > bi) {
      // a string precedes the next number in b
      bs = b.slice(bi, bs);
      if (s[i]) s[i] += bs; // coalesce with previous string
      else s[++i] = bs;
    }

    if ((am = am[0]) === (bm = bm[0])) {
      // numbers in a & b match
      if (s[i]) s[i] += bm; // coalesce with previous string
      else s[++i] = bm;
    } else {
      // interpolate non-matching numbers
      s[++i] = null;
      q.push({
        i: i,
        x: number(am, bm)
      });
    }

    bi = reB.lastIndex;
  } // Add remains of b.


  if (bi < b.length) {
    bs = b.slice(bi);
    if (s[i]) s[i] += bs; // coalesce with previous string
    else s[++i] = bs;
  } // Special optimization for only a single match.
  // Otherwise, interpolate each of the numbers and rejoin the string.


  return s.length < 2 ? q[0] ? one(q[0].x) : zero(b) : (b = q.length, function (t) {
    for (var i = 0, o; i < b; ++i) {
      s[(o = q[i]).i] = o.x(t);
    }

    return s.join("");
  });
});
// CONCATENATED MODULE: ../node_modules/d3-interpolate/src/value.js













/* harmony default export */ var src_value = (function (a, b) {
  var t = typeof b,
      c;
  return b == null || t === "boolean" ? constant(b) : (t === "number" ? number : t === "string" ? (c = color_color(b)) ? (b = c, src_rgb) : string : b instanceof color_color ? src_rgb : b instanceof Date ? date : isNumberArray(b) ? numberArray : Array.isArray(b) ? genericArray : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? object : number)(a, b);
});
// EXTERNAL MODULE: ../node_modules/core-js/modules/es7.array.includes.js
var es7_array_includes = __webpack_require__("oMRA");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.string.includes.js
var es6_string_includes = __webpack_require__("6d4m");

// CONCATENATED MODULE: ../node_modules/@antv/g-base/esm/util/color.js


var isColorProp = function isColorProp(prop) {
  return ['fill', 'stroke', 'fillStyle', 'strokeStyle'].includes(prop);
};
var isGradientColor = function isGradientColor(val) {
  return /^[r,R,L,l]{1}[\s]*\(/.test(val);
};
// CONCATENATED MODULE: ../node_modules/@antv/g-base/esm/animate/timeline.js





 // 目前整体动画只需要数值和数组的差值计算



var IDENTITY_MATRIX = [1, 0, 0, 0, 1, 0, 0, 0, 1];
/**
 * 使用 ratio 进行插值计算来更新属性
 * @param {IElement}  shape    元素
 * @param {Animation} animation 动画
 * @param {number}    ratio    比例
 * @return {boolean}  动画是否执行完成
 */

function _update(shape, animation, ratio) {
  var cProps = {}; // 此刻属性

  var fromAttrs = animation.fromAttrs,
      toAttrs = animation.toAttrs;

  if (shape.destroyed) {
    return;
  }

  var interf; //  差值函数

  for (var k in toAttrs) {
    if (!Object(esm["isEqual"])(fromAttrs[k], toAttrs[k])) {
      if (k === 'path') {
        var toPath = toAttrs[k];
        var fromPath = fromAttrs[k];

        if (toPath.length > fromPath.length) {
          toPath = path_parsePathString(toAttrs[k]); // 终点状态

          fromPath = path_parsePathString(fromAttrs[k]); // 起始状态

          fromPath = fillPathByDiff(fromPath, toPath);
          fromPath = formatPath(fromPath, toPath);
          animation.fromAttrs.path = fromPath;
          animation.toAttrs.path = toPath;
        } else if (!animation.pathFormatted) {
          toPath = path_parsePathString(toAttrs[k]);
          fromPath = path_parsePathString(fromAttrs[k]);
          fromPath = formatPath(fromPath, toPath);
          animation.fromAttrs.path = fromPath;
          animation.toAttrs.path = toPath;
          animation.pathFormatted = true;
        }

        cProps[k] = [];

        for (var i = 0; i < toPath.length; i++) {
          var toPathPoint = toPath[i];
          var fromPathPoint = fromPath[i];
          var cPathPoint = [];

          for (var j = 0; j < toPathPoint.length; j++) {
            if (Object(esm["isNumber"])(toPathPoint[j]) && fromPathPoint && Object(esm["isNumber"])(fromPathPoint[j])) {
              interf = src_value(fromPathPoint[j], toPathPoint[j]);
              cPathPoint.push(interf(ratio));
            } else {
              cPathPoint.push(toPathPoint[j]);
            }
          }

          cProps[k].push(cPathPoint);
        }
      } else if (k === 'matrix') {
        /*
         对矩阵进行插值时，需要保证矩阵不为空，为空则使用单位矩阵
         TODO: 二维和三维场景下单位矩阵不同，之后 WebGL 版需要做进一步处理
         */
        var matrixFn = array(fromAttrs[k] || IDENTITY_MATRIX, toAttrs[k] || IDENTITY_MATRIX);
        var currentMatrix = matrixFn(ratio);
        cProps[k] = currentMatrix;
      } else if (isColorProp(k) && isGradientColor(toAttrs[k])) {
        cProps[k] = toAttrs[k];
      } else if (!Object(esm["isFunction"])(toAttrs[k])) {
        // 非函数类型的值才能做插值
        interf = src_value(fromAttrs[k], toAttrs[k]);
        cProps[k] = interf(ratio);
      }
    }
  }

  shape.attr(cProps);
}
/**
 * 根据自定义帧动画函数 onFrame 来更新属性
 * @param {IElement}  shape    元素
 * @param {Animation} animation 动画
 * @param {number}    elapsed  动画执行时间(毫秒)
 * @return {boolean}  动画是否执行完成
 */


function update(shape, animation, elapsed) {
  var startTime = animation.startTime,
      delay = animation.delay; // 如果还没有开始执行或暂停，先不更新

  if (elapsed < startTime + delay || animation._paused) {
    return false;
  }

  var ratio;
  var duration = animation.duration;
  var easing = animation.easing; // 已执行时间

  elapsed = elapsed - startTime - animation.delay;

  if (animation.repeat) {
    // 如果动画重复执行，则 elapsed > duration，计算 ratio 时需取模
    ratio = elapsed % duration / duration;
    ratio = src_namespaceObject[easing](ratio);
  } else {
    ratio = elapsed / duration;

    if (ratio < 1) {
      // 动画未执行完
      ratio = src_namespaceObject[easing](ratio);
    } else {
      // 动画已执行完
      if (animation.onFrame) {
        shape.attr(animation.onFrame(1));
      } else {
        shape.attr(animation.toAttrs);
      }

      return true;
    }
  }

  if (animation.onFrame) {
    var attrs = animation.onFrame(ratio);
    shape.attr(attrs);
  } else {
    _update(shape, animation, ratio);
  }

  return false;
}

var timeline_Timeline =
/** @class */
function () {
  /**
   * 时间轴构造函数，依赖于画布
   * @param {}
   */
  function Timeline(canvas) {
    /**
     * 执行动画的元素列表
     * @type {IElement[]}
     */
    this.animators = [];
    /**
     * 当前时间
     * @type {number}
     */

    this.current = 0;
    /**
     * 定时器
     * @type {d3Timer.Timer}
     */

    this.timer = null;
    this.canvas = canvas;
  }
  /**
   * 初始化定时器
   */


  Timeline.prototype.initTimer = function () {
    var _this = this;

    var isFinished = false;
    var shape;
    var animations;
    var animation;
    this.timer = timer(function (elapsed) {
      _this.current = elapsed;

      if (_this.animators.length > 0) {
        for (var i = _this.animators.length - 1; i >= 0; i--) {
          shape = _this.animators[i];

          if (shape.destroyed) {
            // 如果已经被销毁，直接移出队列
            _this.removeAnimator(i);

            continue;
          }

          if (!shape.isAnimatePaused()) {
            animations = shape.get('animations');

            for (var j = animations.length - 1; j >= 0; j--) {
              animation = animations[j];
              isFinished = update(shape, animation, elapsed);

              if (isFinished) {
                animations.splice(j, 1);
                isFinished = false;

                if (animation.callback) {
                  animation.callback();
                }
              }
            }
          }

          if (animations.length === 0) {
            _this.removeAnimator(i);
          }
        }

        var autoDraw = _this.canvas.get('autoDraw'); // 非自动渲染模式下，手动调用 canvas.draw() 重新渲染


        if (!autoDraw) {
          _this.canvas.draw();
        }
      }
    });
  };
  /**
   * 增加动画元素
   */


  Timeline.prototype.addAnimator = function (shape) {
    this.animators.push(shape);
  };
  /**
   * 移除动画元素
   */


  Timeline.prototype.removeAnimator = function (index) {
    this.animators.splice(index, 1);
  };
  /**
   * 是否有动画在执行
   */


  Timeline.prototype.isAnimating = function () {
    return !!this.animators.length;
  };
  /**
   * 停止定时器
   */


  Timeline.prototype.stop = function () {
    if (this.timer) {
      this.timer.stop();
    }
  };
  /**
   * 停止时间轴上所有元素的动画，并置空动画元素列表
   * @param {boolean} toEnd 是否到动画的最终状态，用来透传给动画元素的 stopAnimate 方法
   */


  Timeline.prototype.stopAllAnimations = function (toEnd) {
    if (toEnd === void 0) {
      toEnd = true;
    }

    this.animators.forEach(function (animator) {
      animator.stopAnimate(toEnd);
    });
    this.animators = [];
    this.canvas.draw();
  };
  /**
   * 获取当前时间
   */


  Timeline.prototype.getTime = function () {
    return this.current;
  };

  return Timeline;
}();

/* harmony default export */ var animate_timeline = (timeline_Timeline);
// CONCATENATED MODULE: ../node_modules/@antv/g-base/esm/event/event-contoller.js



/**
 * @fileoverview 事件处理器
 * @author dxq613@gmail.com
 */


var CLICK_OFFSET = 40;
var LEFT_BTN_CODE = 0;
var event_contoller_DELEGATION_SPLIT = ':';
var EVENTS = ['mousedown', 'mouseup', 'dblclick', 'mouseout', 'mouseover', 'mousemove', 'mouseleave', 'mouseenter', 'touchstart', 'touchmove', 'touchend', 'dragenter', 'dragover', 'dragleave', 'drop', 'contextmenu', 'mousewheel']; // 是否有委托事件监听

function hasDelegation(events, type) {
  for (var key in events) {
    if (events.hasOwnProperty(key) && key.indexOf(event_contoller_DELEGATION_SPLIT + type) >= 0) {
      return true;
    }
  }

  return false;
} // 触发目标事件，目标只能是 shape 或 canvas


function emitTargetEvent(target, type, eventObj) {
  eventObj.name = type;
  eventObj.target = target;
  eventObj.currentTarget = target;
  eventObj.delegateTarget = target;
  target.emit(type, eventObj);
} // 事件冒泡, enter 和 leave 需要对 fromShape 和 toShape 进行判同


function bubbleEvent(container, type, eventObj) {
  if (eventObj.bubbles) {
    var relativeShape = void 0;
    var isOverEvent = false;

    if (type === 'mouseenter') {
      relativeShape = eventObj.fromShape;
      isOverEvent = true;
    } else if (type === 'mouseleave') {
      isOverEvent = true;
      relativeShape = eventObj.toShape;
    } // canvas 上的 mouseenter， mouseleave 事件，仅当进入或者移出 canvas 时触发


    if (container.isCanvas() && isOverEvent) {
      return;
    } // 如果相关图形同当前图形在同一个容器内，不触发事件


    if (relativeShape && isParent(container, relativeShape)) {
      // 阻止继续向上冒泡
      eventObj.bubbles = false;
      return;
    } // 事件名称可能在委托过程中被修改，因此事件冒泡时需要重新设置事件名称


    eventObj.name = type;
    eventObj.currentTarget = container;
    eventObj.delegateTarget = container;
    container.emit(type, eventObj);
  }
}

var event_contoller_EventController =
/** @class */
function () {
  function EventController(cfg) {
    var _this = this; // 正在被拖拽的图形


    this.draggingShape = null;
    this.dragging = false; // 当前鼠标/touch所在位置的图形

    this.currentShape = null;
    this.mousedownShape = null;
    this.mousedownPoint = null; // 统一处理所有的回调

    this._eventCallback = function (ev) {
      var type = ev.type;

      _this._triggerEvent(type, ev);
    }; // 在 document 处理拖拽到画布外的事件，处理从图形上移除画布未被捕捉的问题


    this._onDocumentMove = function (ev) {
      var canvas = _this.canvas;
      var el = canvas.get('el');

      if (el !== ev.target) {
        // 不在 canvas 上移动
        if (_this.dragging || _this.currentShape) {
          var pointInfo = _this._getPointInfo(ev); // 还在拖拽过程中


          if (_this.dragging) {
            _this._emitEvent('drag', ev, pointInfo, _this.draggingShape);
          } // 说明从某个图形直接移动到了画布外面，
          // 修复了 mouseleave 的 bug 后不再出现这种情况
          // if (this.currentShape) {
          //   this._emitEvent('mouseleave', ev, pointInfo, this.currentShape, this.currentShape, null);
          //   this.currentShape = null;
          // }

        }
      }
    }; // 在 document 上处理拖拽到外面，释放鼠标时触发 dragend


    this._onDocumentMouseUp = function (ev) {
      var canvas = _this.canvas;
      var el = canvas.get('el');

      if (el !== ev.target) {
        // 不在 canvas 上移动
        if (_this.dragging) {
          var pointInfo = _this._getPointInfo(ev);

          if (_this.draggingShape) {
            // 如果存在拖拽的图形，则也触发 drop 事件
            _this._emitEvent('drop', ev, pointInfo, null);
          }

          _this._emitEvent('dragend', ev, pointInfo, _this.draggingShape);

          _this._afterDrag(_this.draggingShape, pointInfo, ev);
        }
      }
    };

    this.canvas = cfg.canvas;
  }

  EventController.prototype.init = function () {
    this._bindEvents();
  }; // 注册事件


  EventController.prototype._bindEvents = function () {
    var _this = this;

    var el = this.canvas.get('el');
    each_default()(EVENTS, function (eventName) {
      el.addEventListener(eventName, _this._eventCallback);
    });

    if (document) {
      // 处理移动到外面没有触发 shape mouse leave 的事件
      // 处理拖拽到外部的问题
      document.addEventListener('mousemove', this._onDocumentMove); // 处理拖拽过程中在外部释放鼠标的问题

      document.addEventListener('mouseup', this._onDocumentMouseUp);
    }
  }; // 清理事件


  EventController.prototype._clearEvents = function () {
    var _this = this;

    var el = this.canvas.get('el');
    each_default()(EVENTS, function (eventName) {
      el.removeEventListener(eventName, _this._eventCallback);
    });

    if (document) {
      document.removeEventListener('mousemove', this._onDocumentMove);
      document.removeEventListener('mouseup', this._onDocumentMouseUp);
    }
  };

  EventController.prototype._getEventObj = function (type, event, point, target, fromShape, toShape) {
    var eventObj = new graph_event(type, event);
    eventObj.fromShape = fromShape;
    eventObj.toShape = toShape;
    eventObj.x = point.x;
    eventObj.y = point.y;
    eventObj.clientX = point.clientX;
    eventObj.clientY = point.clientY;
    eventObj.propagationPath.push(target); // 事件的x,y应该是基于画布左上角的，与canvas的matrix无关

    return eventObj;
  }; // 根据点获取图形，提取成独立方法，便于后续优化


  EventController.prototype._getShape = function (point, ev) {
    return this.canvas.getShape(point.x, point.y, ev);
  }; // 获取事件的当前点的信息


  EventController.prototype._getPointInfo = function (ev) {
    var canvas = this.canvas;
    var clientPoint = canvas.getClientByEvent(ev);
    var point = canvas.getPointByEvent(ev);
    return {
      x: point.x,
      y: point.y,
      clientX: clientPoint.x,
      clientY: clientPoint.y
    };
  }; // 触发事件


  EventController.prototype._triggerEvent = function (type, ev) {
    var pointInfo = this._getPointInfo(ev); // 每次都获取图形有一定成本，后期可以考虑进行缓存策略


    var shape = this._getShape(pointInfo, ev);

    var method = this["_on" + type];
    var leaveCanvas = false;

    if (method) {
      method.call(this, pointInfo, shape, ev);
    } else {
      var preShape = this.currentShape; // 如果进入、移出画布时存在图形，则要分别触发事件

      if (type === 'mouseenter' || type === 'dragenter' || type === 'mouseover') {
        this._emitEvent(type, ev, pointInfo, null, null, shape); // 先进入画布


        if (shape) {
          this._emitEvent(type, ev, pointInfo, shape, null, shape); // 再触发图形的事件

        }

        if (type === 'mouseenter' && this.draggingShape) {
          // 如果正在拖拽图形, 则触发 dragleave
          this._emitEvent('dragenter', ev, pointInfo, null);
        }
      } else if (type === 'mouseleave' || type === 'dragleave' || type === 'mouseout') {
        leaveCanvas = true;

        if (preShape) {
          this._emitEvent(type, ev, pointInfo, preShape, preShape, null); // 先触发图形的事件

        }

        this._emitEvent(type, ev, pointInfo, null, preShape, null); // 再触发离开画布事件


        if (type === 'mouseleave' && this.draggingShape) {
          this._emitEvent('dragleave', ev, pointInfo, null);
        }
      } else {
        this._emitEvent(type, ev, pointInfo, shape, null, null); // 一般事件中不需要考虑 from, to

      }
    }

    if (!leaveCanvas) {
      this.currentShape = shape;
    } // 当鼠标从画布移动到 shape 或者从 preShape 移动到 shape 时，应用 shape 上的鼠标样式


    if (shape && !shape.get('destroyed')) {
      var canvas = this.canvas;
      var el = canvas.get('el');
      el.style.cursor = shape.attr('cursor') || canvas.get('cursor');
    }
  }; // 记录下点击的位置、图形，便于拖拽事件、click 事件的判定


  EventController.prototype._onmousedown = function (pointInfo, shape, event) {
    // 只有鼠标左键的 mousedown 事件才会设置 mousedownShape 等属性，避免鼠标右键的 mousedown 事件引起其他事件发生
    if (event.button === LEFT_BTN_CODE) {
      this.mousedownShape = shape;
      this.mousedownPoint = pointInfo;
      this.mousedownTimeStamp = event.timeStamp;
    }

    this._emitEvent('mousedown', event, pointInfo, shape, null, null); // mousedown 不考虑fromShape, toShape

  }; // mouseleave 和 mouseenter 都是成对存在的
  // mouseenter 和 mouseover 同时触发


  EventController.prototype._emitMouseoverEvents = function (event, pointInfo, fromShape, toShape) {
    var el = this.canvas.get('el');

    if (fromShape !== toShape) {
      if (fromShape) {
        this._emitEvent('mouseout', event, pointInfo, fromShape, fromShape, toShape);

        this._emitEvent('mouseleave', event, pointInfo, fromShape, fromShape, toShape); // 当鼠标从 fromShape 移动到画布上时，重置鼠标样式


        if (!toShape || toShape.get('destroyed')) {
          el.style.cursor = this.canvas.get('cursor');
        }
      }

      if (toShape) {
        this._emitEvent('mouseover', event, pointInfo, toShape, fromShape, toShape);

        this._emitEvent('mouseenter', event, pointInfo, toShape, fromShape, toShape);
      }
    }
  }; // dragover 不等同于 mouseover，而等同于 mousemove


  EventController.prototype._emitDragoverEvents = function (event, pointInfo, fromShape, toShape, isCanvasEmit) {
    if (toShape) {
      if (toShape !== fromShape) {
        if (fromShape) {
          this._emitEvent('dragleave', event, pointInfo, fromShape, fromShape, toShape);
        }

        this._emitEvent('dragenter', event, pointInfo, toShape, fromShape, toShape);
      }

      if (!isCanvasEmit) {
        this._emitEvent('dragover', event, pointInfo, toShape);
      }
    } else if (fromShape) {
      // TODO: 此处判断有问题，当 drag 图形时，也会触发一次 dragleave 事件，因为此时 toShape 为 null，这不是所期望的
      // 经过空白区域
      this._emitEvent('dragleave', event, pointInfo, fromShape, fromShape, toShape);
    }

    if (isCanvasEmit) {
      this._emitEvent('dragover', event, pointInfo, toShape);
    }
  }; // drag 完成后，需要做一些清理工作


  EventController.prototype._afterDrag = function (draggingShape, pointInfo, event) {
    if (draggingShape) {
      draggingShape.set('capture', true); // 恢复可以拾取

      this.draggingShape = null;
    }

    this.dragging = false; // drag 完成后，有可能 draggingShape 已经移动到了当前位置，所以不能直接取当前图形

    var shape = this._getShape(pointInfo, event); // 拖拽完成后，进行 enter，leave 的判定


    if (shape !== draggingShape) {
      this._emitMouseoverEvents(event, pointInfo, draggingShape, shape);
    }

    this.currentShape = shape; // 更新当前 shape，如果不处理当前图形的 mouseleave 事件可能会出问题
  }; // 按键抬起时，会终止拖拽、触发点击


  EventController.prototype._onmouseup = function (pointInfo, shape, event) {
    // eevent.button === 0 表示鼠标左键事件，此处加上判断主要是为了避免右键鼠标会触发 mouseup 和 click 事件
    // ref: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button
    if (event.button === LEFT_BTN_CODE) {
      var draggingShape = this.draggingShape;

      if (this.dragging) {
        // 存在可以拖拽的图形，同时拖拽到其他图形上时触发 drag 事件
        if (draggingShape) {
          this._emitEvent('drop', event, pointInfo, shape);
        }

        this._emitEvent('dragend', event, pointInfo, draggingShape);

        this._afterDrag(draggingShape, pointInfo, event);
      } else {
        this._emitEvent('mouseup', event, pointInfo, shape); // 先触发 mouseup 再触发 click


        if (shape === this.mousedownShape) {
          this._emitEvent('click', event, pointInfo, shape);
        }

        this.mousedownShape = null;
        this.mousedownPoint = null;
      }
    }
  }; // 当触发浏览器的 dragover 事件时，不会再触发 mousemove ，所以这时候的 dragenter, dragleave 事件需要重新处理


  EventController.prototype._ondragover = function (pointInfo, shape, event) {
    event.preventDefault(); // 如果不对 dragover 进行 preventDefault，则不会在 canvas 上触发 drop 事件

    var preShape = this.currentShape;

    this._emitDragoverEvents(event, pointInfo, preShape, shape, true);
  }; // 大量的图形事件，都通过 mousemove 模拟


  EventController.prototype._onmousemove = function (pointInfo, shape, event) {
    var canvas = this.canvas;
    var preShape = this.currentShape;
    var draggingShape = this.draggingShape; // 正在拖拽时

    if (this.dragging) {
      // 正在拖拽中
      if (draggingShape) {
        // 如果拖拽了 shape 会触发 dragenter, dragleave, dragover 和 drag 事件
        this._emitDragoverEvents(event, pointInfo, preShape, shape, false);
      } // 如果存在 draggingShape 则会在 draggingShape 上触发 drag 事件，冒泡到 canvas 上
      // 否则在 canvas 上触发 drag 事件


      this._emitEvent('drag', event, pointInfo, draggingShape);
    } else {
      var mousedownPoint = this.mousedownPoint;

      if (mousedownPoint) {
        // 当鼠标点击下去，同时移动时，进行 drag 判定
        var mousedownShape = this.mousedownShape;
        var now = event.timeStamp;
        var timeWindow = now - this.mousedownTimeStamp;
        var dx = mousedownPoint.clientX - pointInfo.clientX;
        var dy = mousedownPoint.clientY - pointInfo.clientY;
        var dist = dx * dx + dy * dy;

        if (timeWindow > 120 || dist > CLICK_OFFSET) {
          if (mousedownShape && mousedownShape.get('draggable')) {
            // 设置了 draggable 的 shape 才能触发 drag 相关的事件
            draggingShape = this.mousedownShape; // 拖动鼠标点下时的 shape

            draggingShape.set('capture', false); // 禁止继续拾取，否则无法进行 dragover,dragenter,dragleave,drop的判定

            this.draggingShape = draggingShape;
            this.dragging = true;

            this._emitEvent('dragstart', event, pointInfo, draggingShape); // 清理按下鼠标时缓存的值


            this.mousedownShape = null;
            this.mousedownPoint = null;
          } else if (!mousedownShape && canvas.get('draggable')) {
            // 设置了 draggable 的 canvas 才能触发 drag 相关的事件
            this.dragging = true;

            this._emitEvent('dragstart', event, pointInfo, null); // 清理按下鼠标时缓存的值


            this.mousedownShape = null;
            this.mousedownPoint = null;
          } else {
            this._emitMouseoverEvents(event, pointInfo, preShape, shape);

            this._emitEvent('mousemove', event, pointInfo, shape);
          }
        } else {
          this._emitMouseoverEvents(event, pointInfo, preShape, shape);

          this._emitEvent('mousemove', event, pointInfo, shape);
        }
      } else {
        // 没有按键按下时，则直接触发 mouse over 相关的各种事件
        this._emitMouseoverEvents(event, pointInfo, preShape, shape); // 始终触发移动


        this._emitEvent('mousemove', event, pointInfo, shape);
      }
    }
  }; // 触发事件


  EventController.prototype._emitEvent = function (type, event, pointInfo, shape, fromShape, toShape) {
    var eventObj = this._getEventObj(type, event, pointInfo, shape, fromShape, toShape); // 存在 shape 触发，则进行冒泡处理


    if (shape) {
      eventObj.shape = shape; // 触发 shape 上的事件

      emitTargetEvent(shape, type, eventObj);
      var parent_1 = shape.getParent(); // 执行冒泡

      while (parent_1) {
        // 委托事件要先触发
        parent_1.emitDelegation(type, eventObj); // 事件冒泡停止，不能妨碍委托事件

        if (!eventObj.propagationStopped) {
          bubbleEvent(parent_1, type, eventObj);
        }

        eventObj.propagationPath.push(parent_1);
        parent_1 = parent_1.getParent();
      }
    } else {
      // 如果没有 shape 直接在 canvas 上触发
      var canvas = this.canvas; // 直接触发 canvas 上的事件

      emitTargetEvent(canvas, type, eventObj);
    }
  };

  EventController.prototype.destroy = function () {
    // 清理事件
    this._clearEvents(); // 清理缓存的对象


    this.canvas = null;
    this.currentShape = null;
    this.draggingShape = null;
    this.mousedownPoint = null;
    this.mousedownShape = null;
    this.mousedownTimeStamp = null;
  };

  return EventController;
}();

/* harmony default export */ var event_contoller = (event_contoller_EventController);
// CONCATENATED MODULE: ../node_modules/@antv/g-base/esm/abstract/canvas.js







var PX_SUFFIX = 'px';
var browser = Object(es["a" /* detect */])();
var isFirefox = browser && browser.name === 'firefox';

var canvas_Canvas =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Canvas, _super);

  function Canvas(cfg) {
    var _this = _super.call(this, cfg) || this;

    _this.initContainer();

    _this.initDom();

    _this.initEvents();

    _this.initTimeline();

    return _this;
  }

  Canvas.prototype.getDefaultCfg = function () {
    var cfg = _super.prototype.getDefaultCfg.call(this); // set default cursor style for canvas


    cfg['cursor'] = 'default'; // CSS transform 目前尚未经过长时间验证，为了避免影响上层业务，默认关闭，上层按需开启

    cfg['supportCSSTransform'] = false;
    return cfg;
  };
  /**
   * @protected
   * 初始化容器
   */


  Canvas.prototype.initContainer = function () {
    var container = this.get('container');

    if (is_string_default()(container)) {
      container = document.getElementById(container);
      this.set('container', container);
    }
  };
  /**
   * @protected
   * 初始化 DOM
   */


  Canvas.prototype.initDom = function () {
    var el = this.createDom();
    this.set('el', el); // 附加到容器

    var container = this.get('container');
    container.appendChild(el); // 设置初始宽度

    this.setDOMSize(this.get('width'), this.get('height'));
  };
  /**
   * @protected
   * 初始化绑定的事件
   */


  Canvas.prototype.initEvents = function () {
    var eventController = new event_contoller({
      canvas: this
    });
    eventController.init();
    this.set('eventController', eventController);
  };
  /**
   * @protected
   * 初始化时间轴
   */


  Canvas.prototype.initTimeline = function () {
    var timeline = new animate_timeline(this);
    this.set('timeline', timeline);
  };
  /**
   * @protected
   * 修改画布对应的 DOM 的大小
   * @param {number} width  宽度
   * @param {number} height 高度
   */


  Canvas.prototype.setDOMSize = function (width, height) {
    var el = this.get('el');

    if (isBrowser) {
      el.style.width = width + PX_SUFFIX;
      el.style.height = height + PX_SUFFIX;
    }
  }; // 实现接口


  Canvas.prototype.changeSize = function (width, height) {
    this.setDOMSize(width, height);
    this.set('width', width);
    this.set('height', height);
    this.onCanvasChange('changeSize');
  };
  /**
   * 获取当前的渲染引擎
   * @return {Renderer} 返回当前的渲染引擎
   */


  Canvas.prototype.getRenderer = function () {
    return this.get('renderer');
  };
  /**
   * 获取画布的 cursor 样式
   * @return {Cursor}
   */


  Canvas.prototype.getCursor = function () {
    return this.get('cursor');
  };
  /**
   * 设置画布的 cursor 样式
   * @param {Cursor} cursor  cursor 样式
   */


  Canvas.prototype.setCursor = function (cursor) {
    this.set('cursor', cursor);
    var el = this.get('el');

    if (isBrowser && el) {
      // 直接设置样式，不等待鼠标移动时再设置
      el.style.cursor = cursor;
    }
  }; // 实现接口


  Canvas.prototype.getPointByEvent = function (ev) {
    var supportCSSTransform = this.get('supportCSSTransform');

    if (supportCSSTransform) {
      // For Firefox <= 38
      if (isFirefox && !is_nil_default()(ev.layerX) && ev.layerX !== ev.offsetX) {
        return {
          x: ev.layerX,
          y: ev.layerY
        };
      }

      if (!is_nil_default()(ev.offsetX)) {
        // For IE6+, Firefox >= 39, Chrome, Safari, Opera
        return {
          x: ev.offsetX,
          y: ev.offsetY
        };
      }
    } // should calculate by self for other cases, like Safari in ios
    // TODO: support CSS transform


    var _a = this.getClientByEvent(ev),
        clientX = _a.x,
        clientY = _a.y;

    return this.getPointByClient(clientX, clientY);
  }; // 获取 touch 事件的 clientX 和 clientY 需要单独处理


  Canvas.prototype.getClientByEvent = function (ev) {
    var clientInfo = ev;

    if (ev.touches) {
      if (ev.type === 'touchend') {
        clientInfo = ev.changedTouches[0];
      } else {
        clientInfo = ev.touches[0];
      }
    }

    return {
      x: clientInfo.clientX,
      y: clientInfo.clientY
    };
  }; // 实现接口


  Canvas.prototype.getPointByClient = function (clientX, clientY) {
    var el = this.get('el');
    var bbox = el.getBoundingClientRect();
    return {
      x: clientX - bbox.left,
      y: clientY - bbox.top
    };
  }; // 实现接口


  Canvas.prototype.getClientByPoint = function (x, y) {
    var el = this.get('el');
    var bbox = el.getBoundingClientRect();
    return {
      x: x + bbox.left,
      y: y + bbox.top
    };
  }; // 实现接口


  Canvas.prototype.draw = function () {};
  /**
   * @protected
   * 销毁 DOM 容器
   */


  Canvas.prototype.removeDom = function () {
    var el = this.get('el');
    el.parentNode.removeChild(el);
  };
  /**
   * @protected
   * 清理所有的事件
   */


  Canvas.prototype.clearEvents = function () {
    var eventController = this.get('eventController');
    eventController.destroy();
  };

  Canvas.prototype.isCanvas = function () {
    return true;
  };

  Canvas.prototype.getParent = function () {
    return null;
  };

  Canvas.prototype.destroy = function () {
    var timeline = this.get('timeline');

    if (this.get('destroyed')) {
      return;
    }

    this.clear(); // 同初始化时相反顺序调用

    if (timeline) {
      // 画布销毁时自动停止动画
      timeline.stop();
    }

    this.clearEvents();
    this.removeDom();

    _super.prototype.destroy.call(this);
  };

  return Canvas;
}(abstract_container);

/* harmony default export */ var abstract_canvas = (canvas_Canvas);
// CONCATENATED MODULE: ../node_modules/@antv/g-base/esm/abstract/group.js



var group_AbstractGroup =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(AbstractGroup, _super);

  function AbstractGroup() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  AbstractGroup.prototype.isGroup = function () {
    return true;
  };

  AbstractGroup.prototype.isEntityGroup = function () {
    return false;
  };

  AbstractGroup.prototype.clone = function () {
    var clone = _super.prototype.clone.call(this); // 获取构造函数


    var children = this.getChildren();

    for (var i = 0; i < children.length; i++) {
      var child = children[i];
      clone.add(child.clone());
    }

    return clone;
  };

  return AbstractGroup;
}(abstract_container);

/* harmony default export */ var abstract_group = (group_AbstractGroup);
// CONCATENATED MODULE: ../node_modules/@antv/g-base/esm/abstract/shape.js




var shape_AbstractShape =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(AbstractShape, _super);

  function AbstractShape(cfg) {
    return _super.call(this, cfg) || this;
  } // 是否在包围盒内


  AbstractShape.prototype._isInBBox = function (refX, refY) {
    var bbox = this.getBBox();
    return bbox.minX <= refX && bbox.maxX >= refX && bbox.minY <= refY && bbox.maxY >= refY;
  };
  /**
   * 属性更改后需要做的事情
   * @protected
   * @param {ShapeAttrs} targetAttrs 渲染的图像属性
   */


  AbstractShape.prototype.afterAttrsChange = function (targetAttrs) {
    _super.prototype.afterAttrsChange.call(this, targetAttrs);

    this.clearCacheBBox();
  }; // 计算包围盒时，需要缓存，这是一个高频的操作


  AbstractShape.prototype.getBBox = function () {
    var bbox = this.get('bbox');

    if (!bbox) {
      bbox = this.calculateBBox();
      this.set('bbox', bbox);
    }

    return bbox;
  }; // 计算相对于画布的包围盒


  AbstractShape.prototype.getCanvasBBox = function () {
    var canvasBox = this.get('canvasBox');

    if (!canvasBox) {
      canvasBox = this.calculateCanvasBBox();
      this.set('canvasBox', canvasBox);
    }

    return canvasBox;
  };

  AbstractShape.prototype.applyMatrix = function (matrix) {
    _super.prototype.applyMatrix.call(this, matrix); // 清理掉缓存的包围盒


    this.set('canvasBox', null);
  };
  /**
   * 计算相对于画布的包围盒，默认等同于 bbox
   * @return {BBox} 包围盒
   */


  AbstractShape.prototype.calculateCanvasBBox = function () {
    var bbox = this.getBBox();
    var totalMatrix = this.getTotalMatrix();
    var minX = bbox.minX,
        minY = bbox.minY,
        maxX = bbox.maxX,
        maxY = bbox.maxY;

    if (totalMatrix) {
      var topLeft = multiplyVec2(totalMatrix, [bbox.minX, bbox.minY]);
      var topRight = multiplyVec2(totalMatrix, [bbox.maxX, bbox.minY]);
      var bottomLeft = multiplyVec2(totalMatrix, [bbox.minX, bbox.maxY]);
      var bottomRight = multiplyVec2(totalMatrix, [bbox.maxX, bbox.maxY]);
      minX = Math.min(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]);
      maxX = Math.max(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]);
      minY = Math.min(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1]);
      maxY = Math.max(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1]);
    }

    var attrs = this.attrs; // 如果存在 shadow 则计算 shadow

    if (attrs.shadowColor) {
      var _a = attrs.shadowBlur,
          shadowBlur = _a === void 0 ? 0 : _a,
          _b = attrs.shadowOffsetX,
          shadowOffsetX = _b === void 0 ? 0 : _b,
          _c = attrs.shadowOffsetY,
          shadowOffsetY = _c === void 0 ? 0 : _c;
      var shadowLeft = minX - shadowBlur + shadowOffsetX;
      var shadowRight = maxX + shadowBlur + shadowOffsetX;
      var shadowTop = minY - shadowBlur + shadowOffsetY;
      var shadowBottom = maxY + shadowBlur + shadowOffsetY;
      minX = Math.min(minX, shadowLeft);
      maxX = Math.max(maxX, shadowRight);
      minY = Math.min(minY, shadowTop);
      maxY = Math.max(maxY, shadowBottom);
    }

    return {
      x: minX,
      y: minY,
      minX: minX,
      minY: minY,
      maxX: maxX,
      maxY: maxY,
      width: maxX - minX,
      height: maxY - minY
    };
  };
  /**
   * @protected
   * 清理缓存的 bbox
   */


  AbstractShape.prototype.clearCacheBBox = function () {
    this.set('bbox', null);
    this.set('canvasBox', null);
  }; // 实现接口


  AbstractShape.prototype.isClipShape = function () {
    return this.get('isClipShape');
  };
  /**
   * @protected
   * 不同的图形自己实现是否在图形内部的逻辑，要判断边和填充区域
   * @param  {number}  refX 相对于图形的坐标 x
   * @param  {number}  refY 相对于图形的坐标 Y
   * @return {boolean} 点是否在图形内部
   */


  AbstractShape.prototype.isInShape = function (refX, refY) {
    return false;
  };
  /**
   * 是否仅仅使用 BBox 检测就可以判定拾取到图形
   * 默认是 false，但是有些图形例如 image、marker 等都可直接使用 BBox 的检测而不需要使用图形拾取
   * @return {Boolean} 仅仅使用 BBox 进行拾取
   */


  AbstractShape.prototype.isOnlyHitBox = function () {
    return false;
  }; // 不同的 Shape 各自实现


  AbstractShape.prototype.isHit = function (x, y) {
    var startArrowShape = this.get('startArrowShape');
    var endArrowShape = this.get('endArrowShape');
    var vec = [x, y, 1];
    vec = this.invertFromMatrix(vec);
    var refX = vec[0],
        refY = vec[1];

    var inBBox = this._isInBBox(refX, refY); // 跳过图形的拾取，在某些图形中可以省略一倍的检测成本


    if (this.isOnlyHitBox()) {
      return inBBox;
    } // 被裁减掉的和不在包围盒内的不进行计算


    if (inBBox && !this.isClipped(refX, refY)) {
      // 对图形进行拾取判断
      if (this.isInShape(refX, refY)) {
        return true;
      } // 对起始箭头进行拾取判断


      if (startArrowShape && startArrowShape.isHit(refX, refY)) {
        return true;
      } // 对结束箭头进行拾取判断


      if (endArrowShape && endArrowShape.isHit(refX, refY)) {
        return true;
      }
    }

    return false;
  };

  return AbstractShape;
}(abstract_element);

/* harmony default export */ var abstract_shape = (shape_AbstractShape);
// CONCATENATED MODULE: ../node_modules/@antv/g-base/esm/index.js
/**
 * @fileoverview G 的基础接口定义和所有的抽象类
 * @author dxq613@gmail.com
 */


var pkg = __webpack_require__("kFZj");

var version = pkg.version;







/***/ }),

/***/ "AN6r":
/***/ (function(module, exports, __webpack_require__) {

var _isPlaceholder = __webpack_require__("SaPD");
/**
 * Optimized internal one-arity curry function.
 *
 * @private
 * @category Function
 * @param {Function} fn The function to curry.
 * @return {Function} The curried function.
 */


module.exports = function _curry1(fn) {
  return function f1(a) {
    if (arguments.length === 0 || _isPlaceholder(a)) {
      return f1;
    } else {
      return fn.apply(this, arguments);
    }
  };
};

/***/ }),

/***/ "ASIu":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ExclamationCircleOutlined = _interopRequireDefault(__webpack_require__("EgEt"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    'default': obj
  };
}

var _default = _ExclamationCircleOutlined;
exports["default"] = _default;
module.exports = _default;

/***/ }),

/***/ "AkS8":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__("P56o");
var $export = __webpack_require__("X6VK");
var redefine = __webpack_require__("sU/p");
var redefineAll = __webpack_require__("+edc");
var meta = __webpack_require__("zIP/");
var forOf = __webpack_require__("HqX2");
var anInstance = __webpack_require__("EusA");
var isObject = __webpack_require__("Bsg+");
var fails = __webpack_require__("E7Vc");
var $iterDetect = __webpack_require__("zlqh");
var setToStringTag = __webpack_require__("jPEw");
var inheritIfRequired = __webpack_require__("jEou");

module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
  var Base = global[NAME];
  var C = Base;
  var ADDER = IS_MAP ? 'set' : 'add';
  var proto = C && C.prototype;
  var O = {};
  var fixMethod = function (KEY) {
    var fn = proto[KEY];
    redefine(proto, KEY,
      KEY == 'delete' ? function (a) {
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'has' ? function has(a) {
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'get' ? function get(a) {
        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'add' ? function add(a) { fn.call(this, a === 0 ? 0 : a); return this; }
        : function set(a, b) { fn.call(this, a === 0 ? 0 : a, b); return this; }
    );
  };
  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
    new C().entries().next();
  }))) {
    // create collection constructor
    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
    redefineAll(C.prototype, methods);
    meta.NEED = true;
  } else {
    var instance = new C();
    // early implementations not supports chaining
    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
    // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });
    // most early implementations doesn't supports iterables, most modern - not close it correctly
    var ACCEPT_ITERABLES = $iterDetect(function (iter) { new C(iter); }); // eslint-disable-line no-new
    // for early implementations -0 and +0 not the same
    var BUGGY_ZERO = !IS_WEAK && fails(function () {
      // V8 ~ Chromium 42- fails only with 5+ elements
      var $instance = new C();
      var index = 5;
      while (index--) $instance[ADDER](index, index);
      return !$instance.has(-0);
    });
    if (!ACCEPT_ITERABLES) {
      C = wrapper(function (target, iterable) {
        anInstance(target, C, NAME);
        var that = inheritIfRequired(new Base(), target, C);
        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
        return that;
      });
      C.prototype = proto;
      proto.constructor = C;
    }
    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
      fixMethod('delete');
      fixMethod('has');
      IS_MAP && fixMethod('get');
    }
    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);
    // weak collections should not contains .clear method
    if (IS_WEAK && proto.clear) delete proto.clear;
  }

  setToStringTag(C, NAME);

  O[NAME] = C;
  $export($export.G + $export.W + $export.F * (C != Base), O);

  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);

  return C;
};


/***/ }),

/***/ "Alw5":
/***/ (function(module, exports, __webpack_require__) {

// helper for String#{startsWith, endsWith, includes}
var isRegExp = __webpack_require__("NVL/");
var defined = __webpack_require__("GCOZ");

module.exports = function (that, searchString, NAME) {
  if (isRegExp(searchString)) throw TypeError('String#' + NAME + " doesn't accept regex!");
  return String(defined(that));
};


/***/ }),

/***/ "Av18":
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.21 Math.log10(x)
var $export = __webpack_require__("X6VK");

$export($export.S, 'Math', {
  log10: function log10(x) {
    return Math.log(x) * Math.LOG10E;
  }
});


/***/ }),

/***/ "Avyj":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _InfoCircleOutlined = _interopRequireDefault(__webpack_require__("r8tM"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    'default': obj
  };
}

var _default = _InfoCircleOutlined;
exports["default"] = _default;
module.exports = _default;

/***/ }),

/***/ "Awoh":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _CheckCircleFilled = _interopRequireDefault(__webpack_require__("ZGup"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    'default': obj
  };
}

var _default = _CheckCircleFilled;
exports["default"] = _default;
module.exports = _default;

/***/ }),

/***/ "B+TZ":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isSamePoint = exports.mergeRegion = exports.intersectRect = exports.inBox = exports.distance = exports.getPixelRatio = void 0;

function getPixelRatio() {
  return window ? window.devicePixelRatio : 1;
}

exports.getPixelRatio = getPixelRatio;
/**
 * 两点之间的距离
 * @param {number} x1 起始点 x
 * @param {number} y1 起始点 y
 * @param {number} x2 结束点 x
 * @param {number} y2 结束点 y
 */

function distance(x1, y1, x2, y2) {
  var dx = x1 - x2;
  var dy = y1 - y2;
  return Math.sqrt(dx * dx + dy * dy);
}

exports.distance = distance;
/**
 * 是否在包围盒内
 * @param {number} minX   包围盒开始的点 x
 * @param {number} minY   包围盒开始的点 y
 * @param {number} width  宽度
 * @param {number} height 高度
 * @param {[type]} x      检测点的 x
 * @param {[type]} y      监测点的 y
 */

function inBox(minX, minY, width, height, x, y) {
  return x >= minX && x <= minX + width && y >= minY && y <= minY + height;
}

exports.inBox = inBox;

function intersectRect(box1, box2) {
  return !(box2.minX > box1.maxX || box2.maxX < box1.minX || box2.minY > box1.maxY || box2.maxY < box1.minY);
}

exports.intersectRect = intersectRect; // 合并两个区域

function mergeRegion(region1, region2) {
  if (!region1 || !region2) {
    return region1 || region2;
  }

  return {
    minX: Math.min(region1.minX, region2.minX),
    minY: Math.min(region1.minY, region2.minY),
    maxX: Math.max(region1.maxX, region2.maxX),
    maxY: Math.max(region1.maxY, region2.maxY)
  };
}

exports.mergeRegion = mergeRegion;
/**
 * 判断两个点是否重合，点坐标的格式为 [x, y]
 * @param {Array} point1 第一个点
 * @param {Array} point2 第二个点
 */

function isSamePoint(point1, point2) {
  return point1[0] === point2[0] && point1[1] === point2[1];
}

exports.isSamePoint = isSamePoint;

var is_nil_1 = __webpack_require__("SS24");

Object.defineProperty(exports, "isNil", {
  enumerable: true,
  get: function get() {
    return is_nil_1["default"];
  }
});

var is_string_1 = __webpack_require__("bLny");

Object.defineProperty(exports, "isString", {
  enumerable: true,
  get: function get() {
    return is_string_1["default"];
  }
});

var is_function_1 = __webpack_require__("joUm");

Object.defineProperty(exports, "isFunction", {
  enumerable: true,
  get: function get() {
    return is_function_1["default"];
  }
});

var is_array_1 = __webpack_require__("QAqn");

Object.defineProperty(exports, "isArray", {
  enumerable: true,
  get: function get() {
    return is_array_1["default"];
  }
});

var each_1 = __webpack_require__("mU+h");

Object.defineProperty(exports, "each", {
  enumerable: true,
  get: function get() {
    return each_1["default"];
  }
});

var to_radian_1 = __webpack_require__("Ce2C");

Object.defineProperty(exports, "toRadian", {
  enumerable: true,
  get: function get() {
    return to_radian_1["default"];
  }
});

var mod_1 = __webpack_require__("QQd8");

Object.defineProperty(exports, "mod", {
  enumerable: true,
  get: function get() {
    return mod_1["default"];
  }
});

var is_number_equal_1 = __webpack_require__("OQzY");

Object.defineProperty(exports, "isNumberEqual", {
  enumerable: true,
  get: function get() {
    return is_number_equal_1["default"];
  }
});

var request_animation_frame_1 = __webpack_require__("wuHH");

Object.defineProperty(exports, "requestAnimationFrame", {
  enumerable: true,
  get: function get() {
    return request_animation_frame_1["default"];
  }
});

var clear_animation_frame_1 = __webpack_require__("KaQE");

Object.defineProperty(exports, "clearAnimationFrame", {
  enumerable: true,
  get: function get() {
    return clear_animation_frame_1["default"];
  }
});

/***/ }),

/***/ "B3VA":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // This icon file is generated automatically.

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var InfoCircleFilled = {
  "icon": {
    "tag": "svg",
    "attrs": {
      "viewBox": "64 64 896 896",
      "focusable": "false"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm32 664c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V456c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v272zm-32-344a48.01 48.01 0 010-96 48.01 48.01 0 010 96z"
      }
    }]
  },
  "name": "info-circle",
  "theme": "filled"
};
exports["default"] = InfoCircleFilled;

/***/ }),

/***/ "BDzi":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])

var $export = __webpack_require__("X6VK");
var toLength = __webpack_require__("Sp5b");
var context = __webpack_require__("Alw5");
var ENDS_WITH = 'endsWith';
var $endsWith = ''[ENDS_WITH];

$export($export.P + $export.F * __webpack_require__("Fl7L")(ENDS_WITH), 'String', {
  endsWith: function endsWith(searchString /* , endPosition = @length */) {
    var that = context(this, searchString, ENDS_WITH);
    var endPosition = arguments.length > 1 ? arguments[1] : undefined;
    var len = toLength(that.length);
    var end = endPosition === undefined ? len : Math.min(toLength(endPosition), len);
    var search = String(searchString);
    return $endsWith
      ? $endsWith.call(that, search, end)
      : that.slice(end - search.length, end) === search;
  }
});


/***/ }),

/***/ "BTfu":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.6 String.prototype.fixed()
__webpack_require__("LEAW")('fixed', function (createHTML) {
  return function fixed() {
    return createHTML(this, 'tt', '', '');
  };
});


/***/ }),

/***/ "BUlT":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("mvii");
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),

/***/ "BYsm":
/***/ (function(module, exports, __webpack_require__) {

var React = __webpack_require__("mXGw");

function Translation (props) {
    return React.createElement("svg",props,React.createElement("path",{"d":"M12.87 15.07l-2.54-2.51.03-.03c1.74-1.94 2.98-4.17 3.71-6.53H17V4h-7V2H8v2H1v1.99h11.17C11.5 7.92 10.44 9.75 9 11.35 8.07 10.32 7.3 9.19 6.69 8h-2c.73 1.63 1.73 3.17 2.98 4.56l-5.09 5.02L4 19l5-5 3.11 3.11.76-2.04zM18.5 10h-2L12 22h2l1.12-3h4.75L21 22h2l-4.5-12zm-2.62 7l1.62-4.33L19.12 17h-3.24z"}));
}

Translation.defaultProps = {"width":"24","height":"24","viewBox":"0 0 24 24"};

module.exports = Translation;

Translation.default = Translation;


/***/ }),

/***/ "Bfez":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "b", function() { return /* binding */ ConfigContext; });
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ ConfigConsumer; });

// UNUSED EXPORTS: withConfigConsumer

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.function.name.js
var es6_function_name = __webpack_require__("GkPX");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.assign.js
var es6_object_assign = __webpack_require__("5hJT");

// EXTERNAL MODULE: ../node_modules/react/index.js
var react = __webpack_require__("mXGw");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.symbol.js
var es6_symbol = __webpack_require__("ABKx");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.index-of.js
var es6_array_index_of = __webpack_require__("V7cS");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.define-property.js
var es6_object_define_property = __webpack_require__("d3/y");

// EXTERNAL MODULE: ../node_modules/classnames/index.js
var classnames = __webpack_require__("8Jek");
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);

// EXTERNAL MODULE: ../node_modules/antd/es/locale-provider/LocaleReceiver.js + 1 modules
var LocaleReceiver = __webpack_require__("fj6J");

// CONCATENATED MODULE: ../node_modules/antd/es/empty/empty.js



var empty_Empty = function Empty() {
  var _React$useContext = react["useContext"](ConfigContext),
      getPrefixCls = _React$useContext.getPrefixCls;

  var prefixCls = getPrefixCls('empty-img-default');
  return /*#__PURE__*/react["createElement"]("svg", {
    className: prefixCls,
    width: "184",
    height: "152",
    viewBox: "0 0 184 152",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/react["createElement"]("g", {
    fill: "none",
    fillRule: "evenodd"
  }, /*#__PURE__*/react["createElement"]("g", {
    transform: "translate(24 31.67)"
  }, /*#__PURE__*/react["createElement"]("ellipse", {
    className: "".concat(prefixCls, "-ellipse"),
    cx: "67.797",
    cy: "106.89",
    rx: "67.797",
    ry: "12.668"
  }), /*#__PURE__*/react["createElement"]("path", {
    className: "".concat(prefixCls, "-path-1"),
    d: "M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z"
  }), /*#__PURE__*/react["createElement"]("path", {
    className: "".concat(prefixCls, "-path-2"),
    d: "M101.537 86.214L80.63 61.102c-1.001-1.207-2.507-1.867-4.048-1.867H31.724c-1.54 0-3.047.66-4.048 1.867L6.769 86.214v13.792h94.768V86.214z",
    transform: "translate(13.56)"
  }), /*#__PURE__*/react["createElement"]("path", {
    className: "".concat(prefixCls, "-path-3"),
    d: "M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z"
  }), /*#__PURE__*/react["createElement"]("path", {
    className: "".concat(prefixCls, "-path-4"),
    d: "M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zM42.94 49.767h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zM42.94 61.53h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zM121.813 105.032c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569c0 .617-.077 1.216-.221 1.789z"
  })), /*#__PURE__*/react["createElement"]("path", {
    className: "".concat(prefixCls, "-path-5"),
    d: "M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z"
  }), /*#__PURE__*/react["createElement"]("g", {
    className: "".concat(prefixCls, "-g"),
    transform: "translate(149.65 15.383)"
  }, /*#__PURE__*/react["createElement"]("ellipse", {
    cx: "20.654",
    cy: "3.167",
    rx: "2.849",
    ry: "2.815"
  }), /*#__PURE__*/react["createElement"]("path", {
    d: "M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z"
  }))));
};

/* harmony default export */ var empty = (empty_Empty);
// CONCATENATED MODULE: ../node_modules/antd/es/empty/simple.js



var simple_Simple = function Simple() {
  var _React$useContext = react["useContext"](ConfigContext),
      getPrefixCls = _React$useContext.getPrefixCls;

  var prefixCls = getPrefixCls('empty-img-simple');
  return /*#__PURE__*/react["createElement"]("svg", {
    className: prefixCls,
    width: "64",
    height: "41",
    viewBox: "0 0 64 41",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/react["createElement"]("g", {
    transform: "translate(0 1)",
    fill: "none",
    fillRule: "evenodd"
  }, /*#__PURE__*/react["createElement"]("ellipse", {
    className: "".concat(prefixCls, "-ellipse"),
    cx: "32",
    cy: "33",
    rx: "32",
    ry: "7"
  }), /*#__PURE__*/react["createElement"]("g", {
    className: "".concat(prefixCls, "-g"),
    fillRule: "nonzero"
  }, /*#__PURE__*/react["createElement"]("path", {
    d: "M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
  }), /*#__PURE__*/react["createElement"]("path", {
    d: "M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z",
    className: "".concat(prefixCls, "-path")
  }))));
};

/* harmony default export */ var simple = (simple_Simple);
// CONCATENATED MODULE: ../node_modules/antd/es/empty/index.js





function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var __rest = undefined && undefined.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};







var defaultEmptyImg = /*#__PURE__*/react["createElement"](empty, null);
var simpleEmptyImg = /*#__PURE__*/react["createElement"](simple, null);

var es_empty_Empty = function Empty(props) {
  return /*#__PURE__*/react["createElement"](ConfigConsumer, null, function (_ref) {
    var getPrefixCls = _ref.getPrefixCls,
        direction = _ref.direction;

    var className = props.className,
        customizePrefixCls = props.prefixCls,
        _props$image = props.image,
        image = _props$image === void 0 ? defaultEmptyImg : _props$image,
        description = props.description,
        children = props.children,
        imageStyle = props.imageStyle,
        restProps = __rest(props, ["className", "prefixCls", "image", "description", "children", "imageStyle"]);

    return /*#__PURE__*/react["createElement"](LocaleReceiver["a" /* default */], {
      componentName: "Empty"
    }, function (locale) {
      var _classNames;

      var prefixCls = getPrefixCls('empty', customizePrefixCls);
      var des = typeof description !== 'undefined' ? description : locale.description;
      var alt = typeof des === 'string' ? des : 'empty';
      var imageNode = null;

      if (typeof image === 'string') {
        imageNode = /*#__PURE__*/react["createElement"]("img", {
          alt: alt,
          src: image
        });
      } else {
        imageNode = image;
      }

      return /*#__PURE__*/react["createElement"]("div", _extends({
        className: classnames_default()(prefixCls, (_classNames = {}, _defineProperty(_classNames, "".concat(prefixCls, "-normal"), image === simpleEmptyImg), _defineProperty(_classNames, "".concat(prefixCls, "-rtl"), direction === 'rtl'), _classNames), className)
      }, restProps), /*#__PURE__*/react["createElement"]("div", {
        className: "".concat(prefixCls, "-image"),
        style: imageStyle
      }, imageNode), des && /*#__PURE__*/react["createElement"]("p", {
        className: "".concat(prefixCls, "-description")
      }, des), children && /*#__PURE__*/react["createElement"]("div", {
        className: "".concat(prefixCls, "-footer")
      }, children));
    });
  });
};

es_empty_Empty.PRESENTED_IMAGE_DEFAULT = defaultEmptyImg;
es_empty_Empty.PRESENTED_IMAGE_SIMPLE = simpleEmptyImg;
/* harmony default export */ var es_empty = (es_empty_Empty);
// CONCATENATED MODULE: ../node_modules/antd/es/config-provider/renderEmpty.js




var renderEmpty_renderEmpty = function renderEmpty(componentName) {
  return /*#__PURE__*/react["createElement"](ConfigConsumer, null, function (_ref) {
    var getPrefixCls = _ref.getPrefixCls;
    var prefix = getPrefixCls('empty');

    switch (componentName) {
      case 'Table':
      case 'List':
        return /*#__PURE__*/react["createElement"](es_empty, {
          image: es_empty.PRESENTED_IMAGE_SIMPLE
        });

      case 'Select':
      case 'TreeSelect':
      case 'Cascader':
      case 'Transfer':
      case 'Mentions':
        return /*#__PURE__*/react["createElement"](es_empty, {
          image: es_empty.PRESENTED_IMAGE_SIMPLE,
          className: "".concat(prefix, "-small")
        });

      default:
        return /*#__PURE__*/react["createElement"](es_empty, null);
    }
  });
};

/* harmony default export */ var config_provider_renderEmpty = (renderEmpty_renderEmpty);
// CONCATENATED MODULE: ../node_modules/antd/es/config-provider/context.js



function context_extends() {
  context_extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return context_extends.apply(this, arguments);
}



var ConfigContext = /*#__PURE__*/react["createContext"]({
  // We provide a default function for Context without provider
  getPrefixCls: function getPrefixCls(suffixCls, customizePrefixCls) {
    if (customizePrefixCls) return customizePrefixCls;
    return suffixCls ? "ant-".concat(suffixCls) : 'ant';
  },
  renderEmpty: config_provider_renderEmpty
});
var ConfigConsumer = ConfigContext.Consumer;
function withConfigConsumer(config) {
  return function withConfigConsumerFunc(Component) {
    // Wrap with ConfigConsumer. Since we need compatible with react 15, be care when using ref methods
    var SFC = function SFC(props) {
      return /*#__PURE__*/react["createElement"](ConfigConsumer, null, function (configProps) {
        var basicPrefixCls = config.prefixCls;
        var getPrefixCls = configProps.getPrefixCls;
        var customizePrefixCls = props.prefixCls;
        var prefixCls = getPrefixCls(basicPrefixCls, customizePrefixCls);
        return /*#__PURE__*/react["createElement"](Component, context_extends({}, configProps, props, {
          prefixCls: prefixCls
        }));
      });
    };

    var cons = Component.constructor;
    var name = cons && cons.displayName || Component.name || 'Component';
    SFC.displayName = "withConfigConsumer(".concat(name, ")");
    return SFC;
  };
}

/***/ }),

/***/ "Bi0q":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("GkPX");

__webpack_require__("V7cS");

__webpack_require__("9ovy");

// CodeMirror, copyright (c) by Marijn Haverbeke and others
// Distributed under an MIT license: https://codemirror.net/LICENSE
(function (mod) {
  if (true) // CommonJS
    mod(__webpack_require__("Dln1"));else {}
})(function (CodeMirror) {
  "use strict";

  CodeMirror.defineMode("javascript", function (config, parserConfig) {
    var indentUnit = config.indentUnit;
    var statementIndent = parserConfig.statementIndent;
    var jsonldMode = parserConfig.jsonld;
    var jsonMode = parserConfig.json || jsonldMode;
    var isTS = parserConfig.typescript;
    var wordRE = parserConfig.wordCharacters || /[\w$\xa1-\uffff]/; // Tokenizer

    var keywords = function () {
      function kw(type) {
        return {
          type: type,
          style: "keyword"
        };
      }

      var A = kw("keyword a"),
          B = kw("keyword b"),
          C = kw("keyword c"),
          D = kw("keyword d");
      var operator = kw("operator"),
          atom = {
        type: "atom",
        style: "atom"
      };
      return {
        "if": kw("if"),
        "while": A,
        "with": A,
        "else": B,
        "do": B,
        "try": B,
        "finally": B,
        "return": D,
        "break": D,
        "continue": D,
        "new": kw("new"),
        "delete": C,
        "void": C,
        "throw": C,
        "debugger": kw("debugger"),
        "var": kw("var"),
        "const": kw("var"),
        "let": kw("var"),
        "function": kw("function"),
        "catch": kw("catch"),
        "for": kw("for"),
        "switch": kw("switch"),
        "case": kw("case"),
        "default": kw("default"),
        "in": operator,
        "typeof": operator,
        "instanceof": operator,
        "true": atom,
        "false": atom,
        "null": atom,
        "undefined": atom,
        "NaN": atom,
        "Infinity": atom,
        "this": kw("this"),
        "class": kw("class"),
        "super": kw("atom"),
        "yield": C,
        "export": kw("export"),
        "import": kw("import"),
        "extends": C,
        "await": C
      };
    }();

    var isOperatorChar = /[+\-*&%=<>!?|~^@]/;
    var isJsonldKeyword = /^@(context|id|value|language|type|container|list|set|reverse|index|base|vocab|graph)"/;

    function readRegexp(stream) {
      var escaped = false,
          next,
          inSet = false;

      while ((next = stream.next()) != null) {
        if (!escaped) {
          if (next == "/" && !inSet) return;
          if (next == "[") inSet = true;else if (inSet && next == "]") inSet = false;
        }

        escaped = !escaped && next == "\\";
      }
    } // Used as scratch variables to communicate multiple values without
    // consing up tons of objects.


    var type, content;

    function ret(tp, style, cont) {
      type = tp;
      content = cont;
      return style;
    }

    function tokenBase(stream, state) {
      var ch = stream.next();

      if (ch == '"' || ch == "'") {
        state.tokenize = tokenString(ch);
        return state.tokenize(stream, state);
      } else if (ch == "." && stream.match(/^\d[\d_]*(?:[eE][+\-]?[\d_]+)?/)) {
        return ret("number", "number");
      } else if (ch == "." && stream.match("..")) {
        return ret("spread", "meta");
      } else if (/[\[\]{}\(\),;\:\.]/.test(ch)) {
        return ret(ch);
      } else if (ch == "=" && stream.eat(">")) {
        return ret("=>", "operator");
      } else if (ch == "0" && stream.match(/^(?:x[\dA-Fa-f_]+|o[0-7_]+|b[01_]+)n?/)) {
        return ret("number", "number");
      } else if (/\d/.test(ch)) {
        stream.match(/^[\d_]*(?:n|(?:\.[\d_]*)?(?:[eE][+\-]?[\d_]+)?)?/);
        return ret("number", "number");
      } else if (ch == "/") {
        if (stream.eat("*")) {
          state.tokenize = tokenComment;
          return tokenComment(stream, state);
        } else if (stream.eat("/")) {
          stream.skipToEnd();
          return ret("comment", "comment");
        } else if (expressionAllowed(stream, state, 1)) {
          readRegexp(stream);
          stream.match(/^\b(([gimyus])(?![gimyus]*\2))+\b/);
          return ret("regexp", "string-2");
        } else {
          stream.eat("=");
          return ret("operator", "operator", stream.current());
        }
      } else if (ch == "`") {
        state.tokenize = tokenQuasi;
        return tokenQuasi(stream, state);
      } else if (ch == "#" && stream.peek() == "!") {
        stream.skipToEnd();
        return ret("meta", "meta");
      } else if (ch == "#" && stream.eatWhile(wordRE)) {
        return ret("variable", "property");
      } else if (ch == "<" && stream.match("!--") || ch == "-" && stream.match("->") && !/\S/.test(stream.string.slice(0, stream.start))) {
        stream.skipToEnd();
        return ret("comment", "comment");
      } else if (isOperatorChar.test(ch)) {
        if (ch != ">" || !state.lexical || state.lexical.type != ">") {
          if (stream.eat("=")) {
            if (ch == "!" || ch == "=") stream.eat("=");
          } else if (/[<>*+\-]/.test(ch)) {
            stream.eat(ch);
            if (ch == ">") stream.eat(ch);
          }
        }

        if (ch == "?" && stream.eat(".")) return ret(".");
        return ret("operator", "operator", stream.current());
      } else if (wordRE.test(ch)) {
        stream.eatWhile(wordRE);
        var word = stream.current();

        if (state.lastType != ".") {
          if (keywords.propertyIsEnumerable(word)) {
            var kw = keywords[word];
            return ret(kw.type, kw.style, word);
          }

          if (word == "async" && stream.match(/^(\s|\/\*.*?\*\/)*[\[\(\w]/, false)) return ret("async", "keyword", word);
        }

        return ret("variable", "variable", word);
      }
    }

    function tokenString(quote) {
      return function (stream, state) {
        var escaped = false,
            next;

        if (jsonldMode && stream.peek() == "@" && stream.match(isJsonldKeyword)) {
          state.tokenize = tokenBase;
          return ret("jsonld-keyword", "meta");
        }

        while ((next = stream.next()) != null) {
          if (next == quote && !escaped) break;
          escaped = !escaped && next == "\\";
        }

        if (!escaped) state.tokenize = tokenBase;
        return ret("string", "string");
      };
    }

    function tokenComment(stream, state) {
      var maybeEnd = false,
          ch;

      while (ch = stream.next()) {
        if (ch == "/" && maybeEnd) {
          state.tokenize = tokenBase;
          break;
        }

        maybeEnd = ch == "*";
      }

      return ret("comment", "comment");
    }

    function tokenQuasi(stream, state) {
      var escaped = false,
          next;

      while ((next = stream.next()) != null) {
        if (!escaped && (next == "`" || next == "$" && stream.eat("{"))) {
          state.tokenize = tokenBase;
          break;
        }

        escaped = !escaped && next == "\\";
      }

      return ret("quasi", "string-2", stream.current());
    }

    var brackets = "([{}])"; // This is a crude lookahead trick to try and notice that we're
    // parsing the argument patterns for a fat-arrow function before we
    // actually hit the arrow token. It only works if the arrow is on
    // the same line as the arguments and there's no strange noise
    // (comments) in between. Fallback is to only notice when we hit the
    // arrow, and not declare the arguments as locals for the arrow
    // body.

    function findFatArrow(stream, state) {
      if (state.fatArrowAt) state.fatArrowAt = null;
      var arrow = stream.string.indexOf("=>", stream.start);
      if (arrow < 0) return;

      if (isTS) {
        // Try to skip TypeScript return type declarations after the arguments
        var m = /:\s*(?:\w+(?:<[^>]*>|\[\])?|\{[^}]*\})\s*$/.exec(stream.string.slice(stream.start, arrow));
        if (m) arrow = m.index;
      }

      var depth = 0,
          sawSomething = false;

      for (var pos = arrow - 1; pos >= 0; --pos) {
        var ch = stream.string.charAt(pos);
        var bracket = brackets.indexOf(ch);

        if (bracket >= 0 && bracket < 3) {
          if (!depth) {
            ++pos;
            break;
          }

          if (--depth == 0) {
            if (ch == "(") sawSomething = true;
            break;
          }
        } else if (bracket >= 3 && bracket < 6) {
          ++depth;
        } else if (wordRE.test(ch)) {
          sawSomething = true;
        } else if (/["'\/`]/.test(ch)) {
          for (;; --pos) {
            if (pos == 0) return;
            var next = stream.string.charAt(pos - 1);

            if (next == ch && stream.string.charAt(pos - 2) != "\\") {
              pos--;
              break;
            }
          }
        } else if (sawSomething && !depth) {
          ++pos;
          break;
        }
      }

      if (sawSomething && !depth) state.fatArrowAt = pos;
    } // Parser


    var atomicTypes = {
      "atom": true,
      "number": true,
      "variable": true,
      "string": true,
      "regexp": true,
      "this": true,
      "jsonld-keyword": true
    };

    function JSLexical(indented, column, type, align, prev, info) {
      this.indented = indented;
      this.column = column;
      this.type = type;
      this.prev = prev;
      this.info = info;
      if (align != null) this.align = align;
    }

    function inScope(state, varname) {
      for (var v = state.localVars; v; v = v.next) {
        if (v.name == varname) return true;
      }

      for (var cx = state.context; cx; cx = cx.prev) {
        for (var v = cx.vars; v; v = v.next) {
          if (v.name == varname) return true;
        }
      }
    }

    function parseJS(state, style, type, content, stream) {
      var cc = state.cc; // Communicate our context to the combinators.
      // (Less wasteful than consing up a hundred closures on every call.)

      cx.state = state;
      cx.stream = stream;
      cx.marked = null, cx.cc = cc;
      cx.style = style;
      if (!state.lexical.hasOwnProperty("align")) state.lexical.align = true;

      while (true) {
        var combinator = cc.length ? cc.pop() : jsonMode ? expression : statement;

        if (combinator(type, content)) {
          while (cc.length && cc[cc.length - 1].lex) {
            cc.pop()();
          }

          if (cx.marked) return cx.marked;
          if (type == "variable" && inScope(state, content)) return "variable-2";
          return style;
        }
      }
    } // Combinator utils


    var cx = {
      state: null,
      column: null,
      marked: null,
      cc: null
    };

    function pass() {
      for (var i = arguments.length - 1; i >= 0; i--) {
        cx.cc.push(arguments[i]);
      }
    }

    function cont() {
      pass.apply(null, arguments);
      return true;
    }

    function inList(name, list) {
      for (var v = list; v; v = v.next) {
        if (v.name == name) return true;
      }

      return false;
    }

    function register(varname) {
      var state = cx.state;
      cx.marked = "def";

      if (state.context) {
        if (state.lexical.info == "var" && state.context && state.context.block) {
          // FIXME function decls are also not block scoped
          var newContext = registerVarScoped(varname, state.context);

          if (newContext != null) {
            state.context = newContext;
            return;
          }
        } else if (!inList(varname, state.localVars)) {
          state.localVars = new Var(varname, state.localVars);
          return;
        }
      } // Fall through means this is global


      if (parserConfig.globalVars && !inList(varname, state.globalVars)) state.globalVars = new Var(varname, state.globalVars);
    }

    function registerVarScoped(varname, context) {
      if (!context) {
        return null;
      } else if (context.block) {
        var inner = registerVarScoped(varname, context.prev);
        if (!inner) return null;
        if (inner == context.prev) return context;
        return new Context(inner, context.vars, true);
      } else if (inList(varname, context.vars)) {
        return context;
      } else {
        return new Context(context.prev, new Var(varname, context.vars), false);
      }
    }

    function isModifier(name) {
      return name == "public" || name == "private" || name == "protected" || name == "abstract" || name == "readonly";
    } // Combinators


    function Context(prev, vars, block) {
      this.prev = prev;
      this.vars = vars;
      this.block = block;
    }

    function Var(name, next) {
      this.name = name;
      this.next = next;
    }

    var defaultVars = new Var("this", new Var("arguments", null));

    function pushcontext() {
      cx.state.context = new Context(cx.state.context, cx.state.localVars, false);
      cx.state.localVars = defaultVars;
    }

    function pushblockcontext() {
      cx.state.context = new Context(cx.state.context, cx.state.localVars, true);
      cx.state.localVars = null;
    }

    function popcontext() {
      cx.state.localVars = cx.state.context.vars;
      cx.state.context = cx.state.context.prev;
    }

    popcontext.lex = true;

    function pushlex(type, info) {
      var result = function result() {
        var state = cx.state,
            indent = state.indented;
        if (state.lexical.type == "stat") indent = state.lexical.indented;else for (var outer = state.lexical; outer && outer.type == ")" && outer.align; outer = outer.prev) {
          indent = outer.indented;
        }
        state.lexical = new JSLexical(indent, cx.stream.column(), type, null, state.lexical, info);
      };

      result.lex = true;
      return result;
    }

    function poplex() {
      var state = cx.state;

      if (state.lexical.prev) {
        if (state.lexical.type == ")") state.indented = state.lexical.indented;
        state.lexical = state.lexical.prev;
      }
    }

    poplex.lex = true;

    function expect(wanted) {
      function exp(type) {
        if (type == wanted) return cont();else if (wanted == ";" || type == "}" || type == ")" || type == "]") return pass();else return cont(exp);
      }

      ;
      return exp;
    }

    function statement(type, value) {
      if (type == "var") return cont(pushlex("vardef", value), vardef, expect(";"), poplex);
      if (type == "keyword a") return cont(pushlex("form"), parenExpr, statement, poplex);
      if (type == "keyword b") return cont(pushlex("form"), statement, poplex);
      if (type == "keyword d") return cx.stream.match(/^\s*$/, false) ? cont() : cont(pushlex("stat"), maybeexpression, expect(";"), poplex);
      if (type == "debugger") return cont(expect(";"));
      if (type == "{") return cont(pushlex("}"), pushblockcontext, block, poplex, popcontext);
      if (type == ";") return cont();

      if (type == "if") {
        if (cx.state.lexical.info == "else" && cx.state.cc[cx.state.cc.length - 1] == poplex) cx.state.cc.pop()();
        return cont(pushlex("form"), parenExpr, statement, poplex, maybeelse);
      }

      if (type == "function") return cont(functiondef);
      if (type == "for") return cont(pushlex("form"), forspec, statement, poplex);

      if (type == "class" || isTS && value == "interface") {
        cx.marked = "keyword";
        return cont(pushlex("form", type == "class" ? type : value), className, poplex);
      }

      if (type == "variable") {
        if (isTS && value == "declare") {
          cx.marked = "keyword";
          return cont(statement);
        } else if (isTS && (value == "module" || value == "enum" || value == "type") && cx.stream.match(/^\s*\w/, false)) {
          cx.marked = "keyword";
          if (value == "enum") return cont(enumdef);else if (value == "type") return cont(typename, expect("operator"), typeexpr, expect(";"));else return cont(pushlex("form"), pattern, expect("{"), pushlex("}"), block, poplex, poplex);
        } else if (isTS && value == "namespace") {
          cx.marked = "keyword";
          return cont(pushlex("form"), expression, statement, poplex);
        } else if (isTS && value == "abstract") {
          cx.marked = "keyword";
          return cont(statement);
        } else {
          return cont(pushlex("stat"), maybelabel);
        }
      }

      if (type == "switch") return cont(pushlex("form"), parenExpr, expect("{"), pushlex("}", "switch"), pushblockcontext, block, poplex, poplex, popcontext);
      if (type == "case") return cont(expression, expect(":"));
      if (type == "default") return cont(expect(":"));
      if (type == "catch") return cont(pushlex("form"), pushcontext, maybeCatchBinding, statement, poplex, popcontext);
      if (type == "export") return cont(pushlex("stat"), afterExport, poplex);
      if (type == "import") return cont(pushlex("stat"), afterImport, poplex);
      if (type == "async") return cont(statement);
      if (value == "@") return cont(expression, statement);
      return pass(pushlex("stat"), expression, expect(";"), poplex);
    }

    function maybeCatchBinding(type) {
      if (type == "(") return cont(funarg, expect(")"));
    }

    function expression(type, value) {
      return expressionInner(type, value, false);
    }

    function expressionNoComma(type, value) {
      return expressionInner(type, value, true);
    }

    function parenExpr(type) {
      if (type != "(") return pass();
      return cont(pushlex(")"), maybeexpression, expect(")"), poplex);
    }

    function expressionInner(type, value, noComma) {
      if (cx.state.fatArrowAt == cx.stream.start) {
        var body = noComma ? arrowBodyNoComma : arrowBody;
        if (type == "(") return cont(pushcontext, pushlex(")"), commasep(funarg, ")"), poplex, expect("=>"), body, popcontext);else if (type == "variable") return pass(pushcontext, pattern, expect("=>"), body, popcontext);
      }

      var maybeop = noComma ? maybeoperatorNoComma : maybeoperatorComma;
      if (atomicTypes.hasOwnProperty(type)) return cont(maybeop);
      if (type == "function") return cont(functiondef, maybeop);

      if (type == "class" || isTS && value == "interface") {
        cx.marked = "keyword";
        return cont(pushlex("form"), classExpression, poplex);
      }

      if (type == "keyword c" || type == "async") return cont(noComma ? expressionNoComma : expression);
      if (type == "(") return cont(pushlex(")"), maybeexpression, expect(")"), poplex, maybeop);
      if (type == "operator" || type == "spread") return cont(noComma ? expressionNoComma : expression);
      if (type == "[") return cont(pushlex("]"), arrayLiteral, poplex, maybeop);
      if (type == "{") return contCommasep(objprop, "}", null, maybeop);
      if (type == "quasi") return pass(quasi, maybeop);
      if (type == "new") return cont(maybeTarget(noComma));
      if (type == "import") return cont(expression);
      return cont();
    }

    function maybeexpression(type) {
      if (type.match(/[;\}\)\],]/)) return pass();
      return pass(expression);
    }

    function maybeoperatorComma(type, value) {
      if (type == ",") return cont(maybeexpression);
      return maybeoperatorNoComma(type, value, false);
    }

    function maybeoperatorNoComma(type, value, noComma) {
      var me = noComma == false ? maybeoperatorComma : maybeoperatorNoComma;
      var expr = noComma == false ? expression : expressionNoComma;
      if (type == "=>") return cont(pushcontext, noComma ? arrowBodyNoComma : arrowBody, popcontext);

      if (type == "operator") {
        if (/\+\+|--/.test(value) || isTS && value == "!") return cont(me);
        if (isTS && value == "<" && cx.stream.match(/^([^<>]|<[^<>]*>)*>\s*\(/, false)) return cont(pushlex(">"), commasep(typeexpr, ">"), poplex, me);
        if (value == "?") return cont(expression, expect(":"), expr);
        return cont(expr);
      }

      if (type == "quasi") {
        return pass(quasi, me);
      }

      if (type == ";") return;
      if (type == "(") return contCommasep(expressionNoComma, ")", "call", me);
      if (type == ".") return cont(property, me);
      if (type == "[") return cont(pushlex("]"), maybeexpression, expect("]"), poplex, me);

      if (isTS && value == "as") {
        cx.marked = "keyword";
        return cont(typeexpr, me);
      }

      if (type == "regexp") {
        cx.state.lastType = cx.marked = "operator";
        cx.stream.backUp(cx.stream.pos - cx.stream.start - 1);
        return cont(expr);
      }
    }

    function quasi(type, value) {
      if (type != "quasi") return pass();
      if (value.slice(value.length - 2) != "${") return cont(quasi);
      return cont(expression, continueQuasi);
    }

    function continueQuasi(type) {
      if (type == "}") {
        cx.marked = "string-2";
        cx.state.tokenize = tokenQuasi;
        return cont(quasi);
      }
    }

    function arrowBody(type) {
      findFatArrow(cx.stream, cx.state);
      return pass(type == "{" ? statement : expression);
    }

    function arrowBodyNoComma(type) {
      findFatArrow(cx.stream, cx.state);
      return pass(type == "{" ? statement : expressionNoComma);
    }

    function maybeTarget(noComma) {
      return function (type) {
        if (type == ".") return cont(noComma ? targetNoComma : target);else if (type == "variable" && isTS) return cont(maybeTypeArgs, noComma ? maybeoperatorNoComma : maybeoperatorComma);else return pass(noComma ? expressionNoComma : expression);
      };
    }

    function target(_, value) {
      if (value == "target") {
        cx.marked = "keyword";
        return cont(maybeoperatorComma);
      }
    }

    function targetNoComma(_, value) {
      if (value == "target") {
        cx.marked = "keyword";
        return cont(maybeoperatorNoComma);
      }
    }

    function maybelabel(type) {
      if (type == ":") return cont(poplex, statement);
      return pass(maybeoperatorComma, expect(";"), poplex);
    }

    function property(type) {
      if (type == "variable") {
        cx.marked = "property";
        return cont();
      }
    }

    function objprop(type, value) {
      if (type == "async") {
        cx.marked = "property";
        return cont(objprop);
      } else if (type == "variable" || cx.style == "keyword") {
        cx.marked = "property";
        if (value == "get" || value == "set") return cont(getterSetter);
        var m; // Work around fat-arrow-detection complication for detecting typescript typed arrow params

        if (isTS && cx.state.fatArrowAt == cx.stream.start && (m = cx.stream.match(/^\s*:\s*/, false))) cx.state.fatArrowAt = cx.stream.pos + m[0].length;
        return cont(afterprop);
      } else if (type == "number" || type == "string") {
        cx.marked = jsonldMode ? "property" : cx.style + " property";
        return cont(afterprop);
      } else if (type == "jsonld-keyword") {
        return cont(afterprop);
      } else if (isTS && isModifier(value)) {
        cx.marked = "keyword";
        return cont(objprop);
      } else if (type == "[") {
        return cont(expression, maybetype, expect("]"), afterprop);
      } else if (type == "spread") {
        return cont(expressionNoComma, afterprop);
      } else if (value == "*") {
        cx.marked = "keyword";
        return cont(objprop);
      } else if (type == ":") {
        return pass(afterprop);
      }
    }

    function getterSetter(type) {
      if (type != "variable") return pass(afterprop);
      cx.marked = "property";
      return cont(functiondef);
    }

    function afterprop(type) {
      if (type == ":") return cont(expressionNoComma);
      if (type == "(") return pass(functiondef);
    }

    function commasep(what, end, sep) {
      function proceed(type, value) {
        if (sep ? sep.indexOf(type) > -1 : type == ",") {
          var lex = cx.state.lexical;
          if (lex.info == "call") lex.pos = (lex.pos || 0) + 1;
          return cont(function (type, value) {
            if (type == end || value == end) return pass();
            return pass(what);
          }, proceed);
        }

        if (type == end || value == end) return cont();
        if (sep && sep.indexOf(";") > -1) return pass(what);
        return cont(expect(end));
      }

      return function (type, value) {
        if (type == end || value == end) return cont();
        return pass(what, proceed);
      };
    }

    function contCommasep(what, end, info) {
      for (var i = 3; i < arguments.length; i++) {
        cx.cc.push(arguments[i]);
      }

      return cont(pushlex(end, info), commasep(what, end), poplex);
    }

    function block(type) {
      if (type == "}") return cont();
      return pass(statement, block);
    }

    function maybetype(type, value) {
      if (isTS) {
        if (type == ":") return cont(typeexpr);
        if (value == "?") return cont(maybetype);
      }
    }

    function maybetypeOrIn(type, value) {
      if (isTS && (type == ":" || value == "in")) return cont(typeexpr);
    }

    function mayberettype(type) {
      if (isTS && type == ":") {
        if (cx.stream.match(/^\s*\w+\s+is\b/, false)) return cont(expression, isKW, typeexpr);else return cont(typeexpr);
      }
    }

    function isKW(_, value) {
      if (value == "is") {
        cx.marked = "keyword";
        return cont();
      }
    }

    function typeexpr(type, value) {
      if (value == "keyof" || value == "typeof" || value == "infer") {
        cx.marked = "keyword";
        return cont(value == "typeof" ? expressionNoComma : typeexpr);
      }

      if (type == "variable" || value == "void") {
        cx.marked = "type";
        return cont(afterType);
      }

      if (value == "|" || value == "&") return cont(typeexpr);
      if (type == "string" || type == "number" || type == "atom") return cont(afterType);
      if (type == "[") return cont(pushlex("]"), commasep(typeexpr, "]", ","), poplex, afterType);
      if (type == "{") return cont(pushlex("}"), commasep(typeprop, "}", ",;"), poplex, afterType);
      if (type == "(") return cont(commasep(typearg, ")"), maybeReturnType, afterType);
      if (type == "<") return cont(commasep(typeexpr, ">"), typeexpr);
    }

    function maybeReturnType(type) {
      if (type == "=>") return cont(typeexpr);
    }

    function typeprop(type, value) {
      if (type == "variable" || cx.style == "keyword") {
        cx.marked = "property";
        return cont(typeprop);
      } else if (value == "?" || type == "number" || type == "string") {
        return cont(typeprop);
      } else if (type == ":") {
        return cont(typeexpr);
      } else if (type == "[") {
        return cont(expect("variable"), maybetypeOrIn, expect("]"), typeprop);
      } else if (type == "(") {
        return pass(functiondecl, typeprop);
      }
    }

    function typearg(type, value) {
      if (type == "variable" && cx.stream.match(/^\s*[?:]/, false) || value == "?") return cont(typearg);
      if (type == ":") return cont(typeexpr);
      if (type == "spread") return cont(typearg);
      return pass(typeexpr);
    }

    function afterType(type, value) {
      if (value == "<") return cont(pushlex(">"), commasep(typeexpr, ">"), poplex, afterType);
      if (value == "|" || type == "." || value == "&") return cont(typeexpr);
      if (type == "[") return cont(typeexpr, expect("]"), afterType);

      if (value == "extends" || value == "implements") {
        cx.marked = "keyword";
        return cont(typeexpr);
      }

      if (value == "?") return cont(typeexpr, expect(":"), typeexpr);
    }

    function maybeTypeArgs(_, value) {
      if (value == "<") return cont(pushlex(">"), commasep(typeexpr, ">"), poplex, afterType);
    }

    function typeparam() {
      return pass(typeexpr, maybeTypeDefault);
    }

    function maybeTypeDefault(_, value) {
      if (value == "=") return cont(typeexpr);
    }

    function vardef(_, value) {
      if (value == "enum") {
        cx.marked = "keyword";
        return cont(enumdef);
      }

      return pass(pattern, maybetype, maybeAssign, vardefCont);
    }

    function pattern(type, value) {
      if (isTS && isModifier(value)) {
        cx.marked = "keyword";
        return cont(pattern);
      }

      if (type == "variable") {
        register(value);
        return cont();
      }

      if (type == "spread") return cont(pattern);
      if (type == "[") return contCommasep(eltpattern, "]");
      if (type == "{") return contCommasep(proppattern, "}");
    }

    function proppattern(type, value) {
      if (type == "variable" && !cx.stream.match(/^\s*:/, false)) {
        register(value);
        return cont(maybeAssign);
      }

      if (type == "variable") cx.marked = "property";
      if (type == "spread") return cont(pattern);
      if (type == "}") return pass();
      if (type == "[") return cont(expression, expect(']'), expect(':'), proppattern);
      return cont(expect(":"), pattern, maybeAssign);
    }

    function eltpattern() {
      return pass(pattern, maybeAssign);
    }

    function maybeAssign(_type, value) {
      if (value == "=") return cont(expressionNoComma);
    }

    function vardefCont(type) {
      if (type == ",") return cont(vardef);
    }

    function maybeelse(type, value) {
      if (type == "keyword b" && value == "else") return cont(pushlex("form", "else"), statement, poplex);
    }

    function forspec(type, value) {
      if (value == "await") return cont(forspec);
      if (type == "(") return cont(pushlex(")"), forspec1, poplex);
    }

    function forspec1(type) {
      if (type == "var") return cont(vardef, forspec2);
      if (type == "variable") return cont(forspec2);
      return pass(forspec2);
    }

    function forspec2(type, value) {
      if (type == ")") return cont();
      if (type == ";") return cont(forspec2);

      if (value == "in" || value == "of") {
        cx.marked = "keyword";
        return cont(expression, forspec2);
      }

      return pass(expression, forspec2);
    }

    function functiondef(type, value) {
      if (value == "*") {
        cx.marked = "keyword";
        return cont(functiondef);
      }

      if (type == "variable") {
        register(value);
        return cont(functiondef);
      }

      if (type == "(") return cont(pushcontext, pushlex(")"), commasep(funarg, ")"), poplex, mayberettype, statement, popcontext);
      if (isTS && value == "<") return cont(pushlex(">"), commasep(typeparam, ">"), poplex, functiondef);
    }

    function functiondecl(type, value) {
      if (value == "*") {
        cx.marked = "keyword";
        return cont(functiondecl);
      }

      if (type == "variable") {
        register(value);
        return cont(functiondecl);
      }

      if (type == "(") return cont(pushcontext, pushlex(")"), commasep(funarg, ")"), poplex, mayberettype, popcontext);
      if (isTS && value == "<") return cont(pushlex(">"), commasep(typeparam, ">"), poplex, functiondecl);
    }

    function typename(type, value) {
      if (type == "keyword" || type == "variable") {
        cx.marked = "type";
        return cont(typename);
      } else if (value == "<") {
        return cont(pushlex(">"), commasep(typeparam, ">"), poplex);
      }
    }

    function funarg(type, value) {
      if (value == "@") cont(expression, funarg);
      if (type == "spread") return cont(funarg);

      if (isTS && isModifier(value)) {
        cx.marked = "keyword";
        return cont(funarg);
      }

      if (isTS && type == "this") return cont(maybetype, maybeAssign);
      return pass(pattern, maybetype, maybeAssign);
    }

    function classExpression(type, value) {
      // Class expressions may have an optional name.
      if (type == "variable") return className(type, value);
      return classNameAfter(type, value);
    }

    function className(type, value) {
      if (type == "variable") {
        register(value);
        return cont(classNameAfter);
      }
    }

    function classNameAfter(type, value) {
      if (value == "<") return cont(pushlex(">"), commasep(typeparam, ">"), poplex, classNameAfter);

      if (value == "extends" || value == "implements" || isTS && type == ",") {
        if (value == "implements") cx.marked = "keyword";
        return cont(isTS ? typeexpr : expression, classNameAfter);
      }

      if (type == "{") return cont(pushlex("}"), classBody, poplex);
    }

    function classBody(type, value) {
      if (type == "async" || type == "variable" && (value == "static" || value == "get" || value == "set" || isTS && isModifier(value)) && cx.stream.match(/^\s+[\w$\xa1-\uffff]/, false)) {
        cx.marked = "keyword";
        return cont(classBody);
      }

      if (type == "variable" || cx.style == "keyword") {
        cx.marked = "property";
        return cont(classfield, classBody);
      }

      if (type == "number" || type == "string") return cont(classfield, classBody);
      if (type == "[") return cont(expression, maybetype, expect("]"), classfield, classBody);

      if (value == "*") {
        cx.marked = "keyword";
        return cont(classBody);
      }

      if (isTS && type == "(") return pass(functiondecl, classBody);
      if (type == ";" || type == ",") return cont(classBody);
      if (type == "}") return cont();
      if (value == "@") return cont(expression, classBody);
    }

    function classfield(type, value) {
      if (value == "?") return cont(classfield);
      if (type == ":") return cont(typeexpr, maybeAssign);
      if (value == "=") return cont(expressionNoComma);
      var context = cx.state.lexical.prev,
          isInterface = context && context.info == "interface";
      return pass(isInterface ? functiondecl : functiondef);
    }

    function afterExport(type, value) {
      if (value == "*") {
        cx.marked = "keyword";
        return cont(maybeFrom, expect(";"));
      }

      if (value == "default") {
        cx.marked = "keyword";
        return cont(expression, expect(";"));
      }

      if (type == "{") return cont(commasep(exportField, "}"), maybeFrom, expect(";"));
      return pass(statement);
    }

    function exportField(type, value) {
      if (value == "as") {
        cx.marked = "keyword";
        return cont(expect("variable"));
      }

      if (type == "variable") return pass(expressionNoComma, exportField);
    }

    function afterImport(type) {
      if (type == "string") return cont();
      if (type == "(") return pass(expression);
      return pass(importSpec, maybeMoreImports, maybeFrom);
    }

    function importSpec(type, value) {
      if (type == "{") return contCommasep(importSpec, "}");
      if (type == "variable") register(value);
      if (value == "*") cx.marked = "keyword";
      return cont(maybeAs);
    }

    function maybeMoreImports(type) {
      if (type == ",") return cont(importSpec, maybeMoreImports);
    }

    function maybeAs(_type, value) {
      if (value == "as") {
        cx.marked = "keyword";
        return cont(importSpec);
      }
    }

    function maybeFrom(_type, value) {
      if (value == "from") {
        cx.marked = "keyword";
        return cont(expression);
      }
    }

    function arrayLiteral(type) {
      if (type == "]") return cont();
      return pass(commasep(expressionNoComma, "]"));
    }

    function enumdef() {
      return pass(pushlex("form"), pattern, expect("{"), pushlex("}"), commasep(enummember, "}"), poplex, poplex);
    }

    function enummember() {
      return pass(pattern, maybeAssign);
    }

    function isContinuedStatement(state, textAfter) {
      return state.lastType == "operator" || state.lastType == "," || isOperatorChar.test(textAfter.charAt(0)) || /[,.]/.test(textAfter.charAt(0));
    }

    function expressionAllowed(stream, state, backUp) {
      return state.tokenize == tokenBase && /^(?:operator|sof|keyword [bcd]|case|new|export|default|spread|[\[{}\(,;:]|=>)$/.test(state.lastType) || state.lastType == "quasi" && /\{\s*$/.test(stream.string.slice(0, stream.pos - (backUp || 0)));
    } // Interface


    return {
      startState: function startState(basecolumn) {
        var state = {
          tokenize: tokenBase,
          lastType: "sof",
          cc: [],
          lexical: new JSLexical((basecolumn || 0) - indentUnit, 0, "block", false),
          localVars: parserConfig.localVars,
          context: parserConfig.localVars && new Context(null, null, false),
          indented: basecolumn || 0
        };
        if (parserConfig.globalVars && typeof parserConfig.globalVars == "object") state.globalVars = parserConfig.globalVars;
        return state;
      },
      token: function token(stream, state) {
        if (stream.sol()) {
          if (!state.lexical.hasOwnProperty("align")) state.lexical.align = false;
          state.indented = stream.indentation();
          findFatArrow(stream, state);
        }

        if (state.tokenize != tokenComment && stream.eatSpace()) return null;
        var style = state.tokenize(stream, state);
        if (type == "comment") return style;
        state.lastType = type == "operator" && (content == "++" || content == "--") ? "incdec" : type;
        return parseJS(state, style, type, content, stream);
      },
      indent: function indent(state, textAfter) {
        if (state.tokenize == tokenComment) return CodeMirror.Pass;
        if (state.tokenize != tokenBase) return 0;
        var firstChar = textAfter && textAfter.charAt(0),
            lexical = state.lexical,
            top; // Kludge to prevent 'maybelse' from blocking lexical scope pops

        if (!/^\s*else\b/.test(textAfter)) for (var i = state.cc.length - 1; i >= 0; --i) {
          var c = state.cc[i];
          if (c == poplex) lexical = lexical.prev;else if (c != maybeelse) break;
        }

        while ((lexical.type == "stat" || lexical.type == "form") && (firstChar == "}" || (top = state.cc[state.cc.length - 1]) && (top == maybeoperatorComma || top == maybeoperatorNoComma) && !/^[,\.=+\-*:?[\(]/.test(textAfter))) {
          lexical = lexical.prev;
        }

        if (statementIndent && lexical.type == ")" && lexical.prev.type == "stat") lexical = lexical.prev;
        var type = lexical.type,
            closing = firstChar == type;
        if (type == "vardef") return lexical.indented + (state.lastType == "operator" || state.lastType == "," ? lexical.info.length + 1 : 0);else if (type == "form" && firstChar == "{") return lexical.indented;else if (type == "form") return lexical.indented + indentUnit;else if (type == "stat") return lexical.indented + (isContinuedStatement(state, textAfter) ? statementIndent || indentUnit : 0);else if (lexical.info == "switch" && !closing && parserConfig.doubleIndentSwitch != false) return lexical.indented + (/^(?:case|default)\b/.test(textAfter) ? indentUnit : 2 * indentUnit);else if (lexical.align) return lexical.column + (closing ? 0 : 1);else return lexical.indented + (closing ? 0 : indentUnit);
      },
      electricInput: /^\s*(?:case .*?:|default:|\{|\})$/,
      blockCommentStart: jsonMode ? null : "/*",
      blockCommentEnd: jsonMode ? null : "*/",
      blockCommentContinue: jsonMode ? null : " * ",
      lineComment: jsonMode ? null : "//",
      fold: "brace",
      closeBrackets: "()[]{}''\"\"``",
      helperType: jsonMode ? "json" : "javascript",
      jsonldMode: jsonldMode,
      jsonMode: jsonMode,
      expressionAllowed: expressionAllowed,
      skipExpression: function skipExpression(state) {
        var top = state.cc[state.cc.length - 1];
        if (top == expression || top == expressionNoComma) state.cc.pop();
      }
    };
  });
  CodeMirror.registerHelper("wordChars", "javascript", /[\w$]/);
  CodeMirror.defineMIME("text/javascript", "javascript");
  CodeMirror.defineMIME("text/ecmascript", "javascript");
  CodeMirror.defineMIME("application/javascript", "javascript");
  CodeMirror.defineMIME("application/x-javascript", "javascript");
  CodeMirror.defineMIME("application/ecmascript", "javascript");
  CodeMirror.defineMIME("application/json", {
    name: "javascript",
    json: true
  });
  CodeMirror.defineMIME("application/x-json", {
    name: "javascript",
    json: true
  });
  CodeMirror.defineMIME("application/ld+json", {
    name: "javascript",
    jsonld: true
  });
  CodeMirror.defineMIME("text/typescript", {
    name: "javascript",
    typescript: true
  });
  CodeMirror.defineMIME("application/typescript", {
    name: "javascript",
    typescript: true
  });
});

/***/ }),

/***/ "Bsg+":
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "Bu1f":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return isValidElement; });
/* unused harmony export replaceElement */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return cloneElement; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("mXGw");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

var isValidElement = react__WEBPACK_IMPORTED_MODULE_0__["isValidElement"];

function replaceElement(element, replacement, props) {
  if (!isValidElement(element)) return replacement;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__["cloneElement"](element, typeof props === 'function' ? props() : props);
}
function cloneElement(element, props) {
  return replaceElement(element, element, props);
}

/***/ }),

/***/ "ButF":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("V7cS");

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var parse_path_string_1 = __webpack_require__("8oA1");

var REGEX_MD = /[a-z]/;

function toSymmetry(p, c) {
  return [c[0] + (c[0] - p[0]), c[1] + (c[1] - p[1])];
}

function pathToAbsolute(pathString) {
  var pathArray = parse_path_string_1["default"](pathString);

  if (!pathArray || !pathArray.length) {
    return [['M', 0, 0]];
  }

  var needProcess = false; // 如果存在小写的命令或者 V,H,T,S 则需要处理

  for (var i = 0; i < pathArray.length; i++) {
    var cmd = pathArray[i][0]; // 如果存在相对位置的命令，则中断返回

    if (REGEX_MD.test(cmd) || ['V', 'H', 'T', 'S'].indexOf(cmd) >= 0) {
      needProcess = true;
      break;
    }
  } // 如果不存在相对命令，则直接返回
  // 如果在业务上都写绝对路径，这种方式最快，仅做了一次检测


  if (!needProcess) {
    return pathArray;
  }

  var res = [];
  var x = 0;
  var y = 0;
  var mx = 0;
  var my = 0;
  var start = 0;
  var pa0;
  var dots;
  var first = pathArray[0];

  if (first[0] === 'M' || first[0] === 'm') {
    x = +first[1];
    y = +first[2];
    mx = x;
    my = y;
    start++;
    res[0] = ['M', x, y];
  }

  for (var i = start, ii = pathArray.length; i < ii; i++) {
    var pa = pathArray[i];
    var preParams = res[i - 1]; // 取前一个已经处理后的节点，否则会出现问题

    var r = [];
    var cmd = pa[0];
    var upCmd = cmd.toUpperCase();

    if (cmd !== upCmd) {
      r[0] = upCmd;

      switch (upCmd) {
        case 'A':
          r[1] = pa[1];
          r[2] = pa[2];
          r[3] = pa[3];
          r[4] = pa[4];
          r[5] = pa[5];
          r[6] = +pa[6] + x;
          r[7] = +pa[7] + y;
          break;

        case 'V':
          r[1] = +pa[1] + y;
          break;

        case 'H':
          r[1] = +pa[1] + x;
          break;

        case 'M':
          mx = +pa[1] + x;
          my = +pa[2] + y;
          break;
        // for lint

        default:
          for (var j = 1, jj = pa.length; j < jj; j++) {
            r[j] = +pa[j] + (j % 2 ? x : y);
          }

      }
    } else {
      // 如果本来已经大写，则不处理
      r = pathArray[i];
    } // 需要在外面统一做，同时处理 V,H,S,T 等特殊指令


    switch (upCmd) {
      case 'Z':
        x = +mx;
        y = +my;
        break;

      case 'H':
        x = r[1];
        r = ['L', x, y];
        break;

      case 'V':
        y = r[1];
        r = ['L', x, y];
        break;

      case 'T':
        x = r[1];
        y = r[2]; // 以 x, y 为中心的，上一个控制点的对称点
        // 需要假设上一个节点的命令为 Q

        var symetricT = toSymmetry([preParams[1], preParams[2]], [preParams[3], preParams[4]]);
        r = ['Q', symetricT[0], symetricT[1], x, y];
        break;

      case 'S':
        x = r[r.length - 2];
        y = r[r.length - 1]; // 以 x,y 为中心，取上一个控制点，
        // 需要假设上一个线段为 C 或者 S

        var length_1 = preParams.length;
        var symetricS = toSymmetry([preParams[length_1 - 4], preParams[length_1 - 3]], [preParams[length_1 - 2], preParams[length_1 - 1]]);
        r = ['C', symetricS[0], symetricS[1], r[1], r[2], x, y];
        break;

      case 'M':
        mx = r[r.length - 2];
        my = r[r.length - 1];
        break;
      // for lint

      default:
        x = r[r.length - 2];
        y = r[r.length - 1];
    }

    res.push(r);
  }

  return res;
}

exports["default"] = pathToAbsolute;

/***/ }),

/***/ "ByO0":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------

var _require = __webpack_require__("uUP6"),
    Just = _require.Just,
    Nothing = _require.Nothing;
/*~
 * stability: stable
 * authors: 
 *   - "@boris-marinov"
 * 
 * type: |
 *   forall a, b:
 *     (Validation a b) => Maybe b
 */


var validationToMaybe = function validationToMaybe(aValidation) {
  return aValidation.matchWith({
    Failure: function Failure() {
      return Nothing();
    },
    Success: function Success(_ref) {
      var value = _ref.value;
      return Just(value);
    }
  });
};

module.exports = validationToMaybe;

/***/ }),

/***/ "Bytu":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin
module.exports = {"search":"Search-module--search--2euMx","icon":"Search-module--icon--l5359","input":"Search-module--input--2KREX"};

/***/ }),

/***/ "C5nI":
/***/ (function(module, exports, __webpack_require__) {

// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
var speciesConstructor = __webpack_require__("Qno1");

module.exports = function (original, length) {
  return new (speciesConstructor(original))(length);
};


/***/ }),

/***/ "CAwg":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.1 Object.assign(target, source)
var $export = __webpack_require__("/6KZ");

$export($export.S + $export.F, 'Object', { assign: __webpack_require__("tbIA") });


/***/ }),

/***/ "CHlC":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ _inherits; });

// CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}
// CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/inherits.js

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

/***/ }),

/***/ "CIiV":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $defineProperty = __webpack_require__("U1KF");
var createDesc = __webpack_require__("WWmS");

module.exports = function (object, index, value) {
  if (index in object) $defineProperty.f(object, index, createDesc(0, value));
  else object[index] = value;
};


/***/ }),

/***/ "CL0D":
/***/ (function(module, exports, __webpack_require__) {

var _curry1 = __webpack_require__("AN6r");
/**
 * Checks if the input value is `null` or `undefined`.
 *
 * @func
 * @memberOf R
 * @since v0.9.0
 * @category Type
 * @sig * -> Boolean
 * @param {*} x The value to test.
 * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.
 * @example
 *
 *      R.isNil(null); //=> true
 *      R.isNil(undefined); //=> true
 *      R.isNil(0); //=> false
 *      R.isNil([]); //=> false
 */


module.exports = _curry1(function isNil(x) {
  return x == null;
});

/***/ }),

/***/ "CLuC":
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__("P56o").document;
module.exports = document && document.documentElement;


/***/ }),

/***/ "CXzI":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("4aJ6");

__webpack_require__("M/4x");

__webpack_require__("t91x");

var _curry1 = __webpack_require__("AN6r");
/**
 * Gives a single-word string description of the (native) type of a value,
 * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not
 * attempt to distinguish user Object types any further, reporting them all as
 * 'Object'.
 *
 * @func
 * @memberOf R
 * @since v0.8.0
 * @category Type
 * @sig (* -> {*}) -> String
 * @param {*} val The value to test
 * @return {String}
 * @example
 *
 *      R.type({}); //=> "Object"
 *      R.type(1); //=> "Number"
 *      R.type(false); //=> "Boolean"
 *      R.type('s'); //=> "String"
 *      R.type(null); //=> "Null"
 *      R.type([]); //=> "Array"
 *      R.type(/[A-z]/); //=> "RegExp"
 *      R.type(() => {}); //=> "Function"
 */


module.exports = _curry1(function type(val) {
  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);
});

/***/ }),

/***/ "CZpP":
/***/ (function(module, exports, __webpack_require__) {

var _arity = __webpack_require__("r/sL");

var _curry2 = __webpack_require__("OFPg");
/**
 * Creates a function that is bound to a context.
 * Note: `R.bind` does not provide the additional argument-binding capabilities of
 * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).
 *
 * @func
 * @memberOf R
 * @since v0.6.0
 * @category Function
 * @category Object
 * @sig (* -> *) -> {*} -> (* -> *)
 * @param {Function} fn The function to bind to context
 * @param {Object} thisObj The context to bind `fn` to
 * @return {Function} A function that will execute in the context of `thisObj`.
 * @see R.partial
 * @example
 *
 *      var log = R.bind(console.log, console);
 *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}
 *      // logs {a: 2}
 * @symb R.bind(f, o)(a, b) = f.call(o, a, b)
 */


module.exports = _curry2(function bind(fn, thisObj) {
  return _arity(fn.length, function () {
    return fn.apply(thisObj, arguments);
  });
});

/***/ }),

/***/ "Ce2C":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var RADIAN = Math.PI / 180;

var toRadian = function toRadian(degree) {
  return RADIAN * degree;
};

exports["default"] = toRadian;

/***/ }),

/***/ "Cgi2":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _antv_g_base_lib_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("2FXK");
/* harmony import */ var _antv_g_base_lib_types__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_antv_g_base_lib_types__WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _antv_g_base_lib_types__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _antv_g_base_lib_types__WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
// 导出 g-base 中的 types


/***/ }),

/***/ "Cmsx":
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__("n+VH");
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),

/***/ "Cpn1":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _arrayWithHoles; });
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

/***/ }),

/***/ "CsEj":
/***/ (function(module, exports, __webpack_require__) {

var _curry2 = __webpack_require__("OFPg");

var _xfBase = __webpack_require__("K8HH");

module.exports = function () {
  function XDrop(n, xf) {
    this.xf = xf;
    this.n = n;
  }

  XDrop.prototype['@@transducer/init'] = _xfBase.init;
  XDrop.prototype['@@transducer/result'] = _xfBase.result;

  XDrop.prototype['@@transducer/step'] = function (result, input) {
    if (this.n > 0) {
      this.n -= 1;
      return result;
    }

    return this.xf['@@transducer/step'](result, input);
  };

  return _curry2(function _xdrop(n, xf) {
    return new XDrop(n, xf);
  });
}();

/***/ }),

/***/ "Cwc3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DEFAULT_Y = 0; // 默认的 y 的值
// 偏移之后，间距

exports.MARGIN_RATIO = 1 / 2;
exports.DODGE_RATIO = 1 / 2; // 散点分开之后，距离边界的距离

exports.GAP = 0.05;

/***/ }),

/***/ "CxZ5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("5hJT");

__webpack_require__("GkPX");

__webpack_require__("d3/y");

var _interopRequireWildcard = __webpack_require__("vdEC");

var _interopRequireDefault = __webpack_require__("63Ad");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _slicedToArray2 = _interopRequireDefault(__webpack_require__("nxTg"));

var _defineProperty2 = _interopRequireDefault(__webpack_require__("OvAC"));

var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__("RiSW"));

var React = _interopRequireWildcard(__webpack_require__("mXGw"));

var _classnames = _interopRequireDefault(__webpack_require__("8Jek"));

var _IconBase = _interopRequireDefault(__webpack_require__("SfRV"));

var _twoTonePrimaryColor = __webpack_require__("4T8+");

var _utils = __webpack_require__("OgXt"); // Initial setting
// should move it to antd main repo?


(0, _twoTonePrimaryColor.setTwoToneColor)('#1890ff');
var Icon = React.forwardRef(function (props, ref) {
  var className = props.className,
      icon = props.icon,
      spin = props.spin,
      rotate = props.rotate,
      tabIndex = props.tabIndex,
      onClick = props.onClick,
      twoToneColor = props.twoToneColor,
      restProps = (0, _objectWithoutProperties2["default"])(props, ["className", "icon", "spin", "rotate", "tabIndex", "onClick", "twoToneColor"]);
  var classString = (0, _classnames["default"])('anticon', (0, _defineProperty2["default"])({}, "anticon-".concat(icon.name), Boolean(icon.name)), className);
  var svgClassString = (0, _classnames["default"])({
    'anticon-spin': !!spin || icon.name === 'loading'
  });
  var iconTabIndex = tabIndex;

  if (iconTabIndex === undefined && onClick) {
    iconTabIndex = -1;
  }

  var svgStyle = rotate ? {
    msTransform: "rotate(".concat(rotate, "deg)"),
    transform: "rotate(".concat(rotate, "deg)")
  } : undefined;

  var _normalizeTwoToneColo = (0, _utils.normalizeTwoToneColors)(twoToneColor),
      _normalizeTwoToneColo2 = (0, _slicedToArray2["default"])(_normalizeTwoToneColo, 2),
      primaryColor = _normalizeTwoToneColo2[0],
      secondaryColor = _normalizeTwoToneColo2[1];

  return React.createElement("span", Object.assign({
    role: "img",
    "aria-label": icon.name
  }, restProps, {
    ref: ref,
    tabIndex: iconTabIndex,
    onClick: onClick,
    className: classString
  }), React.createElement(_IconBase["default"], {
    className: svgClassString,
    icon: icon,
    primaryColor: primaryColor,
    secondaryColor: secondaryColor,
    style: svgStyle
  }));
});
Icon.displayName = 'AntdIcon';
Icon.getTwoToneColor = _twoTonePrimaryColor.getTwoToneColor;
Icon.setTwoToneColor = _twoTonePrimaryColor.setTwoToneColor;
var _default = Icon;
exports["default"] = _default;

/***/ }),

/***/ "CyNN":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // Dependencies

__webpack_require__("Z8gF");

__webpack_require__("asZ9");

var parseUrl = __webpack_require__("W2ws"),
    isSsh = __webpack_require__("2agF");
/**
 * gitUp
 * Parses the input url.
 *
 * @name gitUp
 * @function
 * @param {String} input The input url.
 * @return {Object} An object containing the following fields:
 *
 *  - `protocols` (Array): An array with the url protocols (usually it has one element).
 *  - `port` (null|Number): The domain port.
 *  - `resource` (String): The url domain (including subdomains).
 *  - `user` (String): The authentication user (usually for ssh urls).
 *  - `pathname` (String): The url pathname.
 *  - `hash` (String): The url hash.
 *  - `search` (String): The url querystring value.
 *  - `href` (String): The input url.
 *  - `protocol` (String): The git url protocol.
 *  - `token` (String): The oauth token (could appear in the https urls).
 */


function gitUp(input) {
  var output = parseUrl(input);
  output.token = "";
  var splits = output.user.split(":");

  if (splits.length === 2) {
    if (splits[1] === "x-oauth-basic") {
      output.token = splits[0];
    } else if (splits[0] === "x-token-auth") {
      output.token = splits[1];
    }
  }

  if (isSsh(output.protocols) || isSsh(input)) {
    output.protocol = "ssh";
  } else if (output.protocols.length) {
    output.protocol = output.protocols[0];
  } else {
    output.protocol = "file";
  }

  output.href = output.href.replace(/\/$/, "");
  return output;
}

module.exports = gitUp;

/***/ }),

/***/ "DGR3":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.index-of.js
var es6_array_index_of = __webpack_require__("V7cS");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.iterator.js
var es6_array_iterator = __webpack_require__("K/PF");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.keys.js
var es6_object_keys = __webpack_require__("75LO");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.filter.js
var es6_array_filter = __webpack_require__("9p7t");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.constructor.js
var es6_regexp_constructor = __webpack_require__("J8hF");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.for-each.js
var es6_array_for_each = __webpack_require__("7lGJ");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.assign.js
var es6_object_assign = __webpack_require__("5hJT");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.is-array.js
var es6_array_is_array = __webpack_require__("+3V6");

// EXTERNAL MODULE: ../node_modules/core-js/modules/web.dom.iterable.js
var web_dom_iterable = __webpack_require__("W1QL");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es7.symbol.async-iterator.js
var es7_symbol_async_iterator = __webpack_require__("+jjx");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.symbol.js
var es6_symbol = __webpack_require__("ABKx");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.string.iterator.js
var es6_string_iterator = __webpack_require__("lQyR");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.from.js
var es6_array_from = __webpack_require__("YhIr");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.function.name.js
var es6_function_name = __webpack_require__("GkPX");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.to-string.js
var es6_regexp_to_string = __webpack_require__("4aJ6");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.date.to-string.js
var es6_date_to_string = __webpack_require__("M/4x");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.to-string.js
var es6_object_to_string = __webpack_require__("t91x");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.define-property.js
var es6_object_define_property = __webpack_require__("d3/y");

// EXTERNAL MODULE: ../node_modules/react/index.js
var react = __webpack_require__("mXGw");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.define-properties.js
var es6_object_define_properties = __webpack_require__("6/FK");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es7.object.get-own-property-descriptors.js
var es7_object_get_own_property_descriptors = __webpack_require__("2Tod");

// EXTERNAL MODULE: ../node_modules/rc-trigger/es/index.js + 10 modules
var es = __webpack_require__("mPTt");

// CONCATENATED MODULE: ../node_modules/rc-tooltip/es/placements.js
var placements_autoAdjustOverflow = {
  adjustX: 1,
  adjustY: 1
};
var targetOffset = [0, 0];
var placements = {
  left: {
    points: ['cr', 'cl'],
    overflow: placements_autoAdjustOverflow,
    offset: [-4, 0],
    targetOffset: targetOffset
  },
  right: {
    points: ['cl', 'cr'],
    overflow: placements_autoAdjustOverflow,
    offset: [4, 0],
    targetOffset: targetOffset
  },
  top: {
    points: ['bc', 'tc'],
    overflow: placements_autoAdjustOverflow,
    offset: [0, -4],
    targetOffset: targetOffset
  },
  bottom: {
    points: ['tc', 'bc'],
    overflow: placements_autoAdjustOverflow,
    offset: [0, 4],
    targetOffset: targetOffset
  },
  topLeft: {
    points: ['bl', 'tl'],
    overflow: placements_autoAdjustOverflow,
    offset: [0, -4],
    targetOffset: targetOffset
  },
  leftTop: {
    points: ['tr', 'tl'],
    overflow: placements_autoAdjustOverflow,
    offset: [-4, 0],
    targetOffset: targetOffset
  },
  topRight: {
    points: ['br', 'tr'],
    overflow: placements_autoAdjustOverflow,
    offset: [0, -4],
    targetOffset: targetOffset
  },
  rightTop: {
    points: ['tl', 'tr'],
    overflow: placements_autoAdjustOverflow,
    offset: [4, 0],
    targetOffset: targetOffset
  },
  bottomRight: {
    points: ['tr', 'br'],
    overflow: placements_autoAdjustOverflow,
    offset: [0, 4],
    targetOffset: targetOffset
  },
  rightBottom: {
    points: ['bl', 'br'],
    overflow: placements_autoAdjustOverflow,
    offset: [4, 0],
    targetOffset: targetOffset
  },
  bottomLeft: {
    points: ['tl', 'bl'],
    overflow: placements_autoAdjustOverflow,
    offset: [0, 4],
    targetOffset: targetOffset
  },
  leftBottom: {
    points: ['br', 'bl'],
    overflow: placements_autoAdjustOverflow,
    offset: [-4, 0],
    targetOffset: targetOffset
  }
};
/* harmony default export */ var es_placements = (placements);
// CONCATENATED MODULE: ../node_modules/rc-tooltip/es/Content.js


var Content_Content = function Content(props) {
  var overlay = props.overlay,
      prefixCls = props.prefixCls,
      id = props.id,
      overlayInnerStyle = props.overlayInnerStyle;
  return react_default.a.createElement("div", {
    className: "".concat(prefixCls, "-inner"),
    id: id,
    role: "tooltip",
    style: overlayInnerStyle
  }, typeof overlay === 'function' ? overlay() : overlay);
};

/* harmony default export */ var es_Content = (Content_Content);
// CONCATENATED MODULE: ../node_modules/rc-tooltip/es/Tooltip.js














function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}






var Tooltip_Tooltip = function Tooltip(props, ref) {
  var overlayClassName = props.overlayClassName,
      _props$trigger = props.trigger,
      trigger = _props$trigger === void 0 ? ['hover'] : _props$trigger,
      _props$mouseEnterDela = props.mouseEnterDelay,
      mouseEnterDelay = _props$mouseEnterDela === void 0 ? 0 : _props$mouseEnterDela,
      _props$mouseLeaveDela = props.mouseLeaveDelay,
      mouseLeaveDelay = _props$mouseLeaveDela === void 0 ? 0.1 : _props$mouseLeaveDela,
      overlayStyle = props.overlayStyle,
      _props$prefixCls = props.prefixCls,
      prefixCls = _props$prefixCls === void 0 ? 'rc-tooltip' : _props$prefixCls,
      children = props.children,
      onVisibleChange = props.onVisibleChange,
      afterVisibleChange = props.afterVisibleChange,
      transitionName = props.transitionName,
      animation = props.animation,
      _props$placement = props.placement,
      placement = _props$placement === void 0 ? 'right' : _props$placement,
      _props$align = props.align,
      align = _props$align === void 0 ? {} : _props$align,
      _props$destroyTooltip = props.destroyTooltipOnHide,
      destroyTooltipOnHide = _props$destroyTooltip === void 0 ? false : _props$destroyTooltip,
      defaultVisible = props.defaultVisible,
      getTooltipContainer = props.getTooltipContainer,
      overlayInnerStyle = props.overlayInnerStyle,
      restProps = _objectWithoutProperties(props, ["overlayClassName", "trigger", "mouseEnterDelay", "mouseLeaveDelay", "overlayStyle", "prefixCls", "children", "onVisibleChange", "afterVisibleChange", "transitionName", "animation", "placement", "align", "destroyTooltipOnHide", "defaultVisible", "getTooltipContainer", "overlayInnerStyle"]);

  var domRef = Object(react["useRef"])(null);
  Object(react["useImperativeHandle"])(ref, function () {
    return domRef.current;
  });

  var extraProps = _objectSpread({}, restProps);

  if ('visible' in props) {
    extraProps.popupVisible = props.visible;
  }

  var getPopupElement = function getPopupElement() {
    var _props$arrowContent = props.arrowContent,
        arrowContent = _props$arrowContent === void 0 ? null : _props$arrowContent,
        overlay = props.overlay,
        id = props.id;
    return [react_default.a.createElement("div", {
      className: "".concat(prefixCls, "-arrow"),
      key: "arrow"
    }, arrowContent), react_default.a.createElement(es_Content, {
      key: "content",
      prefixCls: prefixCls,
      id: id,
      overlay: overlay,
      overlayInnerStyle: overlayInnerStyle
    })];
  };

  var destroyTooltip = false;
  var autoDestroy = false;

  if (typeof destroyTooltipOnHide === 'boolean') {
    destroyTooltip = destroyTooltipOnHide;
  } else if (destroyTooltipOnHide && _typeof(destroyTooltipOnHide) === 'object') {
    var keepParent = destroyTooltipOnHide.keepParent;
    destroyTooltip = keepParent === true;
    autoDestroy = keepParent === false;
  }

  return react_default.a.createElement(es["a" /* default */], Object.assign({
    popupClassName: overlayClassName,
    prefixCls: prefixCls,
    popup: getPopupElement,
    action: trigger,
    builtinPlacements: placements,
    popupPlacement: placement,
    ref: domRef,
    popupAlign: align,
    getPopupContainer: getTooltipContainer,
    onPopupVisibleChange: onVisibleChange,
    afterPopupVisibleChange: afterVisibleChange,
    popupTransitionName: transitionName,
    popupAnimation: animation,
    defaultPopupVisible: defaultVisible,
    destroyPopupOnHide: destroyTooltip,
    autoDestroy: autoDestroy,
    mouseLeaveDelay: mouseLeaveDelay,
    popupStyle: overlayStyle,
    mouseEnterDelay: mouseEnterDelay
  }, extraProps), children);
};

/* harmony default export */ var es_Tooltip = (Object(react["forwardRef"])(Tooltip_Tooltip));
// CONCATENATED MODULE: ../node_modules/rc-tooltip/es/index.js

/* harmony default export */ var rc_tooltip_es = (es_Tooltip);
// EXTERNAL MODULE: ../node_modules/classnames/index.js
var classnames = __webpack_require__("8Jek");
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);

// CONCATENATED MODULE: ../node_modules/antd/es/tooltip/placements.js







function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}


var autoAdjustOverflowEnabled = {
  adjustX: 1,
  adjustY: 1
};
var autoAdjustOverflowDisabled = {
  adjustX: 0,
  adjustY: 0
};
var placements_targetOffset = [0, 0];
function getOverflowOptions(autoAdjustOverflow) {
  if (typeof autoAdjustOverflow === 'boolean') {
    return autoAdjustOverflow ? autoAdjustOverflowEnabled : autoAdjustOverflowDisabled;
  }

  return _extends(_extends({}, autoAdjustOverflowDisabled), autoAdjustOverflow);
}
function getPlacements(config) {
  var _config$arrowWidth = config.arrowWidth,
      arrowWidth = _config$arrowWidth === void 0 ? 5 : _config$arrowWidth,
      _config$horizontalArr = config.horizontalArrowShift,
      horizontalArrowShift = _config$horizontalArr === void 0 ? 16 : _config$horizontalArr,
      _config$verticalArrow = config.verticalArrowShift,
      verticalArrowShift = _config$verticalArrow === void 0 ? 8 : _config$verticalArrow,
      autoAdjustOverflow = config.autoAdjustOverflow;
  var placementMap = {
    left: {
      points: ['cr', 'cl'],
      offset: [-4, 0]
    },
    right: {
      points: ['cl', 'cr'],
      offset: [4, 0]
    },
    top: {
      points: ['bc', 'tc'],
      offset: [0, -4]
    },
    bottom: {
      points: ['tc', 'bc'],
      offset: [0, 4]
    },
    topLeft: {
      points: ['bl', 'tc'],
      offset: [-(horizontalArrowShift + arrowWidth), -4]
    },
    leftTop: {
      points: ['tr', 'cl'],
      offset: [-4, -(verticalArrowShift + arrowWidth)]
    },
    topRight: {
      points: ['br', 'tc'],
      offset: [horizontalArrowShift + arrowWidth, -4]
    },
    rightTop: {
      points: ['tl', 'cr'],
      offset: [4, -(verticalArrowShift + arrowWidth)]
    },
    bottomRight: {
      points: ['tr', 'bc'],
      offset: [horizontalArrowShift + arrowWidth, 4]
    },
    rightBottom: {
      points: ['bl', 'cr'],
      offset: [4, verticalArrowShift + arrowWidth]
    },
    bottomLeft: {
      points: ['tl', 'bc'],
      offset: [-(horizontalArrowShift + arrowWidth), 4]
    },
    leftBottom: {
      points: ['br', 'cl'],
      offset: [-4, verticalArrowShift + arrowWidth]
    }
  };
  Object.keys(placementMap).forEach(function (key) {
    placementMap[key] = config.arrowPointAtCenter ? _extends(_extends({}, placementMap[key]), {
      overflow: getOverflowOptions(autoAdjustOverflow),
      targetOffset: placements_targetOffset
    }) : _extends(_extends({}, placements[key]), {
      overflow: getOverflowOptions(autoAdjustOverflow)
    });
    placementMap[key].ignoreShake = true;
  });
  return placementMap;
}
// EXTERNAL MODULE: ../node_modules/antd/es/_util/reactNode.js
var reactNode = __webpack_require__("Bu1f");

// EXTERNAL MODULE: ../node_modules/antd/es/config-provider/context.js + 4 modules
var context = __webpack_require__("Bfez");

// EXTERNAL MODULE: ../node_modules/antd/es/_util/colors.js
var colors = __webpack_require__("nxLd");

// CONCATENATED MODULE: ../node_modules/antd/es/tooltip/index.js



















function tooltip_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

function _iterableToArrayLimit(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function tooltip_extends() {
  tooltip_extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return tooltip_extends.apply(this, arguments);
}









var splitObject = function splitObject(obj, keys) {
  var picked = {};

  var omitted = tooltip_extends({}, obj);

  keys.forEach(function (key) {
    if (obj && key in obj) {
      picked[key] = obj[key];
      delete omitted[key];
    }
  });
  return {
    picked: picked,
    omitted: omitted
  };
};

var PresetColorRegex = new RegExp("^(".concat(colors["a" /* PresetColorTypes */].join('|'), ")(-inverse)?$")); // Fix Tooltip won't hide at disabled button
// mouse events don't trigger at disabled button in Chrome
// https://github.com/react-component/tooltip/issues/18

function getDisabledCompatibleChildren(element, prefixCls) {
  var elementType = element.type;

  if ((elementType.__ANT_BUTTON === true || elementType.__ANT_SWITCH === true || elementType.__ANT_CHECKBOX === true || element.type === 'button') && element.props.disabled) {
    // Pick some layout related style properties up to span
    // Prevent layout bugs like https://github.com/ant-design/ant-design/issues/5254
    var _splitObject = splitObject(element.props.style, ['position', 'left', 'right', 'top', 'bottom', 'float', 'display', 'zIndex']),
        picked = _splitObject.picked,
        omitted = _splitObject.omitted;

    var spanStyle = tooltip_extends(tooltip_extends({
      display: 'inline-block'
    }, picked), {
      cursor: 'not-allowed',
      width: element.props.block ? '100%' : null
    });

    var buttonStyle = tooltip_extends(tooltip_extends({}, omitted), {
      pointerEvents: 'none'
    });

    var child = Object(reactNode["a" /* cloneElement */])(element, {
      style: buttonStyle,
      className: null
    });
    return /*#__PURE__*/react["createElement"]("span", {
      style: spanStyle,
      className: classnames_default()(element.props.className, "".concat(prefixCls, "-disabled-compatible-wrapper"))
    }, child);
  }

  return element;
}

var tooltip_Tooltip = /*#__PURE__*/react["forwardRef"](function (props, ref) {
  var _classNames2;

  var _React$useContext = react["useContext"](context["b" /* ConfigContext */]),
      getContextPopupContainer = _React$useContext.getPopupContainer,
      getPrefixCls = _React$useContext.getPrefixCls,
      direction = _React$useContext.direction;

  var _React$useState = react["useState"](!!props.visible || !!props.defaultVisible),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      visible = _React$useState2[0],
      setVisible = _React$useState2[1];

  react["useEffect"](function () {
    if ('visible' in props) {
      setVisible(props.visible);
    }
  }, [props.visible]);

  var isNoTitle = function isNoTitle() {
    var title = props.title,
        overlay = props.overlay;
    return !title && !overlay && title !== 0; // overlay for old version compatibility
  };

  var onVisibleChange = function onVisibleChange(vis) {
    if (!('visible' in props)) {
      setVisible(isNoTitle() ? false : vis);
    }

    if (props.onVisibleChange && !isNoTitle()) {
      props.onVisibleChange(vis);
    }
  };

  var getTooltipPlacements = function getTooltipPlacements() {
    var builtinPlacements = props.builtinPlacements,
        arrowPointAtCenter = props.arrowPointAtCenter,
        autoAdjustOverflow = props.autoAdjustOverflow;
    return builtinPlacements || getPlacements({
      arrowPointAtCenter: arrowPointAtCenter,
      autoAdjustOverflow: autoAdjustOverflow
    });
  }; // 动态设置动画点


  var onPopupAlign = function onPopupAlign(domNode, align) {
    var placements = getTooltipPlacements(); // 当前返回的位置

    var placement = Object.keys(placements).filter(function (key) {
      return placements[key].points[0] === align.points[0] && placements[key].points[1] === align.points[1];
    })[0];

    if (!placement) {
      return;
    } // 根据当前坐标设置动画点


    var rect = domNode.getBoundingClientRect();
    var transformOrigin = {
      top: '50%',
      left: '50%'
    };

    if (placement.indexOf('top') >= 0 || placement.indexOf('Bottom') >= 0) {
      transformOrigin.top = "".concat(rect.height - align.offset[1], "px");
    } else if (placement.indexOf('Top') >= 0 || placement.indexOf('bottom') >= 0) {
      transformOrigin.top = "".concat(-align.offset[1], "px");
    }

    if (placement.indexOf('left') >= 0 || placement.indexOf('Right') >= 0) {
      transformOrigin.left = "".concat(rect.width - align.offset[0], "px");
    } else if (placement.indexOf('right') >= 0 || placement.indexOf('Left') >= 0) {
      transformOrigin.left = "".concat(-align.offset[0], "px");
    }

    domNode.style.transformOrigin = "".concat(transformOrigin.left, " ").concat(transformOrigin.top);
  };

  var getOverlay = function getOverlay() {
    var title = props.title,
        overlay = props.overlay;

    if (title === 0) {
      return title;
    }

    return overlay || title || '';
  };

  var customizePrefixCls = props.prefixCls,
      openClassName = props.openClassName,
      getPopupContainer = props.getPopupContainer,
      getTooltipContainer = props.getTooltipContainer,
      overlayClassName = props.overlayClassName,
      color = props.color,
      overlayInnerStyle = props.overlayInnerStyle;
  var children = props.children;
  var prefixCls = getPrefixCls('tooltip', customizePrefixCls);
  var tempVisible = visible; // Hide tooltip when there is no title

  if (!('visible' in props) && isNoTitle()) {
    tempVisible = false;
  }

  var child = getDisabledCompatibleChildren(Object(reactNode["b" /* isValidElement */])(children) ? children : /*#__PURE__*/react["createElement"]("span", null, children), prefixCls);
  var childProps = child.props;
  var childCls = classnames_default()(childProps.className, tooltip_defineProperty({}, openClassName || "".concat(prefixCls, "-open"), true));
  var customOverlayClassName = classnames_default()(overlayClassName, (_classNames2 = {}, tooltip_defineProperty(_classNames2, "".concat(prefixCls, "-rtl"), direction === 'rtl'), tooltip_defineProperty(_classNames2, "".concat(prefixCls, "-").concat(color), color && PresetColorRegex.test(color)), _classNames2));
  var formattedOverlayInnerStyle;
  var arrowContentStyle;

  if (color && !PresetColorRegex.test(color)) {
    formattedOverlayInnerStyle = tooltip_extends(tooltip_extends({}, overlayInnerStyle), {
      background: color
    });
    arrowContentStyle = {
      background: color
    };
  }

  return /*#__PURE__*/react["createElement"](rc_tooltip_es, tooltip_extends({}, props, {
    prefixCls: prefixCls,
    overlayClassName: customOverlayClassName,
    getTooltipContainer: getPopupContainer || getTooltipContainer || getContextPopupContainer,
    ref: ref,
    builtinPlacements: getTooltipPlacements(),
    overlay: getOverlay(),
    visible: tempVisible,
    onVisibleChange: onVisibleChange,
    onPopupAlign: onPopupAlign,
    overlayInnerStyle: formattedOverlayInnerStyle,
    arrowContent: /*#__PURE__*/react["createElement"]("span", {
      className: "".concat(prefixCls, "-arrow-content"),
      style: arrowContentStyle
    })
  }), tempVisible ? Object(reactNode["a" /* cloneElement */])(child, {
    className: childCls
  }) : child);
});
tooltip_Tooltip.displayName = 'Tooltip';
tooltip_Tooltip.defaultProps = {
  placement: 'top',
  transitionName: 'zoom-big-fast',
  mouseEnterDelay: 0.1,
  mouseLeaveDelay: 0.1,
  arrowPointAtCenter: false,
  autoAdjustOverflow: true
};
/* harmony default export */ var tooltip = __webpack_exports__["a"] = (tooltip_Tooltip);

/***/ }),

/***/ "DbwS":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__("wEu9");
var global = __webpack_require__("P56o");
var ctx = __webpack_require__("9liC");
var classof = __webpack_require__("OFVL");
var $export = __webpack_require__("X6VK");
var isObject = __webpack_require__("Bsg+");
var aFunction = __webpack_require__("b8Rm");
var anInstance = __webpack_require__("EusA");
var forOf = __webpack_require__("HqX2");
var speciesConstructor = __webpack_require__("5Fu2");
var task = __webpack_require__("5BMI").set;
var microtask = __webpack_require__("XDzM")();
var newPromiseCapabilityModule = __webpack_require__("gtO+");
var perform = __webpack_require__("Yvte");
var userAgent = __webpack_require__("ROCd");
var promiseResolve = __webpack_require__("khIB");
var PROMISE = 'Promise';
var TypeError = global.TypeError;
var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8 || '';
var $Promise = global[PROMISE];
var isNode = classof(process) == 'process';
var empty = function () { /* empty */ };
var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;

var USE_NATIVE = !!function () {
  try {
    // correct subclassing with @@species support
    var promise = $Promise.resolve(1);
    var FakePromise = (promise.constructor = {})[__webpack_require__("9dxi")('species')] = function (exec) {
      exec(empty, empty);
    };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function')
      && promise.then(empty) instanceof FakePromise
      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
      // we can't detect it synchronously, so just check versions
      && v8.indexOf('6.6') !== 0
      && userAgent.indexOf('Chrome/66') === -1;
  } catch (e) { /* empty */ }
}();

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var notify = function (promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;
    var run = function (reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled(promise);
            promise._h = 1;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // may throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        if (domain && !exited) domain.exit();
        reject(e);
      }
    };
    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled(promise);
  });
};
var onUnhandled = function (promise) {
  task.call(global, function () {
    var value = promise._v;
    var unhandled = isUnhandled(promise);
    var result, handler, console;
    if (unhandled) {
      result = perform(function () {
        if (isNode) {
          process.emit('unhandledRejection', value, promise);
        } else if (handler = global.onunhandledrejection) {
          handler({ promise: promise, reason: value });
        } else if ((console = global.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};
var isUnhandled = function (promise) {
  return promise._h !== 1 && (promise._a || promise._c).length === 0;
};
var onHandleUnhandled = function (promise) {
  task.call(global, function () {
    var handler;
    if (isNode) {
      process.emit('rejectionHandled', promise);
    } else if (handler = global.onrejectionhandled) {
      handler({ promise: promise, reason: promise._v });
    }
  });
};
var $reject = function (value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function (value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    if (then = isThenable(value)) {
      microtask(function () {
        var wrapper = { _w: promise, _d: false }; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch (e) {
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch (e) {
    $reject.call({ _w: promise, _d: false }, e); // wrap
  }
};

// constructor polyfill
if (!USE_NATIVE) {
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor) {
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch (err) {
      $reject.call(this, err);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = __webpack_require__("+edc")($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if (this._a) this._a.push(reaction);
      if (this._s) notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject = ctx($reject, promise, 1);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === $Promise || C === Wrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
__webpack_require__("jPEw")($Promise, PROMISE);
__webpack_require__("E8p1")(PROMISE);
Wrapper = __webpack_require__("R5TD")[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x) {
    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
  }
});
$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__("zlqh")(function (iter) {
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      forOf(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      forOf(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});


/***/ }),

/***/ "Dhml":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__("P56o");
var DESCRIPTORS = __webpack_require__("GGqZ");
var LIBRARY = __webpack_require__("wEu9");
var $typed = __webpack_require__("tW8y");
var hide = __webpack_require__("tjmq");
var redefineAll = __webpack_require__("+edc");
var fails = __webpack_require__("E7Vc");
var anInstance = __webpack_require__("EusA");
var toInteger = __webpack_require__("mvii");
var toLength = __webpack_require__("Sp5b");
var toIndex = __webpack_require__("GdbT");
var gOPN = __webpack_require__("zIds").f;
var dP = __webpack_require__("U1KF").f;
var arrayFill = __webpack_require__("Pfmf");
var setToStringTag = __webpack_require__("jPEw");
var ARRAY_BUFFER = 'ArrayBuffer';
var DATA_VIEW = 'DataView';
var PROTOTYPE = 'prototype';
var WRONG_LENGTH = 'Wrong length!';
var WRONG_INDEX = 'Wrong index!';
var $ArrayBuffer = global[ARRAY_BUFFER];
var $DataView = global[DATA_VIEW];
var Math = global.Math;
var RangeError = global.RangeError;
// eslint-disable-next-line no-shadow-restricted-names
var Infinity = global.Infinity;
var BaseBuffer = $ArrayBuffer;
var abs = Math.abs;
var pow = Math.pow;
var floor = Math.floor;
var log = Math.log;
var LN2 = Math.LN2;
var BUFFER = 'buffer';
var BYTE_LENGTH = 'byteLength';
var BYTE_OFFSET = 'byteOffset';
var $BUFFER = DESCRIPTORS ? '_b' : BUFFER;
var $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;
var $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;

// IEEE754 conversions based on https://github.com/feross/ieee754
function packIEEE754(value, mLen, nBytes) {
  var buffer = new Array(nBytes);
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;
  var i = 0;
  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
  var e, m, c;
  value = abs(value);
  // eslint-disable-next-line no-self-compare
  if (value != value || value === Infinity) {
    // eslint-disable-next-line no-self-compare
    m = value != value ? 1 : 0;
    e = eMax;
  } else {
    e = floor(log(value) / LN2);
    if (value * (c = pow(2, -e)) < 1) {
      e--;
      c *= 2;
    }
    if (e + eBias >= 1) {
      value += rt / c;
    } else {
      value += rt * pow(2, 1 - eBias);
    }
    if (value * c >= 2) {
      e++;
      c /= 2;
    }
    if (e + eBias >= eMax) {
      m = 0;
      e = eMax;
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * pow(2, mLen);
      e = e + eBias;
    } else {
      m = value * pow(2, eBias - 1) * pow(2, mLen);
      e = 0;
    }
  }
  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
  e = e << mLen | m;
  eLen += mLen;
  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
  buffer[--i] |= s * 128;
  return buffer;
}
function unpackIEEE754(buffer, mLen, nBytes) {
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var nBits = eLen - 7;
  var i = nBytes - 1;
  var s = buffer[i--];
  var e = s & 127;
  var m;
  s >>= 7;
  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
  m = e & (1 << -nBits) - 1;
  e >>= -nBits;
  nBits += mLen;
  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
  if (e === 0) {
    e = 1 - eBias;
  } else if (e === eMax) {
    return m ? NaN : s ? -Infinity : Infinity;
  } else {
    m = m + pow(2, mLen);
    e = e - eBias;
  } return (s ? -1 : 1) * m * pow(2, e - mLen);
}

function unpackI32(bytes) {
  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
}
function packI8(it) {
  return [it & 0xff];
}
function packI16(it) {
  return [it & 0xff, it >> 8 & 0xff];
}
function packI32(it) {
  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
}
function packF64(it) {
  return packIEEE754(it, 52, 8);
}
function packF32(it) {
  return packIEEE754(it, 23, 4);
}

function addGetter(C, key, internal) {
  dP(C[PROTOTYPE], key, { get: function () { return this[internal]; } });
}

function get(view, bytes, index, isLittleEndian) {
  var numIndex = +index;
  var intIndex = toIndex(numIndex);
  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
  var store = view[$BUFFER]._b;
  var start = intIndex + view[$OFFSET];
  var pack = store.slice(start, start + bytes);
  return isLittleEndian ? pack : pack.reverse();
}
function set(view, bytes, index, conversion, value, isLittleEndian) {
  var numIndex = +index;
  var intIndex = toIndex(numIndex);
  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
  var store = view[$BUFFER]._b;
  var start = intIndex + view[$OFFSET];
  var pack = conversion(+value);
  for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
}

if (!$typed.ABV) {
  $ArrayBuffer = function ArrayBuffer(length) {
    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);
    var byteLength = toIndex(length);
    this._b = arrayFill.call(new Array(byteLength), 0);
    this[$LENGTH] = byteLength;
  };

  $DataView = function DataView(buffer, byteOffset, byteLength) {
    anInstance(this, $DataView, DATA_VIEW);
    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
    var bufferLength = buffer[$LENGTH];
    var offset = toInteger(byteOffset);
    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');
    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);
    this[$BUFFER] = buffer;
    this[$OFFSET] = offset;
    this[$LENGTH] = byteLength;
  };

  if (DESCRIPTORS) {
    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
    addGetter($DataView, BUFFER, '_b');
    addGetter($DataView, BYTE_LENGTH, '_l');
    addGetter($DataView, BYTE_OFFSET, '_o');
  }

  redefineAll($DataView[PROTOTYPE], {
    getInt8: function getInt8(byteOffset) {
      return get(this, 1, byteOffset)[0] << 24 >> 24;
    },
    getUint8: function getUint8(byteOffset) {
      return get(this, 1, byteOffset)[0];
    },
    getInt16: function getInt16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments[1]);
      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
    },
    getUint16: function getUint16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments[1]);
      return bytes[1] << 8 | bytes[0];
    },
    getInt32: function getInt32(byteOffset /* , littleEndian */) {
      return unpackI32(get(this, 4, byteOffset, arguments[1]));
    },
    getUint32: function getUint32(byteOffset /* , littleEndian */) {
      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
    },
    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
    },
    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
    },
    setInt8: function setInt8(byteOffset, value) {
      set(this, 1, byteOffset, packI8, value);
    },
    setUint8: function setUint8(byteOffset, value) {
      set(this, 1, byteOffset, packI8, value);
    },
    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packI16, value, arguments[2]);
    },
    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packI16, value, arguments[2]);
    },
    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packI32, value, arguments[2]);
    },
    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packI32, value, arguments[2]);
    },
    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packF32, value, arguments[2]);
    },
    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {
      set(this, 8, byteOffset, packF64, value, arguments[2]);
    }
  });
} else {
  if (!fails(function () {
    $ArrayBuffer(1);
  }) || !fails(function () {
    new $ArrayBuffer(-1); // eslint-disable-line no-new
  }) || fails(function () {
    new $ArrayBuffer(); // eslint-disable-line no-new
    new $ArrayBuffer(1.5); // eslint-disable-line no-new
    new $ArrayBuffer(NaN); // eslint-disable-line no-new
    return $ArrayBuffer.name != ARRAY_BUFFER;
  })) {
    $ArrayBuffer = function ArrayBuffer(length) {
      anInstance(this, $ArrayBuffer);
      return new BaseBuffer(toIndex(length));
    };
    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {
      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);
    }
    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;
  }
  // iOS Safari 7.x bug
  var view = new $DataView(new $ArrayBuffer(2));
  var $setInt8 = $DataView[PROTOTYPE].setInt8;
  view.setInt8(0, 2147483648);
  view.setInt8(1, 2147483649);
  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {
    setInt8: function setInt8(byteOffset, value) {
      $setInt8.call(this, byteOffset, value << 24 >> 24);
    },
    setUint8: function setUint8(byteOffset, value) {
      $setInt8.call(this, byteOffset, value << 24 >> 24);
    }
  }, true);
}
setToStringTag($ArrayBuffer, ARRAY_BUFFER);
setToStringTag($DataView, DATA_VIEW);
hide($DataView[PROTOTYPE], $typed.VIEW, true);
exports[ARRAY_BUFFER] = $ArrayBuffer;
exports[DATA_VIEW] = $DataView;


/***/ }),

/***/ "DiqT":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

function default_1(shape) {
  var _a = shape.attr(),
      x = _a.x,
      y = _a.y,
      r = _a.r;

  return {
    x: x - r,
    y: y - r,
    width: r * 2,
    height: r * 2
  };
}

exports["default"] = default_1;

/***/ }),

/***/ "DzUA":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "E07J":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * @fileoverview 矩阵运算，本来是要引入 gl-matrix, 但是考虑到 g-mobile 对大小有限制，同时 g-webgl 使用的 matrix 不一致
 * 所以，这里仅实现 2D 几个运算，上层自己引入 gl-matrix
 * @author dxq613@gmail.com
 */

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * 3阶矩阵相乘
 * @param {number[]} a 矩阵1
 * @param {number[]} b 矩阵2
 */

function multiplyMatrix(a, b) {
  var out = [];
  var a00 = a[0];
  var a01 = a[1];
  var a02 = a[2];
  var a10 = a[3];
  var a11 = a[4];
  var a12 = a[5];
  var a20 = a[6];
  var a21 = a[7];
  var a22 = a[8];
  var b00 = b[0];
  var b01 = b[1];
  var b02 = b[2];
  var b10 = b[3];
  var b11 = b[4];
  var b12 = b[5];
  var b20 = b[6];
  var b21 = b[7];
  var b22 = b[8];
  out[0] = b00 * a00 + b01 * a10 + b02 * a20;
  out[1] = b00 * a01 + b01 * a11 + b02 * a21;
  out[2] = b00 * a02 + b01 * a12 + b02 * a22;
  out[3] = b10 * a00 + b11 * a10 + b12 * a20;
  out[4] = b10 * a01 + b11 * a11 + b12 * a21;
  out[5] = b10 * a02 + b11 * a12 + b12 * a22;
  out[6] = b20 * a00 + b21 * a10 + b22 * a20;
  out[7] = b20 * a01 + b21 * a11 + b22 * a21;
  out[8] = b20 * a02 + b21 * a12 + b22 * a22;
  return out;
}

exports.multiplyMatrix = multiplyMatrix;
/**
 * 3阶矩阵同2阶向量相乘
 * @param {number[]} m 矩阵
 * @param {number[]} v 二阶向量
 */

function multiplyVec2(m, v) {
  var out = [];
  var x = v[0];
  var y = v[1];
  out[0] = m[0] * x + m[3] * y + m[6];
  out[1] = m[1] * x + m[4] * y + m[7];
  return out;
}

exports.multiplyVec2 = multiplyVec2;
/**
 * 矩阵的逆
 * @param {number[]} a 矩阵
 */

function invert(a) {
  var out = [];
  var a00 = a[0];
  var a01 = a[1];
  var a02 = a[2];
  var a10 = a[3];
  var a11 = a[4];
  var a12 = a[5];
  var a20 = a[6];
  var a21 = a[7];
  var a22 = a[8];
  var b01 = a22 * a11 - a12 * a21;
  var b11 = -a22 * a10 + a12 * a20;
  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant

  var det = a00 * b01 + a01 * b11 + a02 * b21;

  if (!det) {
    return null;
  }

  det = 1.0 / det;
  out[0] = b01 * det;
  out[1] = (-a22 * a01 + a02 * a21) * det;
  out[2] = (a12 * a01 - a02 * a11) * det;
  out[3] = b11 * det;
  out[4] = (a22 * a00 - a02 * a20) * det;
  out[5] = (-a12 * a00 + a02 * a10) * det;
  out[6] = b21 * det;
  out[7] = (-a21 * a00 + a01 * a20) * det;
  out[8] = (a11 * a00 - a01 * a10) * det;
  return out;
}

exports.invert = invert;

/***/ }),

/***/ "E6WT":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------

__webpack_require__("5hJT");

__webpack_require__("+jjx");

__webpack_require__("ABKx");

var mm = Symbol["for"]('@@meta:magical');

var copyDocumentation = function copyDocumentation(source, target) {
  var extensions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  if ({}.FOLKTALE_DOCS !== 'false') {
    target[mm] = Object.assign({}, source[mm] || {}, extensions);
  }
};

module.exports = copyDocumentation;

/***/ }),

/***/ "E7Vc":
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),

/***/ "E8p1":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__("P56o");
var dP = __webpack_require__("U1KF");
var DESCRIPTORS = __webpack_require__("GGqZ");
var SPECIES = __webpack_require__("9dxi")('species');

module.exports = function (KEY) {
  var C = global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};


/***/ }),

/***/ "ELdr":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return globalHistory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return navigate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return createHistory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return createMemorySource; });
/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("asZ9");
/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_array_index_of__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("V7cS");
/* harmony import */ var core_js_modules_es6_array_index_of__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_index_of__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es6_array_for_each__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("7lGJ");
/* harmony import */ var core_js_modules_es6_array_for_each__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_for_each__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es6_promise__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("DbwS");
/* harmony import */ var core_js_modules_es6_promise__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_promise__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("t91x");
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es6_date_now__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("7t+O");
/* harmony import */ var core_js_modules_es6_date_now__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_date_now__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("Z8gF");
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es6_array_filter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("9p7t");
/* harmony import */ var core_js_modules_es6_array_filter__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_filter__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es6_regexp_search__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("nsbO");
/* harmony import */ var core_js_modules_es6_regexp_search__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_search__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("5hJT");
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_9__);











var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var getLocation = function getLocation(source) {
  var _source$location = source.location,
      search = _source$location.search,
      hash = _source$location.hash,
      href = _source$location.href,
      origin = _source$location.origin,
      protocol = _source$location.protocol,
      host = _source$location.host,
      hostname = _source$location.hostname,
      port = _source$location.port;
  var pathname = source.location.pathname;

  if (!pathname && href && canUseDOM) {
    var url = new URL(href);
    pathname = url.pathname;
  }

  return {
    pathname: encodeURI(decodeURI(pathname)),
    search: search,
    hash: hash,
    href: href,
    origin: origin,
    protocol: protocol,
    host: host,
    hostname: hostname,
    port: port,
    state: source.history.state,
    key: source.history.state && source.history.state.key || "initial"
  };
};

var createHistory = function createHistory(source, options) {
  var listeners = [];
  var location = getLocation(source);
  var transitioning = false;

  var resolveTransition = function resolveTransition() {};

  return {
    get location() {
      return location;
    },

    get transitioning() {
      return transitioning;
    },

    _onTransitionComplete: function _onTransitionComplete() {
      transitioning = false;
      resolveTransition();
    },
    listen: function listen(listener) {
      listeners.push(listener);

      var popstateListener = function popstateListener() {
        location = getLocation(source);
        listener({
          location: location,
          action: "POP"
        });
      };

      source.addEventListener("popstate", popstateListener);
      return function () {
        source.removeEventListener("popstate", popstateListener);
        listeners = listeners.filter(function (fn) {
          return fn !== listener;
        });
      };
    },
    navigate: function navigate(to) {
      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          state = _ref.state,
          _ref$replace = _ref.replace,
          replace = _ref$replace === undefined ? false : _ref$replace;

      if (typeof to === "number") {
        source.history.go(to);
      } else {
        state = _extends({}, state, {
          key: Date.now() + ""
        }); // try...catch iOS Safari limits to 100 pushState calls

        try {
          if (transitioning || replace) {
            source.history.replaceState(state, null, to);
          } else {
            source.history.pushState(state, null, to);
          }
        } catch (e) {
          source.location[replace ? "replace" : "assign"](to);
        }
      }

      location = getLocation(source);
      transitioning = true;
      var transition = new Promise(function (res) {
        return resolveTransition = res;
      });
      listeners.forEach(function (listener) {
        return listener({
          location: location,
          action: "PUSH"
        });
      });
      return transition;
    }
  };
}; ////////////////////////////////////////////////////////////////////////////////
// Stores history entries in memory for testing or other platforms like Native


var createMemorySource = function createMemorySource() {
  var initialPath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "/";
  var searchIndex = initialPath.indexOf("?");
  var initialLocation = {
    pathname: searchIndex > -1 ? initialPath.substr(0, searchIndex) : initialPath,
    search: searchIndex > -1 ? initialPath.substr(searchIndex) : ""
  };
  var index = 0;
  var stack = [initialLocation];
  var states = [null];
  return {
    get location() {
      return stack[index];
    },

    addEventListener: function addEventListener(name, fn) {},
    removeEventListener: function removeEventListener(name, fn) {},
    history: {
      get entries() {
        return stack;
      },

      get index() {
        return index;
      },

      get state() {
        return states[index];
      },

      pushState: function pushState(state, _, uri) {
        var _uri$split = uri.split("?"),
            pathname = _uri$split[0],
            _uri$split$ = _uri$split[1],
            search = _uri$split$ === undefined ? "" : _uri$split$;

        index++;
        stack.push({
          pathname: pathname,
          search: search.length ? "?" + search : search
        });
        states.push(state);
      },
      replaceState: function replaceState(state, _, uri) {
        var _uri$split2 = uri.split("?"),
            pathname = _uri$split2[0],
            _uri$split2$ = _uri$split2[1],
            search = _uri$split2$ === undefined ? "" : _uri$split2$;

        stack[index] = {
          pathname: pathname,
          search: search
        };
        states[index] = state;
      },
      go: function go(to) {
        var newIndex = index + to;

        if (newIndex < 0 || newIndex > states.length - 1) {
          return;
        }

        index = newIndex;
      }
    }
  };
}; ////////////////////////////////////////////////////////////////////////////////
// global history - uses window.history as the source if available, otherwise a
// memory history


var canUseDOM = !!(typeof window !== "undefined" && window.document && window.document.createElement);

var getSource = function getSource() {
  return canUseDOM ? window : createMemorySource();
};

var globalHistory = createHistory(getSource());
var navigate = globalHistory.navigate; ////////////////////////////////////////////////////////////////////////////////



/***/ }),

/***/ "EWXb":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _CloseOutlined = _interopRequireDefault(__webpack_require__("vbmX"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    'default': obj
  };
}

var _default = _CloseOutlined;
exports["default"] = _default;
module.exports = _default;

/***/ }),

/***/ "EgEt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("5hJT");

__webpack_require__("d3/y");

var _interopRequireDefault = __webpack_require__("63Ad");

var _interopRequireWildcard = __webpack_require__("vdEC");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var React = _interopRequireWildcard(__webpack_require__("mXGw"));

var _ExclamationCircleOutlined = _interopRequireDefault(__webpack_require__("o/3r"));

var _AntdIcon = _interopRequireDefault(__webpack_require__("CxZ5")); // GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY


var ExclamationCircleOutlined = function ExclamationCircleOutlined(props, ref) {
  return React.createElement(_AntdIcon["default"], Object.assign({}, props, {
    ref: ref,
    icon: _ExclamationCircleOutlined["default"]
  }));
};

ExclamationCircleOutlined.displayName = 'ExclamationCircleOutlined';

var _default = React.forwardRef(ExclamationCircleOutlined);

exports["default"] = _default;

/***/ }),

/***/ "Ese+":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

function default_1(shape) {
  var attrs = shape.attr();
  var x = attrs.x,
      y = attrs.y,
      width = attrs.width,
      height = attrs.height;
  return {
    x: x,
    y: y,
    width: width,
    height: height
  };
}

exports["default"] = default_1;

/***/ }),

/***/ "EusA":
/***/ (function(module, exports) {

module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};


/***/ }),

/***/ "F56x":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("o7PZ");

__webpack_require__("W1QL");

__webpack_require__("K/PF");

__webpack_require__("t91x");

__webpack_require__("75LO");

//
module.exports = function shallowEqual(objA, objB, compare, compareContext) {
  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;

  if (ret !== void 0) {
    return !!ret;
  }

  if (objA === objB) {
    return true;
  }

  if (typeof objA !== "object" || !objA || typeof objB !== "object" || !objB) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB); // Test for A's keys different from B.

  for (var idx = 0; idx < keysA.length; idx++) {
    var key = keysA[idx];

    if (!bHasOwnProperty(key)) {
      return false;
    }

    var valueA = objA[key];
    var valueB = objB[key];
    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;

    if (ret === false || ret === void 0 && valueA !== valueB) {
      return false;
    }
  }

  return true;
};

/***/ }),

/***/ "FEHE":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 21.1.3.18 String.prototype.startsWith(searchString [, position ])

var $export = __webpack_require__("X6VK");
var toLength = __webpack_require__("Sp5b");
var context = __webpack_require__("Alw5");
var STARTS_WITH = 'startsWith';
var $startsWith = ''[STARTS_WITH];

$export($export.P + $export.F * __webpack_require__("Fl7L")(STARTS_WITH), 'String', {
  startsWith: function startsWith(searchString /* , position = 0 */) {
    var that = context(this, searchString, STARTS_WITH);
    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));
    var search = String(searchString);
    return $startsWith
      ? $startsWith.call(that, search, index)
      : that.slice(index, index + search.length) === search;
  }
});


/***/ }),

/***/ "FNAz":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "FUg+":
/***/ (function(module, exports, __webpack_require__) {

// CodeMirror, copyright (c) by Marijn Haverbeke and others
// Distributed under an MIT license: https://codemirror.net/LICENSE
(function (mod) {
  if (true) // CommonJS
    mod(__webpack_require__("Dln1"), __webpack_require__("Un63"));else {}
})(function (CodeMirror) {
  "use strict";

  CodeMirror.defineOption("matchTags", false, function (cm, val, old) {
    if (old && old != CodeMirror.Init) {
      cm.off("cursorActivity", doMatchTags);
      cm.off("viewportChange", maybeUpdateMatch);
      clear(cm);
    }

    if (val) {
      cm.state.matchBothTags = typeof val == "object" && val.bothTags;
      cm.on("cursorActivity", doMatchTags);
      cm.on("viewportChange", maybeUpdateMatch);
      doMatchTags(cm);
    }
  });

  function clear(cm) {
    if (cm.state.tagHit) cm.state.tagHit.clear();
    if (cm.state.tagOther) cm.state.tagOther.clear();
    cm.state.tagHit = cm.state.tagOther = null;
  }

  function doMatchTags(cm) {
    cm.state.failedTagMatch = false;
    cm.operation(function () {
      clear(cm);
      if (cm.somethingSelected()) return;
      var cur = cm.getCursor(),
          range = cm.getViewport();
      range.from = Math.min(range.from, cur.line);
      range.to = Math.max(cur.line + 1, range.to);
      var match = CodeMirror.findMatchingTag(cm, cur, range);
      if (!match) return;

      if (cm.state.matchBothTags) {
        var hit = match.at == "open" ? match.open : match.close;
        if (hit) cm.state.tagHit = cm.markText(hit.from, hit.to, {
          className: "CodeMirror-matchingtag"
        });
      }

      var other = match.at == "close" ? match.open : match.close;
      if (other) cm.state.tagOther = cm.markText(other.from, other.to, {
        className: "CodeMirror-matchingtag"
      });else cm.state.failedTagMatch = true;
    });
  }

  function maybeUpdateMatch(cm) {
    if (cm.state.failedTagMatch) doMatchTags(cm);
  }

  CodeMirror.commands.toMatchingTag = function (cm) {
    var found = CodeMirror.findMatchingTag(cm, cm.getCursor());

    if (found) {
      var other = found.at == "close" ? found.open : found.close;
      if (other) cm.extendSelection(other.to, other.from);
    }
  };
});

/***/ }),

/***/ "FWEc":
/***/ (function(module, exports, __webpack_require__) {

var _curry2 = __webpack_require__("OFPg");

var _reduced = __webpack_require__("Xx9V");

var _xfBase = __webpack_require__("K8HH");

module.exports = function () {
  function XTake(n, xf) {
    this.xf = xf;
    this.n = n;
    this.i = 0;
  }

  XTake.prototype['@@transducer/init'] = _xfBase.init;
  XTake.prototype['@@transducer/result'] = _xfBase.result;

  XTake.prototype['@@transducer/step'] = function (result, input) {
    this.i += 1;
    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);
    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;
  };

  return _curry2(function _xtake(n, xf) {
    return new XTake(n, xf);
  });
}();

/***/ }),

/***/ "FjZ0":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "Base", function() { return /* reexport */ base; });
__webpack_require__.d(__webpack_exports__, "Circle", function() { return /* reexport */ circle; });
__webpack_require__.d(__webpack_exports__, "Ellipse", function() { return /* reexport */ ellipse; });
__webpack_require__.d(__webpack_exports__, "Image", function() { return /* reexport */ shape_image; });
__webpack_require__.d(__webpack_exports__, "Line", function() { return /* reexport */ shape_line; });
__webpack_require__.d(__webpack_exports__, "Marker", function() { return /* reexport */ marker; });
__webpack_require__.d(__webpack_exports__, "Path", function() { return /* reexport */ shape_path; });
__webpack_require__.d(__webpack_exports__, "Polygon", function() { return /* reexport */ polygon; });
__webpack_require__.d(__webpack_exports__, "Polyline", function() { return /* reexport */ shape_polyline; });
__webpack_require__.d(__webpack_exports__, "Rect", function() { return /* reexport */ rect; });
__webpack_require__.d(__webpack_exports__, "Text", function() { return /* reexport */ shape_text; });

// NAMESPACE OBJECT: ../node_modules/@antv/g-canvas/esm/shape/index.js
var shape_namespaceObject = {};
__webpack_require__.r(shape_namespaceObject);
__webpack_require__.d(shape_namespaceObject, "Base", function() { return base; });
__webpack_require__.d(shape_namespaceObject, "Circle", function() { return circle; });
__webpack_require__.d(shape_namespaceObject, "Ellipse", function() { return ellipse; });
__webpack_require__.d(shape_namespaceObject, "Image", function() { return shape_image; });
__webpack_require__.d(shape_namespaceObject, "Line", function() { return shape_line; });
__webpack_require__.d(shape_namespaceObject, "Marker", function() { return marker; });
__webpack_require__.d(shape_namespaceObject, "Path", function() { return shape_path; });
__webpack_require__.d(shape_namespaceObject, "Polygon", function() { return polygon; });
__webpack_require__.d(shape_namespaceObject, "Polyline", function() { return shape_polyline; });
__webpack_require__.d(shape_namespaceObject, "Rect", function() { return rect; });
__webpack_require__.d(shape_namespaceObject, "Text", function() { return shape_text; });

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.fill.js
var es6_array_fill = __webpack_require__("IKQL");

// EXTERNAL MODULE: ../node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__("bb6g");

// EXTERNAL MODULE: ../node_modules/@antv/g-base/esm/index.js + 39 modules
var esm = __webpack_require__("AKAt");

// EXTERNAL MODULE: ../node_modules/@antv/g-canvas/esm/util/util.js
var util = __webpack_require__("3mMe");

// EXTERNAL MODULE: ../node_modules/@antv/g-canvas/esm/util/draw.js + 1 modules
var draw = __webpack_require__("5nqB");

// EXTERNAL MODULE: ../node_modules/@antv/g-base/lib/bbox/index.js
var lib_bbox = __webpack_require__("MwAX");

// EXTERNAL MODULE: ../node_modules/@antv/g-canvas/esm/group.js
var group = __webpack_require__("MApM");

// CONCATENATED MODULE: ../node_modules/@antv/g-canvas/esm/shape/base.js









var base_ShapeBase =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(ShapeBase, _super);

  function ShapeBase() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  ShapeBase.prototype.getDefaultAttrs = function () {
    var attrs = _super.prototype.getDefaultAttrs.call(this); // 设置默认值


    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, attrs), {
      lineWidth: 1,
      lineAppendWidth: 0,
      strokeOpacity: 1,
      fillOpacity: 1
    });
  };

  ShapeBase.prototype.getShapeBase = function () {
    return shape_namespaceObject;
  };

  ShapeBase.prototype.getGroupBase = function () {
    return group["a" /* default */];
  };
  /**
   * 一些方法调用会引起画布变化
   * @param {ChangeType} changeType 改变的类型
   */


  ShapeBase.prototype.onCanvasChange = function (changeType) {
    Object(draw["f" /* refreshElement */])(this, changeType);
  };

  ShapeBase.prototype.calculateBBox = function () {
    var type = this.get('type');
    var lineWidth = this.getHitLineWidth(); // const attrs = this.attr();

    var bboxMethod = Object(lib_bbox["getBBoxMethod"])(type);
    var box = bboxMethod(this);
    var halfLineWidth = lineWidth / 2;
    var minX = box.x - halfLineWidth;
    var minY = box.y - halfLineWidth;
    var maxX = box.x + box.width + halfLineWidth;
    var maxY = box.y + box.height + halfLineWidth;
    return {
      x: minX,
      minX: minX,
      y: minY,
      minY: minY,
      width: box.width + lineWidth,
      height: box.height + lineWidth,
      maxX: maxX,
      maxY: maxY
    };
  };

  ShapeBase.prototype.isFill = function () {
    return !!this.attrs['fill'] || this.isClipShape();
  };

  ShapeBase.prototype.isStroke = function () {
    return !!this.attrs['stroke'];
  }; // 同 shape 中的方法重复了


  ShapeBase.prototype._applyClip = function (context, clip) {
    if (clip) {
      context.save(); // 将 clip 的属性挂载到 context 上

      Object(draw["a" /* applyAttrsToContext */])(context, clip); // 绘制 clip 路径

      clip.createPath(context);
      context.restore(); // 裁剪

      context.clip();

      clip._afterDraw();
    }
  }; // 绘制图形时需要考虑 region 限制


  ShapeBase.prototype.draw = function (context, region) {
    var clip = this.getClip(); // 如果指定了区域，当与指定区域相交时，才会触发渲染

    if (region) {
      // 是否相交需要考虑 clip 的包围盒
      var bbox = clip ? Object(draw["d" /* getMergedRegion */])([this, clip]) : this.getCanvasBBox();

      if (!Object(util["f" /* intersectRect */])(region, bbox)) {
        // 图形的包围盒与重绘区域不相交时，也需要清除标记
        this.set('hasChanged', false);
        return;
      }
    }

    context.save(); // 先将 attrs 应用到上下文中，再设置 clip。因为 clip 应该被当前元素的 matrix 所影响

    Object(draw["a" /* applyAttrsToContext */])(context, this);

    this._applyClip(context, this.getClip());

    this.drawPath(context);
    context.restore();

    this._afterDraw();
  };

  ShapeBase.prototype._afterDraw = function () {
    var bbox = this.getCanvasBBox();
    var canvas = this.getCanvas(); // 绘制的时候缓存包围盒

    this.set('cacheCanvasBBox', bbox);

    if (canvas) {
      // @ts-ignore
      var viewRange = canvas.getViewRange();
      this.set('isInView', Object(util["f" /* intersectRect */])(bbox, viewRange));
    } // 绘制后消除标记


    this.set('hasChanged', false);
  };

  ShapeBase.prototype.skipDraw = function () {
    this.set('cacheCanvasBBox', null);
    this.set('isInView', null);
    this.set('hasChanged', false);
  };
  /**
   * 绘制图形的路径
   * @param {CanvasRenderingContext2D} context 上下文
   */


  ShapeBase.prototype.drawPath = function (context) {
    this.createPath(context);
    this.strokeAndFill(context);
    this.afterDrawPath(context);
  };
  /**
   * @protected
   * 填充图形
   * @param {CanvasRenderingContext2D} context context 上下文
   */


  ShapeBase.prototype.fill = function (context) {
    context.fill();
  };
  /**
   * @protected
   * 绘制图形边框
   * @param {CanvasRenderingContext2D} context context 上下文
   */


  ShapeBase.prototype.stroke = function (context) {
    context.stroke();
  }; // 绘制或者填充


  ShapeBase.prototype.strokeAndFill = function (context) {
    var _a = this.attrs,
        lineWidth = _a.lineWidth,
        opacity = _a.opacity,
        strokeOpacity = _a.strokeOpacity,
        fillOpacity = _a.fillOpacity;

    if (this.isFill()) {
      if (!Object(util["i" /* isNil */])(fillOpacity) && fillOpacity !== 1) {
        context.globalAlpha = fillOpacity;
        this.fill(context);
        context.globalAlpha = opacity;
      } else {
        this.fill(context);
      }
    }

    if (this.isStroke()) {
      if (lineWidth > 0) {
        if (!Object(util["i" /* isNil */])(strokeOpacity) && strokeOpacity !== 1) {
          context.globalAlpha = strokeOpacity;
        }

        this.stroke(context);
      }
    }

    this.afterDrawPath(context);
  };
  /**
   * @protected
   * 绘制图形的路径
   * @param {CanvasRenderingContext2D} context 上下文
   */


  ShapeBase.prototype.createPath = function (context) {};
  /**
   * 绘制完成 path 后的操作
   * @param {CanvasRenderingContext2D} context 上下文
   */


  ShapeBase.prototype.afterDrawPath = function (context) {};

  ShapeBase.prototype.isInShape = function (refX, refY) {
    // return HitUtil.isHitShape(this, refX, refY);
    var isStroke = this.isStroke();
    var isFill = this.isFill();
    var lineWidth = this.getHitLineWidth();
    return this.isInStrokeOrPath(refX, refY, isStroke, isFill, lineWidth);
  }; // 之所以不拆成 isInStroke 和 isInPath 在于两者存在一些共同的计算


  ShapeBase.prototype.isInStrokeOrPath = function (x, y, isStroke, isFill, lineWidth) {
    return false;
  };
  /**
   * 获取线拾取的宽度
   * @returns {number} 线的拾取宽度
   */


  ShapeBase.prototype.getHitLineWidth = function () {
    if (!this.isStroke()) {
      return 0;
    }

    var attrs = this.attrs;
    return attrs['lineWidth'] + attrs['lineAppendWidth'];
  };

  return ShapeBase;
}(esm["c" /* AbstractShape */]);

/* harmony default export */ var base = (base_ShapeBase);
// CONCATENATED MODULE: ../node_modules/@antv/g-canvas/esm/shape/circle.js
/**
 * @fileoverview 圆
 * @author dxq613@gmail.com
 */


 // TODO: 暂时不需要圆的工具方法，后续如果需要支持 pointAt，tangentAngle 时再引入
// import CircleUtil from '@antv/g-math/lib/circle';

var circle_Circle =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Circle, _super);

  function Circle() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Circle.prototype.getDefaultAttrs = function () {
    var attrs = _super.prototype.getDefaultAttrs.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, attrs), {
      x: 0,
      y: 0,
      r: 0
    });
  };

  Circle.prototype.isInStrokeOrPath = function (x, y, isStroke, isFill, lineWidth) {
    var attrs = this.attr();
    var cx = attrs.x;
    var cy = attrs.y;
    var r = attrs.r;
    var halfLineWidth = lineWidth / 2;
    var absDistance = Object(util["b" /* distance */])(cx, cy, x, y); // 直接用距离，如果同时存在边和填充时，可以减少两次计算

    if (isFill && isStroke) {
      return absDistance <= r + halfLineWidth;
    }

    if (isFill) {
      return absDistance <= r;
    }

    if (isStroke) {
      return absDistance >= r - halfLineWidth && absDistance <= r + halfLineWidth;
    }

    return false;
  };

  Circle.prototype.createPath = function (context) {
    var attrs = this.attr();
    var cx = attrs.x;
    var cy = attrs.y;
    var r = attrs.r;
    context.beginPath();
    context.arc(cx, cy, r, 0, Math.PI * 2, false);
    context.closePath();
  };

  return Circle;
}(base);

/* harmony default export */ var circle = (circle_Circle);
// CONCATENATED MODULE: ../node_modules/@antv/g-canvas/esm/shape/ellipse.js
/**
 * @fileoverview 椭圆
 * @author dxq613@gmail.com
 */

 // 暂时不需要
// import EllipseUtil from '@antv/g-math/lib/ellipse';
// 根据椭圆公式计算 x*x/rx*rx + y*y/ry*ry;

function ellipseDistance(squareX, squareY, rx, ry) {
  return squareX / (rx * rx) + squareY / (ry * ry);
}

var ellipse_Ellipse =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Ellipse, _super);

  function Ellipse() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Ellipse.prototype.getDefaultAttrs = function () {
    var attrs = _super.prototype.getDefaultAttrs.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, attrs), {
      x: 0,
      y: 0,
      rx: 0,
      ry: 0
    });
  };

  Ellipse.prototype.isInStrokeOrPath = function (x, y, isStroke, isFill, lineWidth) {
    var attrs = this.attr();
    var halfLineWith = lineWidth / 2;
    var cx = attrs.x;
    var cy = attrs.y;
    var rx = attrs.rx,
        ry = attrs.ry;
    var squareX = (x - cx) * (x - cx);
    var squareY = (y - cy) * (y - cy); // 使用椭圆的公式： x*x/rx*rx + y*y/ry*ry = 1;

    if (isFill && isStroke) {
      return ellipseDistance(squareX, squareY, rx + halfLineWith, ry + halfLineWith) <= 1;
    }

    if (isFill) {
      return ellipseDistance(squareX, squareY, rx, ry) <= 1;
    }

    if (isStroke) {
      return ellipseDistance(squareX, squareY, rx - halfLineWith, ry - halfLineWith) >= 1 && ellipseDistance(squareX, squareY, rx + halfLineWith, ry + halfLineWith) <= 1;
    }

    return false;
  };

  Ellipse.prototype.createPath = function (context) {
    var attrs = this.attr();
    var cx = attrs.x;
    var cy = attrs.y;
    var rx = attrs.rx;
    var ry = attrs.ry;
    context.beginPath(); // 兼容逻辑

    if (context.ellipse) {
      context.ellipse(cx, cy, rx, ry, 0, 0, Math.PI * 2, false);
    } else {
      // 如果不支持，则使用圆来绘制，进行变形
      var r = rx > ry ? rx : ry;
      var scaleX = rx > ry ? 1 : rx / ry;
      var scaleY = rx > ry ? ry / rx : 1;
      context.save();
      context.translate(cx, cy);
      context.scale(scaleX, scaleY);
      context.arc(0, 0, r, 0, Math.PI * 2);
      context.restore();
      context.closePath();
    }
  };

  return Ellipse;
}(base);

/* harmony default export */ var ellipse = (ellipse_Ellipse);
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.number.constructor.js
var es6_number_constructor = __webpack_require__("e2Kn");

// CONCATENATED MODULE: ../node_modules/@antv/g-canvas/esm/shape/image.js


/**
 * @fileoverview 图片
 * @author dxq613@gmail.com
 */




function isCanvas(dom) {
  return dom instanceof HTMLElement && Object(util["k" /* isString */])(dom.nodeName) && dom.nodeName.toUpperCase() === 'CANVAS';
}

var image_ImageShape =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(ImageShape, _super);

  function ImageShape() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  ImageShape.prototype.getDefaultAttrs = function () {
    var attrs = _super.prototype.getDefaultAttrs.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, attrs), {
      x: 0,
      y: 0,
      width: 0,
      height: 0
    });
  };

  ImageShape.prototype.initAttrs = function (attrs) {
    this._setImage(attrs.img);
  }; // image 不计算 stroke


  ImageShape.prototype.isStroke = function () {
    return false;
  }; // 仅仅使用包围盒检测来进行拾取
  // 所以不需要复写 isInStrokeOrPath 的方法


  ImageShape.prototype.isOnlyHitBox = function () {
    return true;
  };

  ImageShape.prototype._afterLoading = function () {
    if (this.get('toDraw') === true) {
      var canvas = this.get('canvas');

      if (canvas) {
        // 这段应该改成局部渲染
        canvas.draw();
      } else {
        // 这种方式如果发生遮挡会出现问题
        this.createPath(this.get('context'));
      }
    }
  };

  ImageShape.prototype._setImage = function (img) {
    var _this = this;

    var attrs = this.attrs;

    if (Object(util["k" /* isString */])(img)) {
      var image_1 = new Image();

      image_1.onload = function () {
        // 图片未加载完，则已经被销毁
        if (_this.destroyed) {
          return false;
        } // 缓存原始地址，可以做对比，防止重复加载图片
        // 如果考虑到在加载过程中可能替换 img 属性，则情况更加复杂
        // this.set('imgSrc', img);
        // 这里会循环调用 _setImage 方法，但不会再走这个分支


        _this.attr('img', image_1);

        _this.set('loading', false);

        _this._afterLoading();

        var callback = _this.get('callback');

        if (callback) {
          callback.call(_this);
        }
      };

      image_1.src = img; // 设置跨域

      image_1.crossOrigin = 'Anonymous'; // loading 过程中不绘制

      this.set('loading', true);
    } else if (img instanceof Image) {
      // 如果是一个 image 对象，则设置宽高
      if (!attrs.width) {
        attrs.width = img.width;
      }

      if (!attrs.height) {
        attrs.height = img.height;
      }
    } else if (isCanvas(img)) {
      // 如果设置了 canvas 对象
      if (!attrs.width) {
        attrs.width = Number(img.getAttribute('width'));
      }

      if (!attrs.height) {
        attrs.height, Number(img.getAttribute('height'));
      }
    }
  };

  ImageShape.prototype.onAttrChange = function (name, value, originValue) {
    _super.prototype.onAttrChange.call(this, name, value, originValue); // 如果加载的已经是当前图片，则不再处理


    if (name === 'img') {
      // 可以加缓冲，&& this.get('imgSrc') !== value
      this._setImage(value);
    }
  };

  ImageShape.prototype.createPath = function (context) {
    // 正在加载则不绘制
    if (this.get('loading')) {
      this.set('toDraw', true); // 加载完成后绘制

      this.set('context', context);
      return;
    }

    var attrs = this.attr();
    var x = attrs.x,
        y = attrs.y,
        width = attrs.width,
        height = attrs.height,
        sx = attrs.sx,
        sy = attrs.sy,
        swidth = attrs.swidth,
        sheight = attrs.sheight;
    var img = attrs.img;

    if (img instanceof Image || isCanvas(img)) {
      if (!Object(util["i" /* isNil */])(sx) && !Object(util["i" /* isNil */])(sy) && !Object(util["i" /* isNil */])(swidth) && !Object(util["i" /* isNil */])(sheight)) {
        context.drawImage(img, sx, sy, swidth, sheight, x, y, width, height);
      } else {
        context.drawImage(img, x, y, width, height);
      }
    }
  };

  return ImageShape;
}(base);

/* harmony default export */ var shape_image = (image_ImageShape);
// EXTERNAL MODULE: ../node_modules/@antv/g-math/lib/line.js
var line = __webpack_require__("cU4Z");
var line_default = /*#__PURE__*/__webpack_require__.n(line);

// CONCATENATED MODULE: ../node_modules/@antv/g-canvas/esm/util/in-stroke/line.js

function inLine(x1, y1, x2, y2, lineWidth, x, y) {
  var minX = Math.min(x1, x2);
  var maxX = Math.max(x1, x2);
  var minY = Math.min(y1, y2);
  var maxY = Math.max(y1, y2);
  var halfWidth = lineWidth / 2; // 因为目前的方案是计算点到直线的距离，而有可能会在延长线上，所以要先判断是否在包围盒内
  // 这种方案会在水平或者竖直的情况下载线的延长线上有半 lineWidth 的误差

  if (!(x >= minX - halfWidth && x <= maxX + halfWidth && y >= minY - halfWidth && y <= maxY + halfWidth)) {
    return false;
  } // 因为已经计算了包围盒，所以仅需要计算到直线的距离即可，可以显著提升性能


  return line_default.a.pointToLine(x1, y1, x2, y2, x, y) <= lineWidth / 2;
}
// EXTERNAL MODULE: ../node_modules/@antv/g-canvas/esm/util/arrow.js
var arrow = __webpack_require__("H/jw");

// CONCATENATED MODULE: ../node_modules/@antv/g-canvas/esm/shape/line.js

/**
 * @fileoverview 圆
 * @author dxq613@gmail.com
 */






var line_Line =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Line, _super);

  function Line() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Line.prototype.getDefaultAttrs = function () {
    var attrs = _super.prototype.getDefaultAttrs.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, attrs), {
      x1: 0,
      y1: 0,
      x2: 0,
      y2: 0,
      startArrow: false,
      endArrow: false
    });
  };

  Line.prototype.initAttrs = function (attrs) {
    this.setArrow();
  }; // 更新属性时，检测是否更改了箭头


  Line.prototype.onAttrChange = function (name, value, originValue) {
    _super.prototype.onAttrChange.call(this, name, value, originValue); // 由于箭头的绘制依赖于 line 的诸多 attrs，因此这里不再对每个 attr 进行判断，attr 每次变化都会影响箭头的更新


    this.setArrow();
  };

  Line.prototype.setArrow = function () {
    var attrs = this.attr();
    var x1 = attrs.x1,
        y1 = attrs.y1,
        x2 = attrs.x2,
        y2 = attrs.y2,
        startArrow = attrs.startArrow,
        endArrow = attrs.endArrow;

    if (startArrow) {
      arrow["b" /* addStartArrow */](this, attrs, x2, y2, x1, y1);
    }

    if (endArrow) {
      arrow["a" /* addEndArrow */](this, attrs, x1, y1, x2, y2);
    }
  };

  Line.prototype.isInStrokeOrPath = function (x, y, isStroke, isFill, lineWidth) {
    if (!isStroke || !lineWidth) {
      return false;
    }

    var _a = this.attr(),
        x1 = _a.x1,
        y1 = _a.y1,
        x2 = _a.x2,
        y2 = _a.y2;

    return inLine(x1, y1, x2, y2, lineWidth, x, y);
  };

  Line.prototype.createPath = function (context) {
    var attrs = this.attr();
    var x1 = attrs.x1,
        y1 = attrs.y1,
        x2 = attrs.x2,
        y2 = attrs.y2,
        startArrow = attrs.startArrow,
        endArrow = attrs.endArrow;
    var startArrowDistance = {
      dx: 0,
      dy: 0
    };
    var endArrowDistance = {
      dx: 0,
      dy: 0
    };

    if (startArrow && startArrow.d) {
      startArrowDistance = arrow["c" /* getShortenOffset */](x1, y1, x2, y2, attrs.startArrow.d);
    }

    if (endArrow && endArrow.d) {
      endArrowDistance = arrow["c" /* getShortenOffset */](x1, y1, x2, y2, attrs.endArrow.d);
    }

    context.beginPath(); // 如果自定义箭头，线条相应缩进

    context.moveTo(x1 + startArrowDistance.dx, y1 + startArrowDistance.dy);
    context.lineTo(x2 - endArrowDistance.dx, y2 - endArrowDistance.dy);
  };

  Line.prototype.afterDrawPath = function (context) {
    var startArrowShape = this.get('startArrowShape');
    var endArrowShape = this.get('endArrowShape');

    if (startArrowShape) {
      startArrowShape.draw(context);
    }

    if (endArrowShape) {
      endArrowShape.draw(context);
    }
  };
  /**
   * Get length of line
   * @return {number} length
   */


  Line.prototype.getTotalLength = function () {
    var _a = this.attr(),
        x1 = _a.x1,
        y1 = _a.y1,
        x2 = _a.x2,
        y2 = _a.y2;

    return line_default.a.length(x1, y1, x2, y2);
  };
  /**
   * Get point according to ratio
   * @param {number} ratio
   * @return {Point} point
   */


  Line.prototype.getPoint = function (ratio) {
    var _a = this.attr(),
        x1 = _a.x1,
        y1 = _a.y1,
        x2 = _a.x2,
        y2 = _a.y2;

    return line_default.a.pointAt(x1, y1, x2, y2, ratio);
  };

  return Line;
}(base);

/* harmony default export */ var shape_line = (line_Line);
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.index-of.js
var es6_array_index_of = __webpack_require__("V7cS");

// EXTERNAL MODULE: ../node_modules/@antv/util/esm/index.js + 105 modules
var util_esm = __webpack_require__("NFQX");

// EXTERNAL MODULE: ../node_modules/@antv/path-util/lib/path-2-absolute.js
var path_2_absolute = __webpack_require__("ButF");
var path_2_absolute_default = /*#__PURE__*/__webpack_require__.n(path_2_absolute);

// CONCATENATED MODULE: ../node_modules/@antv/g-canvas/esm/shape/marker.js


/**
 * @fileoverview Marker
 * @author dxq613@gmail.com
 */






var Symbols = {
  // 圆
  circle: function circle(x, y, r) {
    return [['M', x - r, y], ['A', r, r, 0, 1, 0, x + r, y], ['A', r, r, 0, 1, 0, x - r, y]];
  },
  // 正方形
  square: function square(x, y, r) {
    return [['M', x - r, y - r], ['L', x + r, y - r], ['L', x + r, y + r], ['L', x - r, y + r], ['Z']];
  },
  // 菱形
  diamond: function diamond(x, y, r) {
    return [['M', x - r, y], ['L', x, y - r], ['L', x + r, y], ['L', x, y + r], ['Z']];
  },
  // 三角形
  triangle: function triangle(x, y, r) {
    var diffY = r * Math.sin(1 / 3 * Math.PI);
    return [['M', x - r, y + diffY], ['L', x, y - diffY], ['L', x + r, y + diffY], ['Z']];
  },
  // 倒三角形
  'triangle-down': function triangleDown(x, y, r) {
    var diffY = r * Math.sin(1 / 3 * Math.PI);
    return [['M', x - r, y - diffY], ['L', x + r, y - diffY], ['L', x, y + diffY], ['Z']];
  }
};

var marker_Marker =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Marker, _super);

  function Marker() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Marker.prototype.initAttrs = function (attrs) {
    this._resetParamsCache();
  }; // 重置绘制 path 存储的缓存


  Marker.prototype._resetParamsCache = function () {
    // 为了加速 path 的绘制、拾取和计算，这个地方可以缓存很多东西
    // 这些缓存都是第一次需要时计算和存储，虽然增加了复杂度，但是频繁调用的方法，性能有很大提升
    this.set('paramsCache', {}); // 清理缓存
  }; // 更新属性时，检测是否更改了 path


  Marker.prototype.onAttrChange = function (name, value, originValue) {
    _super.prototype.onAttrChange.call(this, name, value, originValue);

    if (['symbol', 'x', 'y', 'r', 'radius'].indexOf(name) !== -1) {
      // path 相关属性更改时，清理缓存
      this._resetParamsCache();
    }
  }; // 仅仅使用包围盒检测来进行拾取
  // 所以不需要复写 isInStrokeOrPath 的方法


  Marker.prototype.isOnlyHitBox = function () {
    return true;
  };

  Marker.prototype._getR = function (attrs) {
    // 兼容 r 和 radius 两种写法，推荐使用 r
    return Object(util_esm["isNil"])(attrs.r) ? attrs.radius : attrs.r;
  };

  Marker.prototype._getPath = function () {
    var attrs = this.attr();
    var x = attrs.x,
        y = attrs.y;
    var symbol = attrs.symbol || 'circle';

    var r = this._getR(attrs);

    var method;
    var path;

    if (Object(util["h" /* isFunction */])(symbol)) {
      method = symbol;
      path = method(x, y, r); // 将 path 转成绝对路径

      path = path_2_absolute_default()(path);
    } else {
      // 内置 symbol 的 path 都是绝对路径，直接绘制即可，不需要对 path 进行特殊处理
      method = Marker.Symbols[symbol];
      path = method(x, y, r);
    }

    if (!method) {
      console.warn(symbol + " marker is not supported.");
      return null;
    }

    return path;
  };

  Marker.prototype.createPath = function (context) {
    var path = this._getPath();

    var paramsCache = this.get('paramsCache');
    Object(draw["c" /* drawPath */])(this, context, {
      path: path
    }, paramsCache);
  };

  Marker.Symbols = Symbols;
  return Marker;
}(base);

/* harmony default export */ var marker = (marker_Marker);
// EXTERNAL MODULE: ../node_modules/@antv/g-math/lib/cubic.js
var cubic = __webpack_require__("St5J");
var cubic_default = /*#__PURE__*/__webpack_require__.n(cubic);

// EXTERNAL MODULE: ../node_modules/@antv/path-util/lib/path-2-segments.js
var path_2_segments = __webpack_require__("aD5s");
var path_2_segments_default = /*#__PURE__*/__webpack_require__.n(path_2_segments);

// EXTERNAL MODULE: ../node_modules/@antv/g-base/lib/util/offscreen.js
var offscreen = __webpack_require__("vHKq");

// CONCATENATED MODULE: ../node_modules/@antv/g-canvas/esm/util/in-path/point-in-path.js

function isPointInPath(shape, x, y) {
  var ctx = Object(offscreen["getOffScreenContext"])();
  shape.createPath(ctx);
  return ctx.isPointInPath(x, y);
}
// CONCATENATED MODULE: ../node_modules/@antv/g-canvas/esm/util/in-path/polygon.js
/**
 * @fileoverview 判断点是否在多边形内
 * @author dxq613@gmail.com
 */
// 多边形的射线检测，参考：https://blog.csdn.net/WilliamSun0122/article/details/77994526
var tolerance = 1e-6; // 三态函数，判断两个double在eps精度下的大小关系

function dcmp(x) {
  if (Math.abs(x) < tolerance) {
    return 0;
  }

  return x < 0 ? -1 : 1;
} // 判断点Q是否在p1和p2的线段上


function onSegment(p1, p2, q) {
  if ((q[0] - p1[0]) * (p2[1] - p1[1]) === (p2[0] - p1[0]) * (q[1] - p1[1]) && Math.min(p1[0], p2[0]) <= q[0] && q[0] <= Math.max(p1[0], p2[0]) && Math.min(p1[1], p2[1]) <= q[1] && q[1] <= Math.max(p1[1], p2[1])) {
    return true;
  }

  return false;
} // 判断点P在多边形内-射线法


function isInPolygon(points, x, y) {
  var isHit = false;
  var n = points.length;

  if (n <= 2) {
    // svg 中点小于 3 个时，不显示，也无法被拾取
    return false;
  }

  for (var i = 0; i < n; i++) {
    var p1 = points[i];
    var p2 = points[(i + 1) % n];

    if (onSegment(p1, p2, [x, y])) {
      // 点在多边形一条边上
      return true;
    } // 前一个判断min(p1[1],p2[1])<P.y<=max(p1[1],p2[1])
    // 后一个判断被测点 在 射线与边交点 的左边


    if (dcmp(p1[1] - y) > 0 !== dcmp(p2[1] - y) > 0 && dcmp(x - (y - p1[1]) * (p1[0] - p2[0]) / (p1[1] - p2[1]) - p1[0]) < 0) {
      isHit = !isHit;
    }
  }

  return isHit;
}
// EXTERNAL MODULE: ../node_modules/@antv/g-math/lib/quadratic.js
var quadratic = __webpack_require__("8UeR");
var quadratic_default = /*#__PURE__*/__webpack_require__.n(quadratic);

// CONCATENATED MODULE: ../node_modules/@antv/g-canvas/esm/util/in-stroke/arc.js

function arc(cx, cy, r, startAngle, endAngle, lineWidth, x, y) {
  var angle = (Math.atan2(y - cy, x - cx) + Math.PI * 2) % (Math.PI * 2); // 转换到 0 - 2 * Math.PI 之间

  if (angle < startAngle || angle > endAngle) {
    return false;
  }

  var point = {
    x: cx + r * Math.cos(angle),
    y: cy + r * Math.sin(angle)
  };
  return Object(util["b" /* distance */])(point.x, point.y, x, y) <= lineWidth / 2;
}
// EXTERNAL MODULE: ../node_modules/gl-matrix/esm/mat3.js
var mat3 = __webpack_require__("GSm6");

// EXTERNAL MODULE: ../node_modules/gl-matrix/esm/vec3.js
var vec3 = __webpack_require__("MTwu");

// CONCATENATED MODULE: ../node_modules/@antv/g-canvas/esm/util/path.js

/**
 * @fileoverview path 的一些工具
 * @author dxq613@gmail.com
 */










function path_hasArc(path) {
  var hasArc = false;
  var count = path.length;

  for (var i = 0; i < count; i++) {
    var params = path[i];
    var cmd = params[0];

    if (cmd === 'C' || cmd === 'A' || cmd === 'Q') {
      hasArc = true;
      break;
    }
  }

  return hasArc;
}

function isPointInStroke(segments, lineWidth, x, y) {
  var isHit = false;
  var halfWidth = lineWidth / 2;

  for (var i = 0; i < segments.length; i++) {
    var segment = segments[i];
    var currentPoint = segment.currentPoint,
        params = segment.params,
        prePoint = segment.prePoint,
        box = segment.box; // 如果在前面已经生成过包围盒，直接按照包围盒计算

    if (box && !Object(util["e" /* inBox */])(box.x - halfWidth, box.y - halfWidth, box.width + lineWidth, box.height + lineWidth, x, y)) {
      continue;
    }

    switch (segment.command) {
      // L 和 Z 都是直线， M 不进行拾取
      case 'L':
      case 'Z':
        isHit = inLine(prePoint[0], prePoint[1], currentPoint[0], currentPoint[1], lineWidth, x, y);
        break;

      case 'Q':
        var qDistance = quadratic_default.a.pointDistance(prePoint[0], prePoint[1], params[1], params[2], params[3], params[4], x, y);
        isHit = qDistance <= lineWidth / 2;
        break;

      case 'C':
        var cDistance = cubic_default.a.pointDistance(prePoint[0], prePoint[1], params[1], params[2], params[3], params[4], params[5], params[6], x, y);
        isHit = cDistance <= lineWidth / 2;
        break;

      case 'A':
        // 计算点到椭圆圆弧的距离，暂时使用近似算法，后面可以改成切割法求最近距离
        var arcParams = segment.arcParams;
        var cx = arcParams.cx,
            cy = arcParams.cy,
            rx = arcParams.rx,
            ry = arcParams.ry,
            startAngle = arcParams.startAngle,
            endAngle = arcParams.endAngle,
            xRotation = arcParams.xRotation;
        var p = [x, y, 1];
        var m = [1, 0, 0, 0, 1, 0, 0, 0, 1];
        var r = rx > ry ? rx : ry;
        var scaleX = rx > ry ? 1 : rx / ry;
        var scaleY = rx > ry ? ry / rx : 1;
        mat3["translate"](m, m, [-cx, -cy]);
        mat3["rotate"](m, m, -xRotation);
        mat3["scale"](m, m, [1 / scaleX, 1 / scaleY]);
        vec3["transformMat3"](p, p, m);
        isHit = arc(0, 0, r, startAngle, endAngle, lineWidth, p[0], p[1]);
        break;

      default:
        break;
    }

    if (isHit) {
      break;
    }
  }

  return isHit;
}
/**
 * 提取出内部的闭合多边形和非闭合的多边形，假设 path 不存在圆弧
 * @param {Array} path 路径
 * @returns {Array} 点的集合
 */


function extractPolygons(path) {
  var count = path.length;
  var polygons = [];
  var polylines = [];
  var points = []; // 防止第一个命令不是 'M'

  for (var i = 0; i < count; i++) {
    var params = path[i];
    var cmd = params[0];

    if (cmd === 'M') {
      // 遇到 'M' 判定是否是新数组，新数组中没有点
      if (points.length) {
        // 如果存在点，则说明没有遇到 'Z'，开始了一个新的多边形
        polylines.push(points);
        points = []; // 创建新的点
      }

      points.push([params[1], params[2]]);
    } else if (cmd === 'Z') {
      if (points.length) {
        // 存在点
        polygons.push(points);
        points = []; // 开始新的点集合
      } // 如果不存在点，同时 'Z'，则说明是错误，不处理

    } else {
      points.push([params[1], params[2]]);
    }
  } // 说明 points 未放入 polygons 或者 polyline
  // 仅当只有一个 M，没有 Z 时会发生这种情况


  if (points.length > 0) {
    polylines.push(points);
  }

  return {
    polygons: polygons,
    polylines: polylines
  };
}

/* harmony default export */ var util_path = (Object(tslib_es6["__assign"])({
  hasArc: path_hasArc,
  extractPolygons: extractPolygons,
  isPointInStroke: isPointInStroke
}, esm["f" /* PathUtil */]));
// CONCATENATED MODULE: ../node_modules/@antv/g-canvas/esm/shape/path.js










 // 是否在多个多边形内部

function isInPolygons(polygons, x, y) {
  var isHit = false;

  for (var i = 0; i < polygons.length; i++) {
    var points = polygons[i];
    isHit = isInPolygon(points, x, y);

    if (isHit) {
      break;
    }
  }

  return isHit;
}

var path_Path =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Path, _super);

  function Path() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Path.prototype.getDefaultAttrs = function () {
    var attrs = _super.prototype.getDefaultAttrs.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, attrs), {
      startArrow: false,
      endArrow: false
    });
  };

  Path.prototype.initAttrs = function (attrs) {
    this._setPathArr(attrs.path);

    this.setArrow();
  }; // 更新属性时，检测是否更改了 path


  Path.prototype.onAttrChange = function (name, value, originValue) {
    _super.prototype.onAttrChange.call(this, name, value, originValue);

    if (name === 'path') {
      this._setPathArr(value);
    } // 由于箭头的绘制依赖于 line 的诸多 attrs，因此这里不再对每个 attr 进行判断，attr 每次变化都会影响箭头的更新


    this.setArrow();
  }; // 将 path 转换成绝对路径


  Path.prototype._setPathArr = function (path) {
    // 转换 path 的格式
    this.attrs.path = path_2_absolute_default()(path);
    var hasArc = util_path.hasArc(path); // 为了加速 path 的绘制、拾取和计算，这个地方可以缓存很多东西
    // 这些缓存都是第一次需要时计算和存储，虽然增加了复杂度，但是频繁调用的方法，性能有很大提升

    this.set('hasArc', hasArc);
    this.set('paramsCache', {}); // 清理缓存

    this.set('segments', null); // 延迟生成 path，在动画场景下可能不会有拾取

    this.set('curve', null);
    this.set('tCache', null);
    this.set('totalLength', null);
  };

  Path.prototype.getSegments = function () {
    var segments = this.get('segements');

    if (!segments) {
      segments = path_2_segments_default()(this.attr('path'));
      this.set('segments', segments);
    }

    return segments;
  };

  Path.prototype.setArrow = function () {
    var attrs = this.attr();
    var startArrow = attrs.startArrow,
        endArrow = attrs.endArrow;

    if (startArrow) {
      var tangent = this.getStartTangent();
      arrow["b" /* addStartArrow */](this, attrs, tangent[0][0], tangent[0][1], tangent[1][0], tangent[1][1]);
    }

    if (endArrow) {
      var tangent = this.getEndTangent();
      arrow["a" /* addEndArrow */](this, attrs, tangent[0][0], tangent[0][1], tangent[1][0], tangent[1][1]);
    }
  };

  Path.prototype.isInStrokeOrPath = function (x, y, isStroke, isFill, lineWidth) {
    var segments = this.getSegments();
    var hasArc = this.get('hasArc');
    var isHit = false;

    if (isStroke) {
      isHit = util_path.isPointInStroke(segments, lineWidth, x, y);
    }

    if (!isHit && isFill) {
      if (hasArc) {
        // 存在曲线时，暂时使用 canvas 的 api 计算，后续可以进行多边形切割
        isHit = isPointInPath(this, x, y);
      } else {
        var path = this.attr('path');
        var extractResutl = util_path.extractPolygons(path); // 提取出来的多边形包含闭合的和非闭合的，在这里统一按照多边形处理

        isHit = isInPolygons(extractResutl.polygons, x, y) || isInPolygons(extractResutl.polylines, x, y);
      }
    }

    return isHit;
  };

  Path.prototype.createPath = function (context) {
    var attrs = this.attr();
    var paramsCache = this.get('paramsCache'); // 由于计算圆弧的参数成本很大，所以要缓存

    Object(draw["c" /* drawPath */])(this, context, attrs, paramsCache);
  };

  Path.prototype.afterDrawPath = function (context) {
    var startArrowShape = this.get('startArrowShape');
    var endArrowShape = this.get('endArrowShape');

    if (startArrowShape) {
      startArrowShape.draw(context);
    }

    if (endArrowShape) {
      endArrowShape.draw(context);
    }
  };
  /**
   * Get total length of path
   * @return {number} length
   */


  Path.prototype.getTotalLength = function () {
    var totalLength = this.get('totalLength');

    if (!Object(util_esm["isNil"])(totalLength)) {
      return totalLength;
    }

    this._calculateCurve();

    this._setTcache();

    return this.get('totalLength');
  };
  /**
   * Get point according to ratio
   * @param {number} ratio
   * @return {Point} point
   */


  Path.prototype.getPoint = function (ratio) {
    var tCache = this.get('tCache');

    if (!tCache) {
      this._calculateCurve();

      this._setTcache();

      tCache = this.get('tCache');
    }

    var subt;
    var index;
    var curve = this.get('curve');

    if (!tCache || tCache.length === 0) {
      if (curve) {
        return {
          x: curve[0][1],
          y: curve[0][2]
        };
      }

      return null;
    }

    Object(util_esm["each"])(tCache, function (v, i) {
      if (ratio >= v[0] && ratio <= v[1]) {
        subt = (ratio - v[0]) / (v[1] - v[0]);
        index = i;
      }
    });
    var seg = curve[index];

    if (Object(util_esm["isNil"])(seg) || Object(util_esm["isNil"])(index)) {
      return null;
    }

    var l = seg.length;
    var nextSeg = curve[index + 1];
    return cubic_default.a.pointAt(seg[l - 2], seg[l - 1], nextSeg[1], nextSeg[2], nextSeg[3], nextSeg[4], nextSeg[5], nextSeg[6], subt);
  };

  Path.prototype._calculateCurve = function () {
    var path = this.attr().path;
    this.set('curve', util_path.pathToCurve(path));
  };

  Path.prototype._setTcache = function () {
    var totalLength = 0;
    var tempLength = 0; // 每段 curve 对应起止点的长度比例列表，形如: [[0, 0.25], [0.25, 0.6]. [0.6, 0.9], [0.9, 1]]

    var tCache = [];
    var segmentT;
    var segmentL;
    var segmentN;
    var l;
    var curve = this.get('curve');

    if (!curve) {
      return;
    }

    Object(util_esm["each"])(curve, function (segment, i) {
      segmentN = curve[i + 1];
      l = segment.length;

      if (segmentN) {
        totalLength += cubic_default.a.length(segment[l - 2], segment[l - 1], segmentN[1], segmentN[2], segmentN[3], segmentN[4], segmentN[5], segmentN[6]) || 0;
      }
    });
    this.set('totalLength', totalLength);

    if (totalLength === 0) {
      this.set('tCache', []);
      return;
    }

    Object(util_esm["each"])(curve, function (segment, i) {
      segmentN = curve[i + 1];
      l = segment.length;

      if (segmentN) {
        segmentT = [];
        segmentT[0] = tempLength / totalLength;
        segmentL = cubic_default.a.length(segment[l - 2], segment[l - 1], segmentN[1], segmentN[2], segmentN[3], segmentN[4], segmentN[5], segmentN[6]); // 当 path 不连续时，segmentL 可能为空，为空时需要作为 0 处理

        tempLength += segmentL || 0;
        segmentT[1] = tempLength / totalLength;
        tCache.push(segmentT);
      }
    });
    this.set('tCache', tCache);
  };
  /**
   * Get start tangent vector
   * @return {Array}
   */


  Path.prototype.getStartTangent = function () {
    var segments = this.getSegments();
    var result;

    if (segments.length > 1) {
      var startPoint = segments[0].currentPoint;
      var endPoint = segments[1].currentPoint;
      var tangent = segments[1].startTangent;
      result = [];

      if (tangent) {
        result.push([startPoint[0] - tangent[0], startPoint[1] - tangent[1]]);
        result.push([startPoint[0], startPoint[1]]);
      } else {
        result.push([endPoint[0], endPoint[1]]);
        result.push([startPoint[0], startPoint[1]]);
      }
    }

    return result;
  };
  /**
   * Get end tangent vector
   * @return {Array}
   */


  Path.prototype.getEndTangent = function () {
    var segments = this.getSegments();
    var length = segments.length;
    var result;

    if (length > 1) {
      var startPoint = segments[length - 2].currentPoint;
      var endPoint = segments[length - 1].currentPoint;
      var tangent = segments[length - 1].endTangent;
      result = [];

      if (tangent) {
        result.push([endPoint[0] - tangent[0], endPoint[1] - tangent[1]]);
        result.push([endPoint[0], endPoint[1]]);
      } else {
        result.push([startPoint[0], startPoint[1]]);
        result.push([endPoint[0], endPoint[1]]);
      }
    }

    return result;
  };

  return Path;
}(base);

/* harmony default export */ var shape_path = (path_Path);
// CONCATENATED MODULE: ../node_modules/@antv/g-canvas/esm/util/in-stroke/polyline.js

function inPolyline(points, lineWidth, x, y, isClose) {
  var count = points.length;

  if (count < 2) {
    return false;
  }

  for (var i = 0; i < count - 1; i++) {
    var x1 = points[i][0];
    var y1 = points[i][1];
    var x2 = points[i + 1][0];
    var y2 = points[i + 1][1];

    if (inLine(x1, y1, x2, y2, lineWidth, x, y)) {
      return true;
    }
  } // 如果封闭，则计算起始点和结束点的边


  if (isClose) {
    var first = points[0];
    var last = points[count - 1];

    if (inLine(first[0], first[1], last[0], last[1], lineWidth, x, y)) {
      return true;
    }
  }

  return false;
}
// CONCATENATED MODULE: ../node_modules/@antv/g-canvas/esm/shape/polygon.js
/**
 * @fileoverview 多边形
 * @author dxq613@gmail.com
 */





var polygon_Polygon =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Polygon, _super);

  function Polygon() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Polygon.prototype.isInStrokeOrPath = function (x, y, isStroke, isFill, lineWidth) {
    var points = this.attr().points;
    var isHit = false;

    if (isStroke) {
      isHit = inPolyline(points, lineWidth, x, y, true);
    }

    if (!isHit && isFill) {
      isHit = isInPolygon(points, x, y); // isPointInPath(shape, x, y);
    }

    return isHit;
  };

  Polygon.prototype.createPath = function (context) {
    var attrs = this.attr();
    var points = attrs.points;

    if (points.length < 2) {
      return;
    }

    context.beginPath();

    for (var i = 0; i < points.length; i++) {
      var point = points[i];

      if (i === 0) {
        context.moveTo(point[0], point[1]);
      } else {
        context.lineTo(point[0], point[1]);
      }
    }

    context.closePath();
  };

  return Polygon;
}(base);

/* harmony default export */ var polygon = (polygon_Polygon);
// EXTERNAL MODULE: ../node_modules/@antv/g-math/lib/polyline.js
var polyline = __webpack_require__("ng6+");
var polyline_default = /*#__PURE__*/__webpack_require__.n(polyline);

// CONCATENATED MODULE: ../node_modules/@antv/g-canvas/esm/shape/polyline.js









var polyline_PolyLine =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(PolyLine, _super);

  function PolyLine() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  PolyLine.prototype.getDefaultAttrs = function () {
    var attrs = _super.prototype.getDefaultAttrs.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, attrs), {
      startArrow: false,
      endArrow: false
    });
  };

  PolyLine.prototype.initAttrs = function (attrs) {
    this.setArrow();
  }; // 更新属性时，检测是否更改了 points


  PolyLine.prototype.onAttrChange = function (name, value, originValue) {
    _super.prototype.onAttrChange.call(this, name, value, originValue);

    this.setArrow();

    if (['points'].indexOf(name) !== -1) {
      this._resetCache();
    }
  };

  PolyLine.prototype._resetCache = function () {
    this.set('totalLength', null);
    this.set('tCache', null);
  };

  PolyLine.prototype.setArrow = function () {
    var attrs = this.attr();
    var _a = this.attrs,
        points = _a.points,
        startArrow = _a.startArrow,
        endArrow = _a.endArrow;
    var length = points.length;
    var x1 = points[0][0];
    var y1 = points[0][1];
    var x2 = points[length - 1][0];
    var y2 = points[length - 1][1];

    if (startArrow) {
      arrow["b" /* addStartArrow */](this, attrs, points[1][0], points[1][1], x1, y1);
    }

    if (endArrow) {
      arrow["a" /* addEndArrow */](this, attrs, points[length - 2][0], points[length - 2][1], x2, y2);
    }
  }; // 不允许 fill


  PolyLine.prototype.isFill = function () {
    return false;
  };

  PolyLine.prototype.isInStrokeOrPath = function (x, y, isStroke, isFill, lineWidth) {
    // 没有设置 stroke 不能被拾取, 没有线宽不能被拾取
    if (!isStroke || !lineWidth) {
      return false;
    }

    var points = this.attr().points;
    return inPolyline(points, lineWidth, x, y, false);
  }; // 始终填充


  PolyLine.prototype.isStroke = function () {
    return true;
  };

  PolyLine.prototype.createPath = function (context) {
    var _a = this.attr(),
        points = _a.points,
        startArrow = _a.startArrow,
        endArrow = _a.endArrow;

    var length = points.length;

    if (points.length < 2) {
      return;
    }

    var x1 = points[0][0];
    var y1 = points[0][1];
    var x2 = points[length - 1][0];
    var y2 = points[length - 1][1]; // 如果定义了箭头，并且是自定义箭头，线条相应缩进

    if (startArrow && startArrow.d) {
      var distance = arrow["c" /* getShortenOffset */](x1, y1, points[1][0], points[1][1], startArrow.d);
      x1 += distance.dx;
      y1 += distance.dy;
    }

    if (endArrow && endArrow.d) {
      var distance = arrow["c" /* getShortenOffset */](points[length - 2][0], points[length - 2][1], x2, y2, endArrow.d);
      x2 -= distance.dx;
      y2 -= distance.dy;
    }

    context.beginPath();
    context.moveTo(x1, y1);

    for (var i = 0; i < length - 1; i++) {
      var point = points[i];
      context.lineTo(point[0], point[1]);
    }

    context.lineTo(x2, y2);
  };

  PolyLine.prototype.afterDrawPath = function (context) {
    var startArrowShape = this.get('startArrowShape');
    var endArrowShape = this.get('endArrowShape');

    if (startArrowShape) {
      startArrowShape.draw(context);
    }

    if (endArrowShape) {
      endArrowShape.draw(context);
    }
  };
  /**
   * Get length of polyline
   * @return {number} length
   */


  PolyLine.prototype.getTotalLength = function () {
    var points = this.attr().points; // get totalLength from cache

    var totalLength = this.get('totalLength');

    if (!Object(util_esm["isNil"])(totalLength)) {
      return totalLength;
    }

    this.set('totalLength', polyline_default.a.length(points));
    return this.get('totalLength');
  };
  /**
   * Get point according to ratio
   * @param {number} ratio
   * @return {Point} point
   */


  PolyLine.prototype.getPoint = function (ratio) {
    var points = this.attr().points; // get tCache from cache

    var tCache = this.get('tCache');

    if (!tCache) {
      this._setTcache();

      tCache = this.get('tCache');
    }

    var subt;
    var index;
    Object(util_esm["each"])(tCache, function (v, i) {
      if (ratio >= v[0] && ratio <= v[1]) {
        subt = (ratio - v[0]) / (v[1] - v[0]);
        index = i;
      }
    });
    return line_default.a.pointAt(points[index][0], points[index][1], points[index + 1][0], points[index + 1][1], subt);
  };

  PolyLine.prototype._setTcache = function () {
    var points = this.attr().points;

    if (!points || points.length === 0) {
      return;
    }

    var totalLength = this.getTotalLength();

    if (totalLength <= 0) {
      return;
    }

    var tempLength = 0;
    var tCache = [];
    var segmentT;
    var segmentL;
    Object(util_esm["each"])(points, function (p, i) {
      if (points[i + 1]) {
        segmentT = [];
        segmentT[0] = tempLength / totalLength;
        segmentL = line_default.a.length(p[0], p[1], points[i + 1][0], points[i + 1][1]);
        tempLength += segmentL;
        segmentT[1] = tempLength / totalLength;
        tCache.push(segmentT);
      }
    });
    this.set('tCache', tCache);
  };
  /**
   * Get start tangent vector
   * @return {Array}
   */


  PolyLine.prototype.getStartTangent = function () {
    var points = this.attr().points;
    var result = [];
    result.push([points[1][0], points[1][1]]);
    result.push([points[0][0], points[0][1]]);
    return result;
  };
  /**
   * Get end tangent vector
   * @return {Array}
   */


  PolyLine.prototype.getEndTangent = function () {
    var points = this.attr().points;
    var l = points.length - 1;
    var result = [];
    result.push([points[l - 1][0], points[l - 1][1]]);
    result.push([points[l][0], points[l][1]]);
    return result;
  };

  return PolyLine;
}(base);

/* harmony default export */ var shape_polyline = (polyline_PolyLine);
// EXTERNAL MODULE: ../node_modules/@antv/g-canvas/esm/util/parse.js
var parse = __webpack_require__("KbVQ");

// CONCATENATED MODULE: ../node_modules/@antv/g-canvas/esm/util/in-stroke/rect.js

function inRect(minX, minY, width, height, lineWidth, x, y) {
  var halfWidth = lineWidth / 2; // 将四个边看做矩形来检测，比边的检测算法要快

  return Object(util["e" /* inBox */])(minX - halfWidth, minY - halfWidth, width, lineWidth, x, y) || // 上边
  Object(util["e" /* inBox */])(minX + width - halfWidth, minY - halfWidth, lineWidth, height, x, y) || // 右边
  Object(util["e" /* inBox */])(minX + halfWidth, minY + height - halfWidth, width, lineWidth, x, y) || // 下边
  Object(util["e" /* inBox */])(minX - halfWidth, minY + halfWidth, lineWidth, height, x, y); // 左边
}
// CONCATENATED MODULE: ../node_modules/@antv/g-canvas/esm/util/in-stroke/rect-radius.js


function rectWithRadius(minX, minY, width, height, radius, lineWidth, x, y) {
  var halfWidth = lineWidth / 2;
  return inLine(minX + radius, minY, minX + width - radius, minY, lineWidth, x, y) || inLine(minX + width, minY + radius, minX + width, minY + height - radius, lineWidth, x, y) || inLine(minX + width - radius, minY + height, minX + radius, minY + height, lineWidth, x, y) || inLine(minX, minY + height - radius, minX, minY + radius, lineWidth, x, y) || arc(minX + width - radius, minY + radius, radius, 1.5 * Math.PI, 2 * Math.PI, lineWidth, x, y) || arc(minX + width - radius, minY + height - radius, radius, 0, 0.5 * Math.PI, lineWidth, x, y) || arc(minX + radius, minY + height - radius, radius, 0.5 * Math.PI, Math.PI, lineWidth, x, y) || arc(minX + radius, minY + radius, radius, Math.PI, 1.5 * Math.PI, lineWidth, x, y);
}
// CONCATENATED MODULE: ../node_modules/@antv/g-canvas/esm/shape/rect.js
/**
 * @fileoverview 矩形
 * @author dxq613@gmail.com
 */








var rect_Rect =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Rect, _super);

  function Rect() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Rect.prototype.getDefaultAttrs = function () {
    var attrs = _super.prototype.getDefaultAttrs.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, attrs), {
      x: 0,
      y: 0,
      width: 0,
      height: 0,
      radius: 0
    });
  };

  Rect.prototype.isInStrokeOrPath = function (x, y, isStroke, isFill, lineWidth) {
    var attrs = this.attr();
    var minX = attrs.x;
    var minY = attrs.y;
    var width = attrs.width;
    var height = attrs.height;
    var radius = attrs.radius; // 无圆角时的策略

    if (!radius) {
      var halfWidth = lineWidth / 2; // 同时填充和带有边框

      if (isFill && isStroke) {
        return Object(util["e" /* inBox */])(minX - halfWidth, minY - halfWidth, width + halfWidth, height + halfWidth, x, y);
      } // 仅填充


      if (isFill) {
        return Object(util["e" /* inBox */])(minX, minY, width, height, x, y);
      }

      if (isStroke) {
        return inRect(minX, minY, width, height, lineWidth, x, y);
      }
    } else {
      var isHit = false;

      if (isStroke) {
        isHit = rectWithRadius(minX, minY, width, height, radius, lineWidth, x, y);
      } // 仅填充时带有圆角的矩形直接通过图形拾取
      // 以后可以改成纯数学的近似拾取，将圆弧切割成多边形


      if (!isHit && isFill) {
        isHit = isPointInPath(this, x, y);
      }

      return isHit;
    }
  };

  Rect.prototype.createPath = function (context) {
    var attrs = this.attr();
    var x = attrs.x;
    var y = attrs.y;
    var width = attrs.width;
    var height = attrs.height;
    var radius = attrs.radius;
    context.beginPath();

    if (radius === 0) {
      // 改成原生的rect方法
      context.rect(x, y, width, height);
    } else {
      var _a = Object(parse["a" /* parseRadius */])(radius),
          r1 = _a[0],
          r2 = _a[1],
          r3 = _a[2],
          r4 = _a[3];

      context.moveTo(x + r1, y);
      context.lineTo(x + width - r2, y);
      r2 !== 0 && context.arc(x + width - r2, y + r2, r2, -Math.PI / 2, 0);
      context.lineTo(x + width, y + height - r3);
      r3 !== 0 && context.arc(x + width - r3, y + height - r3, r3, 0, Math.PI / 2);
      context.lineTo(x + r4, y + height);
      r4 !== 0 && context.arc(x + r4, y + height - r4, r4, Math.PI / 2, Math.PI);
      context.lineTo(x, y + r1);
      r1 !== 0 && context.arc(x + r1, y + r1, r1, Math.PI, Math.PI * 1.5);
      context.closePath();
    }
  };

  return Rect;
}(base);

/* harmony default export */ var rect = (rect_Rect);
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.string.starts-with.js
var es6_string_starts_with = __webpack_require__("FEHE");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.split.js
var es6_regexp_split = __webpack_require__("asZ9");

// EXTERNAL MODULE: ../node_modules/@antv/g-base/lib/util/text.js
var util_text = __webpack_require__("TNgo");

// CONCATENATED MODULE: ../node_modules/@antv/g-canvas/esm/shape/text.js





/**
 * @fileoverview 文本
 * @author dxq613@gmail.com
 */





var text_Text =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Text, _super);

  function Text() {
    return _super !== null && _super.apply(this, arguments) || this;
  } // 默认文本属性


  Text.prototype.getDefaultAttrs = function () {
    var attrs = _super.prototype.getDefaultAttrs.call(this);

    return Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, attrs), {
      x: 0,
      y: 0,
      text: null,
      fontSize: 12,
      fontFamily: 'sans-serif',
      fontStyle: 'normal',
      fontWeight: 'normal',
      fontVariant: 'normal',
      textAlign: 'start',
      textBaseline: 'bottom'
    });
  }; // 仅仅使用包围盒检测来进行拾取


  Text.prototype.isOnlyHitBox = function () {
    return true;
  }; // 初始化时组合 font，同时判断 text 是否换行


  Text.prototype.initAttrs = function (attrs) {
    this._assembleFont();

    if (attrs.text) {
      this._setText(attrs.text);
    }
  }; // 组装字体


  Text.prototype._assembleFont = function () {
    var attrs = this.attrs;
    attrs.font = Object(util_text["assembleFont"])(attrs);
  }; // 如果文本换行，则缓存数组


  Text.prototype._setText = function (text) {
    var textArr = null;

    if (Object(util["k" /* isString */])(text) && text.indexOf('\n') !== -1) {
      textArr = text.split('\n');
    }

    this.set('textArr', textArr);
  }; // 更新属性时，检测是否更改了 font、text


  Text.prototype.onAttrChange = function (name, value, originValue) {
    _super.prototype.onAttrChange.call(this, name, value, originValue);

    if (name.startsWith('font')) {
      this._assembleFont();
    }

    if (name === 'text') {
      this._setText(value);
    }
  }; // 这个方法在 text 时没有可以做的事情，如果要支持文字背景时可以考虑
  // createPath(context) {
  // }
  // 如果文本多行，需要获取文本间距


  Text.prototype._getSpaceingY = function () {
    var attrs = this.attrs;
    var lineHeight = attrs.lineHeight;
    var fontSize = attrs.fontSize * 1;
    return lineHeight ? lineHeight - fontSize : fontSize * 0.14;
  }; // 绘制文本，考虑多行的场景


  Text.prototype._drawTextArr = function (context, textArr, isFill) {
    var attrs = this.attrs;
    var textBaseline = attrs.textBaseline;
    var x = attrs.x;
    var y = attrs.y;
    var fontSize = attrs.fontSize * 1;

    var spaceingY = this._getSpaceingY();

    var height = Object(util_text["getTextHeight"])(attrs.text, attrs.fontSize, attrs.lineHeight);
    var subY;
    Object(util["c" /* each */])(textArr, function (subText, index) {
      subY = y + index * (spaceingY + fontSize) - height + fontSize; // bottom;

      if (textBaseline === 'middle') subY += height - fontSize - (height - fontSize) / 2;
      if (textBaseline === 'top') subY += height - fontSize;

      if (isFill) {
        context.fillText(subText, x, subY);
      } else {
        context.strokeText(subText, x, subY);
      }
    });
  }; // 绘制文本，同时考虑填充和绘制边框


  Text.prototype._drawText = function (context, isFill) {
    var attrs = this.attr();
    var x = attrs.x;
    var y = attrs.y;
    var textArr = this.get('textArr');

    if (textArr) {
      this._drawTextArr(context, textArr, isFill);
    } else {
      var text = attrs.text;

      if (isFill) {
        context.fillText(text, x, y);
      } else {
        context.strokeText(text, x, y);
      }
    }
  }; // 复写绘制和填充的逻辑：对于文本，应该先绘制边框，再进行填充


  Text.prototype.strokeAndFill = function (context) {
    var _a = this.attrs,
        lineWidth = _a.lineWidth,
        opacity = _a.opacity,
        strokeOpacity = _a.strokeOpacity,
        fillOpacity = _a.fillOpacity;

    if (this.isStroke()) {
      if (lineWidth > 0) {
        if (!Object(util["i" /* isNil */])(strokeOpacity) && strokeOpacity !== 1) {
          context.globalAlpha = opacity;
        }

        this.stroke(context);
      }
    }

    if (this.isFill()) {
      if (!Object(util["i" /* isNil */])(fillOpacity) && fillOpacity !== 1) {
        context.globalAlpha = fillOpacity;
        this.fill(context);
        context.globalAlpha = opacity;
      } else {
        this.fill(context);
      }
    }

    this.afterDrawPath(context);
  }; // 复写填充逻辑


  Text.prototype.fill = function (context) {
    this._drawText(context, true);
  }; // 复写绘制边框的逻辑


  Text.prototype.stroke = function (context) {
    this._drawText(context, false);
  };

  return Text;
}(base);

/* harmony default export */ var shape_text = (text_Text);
// CONCATENATED MODULE: ../node_modules/@antv/g-canvas/esm/shape/index.js












/***/ }),

/***/ "Fl7L":
/***/ (function(module, exports, __webpack_require__) {

var MATCH = __webpack_require__("9dxi")('match');
module.exports = function (KEY) {
  var re = /./;
  try {
    '/./'[KEY](re);
  } catch (e) {
    try {
      re[MATCH] = false;
      return !'/./'[KEY](re);
    } catch (f) { /* empty */ }
  } return true;
};


/***/ }),

/***/ "Fu0I":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var classof = __webpack_require__("OFVL");
var builtinExec = RegExp.prototype.exec;

 // `RegExpExec` abstract operation
// https://tc39.github.io/ecma262/#sec-regexpexec
module.exports = function (R, S) {
  var exec = R.exec;
  if (typeof exec === 'function') {
    var result = exec.call(R, S);
    if (typeof result !== 'object') {
      throw new TypeError('RegExp exec method returned something other than an Object or null');
    }
    return result;
  }
  if (classof(R) !== 'RegExp') {
    throw new TypeError('RegExp#exec called on incompatible receiver');
  }
  return builtinExec.call(R, S);
};


/***/ }),

/***/ "G0eR":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var isBetween = function isBetween(value, min, max) {
  return value >= min && value <= max;
};

function getLineIntersect(p0, p1, p2, p3) {
  var tolerance = 0.001;
  var E = {
    x: p2.x - p0.x,
    y: p2.y - p0.y
  };
  var D0 = {
    x: p1.x - p0.x,
    y: p1.y - p0.y
  };
  var D1 = {
    x: p3.x - p2.x,
    y: p3.y - p2.y
  };
  var kross = D0.x * D1.y - D0.y * D1.x;
  var sqrKross = kross * kross;
  var sqrLen0 = D0.x * D0.x + D0.y * D0.y;
  var sqrLen1 = D1.x * D1.x + D1.y * D1.y;
  var point = null;

  if (sqrKross > tolerance * sqrLen0 * sqrLen1) {
    var s = (E.x * D1.y - E.y * D1.x) / kross;
    var t = (E.x * D0.y - E.y * D0.x) / kross;

    if (isBetween(s, 0, 1) && isBetween(t, 0, 1)) {
      point = {
        x: p0.x + s * D0.x,
        y: p0.y + s * D0.y
      };
    }
  }

  return point;
}

exports["default"] = getLineIntersect;
;

/***/ }),

/***/ "G2Ca":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ convertLegacyProps; });

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.map.js
var es6_array_map = __webpack_require__("yIlq");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.for-each.js
var es6_array_for_each = __webpack_require__("7lGJ");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.split.js
var es6_regexp_split = __webpack_require__("asZ9");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.function.bind.js
var es6_function_bind = __webpack_require__("o7PZ");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.index-of.js
var es6_array_index_of = __webpack_require__("V7cS");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.is-array.js
var es6_array_is_array = __webpack_require__("+3V6");

// EXTERNAL MODULE: ../node_modules/core-js/modules/web.dom.iterable.js
var web_dom_iterable = __webpack_require__("W1QL");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es7.symbol.async-iterator.js
var es7_symbol_async_iterator = __webpack_require__("+jjx");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.symbol.js
var es6_symbol = __webpack_require__("ABKx");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.string.iterator.js
var es6_string_iterator = __webpack_require__("lQyR");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.from.js
var es6_array_from = __webpack_require__("YhIr");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.function.name.js
var es6_function_name = __webpack_require__("GkPX");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.to-string.js
var es6_regexp_to_string = __webpack_require__("4aJ6");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.date.to-string.js
var es6_date_to_string = __webpack_require__("M/4x");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.to-string.js
var es6_object_to_string = __webpack_require__("t91x");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.define-property.js
var es6_object_define_property = __webpack_require__("d3/y");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.assign.js
var es6_object_assign = __webpack_require__("5hJT");

// EXTERNAL MODULE: ../node_modules/react/index.js
var react = __webpack_require__("mXGw");

// EXTERNAL MODULE: ../node_modules/classnames/index.js
var classnames = __webpack_require__("8Jek");
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);

// EXTERNAL MODULE: ../node_modules/omit.js/es/index.js
var es = __webpack_require__("x9u5");

// EXTERNAL MODULE: ../node_modules/antd/es/config-provider/context.js + 4 modules
var context = __webpack_require__("Bfez");

// CONCATENATED MODULE: ../node_modules/antd/es/_util/unreachableException.js
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

var UnreachableException = function UnreachableException(value) {
  _classCallCheck(this, UnreachableException);

  return new Error("unreachable case: ".concat(JSON.stringify(value)));
};


// CONCATENATED MODULE: ../node_modules/antd/es/button/button-group.js





function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var __rest = undefined && undefined.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};






var button_group_ButtonGroup = function ButtonGroup(props) {
  return /*#__PURE__*/react["createElement"](context["a" /* ConfigConsumer */], null, function (_ref) {
    var _classNames;

    var getPrefixCls = _ref.getPrefixCls,
        direction = _ref.direction;

    var customizePrefixCls = props.prefixCls,
        size = props.size,
        className = props.className,
        others = __rest(props, ["prefixCls", "size", "className"]);

    var prefixCls = getPrefixCls('btn-group', customizePrefixCls); // large => lg
    // small => sm

    var sizeCls = '';

    switch (size) {
      case 'large':
        sizeCls = 'lg';
        break;

      case 'small':
        sizeCls = 'sm';
        break;

      case 'middle':
      case undefined:
        break;

      default:
        // eslint-disable-next-line no-console
        console.warn(new UnreachableException(size));
    }

    var classes = classnames_default()(prefixCls, (_classNames = {}, _defineProperty(_classNames, "".concat(prefixCls, "-").concat(sizeCls), sizeCls), _defineProperty(_classNames, "".concat(prefixCls, "-rtl"), direction === 'rtl'), _classNames), className);
    return /*#__PURE__*/react["createElement"]("div", _extends({}, others, {
      className: classes
    }));
  });
};

/* harmony default export */ var button_group = (button_group_ButtonGroup);
// EXTERNAL MODULE: ../node_modules/antd/es/_util/wave.js
var wave = __webpack_require__("wWt5");

// EXTERNAL MODULE: ../node_modules/antd/es/_util/type.js
var _util_type = __webpack_require__("UyNX");

// EXTERNAL MODULE: ../node_modules/antd/es/_util/devWarning.js
var devWarning = __webpack_require__("Hd5E");

// EXTERNAL MODULE: ../node_modules/antd/es/config-provider/SizeContext.js
var SizeContext = __webpack_require__("hxuA");

// EXTERNAL MODULE: ../node_modules/rc-animate/es/CSSMotion.js
var CSSMotion = __webpack_require__("67vp");

// EXTERNAL MODULE: ../node_modules/@ant-design/icons/LoadingOutlined.js
var LoadingOutlined = __webpack_require__("yRvC");
var LoadingOutlined_default = /*#__PURE__*/__webpack_require__.n(LoadingOutlined);

// CONCATENATED MODULE: ../node_modules/antd/es/button/LoadingIcon.js





var getCollapsedWidth = function getCollapsedWidth() {
  return {
    width: 0,
    opacity: 0,
    transform: 'scale(0)'
  };
};

var getRealWidth = function getRealWidth(node) {
  return {
    width: node.scrollWidth,
    opacity: 1,
    transform: 'scale(1)'
  };
};

function LoadingIcon(_ref) {
  var prefixCls = _ref.prefixCls,
      loading = _ref.loading,
      existIcon = _ref.existIcon;
  var visible = !!loading;

  if (existIcon) {
    return /*#__PURE__*/react["createElement"]("span", {
      className: "".concat(prefixCls, "-loading-icon")
    }, /*#__PURE__*/react["createElement"](LoadingOutlined_default.a, null));
  }

  return /*#__PURE__*/react["createElement"](CSSMotion["a" /* default */], {
    visible: visible // We do not really use this motionName
    ,
    motionName: "".concat(prefixCls, "-loading-icon-motion"),
    removeOnLeave: true,
    onAppearStart: getCollapsedWidth,
    onAppearActive: getRealWidth,
    onEnterStart: getCollapsedWidth,
    onEnterActive: getRealWidth,
    onLeaveStart: getRealWidth,
    onLeaveActive: getCollapsedWidth
  }, function (_ref2, ref) {
    var className = _ref2.className,
        style = _ref2.style;
    return /*#__PURE__*/react["createElement"]("span", {
      className: "".concat(prefixCls, "-loading-icon"),
      style: style,
      ref: ref
    }, /*#__PURE__*/react["createElement"](LoadingOutlined_default.a, {
      className: classnames_default()(className)
    }));
  });
}
// EXTERNAL MODULE: ../node_modules/antd/es/_util/reactNode.js
var reactNode = __webpack_require__("Bu1f");

// CONCATENATED MODULE: ../node_modules/antd/es/button/button.js


















function button_extends() {
  button_extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return button_extends.apply(this, arguments);
}

function button_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

function _iterableToArrayLimit(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

var button_rest = undefined && undefined.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
/* eslint-disable react/button-has-type */













var rxTwoCNChar = /^[\u4e00-\u9fa5]{2}$/;
var isTwoCNChar = rxTwoCNChar.test.bind(rxTwoCNChar);

function isString(str) {
  return typeof str === 'string';
}

function isUnborderedButtonType(type) {
  return type === 'text' || type === 'link';
} // Insert one space between two chinese characters automatically.


function insertSpace(child, needInserted) {
  // Check the child if is undefined or null.
  if (child == null) {
    return;
  }

  var SPACE = needInserted ? ' ' : ''; // strictNullChecks oops.

  if (typeof child !== 'string' && typeof child !== 'number' && isString(child.type) && isTwoCNChar(child.props.children)) {
    return Object(reactNode["a" /* cloneElement */])(child, {
      children: child.props.children.split('').join(SPACE)
    });
  }

  if (typeof child === 'string') {
    if (isTwoCNChar(child)) {
      child = child.split('').join(SPACE);
    }

    return /*#__PURE__*/react["createElement"]("span", null, child);
  }

  return child;
}

function spaceChildren(children, needInserted) {
  var isPrevChildPure = false;
  var childList = [];
  react["Children"].forEach(children, function (child) {
    var type = _typeof(child);

    var isCurrentChildPure = type === 'string' || type === 'number';

    if (isPrevChildPure && isCurrentChildPure) {
      var lastIndex = childList.length - 1;
      var lastChild = childList[lastIndex];
      childList[lastIndex] = "".concat(lastChild).concat(child);
    } else {
      childList.push(child);
    }

    isPrevChildPure = isCurrentChildPure;
  }); // Pass to React.Children.map to auto fill key

  return react["Children"].map(childList, function (child) {
    return insertSpace(child, needInserted);
  });
}

var ButtonTypes = Object(_util_type["a" /* tuple */])('default', 'primary', 'ghost', 'dashed', 'link', 'text');
var ButtonShapes = Object(_util_type["a" /* tuple */])('circle', 'circle-outline', 'round');
var ButtonHTMLTypes = Object(_util_type["a" /* tuple */])('submit', 'button', 'reset');
function convertLegacyProps(type) {
  if (type === 'danger') {
    return {
      danger: true
    };
  }

  return {
    type: type
  };
}

var button_InternalButton = function InternalButton(props, ref) {
  var _classNames;

  var loading = props.loading,
      customizePrefixCls = props.prefixCls,
      type = props.type,
      danger = props.danger,
      shape = props.shape,
      customizeSize = props.size,
      className = props.className,
      children = props.children,
      icon = props.icon,
      ghost = props.ghost,
      block = props.block,
      rest = button_rest(props, ["loading", "prefixCls", "type", "danger", "shape", "size", "className", "children", "icon", "ghost", "block"]);

  var size = react["useContext"](SizeContext["b" /* default */]);

  var _React$useState = react["useState"](!!loading),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      innerLoading = _React$useState2[0],
      setLoading = _React$useState2[1];

  var _React$useState3 = react["useState"](false),
      _React$useState4 = _slicedToArray(_React$useState3, 2),
      hasTwoCNChar = _React$useState4[0],
      setHasTwoCNChar = _React$useState4[1];

  var _React$useContext = react["useContext"](context["b" /* ConfigContext */]),
      getPrefixCls = _React$useContext.getPrefixCls,
      autoInsertSpaceInButton = _React$useContext.autoInsertSpaceInButton,
      direction = _React$useContext.direction;

  var buttonRef = ref || /*#__PURE__*/react["createRef"]();
  var delayTimeoutRef = react["useRef"]();

  var isNeedInserted = function isNeedInserted() {
    return react["Children"].count(children) === 1 && !icon && !isUnborderedButtonType(type);
  };

  var fixTwoCNChar = function fixTwoCNChar() {
    // Fix for HOC usage like <FormatMessage />
    if (!buttonRef || !buttonRef.current || autoInsertSpaceInButton === false) {
      return;
    }

    var buttonText = buttonRef.current.textContent;

    if (isNeedInserted() && isTwoCNChar(buttonText)) {
      if (!hasTwoCNChar) {
        setHasTwoCNChar(true);
      }
    } else if (hasTwoCNChar) {
      setHasTwoCNChar(false);
    }
  }; // =============== Update Loading ===============


  var loadingOrDelay;

  if (_typeof(loading) === 'object' && loading.delay) {
    loadingOrDelay = loading.delay || true;
  } else {
    loadingOrDelay = !!loading;
  }

  react["useEffect"](function () {
    clearTimeout(delayTimeoutRef.current);

    if (typeof loadingOrDelay === 'number') {
      delayTimeoutRef.current = window.setTimeout(function () {
        setLoading(loadingOrDelay);
      }, loadingOrDelay);
    } else {
      setLoading(loadingOrDelay);
    }
  }, [loadingOrDelay]);
  react["useEffect"](function () {
    fixTwoCNChar();
  }, [buttonRef]);

  var handleClick = function handleClick(e) {
    var onClick = props.onClick;

    if (innerLoading) {
      return;
    }

    if (onClick) {
      onClick(e);
    }
  };

  Object(devWarning["a" /* default */])(!(typeof icon === 'string' && icon.length > 2), 'Button', "`icon` is using ReactNode instead of string naming in v4. Please check `".concat(icon, "` at https://ant.design/components/icon"));
  Object(devWarning["a" /* default */])(!(ghost && isUnborderedButtonType(type)), 'Button', "`link` or `text` button can't be a `ghost` button.");
  var prefixCls = getPrefixCls('btn', customizePrefixCls);
  var autoInsertSpace = autoInsertSpaceInButton !== false; // large => lg
  // small => sm

  var sizeCls = '';

  switch (customizeSize || size) {
    case 'large':
      sizeCls = 'lg';
      break;

    case 'small':
      sizeCls = 'sm';
      break;

    default:
      break;
  }

  var iconType = innerLoading ? 'loading' : icon;
  var classes = classnames_default()(prefixCls, className, (_classNames = {}, button_defineProperty(_classNames, "".concat(prefixCls, "-").concat(type), type), button_defineProperty(_classNames, "".concat(prefixCls, "-").concat(shape), shape), button_defineProperty(_classNames, "".concat(prefixCls, "-").concat(sizeCls), sizeCls), button_defineProperty(_classNames, "".concat(prefixCls, "-icon-only"), !children && children !== 0 && iconType), button_defineProperty(_classNames, "".concat(prefixCls, "-background-ghost"), ghost && !isUnborderedButtonType(type)), button_defineProperty(_classNames, "".concat(prefixCls, "-loading"), innerLoading), button_defineProperty(_classNames, "".concat(prefixCls, "-two-chinese-chars"), hasTwoCNChar && autoInsertSpace), button_defineProperty(_classNames, "".concat(prefixCls, "-block"), block), button_defineProperty(_classNames, "".concat(prefixCls, "-dangerous"), !!danger), button_defineProperty(_classNames, "".concat(prefixCls, "-rtl"), direction === 'rtl'), _classNames));
  var iconNode = icon && !innerLoading ? icon : /*#__PURE__*/react["createElement"](LoadingIcon, {
    existIcon: !!icon,
    prefixCls: prefixCls,
    loading: !!innerLoading
  });
  var kids = children || children === 0 ? spaceChildren(children, isNeedInserted() && autoInsertSpace) : null;
  var linkButtonRestProps = Object(es["a" /* default */])(rest, ['htmlType', 'loading']);

  if (linkButtonRestProps.href !== undefined) {
    return /*#__PURE__*/react["createElement"]("a", button_extends({}, linkButtonRestProps, {
      className: classes,
      onClick: handleClick,
      ref: buttonRef
    }), iconNode, kids);
  } // React does not recognize the `htmlType` prop on a DOM element. Here we pick it out of `rest`.


  var _a = rest,
      htmlType = _a.htmlType,
      otherProps = button_rest(_a, ["htmlType"]);

  var buttonNode = /*#__PURE__*/react["createElement"]("button", button_extends({}, Object(es["a" /* default */])(otherProps, ['loading']), {
    type: htmlType,
    className: classes,
    onClick: handleClick,
    ref: buttonRef
  }), iconNode, kids);

  if (isUnborderedButtonType(type)) {
    return buttonNode;
  }

  return /*#__PURE__*/react["createElement"](wave["a" /* default */], null, buttonNode);
};

var Button = /*#__PURE__*/react["forwardRef"](button_InternalButton);
Button.displayName = 'Button';
Button.defaultProps = {
  loading: false,
  ghost: false,
  block: false,
  htmlType: 'button'
};
Button.Group = button_group;
Button.__ANT_BUTTON = true;
/* harmony default export */ var button_button = __webpack_exports__["b"] = (Button);

/***/ }),

/***/ "G3Xc":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "Category", function() { return /* reexport */ category_base; });
__webpack_require__.d(__webpack_exports__, "Identity", function() { return /* reexport */ identity; });
__webpack_require__.d(__webpack_exports__, "Linear", function() { return /* reexport */ linear; });
__webpack_require__.d(__webpack_exports__, "Log", function() { return /* reexport */ continuous_log; });
__webpack_require__.d(__webpack_exports__, "Pow", function() { return /* reexport */ pow; });
__webpack_require__.d(__webpack_exports__, "Time", function() { return /* reexport */ continuous_time; });
__webpack_require__.d(__webpack_exports__, "TimeCat", function() { return /* reexport */ category_time; });
__webpack_require__.d(__webpack_exports__, "Quantile", function() { return /* reexport */ quantile; });
__webpack_require__.d(__webpack_exports__, "Quantize", function() { return /* reexport */ quantize; });
__webpack_require__.d(__webpack_exports__, "Scale", function() { return /* reexport */ esm_base; });
__webpack_require__.d(__webpack_exports__, "getScale", function() { return /* reexport */ getClass; });
__webpack_require__.d(__webpack_exports__, "registerScale", function() { return /* reexport */ registerClass; });
__webpack_require__.d(__webpack_exports__, "getTickMethod", function() { return /* reexport */ getTickMethod; });

// NAMESPACE OBJECT: ../node_modules/fecha/src/fecha.js
var fecha_namespaceObject = {};
__webpack_require__.r(fecha_namespaceObject);
__webpack_require__.d(fecha_namespaceObject, "default", function() { return src_fecha; });

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.to-string.js
var es6_regexp_to_string = __webpack_require__("4aJ6");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.date.to-string.js
var es6_date_to_string = __webpack_require__("M/4x");

// EXTERNAL MODULE: ../node_modules/core-js/modules/web.dom.iterable.js
var web_dom_iterable = __webpack_require__("W1QL");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.iterator.js
var es6_array_iterator = __webpack_require__("K/PF");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.to-string.js
var es6_object_to_string = __webpack_require__("t91x");

// EXTERNAL MODULE: ../node_modules/@antv/util/esm/index.js + 105 modules
var esm = __webpack_require__("NFQX");

// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/tick-method/register.js
var methodCache = {};
/**
 * 获取计算 ticks 的方法
 * @param key 键值
 * @returns 计算 ticks 的方法
 */

function getTickMethod(key) {
  return methodCache[key];
}
/**
 * 注册计算 ticks 的方法
 * @param key 键值
 * @param method 方法
 */

function registerTickMethod(key, method) {
  methodCache[key] = method;
}
// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/base.js








var base_Scale =
/** @class */
function () {
  function Scale(cfg) {
    /**
     * 度量的类型
     */
    this.type = 'base';
    /**
     * 是否分类类型的度量
     */

    this.isCategory = false;
    /**
     * 是否线性度量，有linear, time 度量
     */

    this.isLinear = false;
    /**
     * 是否连续类型的度量，linear,time,log, pow, quantile, quantize 都支持
     */

    this.isContinuous = false;
    /**
     * 是否是常量的度量，传入和传出一致
     */

    this.isIdentity = false;
    this.values = [];
    this.range = [0, 1];
    this.ticks = [];
    this.__cfg__ = cfg;
    this.initCfg();
    this.init();
  } // 对于原始值的必要转换，如分类、时间字段需转换成数值，用transform/map命名可能更好


  Scale.prototype.translate = function (v) {
    return v;
  };
  /** 重新初始化 */


  Scale.prototype.change = function (cfg) {
    // 覆盖配置项，而不替代
    Object(esm["assign"])(this.__cfg__, cfg);
    this.init();
  };

  Scale.prototype.clone = function () {
    return this.constructor(this.__cfg__);
  };
  /** 获取坐标轴需要的ticks */


  Scale.prototype.getTicks = function () {
    var _this = this;

    return Object(esm["map"])(this.ticks, function (tick, idx) {
      if (Object(esm["isObject"])(tick)) {
        // 仅当符合Tick类型时才有意义
        return tick;
      }

      return {
        text: _this.getText(tick, idx),
        tickValue: tick,
        value: _this.scale(tick)
      };
    });
  };
  /** 获取Tick的格式化结果 */


  Scale.prototype.getText = function (value, key) {
    var formatter = this.formatter;
    var res = formatter ? formatter(value, key) : value;

    if (Object(esm["isNil"])(res) || !Object(esm["isFunction"])(res.toString)) {
      return '';
    }

    return res.toString();
  }; // 获取配置项中的值，当前 scale 上的值可能会被修改


  Scale.prototype.getConfig = function (key) {
    return this.__cfg__[key];
  }; // scale初始化


  Scale.prototype.init = function () {
    Object(esm["assign"])(this, this.__cfg__);
    this.setDomain();

    if (Object(esm["isEmpty"])(this.getConfig('ticks'))) {
      this.ticks = this.calculateTicks();
    }
  }; // 子类上覆盖某些属性，不能直接在类上声明，否则会被覆盖


  Scale.prototype.initCfg = function () {};

  Scale.prototype.setDomain = function () {};

  Scale.prototype.calculateTicks = function () {
    var tickMethod = this.tickMethod;
    var ticks = [];

    if (Object(esm["isString"])(tickMethod)) {
      var method = getTickMethod(tickMethod);

      if (!method) {
        throw new Error('There is no method to to calculate ticks!');
      }

      ticks = method(this);
    } else if (Object(esm["isFunction"])(tickMethod)) {
      ticks = tickMethod(this);
    }

    return ticks;
  }; // range 的最小值


  Scale.prototype.rangeMin = function () {
    return Object(esm["head"])(this.range);
  }; // range 的最大值


  Scale.prototype.rangeMax = function () {
    return Object(esm["last"])(this.range);
  };
  /** 定义域转 0~1 */


  Scale.prototype.calcPercent = function (value, min, max) {
    if (Object(esm["isNumber"])(value)) {
      return (value - min) / (max - min);
    }

    return NaN;
  };
  /** 0~1转定义域 */


  Scale.prototype.calcValue = function (percent, min, max) {
    return min + percent * (max - min);
  };

  return Scale;
}();

/* harmony default export */ var esm_base = (base_Scale);
// EXTERNAL MODULE: ../node_modules/core-js/modules/es7.array.includes.js
var es7_array_includes = __webpack_require__("oMRA");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.string.includes.js
var es6_string_includes = __webpack_require__("6d4m");

// EXTERNAL MODULE: ../node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__("bb6g");

// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/category/base.js








/**
 * 分类度量
 * @class
 */

var base_Category =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Category, _super);

  function Category() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.type = 'cat';
    _this.isCategory = true;
    return _this;
  }

  Category.prototype.translate = function (value) {
    var index = Object(esm["indexOf"])(this.values, value);

    if (index === -1) {
      return Object(esm["isNumber"])(value) ? value : NaN;
    }

    return index;
  };

  Category.prototype.scale = function (value) {
    var order = this.translate(value); // 分类数据允许 0.5 范围内调整
    // if (order < this.min - 0.5 || order > this.max + 0.5) {
    //   return NaN;
    // }

    var percent = this.calcPercent(order, this.min, this.max);
    return this.calcValue(percent, this.rangeMin(), this.rangeMax());
  };

  Category.prototype.invert = function (scaledValue) {
    var domainRange = this.max - this.min;
    var percent = this.calcPercent(scaledValue, this.rangeMin(), this.rangeMax());
    var idx = Math.round(domainRange * percent) + this.min;

    if (idx < this.min || idx > this.max) {
      return NaN;
    }

    return this.values[idx];
  };

  Category.prototype.getText = function (value) {
    var args = [];

    for (var _i = 1; _i < arguments.length; _i++) {
      args[_i - 1] = arguments[_i];
    }

    var v = value; // value为index

    if (Object(esm["isNumber"])(value) && !this.values.includes(value)) {
      v = this.values[v];
    }

    return _super.prototype.getText.apply(this, Object(tslib_es6["__spreadArrays"])([v], args));
  }; // 复写属性


  Category.prototype.initCfg = function () {
    this.tickMethod = 'cat';
  }; // 设置 min, max


  Category.prototype.setDomain = function () {
    // 用户有可能设置 min
    if (Object(esm["isNil"])(this.getConfig('min'))) {
      this.min = 0;
    }

    if (Object(esm["isNil"])(this.getConfig('max'))) {
      var size = this.values.length;
      this.max = size > 1 ? size - 1 : size;
    }
  };

  return Category;
}(esm_base);

/* harmony default export */ var category_base = (base_Category);
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.sort.js
var es6_array_sort = __webpack_require__("U8p0");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.index-of.js
var es6_array_index_of = __webpack_require__("V7cS");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.replace.js
var es6_regexp_replace = __webpack_require__("Z8gF");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.constructor.js
var es6_regexp_constructor = __webpack_require__("J8hF");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.match.js
var es6_regexp_match = __webpack_require__("9ovy");

// CONCATENATED MODULE: ../node_modules/fecha/src/fecha.js








/**
 * Parse or format dates
 * @class fecha
 */
var fecha = {};
var token = /d{1,4}|M{1,4}|YY(?:YY)?|S{1,3}|Do|ZZ|([HhMsDm])\1?|[aA]|"[^"]*"|'[^']*'/g;
var twoDigits = '\\d\\d?';
var threeDigits = '\\d{3}';
var fourDigits = '\\d{4}';
var word = '[^\\s]+';
var literal = /\[([^]*?)\]/gm;

var noop = function noop() {};

function regexEscape(str) {
  return str.replace(/[|\\{()[^$+*?.-]/g, '\\$&');
}

function shorten(arr, sLen) {
  var newArr = [];

  for (var i = 0, len = arr.length; i < len; i++) {
    newArr.push(arr[i].substr(0, sLen));
  }

  return newArr;
}

function monthUpdate(arrName) {
  return function (d, v, i18n) {
    var index = i18n[arrName].indexOf(v.charAt(0).toUpperCase() + v.substr(1).toLowerCase());

    if (~index) {
      d.month = index;
    }
  };
}

function pad(val, len) {
  val = String(val);
  len = len || 2;

  while (val.length < len) {
    val = '0' + val;
  }

  return val;
}

var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
var monthNamesShort = shorten(monthNames, 3);
var dayNamesShort = shorten(dayNames, 3);
fecha.i18n = {
  dayNamesShort: dayNamesShort,
  dayNames: dayNames,
  monthNamesShort: monthNamesShort,
  monthNames: monthNames,
  amPm: ['am', 'pm'],
  DoFn: function DoFn(D) {
    return D + ['th', 'st', 'nd', 'rd'][D % 10 > 3 ? 0 : (D - D % 10 !== 10) * D % 10];
  }
};
var formatFlags = {
  D: function D(dateObj) {
    return dateObj.getDate();
  },
  DD: function DD(dateObj) {
    return pad(dateObj.getDate());
  },
  Do: function Do(dateObj, i18n) {
    return i18n.DoFn(dateObj.getDate());
  },
  d: function d(dateObj) {
    return dateObj.getDay();
  },
  dd: function dd(dateObj) {
    return pad(dateObj.getDay());
  },
  ddd: function ddd(dateObj, i18n) {
    return i18n.dayNamesShort[dateObj.getDay()];
  },
  dddd: function dddd(dateObj, i18n) {
    return i18n.dayNames[dateObj.getDay()];
  },
  M: function M(dateObj) {
    return dateObj.getMonth() + 1;
  },
  MM: function MM(dateObj) {
    return pad(dateObj.getMonth() + 1);
  },
  MMM: function MMM(dateObj, i18n) {
    return i18n.monthNamesShort[dateObj.getMonth()];
  },
  MMMM: function MMMM(dateObj, i18n) {
    return i18n.monthNames[dateObj.getMonth()];
  },
  YY: function YY(dateObj) {
    return pad(String(dateObj.getFullYear()), 4).substr(2);
  },
  YYYY: function YYYY(dateObj) {
    return pad(dateObj.getFullYear(), 4);
  },
  h: function h(dateObj) {
    return dateObj.getHours() % 12 || 12;
  },
  hh: function hh(dateObj) {
    return pad(dateObj.getHours() % 12 || 12);
  },
  H: function H(dateObj) {
    return dateObj.getHours();
  },
  HH: function HH(dateObj) {
    return pad(dateObj.getHours());
  },
  m: function m(dateObj) {
    return dateObj.getMinutes();
  },
  mm: function mm(dateObj) {
    return pad(dateObj.getMinutes());
  },
  s: function s(dateObj) {
    return dateObj.getSeconds();
  },
  ss: function ss(dateObj) {
    return pad(dateObj.getSeconds());
  },
  S: function S(dateObj) {
    return Math.round(dateObj.getMilliseconds() / 100);
  },
  SS: function SS(dateObj) {
    return pad(Math.round(dateObj.getMilliseconds() / 10), 2);
  },
  SSS: function SSS(dateObj) {
    return pad(dateObj.getMilliseconds(), 3);
  },
  a: function a(dateObj, i18n) {
    return dateObj.getHours() < 12 ? i18n.amPm[0] : i18n.amPm[1];
  },
  A: function A(dateObj, i18n) {
    return dateObj.getHours() < 12 ? i18n.amPm[0].toUpperCase() : i18n.amPm[1].toUpperCase();
  },
  ZZ: function ZZ(dateObj) {
    var o = dateObj.getTimezoneOffset();
    return (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4);
  }
};
var parseFlags = {
  D: [twoDigits, function (d, v) {
    d.day = v;
  }],
  Do: [twoDigits + word, function (d, v) {
    d.day = parseInt(v, 10);
  }],
  M: [twoDigits, function (d, v) {
    d.month = v - 1;
  }],
  YY: [twoDigits, function (d, v) {
    var da = new Date(),
        cent = +('' + da.getFullYear()).substr(0, 2);
    d.year = '' + (v > 68 ? cent - 1 : cent) + v;
  }],
  h: [twoDigits, function (d, v) {
    d.hour = v;
  }],
  m: [twoDigits, function (d, v) {
    d.minute = v;
  }],
  s: [twoDigits, function (d, v) {
    d.second = v;
  }],
  YYYY: [fourDigits, function (d, v) {
    d.year = v;
  }],
  S: ['\\d', function (d, v) {
    d.millisecond = v * 100;
  }],
  SS: ['\\d{2}', function (d, v) {
    d.millisecond = v * 10;
  }],
  SSS: [threeDigits, function (d, v) {
    d.millisecond = v;
  }],
  d: [twoDigits, noop],
  ddd: [word, noop],
  MMM: [word, monthUpdate('monthNamesShort')],
  MMMM: [word, monthUpdate('monthNames')],
  a: [word, function (d, v, i18n) {
    var val = v.toLowerCase();

    if (val === i18n.amPm[0]) {
      d.isPm = false;
    } else if (val === i18n.amPm[1]) {
      d.isPm = true;
    }
  }],
  ZZ: ['[^\\s]*?[\\+\\-]\\d\\d:?\\d\\d|[^\\s]*?Z', function (d, v) {
    var parts = (v + '').match(/([+-]|\d\d)/gi),
        minutes;

    if (parts) {
      minutes = +(parts[1] * 60) + parseInt(parts[2], 10);
      d.timezoneOffset = parts[0] === '+' ? minutes : -minutes;
    }
  }]
};
parseFlags.dd = parseFlags.d;
parseFlags.dddd = parseFlags.ddd;
parseFlags.DD = parseFlags.D;
parseFlags.mm = parseFlags.m;
parseFlags.hh = parseFlags.H = parseFlags.HH = parseFlags.h;
parseFlags.MM = parseFlags.M;
parseFlags.ss = parseFlags.s;
parseFlags.A = parseFlags.a; // Some common format strings

fecha.masks = {
  "default": 'ddd MMM DD YYYY HH:mm:ss',
  shortDate: 'M/D/YY',
  mediumDate: 'MMM D, YYYY',
  longDate: 'MMMM D, YYYY',
  fullDate: 'dddd, MMMM D, YYYY',
  shortTime: 'HH:mm',
  mediumTime: 'HH:mm:ss',
  longTime: 'HH:mm:ss.SSS'
};
/***
 * Format a date
 * @method format
 * @param {Date|number} dateObj
 * @param {string} mask Format of the date, i.e. 'mm-dd-yy' or 'shortDate'
 */

fecha.format = function (dateObj, mask, i18nSettings) {
  var i18n = i18nSettings || fecha.i18n;

  if (typeof dateObj === 'number') {
    dateObj = new Date(dateObj);
  }

  if (Object.prototype.toString.call(dateObj) !== '[object Date]' || isNaN(dateObj.getTime())) {
    throw new Error('Invalid Date in fecha.format');
  }

  mask = fecha.masks[mask] || mask || fecha.masks['default'];
  var literals = []; // Make literals inactive by replacing them with ??

  mask = mask.replace(literal, function ($0, $1) {
    literals.push($1);
    return '@@@';
  }); // Apply formatting rules

  mask = mask.replace(token, function ($0) {
    return $0 in formatFlags ? formatFlags[$0](dateObj, i18n) : $0.slice(1, $0.length - 1);
  }); // Inline literal values back into the formatted value

  return mask.replace(/@@@/g, function () {
    return literals.shift();
  });
};
/**
 * Parse a date string into an object, changes - into /
 * @method parse
 * @param {string} dateStr Date string
 * @param {string} format Date parse format
 * @returns {Date|boolean}
 */


fecha.parse = function (dateStr, format, i18nSettings) {
  var i18n = i18nSettings || fecha.i18n;

  if (typeof format !== 'string') {
    throw new Error('Invalid format in fecha.parse');
  }

  format = fecha.masks[format] || format; // Avoid regular expression denial of service, fail early for really long strings
  // https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS

  if (dateStr.length > 1000) {
    return null;
  }

  var dateInfo = {};
  var parseInfo = [];
  var literals = [];
  format = format.replace(literal, function ($0, $1) {
    literals.push($1);
    return '@@@';
  });
  var newFormat = regexEscape(format).replace(token, function ($0) {
    if (parseFlags[$0]) {
      var info = parseFlags[$0];
      parseInfo.push(info[1]);
      return '(' + info[0] + ')';
    }

    return $0;
  });
  newFormat = newFormat.replace(/@@@/g, function () {
    return literals.shift();
  });
  var matches = dateStr.match(new RegExp(newFormat, 'i'));

  if (!matches) {
    return null;
  }

  for (var i = 1; i < matches.length; i++) {
    parseInfo[i - 1](dateInfo, matches[i], i18n);
  }

  var today = new Date();

  if (dateInfo.isPm === true && dateInfo.hour != null && +dateInfo.hour !== 12) {
    dateInfo.hour = +dateInfo.hour + 12;
  } else if (dateInfo.isPm === false && +dateInfo.hour === 12) {
    dateInfo.hour = 0;
  }

  var date;

  if (dateInfo.timezoneOffset != null) {
    dateInfo.minute = +(dateInfo.minute || 0) - +dateInfo.timezoneOffset;
    date = new Date(Date.UTC(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1, dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0));
  } else {
    date = new Date(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1, dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0);
  }

  return date;
};

/* harmony default export */ var src_fecha = (fecha);
// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/util/bisector.js

/**
 * 二分右侧查找
 * https://github.com/d3/d3-array/blob/master/src/bisector.js
 */

/* harmony default export */ var bisector = (function (getter) {
  /**
   * x: 目标值
   * lo: 起始位置
   * hi: 结束位置
   */
  return function (a, x, _lo, _hi) {
    var lo = Object(esm["isNil"])(_lo) ? 0 : _lo;
    var hi = Object(esm["isNil"])(_hi) ? a.length : _hi;

    while (lo < hi) {
      var mid = lo + hi >>> 1;

      if (getter(a[mid]) > x) {
        hi = mid;
      } else {
        lo = mid + 1;
      }
    }

    return lo;
  };
});
// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/util/time.js






var FORMAT_METHOD = 'format';
function timeFormat(time, mask) {
  var method = fecha_namespaceObject[FORMAT_METHOD] || src_fecha[FORMAT_METHOD];
  return method(time, mask);
}
/**
 * 转换成时间戳
 * @param value 时间值
 */

function toTimeStamp(value) {
  if (Object(esm["isString"])(value)) {
    if (value.indexOf('T') > 0) {
      value = new Date(value).getTime();
    } else {
      // new Date('2010/01/10') 和 new Date('2010-01-10') 的差别在于:
      // 如果仅有年月日时，前者是带有时区的: Fri Jan 10 2020 02:40:13 GMT+0800 (中国标准时间)
      // 后者会格式化成 Sun Jan 10 2010 08:00:00 GMT+0800 (中国标准时间)
      value = new Date(value.replace(/-/gi, '/')).getTime();
    }
  }

  if (Object(esm["isDate"])(value)) {
    value = value.getTime();
  }

  return value;
}
var SECOND = 1000;
var MINUTE = 60 * SECOND;
var HOUR = 60 * MINUTE;
var DAY = 24 * HOUR;
var MONTH = DAY * 31;
var YEAR = DAY * 365;

var intervals = [['HH:mm:ss', SECOND], ['HH:mm:ss', SECOND * 10], ['HH:mm:ss', SECOND * 30], ['HH:mm', MINUTE], ['HH:mm', MINUTE * 10], ['HH:mm', MINUTE * 30], ['HH', HOUR], ['HH', HOUR * 6], ['HH', HOUR * 12], ['YYYY-MM-DD', DAY], ['YYYY-MM-DD', DAY * 4], ['YYYY-WW', DAY * 7], ['YYYY-MM', MONTH], ['YYYY-MM', MONTH * 4], ['YYYY-MM', MONTH * 6], ['YYYY', DAY * 380]];
function getTickInterval(min, max, tickCount) {
  var target = (max - min) / tickCount;
  var idx = bisector(function (o) {
    return o[1];
  })(intervals, target) - 1;
  var interval = intervals[idx];

  if (idx < 0) {
    interval = intervals[0];
  } else if (idx >= intervals.length) {
    interval = Object(esm["last"])(intervals);
  }

  return interval;
}
// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/category/time.js









/**
 * 时间分类度量
 * @class
 */

var time_TimeCat =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(TimeCat, _super);

  function TimeCat() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
   * @override
   */


  TimeCat.prototype.translate = function (value) {
    value = toTimeStamp(value);
    var index = this.values.indexOf(value);

    if (index === -1) {
      if (Object(esm["isNumber"])(value) && value < this.values.length) {
        index = value;
      } else {
        index = NaN;
      }
    }

    return index;
  };
  /**
   * 由于时间类型数据需要转换一下，所以复写 getText
   * @override
   */


  TimeCat.prototype.getText = function (value, tickIndex) {
    var index = this.translate(value);

    if (index > -1) {
      var result = this.values[index];
      var formatter = this.formatter;
      result = formatter ? formatter(result, tickIndex) : timeFormat(result, this.mask);
      return result;
    }

    return value;
  };

  TimeCat.prototype.initCfg = function () {
    this.tickMethod = 'time-cat';
    this.mask = 'YYYY-MM-DD';
    this.tickCount = 7; // 一般时间数据会显示 7， 14， 30 天的数字
  };

  TimeCat.prototype.setDomain = function () {
    var values = this.values; // 针对时间分类类型，会将时间统一转换为时间戳

    Object(esm["each"])(values, function (v, i) {
      values[i] = toTimeStamp(v);
    });
    values.sort(function (v1, v2) {
      return v1 - v2;
    });

    _super.prototype.setDomain.call(this);
  };

  return TimeCat;
}(category_base);

/* harmony default export */ var category_time = (time_TimeCat);
// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/continuous/base.js






/**
 * 连续度量的基类
 * @class
 */

var base_Continuous =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Continuous, _super);

  function Continuous() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.isContinuous = true;
    return _this;
  }

  Continuous.prototype.scale = function (value) {
    if (Object(esm["isNil"])(value)) {
      return NaN;
    }

    var rangeMin = this.rangeMin();
    var rangeMax = this.rangeMax();
    var max = this.max;
    var min = this.min;

    if (max === min) {
      return rangeMin;
    }

    var percent = this.getScalePercent(value);
    return rangeMin + percent * (rangeMax - rangeMin);
  };

  Continuous.prototype.init = function () {
    _super.prototype.init.call(this); // init 完成后保证 min, max 包含 ticks 的范围


    var ticks = this.ticks;
    var firstTick = Object(esm["head"])(ticks);
    var lastTick = Object(esm["last"])(ticks);

    if (firstTick < this.min) {
      this.min = firstTick;
    }

    if (lastTick > this.max) {
      this.max = lastTick;
    } // strict-limit 方式


    if (!Object(esm["isNil"])(this.minLimit)) {
      this.min = firstTick;
    }

    if (!Object(esm["isNil"])(this.maxLimit)) {
      this.max = lastTick;
    }
  };

  Continuous.prototype.setDomain = function () {
    var _a = Object(esm["getRange"])(this.values),
        min = _a.min,
        max = _a.max;

    if (Object(esm["isNil"])(this.min)) {
      this.min = min;
    }

    if (Object(esm["isNil"])(this.max)) {
      this.max = max;
    }

    if (this.min > this.max) {
      this.min = min;
      this.max = max;
    }
  };

  Continuous.prototype.calculateTicks = function () {
    var _this = this;

    var ticks = _super.prototype.calculateTicks.call(this);

    if (!this.nice) {
      ticks = Object(esm["filter"])(ticks, function (tick) {
        return tick >= _this.min && tick <= _this.max;
      });
    }

    return ticks;
  }; // 计算原始值值占的百分比


  Continuous.prototype.getScalePercent = function (value) {
    var max = this.max;
    var min = this.min;
    return (value - min) / (max - min);
  };

  Continuous.prototype.getInvertPercent = function (value) {
    return (value - this.rangeMin()) / (this.rangeMax() - this.rangeMin());
  };

  return Continuous;
}(esm_base);

/* harmony default export */ var continuous_base = (base_Continuous);
// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/continuous/linear.js


/**
 * 线性度量
 * @class
 */

var linear_Linear =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Linear, _super);

  function Linear() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.type = 'linear';
    _this.isLinear = true;
    return _this;
  }

  Linear.prototype.invert = function (value) {
    var percent = this.getInvertPercent(value);
    return this.min + percent * (this.max - this.min);
  };

  Linear.prototype.initCfg = function () {
    this.tickMethod = 'wilkinson-extended';
    this.nice = false;
  };

  return Linear;
}(continuous_base);

/* harmony default export */ var linear = (linear_Linear);
// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/util/math.js
 // 求以a为次幂，结果为b的基数，如 x^^a = b;求x
// 虽然数学上 b 不支持负数，但是这里需要支持 负数

function calBase(a, b) {
  var e = Math.E;
  var value;

  if (b >= 0) {
    value = Math.pow(e, Math.log(b) / a); // 使用换底公式求底
  } else {
    value = Math.pow(e, Math.log(-b) / a) * -1; // 使用换底公式求底
  }

  return value;
}
function log(a, b) {
  if (a === 1) {
    return 1;
  }

  return Math.log(b) / Math.log(a);
}
function getLogPositiveMin(values, base, max) {
  if (Object(esm["isNil"])(max)) {
    max = Math.max.apply(null, values);
  }

  var positiveMin = max;
  Object(esm["each"])(values, function (value) {
    if (value > 0 && value < positiveMin) {
      positiveMin = value;
    }
  });

  if (positiveMin === max) {
    positiveMin = max / base;
  }

  if (positiveMin > 1) {
    positiveMin = 1;
  }

  return positiveMin;
}
// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/continuous/log.js






/**
 * Log 度量，处理非均匀分布
 */

var log_Log =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Log, _super);

  function Log() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.type = 'log';
    return _this;
  }
  /**
   * @override
   */


  Log.prototype.invert = function (value) {
    var base = this.base;
    var max = log(base, this.max);
    var rangeMin = this.rangeMin();
    var range = this.rangeMax() - rangeMin;
    var min;
    var positiveMin = this.positiveMin;

    if (positiveMin) {
      if (value === 0) {
        return 0;
      }

      min = log(base, positiveMin / base);
      var appendPercent = 1 / (max - min) * range; // 0 到 positiveMin的占比

      if (value < appendPercent) {
        // 落到 0 - positiveMin 之间
        return value / appendPercent * positiveMin;
      }
    } else {
      min = log(base, this.min);
    }

    var percent = (value - rangeMin) / range;
    var tmp = percent * (max - min) + min;
    return Math.pow(base, tmp);
  };

  Log.prototype.initCfg = function () {
    this.tickMethod = 'log';
    this.base = 10;
    this.tickCount = 6;
    this.nice = true;
  }; // 设置


  Log.prototype.setDomain = function () {
    _super.prototype.setDomain.call(this);

    var min = this.min;

    if (min < 0) {
      throw new Error('When you use log scale, the minimum value must be greater than zero!');
    }

    if (min === 0) {
      this.positiveMin = getLogPositiveMin(this.values, this.base, this.max);
    }
  }; // 根据当前值获取占比


  Log.prototype.getScalePercent = function (value) {
    var max = this.max;
    var min = this.min;

    if (max === min) {
      return 0;
    } // 如果值小于等于0，则按照0处理


    if (value <= 0) {
      return 0;
    }

    var base = this.base;
    var positiveMin = this.positiveMin; // 如果min == 0, 则根据比0大的最小值，计算比例关系。这个最小值作为坐标轴上的第二个tick，第一个是0但是不显示

    if (positiveMin) {
      min = positiveMin * 1 / base;
    }

    var percent; // 如果数值小于次小值，那么就计算 value / 次小值 占整体的比例

    if (value < positiveMin) {
      percent = value / positiveMin / (log(base, max) - log(base, min));
    } else {
      percent = (log(base, value) - log(base, min)) / (log(base, max) - log(base, min));
    }

    return percent;
  };

  return Log;
}(continuous_base);

/* harmony default export */ var continuous_log = (log_Log);
// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/continuous/pow.js



/**
 * Pow 度量，处理非均匀分布
 */

var pow_Pow =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Pow, _super);

  function Pow() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.type = 'pow';
    return _this;
  }
  /**
   * @override
   */


  Pow.prototype.invert = function (value) {
    var percent = this.getInvertPercent(value);
    var exponent = this.exponent;
    var max = calBase(exponent, this.max);
    var min = calBase(exponent, this.min);
    var tmp = percent * (max - min) + min;
    var factor = tmp >= 0 ? 1 : -1;
    return Math.pow(tmp, exponent) * factor;
  };

  Pow.prototype.initCfg = function () {
    this.tickMethod = 'pow';
    this.exponent = 2;
    this.tickCount = 5;
    this.nice = true;
  }; // 获取度量计算时，value占的定义域百分比


  Pow.prototype.getScalePercent = function (value) {
    var max = this.max;
    var min = this.min;

    if (max === min) {
      return 0;
    }

    var exponent = this.exponent;
    var percent = (calBase(exponent, value) - calBase(exponent, min)) / (calBase(exponent, max) - calBase(exponent, min));
    return percent;
  };

  return Pow;
}(continuous_base);

/* harmony default export */ var pow = (pow_Pow);
// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/continuous/time.js







/**
 * 时间度量
 * @class
 */

var time_Time =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Time, _super);

  function Time() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.type = 'time';
    return _this;
  }
  /**
   * @override
   */


  Time.prototype.getText = function (value, index) {
    var numberValue = this.translate(value);
    var formatter = this.formatter;
    return formatter ? formatter(numberValue, index) : timeFormat(numberValue, this.mask);
  };
  /**
   * @override
   */


  Time.prototype.scale = function (value) {
    var v = value;

    if (Object(esm["isString"])(v) || Object(esm["isDate"])(v)) {
      v = this.translate(v);
    }

    return _super.prototype.scale.call(this, v);
  };
  /**
   * 将时间转换成数字
   * @override
   */


  Time.prototype.translate = function (v) {
    return toTimeStamp(v);
  };

  Time.prototype.initCfg = function () {
    this.tickMethod = 'time-pretty';
    this.mask = 'YYYY-MM-DD';
    this.tickCount = 7;
    this.nice = false;
  };

  Time.prototype.setDomain = function () {
    var values = this.values; // 是否设置了 min, max，而不是直接取 this.min, this.max

    var minConfig = this.getConfig('min');
    var maxConfig = this.getConfig('max'); // 如果设置了 min,max 则转换成时间戳

    if (!Object(esm["isNil"])(minConfig) || !Object(esm["isNumber"])(minConfig)) {
      this.min = this.translate(this.min);
    }

    if (!Object(esm["isNil"])(maxConfig) || !Object(esm["isNumber"])(maxConfig)) {
      this.max = this.translate(this.max);
    } // 没有设置 min, max 时


    if (values && values.length) {
      // 重新计算最大最小值
      var timeStamps_1 = [];
      var min_1 = Infinity; // 最小值

      var secondMin_1 = min_1; // 次小值

      var max_1 = 0; // 使用一个循环，计算min,max,secondMin

      Object(esm["each"])(values, function (v) {
        var timeStamp = toTimeStamp(v);

        if (isNaN(timeStamp)) {
          throw new TypeError("Invalid Time: " + v + " in time scale!");
        }

        if (min_1 > timeStamp) {
          secondMin_1 = min_1;
          min_1 = timeStamp;
        } else if (secondMin_1 > timeStamp) {
          secondMin_1 = timeStamp;
        }

        if (max_1 < timeStamp) {
          max_1 = timeStamp;
        }

        timeStamps_1.push(timeStamp);
      }); // 存在多个值时，设置最小间距

      if (values.length > 1) {
        this.minTickInterval = secondMin_1 - min_1;
      }

      if (Object(esm["isNil"])(minConfig)) {
        this.min = min_1;
      }

      if (Object(esm["isNil"])(maxConfig)) {
        this.max = max_1;
      }
    }
  };

  return Time;
}(linear);

/* harmony default export */ var continuous_time = (time_Time);
// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/continuous/quantize.js



/**
 * 分段度量
 */

var quantize_Quantize =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Quantize, _super);

  function Quantize() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.type = 'quantize';
    return _this;
  }

  Quantize.prototype.invert = function (value) {
    var ticks = this.ticks;
    var length = ticks.length;
    var percent = this.getInvertPercent(value);
    var minIndex = Math.floor(percent * (length - 1)); // 最后一个

    if (minIndex >= length - 1) {
      return Object(esm["last"])(ticks);
    } // 超出左边界， 则取第一个


    if (minIndex < 0) {
      return Object(esm["head"])(ticks);
    }

    var minTick = ticks[minIndex];
    var nextTick = ticks[minIndex + 1]; // 比当前值小的 tick 在度量上的占比

    var minIndexPercent = minIndex / (length - 1);
    var maxIndexPercent = (minIndex + 1) / (length - 1);
    return minTick + (percent - minIndexPercent) / (maxIndexPercent - minIndexPercent) * (nextTick - minTick);
  };

  Quantize.prototype.initCfg = function () {
    this.tickMethod = 'r-pretty';
    this.tickCount = 5;
    this.nice = true;
  };

  Quantize.prototype.calculateTicks = function () {
    var ticks = _super.prototype.calculateTicks.call(this);

    if (!this.nice) {
      // 如果 nice = false ,补充 min, max
      if (Object(esm["last"])(ticks) !== this.max) {
        ticks.push(this.max);
      }

      if (Object(esm["head"])(ticks) !== this.min) {
        ticks.unshift(this.min);
      }
    }

    return ticks;
  }; // 计算当前值在刻度中的占比


  Quantize.prototype.getScalePercent = function (value) {
    var ticks = this.ticks; // 超出左边界

    if (value < Object(esm["head"])(ticks)) {
      return 0;
    } // 超出右边界


    if (value > Object(esm["last"])(ticks)) {
      return 1;
    }

    var minIndex = 0;
    Object(esm["each"])(ticks, function (tick, index) {
      if (value >= tick) {
        minIndex = index;
      } else {
        return false;
      }
    });
    return minIndex / (ticks.length - 1);
  };

  return Quantize;
}(continuous_base);

/* harmony default export */ var quantize = (quantize_Quantize);
// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/continuous/quantile.js



var quantile_Quantile =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Quantile, _super);

  function Quantile() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.type = 'quantile';
    return _this;
  }

  Quantile.prototype.initCfg = function () {
    this.tickMethod = 'quantile';
    this.tickCount = 5;
    this.nice = true;
  };

  return Quantile;
}(quantize);

/* harmony default export */ var quantile = (quantile_Quantile);
// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/factory.js

var map = {};

function getClass(key) {
  return map[key];
}

function registerClass(key, cls) {
  if (getClass(key)) {
    throw new Error("type '" + key + "' existed.");
  }

  map[key] = cls;
}


// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/identity/index.js






/**
 * identity scale原则上是定义域和值域一致，scale/invert方法也是一致的
 * 参考R的实现：https://github.com/r-lib/scales/blob/master/R/pal-identity.r
 * 参考d3的实现（做了下转型）：https://github.com/d3/d3-scale/blob/master/src/identity.js
 */

var identity_Identity =
/** @class */
function (_super) {
  Object(tslib_es6["__extends"])(Identity, _super);

  function Identity() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this.type = 'identity';
    _this.isIdentity = true;
    return _this;
  }

  Identity.prototype.calculateTicks = function () {
    return this.values;
  };

  Identity.prototype.scale = function (value) {
    // 如果传入的值不等于 identity 的值，则直接返回，用于一维图时的 dodge
    if (this.values[0] !== value && Object(esm["isNumber"])(value)) {
      return value;
    }

    return this.range[0];
  };

  Identity.prototype.invert = function (value) {
    var range = this.range;

    if (value < range[0] || value > range[1]) {
      return NaN;
    }

    return this.values[0];
  };

  return Identity;
}(esm_base);

/* harmony default export */ var identity = (identity_Identity);
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.map.js
var es6_array_map = __webpack_require__("yIlq");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.number.parse-float.js
var es6_number_parse_float = __webpack_require__("az+3");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.number.is-integer.js
var es6_number_is_integer = __webpack_require__("Gv0X");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.math.log10.js
var es6_math_log10 = __webpack_require__("Av18");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.number.is-nan.js
var es6_number_is_nan = __webpack_require__("MYxt");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.number.constructor.js
var es6_number_constructor = __webpack_require__("e2Kn");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.number.epsilon.js
var es6_number_epsilon = __webpack_require__("uKE/");

// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/util/extended.js







var DEFAULT_Q = [1, 5, 2, 2.5, 4, 3];
var ALL_Q = [1, 5, 2, 2.5, 4, 3, 1.5, 7, 6, 8, 9];
var eps = Number.EPSILON * 100; // https://stackoverflow.com/questions/4467539/javascript-modulo-gives-a-negative-result-for-negative-numbers

function mod(n, m) {
  return (n % m + m) % m;
}

function simplicity(q, Q, j, lmin, lmax, lstep) {
  var n = Object(esm["size"])(Q);
  var i = Object(esm["indexOf"])(Q, q);
  var v = 0;
  var m = mod(lmin, lstep);

  if ((m < eps || lstep - m < eps) && lmin <= 0 && lmax >= 0) {
    v = 1;
  }

  return 1 - i / (n - 1) - j + v;
}

function simplicityMax(q, Q, j) {
  var n = Object(esm["size"])(Q);
  var i = Object(esm["indexOf"])(Q, q);
  var v = 1;
  return 1 - i / (n - 1) - j + v;
}

function density(k, m, dmin, dmax, lmin, lmax) {
  var r = (k - 1) / (lmax - lmin);
  var rt = (m - 1) / (Math.max(lmax, dmax) - Math.min(dmin, lmin));
  return 2 - Math.max(r / rt, rt / r);
}

function densityMax(k, m) {
  if (k >= m) {
    return 2 - (k - 1) / (m - 1);
  }

  return 1;
}

function coverage(dmin, dmax, lmin, lmax) {
  var range = dmax - dmin;
  return 1 - 0.5 * (Math.pow(dmax - lmax, 2) + Math.pow(dmin - lmin, 2)) / Math.pow(0.1 * range, 2);
}

function coverageMax(dmin, dmax, span) {
  var range = dmax - dmin;

  if (span > range) {
    var half = (span - range) / 2;
    return 1 - Math.pow(half, 2) / Math.pow(0.1 * range, 2);
  }

  return 1;
}

function legibility() {
  return 1;
}
/**
 * An Extension of Wilkinson's Algorithm for Position Tick Labels on Axes
 * https://www.yuque.com/preview/yuque/0/2019/pdf/185317/1546999150858-45c3b9c2-4e86-4223-bf1a-8a732e8195ed.pdf
 * @param dmin 最小值
 * @param dmax 最大值
 * @param m tick个数
 * @param onlyLoose 是否允许扩展min、max，不绝对强制，例如[3, 97]
 * @param Q nice numbers集合
 * @param w 四个优化组件的权重
 */


function extended(dmin, dmax, m, onlyLoose, Q, w) {
  if (m === void 0) {
    m = 5;
  }

  if (onlyLoose === void 0) {
    onlyLoose = true;
  }

  if (Q === void 0) {
    Q = DEFAULT_Q;
  }

  if (w === void 0) {
    w = [0.25, 0.2, 0.5, 0.05];
  }

  if (dmin === dmax || m === 1) {
    return {
      min: dmin,
      max: dmax,
      ticks: [dmin]
    };
  }

  var best = {
    score: -2,
    lmin: 0,
    lmax: 0,
    lstep: 0
  };
  var j = 1;

  while (j < Infinity) {
    for (var _i = 0, Q_1 = Q; _i < Q_1.length; _i++) {
      var q = Q_1[_i];
      var sm = simplicityMax(q, Q, j);

      if (Number.isNaN(sm)) {
        throw new Error('NaN');
      }

      if (w[0] * sm + w[1] + w[2] + w[3] < best.score) {
        j = Infinity;
        break;
      }

      var k = 2;

      while (k < Infinity) {
        var dm = densityMax(k, m);

        if (w[0] * sm + w[1] + w[2] * dm + w[3] < best.score) {
          break;
        }

        var delta = (dmax - dmin) / (k + 1) / j / q;
        var z = Math.ceil(Math.log10(delta));

        while (z < Infinity) {
          var step = j * q * Math.pow(10, z);
          var cm = coverageMax(dmin, dmax, step * (k - 1));

          if (w[0] * sm + w[1] * cm + w[2] * dm + w[3] < best.score) {
            break;
          }

          var minStart = Math.floor(dmax / step) * j - (k - 1) * j;
          var maxStart = Math.ceil(dmin / step) * j;

          if (minStart > maxStart) {
            z = z + 1;
            continue;
          }

          for (var start = minStart; start <= maxStart; start = start + 1) {
            var lmin = start * (step / j);
            var lmax = lmin + step * (k - 1);
            var lstep = step;
            var s = simplicity(q, Q, j, lmin, lmax, lstep);
            var c = coverage(dmin, dmax, lmin, lmax);
            var g = density(k, m, dmin, dmax, lmin, lmax);
            var l = legibility();
            var score = w[0] * s + w[1] * c + w[2] * g + w[3] * l;

            if (score > best.score && (!onlyLoose || lmin <= dmin && lmax >= dmax)) {
              best.lmin = lmin;
              best.lmax = lmax;
              best.lstep = lstep;
              best.score = score;
            }
          }

          z = z + 1;
        }

        k = k + 1;
      }
    }

    j = j + 1;
  } // 步长为浮点数时处理精度


  var toFixed = Number.isInteger(best.lstep) ? 0 : Math.ceil(Math.abs(Math.log10(best.lstep)));
  var range = [];

  for (var tick = best.lmin; tick <= best.lmax; tick += best.lstep) {
    range.push(tick);
  }

  var ticks = toFixed ? Object(esm["map"])(range, function (x) {
    return Number.parseFloat(x.toFixed(toFixed));
  }) : range;
  return {
    min: Math.min(dmin, Object(esm["head"])(ticks)),
    max: Math.max(dmax, Object(esm["last"])(ticks)),
    ticks: ticks
  };
}
// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/tick-method/cat.js






/**
 * 计算分类 ticks
 * @param cfg 度量的配置项
 * @returns 计算后的 ticks
 */

function calculateCatTicks(cfg) {
  var values = cfg.values,
      tickInterval = cfg.tickInterval,
      tickCount = cfg.tickCount;
  var ticks = values;

  if (Object(esm["isNumber"])(tickInterval)) {
    return Object(esm["filter"])(ticks, function (__, i) {
      return i % tickInterval === 0;
    });
  }

  var min = cfg.min,
      max = cfg.max;

  if (Object(esm["isNil"])(min)) {
    min = 0;
  }

  if (Object(esm["isNil"])(max)) {
    max = values.length - 1;
  }

  if (Object(esm["isNumber"])(tickCount) && tickCount < max - min) {
    // 简单过滤，部分情况下小数的倍数也可以是整数
    // tslint:disable-next-line: no-shadowed-variable
    var ticks_1 = extended(min, max, tickCount, false, [1, 2, 5, 3, 4, 7, 6, 8, 9]).ticks;
    var valid = Object(esm["filter"])(ticks_1, function (tick) {
      return tick >= min && tick <= max;
    });
    return valid.map(function (index) {
      return values[index];
    });
  }

  return values.slice(min, max + 1);
}
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.string.iterator.js
var es6_string_iterator = __webpack_require__("lQyR");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.from.js
var es6_array_from = __webpack_require__("YhIr");

// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/util/d3-linear.js



function d3Linear(cfg) {
  var min = cfg.min,
      max = cfg.max,
      nice = cfg.nice,
      tickCount = cfg.tickCount;
  var linear = new D3Linear();
  linear.domain([min, max]);

  if (nice) {
    linear.nice(tickCount);
  }

  return linear.ticks(tickCount);
}
var DEFAULT_COUNT = 5;
var e10 = Math.sqrt(50);
var e5 = Math.sqrt(10);
var e2 = Math.sqrt(2); // https://github.com/d3/d3-scale

var D3Linear =
/** @class */
function () {
  function D3Linear() {
    this._domain = [0, 1];
  }

  D3Linear.prototype.domain = function (domain) {
    if (domain) {
      this._domain = Array.from(domain, Number);
      return this;
    }

    return this._domain.slice();
  };

  D3Linear.prototype.nice = function (count) {
    var _a, _b;

    if (count === void 0) {
      count = DEFAULT_COUNT;
    }

    var d = this._domain.slice();

    var i0 = 0;
    var i1 = this._domain.length - 1;
    var start = this._domain[i0];
    var stop = this._domain[i1];
    var step;

    if (stop < start) {
      _a = [stop, start], start = _a[0], stop = _a[1];
      _b = [i1, i0], i0 = _b[0], i1 = _b[1];
    }

    step = tickIncrement(start, stop, count);

    if (step > 0) {
      start = Math.floor(start / step) * step;
      stop = Math.ceil(stop / step) * step;
      step = tickIncrement(start, stop, count);
    } else if (step < 0) {
      start = Math.ceil(start * step) / step;
      stop = Math.floor(stop * step) / step;
      step = tickIncrement(start, stop, count);
    }

    if (step > 0) {
      d[i0] = Math.floor(start / step) * step;
      d[i1] = Math.ceil(stop / step) * step;
      this.domain(d);
    } else if (step < 0) {
      d[i0] = Math.ceil(start * step) / step;
      d[i1] = Math.floor(stop * step) / step;
      this.domain(d);
    }

    return this;
  };

  D3Linear.prototype.ticks = function (count) {
    if (count === void 0) {
      count = DEFAULT_COUNT;
    }

    return d3ArrayTicks(this._domain[0], this._domain[this._domain.length - 1], count || DEFAULT_COUNT);
  };

  return D3Linear;
}();



function d3ArrayTicks(start, stop, count) {
  var reverse;
  var i = -1;
  var n;
  var ticks;
  var step;
  stop = +stop, start = +start, count = +count;

  if (start === stop && count > 0) {
    return [start];
  } // tslint:disable-next-line


  if (reverse = stop < start) {
    n = start, start = stop, stop = n;
  } // tslint:disable-next-line


  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) {
    return [];
  }

  if (step > 0) {
    start = Math.ceil(start / step);
    stop = Math.floor(stop / step);
    ticks = new Array(n = Math.ceil(stop - start + 1));

    while (++i < n) {
      ticks[i] = (start + i) * step;
    }
  } else {
    start = Math.floor(start * step);
    stop = Math.ceil(stop * step);
    ticks = new Array(n = Math.ceil(start - stop + 1));

    while (++i < n) {
      ticks[i] = (start - i) / step;
    }
  }

  if (reverse) {
    ticks.reverse();
  }

  return ticks;
}

function tickIncrement(start, stop, count) {
  var step = (stop - start) / Math.max(0, count);
  var power = Math.floor(Math.log(step) / Math.LN10);
  var error = step / Math.pow(10, power);
  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
}
// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/util/interval.js


function snapMultiple(v, base, snapType) {
  var div;

  if (snapType === 'ceil') {
    div = Math.ceil(v / base);
  } else if (snapType === 'floor') {
    div = Math.floor(v / base);
  } else {
    div = Math.round(v / base);
  }

  return div * base;
}

function intervalTicks(min, max, interval) {
  // 变成 interval 的倍数
  var minTick = snapMultiple(min, interval, 'floor');
  var maxTick = snapMultiple(max, interval, 'ceil'); // 统一小数位数

  minTick = Object(esm["fixedBase"])(minTick, interval);
  maxTick = Object(esm["fixedBase"])(maxTick, interval);
  var ticks = [];

  for (var i = minTick; i <= maxTick; i = i + interval) {
    var tickValue = Object(esm["fixedBase"])(i, interval); // 防止浮点数加法出现问题

    ticks.push(tickValue);
  }

  return {
    min: minTick,
    max: maxTick,
    ticks: ticks
  };
}
// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/util/strict-limit.js

/**
 * 按照给定的 minLimit/maxLimit/tickCount 均匀计算出刻度 ticks
 *
 * @param cfg Scale 配置项
 * @return ticks
 */

function strictLimit(cfg, defaultMin, defaultMax) {
  var _a;

  var minLimit = cfg.minLimit,
      maxLimit = cfg.maxLimit,
      min = cfg.min,
      max = cfg.max,
      _b = cfg.tickCount,
      tickCount = _b === void 0 ? 5 : _b;
  var tickMin = Object(esm["isNil"])(minLimit) ? Object(esm["isNil"])(defaultMin) ? min : defaultMin : minLimit;
  var tickMax = Object(esm["isNil"])(maxLimit) ? Object(esm["isNil"])(defaultMax) ? max : defaultMax : maxLimit;

  if (tickMin > tickMax) {
    _a = [tickMin, tickMax], tickMax = _a[0], tickMin = _a[1];
  }

  if (tickCount <= 2) {
    return [tickMin, tickMax];
  }

  var step = (tickMax - tickMin) / (tickCount - 1);
  var ticks = [];

  for (var i = 0; i < tickCount; i++) {
    ticks.push(tickMin + step * i);
  }

  return ticks;
}
// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/tick-method/d3-linear.js




function d3LinearTickMethod(cfg) {
  var min = cfg.min,
      max = cfg.max,
      tickInterval = cfg.tickInterval,
      minLimit = cfg.minLimit,
      maxLimit = cfg.maxLimit;
  var ticks = d3Linear(cfg);

  if (!Object(esm["isNil"])(minLimit) || !Object(esm["isNil"])(maxLimit)) {
    return strictLimit(cfg, Object(esm["head"])(ticks), Object(esm["last"])(ticks));
  }

  if (tickInterval) {
    return intervalTicks(min, max, tickInterval).ticks;
  }

  return ticks;
}
// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/tick-method/linear.js




/**
 * 计算线性的 ticks，使用 wilkinson extended 方法
 * @param cfg 度量的配置项
 * @returns 计算后的 ticks
 */

function linear_linear(cfg) {
  var min = cfg.min,
      max = cfg.max,
      tickCount = cfg.tickCount,
      nice = cfg.nice,
      tickInterval = cfg.tickInterval,
      minLimit = cfg.minLimit,
      maxLimit = cfg.maxLimit;
  var ticks = extended(min, max, tickCount, nice).ticks;

  if (!Object(esm["isNil"])(minLimit) || !Object(esm["isNil"])(maxLimit)) {
    return strictLimit(cfg, Object(esm["head"])(ticks), Object(esm["last"])(ticks));
  }

  if (tickInterval) {
    return intervalTicks(min, max, tickInterval).ticks;
  }

  return ticks;
}
// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/tick-method/log.js




/**
 * 计算 log 的 ticks，考虑 min = 0 的场景
 * @param cfg 度量的配置项
 * @returns 计算后的 ticks
 */

function calculateLogTicks(cfg) {
  var base = cfg.base,
      tickCount = cfg.tickCount,
      min = cfg.min,
      max = cfg.max,
      values = cfg.values;
  var minTick;
  var maxTick = log(base, max);

  if (min > 0) {
    minTick = Math.floor(log(base, min));
  } else {
    var positiveMin = getLogPositiveMin(values, base, max);
    minTick = Math.floor(log(base, positiveMin));
  }

  var count = maxTick - minTick;
  var avg = Math.ceil(count / tickCount);
  var ticks = [];

  for (var i = minTick; i < maxTick + avg; i = i + avg) {
    ticks.push(Math.pow(base, i));
  }

  if (min <= 0) {
    // 最小值 <= 0 时显示 0
    ticks.unshift(0);
  }

  return ticks;
}
// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/util/pretty.js



function pretty(min, max, n) {
  if (n === void 0) {
    n = 5;
  }

  var res = {
    max: 0,
    min: 0,
    ticks: []
  };
  /*
    R pretty:
    https://svn.r-project.org/R/trunk/src/appl/pretty.c
    https://www.rdocumentation.org/packages/base/versions/3.5.2/topics/pretty
    */

  var h = 1.5; // high.u.bias

  var h5 = 0.5 + 1.5 * h; // u5.bias
  // 反正我也不会调参，跳过所有判断步骤

  var d = max - min;
  var c = d / n; // 当d非常小的时候触发，但似乎没什么用
  // const min_n = Math.floor(n / 3);
  // const shrink_sml = Math.pow(2, 5);
  // if (Math.log10(d) < -2) {
  //   c = (_.max([ Math.abs(max), Math.abs(min) ]) * shrink_sml) / min_n;
  // }

  var base = Math.pow(10, Math.floor(Math.log10(c)));
  var toFixed = base < 1 ? Math.ceil(Math.abs(Math.log10(base))) : 0;
  var unit = base;

  if (2 * base - c < h * (c - unit)) {
    unit = 2 * base;

    if (5 * base - c < h5 * (c - unit)) {
      unit = 5 * base;

      if (10 * base - c < h * (c - unit)) {
        unit = 10 * base;
      }
    }
  }

  var nu = Math.ceil(max / unit);
  var ns = Math.floor(min / unit);
  res.max = Math.max(nu * unit, max);
  res.min = Math.min(ns * unit, min);
  var x = Number.parseFloat((ns * unit).toFixed(toFixed));

  while (x < max) {
    res.ticks.push(x);
    x += unit;

    if (toFixed) {
      x = Number.parseFloat(x.toFixed(toFixed));
    }
  }

  res.ticks.push(x);
  return res;
}
// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/tick-method/pow.js



/**
 * 计算 Pow 的 ticks
 * @param cfg 度量的配置项
 * @returns 计算后的 ticks
 */

function calculatePowTicks(cfg) {
  var exponent = cfg.exponent,
      tickCount = cfg.tickCount;
  var max = Math.ceil(calBase(exponent, cfg.max));
  var min = Math.floor(calBase(exponent, cfg.min));
  var ticks = pretty(min, max, tickCount).ticks;
  return ticks.map(function (tick) {
    var factor = tick >= 0 ? 1 : -1;
    return Math.pow(tick, exponent) * factor;
  });
}
// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/tick-method/quantile.js





/**
 * 计算几分位 https://github.com/simple-statistics/simple-statistics/blob/master/src/quantile_sorted.js
 * @param x  数组
 * @param p  百分比
 */
function quantileSorted(x, p) {
  var idx = x.length * p;
  /*if (x.length === 0) { // 当前场景这些条件不可能命中
    throw new Error('quantile requires at least one value.');
  } else if (p < 0 || p > 1) {
    throw new Error('quantiles must be between 0 and 1');
  } else */

  if (p === 1) {
    // If p is 1, directly return the last element
    return x[x.length - 1];
  } else if (p === 0) {
    // If p is 0, directly return the first element
    return x[0];
  } else if (idx % 1 !== 0) {
    // If p is not integer, return the next element in array
    return x[Math.ceil(idx) - 1];
  } else if (x.length % 2 === 0) {
    // If the list has even-length, we'll take the average of this number
    // and the next value, if there is one
    return (x[idx - 1] + x[idx]) / 2;
  } else {
    // Finally, in the simple case of an integer value
    // with an odd-length list, return the x value at the index.
    return x[idx];
  }
}

function calculateTicks(cfg) {
  var tickCount = cfg.tickCount,
      values = cfg.values;

  if (!values || !values.length) {
    return [];
  }

  var sorted = values.slice().sort(function (a, b) {
    return a - b;
  });
  var ticks = [];

  for (var i = 0; i < tickCount; i++) {
    var p = i / (tickCount - 1);
    ticks.push(quantileSorted(sorted, p));
  }

  return ticks;
}
// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/tick-method/r-prettry.js




/**
 * 计算线性的 ticks，使用 R's pretty 方法
 * @param cfg 度量的配置项
 * @returns 计算后的 ticks
 */

function linearPretty(cfg) {
  var min = cfg.min,
      max = cfg.max,
      tickCount = cfg.tickCount,
      tickInterval = cfg.tickInterval,
      minLimit = cfg.minLimit,
      maxLimit = cfg.maxLimit;
  var ticks = pretty(min, max, tickCount).ticks;

  if (!Object(esm["isNil"])(minLimit) || !Object(esm["isNil"])(maxLimit)) {
    return strictLimit(cfg, Object(esm["head"])(ticks), Object(esm["last"])(ticks));
  }

  if (tickInterval) {
    return intervalTicks(min, max, tickInterval).ticks;
  }

  return ticks;
}
// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/tick-method/time.js

function calculateTimeTicks(cfg) {
  var min = cfg.min,
      max = cfg.max,
      minTickInterval = cfg.minTickInterval;
  var tickInterval = cfg.tickInterval;
  var tickCount = cfg.tickCount; // 指定 tickInterval 后 tickCount 不生效，需要重新计算

  if (tickInterval) {
    tickCount = Math.ceil((max - min) / tickInterval);
  } else {
    tickInterval = getTickInterval(min, max, tickCount)[1];
    var count = (max - min) / tickInterval;
    var ratio = count / tickCount;

    if (ratio > 1) {
      tickInterval = tickInterval * Math.ceil(ratio);
    } // 如果设置了最小间距，则使用最小间距


    if (minTickInterval && tickInterval < minTickInterval) {
      tickInterval = minTickInterval;
    }
  }

  var ticks = [];

  for (var i = min; i < max + tickInterval; i += tickInterval) {
    ticks.push(i);
  }

  return ticks;
}
// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/tick-method/time-cat.js





/**
 * 计算时间分类的 ticks, 保头，保尾
 * @param cfg 度量的配置项
 * @returns 计算后的 ticks
 */

function calculateTimeCatTicks(cfg) {
  var ticks = calculateCatTicks(cfg);
  var lastValue = Object(esm["last"])(cfg.values);

  if (lastValue !== Object(esm["last"])(ticks)) {
    ticks.push(lastValue);
  }

  return ticks;
}
// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/tick-method/time-pretty.js


function getYear(date) {
  return new Date(date).getFullYear();
}

function createYear(year) {
  return new Date(year, 0, 1).getTime();
}

function getMonth(date) {
  return new Date(date).getMonth();
}

function diffMonth(min, max) {
  var minYear = getYear(min);
  var maxYear = getYear(max);
  var minMonth = getMonth(min);
  var maxMonth = getMonth(max);
  return (maxYear - minYear) * 12 + (maxMonth - minMonth) % 12;
}

function creatMonth(year, month) {
  return new Date(year, month, 1).getTime();
}

function diffDay(min, max) {
  return Math.ceil((max - min) / DAY);
}

function diffHour(min, max) {
  return Math.ceil((max - min) / HOUR);
}

function diffMinus(min, max) {
  return Math.ceil((max - min) / (60 * 1000));
}
/**
 * 计算 time 的 ticks，对 month, year 进行 pretty 处理
 * @param cfg 度量的配置项
 * @returns 计算后的 ticks
 */


function timePretty(cfg) {
  var min = cfg.min,
      max = cfg.max,
      minTickInterval = cfg.minTickInterval;
  var tickInterval = cfg.tickInterval;
  var tickCount = cfg.tickCount;
  var ticks = []; // 指定 tickInterval 后 tickCount 不生效，需要重新计算

  if (!tickInterval) {
    tickInterval = (max - min) / tickCount; // 如果设置了最小间距，则使用最小间距

    if (minTickInterval && tickInterval < minTickInterval) {
      tickInterval = minTickInterval;
    }
  }

  var minYear = getYear(min); // 如果间距大于 1 年，则将开始日期从整年开始

  if (tickInterval > YEAR) {
    var maxYear = getYear(max);
    var yearInterval = Math.ceil(tickInterval / YEAR);

    for (var i = minYear; i <= maxYear + yearInterval; i = i + yearInterval) {
      ticks.push(createYear(i));
    }
  } else if (tickInterval > MONTH) {
    // 大于月时
    var monthInterval = Math.ceil(tickInterval / MONTH);
    var mmMoth = getMonth(min);
    var dMonths = diffMonth(min, max);

    for (var i = 0; i <= dMonths + monthInterval; i = i + monthInterval) {
      ticks.push(creatMonth(minYear, i + mmMoth));
    }
  } else if (tickInterval > DAY) {
    // 大于天
    var date = new Date(min);
    var year = date.getFullYear();
    var month = date.getMonth();
    var mday = date.getDate();
    var day = Math.ceil(tickInterval / DAY);
    var ddays = diffDay(min, max);

    for (var i = 0; i < ddays + day; i = i + day) {
      ticks.push(new Date(year, month, mday + i).getTime());
    }
  } else if (tickInterval > HOUR) {
    // 大于小时
    var date = new Date(min);
    var year = date.getFullYear();
    var month = date.getMonth();
    var day = date.getDate();
    var hour = date.getHours();
    var hours = Math.ceil(tickInterval / HOUR);
    var dHours = diffHour(min, max);

    for (var i = 0; i <= dHours + hours; i = i + hours) {
      ticks.push(new Date(year, month, day, hour + i).getTime());
    }
  } else if (tickInterval > MINUTE) {
    // 大于分钟
    var dMinus = diffMinus(min, max);
    var minutes = Math.ceil(tickInterval / MINUTE);

    for (var i = 0; i <= dMinus + minutes; i = i + minutes) {
      ticks.push(min + i * MINUTE);
    }
  } else {
    // 小于分钟
    var interval = tickInterval;

    if (interval < SECOND) {
      interval = SECOND;
    }

    var minSecond = Math.floor(min / SECOND) * SECOND;
    var dSeconds = Math.ceil((max - min) / SECOND);
    var seconds = Math.ceil(interval / SECOND);

    for (var i = 0; i < dSeconds + seconds; i = i + seconds) {
      ticks.push(minSecond + i * SECOND);
    }
  }

  return ticks;
}
// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/tick-method/index.js











registerTickMethod('cat', calculateCatTicks);
registerTickMethod('time-cat', calculateTimeCatTicks);
registerTickMethod('wilkinson-extended', linear_linear);
registerTickMethod('r-pretty', linearPretty);
registerTickMethod('time', calculateTimeTicks);
registerTickMethod('time-pretty', timePretty);
registerTickMethod('log', calculateLogTicks);
registerTickMethod('pow', calculatePowTicks);
registerTickMethod('quantile', calculateTicks);
registerTickMethod('d3-linear', d3LinearTickMethod);

// CONCATENATED MODULE: ../node_modules/@antv/scale/esm/index.js












registerClass('cat', category_base);
registerClass('category', category_base);
registerClass('identity', identity);
registerClass('linear', linear);
registerClass('log', continuous_log);
registerClass('pow', pow);
registerClass('time', continuous_time);
registerClass('timeCat', category_time);
registerClass('quantize', quantize);
registerClass('quantile', quantile);


/***/ }),

/***/ "GCOZ":
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),

/***/ "GFZo":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------

__webpack_require__("m8zh");

__webpack_require__("asZ9");

var BLAME_FUNCTION_INDEX = 3; // [current, parent, *error*, caller to blame, …]

function warnDeprecation(reason) {
  // eslint-disable-line max-statements
  if ({}.FOLKTALE_ASSERTIONS !== 'none') {
    var stack = new Error('').stack;
    var offender = void 0;

    if (stack) {
      var lines = stack.split('\n');
      offender = lines[BLAME_FUNCTION_INDEX];
    }

    if (offender) {
      console.warn(reason + '\n    Blame: ' + offender.trim());
    } else {
      console.warn(reason);
    }
  }
}

module.exports = warnDeprecation;

/***/ }),

/***/ "GFpW":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "GGqZ":
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__("E7Vc")(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "GKqq":
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.10 Number.MIN_SAFE_INTEGER
var $export = __webpack_require__("X6VK");

$export($export.S, 'Number', { MIN_SAFE_INTEGER: -0x1fffffffffffff });


/***/ }),

/***/ "GSm6":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create", function() { return create; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromMat4", function() { return fromMat4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clone", function() { return clone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromValues", function() { return fromValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transpose", function() { return transpose; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "invert", function() { return invert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "adjoint", function() { return adjoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "determinant", function() { return determinant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiply", function() { return multiply; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "translate", function() { return translate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotate", function() { return rotate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return scale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromTranslation", function() { return fromTranslation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromRotation", function() { return fromRotation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromScaling", function() { return fromScaling; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromMat2d", function() { return fromMat2d; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromQuat", function() { return fromQuat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalFromMat4", function() { return normalFromMat4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "projection", function() { return projection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "str", function() { return str; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "frob", function() { return frob; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add", function() { return add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subtract", function() { return subtract; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiplyScalar", function() { return multiplyScalar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiplyScalarAndAdd", function() { return multiplyScalarAndAdd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exactEquals", function() { return exactEquals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equals", function() { return equals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mul", function() { return mul; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sub", function() { return sub; });
/* harmony import */ var core_js_modules_es6_math_hypot__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("aaOZ");
/* harmony import */ var core_js_modules_es6_math_hypot__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_math_hypot__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_typed_float32_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("hMok");
/* harmony import */ var core_js_modules_es6_typed_float32_array__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_typed_float32_array__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("yOd+");



/**
 * 3x3 Matrix
 * @module mat3
 */

/**
 * Creates a new identity mat3
 *
 * @returns {mat3} a new 3x3 matrix
 */

function create() {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_2__[/* ARRAY_TYPE */ "a"](9);

  if (_common_js__WEBPACK_IMPORTED_MODULE_2__[/* ARRAY_TYPE */ "a"] != Float32Array) {
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[5] = 0;
    out[6] = 0;
    out[7] = 0;
  }

  out[0] = 1;
  out[4] = 1;
  out[8] = 1;
  return out;
}
/**
 * Copies the upper-left 3x3 values into the given mat3.
 *
 * @param {mat3} out the receiving 3x3 matrix
 * @param {ReadonlyMat4} a   the source 4x4 matrix
 * @returns {mat3} out
 */

function fromMat4(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[4];
  out[4] = a[5];
  out[5] = a[6];
  out[6] = a[8];
  out[7] = a[9];
  out[8] = a[10];
  return out;
}
/**
 * Creates a new mat3 initialized with values from an existing matrix
 *
 * @param {ReadonlyMat3} a matrix to clone
 * @returns {mat3} a new 3x3 matrix
 */

function clone(a) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_2__[/* ARRAY_TYPE */ "a"](9);
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  out[4] = a[4];
  out[5] = a[5];
  out[6] = a[6];
  out[7] = a[7];
  out[8] = a[8];
  return out;
}
/**
 * Copy the values from one mat3 to another
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the source matrix
 * @returns {mat3} out
 */

function copy(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  out[4] = a[4];
  out[5] = a[5];
  out[6] = a[6];
  out[7] = a[7];
  out[8] = a[8];
  return out;
}
/**
 * Create a new mat3 with the given values
 *
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m02 Component in column 0, row 2 position (index 2)
 * @param {Number} m10 Component in column 1, row 0 position (index 3)
 * @param {Number} m11 Component in column 1, row 1 position (index 4)
 * @param {Number} m12 Component in column 1, row 2 position (index 5)
 * @param {Number} m20 Component in column 2, row 0 position (index 6)
 * @param {Number} m21 Component in column 2, row 1 position (index 7)
 * @param {Number} m22 Component in column 2, row 2 position (index 8)
 * @returns {mat3} A new mat3
 */

function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_2__[/* ARRAY_TYPE */ "a"](9);
  out[0] = m00;
  out[1] = m01;
  out[2] = m02;
  out[3] = m10;
  out[4] = m11;
  out[5] = m12;
  out[6] = m20;
  out[7] = m21;
  out[8] = m22;
  return out;
}
/**
 * Set the components of a mat3 to the given values
 *
 * @param {mat3} out the receiving matrix
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m02 Component in column 0, row 2 position (index 2)
 * @param {Number} m10 Component in column 1, row 0 position (index 3)
 * @param {Number} m11 Component in column 1, row 1 position (index 4)
 * @param {Number} m12 Component in column 1, row 2 position (index 5)
 * @param {Number} m20 Component in column 2, row 0 position (index 6)
 * @param {Number} m21 Component in column 2, row 1 position (index 7)
 * @param {Number} m22 Component in column 2, row 2 position (index 8)
 * @returns {mat3} out
 */

function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {
  out[0] = m00;
  out[1] = m01;
  out[2] = m02;
  out[3] = m10;
  out[4] = m11;
  out[5] = m12;
  out[6] = m20;
  out[7] = m21;
  out[8] = m22;
  return out;
}
/**
 * Set a mat3 to the identity matrix
 *
 * @param {mat3} out the receiving matrix
 * @returns {mat3} out
 */

function identity(out) {
  out[0] = 1;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 1;
  out[5] = 0;
  out[6] = 0;
  out[7] = 0;
  out[8] = 1;
  return out;
}
/**
 * Transpose the values of a mat3
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the source matrix
 * @returns {mat3} out
 */

function transpose(out, a) {
  // If we are transposing ourselves we can skip a few steps but have to cache some values
  if (out === a) {
    var a01 = a[1],
        a02 = a[2],
        a12 = a[5];
    out[1] = a[3];
    out[2] = a[6];
    out[3] = a01;
    out[5] = a[7];
    out[6] = a02;
    out[7] = a12;
  } else {
    out[0] = a[0];
    out[1] = a[3];
    out[2] = a[6];
    out[3] = a[1];
    out[4] = a[4];
    out[5] = a[7];
    out[6] = a[2];
    out[7] = a[5];
    out[8] = a[8];
  }

  return out;
}
/**
 * Inverts a mat3
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the source matrix
 * @returns {mat3} out
 */

function invert(out, a) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2];
  var a10 = a[3],
      a11 = a[4],
      a12 = a[5];
  var a20 = a[6],
      a21 = a[7],
      a22 = a[8];
  var b01 = a22 * a11 - a12 * a21;
  var b11 = -a22 * a10 + a12 * a20;
  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant

  var det = a00 * b01 + a01 * b11 + a02 * b21;

  if (!det) {
    return null;
  }

  det = 1.0 / det;
  out[0] = b01 * det;
  out[1] = (-a22 * a01 + a02 * a21) * det;
  out[2] = (a12 * a01 - a02 * a11) * det;
  out[3] = b11 * det;
  out[4] = (a22 * a00 - a02 * a20) * det;
  out[5] = (-a12 * a00 + a02 * a10) * det;
  out[6] = b21 * det;
  out[7] = (-a21 * a00 + a01 * a20) * det;
  out[8] = (a11 * a00 - a01 * a10) * det;
  return out;
}
/**
 * Calculates the adjugate of a mat3
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the source matrix
 * @returns {mat3} out
 */

function adjoint(out, a) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2];
  var a10 = a[3],
      a11 = a[4],
      a12 = a[5];
  var a20 = a[6],
      a21 = a[7],
      a22 = a[8];
  out[0] = a11 * a22 - a12 * a21;
  out[1] = a02 * a21 - a01 * a22;
  out[2] = a01 * a12 - a02 * a11;
  out[3] = a12 * a20 - a10 * a22;
  out[4] = a00 * a22 - a02 * a20;
  out[5] = a02 * a10 - a00 * a12;
  out[6] = a10 * a21 - a11 * a20;
  out[7] = a01 * a20 - a00 * a21;
  out[8] = a00 * a11 - a01 * a10;
  return out;
}
/**
 * Calculates the determinant of a mat3
 *
 * @param {ReadonlyMat3} a the source matrix
 * @returns {Number} determinant of a
 */

function determinant(a) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2];
  var a10 = a[3],
      a11 = a[4],
      a12 = a[5];
  var a20 = a[6],
      a21 = a[7],
      a22 = a[8];
  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);
}
/**
 * Multiplies two mat3's
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the first operand
 * @param {ReadonlyMat3} b the second operand
 * @returns {mat3} out
 */

function multiply(out, a, b) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2];
  var a10 = a[3],
      a11 = a[4],
      a12 = a[5];
  var a20 = a[6],
      a21 = a[7],
      a22 = a[8];
  var b00 = b[0],
      b01 = b[1],
      b02 = b[2];
  var b10 = b[3],
      b11 = b[4],
      b12 = b[5];
  var b20 = b[6],
      b21 = b[7],
      b22 = b[8];
  out[0] = b00 * a00 + b01 * a10 + b02 * a20;
  out[1] = b00 * a01 + b01 * a11 + b02 * a21;
  out[2] = b00 * a02 + b01 * a12 + b02 * a22;
  out[3] = b10 * a00 + b11 * a10 + b12 * a20;
  out[4] = b10 * a01 + b11 * a11 + b12 * a21;
  out[5] = b10 * a02 + b11 * a12 + b12 * a22;
  out[6] = b20 * a00 + b21 * a10 + b22 * a20;
  out[7] = b20 * a01 + b21 * a11 + b22 * a21;
  out[8] = b20 * a02 + b21 * a12 + b22 * a22;
  return out;
}
/**
 * Translate a mat3 by the given vector
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the matrix to translate
 * @param {ReadonlyVec2} v vector to translate by
 * @returns {mat3} out
 */

function translate(out, a, v) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2],
      a10 = a[3],
      a11 = a[4],
      a12 = a[5],
      a20 = a[6],
      a21 = a[7],
      a22 = a[8],
      x = v[0],
      y = v[1];
  out[0] = a00;
  out[1] = a01;
  out[2] = a02;
  out[3] = a10;
  out[4] = a11;
  out[5] = a12;
  out[6] = x * a00 + y * a10 + a20;
  out[7] = x * a01 + y * a11 + a21;
  out[8] = x * a02 + y * a12 + a22;
  return out;
}
/**
 * Rotates a mat3 by the given angle
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat3} out
 */

function rotate(out, a, rad) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2],
      a10 = a[3],
      a11 = a[4],
      a12 = a[5],
      a20 = a[6],
      a21 = a[7],
      a22 = a[8],
      s = Math.sin(rad),
      c = Math.cos(rad);
  out[0] = c * a00 + s * a10;
  out[1] = c * a01 + s * a11;
  out[2] = c * a02 + s * a12;
  out[3] = c * a10 - s * a00;
  out[4] = c * a11 - s * a01;
  out[5] = c * a12 - s * a02;
  out[6] = a20;
  out[7] = a21;
  out[8] = a22;
  return out;
}
/**
 * Scales the mat3 by the dimensions in the given vec2
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the matrix to rotate
 * @param {ReadonlyVec2} v the vec2 to scale the matrix by
 * @returns {mat3} out
 **/

function scale(out, a, v) {
  var x = v[0],
      y = v[1];
  out[0] = x * a[0];
  out[1] = x * a[1];
  out[2] = x * a[2];
  out[3] = y * a[3];
  out[4] = y * a[4];
  out[5] = y * a[5];
  out[6] = a[6];
  out[7] = a[7];
  out[8] = a[8];
  return out;
}
/**
 * Creates a matrix from a vector translation
 * This is equivalent to (but much faster than):
 *
 *     mat3.identity(dest);
 *     mat3.translate(dest, dest, vec);
 *
 * @param {mat3} out mat3 receiving operation result
 * @param {ReadonlyVec2} v Translation vector
 * @returns {mat3} out
 */

function fromTranslation(out, v) {
  out[0] = 1;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 1;
  out[5] = 0;
  out[6] = v[0];
  out[7] = v[1];
  out[8] = 1;
  return out;
}
/**
 * Creates a matrix from a given angle
 * This is equivalent to (but much faster than):
 *
 *     mat3.identity(dest);
 *     mat3.rotate(dest, dest, rad);
 *
 * @param {mat3} out mat3 receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat3} out
 */

function fromRotation(out, rad) {
  var s = Math.sin(rad),
      c = Math.cos(rad);
  out[0] = c;
  out[1] = s;
  out[2] = 0;
  out[3] = -s;
  out[4] = c;
  out[5] = 0;
  out[6] = 0;
  out[7] = 0;
  out[8] = 1;
  return out;
}
/**
 * Creates a matrix from a vector scaling
 * This is equivalent to (but much faster than):
 *
 *     mat3.identity(dest);
 *     mat3.scale(dest, dest, vec);
 *
 * @param {mat3} out mat3 receiving operation result
 * @param {ReadonlyVec2} v Scaling vector
 * @returns {mat3} out
 */

function fromScaling(out, v) {
  out[0] = v[0];
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = v[1];
  out[5] = 0;
  out[6] = 0;
  out[7] = 0;
  out[8] = 1;
  return out;
}
/**
 * Copies the values from a mat2d into a mat3
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat2d} a the matrix to copy
 * @returns {mat3} out
 **/

function fromMat2d(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = 0;
  out[3] = a[2];
  out[4] = a[3];
  out[5] = 0;
  out[6] = a[4];
  out[7] = a[5];
  out[8] = 1;
  return out;
}
/**
 * Calculates a 3x3 matrix from the given quaternion
 *
 * @param {mat3} out mat3 receiving operation result
 * @param {ReadonlyQuat} q Quaternion to create matrix from
 *
 * @returns {mat3} out
 */

function fromQuat(out, q) {
  var x = q[0],
      y = q[1],
      z = q[2],
      w = q[3];
  var x2 = x + x;
  var y2 = y + y;
  var z2 = z + z;
  var xx = x * x2;
  var yx = y * x2;
  var yy = y * y2;
  var zx = z * x2;
  var zy = z * y2;
  var zz = z * z2;
  var wx = w * x2;
  var wy = w * y2;
  var wz = w * z2;
  out[0] = 1 - yy - zz;
  out[3] = yx - wz;
  out[6] = zx + wy;
  out[1] = yx + wz;
  out[4] = 1 - xx - zz;
  out[7] = zy - wx;
  out[2] = zx - wy;
  out[5] = zy + wx;
  out[8] = 1 - xx - yy;
  return out;
}
/**
 * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix
 *
 * @param {mat3} out mat3 receiving operation result
 * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from
 *
 * @returns {mat3} out
 */

function normalFromMat4(out, a) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2],
      a03 = a[3];
  var a10 = a[4],
      a11 = a[5],
      a12 = a[6],
      a13 = a[7];
  var a20 = a[8],
      a21 = a[9],
      a22 = a[10],
      a23 = a[11];
  var a30 = a[12],
      a31 = a[13],
      a32 = a[14],
      a33 = a[15];
  var b00 = a00 * a11 - a01 * a10;
  var b01 = a00 * a12 - a02 * a10;
  var b02 = a00 * a13 - a03 * a10;
  var b03 = a01 * a12 - a02 * a11;
  var b04 = a01 * a13 - a03 * a11;
  var b05 = a02 * a13 - a03 * a12;
  var b06 = a20 * a31 - a21 * a30;
  var b07 = a20 * a32 - a22 * a30;
  var b08 = a20 * a33 - a23 * a30;
  var b09 = a21 * a32 - a22 * a31;
  var b10 = a21 * a33 - a23 * a31;
  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant

  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;

  if (!det) {
    return null;
  }

  det = 1.0 / det;
  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;
  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;
  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;
  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;
  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;
  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;
  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;
  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;
  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;
  return out;
}
/**
 * Generates a 2D projection matrix with the given bounds
 *
 * @param {mat3} out mat3 frustum matrix will be written into
 * @param {number} width Width of your gl context
 * @param {number} height Height of gl context
 * @returns {mat3} out
 */

function projection(out, width, height) {
  out[0] = 2 / width;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = -2 / height;
  out[5] = 0;
  out[6] = -1;
  out[7] = 1;
  out[8] = 1;
  return out;
}
/**
 * Returns a string representation of a mat3
 *
 * @param {ReadonlyMat3} a matrix to represent as a string
 * @returns {String} string representation of the matrix
 */

function str(a) {
  return "mat3(" + a[0] + ", " + a[1] + ", " + a[2] + ", " + a[3] + ", " + a[4] + ", " + a[5] + ", " + a[6] + ", " + a[7] + ", " + a[8] + ")";
}
/**
 * Returns Frobenius norm of a mat3
 *
 * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of
 * @returns {Number} Frobenius norm
 */

function frob(a) {
  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);
}
/**
 * Adds two mat3's
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the first operand
 * @param {ReadonlyMat3} b the second operand
 * @returns {mat3} out
 */

function add(out, a, b) {
  out[0] = a[0] + b[0];
  out[1] = a[1] + b[1];
  out[2] = a[2] + b[2];
  out[3] = a[3] + b[3];
  out[4] = a[4] + b[4];
  out[5] = a[5] + b[5];
  out[6] = a[6] + b[6];
  out[7] = a[7] + b[7];
  out[8] = a[8] + b[8];
  return out;
}
/**
 * Subtracts matrix b from matrix a
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the first operand
 * @param {ReadonlyMat3} b the second operand
 * @returns {mat3} out
 */

function subtract(out, a, b) {
  out[0] = a[0] - b[0];
  out[1] = a[1] - b[1];
  out[2] = a[2] - b[2];
  out[3] = a[3] - b[3];
  out[4] = a[4] - b[4];
  out[5] = a[5] - b[5];
  out[6] = a[6] - b[6];
  out[7] = a[7] - b[7];
  out[8] = a[8] - b[8];
  return out;
}
/**
 * Multiply each element of the matrix by a scalar.
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the matrix to scale
 * @param {Number} b amount to scale the matrix's elements by
 * @returns {mat3} out
 */

function multiplyScalar(out, a, b) {
  out[0] = a[0] * b;
  out[1] = a[1] * b;
  out[2] = a[2] * b;
  out[3] = a[3] * b;
  out[4] = a[4] * b;
  out[5] = a[5] * b;
  out[6] = a[6] * b;
  out[7] = a[7] * b;
  out[8] = a[8] * b;
  return out;
}
/**
 * Adds two mat3's after multiplying each element of the second operand by a scalar value.
 *
 * @param {mat3} out the receiving vector
 * @param {ReadonlyMat3} a the first operand
 * @param {ReadonlyMat3} b the second operand
 * @param {Number} scale the amount to scale b's elements by before adding
 * @returns {mat3} out
 */

function multiplyScalarAndAdd(out, a, b, scale) {
  out[0] = a[0] + b[0] * scale;
  out[1] = a[1] + b[1] * scale;
  out[2] = a[2] + b[2] * scale;
  out[3] = a[3] + b[3] * scale;
  out[4] = a[4] + b[4] * scale;
  out[5] = a[5] + b[5] * scale;
  out[6] = a[6] + b[6] * scale;
  out[7] = a[7] + b[7] * scale;
  out[8] = a[8] + b[8] * scale;
  return out;
}
/**
 * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)
 *
 * @param {ReadonlyMat3} a The first matrix.
 * @param {ReadonlyMat3} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */

function exactEquals(a, b) {
  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];
}
/**
 * Returns whether or not the matrices have approximately the same elements in the same position.
 *
 * @param {ReadonlyMat3} a The first matrix.
 * @param {ReadonlyMat3} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */

function equals(a, b) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3],
      a4 = a[4],
      a5 = a[5],
      a6 = a[6],
      a7 = a[7],
      a8 = a[8];
  var b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3],
      b4 = b[4],
      b5 = b[5],
      b6 = b[6],
      b7 = b[7],
      b8 = b[8];
  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_2__[/* EPSILON */ "b"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_2__[/* EPSILON */ "b"] * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_2__[/* EPSILON */ "b"] * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_2__[/* EPSILON */ "b"] * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _common_js__WEBPACK_IMPORTED_MODULE_2__[/* EPSILON */ "b"] * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _common_js__WEBPACK_IMPORTED_MODULE_2__[/* EPSILON */ "b"] * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= _common_js__WEBPACK_IMPORTED_MODULE_2__[/* EPSILON */ "b"] * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= _common_js__WEBPACK_IMPORTED_MODULE_2__[/* EPSILON */ "b"] * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= _common_js__WEBPACK_IMPORTED_MODULE_2__[/* EPSILON */ "b"] * Math.max(1.0, Math.abs(a8), Math.abs(b8));
}
/**
 * Alias for {@link mat3.multiply}
 * @function
 */

var mul = multiply;
/**
 * Alias for {@link mat3.subtract}
 * @function
 */

var sub = subtract;

/***/ }),

/***/ "GYOe":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // This icon file is generated automatically.

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var RightOutlined = {
  "icon": {
    "tag": "svg",
    "attrs": {
      "viewBox": "64 64 896 896",
      "focusable": "false"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z"
      }
    }]
  },
  "name": "right",
  "theme": "outlined"
};
exports["default"] = RightOutlined;

/***/ }),

/***/ "GdbT":
/***/ (function(module, exports, __webpack_require__) {

// https://tc39.github.io/ecma262/#sec-toindex
var toInteger = __webpack_require__("mvii");
var toLength = __webpack_require__("Sp5b");
module.exports = function (it) {
  if (it === undefined) return 0;
  var number = toInteger(it);
  var length = toLength(number);
  if (number !== length) throw RangeError('Wrong length!');
  return length;
};


/***/ }),

/***/ "GddB":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("asZ9");__webpack_require__("oMRA");__webpack_require__("6d4m");window.g2=__webpack_require__("/7QA").default;// gatsby-browser.js
exports.shouldUpdateScroll=function(_ref){var routerProps=_ref.routerProps,prevRouterProps=_ref.prevRouterProps;if(routerProps.location.hash){return false;}var prevPathname=prevRouterProps.location.pathname;var currentPathname=routerProps.location.pathname;// 演示里的 Tabs 切换，不进行页面滚动
if(prevPathname.includes('/examples/')&&currentPathname.includes('/examples/')){var prevPathes=prevPathname.split('/');var currentPathes=currentPathname.split('/');if(prevPathes.length===currentPathes.length){return prevPathes.slice(0,-1).join('/')!==currentPathes.slice(0,-1).join('/');}var compareLength=Math.min(prevPathes.length,currentPathes.length);return prevPathes.slice(0,compareLength).join('/')!==currentPathes.slice(0,compareLength).join('/');}return true;};

/***/ }),

/***/ "GeWT":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("ABKx");

__webpack_require__("d3/y");

var reactIs = __webpack_require__("xVO4");
/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */


var REACT_STATICS = {
  childContextTypes: true,
  contextType: true,
  contextTypes: true,
  defaultProps: true,
  displayName: true,
  getDefaultProps: true,
  getDerivedStateFromError: true,
  getDerivedStateFromProps: true,
  mixins: true,
  propTypes: true,
  type: true
};
var KNOWN_STATICS = {
  name: true,
  length: true,
  prototype: true,
  caller: true,
  callee: true,
  arguments: true,
  arity: true
};
var FORWARD_REF_STATICS = {
  '$$typeof': true,
  render: true,
  defaultProps: true,
  displayName: true,
  propTypes: true
};
var MEMO_STATICS = {
  '$$typeof': true,
  compare: true,
  defaultProps: true,
  displayName: true,
  propTypes: true,
  type: true
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;

function getStatics(component) {
  // React v16.11 and below
  if (reactIs.isMemo(component)) {
    return MEMO_STATICS;
  } // React v16.12 and above


  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
}

var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = Object.prototype;

function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
  if (typeof sourceComponent !== 'string') {
    // don't hoist over string (html) components
    if (objectPrototype) {
      var inheritedComponent = getPrototypeOf(sourceComponent);

      if (inheritedComponent && inheritedComponent !== objectPrototype) {
        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
      }
    }

    var keys = getOwnPropertyNames(sourceComponent);

    if (getOwnPropertySymbols) {
      keys = keys.concat(getOwnPropertySymbols(sourceComponent));
    }

    var targetStatics = getStatics(targetComponent);
    var sourceStatics = getStatics(sourceComponent);

    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];

      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

        try {
          // Avoid failures from read-only properties
          defineProperty(targetComponent, key, descriptor);
        } catch (e) {}
      }
    }
  }

  return targetComponent;
}

module.exports = hoistNonReactStatics;

/***/ }),

/***/ "GgH8":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("V7cS");

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

function removeFromArray(arr, obj) {
  var index = arr.indexOf(obj);

  if (index !== -1) {
    arr.splice(index, 1);
  }
}

exports.removeFromArray = removeFromArray;
exports.isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';

var is_nil_1 = __webpack_require__("SS24");

exports.isNil = is_nil_1["default"];

var is_function_1 = __webpack_require__("joUm");

exports.isFunction = is_function_1["default"];

var is_string_1 = __webpack_require__("bLny");

exports.isString = is_string_1["default"];

var is_object_1 = __webpack_require__("JN4+");

exports.isObject = is_object_1["default"];

var is_array_1 = __webpack_require__("QAqn");

exports.isArray = is_array_1["default"];

var mix_1 = __webpack_require__("hjsu");

exports.mix = mix_1["default"];

var each_1 = __webpack_require__("mU+h");

exports.each = each_1["default"];

var upper_first_1 = __webpack_require__("tR8E");

exports.upperFirst = upper_first_1["default"]; // 是否元素的父容器

function isParent(container, shape) {
  // 所有 shape 都是 canvas 的子元素
  if (container.isCanvas()) {
    return true;
  }

  var parent = shape.getParent();
  var isParent = false;

  while (parent) {
    if (parent === container) {
      isParent = true;
      break;
    }

    parent = parent.getParent();
  }

  return isParent;
}

exports.isParent = isParent;

function isAllowCapture(element) {
  // @ts-ignore
  return element.cfg.visible && element.cfg.capture;
}

exports.isAllowCapture = isAllowCapture;

/***/ }),

/***/ "GkPX":
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__("U1KF").f;
var FProto = Function.prototype;
var nameRE = /^\s*function ([^ (]*)/;
var NAME = 'name';

// 19.2.4.2 name
NAME in FProto || __webpack_require__("GGqZ") && dP(FProto, NAME, {
  configurable: true,
  get: function () {
    try {
      return ('' + this).match(nameRE)[1];
    } catch (e) {
      return '';
    }
  }
});


/***/ }),

/***/ "Gv0X":
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.3 Number.isInteger(number)
var $export = __webpack_require__("X6VK");

$export($export.S, 'Number', { isInteger: __webpack_require__("xI3J") });


/***/ }),

/***/ "Gv4w":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("V7cS");

var equals = __webpack_require__("LGMZ");

module.exports = function _indexOf(list, a, idx) {
  var inf, item; // Array.prototype.indexOf doesn't exist below IE9

  if (typeof list.indexOf === 'function') {
    switch (typeof a) {
      case 'number':
        if (a === 0) {
          // manually crawl the list to distinguish between +0 and -0
          inf = 1 / a;

          while (idx < list.length) {
            item = list[idx];

            if (item === 0 && 1 / item === inf) {
              return idx;
            }

            idx += 1;
          }

          return -1;
        } else if (a !== a) {
          // NaN
          while (idx < list.length) {
            item = list[idx];

            if (typeof item === 'number' && item !== item) {
              return idx;
            }

            idx += 1;
          }

          return -1;
        } // non-zero numbers can utilise Set


        return list.indexOf(a, idx);
      // all these types can utilise Set

      case 'string':
      case 'boolean':
      case 'function':
      case 'undefined':
        return list.indexOf(a, idx);

      case 'object':
        if (a === null) {
          // null can utilise Set
          return list.indexOf(a, idx);
        }

    }
  } // anything else not covered above, defer to R.equals


  while (idx < list.length) {
    if (equals(list[idx], a)) {
      return idx;
    }

    idx += 1;
  }

  return -1;
};

/***/ }),

/***/ "GwS+":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("4aJ6");

__webpack_require__("M/4x");

__webpack_require__("t91x");

__webpack_require__("+3V6");

/**
 * Tests whether or not an object is an array.
 *
 * @private
 * @param {*} val The object to test.
 * @return {Boolean} `true` if `val` is an array, `false` otherwise.
 * @example
 *
 *      _isArray([]); //=> true
 *      _isArray(null); //=> false
 *      _isArray({}); //=> false
 */
module.exports = Array.isArray || function _isArray(val) {
  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';
};

/***/ }),

/***/ "H/jw":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return getShortenOffset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return addStartArrow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return addEndArrow; });
/* harmony import */ var core_js_modules_es6_array_fill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("IKQL");
/* harmony import */ var core_js_modules_es6_array_fill__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_fill__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("bb6g");
/* harmony import */ var _shape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("FjZ0");



var sin = Math.sin,
    cos = Math.cos,
    atan2 = Math.atan2,
    PI = Math.PI;

function _addDefaultArrow(shape, attrs, x1, y1, x2, y2, isStart) {
  var stroke = attrs.stroke,
      lineWidth = attrs.lineWidth;
  var x = x1 - x2;
  var y = y1 - y2;
  var rad = atan2(y, x);
  var arrowShape = new _shape__WEBPACK_IMPORTED_MODULE_2__["Path"]({
    type: 'path',
    canvas: shape.get('canvas'),
    isArrowShape: true,
    attrs: {
      // 默认箭头的边长为 10，夹角为 60 度
      path: "M" + 10 * cos(PI / 6) + "," + 10 * sin(PI / 6) + " L0,0 L" + 10 * cos(PI / 6) + ",-" + 10 * sin(PI / 6),
      // 使用 shape stroke 值
      stroke: stroke,
      lineWidth: lineWidth
    }
  });
  arrowShape.translate(x2, y2);
  arrowShape.rotateAtPoint(x2, y2, rad);
  shape.set(isStart ? 'startArrowShape' : 'endArrowShape', arrowShape);
}
/**
 * 箭头 path 的设置要求
 * 1. 箭头顶点坐标需要为 (0, 0)
 * 2. 箭头夹角的中心分割线需要与 X 轴正方向对齐
 */


function _addCustomizedArrow(shape, attrs, x1, y1, x2, y2, isStart) {
  var startArrow = attrs.startArrow,
      endArrow = attrs.endArrow,
      stroke = attrs.stroke,
      lineWidth = attrs.lineWidth;
  var arrowAttrs = isStart ? startArrow : endArrow;

  var d = arrowAttrs.d,
      arrowFill = arrowAttrs.fill,
      arrowStroke = arrowAttrs.stroke,
      arrowLineWidth = arrowAttrs.lineWidth,
      restAttrs = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__rest"])(arrowAttrs, ["d", "fill", "stroke", "lineWidth"]);

  var x = x1 - x2;
  var y = y1 - y2;
  var rad = atan2(y, x);

  if (d) {
    x2 = x2 - cos(rad) * d;
    y2 = y2 - sin(rad) * d;
  }

  var arrowShape = new _shape__WEBPACK_IMPORTED_MODULE_2__["Path"]({
    type: 'path',
    canvas: shape.get('canvas'),
    isArrowShape: true,
    attrs: Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])({}, restAttrs), {
      // 支持单独设置箭头的 stroke 和 lineWidth，若为空则使用 shape 的值
      stroke: arrowStroke || stroke,
      lineWidth: arrowLineWidth || lineWidth,
      // 箭头是否填充需要手动设置，不会继承自 shape 的值
      fill: arrowFill
    })
  });
  arrowShape.translate(x2, y2);
  arrowShape.rotateAtPoint(x2, y2, rad);
  shape.set(isStart ? 'startArrowShape' : 'endArrowShape', arrowShape);
}
/**
 * 如果自定义箭头并且有 d 需要做偏移，如果直接画，线条会超出箭头尖端，因此需要根据箭头偏移 d, 返回线需要缩短的距离
 * |----------------
 * |<|--------------
 * |
 * @param {number} x1 起始点 x
 * @param {number} y1 起始点 y
 * @param {number} x2 箭头作用点 x
 * @param {number} y2 箭头作用点 y
 * @param {number} d  箭头沿线条方向的偏移距离
 * @return {{dx: number, dy: number}} 返回线条偏移距离
 */


function getShortenOffset(x1, y1, x2, y2, d) {
  var rad = atan2(y2 - y1, x2 - x1);
  return {
    dx: cos(rad) * d,
    dy: sin(rad) * d
  };
}
/**
 * 绘制起始箭头
 * @param {IShape} shape 图形
 * @param {ShapeAttrs} attrs shape 的绘图属性
 * @param {number} x1 起始点 x
 * @param {number} y1 起始点 y
 * @param {number} x2 箭头作用点 x
 * @param {number} y2 箭头作用点 y
 */

function addStartArrow(shape, attrs, x1, y1, x2, y2) {
  if (typeof attrs.startArrow === 'object') {
    _addCustomizedArrow(shape, attrs, x1, y1, x2, y2, true);
  } else if (attrs.startArrow) {
    _addDefaultArrow(shape, attrs, x1, y1, x2, y2, true);
  } else {
    shape.set('startArrowShape', null);
  }
}
/**
 * 绘制结束箭头
 * @param {IShape} shape 图形
 * @param {ShapeAttrs} attrs shape 的绘图属性
 * @param {number} x1 起始点 x
 * @param {number} y1 起始点 y
 * @param {number} x2 箭头作用点 x
 * @param {number} y2 箭头作用点 y
 */

function addEndArrow(shape, attrs, x1, y1, x2, y2) {
  if (typeof attrs.endArrow === 'object') {
    _addCustomizedArrow(shape, attrs, x1, y1, x2, y2, false);
  } else if (attrs.endArrow) {
    _addDefaultArrow(shape, attrs, x1, y1, x2, y2, false);
  } else {
    shape.set('startArrowShape', null);
  }
}

/***/ }),

/***/ "H4M2":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _button__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("G2Ca");

/* harmony default export */ __webpack_exports__["a"] = (_button__WEBPACK_IMPORTED_MODULE_0__[/* default */ "b"]);

/***/ }),

/***/ "H4Zb":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

function minNum(array) {
  return Math.min.apply(null, array);
}

function maxNum(array) {
  return Math.max.apply(null, array);
}
/**
 * 两点之间的距离
 * @param {number} x1 起始点 x
 * @param {number} y1 起始点 y
 * @param {number} x2 结束点 x
 * @param {number} y2 结束点 y
 * @return {number} 距离
 */


function distance(x1, y1, x2, y2) {
  var dx = x1 - x2;
  var dy = y1 - y2;
  return Math.sqrt(dx * dx + dy * dy);
}

exports.distance = distance;

function isNumberEqual(v1, v2) {
  return Math.abs(v1 - v2) < 0.001;
}

exports.isNumberEqual = isNumberEqual;

function getBBoxByArray(xArr, yArr) {
  var minX = minNum(xArr);
  var minY = minNum(yArr);
  var maxX = maxNum(xArr);
  var maxY = maxNum(yArr);
  return {
    x: minX,
    y: minY,
    width: maxX - minX,
    height: maxY - minY
  };
}

exports.getBBoxByArray = getBBoxByArray;

function getBBoxRange(x1, y1, x2, y2) {
  return {
    minX: minNum([x1, x2]),
    maxX: maxNum([x1, x2]),
    minY: minNum([y1, y2]),
    maxY: maxNum([y1, y2])
  };
}

exports.getBBoxRange = getBBoxRange;

function piMod(angle) {
  return (angle + Math.PI * 2) % (Math.PI * 2);
}

exports.piMod = piMod;

/***/ }),

/***/ "H8M3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("9p7t");

__webpack_require__("Z8gF");

__webpack_require__("asZ9");

__webpack_require__("yIlq");

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _not = __webpack_require__("kFsC");

var _not2 = _interopRequireDefault(_not);

var _head = __webpack_require__("4SiD");

var _head2 = _interopRequireDefault(_head);

var _isNil = __webpack_require__("CL0D");

var _isNil2 = _interopRequireDefault(_isNil);

var _curry = __webpack_require__("NU6T");

var _curry2 = _interopRequireDefault(_curry);

var _compose = __webpack_require__("+yb+");

var _compose2 = _interopRequireDefault(_compose);

var _endsWith = __webpack_require__("hV/m");

var _endsWith2 = _interopRequireDefault(_endsWith);

var _startsWith = __webpack_require__("cpHF");

var _startsWith2 = _interopRequireDefault(_startsWith);

var _index = __webpack_require__("wc+d");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

var defaultPagesPaths = ['/src/pages/'];

var getPagesPaths = function getPagesPaths(options) {
  return options && options.pagesPaths || defaultPagesPaths;
};

var getLangKeyDefault = function getLangKeyDefault(options) {
  return options && options.langKeyDefault || options;
};

var addSlashStart = function addSlashStart(fileName) {
  return (0, _startsWith2["default"])('/', fileName) ? fileName : '/' + fileName;
};

var addSlashEnd = function addSlashEnd(fileName) {
  return (0, _endsWith2["default"])('/', fileName) ? fileName : fileName + '/';
};

var addSlash = (0, _compose2["default"])(addSlashStart, addSlashEnd);
/**
 * Get slug (path) and langKey for a given file path.
 *
 * Used by gatsby-plugin-i18n and gatsby-plugin-i18n-tags
 *
 * @param {{langKeyDefault: string, pagesPaths: string[], prefixDefault: boolean }} options plugin options
 * @param {String} fileAbsolutePath local file absolute path
 * @return {{slug: string, langKey: string, redirectTo: string}} slug and langKey
 */

var getSlugAndLang = (0, _curry2["default"])(function (options, fileAbsolutePath) {
  var slugsAndLangs = getPagesPaths(options).map(function (pagesPath) {
    var filePath = ('safeStartToSplit-' + fileAbsolutePath).split(pagesPath)[1];

    if ((0, _isNil2["default"])(filePath)) {
      return null;
    }

    var langKeyDefault = getLangKeyDefault(options);
    var fileName = filePath.split('.');
    var langKey = fileName.length === 3 ? fileName[1] : langKeyDefault;
    var title = addSlash(fileName[0].replace('index', ''));
    var slug = fileName.length === 3 ? (0, _index.addLangKeyToSlug)(title, langKey, options) : title;
    return {
      slug: slug,
      langKey: langKey,
      redirectTo: slug === '/' ? addSlash(langKeyDefault) : null
    };
  });
  return (0, _head2["default"])(slugsAndLangs.filter((0, _compose2["default"])(_not2["default"], _isNil2["default"])));
});
exports["default"] = getSlugAndLang;

/***/ }),

/***/ "HAof":
/***/ (function(module, exports, __webpack_require__) {

// CodeMirror, copyright (c) by Marijn Haverbeke and others
// Distributed under an MIT license: https://codemirror.net/LICENSE
(function (mod) {
  if (true) // CommonJS
    mod(__webpack_require__("Dln1"), __webpack_require__("rpsq"), __webpack_require__("2y5g"));else {}
})(function (CodeMirror) {
  "use strict";

  CodeMirror.defineMode("htmlembedded", function (config, parserConfig) {
    var closeComment = parserConfig.closeComment || "--%>";
    return CodeMirror.multiplexingMode(CodeMirror.getMode(config, "htmlmixed"), {
      open: parserConfig.openComment || "<%--",
      close: closeComment,
      delimStyle: "comment",
      mode: {
        token: function token(stream) {
          stream.skipTo(closeComment) || stream.skipToEnd();
          return "comment";
        }
      }
    }, {
      open: parserConfig.open || parserConfig.scriptStartRegex || "<%",
      close: parserConfig.close || parserConfig.scriptEndRegex || "%>",
      mode: CodeMirror.getMode(config, parserConfig.scriptingModeSpec)
    });
  }, "htmlmixed");
  CodeMirror.defineMIME("application/x-ejs", {
    name: "htmlembedded",
    scriptingModeSpec: "javascript"
  });
  CodeMirror.defineMIME("application/x-aspx", {
    name: "htmlembedded",
    scriptingModeSpec: "text/x-csharp"
  });
  CodeMirror.defineMIME("application/x-jsp", {
    name: "htmlembedded",
    scriptingModeSpec: "text/x-java"
  });
  CodeMirror.defineMIME("application/x-erb", {
    name: "htmlembedded",
    scriptingModeSpec: "ruby"
  });
});

/***/ }),

/***/ "HApA":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.warning = warning;
exports.note = note;
exports.resetWarned = resetWarned;
exports.call = call;
exports.warningOnce = warningOnce;
exports.noteOnce = noteOnce;
exports["default"] = void 0;
/* eslint-disable no-console */

var warned = {};

function warning(valid, message) {
  // Support uglify
  if (false) {}
}

function note(valid, message) {
  // Support uglify
  if (false) {}
}

function resetWarned() {
  warned = {};
}

function call(method, valid, message) {
  if (!valid && !warned[message]) {
    method(false, message);
    warned[message] = true;
  }
}

function warningOnce(valid, message) {
  call(warning, valid, message);
}

function noteOnce(valid, message) {
  call(note, valid, message);
}

var _default = warningOnce;
/* eslint-enable */

exports["default"] = _default;

/***/ }),

/***/ "HCJm":
/***/ (function(module, exports, __webpack_require__) {

var _curry2 = __webpack_require__("OFPg");

var _isString = __webpack_require__("74ju");
/**
 * Returns the nth element of the given list or string. If n is negative the
 * element at index length + n is returned.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig Number -> [a] -> a | Undefined
 * @sig Number -> String -> String
 * @param {Number} offset
 * @param {*} list
 * @return {*}
 * @example
 *
 *      var list = ['foo', 'bar', 'baz', 'quux'];
 *      R.nth(1, list); //=> 'bar'
 *      R.nth(-1, list); //=> 'quux'
 *      R.nth(-99, list); //=> undefined
 *
 *      R.nth(2, 'abc'); //=> 'c'
 *      R.nth(3, 'abc'); //=> ''
 * @symb R.nth(-1, [a, b, c]) = c
 * @symb R.nth(0, [a, b, c]) = a
 * @symb R.nth(1, [a, b, c]) = b
 */


module.exports = _curry2(function nth(offset, list) {
  var idx = offset < 0 ? list.length + offset : offset;
  return _isString(list) ? list.charAt(idx) : list[idx];
});

/***/ }),

/***/ "HD3J":
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),

/***/ "HWsP":
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__("GGqZ") && !__webpack_require__("E7Vc")(function () {
  return Object.defineProperty(__webpack_require__("mggL")('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "Hb9A":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // This icon file is generated automatically.

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var CloseOutlined = {
  "icon": {
    "tag": "svg",
    "attrs": {
      "viewBox": "64 64 896 896",
      "focusable": "false"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
      }
    }]
  },
  "name": "close",
  "theme": "outlined"
};
exports["default"] = CloseOutlined;

/***/ }),

/***/ "HbTz":
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__("fGh/");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "Hd5E":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var rc_util_es_warning__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("IFhY");


/* harmony default export */ __webpack_exports__["a"] = (function (valid, component, message) {
  Object(rc_util_es_warning__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(valid, "[antd: ".concat(component, "] ").concat(message));
});

/***/ }),

/***/ "HqX2":
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__("9liC");
var call = __webpack_require__("iJnn");
var isArrayIter = __webpack_require__("2LOZ");
var anObject = __webpack_require__("PAFS");
var toLength = __webpack_require__("Sp5b");
var getIterFn = __webpack_require__("pB2m");
var BREAK = {};
var RETURN = {};
var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;


/***/ }),

/***/ "Hrl7":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HelmetExport; });
/* harmony import */ var core_js_modules_es6_array_some__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("VNvs");
/* harmony import */ var core_js_modules_es6_array_some__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_some__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("asZ9");
/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es6_function_bind__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("o7PZ");
/* harmony import */ var core_js_modules_es6_function_bind__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_function_bind__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es6_date_now__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("7t+O");
/* harmony import */ var core_js_modules_es6_date_now__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_date_now__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es6_array_for_each__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("7lGJ");
/* harmony import */ var core_js_modules_es6_array_for_each__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_for_each__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es6_array_filter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("9p7t");
/* harmony import */ var core_js_modules_es6_array_filter__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_filter__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es6_array_is_array__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("+3V6");
/* harmony import */ var core_js_modules_es6_array_is_array__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_is_array__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("Z8gF");
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es6_array_index_of__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("V7cS");
/* harmony import */ var core_js_modules_es6_array_index_of__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_index_of__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es6_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("1qKx");
/* harmony import */ var core_js_modules_es6_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_es6_object_create__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("PAbq");
/* harmony import */ var core_js_modules_es6_object_create__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_create__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("5hJT");
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("d3/y");
/* harmony import */ var core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("+jjx");
/* harmony import */ var core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__("ABKx");
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var core_js_modules_es6_array_reduce__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__("3y5y");
/* harmony import */ var core_js_modules_es6_array_reduce__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_reduce__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__("W1QL");
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var core_js_modules_es6_array_iterator__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__("K/PF");
/* harmony import */ var core_js_modules_es6_array_iterator__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_iterator__WEBPACK_IMPORTED_MODULE_17__);
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__("t91x");
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_18__);
/* harmony import */ var core_js_modules_es6_object_keys__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__("75LO");
/* harmony import */ var core_js_modules_es6_object_keys__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_keys__WEBPACK_IMPORTED_MODULE_19__);
/* harmony import */ var core_js_modules_es6_array_map__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__("yIlq");
/* harmony import */ var core_js_modules_es6_array_map__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_map__WEBPACK_IMPORTED_MODULE_20__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__("W0B4");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_21__);
/* harmony import */ var react_side_effect__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__("WiT8");
/* harmony import */ var react_side_effect__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(react_side_effect__WEBPACK_IMPORTED_MODULE_22__);
/* harmony import */ var react_fast_compare__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__("2Hgx");
/* harmony import */ var react_fast_compare__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(react_fast_compare__WEBPACK_IMPORTED_MODULE_23__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__("mXGw");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_24__);
/* harmony import */ var object_assign__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__("IL7q");
/* harmony import */ var object_assign__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(object_assign__WEBPACK_IMPORTED_MODULE_25__);


























var ATTRIBUTE_NAMES = {
  BODY: "bodyAttributes",
  HTML: "htmlAttributes",
  TITLE: "titleAttributes"
};
var TAG_NAMES = {
  BASE: "base",
  BODY: "body",
  HEAD: "head",
  HTML: "html",
  LINK: "link",
  META: "meta",
  NOSCRIPT: "noscript",
  SCRIPT: "script",
  STYLE: "style",
  TITLE: "title"
};
var VALID_TAG_NAMES = Object.keys(TAG_NAMES).map(function (name) {
  return TAG_NAMES[name];
});
var TAG_PROPERTIES = {
  CHARSET: "charset",
  CSS_TEXT: "cssText",
  HREF: "href",
  HTTPEQUIV: "http-equiv",
  INNER_HTML: "innerHTML",
  ITEM_PROP: "itemprop",
  NAME: "name",
  PROPERTY: "property",
  REL: "rel",
  SRC: "src",
  TARGET: "target"
};
var REACT_TAG_MAP = {
  accesskey: "accessKey",
  charset: "charSet",
  "class": "className",
  contenteditable: "contentEditable",
  contextmenu: "contextMenu",
  "http-equiv": "httpEquiv",
  itemprop: "itemProp",
  tabindex: "tabIndex"
};
var HELMET_PROPS = {
  DEFAULT_TITLE: "defaultTitle",
  DEFER: "defer",
  ENCODE_SPECIAL_CHARACTERS: "encodeSpecialCharacters",
  ON_CHANGE_CLIENT_STATE: "onChangeClientState",
  TITLE_TEMPLATE: "titleTemplate"
};
var HTML_TAG_MAP = Object.keys(REACT_TAG_MAP).reduce(function (obj, key) {
  obj[REACT_TAG_MAP[key]] = key;
  return obj;
}, {});
var SELF_CLOSING_TAGS = [TAG_NAMES.NOSCRIPT, TAG_NAMES.SCRIPT, TAG_NAMES.STYLE];
var HELMET_ATTRIBUTE = "data-react-helmet";

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
};

var classCallCheck = function classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var inherits = function inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};

var objectWithoutProperties = function objectWithoutProperties(obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
};

var possibleConstructorReturn = function possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};

var encodeSpecialCharacters = function encodeSpecialCharacters(str) {
  var encode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

  if (encode === false) {
    return String(str);
  }

  return String(str).replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#x27;");
};

var getTitleFromPropsList = function getTitleFromPropsList(propsList) {
  var innermostTitle = getInnermostProperty(propsList, TAG_NAMES.TITLE);
  var innermostTemplate = getInnermostProperty(propsList, HELMET_PROPS.TITLE_TEMPLATE);

  if (innermostTemplate && innermostTitle) {
    // use function arg to avoid need to escape $ characters
    return innermostTemplate.replace(/%s/g, function () {
      return Array.isArray(innermostTitle) ? innermostTitle.join("") : innermostTitle;
    });
  }

  var innermostDefaultTitle = getInnermostProperty(propsList, HELMET_PROPS.DEFAULT_TITLE);
  return innermostTitle || innermostDefaultTitle || undefined;
};

var getOnChangeClientState = function getOnChangeClientState(propsList) {
  return getInnermostProperty(propsList, HELMET_PROPS.ON_CHANGE_CLIENT_STATE) || function () {};
};

var getAttributesFromPropsList = function getAttributesFromPropsList(tagType, propsList) {
  return propsList.filter(function (props) {
    return typeof props[tagType] !== "undefined";
  }).map(function (props) {
    return props[tagType];
  }).reduce(function (tagAttrs, current) {
    return _extends({}, tagAttrs, current);
  }, {});
};

var getBaseTagFromPropsList = function getBaseTagFromPropsList(primaryAttributes, propsList) {
  return propsList.filter(function (props) {
    return typeof props[TAG_NAMES.BASE] !== "undefined";
  }).map(function (props) {
    return props[TAG_NAMES.BASE];
  }).reverse().reduce(function (innermostBaseTag, tag) {
    if (!innermostBaseTag.length) {
      var keys = Object.keys(tag);

      for (var i = 0; i < keys.length; i++) {
        var attributeKey = keys[i];
        var lowerCaseAttributeKey = attributeKey.toLowerCase();

        if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && tag[lowerCaseAttributeKey]) {
          return innermostBaseTag.concat(tag);
        }
      }
    }

    return innermostBaseTag;
  }, []);
};

var getTagsFromPropsList = function getTagsFromPropsList(tagName, primaryAttributes, propsList) {
  // Calculate list of tags, giving priority innermost component (end of the propslist)
  var approvedSeenTags = {};
  return propsList.filter(function (props) {
    if (Array.isArray(props[tagName])) {
      return true;
    }

    if (typeof props[tagName] !== "undefined") {
      warn("Helmet: " + tagName + " should be of type \"Array\". Instead found type \"" + _typeof(props[tagName]) + "\"");
    }

    return false;
  }).map(function (props) {
    return props[tagName];
  }).reverse().reduce(function (approvedTags, instanceTags) {
    var instanceSeenTags = {};
    instanceTags.filter(function (tag) {
      var primaryAttributeKey = void 0;
      var keys = Object.keys(tag);

      for (var i = 0; i < keys.length; i++) {
        var attributeKey = keys[i];
        var lowerCaseAttributeKey = attributeKey.toLowerCase(); // Special rule with link tags, since rel and href are both primary tags, rel takes priority

        if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && !(primaryAttributeKey === TAG_PROPERTIES.REL && tag[primaryAttributeKey].toLowerCase() === "canonical") && !(lowerCaseAttributeKey === TAG_PROPERTIES.REL && tag[lowerCaseAttributeKey].toLowerCase() === "stylesheet")) {
          primaryAttributeKey = lowerCaseAttributeKey;
        } // Special case for innerHTML which doesn't work lowercased


        if (primaryAttributes.indexOf(attributeKey) !== -1 && (attributeKey === TAG_PROPERTIES.INNER_HTML || attributeKey === TAG_PROPERTIES.CSS_TEXT || attributeKey === TAG_PROPERTIES.ITEM_PROP)) {
          primaryAttributeKey = attributeKey;
        }
      }

      if (!primaryAttributeKey || !tag[primaryAttributeKey]) {
        return false;
      }

      var value = tag[primaryAttributeKey].toLowerCase();

      if (!approvedSeenTags[primaryAttributeKey]) {
        approvedSeenTags[primaryAttributeKey] = {};
      }

      if (!instanceSeenTags[primaryAttributeKey]) {
        instanceSeenTags[primaryAttributeKey] = {};
      }

      if (!approvedSeenTags[primaryAttributeKey][value]) {
        instanceSeenTags[primaryAttributeKey][value] = true;
        return true;
      }

      return false;
    }).reverse().forEach(function (tag) {
      return approvedTags.push(tag);
    }); // Update seen tags with tags from this instance

    var keys = Object.keys(instanceSeenTags);

    for (var i = 0; i < keys.length; i++) {
      var attributeKey = keys[i];
      var tagUnion = object_assign__WEBPACK_IMPORTED_MODULE_25___default()({}, approvedSeenTags[attributeKey], instanceSeenTags[attributeKey]);
      approvedSeenTags[attributeKey] = tagUnion;
    }

    return approvedTags;
  }, []).reverse();
};

var getInnermostProperty = function getInnermostProperty(propsList, property) {
  for (var i = propsList.length - 1; i >= 0; i--) {
    var props = propsList[i];

    if (props.hasOwnProperty(property)) {
      return props[property];
    }
  }

  return null;
};

var reducePropsToState = function reducePropsToState(propsList) {
  return {
    baseTag: getBaseTagFromPropsList([TAG_PROPERTIES.HREF, TAG_PROPERTIES.TARGET], propsList),
    bodyAttributes: getAttributesFromPropsList(ATTRIBUTE_NAMES.BODY, propsList),
    defer: getInnermostProperty(propsList, HELMET_PROPS.DEFER),
    encode: getInnermostProperty(propsList, HELMET_PROPS.ENCODE_SPECIAL_CHARACTERS),
    htmlAttributes: getAttributesFromPropsList(ATTRIBUTE_NAMES.HTML, propsList),
    linkTags: getTagsFromPropsList(TAG_NAMES.LINK, [TAG_PROPERTIES.REL, TAG_PROPERTIES.HREF], propsList),
    metaTags: getTagsFromPropsList(TAG_NAMES.META, [TAG_PROPERTIES.NAME, TAG_PROPERTIES.CHARSET, TAG_PROPERTIES.HTTPEQUIV, TAG_PROPERTIES.PROPERTY, TAG_PROPERTIES.ITEM_PROP], propsList),
    noscriptTags: getTagsFromPropsList(TAG_NAMES.NOSCRIPT, [TAG_PROPERTIES.INNER_HTML], propsList),
    onChangeClientState: getOnChangeClientState(propsList),
    scriptTags: getTagsFromPropsList(TAG_NAMES.SCRIPT, [TAG_PROPERTIES.SRC, TAG_PROPERTIES.INNER_HTML], propsList),
    styleTags: getTagsFromPropsList(TAG_NAMES.STYLE, [TAG_PROPERTIES.CSS_TEXT], propsList),
    title: getTitleFromPropsList(propsList),
    titleAttributes: getAttributesFromPropsList(ATTRIBUTE_NAMES.TITLE, propsList)
  };
};

var rafPolyfill = function () {
  var clock = Date.now();
  return function (callback) {
    var currentTime = Date.now();

    if (currentTime - clock > 16) {
      clock = currentTime;
      callback(currentTime);
    } else {
      setTimeout(function () {
        rafPolyfill(callback);
      }, 0);
    }
  };
}();

var cafPolyfill = function cafPolyfill(id) {
  return clearTimeout(id);
};

var requestAnimationFrame = typeof window !== "undefined" ? window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || rafPolyfill : global.requestAnimationFrame || rafPolyfill;
var cancelAnimationFrame = typeof window !== "undefined" ? window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || cafPolyfill : global.cancelAnimationFrame || cafPolyfill;

var warn = function warn(msg) {
  return console && typeof console.warn === "function" && console.warn(msg);
};

var _helmetCallback = null;

var handleClientStateChange = function handleClientStateChange(newState) {
  if (_helmetCallback) {
    cancelAnimationFrame(_helmetCallback);
  }

  if (newState.defer) {
    _helmetCallback = requestAnimationFrame(function () {
      commitTagChanges(newState, function () {
        _helmetCallback = null;
      });
    });
  } else {
    commitTagChanges(newState);
    _helmetCallback = null;
  }
};

var commitTagChanges = function commitTagChanges(newState, cb) {
  var baseTag = newState.baseTag,
      bodyAttributes = newState.bodyAttributes,
      htmlAttributes = newState.htmlAttributes,
      linkTags = newState.linkTags,
      metaTags = newState.metaTags,
      noscriptTags = newState.noscriptTags,
      onChangeClientState = newState.onChangeClientState,
      scriptTags = newState.scriptTags,
      styleTags = newState.styleTags,
      title = newState.title,
      titleAttributes = newState.titleAttributes;
  updateAttributes(TAG_NAMES.BODY, bodyAttributes);
  updateAttributes(TAG_NAMES.HTML, htmlAttributes);
  updateTitle(title, titleAttributes);
  var tagUpdates = {
    baseTag: updateTags(TAG_NAMES.BASE, baseTag),
    linkTags: updateTags(TAG_NAMES.LINK, linkTags),
    metaTags: updateTags(TAG_NAMES.META, metaTags),
    noscriptTags: updateTags(TAG_NAMES.NOSCRIPT, noscriptTags),
    scriptTags: updateTags(TAG_NAMES.SCRIPT, scriptTags),
    styleTags: updateTags(TAG_NAMES.STYLE, styleTags)
  };
  var addedTags = {};
  var removedTags = {};
  Object.keys(tagUpdates).forEach(function (tagType) {
    var _tagUpdates$tagType = tagUpdates[tagType],
        newTags = _tagUpdates$tagType.newTags,
        oldTags = _tagUpdates$tagType.oldTags;

    if (newTags.length) {
      addedTags[tagType] = newTags;
    }

    if (oldTags.length) {
      removedTags[tagType] = tagUpdates[tagType].oldTags;
    }
  });
  cb && cb();
  onChangeClientState(newState, addedTags, removedTags);
};

var flattenArray = function flattenArray(possibleArray) {
  return Array.isArray(possibleArray) ? possibleArray.join("") : possibleArray;
};

var updateTitle = function updateTitle(title, attributes) {
  if (typeof title !== "undefined" && document.title !== title) {
    document.title = flattenArray(title);
  }

  updateAttributes(TAG_NAMES.TITLE, attributes);
};

var updateAttributes = function updateAttributes(tagName, attributes) {
  var elementTag = document.getElementsByTagName(tagName)[0];

  if (!elementTag) {
    return;
  }

  var helmetAttributeString = elementTag.getAttribute(HELMET_ATTRIBUTE);
  var helmetAttributes = helmetAttributeString ? helmetAttributeString.split(",") : [];
  var attributesToRemove = [].concat(helmetAttributes);
  var attributeKeys = Object.keys(attributes);

  for (var i = 0; i < attributeKeys.length; i++) {
    var attribute = attributeKeys[i];
    var value = attributes[attribute] || "";

    if (elementTag.getAttribute(attribute) !== value) {
      elementTag.setAttribute(attribute, value);
    }

    if (helmetAttributes.indexOf(attribute) === -1) {
      helmetAttributes.push(attribute);
    }

    var indexToSave = attributesToRemove.indexOf(attribute);

    if (indexToSave !== -1) {
      attributesToRemove.splice(indexToSave, 1);
    }
  }

  for (var _i = attributesToRemove.length - 1; _i >= 0; _i--) {
    elementTag.removeAttribute(attributesToRemove[_i]);
  }

  if (helmetAttributes.length === attributesToRemove.length) {
    elementTag.removeAttribute(HELMET_ATTRIBUTE);
  } else if (elementTag.getAttribute(HELMET_ATTRIBUTE) !== attributeKeys.join(",")) {
    elementTag.setAttribute(HELMET_ATTRIBUTE, attributeKeys.join(","));
  }
};

var updateTags = function updateTags(type, tags) {
  var headElement = document.head || document.querySelector(TAG_NAMES.HEAD);
  var tagNodes = headElement.querySelectorAll(type + "[" + HELMET_ATTRIBUTE + "]");
  var oldTags = Array.prototype.slice.call(tagNodes);
  var newTags = [];
  var indexToDelete = void 0;

  if (tags && tags.length) {
    tags.forEach(function (tag) {
      var newElement = document.createElement(type);

      for (var attribute in tag) {
        if (tag.hasOwnProperty(attribute)) {
          if (attribute === TAG_PROPERTIES.INNER_HTML) {
            newElement.innerHTML = tag.innerHTML;
          } else if (attribute === TAG_PROPERTIES.CSS_TEXT) {
            if (newElement.styleSheet) {
              newElement.styleSheet.cssText = tag.cssText;
            } else {
              newElement.appendChild(document.createTextNode(tag.cssText));
            }
          } else {
            var value = typeof tag[attribute] === "undefined" ? "" : tag[attribute];
            newElement.setAttribute(attribute, value);
          }
        }
      }

      newElement.setAttribute(HELMET_ATTRIBUTE, "true"); // Remove a duplicate tag from domTagstoRemove, so it isn't cleared.

      if (oldTags.some(function (existingTag, index) {
        indexToDelete = index;
        return newElement.isEqualNode(existingTag);
      })) {
        oldTags.splice(indexToDelete, 1);
      } else {
        newTags.push(newElement);
      }
    });
  }

  oldTags.forEach(function (tag) {
    return tag.parentNode.removeChild(tag);
  });
  newTags.forEach(function (tag) {
    return headElement.appendChild(tag);
  });
  return {
    oldTags: oldTags,
    newTags: newTags
  };
};

var generateElementAttributesAsString = function generateElementAttributesAsString(attributes) {
  return Object.keys(attributes).reduce(function (str, key) {
    var attr = typeof attributes[key] !== "undefined" ? key + "=\"" + attributes[key] + "\"" : "" + key;
    return str ? str + " " + attr : attr;
  }, "");
};

var generateTitleAsString = function generateTitleAsString(type, title, attributes, encode) {
  var attributeString = generateElementAttributesAsString(attributes);
  var flattenedTitle = flattenArray(title);
  return attributeString ? "<" + type + " " + HELMET_ATTRIBUTE + "=\"true\" " + attributeString + ">" + encodeSpecialCharacters(flattenedTitle, encode) + "</" + type + ">" : "<" + type + " " + HELMET_ATTRIBUTE + "=\"true\">" + encodeSpecialCharacters(flattenedTitle, encode) + "</" + type + ">";
};

var generateTagsAsString = function generateTagsAsString(type, tags, encode) {
  return tags.reduce(function (str, tag) {
    var attributeHtml = Object.keys(tag).filter(function (attribute) {
      return !(attribute === TAG_PROPERTIES.INNER_HTML || attribute === TAG_PROPERTIES.CSS_TEXT);
    }).reduce(function (string, attribute) {
      var attr = typeof tag[attribute] === "undefined" ? attribute : attribute + "=\"" + encodeSpecialCharacters(tag[attribute], encode) + "\"";
      return string ? string + " " + attr : attr;
    }, "");
    var tagContent = tag.innerHTML || tag.cssText || "";
    var isSelfClosing = SELF_CLOSING_TAGS.indexOf(type) === -1;
    return str + "<" + type + " " + HELMET_ATTRIBUTE + "=\"true\" " + attributeHtml + (isSelfClosing ? "/>" : ">" + tagContent + "</" + type + ">");
  }, "");
};

var convertElementAttributestoReactProps = function convertElementAttributestoReactProps(attributes) {
  var initProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return Object.keys(attributes).reduce(function (obj, key) {
    obj[REACT_TAG_MAP[key] || key] = attributes[key];
    return obj;
  }, initProps);
};

var convertReactPropstoHtmlAttributes = function convertReactPropstoHtmlAttributes(props) {
  var initAttributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return Object.keys(props).reduce(function (obj, key) {
    obj[HTML_TAG_MAP[key] || key] = props[key];
    return obj;
  }, initAttributes);
};

var generateTitleAsReactComponent = function generateTitleAsReactComponent(type, title, attributes) {
  var _initProps; // assigning into an array to define toString function on it


  var initProps = (_initProps = {
    key: title
  }, _initProps[HELMET_ATTRIBUTE] = true, _initProps);
  var props = convertElementAttributestoReactProps(attributes, initProps);
  return [react__WEBPACK_IMPORTED_MODULE_24___default.a.createElement(TAG_NAMES.TITLE, props, title)];
};

var generateTagsAsReactComponent = function generateTagsAsReactComponent(type, tags) {
  return tags.map(function (tag, i) {
    var _mappedTag;

    var mappedTag = (_mappedTag = {
      key: i
    }, _mappedTag[HELMET_ATTRIBUTE] = true, _mappedTag);
    Object.keys(tag).forEach(function (attribute) {
      var mappedAttribute = REACT_TAG_MAP[attribute] || attribute;

      if (mappedAttribute === TAG_PROPERTIES.INNER_HTML || mappedAttribute === TAG_PROPERTIES.CSS_TEXT) {
        var content = tag.innerHTML || tag.cssText;
        mappedTag.dangerouslySetInnerHTML = {
          __html: content
        };
      } else {
        mappedTag[mappedAttribute] = tag[attribute];
      }
    });
    return react__WEBPACK_IMPORTED_MODULE_24___default.a.createElement(type, mappedTag);
  });
};

var getMethodsForTag = function getMethodsForTag(type, tags, encode) {
  switch (type) {
    case TAG_NAMES.TITLE:
      return {
        toComponent: function toComponent() {
          return generateTitleAsReactComponent(type, tags.title, tags.titleAttributes, encode);
        },
        toString: function toString() {
          return generateTitleAsString(type, tags.title, tags.titleAttributes, encode);
        }
      };

    case ATTRIBUTE_NAMES.BODY:
    case ATTRIBUTE_NAMES.HTML:
      return {
        toComponent: function toComponent() {
          return convertElementAttributestoReactProps(tags);
        },
        toString: function toString() {
          return generateElementAttributesAsString(tags);
        }
      };

    default:
      return {
        toComponent: function toComponent() {
          return generateTagsAsReactComponent(type, tags);
        },
        toString: function toString() {
          return generateTagsAsString(type, tags, encode);
        }
      };
  }
};

var mapStateOnServer = function mapStateOnServer(_ref) {
  var baseTag = _ref.baseTag,
      bodyAttributes = _ref.bodyAttributes,
      encode = _ref.encode,
      htmlAttributes = _ref.htmlAttributes,
      linkTags = _ref.linkTags,
      metaTags = _ref.metaTags,
      noscriptTags = _ref.noscriptTags,
      scriptTags = _ref.scriptTags,
      styleTags = _ref.styleTags,
      _ref$title = _ref.title,
      title = _ref$title === undefined ? "" : _ref$title,
      titleAttributes = _ref.titleAttributes;
  return {
    base: getMethodsForTag(TAG_NAMES.BASE, baseTag, encode),
    bodyAttributes: getMethodsForTag(ATTRIBUTE_NAMES.BODY, bodyAttributes, encode),
    htmlAttributes: getMethodsForTag(ATTRIBUTE_NAMES.HTML, htmlAttributes, encode),
    link: getMethodsForTag(TAG_NAMES.LINK, linkTags, encode),
    meta: getMethodsForTag(TAG_NAMES.META, metaTags, encode),
    noscript: getMethodsForTag(TAG_NAMES.NOSCRIPT, noscriptTags, encode),
    script: getMethodsForTag(TAG_NAMES.SCRIPT, scriptTags, encode),
    style: getMethodsForTag(TAG_NAMES.STYLE, styleTags, encode),
    title: getMethodsForTag(TAG_NAMES.TITLE, {
      title: title,
      titleAttributes: titleAttributes
    }, encode)
  };
};

var Helmet = function Helmet(Component) {
  var _class, _temp;

  return _temp = _class = function (_React$Component) {
    inherits(HelmetWrapper, _React$Component);

    function HelmetWrapper() {
      classCallCheck(this, HelmetWrapper);
      return possibleConstructorReturn(this, _React$Component.apply(this, arguments));
    }

    HelmetWrapper.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
      return !react_fast_compare__WEBPACK_IMPORTED_MODULE_23___default()(this.props, nextProps);
    };

    HelmetWrapper.prototype.mapNestedChildrenToProps = function mapNestedChildrenToProps(child, nestedChildren) {
      if (!nestedChildren) {
        return null;
      }

      switch (child.type) {
        case TAG_NAMES.SCRIPT:
        case TAG_NAMES.NOSCRIPT:
          return {
            innerHTML: nestedChildren
          };

        case TAG_NAMES.STYLE:
          return {
            cssText: nestedChildren
          };
      }

      throw new Error("<" + child.type + " /> elements are self-closing and can not contain children. Refer to our API for more information.");
    };

    HelmetWrapper.prototype.flattenArrayTypeChildren = function flattenArrayTypeChildren(_ref) {
      var _babelHelpers$extends;

      var child = _ref.child,
          arrayTypeChildren = _ref.arrayTypeChildren,
          newChildProps = _ref.newChildProps,
          nestedChildren = _ref.nestedChildren;
      return _extends({}, arrayTypeChildren, (_babelHelpers$extends = {}, _babelHelpers$extends[child.type] = [].concat(arrayTypeChildren[child.type] || [], [_extends({}, newChildProps, this.mapNestedChildrenToProps(child, nestedChildren))]), _babelHelpers$extends));
    };

    HelmetWrapper.prototype.mapObjectTypeChildren = function mapObjectTypeChildren(_ref2) {
      var _babelHelpers$extends2, _babelHelpers$extends3;

      var child = _ref2.child,
          newProps = _ref2.newProps,
          newChildProps = _ref2.newChildProps,
          nestedChildren = _ref2.nestedChildren;

      switch (child.type) {
        case TAG_NAMES.TITLE:
          return _extends({}, newProps, (_babelHelpers$extends2 = {}, _babelHelpers$extends2[child.type] = nestedChildren, _babelHelpers$extends2.titleAttributes = _extends({}, newChildProps), _babelHelpers$extends2));

        case TAG_NAMES.BODY:
          return _extends({}, newProps, {
            bodyAttributes: _extends({}, newChildProps)
          });

        case TAG_NAMES.HTML:
          return _extends({}, newProps, {
            htmlAttributes: _extends({}, newChildProps)
          });
      }

      return _extends({}, newProps, (_babelHelpers$extends3 = {}, _babelHelpers$extends3[child.type] = _extends({}, newChildProps), _babelHelpers$extends3));
    };

    HelmetWrapper.prototype.mapArrayTypeChildrenToProps = function mapArrayTypeChildrenToProps(arrayTypeChildren, newProps) {
      var newFlattenedProps = _extends({}, newProps);

      Object.keys(arrayTypeChildren).forEach(function (arrayChildName) {
        var _babelHelpers$extends4;

        newFlattenedProps = _extends({}, newFlattenedProps, (_babelHelpers$extends4 = {}, _babelHelpers$extends4[arrayChildName] = arrayTypeChildren[arrayChildName], _babelHelpers$extends4));
      });
      return newFlattenedProps;
    };

    HelmetWrapper.prototype.warnOnInvalidChildren = function warnOnInvalidChildren(child, nestedChildren) {
      if (false) {}

      return true;
    };

    HelmetWrapper.prototype.mapChildrenToProps = function mapChildrenToProps(children, newProps) {
      var _this2 = this;

      var arrayTypeChildren = {};
      react__WEBPACK_IMPORTED_MODULE_24___default.a.Children.forEach(children, function (child) {
        if (!child || !child.props) {
          return;
        }

        var _child$props = child.props,
            nestedChildren = _child$props.children,
            childProps = objectWithoutProperties(_child$props, ["children"]);
        var newChildProps = convertReactPropstoHtmlAttributes(childProps);

        _this2.warnOnInvalidChildren(child, nestedChildren);

        switch (child.type) {
          case TAG_NAMES.LINK:
          case TAG_NAMES.META:
          case TAG_NAMES.NOSCRIPT:
          case TAG_NAMES.SCRIPT:
          case TAG_NAMES.STYLE:
            arrayTypeChildren = _this2.flattenArrayTypeChildren({
              child: child,
              arrayTypeChildren: arrayTypeChildren,
              newChildProps: newChildProps,
              nestedChildren: nestedChildren
            });
            break;

          default:
            newProps = _this2.mapObjectTypeChildren({
              child: child,
              newProps: newProps,
              newChildProps: newChildProps,
              nestedChildren: nestedChildren
            });
            break;
        }
      });
      newProps = this.mapArrayTypeChildrenToProps(arrayTypeChildren, newProps);
      return newProps;
    };

    HelmetWrapper.prototype.render = function render() {
      var _props = this.props,
          children = _props.children,
          props = objectWithoutProperties(_props, ["children"]);

      var newProps = _extends({}, props);

      if (children) {
        newProps = this.mapChildrenToProps(children, newProps);
      }

      return react__WEBPACK_IMPORTED_MODULE_24___default.a.createElement(Component, newProps);
    };

    createClass(HelmetWrapper, null, [{
      key: "canUseDOM",
      // Component.peek comes from react-side-effect:
      // For testing, you may use a static peek() method available on the returned component.
      // It lets you get the current state without resetting the mounted instance stack.
      // Don’t use it for anything other than testing.

      /**
       * @param {Object} base: {"target": "_blank", "href": "http://mysite.com/"}
       * @param {Object} bodyAttributes: {"className": "root"}
       * @param {String} defaultTitle: "Default Title"
       * @param {Boolean} defer: true
       * @param {Boolean} encodeSpecialCharacters: true
       * @param {Object} htmlAttributes: {"lang": "en", "amp": undefined}
       * @param {Array} link: [{"rel": "canonical", "href": "http://mysite.com/example"}]
       * @param {Array} meta: [{"name": "description", "content": "Test description"}]
       * @param {Array} noscript: [{"innerHTML": "<img src='http://mysite.com/js/test.js'"}]
       * @param {Function} onChangeClientState: "(newState) => console.log(newState)"
       * @param {Array} script: [{"type": "text/javascript", "src": "http://mysite.com/js/test.js"}]
       * @param {Array} style: [{"type": "text/css", "cssText": "div { display: block; color: blue; }"}]
       * @param {String} title: "Title"
       * @param {Object} titleAttributes: {"itemprop": "name"}
       * @param {String} titleTemplate: "MySite.com - %s"
       */
      set: function set$$1(canUseDOM) {
        Component.canUseDOM = canUseDOM;
      }
    }]);
    return HelmetWrapper;
  }(react__WEBPACK_IMPORTED_MODULE_24___default.a.Component), _class.propTypes = {
    base: prop_types__WEBPACK_IMPORTED_MODULE_21___default.a.object,
    bodyAttributes: prop_types__WEBPACK_IMPORTED_MODULE_21___default.a.object,
    children: prop_types__WEBPACK_IMPORTED_MODULE_21___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_21___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_21___default.a.node), prop_types__WEBPACK_IMPORTED_MODULE_21___default.a.node]),
    defaultTitle: prop_types__WEBPACK_IMPORTED_MODULE_21___default.a.string,
    defer: prop_types__WEBPACK_IMPORTED_MODULE_21___default.a.bool,
    encodeSpecialCharacters: prop_types__WEBPACK_IMPORTED_MODULE_21___default.a.bool,
    htmlAttributes: prop_types__WEBPACK_IMPORTED_MODULE_21___default.a.object,
    link: prop_types__WEBPACK_IMPORTED_MODULE_21___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_21___default.a.object),
    meta: prop_types__WEBPACK_IMPORTED_MODULE_21___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_21___default.a.object),
    noscript: prop_types__WEBPACK_IMPORTED_MODULE_21___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_21___default.a.object),
    onChangeClientState: prop_types__WEBPACK_IMPORTED_MODULE_21___default.a.func,
    script: prop_types__WEBPACK_IMPORTED_MODULE_21___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_21___default.a.object),
    style: prop_types__WEBPACK_IMPORTED_MODULE_21___default.a.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_21___default.a.object),
    title: prop_types__WEBPACK_IMPORTED_MODULE_21___default.a.string,
    titleAttributes: prop_types__WEBPACK_IMPORTED_MODULE_21___default.a.object,
    titleTemplate: prop_types__WEBPACK_IMPORTED_MODULE_21___default.a.string
  }, _class.defaultProps = {
    defer: true,
    encodeSpecialCharacters: true
  }, _class.peek = Component.peek, _class.rewind = function () {
    var mappedState = Component.rewind();

    if (!mappedState) {
      // provide fallback if mappedState is undefined
      mappedState = mapStateOnServer({
        baseTag: [],
        bodyAttributes: {},
        encodeSpecialCharacters: true,
        htmlAttributes: {},
        linkTags: [],
        metaTags: [],
        noscriptTags: [],
        scriptTags: [],
        styleTags: [],
        title: "",
        titleAttributes: {}
      });
    }

    return mappedState;
  }, _temp;
};

var NullComponent = function NullComponent() {
  return null;
};

var HelmetSideEffects = react_side_effect__WEBPACK_IMPORTED_MODULE_22___default()(reducePropsToState, handleClientStateChange, mapStateOnServer)(NullComponent);
var HelmetExport = Helmet(HelmetSideEffects);
HelmetExport.renderStatic = HelmetExport.rewind;
/* unused harmony default export */ var _unused_webpack_default_export = (HelmetExport);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("pCvA")))

/***/ }),

/***/ "I2ZI":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("9ovy");

// CodeMirror, copyright (c) by Marijn Haverbeke and others
// Distributed under an MIT license: https://codemirror.net/LICENSE
(function (mod) {
  if (true) // CommonJS
    mod(__webpack_require__("Dln1"));else {}
})(function (CodeMirror) {
  "use strict";

  CodeMirror.defineMode("css", function (config, parserConfig) {
    var inline = parserConfig.inline;
    if (!parserConfig.propertyKeywords) parserConfig = CodeMirror.resolveMode("text/css");
    var indentUnit = config.indentUnit,
        tokenHooks = parserConfig.tokenHooks,
        documentTypes = parserConfig.documentTypes || {},
        mediaTypes = parserConfig.mediaTypes || {},
        mediaFeatures = parserConfig.mediaFeatures || {},
        mediaValueKeywords = parserConfig.mediaValueKeywords || {},
        propertyKeywords = parserConfig.propertyKeywords || {},
        nonStandardPropertyKeywords = parserConfig.nonStandardPropertyKeywords || {},
        fontProperties = parserConfig.fontProperties || {},
        counterDescriptors = parserConfig.counterDescriptors || {},
        colorKeywords = parserConfig.colorKeywords || {},
        valueKeywords = parserConfig.valueKeywords || {},
        allowNested = parserConfig.allowNested,
        lineComment = parserConfig.lineComment,
        supportsAtComponent = parserConfig.supportsAtComponent === true;
    var type, override;

    function ret(style, tp) {
      type = tp;
      return style;
    } // Tokenizers


    function tokenBase(stream, state) {
      var ch = stream.next();

      if (tokenHooks[ch]) {
        var result = tokenHooks[ch](stream, state);
        if (result !== false) return result;
      }

      if (ch == "@") {
        stream.eatWhile(/[\w\\\-]/);
        return ret("def", stream.current());
      } else if (ch == "=" || (ch == "~" || ch == "|") && stream.eat("=")) {
        return ret(null, "compare");
      } else if (ch == "\"" || ch == "'") {
        state.tokenize = tokenString(ch);
        return state.tokenize(stream, state);
      } else if (ch == "#") {
        stream.eatWhile(/[\w\\\-]/);
        return ret("atom", "hash");
      } else if (ch == "!") {
        stream.match(/^\s*\w*/);
        return ret("keyword", "important");
      } else if (/\d/.test(ch) || ch == "." && stream.eat(/\d/)) {
        stream.eatWhile(/[\w.%]/);
        return ret("number", "unit");
      } else if (ch === "-") {
        if (/[\d.]/.test(stream.peek())) {
          stream.eatWhile(/[\w.%]/);
          return ret("number", "unit");
        } else if (stream.match(/^-[\w\\\-]*/)) {
          stream.eatWhile(/[\w\\\-]/);
          if (stream.match(/^\s*:/, false)) return ret("variable-2", "variable-definition");
          return ret("variable-2", "variable");
        } else if (stream.match(/^\w+-/)) {
          return ret("meta", "meta");
        }
      } else if (/[,+>*\/]/.test(ch)) {
        return ret(null, "select-op");
      } else if (ch == "." && stream.match(/^-?[_a-z][_a-z0-9-]*/i)) {
        return ret("qualifier", "qualifier");
      } else if (/[:;{}\[\]\(\)]/.test(ch)) {
        return ret(null, ch);
      } else if (stream.match(/[\w-.]+(?=\()/)) {
        if (/^(url(-prefix)?|domain|regexp)$/.test(stream.current().toLowerCase())) {
          state.tokenize = tokenParenthesized;
        }

        return ret("variable callee", "variable");
      } else if (/[\w\\\-]/.test(ch)) {
        stream.eatWhile(/[\w\\\-]/);
        return ret("property", "word");
      } else {
        return ret(null, null);
      }
    }

    function tokenString(quote) {
      return function (stream, state) {
        var escaped = false,
            ch;

        while ((ch = stream.next()) != null) {
          if (ch == quote && !escaped) {
            if (quote == ")") stream.backUp(1);
            break;
          }

          escaped = !escaped && ch == "\\";
        }

        if (ch == quote || !escaped && quote != ")") state.tokenize = null;
        return ret("string", "string");
      };
    }

    function tokenParenthesized(stream, state) {
      stream.next(); // Must be '('

      if (!stream.match(/\s*[\"\')]/, false)) state.tokenize = tokenString(")");else state.tokenize = null;
      return ret(null, "(");
    } // Context management


    function Context(type, indent, prev) {
      this.type = type;
      this.indent = indent;
      this.prev = prev;
    }

    function pushContext(state, stream, type, indent) {
      state.context = new Context(type, stream.indentation() + (indent === false ? 0 : indentUnit), state.context);
      return type;
    }

    function popContext(state) {
      if (state.context.prev) state.context = state.context.prev;
      return state.context.type;
    }

    function pass(type, stream, state) {
      return states[state.context.type](type, stream, state);
    }

    function popAndPass(type, stream, state, n) {
      for (var i = n || 1; i > 0; i--) {
        state.context = state.context.prev;
      }

      return pass(type, stream, state);
    } // Parser


    function wordAsValue(stream) {
      var word = stream.current().toLowerCase();
      if (valueKeywords.hasOwnProperty(word)) override = "atom";else if (colorKeywords.hasOwnProperty(word)) override = "keyword";else override = "variable";
    }

    var states = {};

    states.top = function (type, stream, state) {
      if (type == "{") {
        return pushContext(state, stream, "block");
      } else if (type == "}" && state.context.prev) {
        return popContext(state);
      } else if (supportsAtComponent && /@component/i.test(type)) {
        return pushContext(state, stream, "atComponentBlock");
      } else if (/^@(-moz-)?document$/i.test(type)) {
        return pushContext(state, stream, "documentTypes");
      } else if (/^@(media|supports|(-moz-)?document|import)$/i.test(type)) {
        return pushContext(state, stream, "atBlock");
      } else if (/^@(font-face|counter-style)/i.test(type)) {
        state.stateArg = type;
        return "restricted_atBlock_before";
      } else if (/^@(-(moz|ms|o|webkit)-)?keyframes$/i.test(type)) {
        return "keyframes";
      } else if (type && type.charAt(0) == "@") {
        return pushContext(state, stream, "at");
      } else if (type == "hash") {
        override = "builtin";
      } else if (type == "word") {
        override = "tag";
      } else if (type == "variable-definition") {
        return "maybeprop";
      } else if (type == "interpolation") {
        return pushContext(state, stream, "interpolation");
      } else if (type == ":") {
        return "pseudo";
      } else if (allowNested && type == "(") {
        return pushContext(state, stream, "parens");
      }

      return state.context.type;
    };

    states.block = function (type, stream, state) {
      if (type == "word") {
        var word = stream.current().toLowerCase();

        if (propertyKeywords.hasOwnProperty(word)) {
          override = "property";
          return "maybeprop";
        } else if (nonStandardPropertyKeywords.hasOwnProperty(word)) {
          override = "string-2";
          return "maybeprop";
        } else if (allowNested) {
          override = stream.match(/^\s*:(?:\s|$)/, false) ? "property" : "tag";
          return "block";
        } else {
          override += " error";
          return "maybeprop";
        }
      } else if (type == "meta") {
        return "block";
      } else if (!allowNested && (type == "hash" || type == "qualifier")) {
        override = "error";
        return "block";
      } else {
        return states.top(type, stream, state);
      }
    };

    states.maybeprop = function (type, stream, state) {
      if (type == ":") return pushContext(state, stream, "prop");
      return pass(type, stream, state);
    };

    states.prop = function (type, stream, state) {
      if (type == ";") return popContext(state);
      if (type == "{" && allowNested) return pushContext(state, stream, "propBlock");
      if (type == "}" || type == "{") return popAndPass(type, stream, state);
      if (type == "(") return pushContext(state, stream, "parens");

      if (type == "hash" && !/^#([0-9a-fA-f]{3,4}|[0-9a-fA-f]{6}|[0-9a-fA-f]{8})$/.test(stream.current())) {
        override += " error";
      } else if (type == "word") {
        wordAsValue(stream);
      } else if (type == "interpolation") {
        return pushContext(state, stream, "interpolation");
      }

      return "prop";
    };

    states.propBlock = function (type, _stream, state) {
      if (type == "}") return popContext(state);

      if (type == "word") {
        override = "property";
        return "maybeprop";
      }

      return state.context.type;
    };

    states.parens = function (type, stream, state) {
      if (type == "{" || type == "}") return popAndPass(type, stream, state);
      if (type == ")") return popContext(state);
      if (type == "(") return pushContext(state, stream, "parens");
      if (type == "interpolation") return pushContext(state, stream, "interpolation");
      if (type == "word") wordAsValue(stream);
      return "parens";
    };

    states.pseudo = function (type, stream, state) {
      if (type == "meta") return "pseudo";

      if (type == "word") {
        override = "variable-3";
        return state.context.type;
      }

      return pass(type, stream, state);
    };

    states.documentTypes = function (type, stream, state) {
      if (type == "word" && documentTypes.hasOwnProperty(stream.current())) {
        override = "tag";
        return state.context.type;
      } else {
        return states.atBlock(type, stream, state);
      }
    };

    states.atBlock = function (type, stream, state) {
      if (type == "(") return pushContext(state, stream, "atBlock_parens");
      if (type == "}" || type == ";") return popAndPass(type, stream, state);
      if (type == "{") return popContext(state) && pushContext(state, stream, allowNested ? "block" : "top");
      if (type == "interpolation") return pushContext(state, stream, "interpolation");

      if (type == "word") {
        var word = stream.current().toLowerCase();
        if (word == "only" || word == "not" || word == "and" || word == "or") override = "keyword";else if (mediaTypes.hasOwnProperty(word)) override = "attribute";else if (mediaFeatures.hasOwnProperty(word)) override = "property";else if (mediaValueKeywords.hasOwnProperty(word)) override = "keyword";else if (propertyKeywords.hasOwnProperty(word)) override = "property";else if (nonStandardPropertyKeywords.hasOwnProperty(word)) override = "string-2";else if (valueKeywords.hasOwnProperty(word)) override = "atom";else if (colorKeywords.hasOwnProperty(word)) override = "keyword";else override = "error";
      }

      return state.context.type;
    };

    states.atComponentBlock = function (type, stream, state) {
      if (type == "}") return popAndPass(type, stream, state);
      if (type == "{") return popContext(state) && pushContext(state, stream, allowNested ? "block" : "top", false);
      if (type == "word") override = "error";
      return state.context.type;
    };

    states.atBlock_parens = function (type, stream, state) {
      if (type == ")") return popContext(state);
      if (type == "{" || type == "}") return popAndPass(type, stream, state, 2);
      return states.atBlock(type, stream, state);
    };

    states.restricted_atBlock_before = function (type, stream, state) {
      if (type == "{") return pushContext(state, stream, "restricted_atBlock");

      if (type == "word" && state.stateArg == "@counter-style") {
        override = "variable";
        return "restricted_atBlock_before";
      }

      return pass(type, stream, state);
    };

    states.restricted_atBlock = function (type, stream, state) {
      if (type == "}") {
        state.stateArg = null;
        return popContext(state);
      }

      if (type == "word") {
        if (state.stateArg == "@font-face" && !fontProperties.hasOwnProperty(stream.current().toLowerCase()) || state.stateArg == "@counter-style" && !counterDescriptors.hasOwnProperty(stream.current().toLowerCase())) override = "error";else override = "property";
        return "maybeprop";
      }

      return "restricted_atBlock";
    };

    states.keyframes = function (type, stream, state) {
      if (type == "word") {
        override = "variable";
        return "keyframes";
      }

      if (type == "{") return pushContext(state, stream, "top");
      return pass(type, stream, state);
    };

    states.at = function (type, stream, state) {
      if (type == ";") return popContext(state);
      if (type == "{" || type == "}") return popAndPass(type, stream, state);
      if (type == "word") override = "tag";else if (type == "hash") override = "builtin";
      return "at";
    };

    states.interpolation = function (type, stream, state) {
      if (type == "}") return popContext(state);
      if (type == "{" || type == ";") return popAndPass(type, stream, state);
      if (type == "word") override = "variable";else if (type != "variable" && type != "(" && type != ")") override = "error";
      return "interpolation";
    };

    return {
      startState: function startState(base) {
        return {
          tokenize: null,
          state: inline ? "block" : "top",
          stateArg: null,
          context: new Context(inline ? "block" : "top", base || 0, null)
        };
      },
      token: function token(stream, state) {
        if (!state.tokenize && stream.eatSpace()) return null;
        var style = (state.tokenize || tokenBase)(stream, state);

        if (style && typeof style == "object") {
          type = style[1];
          style = style[0];
        }

        override = style;
        if (type != "comment") state.state = states[state.state](type, stream, state);
        return override;
      },
      indent: function indent(state, textAfter) {
        var cx = state.context,
            ch = textAfter && textAfter.charAt(0);
        var indent = cx.indent;
        if (cx.type == "prop" && (ch == "}" || ch == ")")) cx = cx.prev;

        if (cx.prev) {
          if (ch == "}" && (cx.type == "block" || cx.type == "top" || cx.type == "interpolation" || cx.type == "restricted_atBlock")) {
            // Resume indentation from parent context.
            cx = cx.prev;
            indent = cx.indent;
          } else if (ch == ")" && (cx.type == "parens" || cx.type == "atBlock_parens") || ch == "{" && (cx.type == "at" || cx.type == "atBlock")) {
            // Dedent relative to current context.
            indent = Math.max(0, cx.indent - indentUnit);
          }
        }

        return indent;
      },
      electricChars: "}",
      blockCommentStart: "/*",
      blockCommentEnd: "*/",
      blockCommentContinue: " * ",
      lineComment: lineComment,
      fold: "brace"
    };
  });

  function keySet(array) {
    var keys = {};

    for (var i = 0; i < array.length; ++i) {
      keys[array[i].toLowerCase()] = true;
    }

    return keys;
  }

  var documentTypes_ = ["domain", "regexp", "url", "url-prefix"],
      documentTypes = keySet(documentTypes_);
  var mediaTypes_ = ["all", "aural", "braille", "handheld", "print", "projection", "screen", "tty", "tv", "embossed"],
      mediaTypes = keySet(mediaTypes_);
  var mediaFeatures_ = ["width", "min-width", "max-width", "height", "min-height", "max-height", "device-width", "min-device-width", "max-device-width", "device-height", "min-device-height", "max-device-height", "aspect-ratio", "min-aspect-ratio", "max-aspect-ratio", "device-aspect-ratio", "min-device-aspect-ratio", "max-device-aspect-ratio", "color", "min-color", "max-color", "color-index", "min-color-index", "max-color-index", "monochrome", "min-monochrome", "max-monochrome", "resolution", "min-resolution", "max-resolution", "scan", "grid", "orientation", "device-pixel-ratio", "min-device-pixel-ratio", "max-device-pixel-ratio", "pointer", "any-pointer", "hover", "any-hover"],
      mediaFeatures = keySet(mediaFeatures_);
  var mediaValueKeywords_ = ["landscape", "portrait", "none", "coarse", "fine", "on-demand", "hover", "interlace", "progressive"],
      mediaValueKeywords = keySet(mediaValueKeywords_);
  var propertyKeywords_ = ["align-content", "align-items", "align-self", "alignment-adjust", "alignment-baseline", "anchor-point", "animation", "animation-delay", "animation-direction", "animation-duration", "animation-fill-mode", "animation-iteration-count", "animation-name", "animation-play-state", "animation-timing-function", "appearance", "azimuth", "backdrop-filter", "backface-visibility", "background", "background-attachment", "background-blend-mode", "background-clip", "background-color", "background-image", "background-origin", "background-position", "background-position-x", "background-position-y", "background-repeat", "background-size", "baseline-shift", "binding", "bleed", "block-size", "bookmark-label", "bookmark-level", "bookmark-state", "bookmark-target", "border", "border-bottom", "border-bottom-color", "border-bottom-left-radius", "border-bottom-right-radius", "border-bottom-style", "border-bottom-width", "border-collapse", "border-color", "border-image", "border-image-outset", "border-image-repeat", "border-image-slice", "border-image-source", "border-image-width", "border-left", "border-left-color", "border-left-style", "border-left-width", "border-radius", "border-right", "border-right-color", "border-right-style", "border-right-width", "border-spacing", "border-style", "border-top", "border-top-color", "border-top-left-radius", "border-top-right-radius", "border-top-style", "border-top-width", "border-width", "bottom", "box-decoration-break", "box-shadow", "box-sizing", "break-after", "break-before", "break-inside", "caption-side", "caret-color", "clear", "clip", "color", "color-profile", "column-count", "column-fill", "column-gap", "column-rule", "column-rule-color", "column-rule-style", "column-rule-width", "column-span", "column-width", "columns", "contain", "content", "counter-increment", "counter-reset", "crop", "cue", "cue-after", "cue-before", "cursor", "direction", "display", "dominant-baseline", "drop-initial-after-adjust", "drop-initial-after-align", "drop-initial-before-adjust", "drop-initial-before-align", "drop-initial-size", "drop-initial-value", "elevation", "empty-cells", "fit", "fit-position", "flex", "flex-basis", "flex-direction", "flex-flow", "flex-grow", "flex-shrink", "flex-wrap", "float", "float-offset", "flow-from", "flow-into", "font", "font-family", "font-feature-settings", "font-kerning", "font-language-override", "font-optical-sizing", "font-size", "font-size-adjust", "font-stretch", "font-style", "font-synthesis", "font-variant", "font-variant-alternates", "font-variant-caps", "font-variant-east-asian", "font-variant-ligatures", "font-variant-numeric", "font-variant-position", "font-variation-settings", "font-weight", "gap", "grid", "grid-area", "grid-auto-columns", "grid-auto-flow", "grid-auto-rows", "grid-column", "grid-column-end", "grid-column-gap", "grid-column-start", "grid-gap", "grid-row", "grid-row-end", "grid-row-gap", "grid-row-start", "grid-template", "grid-template-areas", "grid-template-columns", "grid-template-rows", "hanging-punctuation", "height", "hyphens", "icon", "image-orientation", "image-rendering", "image-resolution", "inline-box-align", "inset", "inset-block", "inset-block-end", "inset-block-start", "inset-inline", "inset-inline-end", "inset-inline-start", "isolation", "justify-content", "justify-items", "justify-self", "left", "letter-spacing", "line-break", "line-height", "line-height-step", "line-stacking", "line-stacking-ruby", "line-stacking-shift", "line-stacking-strategy", "list-style", "list-style-image", "list-style-position", "list-style-type", "margin", "margin-bottom", "margin-left", "margin-right", "margin-top", "marks", "marquee-direction", "marquee-loop", "marquee-play-count", "marquee-speed", "marquee-style", "max-block-size", "max-height", "max-inline-size", "max-width", "min-block-size", "min-height", "min-inline-size", "min-width", "mix-blend-mode", "move-to", "nav-down", "nav-index", "nav-left", "nav-right", "nav-up", "object-fit", "object-position", "offset", "offset-anchor", "offset-distance", "offset-path", "offset-position", "offset-rotate", "opacity", "order", "orphans", "outline", "outline-color", "outline-offset", "outline-style", "outline-width", "overflow", "overflow-style", "overflow-wrap", "overflow-x", "overflow-y", "padding", "padding-bottom", "padding-left", "padding-right", "padding-top", "page", "page-break-after", "page-break-before", "page-break-inside", "page-policy", "pause", "pause-after", "pause-before", "perspective", "perspective-origin", "pitch", "pitch-range", "place-content", "place-items", "place-self", "play-during", "position", "presentation-level", "punctuation-trim", "quotes", "region-break-after", "region-break-before", "region-break-inside", "region-fragment", "rendering-intent", "resize", "rest", "rest-after", "rest-before", "richness", "right", "rotate", "rotation", "rotation-point", "row-gap", "ruby-align", "ruby-overhang", "ruby-position", "ruby-span", "scale", "scroll-behavior", "scroll-margin", "scroll-margin-block", "scroll-margin-block-end", "scroll-margin-block-start", "scroll-margin-bottom", "scroll-margin-inline", "scroll-margin-inline-end", "scroll-margin-inline-start", "scroll-margin-left", "scroll-margin-right", "scroll-margin-top", "scroll-padding", "scroll-padding-block", "scroll-padding-block-end", "scroll-padding-block-start", "scroll-padding-bottom", "scroll-padding-inline", "scroll-padding-inline-end", "scroll-padding-inline-start", "scroll-padding-left", "scroll-padding-right", "scroll-padding-top", "scroll-snap-align", "scroll-snap-type", "shape-image-threshold", "shape-inside", "shape-margin", "shape-outside", "size", "speak", "speak-as", "speak-header", "speak-numeral", "speak-punctuation", "speech-rate", "stress", "string-set", "tab-size", "table-layout", "target", "target-name", "target-new", "target-position", "text-align", "text-align-last", "text-combine-upright", "text-decoration", "text-decoration-color", "text-decoration-line", "text-decoration-skip", "text-decoration-skip-ink", "text-decoration-style", "text-emphasis", "text-emphasis-color", "text-emphasis-position", "text-emphasis-style", "text-height", "text-indent", "text-justify", "text-orientation", "text-outline", "text-overflow", "text-rendering", "text-shadow", "text-size-adjust", "text-space-collapse", "text-transform", "text-underline-position", "text-wrap", "top", "transform", "transform-origin", "transform-style", "transition", "transition-delay", "transition-duration", "transition-property", "transition-timing-function", "translate", "unicode-bidi", "user-select", "vertical-align", "visibility", "voice-balance", "voice-duration", "voice-family", "voice-pitch", "voice-range", "voice-rate", "voice-stress", "voice-volume", "volume", "white-space", "widows", "width", "will-change", "word-break", "word-spacing", "word-wrap", "writing-mode", "z-index", // SVG-specific
  "clip-path", "clip-rule", "mask", "enable-background", "filter", "flood-color", "flood-opacity", "lighting-color", "stop-color", "stop-opacity", "pointer-events", "color-interpolation", "color-interpolation-filters", "color-rendering", "fill", "fill-opacity", "fill-rule", "image-rendering", "marker", "marker-end", "marker-mid", "marker-start", "shape-rendering", "stroke", "stroke-dasharray", "stroke-dashoffset", "stroke-linecap", "stroke-linejoin", "stroke-miterlimit", "stroke-opacity", "stroke-width", "text-rendering", "baseline-shift", "dominant-baseline", "glyph-orientation-horizontal", "glyph-orientation-vertical", "text-anchor", "writing-mode"],
      propertyKeywords = keySet(propertyKeywords_);
  var nonStandardPropertyKeywords_ = ["border-block", "border-block-color", "border-block-end", "border-block-end-color", "border-block-end-style", "border-block-end-width", "border-block-start", "border-block-start-color", "border-block-start-style", "border-block-start-width", "border-block-style", "border-block-width", "border-inline", "border-inline-color", "border-inline-end", "border-inline-end-color", "border-inline-end-style", "border-inline-end-width", "border-inline-start", "border-inline-start-color", "border-inline-start-style", "border-inline-start-width", "border-inline-style", "border-inline-width", "margin-block", "margin-block-end", "margin-block-start", "margin-inline", "margin-inline-end", "margin-inline-start", "padding-block", "padding-block-end", "padding-block-start", "padding-inline", "padding-inline-end", "padding-inline-start", "scroll-snap-stop", "scrollbar-3d-light-color", "scrollbar-arrow-color", "scrollbar-base-color", "scrollbar-dark-shadow-color", "scrollbar-face-color", "scrollbar-highlight-color", "scrollbar-shadow-color", "scrollbar-track-color", "searchfield-cancel-button", "searchfield-decoration", "searchfield-results-button", "searchfield-results-decoration", "shape-inside", "zoom"],
      nonStandardPropertyKeywords = keySet(nonStandardPropertyKeywords_);
  var fontProperties_ = ["font-display", "font-family", "src", "unicode-range", "font-variant", "font-feature-settings", "font-stretch", "font-weight", "font-style"],
      fontProperties = keySet(fontProperties_);
  var counterDescriptors_ = ["additive-symbols", "fallback", "negative", "pad", "prefix", "range", "speak-as", "suffix", "symbols", "system"],
      counterDescriptors = keySet(counterDescriptors_);
  var colorKeywords_ = ["aliceblue", "antiquewhite", "aqua", "aquamarine", "azure", "beige", "bisque", "black", "blanchedalmond", "blue", "blueviolet", "brown", "burlywood", "cadetblue", "chartreuse", "chocolate", "coral", "cornflowerblue", "cornsilk", "crimson", "cyan", "darkblue", "darkcyan", "darkgoldenrod", "darkgray", "darkgreen", "darkkhaki", "darkmagenta", "darkolivegreen", "darkorange", "darkorchid", "darkred", "darksalmon", "darkseagreen", "darkslateblue", "darkslategray", "darkturquoise", "darkviolet", "deeppink", "deepskyblue", "dimgray", "dodgerblue", "firebrick", "floralwhite", "forestgreen", "fuchsia", "gainsboro", "ghostwhite", "gold", "goldenrod", "gray", "grey", "green", "greenyellow", "honeydew", "hotpink", "indianred", "indigo", "ivory", "khaki", "lavender", "lavenderblush", "lawngreen", "lemonchiffon", "lightblue", "lightcoral", "lightcyan", "lightgoldenrodyellow", "lightgray", "lightgreen", "lightpink", "lightsalmon", "lightseagreen", "lightskyblue", "lightslategray", "lightsteelblue", "lightyellow", "lime", "limegreen", "linen", "magenta", "maroon", "mediumaquamarine", "mediumblue", "mediumorchid", "mediumpurple", "mediumseagreen", "mediumslateblue", "mediumspringgreen", "mediumturquoise", "mediumvioletred", "midnightblue", "mintcream", "mistyrose", "moccasin", "navajowhite", "navy", "oldlace", "olive", "olivedrab", "orange", "orangered", "orchid", "palegoldenrod", "palegreen", "paleturquoise", "palevioletred", "papayawhip", "peachpuff", "peru", "pink", "plum", "powderblue", "purple", "rebeccapurple", "red", "rosybrown", "royalblue", "saddlebrown", "salmon", "sandybrown", "seagreen", "seashell", "sienna", "silver", "skyblue", "slateblue", "slategray", "snow", "springgreen", "steelblue", "tan", "teal", "thistle", "tomato", "turquoise", "violet", "wheat", "white", "whitesmoke", "yellow", "yellowgreen"],
      colorKeywords = keySet(colorKeywords_);
  var valueKeywords_ = ["above", "absolute", "activeborder", "additive", "activecaption", "afar", "after-white-space", "ahead", "alias", "all", "all-scroll", "alphabetic", "alternate", "always", "amharic", "amharic-abegede", "antialiased", "appworkspace", "arabic-indic", "armenian", "asterisks", "attr", "auto", "auto-flow", "avoid", "avoid-column", "avoid-page", "avoid-region", "background", "backwards", "baseline", "below", "bidi-override", "binary", "bengali", "blink", "block", "block-axis", "bold", "bolder", "border", "border-box", "both", "bottom", "break", "break-all", "break-word", "bullets", "button", "button-bevel", "buttonface", "buttonhighlight", "buttonshadow", "buttontext", "calc", "cambodian", "capitalize", "caps-lock-indicator", "caption", "captiontext", "caret", "cell", "center", "checkbox", "circle", "cjk-decimal", "cjk-earthly-branch", "cjk-heavenly-stem", "cjk-ideographic", "clear", "clip", "close-quote", "col-resize", "collapse", "color", "color-burn", "color-dodge", "column", "column-reverse", "compact", "condensed", "contain", "content", "contents", "content-box", "context-menu", "continuous", "copy", "counter", "counters", "cover", "crop", "cross", "crosshair", "currentcolor", "cursive", "cyclic", "darken", "dashed", "decimal", "decimal-leading-zero", "default", "default-button", "dense", "destination-atop", "destination-in", "destination-out", "destination-over", "devanagari", "difference", "disc", "discard", "disclosure-closed", "disclosure-open", "document", "dot-dash", "dot-dot-dash", "dotted", "double", "down", "e-resize", "ease", "ease-in", "ease-in-out", "ease-out", "element", "ellipse", "ellipsis", "embed", "end", "ethiopic", "ethiopic-abegede", "ethiopic-abegede-am-et", "ethiopic-abegede-gez", "ethiopic-abegede-ti-er", "ethiopic-abegede-ti-et", "ethiopic-halehame-aa-er", "ethiopic-halehame-aa-et", "ethiopic-halehame-am-et", "ethiopic-halehame-gez", "ethiopic-halehame-om-et", "ethiopic-halehame-sid-et", "ethiopic-halehame-so-et", "ethiopic-halehame-ti-er", "ethiopic-halehame-ti-et", "ethiopic-halehame-tig", "ethiopic-numeric", "ew-resize", "exclusion", "expanded", "extends", "extra-condensed", "extra-expanded", "fantasy", "fast", "fill", "fixed", "flat", "flex", "flex-end", "flex-start", "footnotes", "forwards", "from", "geometricPrecision", "georgian", "graytext", "grid", "groove", "gujarati", "gurmukhi", "hand", "hangul", "hangul-consonant", "hard-light", "hebrew", "help", "hidden", "hide", "higher", "highlight", "highlighttext", "hiragana", "hiragana-iroha", "horizontal", "hsl", "hsla", "hue", "icon", "ignore", "inactiveborder", "inactivecaption", "inactivecaptiontext", "infinite", "infobackground", "infotext", "inherit", "initial", "inline", "inline-axis", "inline-block", "inline-flex", "inline-grid", "inline-table", "inset", "inside", "intrinsic", "invert", "italic", "japanese-formal", "japanese-informal", "justify", "kannada", "katakana", "katakana-iroha", "keep-all", "khmer", "korean-hangul-formal", "korean-hanja-formal", "korean-hanja-informal", "landscape", "lao", "large", "larger", "left", "level", "lighter", "lighten", "line-through", "linear", "linear-gradient", "lines", "list-item", "listbox", "listitem", "local", "logical", "loud", "lower", "lower-alpha", "lower-armenian", "lower-greek", "lower-hexadecimal", "lower-latin", "lower-norwegian", "lower-roman", "lowercase", "ltr", "luminosity", "malayalam", "match", "matrix", "matrix3d", "media-controls-background", "media-current-time-display", "media-fullscreen-button", "media-mute-button", "media-play-button", "media-return-to-realtime-button", "media-rewind-button", "media-seek-back-button", "media-seek-forward-button", "media-slider", "media-sliderthumb", "media-time-remaining-display", "media-volume-slider", "media-volume-slider-container", "media-volume-sliderthumb", "medium", "menu", "menulist", "menulist-button", "menulist-text", "menulist-textfield", "menutext", "message-box", "middle", "min-intrinsic", "mix", "mongolian", "monospace", "move", "multiple", "multiply", "myanmar", "n-resize", "narrower", "ne-resize", "nesw-resize", "no-close-quote", "no-drop", "no-open-quote", "no-repeat", "none", "normal", "not-allowed", "nowrap", "ns-resize", "numbers", "numeric", "nw-resize", "nwse-resize", "oblique", "octal", "opacity", "open-quote", "optimizeLegibility", "optimizeSpeed", "oriya", "oromo", "outset", "outside", "outside-shape", "overlay", "overline", "padding", "padding-box", "painted", "page", "paused", "persian", "perspective", "plus-darker", "plus-lighter", "pointer", "polygon", "portrait", "pre", "pre-line", "pre-wrap", "preserve-3d", "progress", "push-button", "radial-gradient", "radio", "read-only", "read-write", "read-write-plaintext-only", "rectangle", "region", "relative", "repeat", "repeating-linear-gradient", "repeating-radial-gradient", "repeat-x", "repeat-y", "reset", "reverse", "rgb", "rgba", "ridge", "right", "rotate", "rotate3d", "rotateX", "rotateY", "rotateZ", "round", "row", "row-resize", "row-reverse", "rtl", "run-in", "running", "s-resize", "sans-serif", "saturation", "scale", "scale3d", "scaleX", "scaleY", "scaleZ", "screen", "scroll", "scrollbar", "scroll-position", "se-resize", "searchfield", "searchfield-cancel-button", "searchfield-decoration", "searchfield-results-button", "searchfield-results-decoration", "self-start", "self-end", "semi-condensed", "semi-expanded", "separate", "serif", "show", "sidama", "simp-chinese-formal", "simp-chinese-informal", "single", "skew", "skewX", "skewY", "skip-white-space", "slide", "slider-horizontal", "slider-vertical", "sliderthumb-horizontal", "sliderthumb-vertical", "slow", "small", "small-caps", "small-caption", "smaller", "soft-light", "solid", "somali", "source-atop", "source-in", "source-out", "source-over", "space", "space-around", "space-between", "space-evenly", "spell-out", "square", "square-button", "start", "static", "status-bar", "stretch", "stroke", "sub", "subpixel-antialiased", "super", "sw-resize", "symbolic", "symbols", "system-ui", "table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row", "table-row-group", "tamil", "telugu", "text", "text-bottom", "text-top", "textarea", "textfield", "thai", "thick", "thin", "threeddarkshadow", "threedface", "threedhighlight", "threedlightshadow", "threedshadow", "tibetan", "tigre", "tigrinya-er", "tigrinya-er-abegede", "tigrinya-et", "tigrinya-et-abegede", "to", "top", "trad-chinese-formal", "trad-chinese-informal", "transform", "translate", "translate3d", "translateX", "translateY", "translateZ", "transparent", "ultra-condensed", "ultra-expanded", "underline", "unset", "up", "upper-alpha", "upper-armenian", "upper-greek", "upper-hexadecimal", "upper-latin", "upper-norwegian", "upper-roman", "uppercase", "urdu", "url", "var", "vertical", "vertical-text", "visible", "visibleFill", "visiblePainted", "visibleStroke", "visual", "w-resize", "wait", "wave", "wider", "window", "windowframe", "windowtext", "words", "wrap", "wrap-reverse", "x-large", "x-small", "xor", "xx-large", "xx-small"],
      valueKeywords = keySet(valueKeywords_);
  var allWords = documentTypes_.concat(mediaTypes_).concat(mediaFeatures_).concat(mediaValueKeywords_).concat(propertyKeywords_).concat(nonStandardPropertyKeywords_).concat(colorKeywords_).concat(valueKeywords_);
  CodeMirror.registerHelper("hintWords", "css", allWords);

  function tokenCComment(stream, state) {
    var maybeEnd = false,
        ch;

    while ((ch = stream.next()) != null) {
      if (maybeEnd && ch == "/") {
        state.tokenize = null;
        break;
      }

      maybeEnd = ch == "*";
    }

    return ["comment", "comment"];
  }

  CodeMirror.defineMIME("text/css", {
    documentTypes: documentTypes,
    mediaTypes: mediaTypes,
    mediaFeatures: mediaFeatures,
    mediaValueKeywords: mediaValueKeywords,
    propertyKeywords: propertyKeywords,
    nonStandardPropertyKeywords: nonStandardPropertyKeywords,
    fontProperties: fontProperties,
    counterDescriptors: counterDescriptors,
    colorKeywords: colorKeywords,
    valueKeywords: valueKeywords,
    tokenHooks: {
      "/": function _(stream, state) {
        if (!stream.eat("*")) return false;
        state.tokenize = tokenCComment;
        return tokenCComment(stream, state);
      }
    },
    name: "css"
  });
  CodeMirror.defineMIME("text/x-scss", {
    mediaTypes: mediaTypes,
    mediaFeatures: mediaFeatures,
    mediaValueKeywords: mediaValueKeywords,
    propertyKeywords: propertyKeywords,
    nonStandardPropertyKeywords: nonStandardPropertyKeywords,
    colorKeywords: colorKeywords,
    valueKeywords: valueKeywords,
    fontProperties: fontProperties,
    allowNested: true,
    lineComment: "//",
    tokenHooks: {
      "/": function _(stream, state) {
        if (stream.eat("/")) {
          stream.skipToEnd();
          return ["comment", "comment"];
        } else if (stream.eat("*")) {
          state.tokenize = tokenCComment;
          return tokenCComment(stream, state);
        } else {
          return ["operator", "operator"];
        }
      },
      ":": function _(stream) {
        if (stream.match(/\s*\{/, false)) return [null, null];
        return false;
      },
      "$": function $(stream) {
        stream.match(/^[\w-]+/);
        if (stream.match(/^\s*:/, false)) return ["variable-2", "variable-definition"];
        return ["variable-2", "variable"];
      },
      "#": function _(stream) {
        if (!stream.eat("{")) return false;
        return [null, "interpolation"];
      }
    },
    name: "css",
    helperType: "scss"
  });
  CodeMirror.defineMIME("text/x-less", {
    mediaTypes: mediaTypes,
    mediaFeatures: mediaFeatures,
    mediaValueKeywords: mediaValueKeywords,
    propertyKeywords: propertyKeywords,
    nonStandardPropertyKeywords: nonStandardPropertyKeywords,
    colorKeywords: colorKeywords,
    valueKeywords: valueKeywords,
    fontProperties: fontProperties,
    allowNested: true,
    lineComment: "//",
    tokenHooks: {
      "/": function _(stream, state) {
        if (stream.eat("/")) {
          stream.skipToEnd();
          return ["comment", "comment"];
        } else if (stream.eat("*")) {
          state.tokenize = tokenCComment;
          return tokenCComment(stream, state);
        } else {
          return ["operator", "operator"];
        }
      },
      "@": function _(stream) {
        if (stream.eat("{")) return [null, "interpolation"];
        if (stream.match(/^(charset|document|font-face|import|(-(moz|ms|o|webkit)-)?keyframes|media|namespace|page|supports)\b/i, false)) return false;
        stream.eatWhile(/[\w\\\-]/);
        if (stream.match(/^\s*:/, false)) return ["variable-2", "variable-definition"];
        return ["variable-2", "variable"];
      },
      "&": function _() {
        return ["atom", "atom"];
      }
    },
    name: "css",
    helperType: "less"
  });
  CodeMirror.defineMIME("text/x-gss", {
    documentTypes: documentTypes,
    mediaTypes: mediaTypes,
    mediaFeatures: mediaFeatures,
    propertyKeywords: propertyKeywords,
    nonStandardPropertyKeywords: nonStandardPropertyKeywords,
    fontProperties: fontProperties,
    counterDescriptors: counterDescriptors,
    colorKeywords: colorKeywords,
    valueKeywords: valueKeywords,
    supportsAtComponent: true,
    tokenHooks: {
      "/": function _(stream, state) {
        if (!stream.eat("*")) return false;
        state.tokenize = tokenCComment;
        return tokenCComment(stream, state);
      }
    },
    name: "css",
    helperType: "gss"
  });
});

/***/ }),

/***/ "IEjY":
/***/ (function(module, exports) {

module.exports = function _pipe(f, g) {
  return function () {
    return g.call(this, f.apply(this, arguments));
  };
};

/***/ }),

/***/ "IFhY":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export warning */
/* unused harmony export note */
/* unused harmony export resetWarned */
/* unused harmony export call */
/* unused harmony export warningOnce */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return noteOnce; });
/* eslint-disable no-console */
var warned = {};
function warning(valid, message) {
  // Support uglify
  if (false) {}
}
function note(valid, message) {
  // Support uglify
  if (false) {}
}
function resetWarned() {
  warned = {};
}
function call(method, valid, message) {
  if (!valid && !warned[message]) {
    method(false, message);
    warned[message] = true;
  }
}
function warningOnce(valid, message) {
  call(warning, valid, message);
}
function noteOnce(valid, message) {
  call(note, valid, message);
}
/* harmony default export */ __webpack_exports__["a"] = (warningOnce);
/* eslint-enable */

/***/ }),

/***/ "IKQL":
/***/ (function(module, exports, __webpack_require__) {

// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
var $export = __webpack_require__("X6VK");

$export($export.P, 'Array', { fill: __webpack_require__("Pfmf") });

__webpack_require__("OfmW")('fill');


/***/ }),

/***/ "IL7q":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/

/* eslint-disable no-unused-vars */

__webpack_require__("W1QL");

__webpack_require__("K/PF");

__webpack_require__("t91x");

__webpack_require__("75LO");

__webpack_require__("asZ9");

__webpack_require__("7lGJ");

__webpack_require__("yIlq");

__webpack_require__("5hJT");

__webpack_require__("ABKx");

var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
  if (val === null || val === undefined) {
    throw new TypeError('Object.assign cannot be called with null or undefined');
  }

  return Object(val);
}

function shouldUseNative() {
  try {
    if (!Object.assign) {
      return false;
    } // Detect buggy property enumeration order in older V8 versions.
    // https://bugs.chromium.org/p/v8/issues/detail?id=4118


    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers

    test1[5] = 'de';

    if (Object.getOwnPropertyNames(test1)[0] === '5') {
      return false;
    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


    var test2 = {};

    for (var i = 0; i < 10; i++) {
      test2['_' + String.fromCharCode(i)] = i;
    }

    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
      return test2[n];
    });

    if (order2.join('') !== '0123456789') {
      return false;
    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


    var test3 = {};
    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
      test3[letter] = letter;
    });

    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
      return false;
    }

    return true;
  } catch (err) {
    // We don't expect any of the above to throw, but better to be safe.
    return false;
  }
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
  var from;
  var to = toObject(target);
  var symbols;

  for (var s = 1; s < arguments.length; s++) {
    from = Object(arguments[s]);

    for (var key in from) {
      if (hasOwnProperty.call(from, key)) {
        to[key] = from[key];
      }
    }

    if (getOwnPropertySymbols) {
      symbols = getOwnPropertySymbols(from);

      for (var i = 0; i < symbols.length; i++) {
        if (propIsEnumerable.call(from, symbols[i])) {
          to[symbols[i]] = from[symbols[i]];
        }
      }
    }
  }

  return to;
};

/***/ }),

/***/ "IOVJ":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("5hJT");
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("mXGw");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _loader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("emEt");
/* harmony import */ var _api_runner_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("xtsi");
/* harmony import */ var _api_runner_browser__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_api_runner_browser__WEBPACK_IMPORTED_MODULE_3__);
function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype);subClass.prototype.constructor=subClass;subClass.__proto__=superClass;}// Renders page
var PageRenderer=/*#__PURE__*/function(_React$Component){_inheritsLoose(PageRenderer,_React$Component);function PageRenderer(){return _React$Component.apply(this,arguments)||this;}var _proto=PageRenderer.prototype;_proto.render=function render(){var props=Object.assign({},this.props,{pathContext:this.props.pageContext});var _apiRunner=Object(_api_runner_browser__WEBPACK_IMPORTED_MODULE_3__["apiRunner"])("replaceComponentRenderer",{props:this.props,loader:_loader__WEBPACK_IMPORTED_MODULE_2__["publicLoader"]}),replacementElement=_apiRunner[0];var pageElement=replacementElement||/*#__PURE__*/Object(react__WEBPACK_IMPORTED_MODULE_1__["createElement"])(this.props.pageResources.component,Object.assign({},props,{key:this.props.path||this.props.pageResources.page.path}));var wrappedPage=Object(_api_runner_browser__WEBPACK_IMPORTED_MODULE_3__["apiRunner"])("wrapPageElement",{element:pageElement,props:props},pageElement,function(_ref){var result=_ref.result;return{element:result,props:props};}).pop();return wrappedPage;};return PageRenderer;}(react__WEBPACK_IMPORTED_MODULE_1___default.a.Component);/* harmony default export */ __webpack_exports__["a"] = (PageRenderer);

/***/ }),

/***/ "Ibj2":
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "IdFN":
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),

/***/ "IoK0":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _nonIterableRest; });
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

/***/ }),

/***/ "IqHs":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // This icon file is generated automatically.

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var ExclamationCircleFilled = {
  "icon": {
    "tag": "svg",
    "attrs": {
      "viewBox": "64 64 896 896",
      "focusable": "false"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm-32 232c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v272c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V296zm32 440a48.01 48.01 0 010-96 48.01 48.01 0 010 96z"
      }
    }]
  },
  "name": "exclamation-circle",
  "theme": "filled"
};
exports["default"] = ExclamationCircleFilled;

/***/ }),

/***/ "IyKV":
/***/ (function(module, exports, __webpack_require__) {

var _checkForMethod = __webpack_require__("vXgj");

var _curry1 = __webpack_require__("AN6r");

var slice = __webpack_require__("w4Md");
/**
 * Returns all but the first element of the given list or string (or object
 * with a `tail` method).
 *
 * Dispatches to the `slice` method of the first argument, if present.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig [a] -> [a]
 * @sig String -> String
 * @param {*} list
 * @return {*}
 * @see R.head, R.init, R.last
 * @example
 *
 *      R.tail([1, 2, 3]);  //=> [2, 3]
 *      R.tail([1, 2]);     //=> [2]
 *      R.tail([1]);        //=> []
 *      R.tail([]);         //=> []
 *
 *      R.tail('abc');  //=> 'bc'
 *      R.tail('ab');   //=> 'b'
 *      R.tail('a');    //=> ''
 *      R.tail('');     //=> ''
 */


module.exports = _curry1(_checkForMethod('tail', slice(1, Infinity)));

/***/ }),

/***/ "IycE":
/***/ (function(module, exports, __webpack_require__) {

var _arity = __webpack_require__("r/sL");

var _pipe = __webpack_require__("IEjY");

var reduce = __webpack_require__("wV56");

var tail = __webpack_require__("IyKV");
/**
 * Performs left-to-right function composition. The leftmost function may have
 * any arity; the remaining functions must be unary.
 *
 * In some libraries this function is named `sequence`.
 *
 * **Note:** The result of pipe is not automatically curried.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Function
 * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)
 * @param {...Function} functions
 * @return {Function}
 * @see R.compose
 * @example
 *
 *      var f = R.pipe(Math.pow, R.negate, R.inc);
 *
 *      f(3, 4); // -(3^4) + 1
 * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))
 */


module.exports = function pipe() {
  if (arguments.length === 0) {
    throw new Error('pipe requires at least one argument');
  }

  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));
};

/***/ }),

/***/ "J1LG":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _typeof; });
function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

/***/ }),

/***/ "J8hF":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("P56o");
var inheritIfRequired = __webpack_require__("jEou");
var dP = __webpack_require__("U1KF").f;
var gOPN = __webpack_require__("zIds").f;
var isRegExp = __webpack_require__("NVL/");
var $flags = __webpack_require__("MBcE");
var $RegExp = global.RegExp;
var Base = $RegExp;
var proto = $RegExp.prototype;
var re1 = /a/g;
var re2 = /a/g;
// "new" creates a new object, old webkit buggy here
var CORRECT_NEW = new $RegExp(re1) !== re1;

if (__webpack_require__("GGqZ") && (!CORRECT_NEW || __webpack_require__("E7Vc")(function () {
  re2[__webpack_require__("9dxi")('match')] = false;
  // RegExp constructor can alter flags and IsRegExp works correct with @@match
  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
}))) {
  $RegExp = function RegExp(p, f) {
    var tiRE = this instanceof $RegExp;
    var piRE = isRegExp(p);
    var fiU = f === undefined;
    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p
      : inheritIfRequired(CORRECT_NEW
        ? new Base(piRE && !fiU ? p.source : p, f)
        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)
      , tiRE ? this : proto, $RegExp);
  };
  var proxy = function (key) {
    key in $RegExp || dP($RegExp, key, {
      configurable: true,
      get: function () { return Base[key]; },
      set: function (it) { Base[key] = it; }
    });
  };
  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);
  proto.constructor = $RegExp;
  $RegExp.prototype = proto;
  __webpack_require__("sU/p")(global, 'RegExp', $RegExp);
}

__webpack_require__("E8p1")('RegExp');


/***/ }),

/***/ "JF+v":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Link", function() { return Link; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Location", function() { return Location; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocationProvider", function() { return LocationProvider; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Match", function() { return Match; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Redirect", function() { return Redirect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Router", function() { return Router; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ServerLocation", function() { return ServerLocation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isRedirect", function() { return isRedirect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "redirectTo", function() { return redirectTo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useLocation", function() { return useLocation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useNavigate", function() { return useNavigate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useParams", function() { return useParams; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useMatch", function() { return useMatch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BaseContext", function() { return BaseContext; });
/* harmony import */ var core_js_modules_es6_array_map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("yIlq");
/* harmony import */ var core_js_modules_es6_array_map__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_map__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("Z8gF");
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es6_array_reduce__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("3y5y");
/* harmony import */ var core_js_modules_es6_array_reduce__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_reduce__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es6_promise__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("DbwS");
/* harmony import */ var core_js_modules_es6_promise__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_promise__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("t91x");
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es6_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("1qKx");
/* harmony import */ var core_js_modules_es6_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es6_object_create__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("PAbq");
/* harmony import */ var core_js_modules_es6_object_create__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_create__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es6_array_index_of__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("V7cS");
/* harmony import */ var core_js_modules_es6_array_index_of__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_index_of__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("5hJT");
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("mXGw");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var invariant__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("+Ltg");
/* harmony import */ var invariant__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(invariant__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var create_react_context__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("nqlD");
/* harmony import */ var create_react_context__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(create_react_context__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var react_lifecycles_compat__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("94VI");
/* harmony import */ var react_lifecycles_compat__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(react_lifecycles_compat__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("ZkUl");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "matchPath", function() { return _lib_utils__WEBPACK_IMPORTED_MODULE_13__["match"]; });

/* harmony import */ var _lib_history__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__("ELdr");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createHistory", function() { return _lib_history__WEBPACK_IMPORTED_MODULE_14__["a"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMemorySource", function() { return _lib_history__WEBPACK_IMPORTED_MODULE_14__["b"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "navigate", function() { return _lib_history__WEBPACK_IMPORTED_MODULE_14__["d"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "globalHistory", function() { return _lib_history__WEBPACK_IMPORTED_MODULE_14__["c"]; });











var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

function _objectWithoutProperties(obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
/* eslint-disable jsx-a11y/anchor-has-content */







 ////////////////////////////////////////////////////////////////////////////////

var createNamedContext = function createNamedContext(name, defaultValue) {
  var Ctx = create_react_context__WEBPACK_IMPORTED_MODULE_11___default()(defaultValue);
  Ctx.displayName = name;
  return Ctx;
}; ////////////////////////////////////////////////////////////////////////////////
// Location Context/Provider


var LocationContext = createNamedContext("Location"); // sets up a listener if there isn't one already so apps don't need to be
// wrapped in some top level provider

var Location = function Location(_ref) {
  var children = _ref.children;
  return react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(LocationContext.Consumer, null, function (context) {
    return context ? children(context) : react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(LocationProvider, null, children);
  });
};

var LocationProvider = function (_React$Component) {
  _inherits(LocationProvider, _React$Component);

  function LocationProvider() {
    var _temp, _this, _ret;

    _classCallCheck(this, LocationProvider);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
      context: _this.getContext(),
      refs: {
        unlisten: null
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  LocationProvider.prototype.getContext = function getContext() {
    var _props$history = this.props.history,
        navigate = _props$history.navigate,
        location = _props$history.location;
    return {
      navigate: navigate,
      location: location
    };
  };

  LocationProvider.prototype.componentDidCatch = function componentDidCatch(error, info) {
    if (isRedirect(error)) {
      var _navigate = this.props.history.navigate;

      _navigate(error.uri, {
        replace: true
      });
    } else {
      throw error;
    }
  };

  LocationProvider.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
    if (prevState.context.location !== this.state.context.location) {
      this.props.history._onTransitionComplete();
    }
  };

  LocationProvider.prototype.componentDidMount = function componentDidMount() {
    var _this2 = this;

    var refs = this.state.refs,
        history = this.props.history;

    history._onTransitionComplete();

    refs.unlisten = history.listen(function () {
      Promise.resolve().then(function () {
        // TODO: replace rAF with react deferred update API when it's ready https://github.com/facebook/react/issues/13306
        requestAnimationFrame(function () {
          if (!_this2.unmounted) {
            _this2.setState(function () {
              return {
                context: _this2.getContext()
              };
            });
          }
        });
      });
    });
  };

  LocationProvider.prototype.componentWillUnmount = function componentWillUnmount() {
    var refs = this.state.refs;
    this.unmounted = true;
    refs.unlisten();
  };

  LocationProvider.prototype.render = function render() {
    var context = this.state.context,
        children = this.props.children;
    return react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(LocationContext.Provider, {
      value: context
    }, typeof children === "function" ? children(context) : children || null);
  };

  return LocationProvider;
}(react__WEBPACK_IMPORTED_MODULE_9___default.a.Component); ////////////////////////////////////////////////////////////////////////////////


LocationProvider.defaultProps = {
  history: _lib_history__WEBPACK_IMPORTED_MODULE_14__[/* globalHistory */ "c"]
};
 false ? undefined : void 0;

var ServerLocation = function ServerLocation(_ref2) {
  var url = _ref2.url,
      children = _ref2.children;
  var searchIndex = url.indexOf("?");
  var searchExists = searchIndex > -1;
  var pathname = void 0;
  var search = "";
  var hash = "";

  if (searchExists) {
    pathname = url.substring(0, searchIndex);
    search = url.substring(searchIndex);
  } else {
    pathname = url;
  }

  return react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(LocationContext.Provider, {
    value: {
      location: {
        pathname: pathname,
        search: search,
        hash: hash
      },
      navigate: function navigate() {
        throw new Error("You can't call navigate on the server.");
      }
    }
  }, children);
}; ////////////////////////////////////////////////////////////////////////////////
// Sets baseuri and basepath for nested routers and links


var BaseContext = createNamedContext("Base", {
  baseuri: "/",
  basepath: "/"
}); ////////////////////////////////////////////////////////////////////////////////
// The main event, welcome to the show everybody.

var Router = function Router(props) {
  return react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(BaseContext.Consumer, null, function (baseContext) {
    return react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(Location, null, function (locationContext) {
      return react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(RouterImpl, _extends({}, baseContext, locationContext, props));
    });
  });
};

var RouterImpl = function (_React$PureComponent) {
  _inherits(RouterImpl, _React$PureComponent);

  function RouterImpl() {
    _classCallCheck(this, RouterImpl);

    return _possibleConstructorReturn(this, _React$PureComponent.apply(this, arguments));
  }

  RouterImpl.prototype.render = function render() {
    var _props = this.props,
        location = _props.location,
        _navigate2 = _props.navigate,
        basepath = _props.basepath,
        primary = _props.primary,
        children = _props.children,
        baseuri = _props.baseuri,
        _props$component = _props.component,
        component = _props$component === undefined ? "div" : _props$component,
        domProps = _objectWithoutProperties(_props, ["location", "navigate", "basepath", "primary", "children", "baseuri", "component"]);

    var routes = react__WEBPACK_IMPORTED_MODULE_9___default.a.Children.toArray(children).reduce(function (array, child) {
      var routes = createRoute(basepath)(child);
      return array.concat(routes);
    }, []);
    var pathname = location.pathname;
    var match = Object(_lib_utils__WEBPACK_IMPORTED_MODULE_13__["pick"])(routes, pathname);

    if (match) {
      var params = match.params,
          uri = match.uri,
          route = match.route,
          element = match.route.value; // remove the /* from the end for child routes relative paths

      basepath = route["default"] ? basepath : route.path.replace(/\*$/, "");

      var props = _extends({}, params, {
        uri: uri,
        location: location,
        navigate: function navigate(to, options) {
          return _navigate2(Object(_lib_utils__WEBPACK_IMPORTED_MODULE_13__["resolve"])(to, uri), options);
        }
      });

      var clone = react__WEBPACK_IMPORTED_MODULE_9___default.a.cloneElement(element, props, element.props.children ? react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(Router, {
        location: location,
        primary: primary
      }, element.props.children) : undefined); // using 'div' for < 16.3 support

      var FocusWrapper = primary ? FocusHandler : component; // don't pass any props to 'div'

      var wrapperProps = primary ? _extends({
        uri: uri,
        location: location,
        component: component
      }, domProps) : domProps;
      return react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(BaseContext.Provider, {
        value: {
          baseuri: uri,
          basepath: basepath
        }
      }, react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(FocusWrapper, wrapperProps, clone));
    } else {
      // Not sure if we want this, would require index routes at every level
      // warning(
      //   false,
      //   `<Router basepath="${basepath}">\n\nNothing matched:\n\t${
      //     location.pathname
      //   }\n\nPaths checked: \n\t${routes
      //     .map(route => route.path)
      //     .join(
      //       "\n\t"
      //     )}\n\nTo get rid of this warning, add a default NotFound component as child of Router:
      //   \n\tlet NotFound = () => <div>Not Found!</div>
      //   \n\t<Router>\n\t  <NotFound default/>\n\t  {/* ... */}\n\t</Router>`
      // );
      return null;
    }
  };

  return RouterImpl;
}(react__WEBPACK_IMPORTED_MODULE_9___default.a.PureComponent);

RouterImpl.defaultProps = {
  primary: true
};
var FocusContext = createNamedContext("Focus");

var FocusHandler = function FocusHandler(_ref3) {
  var uri = _ref3.uri,
      location = _ref3.location,
      component = _ref3.component,
      domProps = _objectWithoutProperties(_ref3, ["uri", "location", "component"]);

  return react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(FocusContext.Consumer, null, function (requestFocus) {
    return react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(FocusHandlerImpl, _extends({}, domProps, {
      component: component,
      requestFocus: requestFocus,
      uri: uri,
      location: location
    }));
  });
}; // don't focus on initial render


var initialRender = true;
var focusHandlerCount = 0;

var FocusHandlerImpl = function (_React$Component2) {
  _inherits(FocusHandlerImpl, _React$Component2);

  function FocusHandlerImpl() {
    var _temp2, _this4, _ret2;

    _classCallCheck(this, FocusHandlerImpl);

    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    return _ret2 = (_temp2 = (_this4 = _possibleConstructorReturn(this, _React$Component2.call.apply(_React$Component2, [this].concat(args))), _this4), _this4.state = {}, _this4.requestFocus = function (node) {
      if (!_this4.state.shouldFocus && node) {
        node.focus();
      }
    }, _temp2), _possibleConstructorReturn(_this4, _ret2);
  }

  FocusHandlerImpl.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
    var initial = prevState.uri == null;

    if (initial) {
      return _extends({
        shouldFocus: true
      }, nextProps);
    } else {
      var myURIChanged = nextProps.uri !== prevState.uri;
      var navigatedUpToMe = prevState.location.pathname !== nextProps.location.pathname && nextProps.location.pathname === nextProps.uri;
      return _extends({
        shouldFocus: myURIChanged || navigatedUpToMe
      }, nextProps);
    }
  };

  FocusHandlerImpl.prototype.componentDidMount = function componentDidMount() {
    focusHandlerCount++;
    this.focus();
  };

  FocusHandlerImpl.prototype.componentWillUnmount = function componentWillUnmount() {
    focusHandlerCount--;

    if (focusHandlerCount === 0) {
      initialRender = true;
    }
  };

  FocusHandlerImpl.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
    if (prevProps.location !== this.props.location && this.state.shouldFocus) {
      this.focus();
    }
  };

  FocusHandlerImpl.prototype.focus = function focus() {
    if (false) {}

    var requestFocus = this.props.requestFocus;

    if (requestFocus) {
      requestFocus(this.node);
    } else {
      if (initialRender) {
        initialRender = false;
      } else if (this.node) {
        // React polyfills [autofocus] and it fires earlier than cDM,
        // so we were stealing focus away, this line prevents that.
        if (!this.node.contains(document.activeElement)) {
          this.node.focus();
        }
      }
    }
  };

  FocusHandlerImpl.prototype.render = function render() {
    var _this5 = this;

    var _props2 = this.props,
        children = _props2.children,
        style = _props2.style,
        requestFocus = _props2.requestFocus,
        _props2$component = _props2.component,
        Comp = _props2$component === undefined ? "div" : _props2$component,
        uri = _props2.uri,
        location = _props2.location,
        domProps = _objectWithoutProperties(_props2, ["children", "style", "requestFocus", "component", "uri", "location"]);

    return react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(Comp, _extends({
      style: _extends({
        outline: "none"
      }, style),
      tabIndex: "-1",
      ref: function ref(n) {
        return _this5.node = n;
      }
    }, domProps), react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(FocusContext.Provider, {
      value: this.requestFocus
    }, this.props.children));
  };

  return FocusHandlerImpl;
}(react__WEBPACK_IMPORTED_MODULE_9___default.a.Component);

Object(react_lifecycles_compat__WEBPACK_IMPORTED_MODULE_12__["polyfill"])(FocusHandlerImpl);

var k = function k() {}; ////////////////////////////////////////////////////////////////////////////////


var forwardRef = react__WEBPACK_IMPORTED_MODULE_9___default.a.forwardRef;

if (typeof forwardRef === "undefined") {
  forwardRef = function forwardRef(C) {
    return C;
  };
}

var Link = forwardRef(function (_ref4, ref) {
  var innerRef = _ref4.innerRef,
      props = _objectWithoutProperties(_ref4, ["innerRef"]);

  return react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(BaseContext.Consumer, null, function (_ref5) {
    var basepath = _ref5.basepath,
        baseuri = _ref5.baseuri;
    return react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(Location, null, function (_ref6) {
      var location = _ref6.location,
          navigate = _ref6.navigate;

      var to = props.to,
          state = props.state,
          replace = props.replace,
          _props$getProps = props.getProps,
          getProps = _props$getProps === undefined ? k : _props$getProps,
          anchorProps = _objectWithoutProperties(props, ["to", "state", "replace", "getProps"]);

      var href = Object(_lib_utils__WEBPACK_IMPORTED_MODULE_13__["resolve"])(to, baseuri);
      var encodedHref = encodeURI(href);
      var isCurrent = location.pathname === encodedHref;
      var isPartiallyCurrent = Object(_lib_utils__WEBPACK_IMPORTED_MODULE_13__["startsWith"])(location.pathname, encodedHref);
      return react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement("a", _extends({
        ref: ref || innerRef,
        "aria-current": isCurrent ? "page" : undefined
      }, anchorProps, getProps({
        isCurrent: isCurrent,
        isPartiallyCurrent: isPartiallyCurrent,
        href: href,
        location: location
      }), {
        href: href,
        onClick: function onClick(event) {
          if (anchorProps.onClick) anchorProps.onClick(event);

          if (shouldNavigate(event)) {
            event.preventDefault();
            var shouldReplace = replace;

            if (typeof replace !== "boolean" && isCurrent) {
              var _location$state = _extends({}, location.state),
                  key = _location$state.key,
                  restState = _objectWithoutProperties(_location$state, ["key"]);

              shouldReplace = Object(_lib_utils__WEBPACK_IMPORTED_MODULE_13__["shallowCompare"])(_extends({}, state), restState);
            }

            navigate(href, {
              state: state,
              replace: shouldReplace
            });
          }
        }
      }));
    });
  });
});
Link.displayName = "Link";
 false ? undefined : void 0; ////////////////////////////////////////////////////////////////////////////////

function RedirectRequest(uri) {
  this.uri = uri;
}

var isRedirect = function isRedirect(o) {
  return o instanceof RedirectRequest;
};

var redirectTo = function redirectTo(to) {
  throw new RedirectRequest(to);
};

var RedirectImpl = function (_React$Component3) {
  _inherits(RedirectImpl, _React$Component3);

  function RedirectImpl() {
    _classCallCheck(this, RedirectImpl);

    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));
  } // Support React < 16 with this hook


  RedirectImpl.prototype.componentDidMount = function componentDidMount() {
    var _props3 = this.props,
        navigate = _props3.navigate,
        to = _props3.to,
        from = _props3.from,
        _props3$replace = _props3.replace,
        replace = _props3$replace === undefined ? true : _props3$replace,
        state = _props3.state,
        noThrow = _props3.noThrow,
        baseuri = _props3.baseuri,
        props = _objectWithoutProperties(_props3, ["navigate", "to", "from", "replace", "state", "noThrow", "baseuri"]);

    Promise.resolve().then(function () {
      var resolvedTo = Object(_lib_utils__WEBPACK_IMPORTED_MODULE_13__["resolve"])(to, baseuri);
      navigate(Object(_lib_utils__WEBPACK_IMPORTED_MODULE_13__["insertParams"])(resolvedTo, props), {
        replace: replace,
        state: state
      });
    });
  };

  RedirectImpl.prototype.render = function render() {
    var _props4 = this.props,
        navigate = _props4.navigate,
        to = _props4.to,
        from = _props4.from,
        replace = _props4.replace,
        state = _props4.state,
        noThrow = _props4.noThrow,
        baseuri = _props4.baseuri,
        props = _objectWithoutProperties(_props4, ["navigate", "to", "from", "replace", "state", "noThrow", "baseuri"]);

    var resolvedTo = Object(_lib_utils__WEBPACK_IMPORTED_MODULE_13__["resolve"])(to, baseuri);
    if (!noThrow) redirectTo(Object(_lib_utils__WEBPACK_IMPORTED_MODULE_13__["insertParams"])(resolvedTo, props));
    return null;
  };

  return RedirectImpl;
}(react__WEBPACK_IMPORTED_MODULE_9___default.a.Component);

var Redirect = function Redirect(props) {
  return react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(BaseContext.Consumer, null, function (_ref7) {
    var baseuri = _ref7.baseuri;
    return react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(Location, null, function (locationContext) {
      return react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(RedirectImpl, _extends({}, locationContext, {
        baseuri: baseuri
      }, props));
    });
  });
};

 false ? undefined : void 0; ////////////////////////////////////////////////////////////////////////////////

var Match = function Match(_ref8) {
  var path = _ref8.path,
      children = _ref8.children;
  return react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(BaseContext.Consumer, null, function (_ref9) {
    var baseuri = _ref9.baseuri;
    return react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(Location, null, function (_ref10) {
      var navigate = _ref10.navigate,
          location = _ref10.location;
      var resolvedPath = Object(_lib_utils__WEBPACK_IMPORTED_MODULE_13__["resolve"])(path, baseuri);
      var result = Object(_lib_utils__WEBPACK_IMPORTED_MODULE_13__["match"])(resolvedPath, location.pathname);
      return children({
        navigate: navigate,
        location: location,
        match: result ? _extends({}, result.params, {
          uri: result.uri,
          path: path
        }) : null
      });
    });
  });
}; ////////////////////////////////////////////////////////////////////////////////
// Hooks


var useLocation = function useLocation() {
  var context = Object(react__WEBPACK_IMPORTED_MODULE_9__["useContext"])(LocationContext);

  if (!context) {
    throw new Error("useLocation hook was used but a LocationContext.Provider was not found in the parent tree. Make sure this is used in a component that is a child of Router");
  }

  return context.location;
};

var useNavigate = function useNavigate() {
  var context = Object(react__WEBPACK_IMPORTED_MODULE_9__["useContext"])(LocationContext);

  if (!context) {
    throw new Error("useNavigate hook was used but a LocationContext.Provider was not found in the parent tree. Make sure this is used in a component that is a child of Router");
  }

  return context.navigate;
};

var useParams = function useParams() {
  var context = Object(react__WEBPACK_IMPORTED_MODULE_9__["useContext"])(BaseContext);

  if (!context) {
    throw new Error("useParams hook was used but a LocationContext.Provider was not found in the parent tree. Make sure this is used in a component that is a child of Router");
  }

  var location = useLocation();
  var results = Object(_lib_utils__WEBPACK_IMPORTED_MODULE_13__["match"])(context.basepath, location.pathname);
  return results ? results.params : null;
};

var useMatch = function useMatch(path) {
  if (!path) {
    throw new Error("useMatch(path: string) requires an argument of a string to match against");
  }

  var context = Object(react__WEBPACK_IMPORTED_MODULE_9__["useContext"])(BaseContext);

  if (!context) {
    throw new Error("useMatch hook was used but a LocationContext.Provider was not found in the parent tree. Make sure this is used in a component that is a child of Router");
  }

  var location = useLocation();
  var resolvedPath = Object(_lib_utils__WEBPACK_IMPORTED_MODULE_13__["resolve"])(path, context.baseuri);
  var result = Object(_lib_utils__WEBPACK_IMPORTED_MODULE_13__["match"])(resolvedPath, location.pathname);
  return result ? _extends({}, result.params, {
    uri: result.uri,
    path: path
  }) : null;
}; ////////////////////////////////////////////////////////////////////////////////
// Junk


var stripSlashes = function stripSlashes(str) {
  return str.replace(/(^\/+|\/+$)/g, "");
};

var createRoute = function createRoute(basepath) {
  return function (element) {
    if (!element) {
      return null;
    }

    if (element.type === react__WEBPACK_IMPORTED_MODULE_9___default.a.Fragment && element.props.children) {
      return react__WEBPACK_IMPORTED_MODULE_9___default.a.Children.map(element.props.children, createRoute(basepath));
    }

    !(element.props.path || element.props["default"] || element.type === Redirect) ?  false ? undefined : invariant__WEBPACK_IMPORTED_MODULE_10___default()(false) : void 0;
    !!(element.type === Redirect && (!element.props.from || !element.props.to)) ?  false ? undefined : invariant__WEBPACK_IMPORTED_MODULE_10___default()(false) : void 0;
    !!(element.type === Redirect && !Object(_lib_utils__WEBPACK_IMPORTED_MODULE_13__["validateRedirect"])(element.props.from, element.props.to)) ?  false ? undefined : invariant__WEBPACK_IMPORTED_MODULE_10___default()(false) : void 0;

    if (element.props["default"]) {
      return {
        value: element,
        "default": true
      };
    }

    var elementPath = element.type === Redirect ? element.props.from : element.props.path;
    var path = elementPath === "/" ? basepath : stripSlashes(basepath) + "/" + stripSlashes(elementPath);
    return {
      value: element,
      "default": element.props["default"],
      path: element.props.children ? stripSlashes(path) + "/*" : path
    };
  };
};

var shouldNavigate = function shouldNavigate(event) {
  return !event.defaultPrevented && event.button === 0 && !(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}; ////////////////////////////////////////////////////////////////////////




/***/ }),

/***/ "JFiQ":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("V7cS");

__webpack_require__("yIlq");

__webpack_require__("W1QL");

__webpack_require__("K/PF");

__webpack_require__("t91x");

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var util_1 = __webpack_require__("NFQX"); // todo 这个到底目的是什么？


var toScaleString = function toScaleString(scale, value) {
  if (util_1.isString(value)) {
    return value;
  }

  return scale.invert(scale.scale(value));
};
/**
 * 所有视觉通道属性的基类
 * @class Base
 */


var Attribute =
/** @class */
function () {
  function Attribute(cfg) {
    this.names = [];
    this.scales = [];
    this.linear = false;
    this.values = [];

    this.callback = function () {
      return [];
    }; // 解析配置


    this._parseCfg(cfg);
  }
  /**
   * 映射的值组成的数组
   * @param params 对应 scale 顺序的值传入
   */


  Attribute.prototype.mapping = function () {
    var _this = this;

    var params = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      params[_i] = arguments[_i];
    }

    var values = params.map(function (param, idx) {
      return _this._toOriginParam(param, _this.scales[idx]);
    });
    return this.callback.apply(this, values);
  };
  /**
   * 如果进行线性映射，返回对应的映射值
   * @param percent
   */


  Attribute.prototype.getLinearValue = function (percent) {
    // 分段数量
    var steps = this.values.length - 1;
    var step = Math.floor(steps * percent);
    var leftPercent = steps * percent - step; // todo 不懂这个逻辑

    var start = this.values[step];
    var end = step === steps ? start : this.values[step + 1]; // 线性方程

    return start + (end - start) * leftPercent;
  };
  /**
   * 根据度量获取属性名
   */


  Attribute.prototype.getNames = function () {
    var scales = this.scales;
    var names = this.names;
    var length = Math.min(scales.length, names.length);
    var rst = [];

    for (var i = 0; i < length; i += 1) {
      rst.push(names[i]);
    }

    return rst;
  };
  /**
   * 获取所有的维度名
   */


  Attribute.prototype.getFields = function () {
    return this.scales.map(function (scale) {
      return scale.field;
    });
  };
  /**
   * 根据名称获取度量
   * @param name
   */


  Attribute.prototype.getScale = function (name) {
    return this.scales[this.names.indexOf(name)];
  };
  /**
   * 默认的回调函数（用户没有自定义 callback，或者用户自定义 callback 返回空的时候，使用 values 映射）
   * @param params
   */


  Attribute.prototype.defaultCallback = function () {
    var _this = this;

    var params = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      params[_i] = arguments[_i];
    } // 没有 params 的情况，是指没有指定 fields，直接返回配置的 values 常量


    if (params.length === 0) {
      return this.values;
    }

    return params.map(function (param, idx) {
      var scale = _this.scales[idx];
      return scale.type === 'identity' ? scale.values[0] : _this._getAttributeValue(scale, param);
    });
  }; // 解析配置


  Attribute.prototype._parseCfg = function (cfg) {
    var _this = this;

    var _a = cfg.type,
        type = _a === void 0 ? 'base' : _a,
        _b = cfg.names,
        names = _b === void 0 ? [] : _b,
        _c = cfg.scales,
        scales = _c === void 0 ? [] : _c,
        _d = cfg.values,
        values = _d === void 0 ? [] : _d,
        callback = cfg.callback;
    this.type = type;
    this.scales = scales;
    this.values = values;
    this.names = names; // 构造 callback 方法

    this.callback = function () {
      var params = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        params[_i] = arguments[_i];
      }
      /**
       * 当用户设置的 callback 返回 null 时, 应该返回默认 callback 中的值
       */


      if (callback) {
        // 使用用户返回的值处理
        var ret = callback.apply(void 0, params);

        if (!util_1.isNil(ret)) {
          return [ret];
        }
      } // 没有 callback 或者用户 callback 返回值为空，则使用默认的逻辑处理


      return _this.defaultCallback.apply(_this, params);
    };
  }; // 获取属性值，将值映射到视觉通道


  Attribute.prototype._getAttributeValue = function (scale, value) {
    // 如果是非线性的字段，直接从 values 中取值即可
    if (scale.isCategory && !this.linear) {
      // 离散 scale 变换成索引
      var idx = scale.translate(value);
      return this.values[idx % this.values.length];
    } // 线性则使用线性值


    var percent = scale.scale(value);
    return this.getLinearValue(percent);
  };
  /**
   * 通过 scale 拿到数据对应的原始的参数
   * @param param
   * @param scale
   * @private
   */


  Attribute.prototype._toOriginParam = function (param, scale) {
    // 是线性，直接返回
    // 非线性，使用 scale 变换
    return !scale.isLinear ? util_1.isArray(param) ? param.map(function (p) {
      return toScaleString(scale, p);
    }) : toScaleString(scale, param) : param;
  };

  return Attribute;
}();

exports["default"] = Attribute;

/***/ }),

/***/ "JGfN":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("ZVIm")('native-function-to-string', Function.toString);


/***/ }),

/***/ "JHqH":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var isObjectLike = function isObjectLike(value) {
  /**
   * isObjectLike({}) => true
   * isObjectLike([1, 2, 3]) => true
   * isObjectLike(Function) => false
   * isObjectLike(null) => false
   */
  return typeof value === 'object' && value !== null;
};

exports["default"] = isObjectLike;

/***/ }),

/***/ "JKk3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)

var toObject = __webpack_require__("UnHL");
var toAbsoluteIndex = __webpack_require__("BUlT");
var toLength = __webpack_require__("Sp5b");

module.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {
  var O = toObject(this);
  var len = toLength(O.length);
  var to = toAbsoluteIndex(target, len);
  var from = toAbsoluteIndex(start, len);
  var end = arguments.length > 2 ? arguments[2] : undefined;
  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);
  var inc = 1;
  if (from < to && to < from + count) {
    inc = -1;
    from += count - 1;
    to += count - 1;
  }
  while (count-- > 0) {
    if (from in O) O[to] = O[from];
    else delete O[to];
    to += inc;
    from += inc;
  } return O;
};


/***/ }),

/***/ "JN4+":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports["default"] = function (value) {
  /**
   * isObject({}) => true
   * isObject([1, 2, 3]) => true
   * isObject(Function) => true
   * isObject(null) => false
   */
  var type = typeof value;
  return value !== null && type === 'object' || type === 'function';
};

/***/ }),

/***/ "JOti":
/***/ (function(module) {

module.exports = JSON.parse("{\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"AntV test site\",\"description\":\"Ant Visualization solution home page\"}}}}");

/***/ }),

/***/ "JfS1":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var mod_1 = __webpack_require__("QQd8");

var to_radian_1 = __webpack_require__("Ce2C"); // 向量长度


function vMag(v) {
  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);
} // u.v/|u||v|，计算夹角的余弦值


function vRatio(u, v) {
  // 当存在一个向量的长度为 0 时，夹角也为 0，即夹角的余弦值为 1
  return vMag(u) * vMag(v) ? (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v)) : 1;
} // 向量角度


function vAngle(u, v) {
  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));
}
/**
 * 判断两个点是否重合，点坐标的格式为 [x, y]
 * @param {Array} point1 第一个点
 * @param {Array} point2 第二个点
 */


function isSamePoint(point1, point2) {
  return point1[0] === point2[0] && point1[1] === point2[1];
}

exports.isSamePoint = isSamePoint; // A 0:rx 1:ry 2:x-axis-rotation 3:large-arc-flag 4:sweep-flag 5: x 6: y

function getArcParams(startPoint, params) {
  var rx = params[1];
  var ry = params[2];
  var xRotation = mod_1["default"](to_radian_1["default"](params[3]), Math.PI * 2);
  var arcFlag = params[4];
  var sweepFlag = params[5]; // 弧形起点坐标

  var x1 = startPoint[0];
  var y1 = startPoint[1]; // 弧形终点坐标

  var x2 = params[6];
  var y2 = params[7];
  var xp = Math.cos(xRotation) * (x1 - x2) / 2.0 + Math.sin(xRotation) * (y1 - y2) / 2.0;
  var yp = -1 * Math.sin(xRotation) * (x1 - x2) / 2.0 + Math.cos(xRotation) * (y1 - y2) / 2.0;
  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);

  if (lambda > 1) {
    rx *= Math.sqrt(lambda);
    ry *= Math.sqrt(lambda);
  }

  var diff = rx * rx * (yp * yp) + ry * ry * (xp * xp);
  var f = diff ? Math.sqrt((rx * rx * (ry * ry) - diff) / diff) : 1;

  if (arcFlag === sweepFlag) {
    f *= -1;
  }

  if (isNaN(f)) {
    f = 0;
  } // 旋转前的起点坐标，且当长半轴和短半轴的长度为 0 时，坐标按 (0, 0) 处理


  var cxp = ry ? f * rx * yp / ry : 0;
  var cyp = rx ? f * -ry * xp / rx : 0; // 椭圆圆心坐标

  var cx = (x1 + x2) / 2.0 + Math.cos(xRotation) * cxp - Math.sin(xRotation) * cyp;
  var cy = (y1 + y2) / 2.0 + Math.sin(xRotation) * cxp + Math.cos(xRotation) * cyp; // 起始点的单位向量

  var u = [(xp - cxp) / rx, (yp - cyp) / ry]; // 终止点的单位向量

  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry]; // 计算起始点和圆心的连线，与 x 轴正方向的夹角

  var theta = vAngle([1, 0], u); // 计算圆弧起始点和终止点与椭圆圆心连线的夹角

  var dTheta = vAngle(u, v);

  if (vRatio(u, v) <= -1) {
    dTheta = Math.PI;
  }

  if (vRatio(u, v) >= 1) {
    dTheta = 0;
  }

  if (sweepFlag === 0 && dTheta > 0) {
    dTheta = dTheta - 2 * Math.PI;
  }

  if (sweepFlag === 1 && dTheta < 0) {
    dTheta = dTheta + 2 * Math.PI;
  }

  return {
    cx: cx,
    cy: cy,
    // 弧形的起点和终点相同时，长轴和短轴的长度按 0 处理
    rx: isSamePoint(startPoint, [x2, y2]) ? 0 : rx,
    ry: isSamePoint(startPoint, [x2, y2]) ? 0 : ry,
    startAngle: theta,
    endAngle: theta + dTheta,
    xRotation: xRotation,
    arcFlag: arcFlag,
    sweepFlag: sweepFlag
  };
}

exports["default"] = getArcParams;

/***/ }),

/***/ "JiyH":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------

__webpack_require__("W1QL");

__webpack_require__("K/PF");

__webpack_require__("t91x");

__webpack_require__("75LO");

__webpack_require__("7lGJ");

__webpack_require__("3y5y");

__webpack_require__("yIlq");

var aliases = {
  equals: {
    /*~
     * module: null
     * type: |
     *   ('S 'a).('S 'a) => Boolean
     *   where 'S is Setoid
     */
    'fantasy-land/equals': function fantasyLandEquals(that) {
      return this.equals(that);
    }
  },
  concat: {
    /*~
     * module: null
     * type: |
     *   ('S 'a).('S 'a) => 'S 'a
     *   where 'S is Semigroup
     */
    'fantasy-land/concat': function fantasyLandConcat(that) {
      return this.concat(that);
    }
  },
  empty: {
    /*~
     * module: null
     * type: |
     *   ('M).() => 'M a
     *   where 'M is Monoid
     */
    'fantasy-land/empty': function fantasyLandEmpty() {
      return this.empty();
    }
  },
  map: {
    /*~
     * module: null
     * type: |
     *   ('F 'a).(('a) => 'b) => 'F 'b
     *   where 'F is Functor
     */
    'fantasy-land/map': function fantasyLandMap(transformation) {
      return this.map(transformation);
    }
  },
  apply: {
    /*~
     * module: null
     * type: |
     *   ('F ('a) => b).('F 'a) => 'F 'b
     *   where 'F is Apply
     */
    ap: function ap(that) {
      return this.apply(that);
    },

    /*~
     * module: null
     * type: |
     *   ('F 'a).('F ('a) => 'b) => 'F 'b
     *   where 'F is Apply
     */
    'fantasy-land/ap': function fantasyLandAp(that) {
      return that.apply(this);
    }
  },
  of: {
    /*~
     * module: null
     * type: |
     *   forall F, a:
     *     (F).(a) => F a
     *   where F is Applicative
     */
    'fantasy-land/of': function fantasyLandOf(value) {
      return this.of(value);
    }
  },
  or: {
    /*~
     * module: null
     * type: |
     *   forall F, a:
     *     (F a).(F a) => F a
     *   where F is Functor, Alt
     */
    'fantasy-land/alt': function fantasyLandAlt(value) {
      return this.or(value);
    },

    /*~
     * module: null
     * type: |
     *   forall F, a:
     *     (F a).(F a) => F a
     *   where F is Functor, Alt
     */
    alt: function alt(value) {
      return this.or(value);
    }
  },
  reduce: {
    /*~
     * module: null
     * type: |
     *   forall F, a, b:
     *     (F a).((b, a) => b, b) => b
     *   where F is Foldable
     */
    'fantasy-land/reduce': function fantasyLandReduce(combinator, initial) {
      return this.reduce(combinator, initial);
    }
  },
  traverse: {
    /*~
     * module: null
     * type: |
     *   forall F, T, a, b:
     *     (T a).((a) => F b, (c) => F c) => F (T b)
     *   where F is Apply, T is Traversable
     */
    'fantasy-land/traverse': function fantasyLandTraverse(transformation, lift) {
      return this.traverse(transformation, lift);
    }
  },
  chain: {
    /*~
     * module: null
     * type: |
     *   forall M, a, b:
     *     (M a).((a) => M b) => M b
     *   where M is Chain
     */
    'fantasy-land/chain': function fantasyLandChain(transformation) {
      return this.chain(transformation);
    }
  },
  chainRecursively: {
    /*~
     * module: null
     * type: |
     *   forall M, a, b, c:
     *     (M).(
     *       Step:    ((a) => c, (b) => c, a) => M c,
     *       Initial: a
     *     ) => M b
     *   where M is ChainRec
     */
    chainRec: function chainRec(step, initial) {
      return this.chainRecursively(step, initial);
    },

    /*~
     * module: null
     * type: |
     *   forall M, a, b, c:
     *     (M).(
     *       Step:    ((a) => c, (b) => c, a) => M c,
     *       Initial: a
     *     ) => M b
     *   where M is ChainRec
     */
    'fantasy-land/chainRec': function fantasyLandChainRec(step, initial) {
      return this.chainRecursively(step, initial);
    }
  },
  extend: {
    /*~
     * module: null
     * type: |
     *   forall W, a, b:
     *     (W a).((W a) => b) => W b
     *   where W is Extend
     */
    'fantasy-land/extend': function fantasyLandExtend(transformation) {
      return this.extend(transformation);
    }
  },
  extract: {
    /*~
     * module: null
     * type: |
     *   forall W, a, b:
     *     (W a).() => a
     *   where W is Comonad
     */
    'fantasy-land/extract': function fantasyLandExtract() {
      return this.extract();
    }
  },
  bimap: {
    /*~
     * module: null
     * type: |
     *   forall F, a, b, c, d:
     *     (F a b).((a) => c, (b) => d) => F c d
     *   where F is Bifunctor
     */
    'fantasy-land/bimap': function fantasyLandBimap(f, g) {
      return this.bimap(f, g);
    }
  },
  promap: {
    /*~
     * module: null
     * type: |
     *   forall P, a, b, c, d:
     *     (P a b).((c) => a, (b) => d) => P c d
     */
    'fantasy-land/promap': function fantasyLandPromap(f, g) {
      return this.promap(f, g);
    }
  }
};

var provideAliases = function provideAliases(structure) {
  Object.keys(aliases).forEach(function (method) {
    if (typeof structure[method] === 'function') {
      Object.keys(aliases[method]).forEach(function (alias) {
        structure[alias] = aliases[method][alias];
      });
    }
  });
};

module.exports = provideAliases;

/***/ }),

/***/ "JjL7":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("e2Kn");

__webpack_require__("MYxt");

__webpack_require__("9p7t");

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var quadratic_1 = __webpack_require__("8UeR");

var cubic_1 = __webpack_require__("St5J");

var arc_1 = __webpack_require__("91KL");

var path_2_segments_1 = __webpack_require__("aD5s");

var is_number_equal_1 = __webpack_require__("OQzY");

var util_1 = __webpack_require__("aOij");

function getPathBox(segments, lineWidth) {
  var xArr = [];
  var yArr = [];
  var segmentsWithAngle = [];

  for (var i = 0; i < segments.length; i++) {
    var segment = segments[i];
    var currentPoint = segment.currentPoint,
        params = segment.params,
        prePoint = segment.prePoint;
    var box = void 0;

    switch (segment.command) {
      case 'Q':
        box = quadratic_1["default"].box(prePoint[0], prePoint[1], params[1], params[2], params[3], params[4]);
        break;

      case 'C':
        box = cubic_1["default"].box(prePoint[0], prePoint[1], params[1], params[2], params[3], params[4], params[5], params[6]);
        break;

      case 'A':
        var arcParams = segment.arcParams;
        box = arc_1["default"].box(arcParams.cx, arcParams.cy, arcParams.rx, arcParams.ry, arcParams.xRotation, arcParams.startAngle, arcParams.endAngle);
        break;

      default:
        xArr.push(currentPoint[0]);
        yArr.push(currentPoint[1]);
        break;
    }

    if (box) {
      segment.box = box;
      xArr.push(box.x, box.x + box.width);
      yArr.push(box.y, box.y + box.height);
    }

    if (lineWidth && (segment.command === 'L' || segment.command === 'M') && segment.prePoint && segment.nextPoint) {
      segmentsWithAngle.push(segment);
    }
  } // bbox calculation should ignore NaN for path attribute
  // ref: https://github.com/antvis/g/issues/210


  xArr = xArr.filter(function (item) {
    return !Number.isNaN(item);
  });
  yArr = yArr.filter(function (item) {
    return !Number.isNaN(item);
  });
  var minX = Math.min.apply(null, xArr);
  var minY = Math.min.apply(null, yArr);
  var maxX = Math.max.apply(null, xArr);
  var maxY = Math.max.apply(null, yArr);

  if (segmentsWithAngle.length === 0) {
    return {
      x: minX,
      y: minY,
      width: maxX - minX,
      height: maxY - minY
    };
  }

  for (var i = 0; i < segmentsWithAngle.length; i++) {
    var segment = segmentsWithAngle[i];
    var currentPoint = segment.currentPoint;
    var extra = void 0;

    if (currentPoint[0] === minX) {
      extra = getExtraFromSegmentWithAngle(segment, lineWidth);
      minX = minX - extra.xExtra;
    } else if (currentPoint[0] === maxX) {
      extra = getExtraFromSegmentWithAngle(segment, lineWidth);
      maxX = maxX + extra.xExtra;
    }

    if (currentPoint[1] === minY) {
      extra = getExtraFromSegmentWithAngle(segment, lineWidth);
      minY = minY - extra.yExtra;
    } else if (currentPoint[1] === maxY) {
      extra = getExtraFromSegmentWithAngle(segment, lineWidth);
      maxY = maxY + extra.yExtra;
    }
  }

  return {
    x: minX,
    y: minY,
    width: maxX - minX,
    height: maxY - minY
  };
}

function getExtraFromSegmentWithAngle(segment, lineWidth) {
  var prePoint = segment.prePoint,
      currentPoint = segment.currentPoint,
      nextPoint = segment.nextPoint;
  var currentAndPre = Math.pow(currentPoint[0] - prePoint[0], 2) + Math.pow(currentPoint[1] - prePoint[1], 2);
  var currentAndNext = Math.pow(currentPoint[0] - nextPoint[0], 2) + Math.pow(currentPoint[1] - nextPoint[1], 2);
  var preAndNext = Math.pow(prePoint[0] - nextPoint[0], 2) + Math.pow(prePoint[1] - nextPoint[1], 2); // 以 currentPoint 为顶点的夹角

  var currentAngle = Math.acos((currentAndPre + currentAndNext - preAndNext) / (2 * Math.sqrt(currentAndPre) * Math.sqrt(currentAndNext))); // 夹角为空、 0 或 PI 时，不需要计算夹角处的额外宽度
  // 注意: 由于计算精度问题，夹角为 0 的情况计算出来的角度可能是一个很小的值，还需要判断其与 0 是否近似相等

  if (!currentAngle || Math.sin(currentAngle) === 0 || is_number_equal_1["default"](currentAngle, 0)) {
    return {
      xExtra: 0,
      yExtra: 0
    };
  }

  var xAngle = Math.abs(Math.atan2(nextPoint[1] - currentPoint[1], nextPoint[0] - currentPoint[0]));
  var yAngle = Math.abs(Math.atan2(nextPoint[0] - currentPoint[0], nextPoint[1] - currentPoint[1])); // 将夹角转为锐角

  xAngle = xAngle > Math.PI / 2 ? Math.PI - xAngle : xAngle;
  yAngle = yAngle > Math.PI / 2 ? Math.PI - yAngle : yAngle; // 这里不考虑在水平和垂直方向的投影，直接使用最大差值
  // 由于上层统一加减了二分之一线宽，这里需要进行弥补

  var extra = {
    // 水平方向投影
    xExtra: Math.cos(currentAngle / 2 - xAngle) * (lineWidth / 2 * (1 / Math.sin(currentAngle / 2))) - lineWidth / 2 || 0,
    // 垂直方向投影
    yExtra: Math.cos(yAngle - currentAngle / 2) * (lineWidth / 2 * (1 / Math.sin(currentAngle / 2))) - lineWidth / 2 || 0
  };
  return extra;
}

function default_1(shape) {
  var attrs = shape.attr();
  var path = attrs.path,
      stroke = attrs.stroke;
  var lineWidth = stroke ? attrs.lineWidth : 0; // 只有有 stroke 时，lineWidth 才生效

  var segments = shape.get('segments') || path_2_segments_1["default"](path);

  var _a = getPathBox(segments, lineWidth),
      x = _a.x,
      y = _a.y,
      width = _a.width,
      height = _a.height;

  var bbox = {
    minX: x,
    minY: y,
    maxX: x + width,
    maxY: y + height
  };
  bbox = util_1.mergeArrowBBox(shape, bbox);
  return {
    x: bbox.minX,
    y: bbox.minY,
    width: bbox.maxX - bbox.minX,
    height: bbox.maxY - bbox.minY
  };
}

exports["default"] = default_1;

/***/ }),

/***/ "Jjw7":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("Z8gF");

var matchOperatorsRe = /[|\\{}()[\]^$+*?.]/g;

module.exports = function (str) {
  if (typeof str !== 'string') {
    throw new TypeError('Expected a string');
  }

  return str.replace(matchOperatorsRe, '\\$&');
};

/***/ }),

/***/ "Jww/":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__("wEu9");
var $export = __webpack_require__("X6VK");
var redefine = __webpack_require__("sU/p");
var hide = __webpack_require__("tjmq");
var Iterators = __webpack_require__("Ibj2");
var $iterCreate = __webpack_require__("puZ4");
var setToStringTag = __webpack_require__("jPEw");
var getPrototypeOf = __webpack_require__("A1KM");
var ITERATOR = __webpack_require__("9dxi")('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),

/***/ "K+P+":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("5hJT");

__webpack_require__("d3/y");

var _interopRequireDefault = __webpack_require__("63Ad");

var _interopRequireWildcard = __webpack_require__("vdEC");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var React = _interopRequireWildcard(__webpack_require__("mXGw"));

var _EllipsisOutlined = _interopRequireDefault(__webpack_require__("M5rE"));

var _AntdIcon = _interopRequireDefault(__webpack_require__("CxZ5")); // GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY


var EllipsisOutlined = function EllipsisOutlined(props, ref) {
  return React.createElement(_AntdIcon["default"], Object.assign({}, props, {
    ref: ref,
    icon: _EllipsisOutlined["default"]
  }));
};

EllipsisOutlined.displayName = 'EllipsisOutlined';

var _default = React.forwardRef(EllipsisOutlined);

exports["default"] = _default;

/***/ }),

/***/ "K/PF":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__("OfmW");
var step = __webpack_require__("VVFi");
var Iterators = __webpack_require__("Ibj2");
var toIObject = __webpack_require__("ml72");

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__("Jww/")(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "K4Ra":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ../node_modules/react/index.js
var react = __webpack_require__("mXGw");

// EXTERNAL MODULE: ../node_modules/fast-deep-equal/react.js
var fast_deep_equal_react = __webpack_require__("uLh5");
var fast_deep_equal_react_default = /*#__PURE__*/__webpack_require__.n(fast_deep_equal_react);

// CONCATENATED MODULE: ../node_modules/react-use/esm/util.js

var isClient = typeof window === 'object';
var on = function on(obj) {
  var args = [];

  for (var _i = 1; _i < arguments.length; _i++) {
    args[_i - 1] = arguments[_i];
  }

  return obj.addEventListener.apply(obj, args);
};
var off = function off(obj) {
  var args = [];

  for (var _i = 1; _i < arguments.length; _i++) {
    args[_i - 1] = arguments[_i];
  }

  return obj.removeEventListener.apply(obj, args);
};
var isDeepEqual = fast_deep_equal_react_default.a;
// CONCATENATED MODULE: ../node_modules/react-use/esm/useMedia.js



var useMedia_useMedia = function useMedia(query, defaultState) {
  if (defaultState === void 0) {
    defaultState = false;
  }

  var _a = Object(react["useState"])(isClient ? function () {
    return window.matchMedia(query).matches;
  } : defaultState),
      state = _a[0],
      setState = _a[1];

  Object(react["useEffect"])(function () {
    var mounted = true;
    var mql = window.matchMedia(query);

    var onChange = function onChange() {
      if (!mounted) {
        return;
      }

      setState(!!mql.matches);
    };

    mql.addListener(onChange);
    setState(mql.matches);
    return function () {
      mounted = false;
      mql.removeListener(onChange);
    };
  }, [query]);
  return state;
};

/* harmony default export */ var esm_useMedia = __webpack_exports__["a"] = (useMedia_useMedia);

/***/ }),

/***/ "K8HH":
/***/ (function(module, exports) {

module.exports = {
  init: function init() {
    return this.xf['@@transducer/init']();
  },
  result: function result(_result) {
    return this.xf['@@transducer/result'](_result);
  }
};

/***/ }),

/***/ "KBDK":
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.6 Number.MAX_SAFE_INTEGER
var $export = __webpack_require__("X6VK");

$export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });


/***/ }),

/***/ "KFSm":
/***/ (function(module, exports) {

// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function (fn, args, that) {
  var un = that === undefined;
  switch (args.length) {
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return fn.apply(that, args);
};


/***/ }),

/***/ "KaQE":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

function cancelAnimationFrame(handler) {
  var method = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || // @ts-ignore
  window.mozCancelAnimationFrame || // @ts-ignore
  window.msCancelAnimationFrame || clearTimeout;
  method(handler);
}

exports["default"] = cancelAnimationFrame;
;

/***/ }),

/***/ "KbVQ":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export parseLineGradient */
/* unused harmony export parseRadialGradient */
/* unused harmony export parsePattern */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return parseStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return parseRadius; });
/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("asZ9");
/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_regexp_match__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("9ovy");
/* harmony import */ var core_js_modules_es6_regexp_match__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_match__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("3mMe");



var regexTags = /[MLHVQTCSAZ]([^MLHVQTCSAZ]*)/gi;
var regexDot = /[^\s\,]+/gi;
var regexLG = /^l\s*\(\s*([\d.]+)\s*\)\s*(.*)/i;
var regexRG = /^r\s*\(\s*([\d.]+)\s*,\s*([\d.]+)\s*,\s*([\d.]+)\s*\)\s*(.*)/i;
var regexPR = /^p\s*\(\s*([axyn])\s*\)\s*(.*)/i;
var regexColorStop = /[\d.]+:(#[^\s]+|[^\)]+\))/gi;

function addStop(steps, gradient) {
  var arr = steps.match(regexColorStop);
  Object(_util__WEBPACK_IMPORTED_MODULE_2__[/* each */ "c"])(arr, function (item) {
    var itemArr = item.split(':');
    gradient.addColorStop(itemArr[0], itemArr[1]);
  });
}
/**
 * 将边和填充设置的颜色转换成线性渐变对象
 * @param {CanvasRenderingContext2D} context canvas 上下文
 * @param {IElement}                 element  图形元素
 * @param {string}                   gradientStr   颜色
 * @returns {any} 渐变对象
 */


function parseLineGradient(context, element, gradientStr) {
  var arr = regexLG.exec(gradientStr);
  var angle = parseFloat(arr[1]) % 360 * (Math.PI / 180);
  var steps = arr[2];
  var box = element.getBBox();
  var start;
  var end;

  if (angle >= 0 && angle < 1 / 2 * Math.PI) {
    start = {
      x: box.minX,
      y: box.minY
    };
    end = {
      x: box.maxX,
      y: box.maxY
    };
  } else if (1 / 2 * Math.PI <= angle && angle < Math.PI) {
    start = {
      x: box.maxX,
      y: box.minY
    };
    end = {
      x: box.minX,
      y: box.maxY
    };
  } else if (Math.PI <= angle && angle < 3 / 2 * Math.PI) {
    start = {
      x: box.maxX,
      y: box.maxY
    };
    end = {
      x: box.minX,
      y: box.minY
    };
  } else {
    start = {
      x: box.minX,
      y: box.maxY
    };
    end = {
      x: box.maxX,
      y: box.minY
    };
  }

  var tanTheta = Math.tan(angle);
  var tanTheta2 = tanTheta * tanTheta;
  var x = (end.x - start.x + tanTheta * (end.y - start.y)) / (tanTheta2 + 1) + start.x;
  var y = tanTheta * (end.x - start.x + tanTheta * (end.y - start.y)) / (tanTheta2 + 1) + start.y;
  var gradient = context.createLinearGradient(start.x, start.y, x, y);
  addStop(steps, gradient);
  return gradient;
}
/**
 * 将边和填充设置的颜色转换成圆形渐变对象
 * @param {CanvasRenderingContext2D} context canvas 上下文
 * @param {IElement}                 element  图形元素
 * @param {string}                   gradientStr   颜色
 * @returns {any} 渐变对象
 */

function parseRadialGradient(context, element, gradientStr) {
  var arr = regexRG.exec(gradientStr);
  var fx = parseFloat(arr[1]);
  var fy = parseFloat(arr[2]);
  var fr = parseFloat(arr[3]);
  var steps = arr[4]; // 环半径为0时，默认无渐变，取渐变序列的最后一个颜色

  if (fr === 0) {
    var colors = steps.match(regexColorStop);
    return colors[colors.length - 1].split(':')[1];
  }

  var box = element.getBBox();
  var width = box.maxX - box.minX;
  var height = box.maxY - box.minY;
  var r = Math.sqrt(width * width + height * height) / 2;
  var gradient = context.createRadialGradient(box.minX + width * fx, box.minY + height * fy, 0, box.minX + width / 2, box.minY + height / 2, fr * r);
  addStop(steps, gradient);
  return gradient;
}
/**
 * 边和填充设置的颜色转换成 pattern
 * @param {CanvasRenderingContext2D} context canvas 上下文
 * @param {IElement}                 element  图形元素
 * @param {string}                   patternStr   生成 pattern 的字符串
 */

function parsePattern(context, element, patternStr) {
  // 在转换过程中进行了缓存
  if (element.get('patternSource') && element.get('patternSource') === patternStr) {
    return element.get('pattern');
  }

  var pattern;
  var img;
  var arr = regexPR.exec(patternStr);
  var repeat = arr[1];
  var source = arr[2]; // Function to be called when pattern loads

  function onload() {
    // Create pattern
    pattern = context.createPattern(img, repeat);
    element.set('pattern', pattern); // be a cache

    element.set('patternSource', patternStr);
  }

  switch (repeat) {
    case 'a':
      repeat = 'repeat';
      break;

    case 'x':
      repeat = 'repeat-x';
      break;

    case 'y':
      repeat = 'repeat-y';
      break;

    case 'n':
      repeat = 'no-repeat';
      break;

    default:
      repeat = 'no-repeat';
  }

  img = new Image(); // If source URL is not a data URL

  if (!source.match(/^data:/i)) {
    // Set crossOrigin for this image
    img.crossOrigin = 'Anonymous';
  }

  img.src = source;

  if (img.complete) {
    onload();
  } else {
    img.onload = onload; // Fix onload() bug in IE9

    img.src = img.src;
  }

  return pattern;
}
function parseStyle(context, element, color) {
  if (Object(_util__WEBPACK_IMPORTED_MODULE_2__[/* isString */ "k"])(color)) {
    if (color[1] === '(' || color[2] === '(') {
      if (color[0] === 'l') {
        // regexLG.test(color)
        return parseLineGradient(context, element, color);
      }

      if (color[0] === 'r') {
        // regexRG.test(color)
        return parseRadialGradient(context, element, color);
      }

      if (color[0] === 'p') {
        // regexPR.test(color)
        return parsePattern(context, element, color);
      }
    }

    return color;
  }
}
function parseRadius(radius) {
  var r1 = 0;
  var r2 = 0;
  var r3 = 0;
  var r4 = 0;

  if (Object(_util__WEBPACK_IMPORTED_MODULE_2__[/* isArray */ "g"])(radius)) {
    if (radius.length === 1) {
      r1 = r2 = r3 = r4 = radius[0];
    } else if (radius.length === 2) {
      r1 = r3 = radius[0];
      r2 = r4 = radius[1];
    } else if (radius.length === 3) {
      r1 = radius[0];
      r2 = r4 = radius[1];
      r3 = radius[2];
    } else {
      r1 = radius[0];
      r2 = radius[1];
      r3 = radius[2];
      r4 = radius[3];
    }
  } else {
    r1 = r2 = r3 = r4 = radius;
  }

  return [r1, r2, r3, r4];
}

/***/ }),

/***/ "KcPA":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

/***/ }),

/***/ "Kn+0":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("V7cS");

/*!
 * domready (c) Dustin Diaz 2014 - License MIT
 * ie10 fix - Mikael Kristiansson 2019
 */
!function (name, definition) {
  if (true) module.exports = definition();else {}
}("domready", function () {
  var ie10 = false;

  if (navigator.appVersion.indexOf("MSIE 10") !== -1) {
    ie10 = true;
  }

  var fns = [],
      _listener,
      doc = typeof document === "object" && document,
      hack = ie10 ? doc.documentElement.doScroll("left") : doc.documentElement.doScroll,
      domContentLoaded = "DOMContentLoaded",
      loaded = doc && (hack ? /^loaded|^c/ : /^loaded|^i|^c/).test(doc.readyState);

  if (!loaded && doc) doc.addEventListener(domContentLoaded, _listener = function listener() {
    doc.removeEventListener(domContentLoaded, _listener);
    loaded = 1;

    while (_listener = fns.shift()) {
      _listener();
    }
  });
  return function (fn) {
    loaded ? setTimeout(fn, 0) : fns.push(fn);
  };
});

/***/ }),

/***/ "KvMB":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("9ovy");

// CodeMirror, copyright (c) by Marijn Haverbeke and others
// Distributed under an MIT license: https://codemirror.net/LICENSE
(function (mod) {
  if (true) // CommonJS
    mod(__webpack_require__("Dln1"));else {}
})(function (CodeMirror) {
  "use strict";

  var htmlConfig = {
    autoSelfClosers: {
      'area': true,
      'base': true,
      'br': true,
      'col': true,
      'command': true,
      'embed': true,
      'frame': true,
      'hr': true,
      'img': true,
      'input': true,
      'keygen': true,
      'link': true,
      'meta': true,
      'param': true,
      'source': true,
      'track': true,
      'wbr': true,
      'menuitem': true
    },
    implicitlyClosed: {
      'dd': true,
      'li': true,
      'optgroup': true,
      'option': true,
      'p': true,
      'rp': true,
      'rt': true,
      'tbody': true,
      'td': true,
      'tfoot': true,
      'th': true,
      'tr': true
    },
    contextGrabbers: {
      'dd': {
        'dd': true,
        'dt': true
      },
      'dt': {
        'dd': true,
        'dt': true
      },
      'li': {
        'li': true
      },
      'option': {
        'option': true,
        'optgroup': true
      },
      'optgroup': {
        'optgroup': true
      },
      'p': {
        'address': true,
        'article': true,
        'aside': true,
        'blockquote': true,
        'dir': true,
        'div': true,
        'dl': true,
        'fieldset': true,
        'footer': true,
        'form': true,
        'h1': true,
        'h2': true,
        'h3': true,
        'h4': true,
        'h5': true,
        'h6': true,
        'header': true,
        'hgroup': true,
        'hr': true,
        'menu': true,
        'nav': true,
        'ol': true,
        'p': true,
        'pre': true,
        'section': true,
        'table': true,
        'ul': true
      },
      'rp': {
        'rp': true,
        'rt': true
      },
      'rt': {
        'rp': true,
        'rt': true
      },
      'tbody': {
        'tbody': true,
        'tfoot': true
      },
      'td': {
        'td': true,
        'th': true
      },
      'tfoot': {
        'tbody': true
      },
      'th': {
        'td': true,
        'th': true
      },
      'thead': {
        'tbody': true,
        'tfoot': true
      },
      'tr': {
        'tr': true
      }
    },
    doNotIndent: {
      "pre": true
    },
    allowUnquoted: true,
    allowMissing: true,
    caseFold: true
  };
  var xmlConfig = {
    autoSelfClosers: {},
    implicitlyClosed: {},
    contextGrabbers: {},
    doNotIndent: {},
    allowUnquoted: false,
    allowMissing: false,
    allowMissingTagName: false,
    caseFold: false
  };
  CodeMirror.defineMode("xml", function (editorConf, config_) {
    var indentUnit = editorConf.indentUnit;
    var config = {};
    var defaults = config_.htmlMode ? htmlConfig : xmlConfig;

    for (var prop in defaults) {
      config[prop] = defaults[prop];
    }

    for (var prop in config_) {
      config[prop] = config_[prop];
    } // Return variables for tokenizers


    var type, setStyle;

    function inText(stream, state) {
      function chain(parser) {
        state.tokenize = parser;
        return parser(stream, state);
      }

      var ch = stream.next();

      if (ch == "<") {
        if (stream.eat("!")) {
          if (stream.eat("[")) {
            if (stream.match("CDATA[")) return chain(inBlock("atom", "]]>"));else return null;
          } else if (stream.match("--")) {
            return chain(inBlock("comment", "-->"));
          } else if (stream.match("DOCTYPE", true, true)) {
            stream.eatWhile(/[\w\._\-]/);
            return chain(doctype(1));
          } else {
            return null;
          }
        } else if (stream.eat("?")) {
          stream.eatWhile(/[\w\._\-]/);
          state.tokenize = inBlock("meta", "?>");
          return "meta";
        } else {
          type = stream.eat("/") ? "closeTag" : "openTag";
          state.tokenize = inTag;
          return "tag bracket";
        }
      } else if (ch == "&") {
        var ok;

        if (stream.eat("#")) {
          if (stream.eat("x")) {
            ok = stream.eatWhile(/[a-fA-F\d]/) && stream.eat(";");
          } else {
            ok = stream.eatWhile(/[\d]/) && stream.eat(";");
          }
        } else {
          ok = stream.eatWhile(/[\w\.\-:]/) && stream.eat(";");
        }

        return ok ? "atom" : "error";
      } else {
        stream.eatWhile(/[^&<]/);
        return null;
      }
    }

    inText.isInText = true;

    function inTag(stream, state) {
      var ch = stream.next();

      if (ch == ">" || ch == "/" && stream.eat(">")) {
        state.tokenize = inText;
        type = ch == ">" ? "endTag" : "selfcloseTag";
        return "tag bracket";
      } else if (ch == "=") {
        type = "equals";
        return null;
      } else if (ch == "<") {
        state.tokenize = inText;
        state.state = baseState;
        state.tagName = state.tagStart = null;
        var next = state.tokenize(stream, state);
        return next ? next + " tag error" : "tag error";
      } else if (/[\'\"]/.test(ch)) {
        state.tokenize = inAttribute(ch);
        state.stringStartCol = stream.column();
        return state.tokenize(stream, state);
      } else {
        stream.match(/^[^\s\u00a0=<>\"\']*[^\s\u00a0=<>\"\'\/]/);
        return "word";
      }
    }

    function inAttribute(quote) {
      var closure = function closure(stream, state) {
        while (!stream.eol()) {
          if (stream.next() == quote) {
            state.tokenize = inTag;
            break;
          }
        }

        return "string";
      };

      closure.isInAttribute = true;
      return closure;
    }

    function inBlock(style, terminator) {
      return function (stream, state) {
        while (!stream.eol()) {
          if (stream.match(terminator)) {
            state.tokenize = inText;
            break;
          }

          stream.next();
        }

        return style;
      };
    }

    function doctype(depth) {
      return function (stream, state) {
        var ch;

        while ((ch = stream.next()) != null) {
          if (ch == "<") {
            state.tokenize = doctype(depth + 1);
            return state.tokenize(stream, state);
          } else if (ch == ">") {
            if (depth == 1) {
              state.tokenize = inText;
              break;
            } else {
              state.tokenize = doctype(depth - 1);
              return state.tokenize(stream, state);
            }
          }
        }

        return "meta";
      };
    }

    function Context(state, tagName, startOfLine) {
      this.prev = state.context;
      this.tagName = tagName;
      this.indent = state.indented;
      this.startOfLine = startOfLine;
      if (config.doNotIndent.hasOwnProperty(tagName) || state.context && state.context.noIndent) this.noIndent = true;
    }

    function popContext(state) {
      if (state.context) state.context = state.context.prev;
    }

    function maybePopContext(state, nextTagName) {
      var parentTagName;

      while (true) {
        if (!state.context) {
          return;
        }

        parentTagName = state.context.tagName;

        if (!config.contextGrabbers.hasOwnProperty(parentTagName) || !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {
          return;
        }

        popContext(state);
      }
    }

    function baseState(type, stream, state) {
      if (type == "openTag") {
        state.tagStart = stream.column();
        return tagNameState;
      } else if (type == "closeTag") {
        return closeTagNameState;
      } else {
        return baseState;
      }
    }

    function tagNameState(type, stream, state) {
      if (type == "word") {
        state.tagName = stream.current();
        setStyle = "tag";
        return attrState;
      } else if (config.allowMissingTagName && type == "endTag") {
        setStyle = "tag bracket";
        return attrState(type, stream, state);
      } else {
        setStyle = "error";
        return tagNameState;
      }
    }

    function closeTagNameState(type, stream, state) {
      if (type == "word") {
        var tagName = stream.current();
        if (state.context && state.context.tagName != tagName && config.implicitlyClosed.hasOwnProperty(state.context.tagName)) popContext(state);

        if (state.context && state.context.tagName == tagName || config.matchClosing === false) {
          setStyle = "tag";
          return closeState;
        } else {
          setStyle = "tag error";
          return closeStateErr;
        }
      } else if (config.allowMissingTagName && type == "endTag") {
        setStyle = "tag bracket";
        return closeState(type, stream, state);
      } else {
        setStyle = "error";
        return closeStateErr;
      }
    }

    function closeState(type, _stream, state) {
      if (type != "endTag") {
        setStyle = "error";
        return closeState;
      }

      popContext(state);
      return baseState;
    }

    function closeStateErr(type, stream, state) {
      setStyle = "error";
      return closeState(type, stream, state);
    }

    function attrState(type, _stream, state) {
      if (type == "word") {
        setStyle = "attribute";
        return attrEqState;
      } else if (type == "endTag" || type == "selfcloseTag") {
        var tagName = state.tagName,
            tagStart = state.tagStart;
        state.tagName = state.tagStart = null;

        if (type == "selfcloseTag" || config.autoSelfClosers.hasOwnProperty(tagName)) {
          maybePopContext(state, tagName);
        } else {
          maybePopContext(state, tagName);
          state.context = new Context(state, tagName, tagStart == state.indented);
        }

        return baseState;
      }

      setStyle = "error";
      return attrState;
    }

    function attrEqState(type, stream, state) {
      if (type == "equals") return attrValueState;
      if (!config.allowMissing) setStyle = "error";
      return attrState(type, stream, state);
    }

    function attrValueState(type, stream, state) {
      if (type == "string") return attrContinuedState;

      if (type == "word" && config.allowUnquoted) {
        setStyle = "string";
        return attrState;
      }

      setStyle = "error";
      return attrState(type, stream, state);
    }

    function attrContinuedState(type, stream, state) {
      if (type == "string") return attrContinuedState;
      return attrState(type, stream, state);
    }

    return {
      startState: function startState(baseIndent) {
        var state = {
          tokenize: inText,
          state: baseState,
          indented: baseIndent || 0,
          tagName: null,
          tagStart: null,
          context: null
        };
        if (baseIndent != null) state.baseIndent = baseIndent;
        return state;
      },
      token: function token(stream, state) {
        if (!state.tagName && stream.sol()) state.indented = stream.indentation();
        if (stream.eatSpace()) return null;
        type = null;
        var style = state.tokenize(stream, state);

        if ((style || type) && style != "comment") {
          setStyle = null;
          state.state = state.state(type || style, stream, state);
          if (setStyle) style = setStyle == "error" ? style + " error" : setStyle;
        }

        return style;
      },
      indent: function indent(state, textAfter, fullLine) {
        var context = state.context; // Indent multi-line strings (e.g. css).

        if (state.tokenize.isInAttribute) {
          if (state.tagStart == state.indented) return state.stringStartCol + 1;else return state.indented + indentUnit;
        }

        if (context && context.noIndent) return CodeMirror.Pass;
        if (state.tokenize != inTag && state.tokenize != inText) return fullLine ? fullLine.match(/^(\s*)/)[0].length : 0; // Indent the starts of attribute names.

        if (state.tagName) {
          if (config.multilineTagIndentPastTag !== false) return state.tagStart + state.tagName.length + 2;else return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);
        }

        if (config.alignCDATA && /<!\[CDATA\[/.test(textAfter)) return 0;
        var tagAfter = textAfter && /^<(\/)?([\w_:\.-]*)/.exec(textAfter);

        if (tagAfter && tagAfter[1]) {
          // Closing tag spotted
          while (context) {
            if (context.tagName == tagAfter[2]) {
              context = context.prev;
              break;
            } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {
              context = context.prev;
            } else {
              break;
            }
          }
        } else if (tagAfter) {
          // Opening tag spotted
          while (context) {
            var grabbers = config.contextGrabbers[context.tagName];
            if (grabbers && grabbers.hasOwnProperty(tagAfter[2])) context = context.prev;else break;
          }
        }

        while (context && context.prev && !context.startOfLine) {
          context = context.prev;
        }

        if (context) return context.indent + indentUnit;else return state.baseIndent || 0;
      },
      electricInput: /<\/[\s\w:]+>$/,
      blockCommentStart: "<!--",
      blockCommentEnd: "-->",
      configuration: config.htmlMode ? "html" : "xml",
      helperType: config.htmlMode ? "html" : "xml",
      skipAttribute: function skipAttribute(state) {
        if (state.state == attrValueState) state.state = attrState;
      },
      xmlCurrentTag: function xmlCurrentTag(state) {
        return state.tagName ? {
          name: state.tagName,
          close: state.type == "closeTag"
        } : null;
      },
      xmlCurrentContext: function xmlCurrentContext(state) {
        var context = [];

        for (var cx = state.context; cx; cx = cx.prev) {
          if (cx.tagName) context.push(cx.tagName);
        }

        return context.reverse();
      }
    };
  });
  CodeMirror.defineMIME("text/xml", "xml");
  CodeMirror.defineMIME("application/xml", "xml");
  if (!CodeMirror.mimeModes.hasOwnProperty("text/html")) CodeMirror.defineMIME("text/html", {
    name: "xml",
    htmlMode: true
  });
});

/***/ }),

/***/ "Kz1y":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _assign = __webpack_require__("PSh9");

var _assign2 = _interopRequireDefault(_assign);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

exports["default"] = _assign2["default"] || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

/***/ }),

/***/ "L+cS":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin
module.exports = {"container":"PageLoading-module--container--3vL46","loading":"PageLoading-module--loading--3b_Gn"};

/***/ }),

/***/ "LAIM":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.10 Object.is(value1, value2)
var $export = __webpack_require__("X6VK");
$export($export.S, 'Object', { is: __webpack_require__("Nu7b") });


/***/ }),

/***/ "LEAW":
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__("X6VK");
var fails = __webpack_require__("E7Vc");
var defined = __webpack_require__("GCOZ");
var quot = /"/g;
// B.2.3.2.1 CreateHTML(string, tag, attribute, value)
var createHTML = function (string, tag, attribute, value) {
  var S = String(defined(string));
  var p1 = '<' + tag;
  if (attribute !== '') p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
  return p1 + '>' + S + '</' + tag + '>';
};
module.exports = function (NAME, exec) {
  var O = {};
  O[NAME] = exec(createHTML);
  $export($export.P + $export.F * fails(function () {
    var test = ''[NAME]('"');
    return test !== test.toLowerCase() || test.split('"').length > 3;
  }), 'String', O);
};


/***/ }),

/***/ "LGMZ":
/***/ (function(module, exports, __webpack_require__) {

var _curry2 = __webpack_require__("OFPg");

var _equals = __webpack_require__("XQie");
/**
 * Returns `true` if its arguments are equivalent, `false` otherwise. Handles
 * cyclical data structures.
 *
 * Dispatches symmetrically to the `equals` methods of both arguments, if
 * present.
 *
 * @func
 * @memberOf R
 * @since v0.15.0
 * @category Relation
 * @sig a -> b -> Boolean
 * @param {*} a
 * @param {*} b
 * @return {Boolean}
 * @example
 *
 *      R.equals(1, 1); //=> true
 *      R.equals(1, '1'); //=> false
 *      R.equals([1, 2, 3], [1, 2, 3]); //=> true
 *
 *      var a = {}; a.v = a;
 *      var b = {}; b.v = b;
 *      R.equals(a, b); //=> true
 */


module.exports = _curry2(function equals(a, b) {
  return _equals(a, b, [], []);
});

/***/ }),

/***/ "LKC9":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Portal; });
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("4aJ6");
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("M/4x");
/* harmony import */ var core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("t91x");
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es6_reflect_construct__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("LXYL");
/* harmony import */ var core_js_modules_es6_reflect_construct__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_reflect_construct__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es6_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("1qKx");
/* harmony import */ var core_js_modules_es6_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es6_object_create__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("PAbq");
/* harmony import */ var core_js_modules_es6_object_create__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_create__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("d3/y");
/* harmony import */ var core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("+jjx");
/* harmony import */ var core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("ABKx");
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("mXGw");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("xARA");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_10__);










function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return _possibleConstructorReturn(this, result);
  };
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}




var Portal = /*#__PURE__*/function (_React$Component) {
  _inherits(Portal, _React$Component);

  var _super = _createSuper(Portal);

  function Portal() {
    _classCallCheck(this, Portal);

    return _super.apply(this, arguments);
  }

  _createClass(Portal, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.createContainer();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      var didUpdate = this.props.didUpdate;

      if (didUpdate) {
        didUpdate(prevProps);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.removeContainer();
    }
  }, {
    key: "createContainer",
    value: function createContainer() {
      this._container = this.props.getContainer();
      this.forceUpdate();
    }
  }, {
    key: "removeContainer",
    value: function removeContainer() {
      if (this._container) {
        this._container.parentNode.removeChild(this._container);
      }
    }
  }, {
    key: "render",
    value: function render() {
      if (this._container) {
        return react_dom__WEBPACK_IMPORTED_MODULE_10___default.a.createPortal(this.props.children, this._container);
      }

      return null;
    }
  }]);

  return Portal;
}(react__WEBPACK_IMPORTED_MODULE_9___default.a.Component);



/***/ }),

/***/ "LOD0":
/***/ (function(module, exports, __webpack_require__) {

var _curry2 = __webpack_require__("OFPg");

var _dispatchable = __webpack_require__("ex0g");

var _filter = __webpack_require__("+H3U");

var _isObject = __webpack_require__("Ln+j");

var _reduce = __webpack_require__("o2D/");

var _xfilter = __webpack_require__("jCf+");

var keys = __webpack_require__("bmJ9");
/**
 * Takes a predicate and a `Filterable`, and returns a new filterable of the
 * same type containing the members of the given filterable which satisfy the
 * given predicate. Filterable objects include plain objects or any object
 * that has a filter method such as `Array`.
 *
 * Dispatches to the `filter` method of the second argument, if present.
 *
 * Acts as a transducer if a transformer is given in list position.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig Filterable f => (a -> Boolean) -> f a -> f a
 * @param {Function} pred
 * @param {Array} filterable
 * @return {Array} Filterable
 * @see R.reject, R.transduce, R.addIndex
 * @example
 *
 *      var isEven = n => n % 2 === 0;
 *
 *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]
 *
 *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}
 */


module.exports = _curry2(_dispatchable(['filter'], _xfilter, function (pred, filterable) {
  return _isObject(filterable) ? _reduce(function (acc, key) {
    if (pred(filterable[key])) {
      acc[key] = filterable[key];
    }

    return acc;
  }, {}, keys(filterable)) : // else
  _filter(pred, filterable);
}));

/***/ }),

/***/ "LTuF":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("W1QL");

__webpack_require__("K/PF");

__webpack_require__("t91x");

__webpack_require__("75LO");

__webpack_require__("7lGJ");

__webpack_require__("d3/y");

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var generate_1 = __importDefault(__webpack_require__("TEyA"));

exports.generate = generate_1["default"];
var presetPrimaryColors = {
  red: '#F5222D',
  volcano: '#FA541C',
  orange: '#FA8C16',
  gold: '#FAAD14',
  yellow: '#FADB14',
  lime: '#A0D911',
  green: '#52C41A',
  cyan: '#13C2C2',
  blue: '#1890FF',
  geekblue: '#2F54EB',
  purple: '#722ED1',
  magenta: '#EB2F96',
  grey: '#666666'
};
exports.presetPrimaryColors = presetPrimaryColors;
var presetPalettes = {};
exports.presetPalettes = presetPalettes;
Object.keys(presetPrimaryColors).forEach(function (key) {
  presetPalettes[key] = generate_1["default"](presetPrimaryColors[key]);
  presetPalettes[key].primary = presetPalettes[key][5];
});
var red = presetPalettes.red;
exports.red = red;
var volcano = presetPalettes.volcano;
exports.volcano = volcano;
var gold = presetPalettes.gold;
exports.gold = gold;
var orange = presetPalettes.orange;
exports.orange = orange;
var yellow = presetPalettes.yellow;
exports.yellow = yellow;
var lime = presetPalettes.lime;
exports.lime = lime;
var green = presetPalettes.green;
exports.green = green;
var cyan = presetPalettes.cyan;
exports.cyan = cyan;
var blue = presetPalettes.blue;
exports.blue = blue;
var geekblue = presetPalettes.geekblue;
exports.geekblue = geekblue;
var purple = presetPalettes.purple;
exports.purple = purple;
var magenta = presetPalettes.magenta;
exports.magenta = magenta;
var grey = presetPalettes.grey;
exports.grey = grey;

/***/ }),

/***/ "LXYL":
/***/ (function(module, exports, __webpack_require__) {

// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
var $export = __webpack_require__("X6VK");
var create = __webpack_require__("Vx+c");
var aFunction = __webpack_require__("b8Rm");
var anObject = __webpack_require__("PAFS");
var isObject = __webpack_require__("Bsg+");
var fails = __webpack_require__("E7Vc");
var bind = __webpack_require__("oAuq");
var rConstruct = (__webpack_require__("P56o").Reflect || {}).construct;

// MS Edge supports only 2 arguments and argumentsList argument is optional
// FF Nightly sets third argument as `new.target`, but does not create `this` from it
var NEW_TARGET_BUG = fails(function () {
  function F() { /* empty */ }
  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);
});
var ARGS_BUG = !fails(function () {
  rConstruct(function () { /* empty */ });
});

$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
  construct: function construct(Target, args /* , newTarget */) {
    aFunction(Target);
    anObject(args);
    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);
    if (Target == newTarget) {
      // w/o altered newTarget, optimization for 0-4 arguments
      switch (args.length) {
        case 0: return new Target();
        case 1: return new Target(args[0]);
        case 2: return new Target(args[0], args[1]);
        case 3: return new Target(args[0], args[1], args[2]);
        case 4: return new Target(args[0], args[1], args[2], args[3]);
      }
      // w/o altered newTarget, lot of arguments case
      var $args = [null];
      $args.push.apply($args, args);
      return new (bind.apply(Target, $args))();
    }
    // with altered newTarget, not support built-in constructors
    var proto = newTarget.prototype;
    var instance = create(isObject(proto) ? proto : Object.prototype);
    var result = Function.apply.call(Target, instance, args);
    return isObject(result) ? result : instance;
  }
});


/***/ }),

/***/ "LeKB":
/***/ (function(module, exports, __webpack_require__) {

module.exports=[{plugin:__webpack_require__("zuwH"),options:{"plugins":[]}},{plugin:__webpack_require__("6vZ6"),options:{"plugins":[],"name":"example","short_name":"example","start_url":"/","background_color":"#873bf4","theme_color":"#873bf4","display":"minimal-ui","icon":"/Users/afc163/Projects/gatsby-theme-antv/@antv/gatsby-theme-antv/site/images/favicon.png","cache_busting_mode":"query","include_favicon":true,"legacy":true,"theme_color_in_head":true,"cacheDigest":"9772447a8d07a8fe19894b5176c6cb0d"}},{plugin:__webpack_require__("6K2M"),options:{"plugins":[]}},{plugin:__webpack_require__("TOXe"),options:{"plugins":[]}},{plugin:__webpack_require__("dXJ/"),options:{"plugins":[],"component":"/Users/afc163/Projects/gatsby-theme-antv/@antv/gatsby-theme-antv/site/layouts/layout.tsx"}},{plugin:__webpack_require__("TOXe"),options:{"plugins":[],"color":"#873bf4"}},{plugin:__webpack_require__("+Yd0"),options:{"plugins":[]}},{plugin:__webpack_require__("GddB"),options:{"plugins":[]}}];

/***/ }),

/***/ "Ln+j":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("4aJ6");

__webpack_require__("M/4x");

__webpack_require__("t91x");

module.exports = function _isObject(x) {
  return Object.prototype.toString.call(x) === '[object Object]';
};

/***/ }),

/***/ "LuBU":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__("at5L");
var enumBugKeys = __webpack_require__("fQty");

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),

/***/ "M/4x":
/***/ (function(module, exports, __webpack_require__) {

var DateProto = Date.prototype;
var INVALID_DATE = 'Invalid Date';
var TO_STRING = 'toString';
var $toString = DateProto[TO_STRING];
var getTime = DateProto.getTime;
if (new Date(NaN) + '' != INVALID_DATE) {
  __webpack_require__("sU/p")(DateProto, TO_STRING, function toString() {
    var value = getTime.call(this);
    // eslint-disable-next-line no-self-compare
    return value === value ? $toString.call(this) : INVALID_DATE;
  });
}


/***/ }),

/***/ "M5rE":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // This icon file is generated automatically.

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var EllipsisOutlined = {
  "icon": {
    "tag": "svg",
    "attrs": {
      "viewBox": "64 64 896 896",
      "focusable": "false"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "d": "M176 511a56 56 0 10112 0 56 56 0 10-112 0zm280 0a56 56 0 10112 0 56 56 0 10-112 0zm280 0a56 56 0 10112 0 56 56 0 10-112 0z"
      }
    }]
  },
  "name": "ellipsis",
  "theme": "outlined"
};
exports["default"] = EllipsisOutlined;

/***/ }),

/***/ "MApM":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("bb6g");
/* harmony import */ var _antv_g_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("AKAt");
/* harmony import */ var _shape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("FjZ0");
/* harmony import */ var _util_draw__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("5nqB");





var Group =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(Group, _super);

  function Group() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  /**
   * 一些方法调用会引起画布变化
   * @param {ChangeType} changeType 改变的类型
   */


  Group.prototype.onCanvasChange = function (changeType) {
    Object(_util_draw__WEBPACK_IMPORTED_MODULE_3__[/* refreshElement */ "f"])(this, changeType);
  };

  Group.prototype.getShapeBase = function () {
    return _shape__WEBPACK_IMPORTED_MODULE_2__;
  };

  Group.prototype.getGroupBase = function () {
    return Group;
  }; // 同 shape 中的方法重复了


  Group.prototype._applyClip = function (context, clip) {
    if (clip) {
      context.save(); // 将 clip 的属性挂载到 context 上

      Object(_util_draw__WEBPACK_IMPORTED_MODULE_3__[/* applyAttrsToContext */ "a"])(context, clip); // 绘制 clip 路径

      clip.createPath(context);
      context.restore(); // 裁剪

      context.clip();

      clip._afterDraw();
    }
  };

  Group.prototype.draw = function (context, region) {
    var children = this.getChildren();

    if (children.length) {
      context.save(); // group 上的矩阵和属性也会应用到上下文上
      // 先将 attrs 应用到上下文中，再设置 clip。因为 clip 应该被当前元素的 matrix 所影响

      Object(_util_draw__WEBPACK_IMPORTED_MODULE_3__[/* applyAttrsToContext */ "a"])(context, this);

      this._applyClip(context, this.getClip());

      Object(_util_draw__WEBPACK_IMPORTED_MODULE_3__[/* drawChildren */ "b"])(context, children, region);
      context.restore();
    } // 这里的成本比较大


    this.set('cacheCanvasBBox', this.getCanvasBBox()); // 绘制后，消除更新标记

    this.set('hasChanged', false);
  }; // 绘制时被跳过，一般发生在分组隐藏时


  Group.prototype.skipDraw = function () {
    this.set('cacheCanvasBBox', null);
    this.set('hasChanged', false);
  };

  return Group;
}(_antv_g_base__WEBPACK_IMPORTED_MODULE_1__[/* AbstractGroup */ "b"]);

/* harmony default export */ __webpack_exports__["a"] = (Group);

/***/ }),

/***/ "MBcE":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 21.2.5.3 get RegExp.prototype.flags
var anObject = __webpack_require__("PAFS");
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};


/***/ }),

/***/ "MKzE":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "MMYs":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _CheckOutlined = _interopRequireDefault(__webpack_require__("XgqJ"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    'default': obj
  };
}

var _default = _CheckOutlined;
exports["default"] = _default;
module.exports = _default;

/***/ }),

/***/ "MNOf":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
 // If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707

__webpack_require__("4aJ6");

__webpack_require__("M/4x");

__webpack_require__("t91x");

__webpack_require__("+3V6");

__webpack_require__("V7cS");

__webpack_require__("Z8gF");

__webpack_require__("asZ9");

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function (qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);
  var maxKeys = 1000;

  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length; // maxKeys <= 0 means that we should not limit keys count

  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr,
        vstr,
        k,
        v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

/***/ }),

/***/ "MTwu":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create", function() { return create; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clone", function() { return clone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "length", function() { return length; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromValues", function() { return fromValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add", function() { return add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subtract", function() { return subtract; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiply", function() { return multiply; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "divide", function() { return divide; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ceil", function() { return ceil; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "floor", function() { return floor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "min", function() { return min; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "max", function() { return max; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "round", function() { return round; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return scale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scaleAndAdd", function() { return scaleAndAdd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "distance", function() { return distance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "squaredDistance", function() { return squaredDistance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "squaredLength", function() { return squaredLength; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "negate", function() { return negate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inverse", function() { return inverse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalize", function() { return normalize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dot", function() { return dot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cross", function() { return cross; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lerp", function() { return lerp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hermite", function() { return hermite; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bezier", function() { return bezier; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "random", function() { return random; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformMat4", function() { return transformMat4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformMat3", function() { return transformMat3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformQuat", function() { return transformQuat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateX", function() { return rotateX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateY", function() { return rotateY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateZ", function() { return rotateZ; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "angle", function() { return angle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zero", function() { return zero; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "str", function() { return str; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exactEquals", function() { return exactEquals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equals", function() { return equals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sub", function() { return sub; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mul", function() { return mul; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "div", function() { return div; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dist", function() { return dist; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrDist", function() { return sqrDist; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "len", function() { return len; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrLen", function() { return sqrLen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forEach", function() { return forEach; });
/* harmony import */ var core_js_modules_es6_math_hypot__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("aaOZ");
/* harmony import */ var core_js_modules_es6_math_hypot__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_math_hypot__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_typed_float32_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("hMok");
/* harmony import */ var core_js_modules_es6_typed_float32_array__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_typed_float32_array__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("yOd+");



/**
 * 3 Dimensional Vector
 * @module vec3
 */

/**
 * Creates a new, empty vec3
 *
 * @returns {vec3} a new 3D vector
 */

function create() {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_2__[/* ARRAY_TYPE */ "a"](3);

  if (_common_js__WEBPACK_IMPORTED_MODULE_2__[/* ARRAY_TYPE */ "a"] != Float32Array) {
    out[0] = 0;
    out[1] = 0;
    out[2] = 0;
  }

  return out;
}
/**
 * Creates a new vec3 initialized with values from an existing vector
 *
 * @param {ReadonlyVec3} a vector to clone
 * @returns {vec3} a new 3D vector
 */

function clone(a) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_2__[/* ARRAY_TYPE */ "a"](3);
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  return out;
}
/**
 * Calculates the length of a vec3
 *
 * @param {ReadonlyVec3} a vector to calculate length of
 * @returns {Number} length of a
 */

function length(a) {
  var x = a[0];
  var y = a[1];
  var z = a[2];
  return Math.hypot(x, y, z);
}
/**
 * Creates a new vec3 initialized with the given values
 *
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @returns {vec3} a new 3D vector
 */

function fromValues(x, y, z) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_2__[/* ARRAY_TYPE */ "a"](3);
  out[0] = x;
  out[1] = y;
  out[2] = z;
  return out;
}
/**
 * Copy the values from one vec3 to another
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the source vector
 * @returns {vec3} out
 */

function copy(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  return out;
}
/**
 * Set the components of a vec3 to the given values
 *
 * @param {vec3} out the receiving vector
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @returns {vec3} out
 */

function set(out, x, y, z) {
  out[0] = x;
  out[1] = y;
  out[2] = z;
  return out;
}
/**
 * Adds two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @returns {vec3} out
 */

function add(out, a, b) {
  out[0] = a[0] + b[0];
  out[1] = a[1] + b[1];
  out[2] = a[2] + b[2];
  return out;
}
/**
 * Subtracts vector b from vector a
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @returns {vec3} out
 */

function subtract(out, a, b) {
  out[0] = a[0] - b[0];
  out[1] = a[1] - b[1];
  out[2] = a[2] - b[2];
  return out;
}
/**
 * Multiplies two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @returns {vec3} out
 */

function multiply(out, a, b) {
  out[0] = a[0] * b[0];
  out[1] = a[1] * b[1];
  out[2] = a[2] * b[2];
  return out;
}
/**
 * Divides two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @returns {vec3} out
 */

function divide(out, a, b) {
  out[0] = a[0] / b[0];
  out[1] = a[1] / b[1];
  out[2] = a[2] / b[2];
  return out;
}
/**
 * Math.ceil the components of a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a vector to ceil
 * @returns {vec3} out
 */

function ceil(out, a) {
  out[0] = Math.ceil(a[0]);
  out[1] = Math.ceil(a[1]);
  out[2] = Math.ceil(a[2]);
  return out;
}
/**
 * Math.floor the components of a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a vector to floor
 * @returns {vec3} out
 */

function floor(out, a) {
  out[0] = Math.floor(a[0]);
  out[1] = Math.floor(a[1]);
  out[2] = Math.floor(a[2]);
  return out;
}
/**
 * Returns the minimum of two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @returns {vec3} out
 */

function min(out, a, b) {
  out[0] = Math.min(a[0], b[0]);
  out[1] = Math.min(a[1], b[1]);
  out[2] = Math.min(a[2], b[2]);
  return out;
}
/**
 * Returns the maximum of two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @returns {vec3} out
 */

function max(out, a, b) {
  out[0] = Math.max(a[0], b[0]);
  out[1] = Math.max(a[1], b[1]);
  out[2] = Math.max(a[2], b[2]);
  return out;
}
/**
 * Math.round the components of a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a vector to round
 * @returns {vec3} out
 */

function round(out, a) {
  out[0] = Math.round(a[0]);
  out[1] = Math.round(a[1]);
  out[2] = Math.round(a[2]);
  return out;
}
/**
 * Scales a vec3 by a scalar number
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the vector to scale
 * @param {Number} b amount to scale the vector by
 * @returns {vec3} out
 */

function scale(out, a, b) {
  out[0] = a[0] * b;
  out[1] = a[1] * b;
  out[2] = a[2] * b;
  return out;
}
/**
 * Adds two vec3's after scaling the second operand by a scalar value
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @param {Number} scale the amount to scale b by before adding
 * @returns {vec3} out
 */

function scaleAndAdd(out, a, b, scale) {
  out[0] = a[0] + b[0] * scale;
  out[1] = a[1] + b[1] * scale;
  out[2] = a[2] + b[2] * scale;
  return out;
}
/**
 * Calculates the euclidian distance between two vec3's
 *
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @returns {Number} distance between a and b
 */

function distance(a, b) {
  var x = b[0] - a[0];
  var y = b[1] - a[1];
  var z = b[2] - a[2];
  return Math.hypot(x, y, z);
}
/**
 * Calculates the squared euclidian distance between two vec3's
 *
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @returns {Number} squared distance between a and b
 */

function squaredDistance(a, b) {
  var x = b[0] - a[0];
  var y = b[1] - a[1];
  var z = b[2] - a[2];
  return x * x + y * y + z * z;
}
/**
 * Calculates the squared length of a vec3
 *
 * @param {ReadonlyVec3} a vector to calculate squared length of
 * @returns {Number} squared length of a
 */

function squaredLength(a) {
  var x = a[0];
  var y = a[1];
  var z = a[2];
  return x * x + y * y + z * z;
}
/**
 * Negates the components of a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a vector to negate
 * @returns {vec3} out
 */

function negate(out, a) {
  out[0] = -a[0];
  out[1] = -a[1];
  out[2] = -a[2];
  return out;
}
/**
 * Returns the inverse of the components of a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a vector to invert
 * @returns {vec3} out
 */

function inverse(out, a) {
  out[0] = 1.0 / a[0];
  out[1] = 1.0 / a[1];
  out[2] = 1.0 / a[2];
  return out;
}
/**
 * Normalize a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a vector to normalize
 * @returns {vec3} out
 */

function normalize(out, a) {
  var x = a[0];
  var y = a[1];
  var z = a[2];
  var len = x * x + y * y + z * z;

  if (len > 0) {
    //TODO: evaluate use of glm_invsqrt here?
    len = 1 / Math.sqrt(len);
  }

  out[0] = a[0] * len;
  out[1] = a[1] * len;
  out[2] = a[2] * len;
  return out;
}
/**
 * Calculates the dot product of two vec3's
 *
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @returns {Number} dot product of a and b
 */

function dot(a, b) {
  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
}
/**
 * Computes the cross product of two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @returns {vec3} out
 */

function cross(out, a, b) {
  var ax = a[0],
      ay = a[1],
      az = a[2];
  var bx = b[0],
      by = b[1],
      bz = b[2];
  out[0] = ay * bz - az * by;
  out[1] = az * bx - ax * bz;
  out[2] = ax * by - ay * bx;
  return out;
}
/**
 * Performs a linear interpolation between two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @param {Number} t interpolation amount, in the range [0-1], between the two inputs
 * @returns {vec3} out
 */

function lerp(out, a, b, t) {
  var ax = a[0];
  var ay = a[1];
  var az = a[2];
  out[0] = ax + t * (b[0] - ax);
  out[1] = ay + t * (b[1] - ay);
  out[2] = az + t * (b[2] - az);
  return out;
}
/**
 * Performs a hermite interpolation with two control points
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @param {ReadonlyVec3} c the third operand
 * @param {ReadonlyVec3} d the fourth operand
 * @param {Number} t interpolation amount, in the range [0-1], between the two inputs
 * @returns {vec3} out
 */

function hermite(out, a, b, c, d, t) {
  var factorTimes2 = t * t;
  var factor1 = factorTimes2 * (2 * t - 3) + 1;
  var factor2 = factorTimes2 * (t - 2) + t;
  var factor3 = factorTimes2 * (t - 1);
  var factor4 = factorTimes2 * (3 - 2 * t);
  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;
  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;
  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;
  return out;
}
/**
 * Performs a bezier interpolation with two control points
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @param {ReadonlyVec3} c the third operand
 * @param {ReadonlyVec3} d the fourth operand
 * @param {Number} t interpolation amount, in the range [0-1], between the two inputs
 * @returns {vec3} out
 */

function bezier(out, a, b, c, d, t) {
  var inverseFactor = 1 - t;
  var inverseFactorTimesTwo = inverseFactor * inverseFactor;
  var factorTimes2 = t * t;
  var factor1 = inverseFactorTimesTwo * inverseFactor;
  var factor2 = 3 * t * inverseFactorTimesTwo;
  var factor3 = 3 * factorTimes2 * inverseFactor;
  var factor4 = factorTimes2 * t;
  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;
  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;
  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;
  return out;
}
/**
 * Generates a random vector with the given scale
 *
 * @param {vec3} out the receiving vector
 * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned
 * @returns {vec3} out
 */

function random(out, scale) {
  scale = scale || 1.0;
  var r = _common_js__WEBPACK_IMPORTED_MODULE_2__[/* RANDOM */ "c"]() * 2.0 * Math.PI;
  var z = _common_js__WEBPACK_IMPORTED_MODULE_2__[/* RANDOM */ "c"]() * 2.0 - 1.0;
  var zScale = Math.sqrt(1.0 - z * z) * scale;
  out[0] = Math.cos(r) * zScale;
  out[1] = Math.sin(r) * zScale;
  out[2] = z * scale;
  return out;
}
/**
 * Transforms the vec3 with a mat4.
 * 4th vector component is implicitly '1'
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the vector to transform
 * @param {ReadonlyMat4} m matrix to transform with
 * @returns {vec3} out
 */

function transformMat4(out, a, m) {
  var x = a[0],
      y = a[1],
      z = a[2];
  var w = m[3] * x + m[7] * y + m[11] * z + m[15];
  w = w || 1.0;
  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;
  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;
  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;
  return out;
}
/**
 * Transforms the vec3 with a mat3.
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the vector to transform
 * @param {ReadonlyMat3} m the 3x3 matrix to transform with
 * @returns {vec3} out
 */

function transformMat3(out, a, m) {
  var x = a[0],
      y = a[1],
      z = a[2];
  out[0] = x * m[0] + y * m[3] + z * m[6];
  out[1] = x * m[1] + y * m[4] + z * m[7];
  out[2] = x * m[2] + y * m[5] + z * m[8];
  return out;
}
/**
 * Transforms the vec3 with a quat
 * Can also be used for dual quaternions. (Multiply it with the real part)
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the vector to transform
 * @param {ReadonlyQuat} q quaternion to transform with
 * @returns {vec3} out
 */

function transformQuat(out, a, q) {
  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed
  var qx = q[0],
      qy = q[1],
      qz = q[2],
      qw = q[3];
  var x = a[0],
      y = a[1],
      z = a[2]; // var qvec = [qx, qy, qz];
  // var uv = vec3.cross([], qvec, a);

  var uvx = qy * z - qz * y,
      uvy = qz * x - qx * z,
      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);

  var uuvx = qy * uvz - qz * uvy,
      uuvy = qz * uvx - qx * uvz,
      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);

  var w2 = qw * 2;
  uvx *= w2;
  uvy *= w2;
  uvz *= w2; // vec3.scale(uuv, uuv, 2);

  uuvx *= 2;
  uuvy *= 2;
  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));

  out[0] = x + uvx + uuvx;
  out[1] = y + uvy + uuvy;
  out[2] = z + uvz + uuvz;
  return out;
}
/**
 * Rotate a 3D vector around the x-axis
 * @param {vec3} out The receiving vec3
 * @param {ReadonlyVec3} a The vec3 point to rotate
 * @param {ReadonlyVec3} b The origin of the rotation
 * @param {Number} rad The angle of rotation in radians
 * @returns {vec3} out
 */

function rotateX(out, a, b, rad) {
  var p = [],
      r = []; //Translate point to the origin

  p[0] = a[0] - b[0];
  p[1] = a[1] - b[1];
  p[2] = a[2] - b[2]; //perform rotation

  r[0] = p[0];
  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);
  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position

  out[0] = r[0] + b[0];
  out[1] = r[1] + b[1];
  out[2] = r[2] + b[2];
  return out;
}
/**
 * Rotate a 3D vector around the y-axis
 * @param {vec3} out The receiving vec3
 * @param {ReadonlyVec3} a The vec3 point to rotate
 * @param {ReadonlyVec3} b The origin of the rotation
 * @param {Number} rad The angle of rotation in radians
 * @returns {vec3} out
 */

function rotateY(out, a, b, rad) {
  var p = [],
      r = []; //Translate point to the origin

  p[0] = a[0] - b[0];
  p[1] = a[1] - b[1];
  p[2] = a[2] - b[2]; //perform rotation

  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);
  r[1] = p[1];
  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position

  out[0] = r[0] + b[0];
  out[1] = r[1] + b[1];
  out[2] = r[2] + b[2];
  return out;
}
/**
 * Rotate a 3D vector around the z-axis
 * @param {vec3} out The receiving vec3
 * @param {ReadonlyVec3} a The vec3 point to rotate
 * @param {ReadonlyVec3} b The origin of the rotation
 * @param {Number} rad The angle of rotation in radians
 * @returns {vec3} out
 */

function rotateZ(out, a, b, rad) {
  var p = [],
      r = []; //Translate point to the origin

  p[0] = a[0] - b[0];
  p[1] = a[1] - b[1];
  p[2] = a[2] - b[2]; //perform rotation

  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);
  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);
  r[2] = p[2]; //translate to correct position

  out[0] = r[0] + b[0];
  out[1] = r[1] + b[1];
  out[2] = r[2] + b[2];
  return out;
}
/**
 * Get the angle between two 3D vectors
 * @param {ReadonlyVec3} a The first operand
 * @param {ReadonlyVec3} b The second operand
 * @returns {Number} The angle in radians
 */

function angle(a, b) {
  var ax = a[0],
      ay = a[1],
      az = a[2],
      bx = b[0],
      by = b[1],
      bz = b[2],
      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),
      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),
      mag = mag1 * mag2,
      cosine = mag && dot(a, b) / mag;
  return Math.acos(Math.min(Math.max(cosine, -1), 1));
}
/**
 * Set the components of a vec3 to zero
 *
 * @param {vec3} out the receiving vector
 * @returns {vec3} out
 */

function zero(out) {
  out[0] = 0.0;
  out[1] = 0.0;
  out[2] = 0.0;
  return out;
}
/**
 * Returns a string representation of a vector
 *
 * @param {ReadonlyVec3} a vector to represent as a string
 * @returns {String} string representation of the vector
 */

function str(a) {
  return "vec3(" + a[0] + ", " + a[1] + ", " + a[2] + ")";
}
/**
 * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)
 *
 * @param {ReadonlyVec3} a The first vector.
 * @param {ReadonlyVec3} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */

function exactEquals(a, b) {
  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];
}
/**
 * Returns whether or not the vectors have approximately the same elements in the same position.
 *
 * @param {ReadonlyVec3} a The first vector.
 * @param {ReadonlyVec3} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */

function equals(a, b) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2];
  var b0 = b[0],
      b1 = b[1],
      b2 = b[2];
  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_2__[/* EPSILON */ "b"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_2__[/* EPSILON */ "b"] * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_2__[/* EPSILON */ "b"] * Math.max(1.0, Math.abs(a2), Math.abs(b2));
}
/**
 * Alias for {@link vec3.subtract}
 * @function
 */

var sub = subtract;
/**
 * Alias for {@link vec3.multiply}
 * @function
 */

var mul = multiply;
/**
 * Alias for {@link vec3.divide}
 * @function
 */

var div = divide;
/**
 * Alias for {@link vec3.distance}
 * @function
 */

var dist = distance;
/**
 * Alias for {@link vec3.squaredDistance}
 * @function
 */

var sqrDist = squaredDistance;
/**
 * Alias for {@link vec3.length}
 * @function
 */

var len = length;
/**
 * Alias for {@link vec3.squaredLength}
 * @function
 */

var sqrLen = squaredLength;
/**
 * Perform some operation over an array of vec3s.
 *
 * @param {Array} a the array of vectors to iterate over
 * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed
 * @param {Number} offset Number of elements to skip at the beginning of the array
 * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array
 * @param {Function} fn Function to call for each vector in the array
 * @param {Object} [arg] additional argument to pass to fn
 * @returns {Array} a
 * @function
 */

var forEach = function () {
  var vec = create();
  return function (a, stride, offset, count, fn, arg) {
    var i, l;

    if (!stride) {
      stride = 3;
    }

    if (!offset) {
      offset = 0;
    }

    if (count) {
      l = Math.min(count * stride + offset, a.length);
    } else {
      l = a.length;
    }

    for (i = offset; i < l; i += stride) {
      vec[0] = a[i];
      vec[1] = a[i + 1];
      vec[2] = a[i + 2];
      fn(vec, vec, arg);
      a[i] = vec[0];
      a[i + 1] = vec[1];
      a[i + 2] = vec[2];
    }

    return a;
  };
}();

/***/ }),

/***/ "MYxt":
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.4 Number.isNaN(number)
var $export = __webpack_require__("X6VK");

$export($export.S, 'Number', {
  isNaN: function isNaN(number) {
    // eslint-disable-next-line no-self-compare
    return number != number;
  }
});


/***/ }),

/***/ "MlAH":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _example_public_static_d_3000541721_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("JOti");
var _example_public_static_d_3000541721_json__WEBPACK_IMPORTED_MODULE_0___namespace = /*#__PURE__*/__webpack_require__.t("JOti", 1);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("mXGw");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_helmet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("Hrl7");


/**
 * SEO component that queries for data with
 *  Gatsby's useStaticQuery React hook
 *
 * See: https://www.gatsbyjs.org/docs/use-static-query/
 */



var SEO = function SEO(_ref) {
  var description = _ref.description,
      _ref$lang = _ref.lang,
      lang = _ref$lang === void 0 ? '' : _ref$lang,
      _ref$meta = _ref.meta,
      meta = _ref$meta === void 0 ? [] : _ref$meta,
      title = _ref.title,
      titleSuffix = _ref.titleSuffix;
  var site = _example_public_static_d_3000541721_json__WEBPACK_IMPORTED_MODULE_0__.data.site;
  var metaDescription = description || site.siteMetadata.description;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_helmet__WEBPACK_IMPORTED_MODULE_2__[/* Helmet */ "a"], {
    htmlAttributes: {
      lang: lang
    },
    title: title,
    titleTemplate: "%s | " + (titleSuffix || site.siteMetadata.title),
    meta: [{
      name: "description",
      content: metaDescription
    }, {
      property: "og:title",
      content: title
    }, {
      property: "og:description",
      content: metaDescription
    }, {
      property: "og:image",
      content: 'https://gw.alipayobjects.com/zos/antfincdn/FLrTNDvlna/antv.png'
    }, {
      property: "og:type",
      content: "website"
    }, {
      name: "twitter:card",
      content: "summary"
    }, {
      name: "twitter:title",
      content: title
    }, {
      name: "twitter:description",
      content: metaDescription
    }, {
      property: "twitter:image",
      content: 'https://gw.alipayobjects.com/zos/antfincdn/FLrTNDvlna/antv.png'
    }].concat(meta)
  });
};

SEO.defaultProps = {
  lang: "en",
  meta: [],
  description: ""
};
/* harmony default export */ __webpack_exports__["a"] = (SEO);

/***/ }),

/***/ "MwAX":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var register_1 = __webpack_require__("WYfr");

exports.getBBoxMethod = register_1.getMethod;

var rect_1 = __webpack_require__("Ese+");

var circle_1 = __webpack_require__("DiqT");

var polyline_1 = __webpack_require__("lu3D");

var polygon_1 = __webpack_require__("oH4r");

var text_1 = __webpack_require__("U6lR");

var path_1 = __webpack_require__("JjL7");

var line_1 = __webpack_require__("b1Jh");

var ellipse_1 = __webpack_require__("qgos");

register_1.register('rect', rect_1["default"]);
register_1.register('image', rect_1["default"]); // image 使用 rect 的包围盒计算

register_1.register('circle', circle_1["default"]);
register_1.register('marker', circle_1["default"]); // marker 使用 circle 的计算方案

register_1.register('polyline', polyline_1["default"]);
register_1.register('polygon', polygon_1["default"]);
register_1.register('text', text_1["default"]);
register_1.register('path', path_1["default"]);
register_1.register('line', line_1["default"]);
register_1.register('ellipse', ellipse_1["default"]);

/***/ }),

/***/ "N6/Q":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var regexpExec = __webpack_require__("lAKj");
__webpack_require__("X6VK")({
  target: 'RegExp',
  proto: true,
  forced: regexpExec !== /./.exec
}, {
  exec: regexpExec
});


/***/ }),

/***/ "NFQX":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "contains", function() { return /* reexport */ esm_contains; });
__webpack_require__.d(__webpack_exports__, "includes", function() { return /* reexport */ esm_contains; });
__webpack_require__.d(__webpack_exports__, "difference", function() { return /* reexport */ esm_difference; });
__webpack_require__.d(__webpack_exports__, "find", function() { return /* reexport */ esm_find; });
__webpack_require__.d(__webpack_exports__, "findIndex", function() { return /* reexport */ find_index; });
__webpack_require__.d(__webpack_exports__, "firstValue", function() { return /* reexport */ first_value; });
__webpack_require__.d(__webpack_exports__, "flatten", function() { return /* reexport */ esm_flatten; });
__webpack_require__.d(__webpack_exports__, "flattenDeep", function() { return /* reexport */ flatten_deep; });
__webpack_require__.d(__webpack_exports__, "getRange", function() { return /* reexport */ get_range; });
__webpack_require__.d(__webpack_exports__, "pull", function() { return /* reexport */ esm_pull; });
__webpack_require__.d(__webpack_exports__, "pullAt", function() { return /* reexport */ pull_at; });
__webpack_require__.d(__webpack_exports__, "reduce", function() { return /* reexport */ esm_reduce; });
__webpack_require__.d(__webpack_exports__, "remove", function() { return /* reexport */ esm_remove; });
__webpack_require__.d(__webpack_exports__, "sortBy", function() { return /* reexport */ sort_by; });
__webpack_require__.d(__webpack_exports__, "union", function() { return /* reexport */ esm_union; });
__webpack_require__.d(__webpack_exports__, "uniq", function() { return /* reexport */ esm_uniq; });
__webpack_require__.d(__webpack_exports__, "valuesOfKey", function() { return /* reexport */ values_of_key; });
__webpack_require__.d(__webpack_exports__, "head", function() { return /* reexport */ head; });
__webpack_require__.d(__webpack_exports__, "last", function() { return /* reexport */ last_last; });
__webpack_require__.d(__webpack_exports__, "startsWith", function() { return /* reexport */ starts_with; });
__webpack_require__.d(__webpack_exports__, "endsWith", function() { return /* reexport */ ends_with; });
__webpack_require__.d(__webpack_exports__, "filter", function() { return /* reexport */ esm_filter; });
__webpack_require__.d(__webpack_exports__, "every", function() { return /* reexport */ esm_every; });
__webpack_require__.d(__webpack_exports__, "some", function() { return /* reexport */ esm_some; });
__webpack_require__.d(__webpack_exports__, "group", function() { return /* reexport */ group; });
__webpack_require__.d(__webpack_exports__, "groupBy", function() { return /* reexport */ group_by; });
__webpack_require__.d(__webpack_exports__, "groupToMap", function() { return /* reexport */ group_to_map; });
__webpack_require__.d(__webpack_exports__, "getWrapBehavior", function() { return /* reexport */ get_wrap_behavior; });
__webpack_require__.d(__webpack_exports__, "wrapBehavior", function() { return /* reexport */ wrap_behavior; });
__webpack_require__.d(__webpack_exports__, "number2color", function() { return /* reexport */ number2color; });
__webpack_require__.d(__webpack_exports__, "parseRadius", function() { return /* reexport */ parse_radius; });
__webpack_require__.d(__webpack_exports__, "clamp", function() { return /* reexport */ esm_clamp; });
__webpack_require__.d(__webpack_exports__, "fixedBase", function() { return /* reexport */ fixed_base; });
__webpack_require__.d(__webpack_exports__, "isDecimal", function() { return /* reexport */ is_decimal; });
__webpack_require__.d(__webpack_exports__, "isEven", function() { return /* reexport */ is_even; });
__webpack_require__.d(__webpack_exports__, "isInteger", function() { return /* reexport */ is_integer; });
__webpack_require__.d(__webpack_exports__, "isNegative", function() { return /* reexport */ is_negative; });
__webpack_require__.d(__webpack_exports__, "isNumberEqual", function() { return /* reexport */ isNumberEqual; });
__webpack_require__.d(__webpack_exports__, "isOdd", function() { return /* reexport */ is_odd; });
__webpack_require__.d(__webpack_exports__, "isPositive", function() { return /* reexport */ is_positive; });
__webpack_require__.d(__webpack_exports__, "maxBy", function() { return /* reexport */ max_by; });
__webpack_require__.d(__webpack_exports__, "minBy", function() { return /* reexport */ min_by; });
__webpack_require__.d(__webpack_exports__, "mod", function() { return /* reexport */ esm_mod; });
__webpack_require__.d(__webpack_exports__, "toDegree", function() { return /* reexport */ to_degree; });
__webpack_require__.d(__webpack_exports__, "toInteger", function() { return /* reexport */ to_integer; });
__webpack_require__.d(__webpack_exports__, "toRadian", function() { return /* reexport */ to_radian; });
__webpack_require__.d(__webpack_exports__, "forIn", function() { return /* reexport */ for_in; });
__webpack_require__.d(__webpack_exports__, "has", function() { return /* reexport */ has; });
__webpack_require__.d(__webpack_exports__, "hasKey", function() { return /* reexport */ has_key; });
__webpack_require__.d(__webpack_exports__, "hasValue", function() { return /* reexport */ has_value; });
__webpack_require__.d(__webpack_exports__, "keys", function() { return /* reexport */ esm_keys; });
__webpack_require__.d(__webpack_exports__, "isMatch", function() { return /* reexport */ is_match; });
__webpack_require__.d(__webpack_exports__, "values", function() { return /* reexport */ esm_values; });
__webpack_require__.d(__webpack_exports__, "lowerCase", function() { return /* reexport */ lower_case; });
__webpack_require__.d(__webpack_exports__, "lowerFirst", function() { return /* reexport */ lower_first; });
__webpack_require__.d(__webpack_exports__, "substitute", function() { return /* reexport */ esm_substitute; });
__webpack_require__.d(__webpack_exports__, "upperCase", function() { return /* reexport */ upper_case; });
__webpack_require__.d(__webpack_exports__, "upperFirst", function() { return /* reexport */ upper_first; });
__webpack_require__.d(__webpack_exports__, "getType", function() { return /* reexport */ get_type; });
__webpack_require__.d(__webpack_exports__, "isArguments", function() { return /* reexport */ is_arguments; });
__webpack_require__.d(__webpack_exports__, "isArray", function() { return /* reexport */ is_array; });
__webpack_require__.d(__webpack_exports__, "isArrayLike", function() { return /* reexport */ is_array_like; });
__webpack_require__.d(__webpack_exports__, "isBoolean", function() { return /* reexport */ is_boolean; });
__webpack_require__.d(__webpack_exports__, "isDate", function() { return /* reexport */ is_date; });
__webpack_require__.d(__webpack_exports__, "isError", function() { return /* reexport */ is_error; });
__webpack_require__.d(__webpack_exports__, "isFunction", function() { return /* reexport */ is_function; });
__webpack_require__.d(__webpack_exports__, "isFinite", function() { return /* reexport */ is_finite; });
__webpack_require__.d(__webpack_exports__, "isNil", function() { return /* reexport */ is_nil; });
__webpack_require__.d(__webpack_exports__, "isNull", function() { return /* reexport */ is_null; });
__webpack_require__.d(__webpack_exports__, "isNumber", function() { return /* reexport */ is_number; });
__webpack_require__.d(__webpack_exports__, "isObject", function() { return /* reexport */ is_object; });
__webpack_require__.d(__webpack_exports__, "isObjectLike", function() { return /* reexport */ is_object_like; });
__webpack_require__.d(__webpack_exports__, "isPlainObject", function() { return /* reexport */ is_plain_object; });
__webpack_require__.d(__webpack_exports__, "isPrototype", function() { return /* reexport */ is_prototype; });
__webpack_require__.d(__webpack_exports__, "isRegExp", function() { return /* reexport */ is_reg_exp; });
__webpack_require__.d(__webpack_exports__, "isString", function() { return /* reexport */ is_string; });
__webpack_require__.d(__webpack_exports__, "isType", function() { return /* reexport */ is_type; });
__webpack_require__.d(__webpack_exports__, "isUndefined", function() { return /* reexport */ is_undefined; });
__webpack_require__.d(__webpack_exports__, "isElement", function() { return /* reexport */ is_element; });
__webpack_require__.d(__webpack_exports__, "requestAnimationFrame", function() { return /* reexport */ requestAnimationFrame; });
__webpack_require__.d(__webpack_exports__, "clearAnimationFrame", function() { return /* reexport */ cancelAnimationFrame; });
__webpack_require__.d(__webpack_exports__, "augment", function() { return /* reexport */ esm_augment; });
__webpack_require__.d(__webpack_exports__, "clone", function() { return /* reexport */ esm_clone; });
__webpack_require__.d(__webpack_exports__, "debounce", function() { return /* reexport */ esm_debounce; });
__webpack_require__.d(__webpack_exports__, "memoize", function() { return /* reexport */ memoize; });
__webpack_require__.d(__webpack_exports__, "deepMix", function() { return /* reexport */ deep_mix; });
__webpack_require__.d(__webpack_exports__, "each", function() { return /* reexport */ esm_each; });
__webpack_require__.d(__webpack_exports__, "extend", function() { return /* reexport */ esm_extend; });
__webpack_require__.d(__webpack_exports__, "indexOf", function() { return /* reexport */ index_of; });
__webpack_require__.d(__webpack_exports__, "isEmpty", function() { return /* reexport */ is_empty; });
__webpack_require__.d(__webpack_exports__, "isEqual", function() { return /* reexport */ is_equal; });
__webpack_require__.d(__webpack_exports__, "isEqualWith", function() { return /* reexport */ is_equal_with; });
__webpack_require__.d(__webpack_exports__, "map", function() { return /* reexport */ esm_map; });
__webpack_require__.d(__webpack_exports__, "mapValues", function() { return /* reexport */ map_values; });
__webpack_require__.d(__webpack_exports__, "mix", function() { return /* reexport */ mix; });
__webpack_require__.d(__webpack_exports__, "assign", function() { return /* reexport */ mix; });
__webpack_require__.d(__webpack_exports__, "get", function() { return /* reexport */ get; });
__webpack_require__.d(__webpack_exports__, "set", function() { return /* reexport */ set; });
__webpack_require__.d(__webpack_exports__, "pick", function() { return /* reexport */ pick; });
__webpack_require__.d(__webpack_exports__, "throttle", function() { return /* reexport */ throttle; });
__webpack_require__.d(__webpack_exports__, "toArray", function() { return /* reexport */ to_array; });
__webpack_require__.d(__webpack_exports__, "toString", function() { return /* reexport */ to_string; });
__webpack_require__.d(__webpack_exports__, "uniqueId", function() { return /* reexport */ unique_id; });
__webpack_require__.d(__webpack_exports__, "noop", function() { return /* reexport */ noop; });
__webpack_require__.d(__webpack_exports__, "identity", function() { return /* reexport */ esm_identity; });
__webpack_require__.d(__webpack_exports__, "size", function() { return /* reexport */ size; });
__webpack_require__.d(__webpack_exports__, "Cache", function() { return /* reexport */ cache; });

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.index-of.js
var es6_array_index_of = __webpack_require__("V7cS");

// CONCATENATED MODULE: ../node_modules/@antv/util/esm/is-array-like.js
var isArrayLike = function isArrayLike(value) {
  /**
   * isArrayLike([1, 2, 3]) => true
   * isArrayLike(document.body.children) => true
   * isArrayLike('abc') => true
   * isArrayLike(Function) => false
   */
  return value !== null && typeof value !== 'function' && isFinite(value.length);
};

/* harmony default export */ var is_array_like = (isArrayLike);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/contains.js



var contains_contains = function contains(arr, value) {
  if (!is_array_like(arr)) {
    return false;
  }

  return arr.indexOf(value) > -1;
};

/* harmony default export */ var esm_contains = (contains_contains);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/filter.js


var filter_filter = function filter(arr, func) {
  if (!is_array_like(arr)) {
    return arr;
  }

  var result = [];

  for (var index = 0; index < arr.length; index++) {
    var value = arr[index];

    if (func(value, index)) {
      result.push(value);
    }
  }

  return result;
};

/* harmony default export */ var esm_filter = (filter_filter);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/difference.js


/**
 * Flattens `array` a single level deep.
 *
 * @param {Array} arr The array to inspect.
 * @param {Array} values The values to exclude.
 * @return {Array} Returns the new array of filtered values.
 * @example
 * difference([2, 1], [2, 3]);  // => [1]
 */

var difference_difference = function difference(arr, values) {
  if (values === void 0) {
    values = [];
  }

  return esm_filter(arr, function (value) {
    return !esm_contains(values, value);
  });
};

/* harmony default export */ var esm_difference = (difference_difference);
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.to-string.js
var es6_regexp_to_string = __webpack_require__("4aJ6");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.date.to-string.js
var es6_date_to_string = __webpack_require__("M/4x");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.to-string.js
var es6_object_to_string = __webpack_require__("t91x");

// CONCATENATED MODULE: ../node_modules/@antv/util/esm/is-type.js



var is_type_toString = {}.toString;

var isType = function isType(value, type) {
  return is_type_toString.call(value) === '[object ' + type + ']';
};

/* harmony default export */ var is_type = (isType);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/is-function.js
/**
 * 是否为函数
 * @param  {*} fn 对象
 * @return {Boolean}  是否函数
 */

/* harmony default export */ var is_function = (function (value) {
  return is_type(value, 'Function');
});
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/is-nil.js
// isFinite,
var isNil = function isNil(value) {
  /**
   * isNil(null) => true
   * isNil() => true
   */
  return value === null || value === undefined;
};

/* harmony default export */ var is_nil = (isNil);
// EXTERNAL MODULE: ../node_modules/core-js/modules/web.dom.iterable.js
var web_dom_iterable = __webpack_require__("W1QL");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.iterator.js
var es6_array_iterator = __webpack_require__("K/PF");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.keys.js
var es6_object_keys = __webpack_require__("75LO");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.is-array.js
var es6_array_is_array = __webpack_require__("+3V6");

// CONCATENATED MODULE: ../node_modules/@antv/util/esm/is-array.js


/* harmony default export */ var is_array = (function (value) {
  return Array.isArray ? Array.isArray(value) : is_type(value, 'Array');
});
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/is-object.js
/* harmony default export */ var is_object = (function (value) {
  /**
   * isObject({}) => true
   * isObject([1, 2, 3]) => true
   * isObject(Function) => true
   * isObject(null) => false
   */
  var type = typeof value;
  return value !== null && type === 'object' || type === 'function';
});
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/each.js



function each(elements, func) {
  if (!elements) {
    return;
  }

  var rst;

  if (is_array(elements)) {
    for (var i = 0, len = elements.length; i < len; i++) {
      rst = func(elements[i], i);

      if (rst === false) {
        break;
      }
    }
  } else if (is_object(elements)) {
    for (var k in elements) {
      if (elements.hasOwnProperty(k)) {
        rst = func(elements[k], k);

        if (rst === false) {
          break;
        }
      }
    }
  }
}

/* harmony default export */ var esm_each = (each);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/keys.js






var keys_keys = Object.keys ? function (obj) {
  return Object.keys(obj);
} : function (obj) {
  var result = [];
  esm_each(obj, function (value, key) {
    if (!(is_function(obj) && key === 'prototype')) {
      result.push(key);
    }
  });
  return result;
};
/* harmony default export */ var esm_keys = (keys_keys);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/is-match.js



function isMatch(obj, attrs) {
  var _keys = esm_keys(attrs);

  var length = _keys.length;
  if (is_nil(obj)) return !length;

  for (var i = 0; i < length; i += 1) {
    var key = _keys[i];

    if (attrs[key] !== obj[key] || !(key in obj)) {
      return false;
    }
  }

  return true;
}

/* harmony default export */ var is_match = (isMatch);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/is-object-like.js
var isObjectLike = function isObjectLike(value) {
  /**
   * isObjectLike({}) => true
   * isObjectLike([1, 2, 3]) => true
   * isObjectLike(Function) => false
   * isObjectLike(null) => false
   */
  return typeof value === 'object' && value !== null;
};

/* harmony default export */ var is_object_like = (isObjectLike);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/is-plain-object.js



var is_plain_object_isPlainObject = function isPlainObject(value) {
  /**
   * isObjectLike(new Foo) => false
   * isObjectLike([1, 2, 3]) => false
   * isObjectLike({ x: 0, y: 0 }) => true
   * isObjectLike(Object.create(null)) => true
   */
  if (!is_object_like(value) || !is_type(value, 'Object')) {
    return false;
  }

  if (Object.getPrototypeOf(value) === null) {
    return true;
  }

  var proto = value;

  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }

  return Object.getPrototypeOf(value) === proto;
};

/* harmony default export */ var is_plain_object = (is_plain_object_isPlainObject);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/find.js





function find(arr, predicate) {
  if (!is_array(arr)) return null;

  var _predicate;

  if (is_function(predicate)) {
    _predicate = predicate;
  }

  if (is_plain_object(predicate)) {
    _predicate = function _predicate(a) {
      return is_match(a, predicate);
    };
  }

  if (_predicate) {
    for (var i = 0; i < arr.length; i += 1) {
      if (_predicate(arr[i])) {
        return arr[i];
      }
    }
  }

  return null;
}

/* harmony default export */ var esm_find = (find);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/find-index.js
function findIndex(arr, predicate, fromIndex) {
  if (fromIndex === void 0) {
    fromIndex = 0;
  }

  for (var i = fromIndex; i < arr.length; i++) {
    if (predicate(arr[i], i)) {
      // 找到终止循环
      return i;
    }
  }

  return -1;
}

/* harmony default export */ var find_index = (findIndex);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/first-value.js



var first_value_firstValue = function firstValue(data, name) {
  var rst = null;

  for (var i = 0; i < data.length; i++) {
    var obj = data[i];
    var value = obj[name];

    if (!is_nil(value)) {
      if (is_array(value)) {
        rst = value[0]; // todo 这里是否应该使用递归，调用 firstValue @绝云
      } else {
        rst = value;
      }

      break;
    }
  }

  return rst;
};

/* harmony default export */ var first_value = (first_value_firstValue);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/flatten.js

/**
 * Flattens `array` a single level deep.
 *
 * @param {Array} arr The array to flatten.
 * @return {Array} Returns the new flattened array.
 * @example
 *
 * flatten([1, [2, [3, [4]], 5]]);  // => [1, 2, [3, [4]], 5]
 */

var flatten_flatten = function flatten(arr) {
  if (!is_array(arr)) {
    return [];
  }

  var rst = [];

  for (var i = 0; i < arr.length; i++) {
    rst = rst.concat(arr[i]);
  }

  return rst;
};

/* harmony default export */ var esm_flatten = (flatten_flatten);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/flatten-deep.js

/**
 * Flattens `array` a single level deep.
 *
 * @param {Array} arr The array to flatten.
 * @param {Array} result The array to return.
 * @return {Array} Returns the new flattened array.
 * @example
 *
 * flattenDeep([1, [2, [3, [4]], 5]]);  // => [1, 2, 3, 4, 5]
 */

var flatten_deep_flattenDeep = function flattenDeep(arr, result) {
  if (result === void 0) {
    result = [];
  }

  if (!is_array(arr)) {
    result.push(arr);
  } else {
    for (var i = 0; i < arr.length; i += 1) {
      flattenDeep(arr[i], result);
    }
  }

  return result;
};

/* harmony default export */ var flatten_deep = (flatten_deep_flattenDeep);
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.filter.js
var es6_array_filter = __webpack_require__("9p7t");

// CONCATENATED MODULE: ../node_modules/@antv/util/esm/get-range.js



var get_range_getRange = function getRange(values) {
  // 存在 NaN 时，min,max 判定会出问题
  var filterValues = values.filter(function (v) {
    return !isNaN(v);
  });

  if (!filterValues.length) {
    // 如果没有数值则直接返回0
    return {
      min: 0,
      max: 0
    };
  }

  if (is_array(values[0])) {
    var tmp = [];

    for (var i = 0; i < values.length; i++) {
      tmp = tmp.concat(values[i]);
    }

    filterValues = tmp;
  }

  var max = Math.max.apply(null, filterValues);
  var min = Math.min.apply(null, filterValues);
  return {
    min: min,
    max: max
  };
};

/* harmony default export */ var get_range = (get_range_getRange);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/pull.js

var arrPrototype = Array.prototype;
var splice = arrPrototype.splice;
var pull_indexOf = arrPrototype.indexOf;

var pull = function pull(arr) {
  var values = [];

  for (var _i = 1; _i < arguments.length; _i++) {
    values[_i - 1] = arguments[_i];
  }

  for (var i = 0; i < values.length; i++) {
    var value = values[i];
    var fromIndex = -1;

    while ((fromIndex = pull_indexOf.call(arr, value)) > -1) {
      splice.call(arr, fromIndex, 1);
    }
  }

  return arr;
};

/* harmony default export */ var esm_pull = (pull);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/pull-at.js

var pull_at_splice = Array.prototype.splice;

var pull_at_pullAt = function pullAt(arr, indexes) {
  if (!is_array_like(arr)) {
    return [];
  }

  var length = arr ? indexes.length : 0;
  var last = length - 1;

  while (length--) {
    var previous = void 0;
    var index = indexes[length];

    if (length === last || index !== previous) {
      previous = index;
      pull_at_splice.call(arr, index, 1);
    }
  }

  return arr;
};

/* harmony default export */ var pull_at = (pull_at_pullAt);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/reduce.js




var reduce_reduce = function reduce(arr, fn, init) {
  if (!is_array(arr) && !is_plain_object(arr)) {
    return arr;
  }

  var result = init;
  esm_each(arr, function (data, i) {
    result = fn(result, data, i);
  });
  return result;
};

/* harmony default export */ var esm_reduce = (reduce_reduce);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/remove.js



var remove_remove = function remove(arr, predicate) {
  /**
   * const arr = [1, 2, 3, 4]
   * const evens = remove(arr, n => n % 2 == 0)
   * console.log(arr) // => [1, 3]
   * console.log(evens) // => [2, 4]
   */
  var result = [];

  if (!is_array_like(arr)) {
    return result;
  }

  var i = -1;
  var indexes = [];
  var length = arr.length;

  while (++i < length) {
    var value = arr[i];

    if (predicate(value, i, arr)) {
      result.push(value);
      indexes.push(i);
    }
  }

  pull_at(arr, indexes);
  return result;
};

/* harmony default export */ var esm_remove = (remove_remove);
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.sort.js
var es6_array_sort = __webpack_require__("U8p0");

// CONCATENATED MODULE: ../node_modules/@antv/util/esm/is-string.js

/* harmony default export */ var is_string = (function (str) {
  return is_type(str, 'String');
});
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/sort-by.js





function sortBy(arr, key) {
  var comparer;

  if (is_function(key)) {
    comparer = function comparer(a, b) {
      return key(a) - key(b);
    };
  } else {
    var keys_1 = [];

    if (is_string(key)) {
      keys_1.push(key);
    } else if (is_array(key)) {
      keys_1 = key;
    }

    comparer = function comparer(a, b) {
      for (var i = 0; i < keys_1.length; i += 1) {
        var prop = keys_1[i];

        if (a[prop] > b[prop]) {
          return 1;
        }

        if (a[prop] < b[prop]) {
          return -1;
        }
      }

      return 0;
    };
  }

  arr.sort(comparer);
  return arr;
}

/* harmony default export */ var sort_by = (sortBy);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/uniq.js



var uniq_uniq = function uniq(arr) {
  var resultArr = [];
  esm_each(arr, function (item) {
    if (!esm_contains(resultArr, item)) {
      resultArr.push(item);
    }
  });
  return resultArr;
};

/* harmony default export */ var esm_uniq = (uniq_uniq);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/union.js


var union_union = function union() {
  var sources = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    sources[_i] = arguments[_i];
  }

  return esm_uniq([].concat.apply([], sources));
};

/* harmony default export */ var esm_union = (union_union);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/values-of-key.js


/* harmony default export */ var values_of_key = (function (data, name) {
  var rst = [];
  var tmpMap = {};

  for (var i = 0; i < data.length; i++) {
    var obj = data[i];
    var value = obj[name];

    if (!is_nil(value)) {
      // flatten
      if (!is_array(value)) {
        value = [value];
      }

      for (var j = 0; j < value.length; j++) {
        var val = value[j]; // unique

        if (!tmpMap[val]) {
          rst.push(val);
          tmpMap[val] = true;
        }
      }
    }
  }

  return rst;
});
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/head.js

function head(o) {
  if (is_array_like(o)) {
    return o[0];
  }

  return undefined;
}
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/last.js

function last_last(o) {
  if (is_array_like(o)) {
    var arr = o;
    return arr[arr.length - 1];
  }

  return undefined;
}
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/starts-with.js



function startsWith(arr, e) {
  return is_array(arr) || is_string(arr) ? arr[0] === e : false;
}

/* harmony default export */ var starts_with = (startsWith);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/ends-with.js



function endsWith(arr, e) {
  return is_array(arr) || is_string(arr) ? arr[arr.length - 1] === e : false;
}

/* harmony default export */ var ends_with = (endsWith);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/every.js
/**
 * 只要有一个不满足条件就返回 false
 * @param arr
 * @param func
 */
var every = function every(arr, func) {
  for (var i = 0; i < arr.length; i++) {
    if (!func(arr[i], i)) return false;
  }

  return true;
};

/* harmony default export */ var esm_every = (every);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/some.js
/**
 * 只要有一个满足条件就返回 true
 * @param arr
 * @param func
 */
var some = function some(arr, func) {
  for (var i = 0; i < arr.length; i++) {
    if (func(arr[i], i)) return true;
  }

  return false;
};

/* harmony default export */ var esm_some = (some);
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.replace.js
var es6_regexp_replace = __webpack_require__("Z8gF");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.split.js
var es6_regexp_split = __webpack_require__("asZ9");

// CONCATENATED MODULE: ../node_modules/@antv/util/esm/group-by.js


var group_by_hasOwnProperty = Object.prototype.hasOwnProperty;

function groupBy(data, condition) {
  if (!condition || !is_array(data)) {
    return {};
  }

  var result = {}; // 兼容方法和 字符串的写法

  var predicate = is_function(condition) ? condition : function (item) {
    return item[condition];
  };
  var key;

  for (var i = 0; i < data.length; i++) {
    var item = data[i];
    key = predicate(item);

    if (group_by_hasOwnProperty.call(result, key)) {
      result[key].push(item);
    } else {
      result[key] = [item];
    }
  }

  return result;
}

/* harmony default export */ var group_by = (groupBy);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/group-to-map.js









var group_to_map_groupToMap = function groupToMap(data, condition) {
  if (!condition) {
    return {
      0: data
    };
  }

  if (!is_function(condition)) {
    var paramsCondition_1 = is_array(condition) ? condition : condition.replace(/\s+/g, '').split('*');

    condition = function condition(row) {
      var unique = '_'; // 避免出现数字作为Key的情况，会进行按照数字的排序

      for (var i = 0, l = paramsCondition_1.length; i < l; i++) {
        unique += row[paramsCondition_1[i]] && row[paramsCondition_1[i]].toString();
      }

      return unique;
    };
  }

  var groups = group_by(data, condition);
  return groups;
};

/* harmony default export */ var group_to_map = (group_to_map_groupToMap);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/group.js

/* harmony default export */ var group = (function (data, condition) {
  if (!condition) {
    // 没有条件，则自身改成数组
    return [data];
  }

  var groups = group_to_map(data, condition);
  var array = [];

  for (var i in groups) {
    array.push(groups[i]);
  }

  return array;
});
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/get-wrap-behavior.js
/**
 * 获取封装的事件
 * @protected
 * @param  {Object} obj   对象
 * @param  {String} action 事件名称
 * @return {Function}        返回事件处理函数
 */
function getWrapBehavior(obj, action) {
  return obj['_wrap_' + action];
}

/* harmony default export */ var get_wrap_behavior = (getWrapBehavior);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/wrap-behavior.js
/**
 * 封装事件，便于使用上下文this,和便于解除事件时使用
 * @protected
 * @param  {Object} obj   对象
 * @param  {String} action 事件名称
 * @return {Function}        返回事件处理函数
 */
function wrapBehavior(obj, action) {
  if (obj['_wrap_' + action]) {
    return obj['_wrap_' + action];
  }

  var method = function method(e) {
    obj[action](e);
  };

  obj['_wrap_' + action] = method;
  return method;
}

/* harmony default export */ var wrap_behavior = (wrapBehavior);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/number2color.js



var numColorCache = {};

function numberToColor(num) {
  // 增加缓存
  var color = numColorCache[num];

  if (!color) {
    var str = num.toString(16);

    for (var i = str.length; i < 6; i++) {
      str = '0' + str;
    }

    color = '#' + str;
    numColorCache[num] = color;
  }

  return color;
}

/* harmony default export */ var number2color = (numberToColor);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/parse-radius.js


function parseRadius(radius) {
  var r1 = 0,
      r2 = 0,
      r3 = 0,
      r4 = 0;

  if (is_array(radius)) {
    if (radius.length === 1) {
      r1 = r2 = r3 = r4 = radius[0];
    } else if (radius.length === 2) {
      r1 = r3 = radius[0];
      r2 = r4 = radius[1];
    } else if (radius.length === 3) {
      r1 = radius[0];
      r2 = r4 = radius[1];
      r3 = radius[2];
    } else {
      r1 = radius[0];
      r2 = radius[1];
      r3 = radius[2];
      r4 = radius[3];
    }
  } else {
    r1 = r2 = r3 = r4 = radius;
  }

  return {
    r1: r1,
    r2: r2,
    r3: r3,
    r4: r4
  };
}

/* harmony default export */ var parse_radius = (parseRadius);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/clamp.js
var clamp = function clamp(a, min, max) {
  if (a < min) {
    return min;
  } else if (a > max) {
    return max;
  }

  return a;
};

/* harmony default export */ var esm_clamp = (clamp);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/fixed-base.js





var fixedBase = function fixedBase(v, base) {
  var str = base.toString();
  var index = str.indexOf('.');

  if (index === -1) {
    return Math.round(v);
  }

  var length = str.substr(index + 1).length;

  if (length > 20) {
    length = 20;
  }

  return parseFloat(v.toFixed(length));
};

/* harmony default export */ var fixed_base = (fixedBase);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/is-number.js
/**
 * 判断是否数字
 * @return {Boolean} 是否数字
 */


var is_number_isNumber = function isNumber(value) {
  return is_type(value, 'Number');
};

/* harmony default export */ var is_number = (is_number_isNumber);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/is-decimal.js


var is_decimal_isDecimal = function isDecimal(num) {
  return is_number(num) && num % 1 !== 0;
};

/* harmony default export */ var is_decimal = (is_decimal_isDecimal);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/is-even.js


var is_even_isEven = function isEven(num) {
  return is_number(num) && num % 2 === 0;
};

/* harmony default export */ var is_even = (is_even_isEven);
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.number.constructor.js
var es6_number_constructor = __webpack_require__("e2Kn");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.number.is-integer.js
var es6_number_is_integer = __webpack_require__("Gv0X");

// CONCATENATED MODULE: ../node_modules/@antv/util/esm/is-integer.js



var isInteger = Number.isInteger ? Number.isInteger : function (num) {
  return is_number(num) && num % 1 === 0;
};
/* harmony default export */ var is_integer = (isInteger);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/is-negative.js


var is_negative_isNegative = function isNegative(num) {
  return is_number(num) && num < 0;
};

/* harmony default export */ var is_negative = (is_negative_isNegative);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/is-number-equal.js
var PRECISION = 0.00001; // numbers less than this is considered as 0

function isNumberEqual(a, b, precision) {
  if (precision === void 0) {
    precision = PRECISION;
  }

  return Math.abs(a - b) < precision;
}
;
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/is-odd.js


var is_odd_isOdd = function isOdd(num) {
  return is_number(num) && num % 2 !== 0;
};

/* harmony default export */ var is_odd = (is_odd_isOdd);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/is-positive.js


var is_positive_isPositive = function isPositive(num) {
  return is_number(num) && num > 0;
};

/* harmony default export */ var is_positive = (is_positive_isPositive);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/max-by.js



/**
 * @param {Array} arr The array to iterate over.
 * @param {Function} [fn] The iteratee invoked per element.
 * @return {*} Returns the maximum value.
 * @example
 *
 * var objects = [{ 'n': 1 }, { 'n': 2 }];
 *
 * maxBy(objects, function(o) { return o.n; });
 * // => { 'n': 2 }
 *
 * maxBy(objects, 'n');
 * // => { 'n': 2 }
 */

/* harmony default export */ var max_by = (function (arr, fn) {
  if (!is_array(arr)) {
    return undefined;
  }

  var max = arr[0];
  var maxData;

  if (is_function(fn)) {
    maxData = fn(arr[0]);
  } else {
    maxData = arr[0][fn];
  }

  var data;
  esm_each(arr, function (val) {
    if (is_function(fn)) {
      data = fn(val);
    } else {
      data = val[fn];
    }

    if (data > maxData) {
      max = val;
      maxData = data;
    }
  });
  return max;
});
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/min-by.js



/**
 * @param {Array} arr The array to iterate over.
 * @param {Function} [fn] The iteratee invoked per element.
 * @return {*} Returns the minimum value.
 * @example
 *
 * var objects = [{ 'n': 1 }, { 'n': 2 }];
 *
 * minBy(objects, function(o) { return o.n; });
 * // => { 'n': 1 }
 *
 * minBy(objects, 'n');
 * // => { 'n': 1 }
 */

/* harmony default export */ var min_by = (function (arr, fn) {
  if (!is_array(arr)) {
    return undefined;
  }

  var min = arr[0];
  var minData;

  if (is_function(fn)) {
    minData = fn(arr[0]);
  } else {
    minData = arr[0][fn];
  }

  var data;
  esm_each(arr, function (val) {
    if (is_function(fn)) {
      data = fn(val);
    } else {
      data = val[fn];
    }

    if (data < minData) {
      min = val;
      minData = data;
    }
  });
  return min;
});
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/mod.js
var mod = function mod(n, m) {
  return (n % m + m) % m;
};

/* harmony default export */ var esm_mod = (mod);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/to-degree.js
var DEGREE = 180 / Math.PI;

var toDegree = function toDegree(radian) {
  return DEGREE * radian;
};

/* harmony default export */ var to_degree = (toDegree);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/to-integer.js
/* harmony default export */ var to_integer = (parseInt);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/to-radian.js
var RADIAN = Math.PI / 180;

var toRadian = function toRadian(degree) {
  return RADIAN * degree;
};

/* harmony default export */ var to_radian = (toRadian);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/for-in.js

/* harmony default export */ var for_in = (esm_each);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/has.js
/* harmony default export */ var has = (function (obj, key) {
  return obj.hasOwnProperty(key);
});
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/has-key.js

/* harmony default export */ var has_key = (has);
// EXTERNAL MODULE: ../node_modules/core-js/modules/es7.object.values.js
var es7_object_values = __webpack_require__("3DBk");

// CONCATENATED MODULE: ../node_modules/@antv/util/esm/values.js





 // @ts-ignore

var values_values = Object.values ? function (obj) {
  return Object.values(obj);
} : function (obj) {
  var result = [];
  esm_each(obj, function (value, key) {
    if (!(is_function(obj) && key === 'prototype')) {
      result.push(value);
    }
  });
  return result;
};
/* harmony default export */ var esm_values = (values_values);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/has-value.js


/* harmony default export */ var has_value = (function (obj, value) {
  return esm_contains(esm_values(obj), value);
});
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/to-string.js




/* harmony default export */ var to_string = (function (value) {
  if (is_nil(value)) return '';
  return value.toString();
});
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/lower-case.js


var lower_case_lowerCase = function lowerCase(str) {
  return to_string(str).toLowerCase();
};

/* harmony default export */ var lower_case = (lower_case_lowerCase);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/lower-first.js


var lower_first_lowerFirst = function lowerFirst(value) {
  var str = to_string(value);
  return str.charAt(0).toLowerCase() + str.substring(1);
};

/* harmony default export */ var lower_first = (lower_first_lowerFirst);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/substitute.js


function substitute(str, o) {
  if (!str || !o) {
    return str;
  }

  return str.replace(/\\?\{([^{}]+)\}/g, function (match, name) {
    if (match.charAt(0) === '\\') {
      return match.slice(1);
    }

    return o[name] === undefined ? '' : o[name];
  });
}

/* harmony default export */ var esm_substitute = (substitute);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/upper-case.js


var upper_case_upperCase = function upperCase(str) {
  return to_string(str).toUpperCase();
};

/* harmony default export */ var upper_case = (upper_case_upperCase);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/upper-first.js


var upper_first_upperFirst = function upperFirst(value) {
  var str = to_string(value);
  return str.charAt(0).toUpperCase() + str.substring(1);
};

/* harmony default export */ var upper_first = (upper_first_upperFirst);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/get-type.js




var get_type_toString = {}.toString;

var getType = function getType(value) {
  return get_type_toString.call(value).replace(/^\[object /, '').replace(/]$/, '');
};

/* harmony default export */ var get_type = (getType);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/is-arguments.js
/**
 * 是否是参数类型
 *
 * @param {Object} value 测试的值
 * @return {Boolean}
 */


var is_arguments_isArguments = function isArguments(value) {
  return is_type(value, 'Arguments');
};

/* harmony default export */ var is_arguments = (is_arguments_isArguments);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/is-boolean.js
/**
 * 是否是布尔类型
 *
 * @param {Object} value 测试的值
 * @return {Boolean}
 */


var is_boolean_isBoolean = function isBoolean(value) {
  return is_type(value, 'Boolean');
};

/* harmony default export */ var is_boolean = (is_boolean_isBoolean);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/is-date.js


var is_date_isDate = function isDate(value) {
  return is_type(value, 'Date');
};

/* harmony default export */ var is_date = (is_date_isDate);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/is-error.js
/**
 * 是否是参数类型
 *
 * @param {Object} value 测试的值
 * @return {Boolean}
 */


var is_error_isError = function isError(value) {
  return is_type(value, 'Error');
};

/* harmony default export */ var is_error = (is_error_isError);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/is-finite.js
/**
 * 判断是否为有限数
 * @return {Boolean}
 */

/* harmony default export */ var is_finite = (function (value) {
  return is_number(value) && isFinite(value);
});
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/is-null.js
var isNull = function isNull(value) {
  return value === null;
};

/* harmony default export */ var is_null = (isNull);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/is-prototype.js
var objectProto = Object.prototype;

var isPrototype = function isPrototype(value) {
  var Ctor = value && value.constructor;
  var proto = typeof Ctor === 'function' && Ctor.prototype || objectProto;
  return value === proto;
};

/* harmony default export */ var is_prototype = (isPrototype);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/is-reg-exp.js


var is_reg_exp_isRegExp = function isRegExp(str) {
  return is_type(str, 'RegExp');
};

/* harmony default export */ var is_reg_exp = (is_reg_exp_isRegExp);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/is-undefined.js
var isUndefined = function isUndefined(value) {
  return value === undefined;
};

/* harmony default export */ var is_undefined = (isUndefined);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/is-element.js
/**
 * 判断是否HTML元素
 * @return {Boolean} 是否HTML元素
 */
var isElement = function isElement(o) {
  return o instanceof Element || o instanceof HTMLDocument;
};

/* harmony default export */ var is_element = (isElement);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/request-animation-frame.js
function requestAnimationFrame(fn) {
  var method = window.requestAnimationFrame || window.webkitRequestAnimationFrame || // @ts-ignore
  window.mozRequestAnimationFrame || // @ts-ignore
  window.msRequestAnimationFrame || function (f) {
    return setTimeout(f, 16);
  };

  return method(fn);
}
;
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/clear-animation-frame.js
function cancelAnimationFrame(handler) {
  var method = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || // @ts-ignore
  window.mozCancelAnimationFrame || // @ts-ignore
  window.msCancelAnimationFrame || clearTimeout;
  method(handler);
}
;
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/mix.js
// FIXME: Mutable param should be forbidden in static lang.
function _mix(dist, obj) {
  for (var key in obj) {
    if (obj.hasOwnProperty(key) && key !== 'constructor' && obj[key] !== undefined) {
      dist[key] = obj[key];
    }
  }
}

function mix(dist, src1, src2, src3) {
  if (src1) _mix(dist, src1);
  if (src2) _mix(dist, src2);
  if (src3) _mix(dist, src3);
  return dist;
}
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/augment.js



var augment_augment = function augment() {
  var args = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }

  var c = args[0];

  for (var i = 1; i < args.length; i++) {
    var obj = args[i];

    if (is_function(obj)) {
      obj = obj.prototype;
    }

    mix(c.prototype, obj);
  }
};

/* harmony default export */ var esm_augment = (augment_augment);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/clone.js


var clone_clone = function clone(obj) {
  if (typeof obj !== 'object' || obj === null) {
    return obj;
  }

  var rst;

  if (is_array(obj)) {
    rst = [];

    for (var i = 0, l = obj.length; i < l; i++) {
      if (typeof obj[i] === 'object' && obj[i] != null) {
        rst[i] = clone(obj[i]);
      } else {
        rst[i] = obj[i];
      }
    }
  } else {
    rst = {};

    for (var k in obj) {
      if (typeof obj[k] === 'object' && obj[k] != null) {
        rst[k] = clone(obj[k]);
      } else {
        rst[k] = obj[k];
      }
    }
  }

  return rst;
};

/* harmony default export */ var esm_clone = (clone_clone);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/debounce.js
function debounce(func, wait, immediate) {
  var timeout;
  return function () {
    var context = this,
        args = arguments;

    var later = function later() {
      timeout = null;

      if (!immediate) {
        func.apply(context, args);
      }
    };

    var callNow = immediate && !timeout;
    clearTimeout(timeout);
    timeout = setTimeout(later, wait);

    if (callNow) {
      func.apply(context, args);
    }
  };
}

/* harmony default export */ var esm_debounce = (debounce);
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.string.iterator.js
var es6_string_iterator = __webpack_require__("lQyR");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.map.js
var es6_map = __webpack_require__("zx98");

// CONCATENATED MODULE: ../node_modules/@antv/util/esm/memoize.js






/**
 * _.memoize(calColor);
 * _.memoize(calColor, (...args) => args[0]);
 * @param f
 * @param resolver
 */

/* harmony default export */ var memoize = (function (f, resolver) {
  if (!is_function(f)) {
    throw new TypeError('Expected a function');
  }

  var memoized = function memoized() {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    } // 使用方法构造 key，如果不存在 resolver，则直接取第一个参数作为 key


    var key = resolver ? resolver.apply(this, args) : args[0];
    var cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }

    var result = f.apply(this, args); // 缓存起来

    cache.set(key, result);
    return result;
  };

  memoized.cache = new Map();
  return memoized;
});
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/deep-mix.js


var MAX_MIX_LEVEL = 5;

function _deepMix(dist, src, level, maxLevel) {
  level = level || 0;
  maxLevel = maxLevel || MAX_MIX_LEVEL;

  for (var key in src) {
    if (src.hasOwnProperty(key)) {
      var value = src[key];

      if (value !== null && is_plain_object(value)) {
        if (!is_plain_object(dist[key])) {
          dist[key] = {};
        }

        if (level < maxLevel) {
          _deepMix(dist[key], value, level + 1, maxLevel);
        } else {
          dist[key] = src[key];
        }
      } else if (is_array(value)) {
        dist[key] = [];
        dist[key] = dist[key].concat(value);
      } else if (value !== undefined) {
        dist[key] = value;
      }
    }
  }
} // todo 重写


var deepMix = function deepMix(rst) {
  var args = [];

  for (var _i = 1; _i < arguments.length; _i++) {
    args[_i - 1] = arguments[_i];
  }

  for (var i = 0; i < args.length; i += 1) {
    _deepMix(rst, args[i]);
  }

  return rst;
};

/* harmony default export */ var deep_mix = (deepMix);
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.create.js
var es6_object_create = __webpack_require__("PAbq");

// CONCATENATED MODULE: ../node_modules/@antv/util/esm/extend.js




var extend_extend = function extend(subclass, superclass, overrides, staticOverrides) {
  // 如果只提供父类构造函数，则自动生成子类构造函数
  if (!is_function(superclass)) {
    overrides = superclass;
    superclass = subclass;

    subclass = function subclass() {};
  }

  var create = Object.create ? function (proto, c) {
    return Object.create(proto, {
      constructor: {
        value: c
      }
    });
  } : function (proto, c) {
    function Tmp() {}

    Tmp.prototype = proto;
    var o = new Tmp();
    o.constructor = c;
    return o;
  };
  var superObj = create(superclass.prototype, subclass); // new superclass(),//实例化父类作为子类的prototype

  subclass.prototype = mix(superObj, subclass.prototype); // 指定子类的prototype

  subclass.superclass = create(superclass.prototype, superclass);
  mix(superObj, overrides);
  mix(subclass, staticOverrides);
  return subclass;
};

/* harmony default export */ var esm_extend = (extend_extend);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/index-of.js



var index_of_indexOf = function indexOf(arr, obj) {
  if (!is_array_like(arr)) {
    return -1;
  }

  var m = Array.prototype.indexOf;

  if (m) {
    return m.call(arr, obj);
  }

  var index = -1;

  for (var i = 0; i < arr.length; i++) {
    if (arr[i] === obj) {
      index = i;
      break;
    }
  }

  return index;
};

/* harmony default export */ var index_of = (index_of_indexOf);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/is-empty.js








var is_empty_hasOwnProperty = Object.prototype.hasOwnProperty;

function isEmpty(value) {
  /**
   * isEmpty(null) => true
   * isEmpty() => true
   * isEmpty(true) => true
   * isEmpty(1) => true
   * isEmpty([1, 2, 3]) => false
   * isEmpty('abc') => false
   * isEmpty({ a: 1 }) => false
   */
  if (is_nil(value)) {
    return true;
  }

  if (is_array_like(value)) {
    return !value.length;
  }

  var type = get_type(value);

  if (type === 'Map' || type === 'Set') {
    return !value.size;
  }

  if (is_prototype(value)) {
    return !Object.keys(value).length;
  }

  for (var key in value) {
    if (is_empty_hasOwnProperty.call(value, key)) {
      return false;
    }
  }

  return true;
}

/* harmony default export */ var is_empty = (isEmpty);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/is-equal.js








var is_equal_isEqual = function isEqual(value, other) {
  if (value === other) {
    return true;
  }

  if (!value || !other) {
    return false;
  }

  if (is_string(value) || is_string(other)) {
    return false;
  }

  if (is_array_like(value) || is_array_like(other)) {
    if (value.length !== other.length) {
      return false;
    }

    var rst = true;

    for (var i = 0; i < value.length; i++) {
      rst = isEqual(value[i], other[i]);

      if (!rst) {
        break;
      }
    }

    return rst;
  }

  if (is_object_like(value) || is_object_like(other)) {
    var valueKeys = Object.keys(value);
    var otherKeys = Object.keys(other);

    if (valueKeys.length !== otherKeys.length) {
      return false;
    }

    var rst = true;

    for (var i = 0; i < valueKeys.length; i++) {
      rst = isEqual(value[valueKeys[i]], other[valueKeys[i]]);

      if (!rst) {
        break;
      }
    }

    return rst;
  }

  return false;
};

/* harmony default export */ var is_equal = (is_equal_isEqual);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/is-equal-with.js


/**
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {Function} [fn] The function to customize comparisons.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * function isGreeting(value) {
 *   return /^h(?:i|ello)$/.test(value);
 * }
 *
 * function customizer(objValue, othValue) {
 *   if (isGreeting(objValue) && isGreeting(othValue)) {
 *     return true;
 *   }
 * }
 *
 * var array = ['hello', 'goodbye'];
 * var other = ['hi', 'goodbye'];
 *
 * isEqualWith(array, other, customizer);  // => true
 */

/* harmony default export */ var is_equal_with = (function (value, other, fn) {
  if (!is_function(fn)) {
    return is_equal(value, other);
  }

  return !!fn(value, other);
});
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/map.js


var map_map = function map(arr, func) {
  if (!is_array_like(arr)) {
    // @ts-ignore
    return arr;
  }

  var result = [];

  for (var index = 0; index < arr.length; index++) {
    var value = arr[index];
    result.push(func(value, index));
  }

  return result;
};

/* harmony default export */ var esm_map = (map_map);
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.for-each.js
var es6_array_for_each = __webpack_require__("7lGJ");

// CONCATENATED MODULE: ../node_modules/@antv/util/esm/map-values.js








var identity = function identity(v) {
  return v;
};

/* harmony default export */ var map_values = (function (object, func) {
  if (func === void 0) {
    func = identity;
  }

  var r = {};

  if (is_object(object) && !is_nil(object)) {
    Object.keys(object).forEach(function (key) {
      // @ts-ignore
      r[key] = func(object[key], key);
    });
  }

  return r;
});
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/get.js


/**
 * https://github.com/developit/dlv/blob/master/index.js
 * @param obj
 * @param key
 * @param defaultValue
 */

/* harmony default export */ var get = (function (obj, key, defaultValue) {
  var p = 0;
  var keyArr = is_string(key) ? key.split('.') : key;

  while (obj && p < keyArr.length) {
    obj = obj[keyArr[p++]];
  }

  return obj === undefined || p < keyArr.length ? defaultValue : obj;
});
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/set.js





/**
 * https://github.com/developit/dlv/blob/master/index.js
 * @param obj
 * @param path
 * @param value
 */

/* harmony default export */ var set = (function (obj, path, value) {
  var o = obj;
  var keyArr = is_string(path) ? path.split('.') : path;
  keyArr.forEach(function (key, idx) {
    // 不是最后一个
    if (idx < keyArr.length - 1) {
      if (!is_object(o[key])) {
        o[key] = is_number(keyArr[idx + 1]) ? [] : {};
      }

      o = o[key];
    } else {
      o[key] = value;
    }
  });
  return obj;
});
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/pick.js


var pick_hasOwnProperty = Object.prototype.hasOwnProperty;
/* harmony default export */ var pick = (function (object, keys) {
  if (object === null || !is_plain_object(object)) {
    return {};
  }

  var result = {};
  esm_each(keys, function (key) {
    if (pick_hasOwnProperty.call(object, key)) {
      result[key] = object[key];
    }
  });
  return result;
});
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.date.now.js
var es6_date_now = __webpack_require__("7t+O");

// CONCATENATED MODULE: ../node_modules/@antv/util/esm/throttle.js

/* harmony default export */ var throttle = (function (func, wait, options) {
  var timeout, context, args, result;
  var previous = 0;
  if (!options) options = {};

  var later = function later() {
    previous = options.leading === false ? 0 : Date.now();
    timeout = null;
    result = func.apply(context, args);
    if (!timeout) context = args = null;
  };

  var throttled = function throttled() {
    var now = Date.now();
    if (!previous && options.leading === false) previous = now;
    var remaining = wait - (now - previous);
    context = this;
    args = arguments;

    if (remaining <= 0 || remaining > wait) {
      if (timeout) {
        clearTimeout(timeout);
        timeout = null;
      }

      previous = now;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    } else if (!timeout && options.trailing !== false) {
      timeout = setTimeout(later, remaining);
    }

    return result;
  };

  throttled.cancel = function () {
    clearTimeout(timeout);
    previous = 0;
    timeout = context = args = null;
  };

  return throttled;
});
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/to-array.js

/* harmony default export */ var to_array = (function (value) {
  return is_array_like(value) ? Array.prototype.slice.call(value) : [];
});
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/unique-id.js
var unique_id_map = {};
/* harmony default export */ var unique_id = (function (prefix) {
  prefix = prefix || 'g';

  if (!unique_id_map[prefix]) {
    unique_id_map[prefix] = 1;
  } else {
    unique_id_map[prefix] += 1;
  }

  return prefix + unique_id_map[prefix];
});
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/noop.js
/* harmony default export */ var noop = (function () {});
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/identity.js
/* harmony default export */ var esm_identity = (function (v) {
  return v;
});
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/size.js






function size(o) {
  if (is_nil(o)) {
    return 0;
  }

  if (is_array_like(o)) {
    return o.length;
  }

  return Object.keys(o).length;
}
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.map.js
var es6_array_map = __webpack_require__("yIlq");

// CONCATENATED MODULE: ../node_modules/@antv/util/esm/cache.js






/**
 * k-v 存储
 */
var default_1 =
/** @class */
function () {
  function default_1() {
    this.map = {};
  }

  default_1.prototype.has = function (key) {
    return this.map[key] !== undefined;
  };

  default_1.prototype.get = function (key, def) {
    var v = this.map[key];
    return v === undefined ? def : v;
  };

  default_1.prototype.set = function (key, value) {
    this.map[key] = value;
  };

  default_1.prototype.clear = function () {
    this.map = {};
  };

  default_1.prototype["delete"] = function (key) {
    delete this.map[key];
  };

  default_1.prototype.size = function () {
    return Object.keys(this.map).length;
  };

  return default_1;
}();

/* harmony default export */ var cache = (default_1);
// CONCATENATED MODULE: ../node_modules/@antv/util/esm/index.js
// array

























 // event


 // format


 // math















 // object







 // string





 // type























 // other
























 // 不知道为什么，需要把这个 export，不然 ts 会报类型错误



/***/ }),

/***/ "NR3o":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.2.1 Object.assign(target, source, ...)
var DESCRIPTORS = __webpack_require__("GGqZ");
var getKeys = __webpack_require__("LuBU");
var gOPS = __webpack_require__("0oPD");
var pIE = __webpack_require__("IdFN");
var toObject = __webpack_require__("UnHL");
var IObject = __webpack_require__("Cmsx");
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || __webpack_require__("E7Vc")(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;


/***/ }),

/***/ "NSX3":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _api_runner_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("xtsi");
/* harmony import */ var _api_runner_browser__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_api_runner_browser__WEBPACK_IMPORTED_MODULE_0__);
if(window.location.protocol!=="https:"&&window.location.hostname!=="localhost"){console.error("Service workers can only be used over HTTPS, or on localhost for development");}else if("serviceWorker"in navigator){navigator.serviceWorker.register(""+"/sw.js").then(function(reg){reg.addEventListener("updatefound",function(){Object(_api_runner_browser__WEBPACK_IMPORTED_MODULE_0__["apiRunner"])("onServiceWorkerUpdateFound",{serviceWorker:reg});// The updatefound event implies that reg.installing is set; see
// https://w3c.github.io/ServiceWorker/#service-worker-registration-updatefound-event
var installingWorker=reg.installing;console.log("installingWorker",installingWorker);installingWorker.addEventListener("statechange",function(){switch(installingWorker.state){case"installed":if(navigator.serviceWorker.controller){// At this point, the old content will have been purged and the fresh content will
// have been added to the cache.
// We set a flag so Gatsby Link knows to refresh the page on next navigation attempt
window.___swUpdated=true;// We call the onServiceWorkerUpdateReady API so users can show update prompts.
Object(_api_runner_browser__WEBPACK_IMPORTED_MODULE_0__["apiRunner"])("onServiceWorkerUpdateReady",{serviceWorker:reg});// If resources failed for the current page, reload.
if(window.___failedResources){console.log("resources failed, SW updated - reloading");window.location.reload();}}else{// At this point, everything has been precached.
// It's the perfect time to display a "Content is cached for offline use." message.
console.log("Content is now available offline!");// Post to service worker that install is complete.
// Delay to allow time for the event listener to be added --
// otherwise fetch is called too soon and resources aren't cached.
Object(_api_runner_browser__WEBPACK_IMPORTED_MODULE_0__["apiRunner"])("onServiceWorkerInstalled",{serviceWorker:reg});}break;case"redundant":console.error("The installing service worker became redundant.");Object(_api_runner_browser__WEBPACK_IMPORTED_MODULE_0__["apiRunner"])("onServiceWorkerRedundant",{serviceWorker:reg});break;case"activated":Object(_api_runner_browser__WEBPACK_IMPORTED_MODULE_0__["apiRunner"])("onServiceWorkerActive",{serviceWorker:reg});break;}});});}).catch(function(e){console.error("Error during service worker registration:",e);});}

/***/ }),

/***/ "NToG":
/***/ (function(module, exports) {

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

module.exports = _createClass;

/***/ }),

/***/ "NU6T":
/***/ (function(module, exports, __webpack_require__) {

var _curry1 = __webpack_require__("AN6r");

var curryN = __webpack_require__("3D/W");
/**
 * Returns a curried equivalent of the provided function. The curried function
 * has two unusual capabilities. First, its arguments needn't be provided one
 * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the
 * following are equivalent:
 *
 *   - `g(1)(2)(3)`
 *   - `g(1)(2, 3)`
 *   - `g(1, 2)(3)`
 *   - `g(1, 2, 3)`
 *
 * Secondly, the special placeholder value [`R.__`](#__) may be used to specify
 * "gaps", allowing partial application of any combination of arguments,
 * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),
 * the following are equivalent:
 *
 *   - `g(1, 2, 3)`
 *   - `g(_, 2, 3)(1)`
 *   - `g(_, _, 3)(1)(2)`
 *   - `g(_, _, 3)(1, 2)`
 *   - `g(_, 2)(1)(3)`
 *   - `g(_, 2)(1, 3)`
 *   - `g(_, 2)(_, 3)(1)`
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Function
 * @sig (* -> a) -> (* -> a)
 * @param {Function} fn The function to curry.
 * @return {Function} A new, curried function.
 * @see R.curryN
 * @example
 *
 *      var addFourNumbers = (a, b, c, d) => a + b + c + d;
 *
 *      var curriedAddFourNumbers = R.curry(addFourNumbers);
 *      var f = curriedAddFourNumbers(1, 2);
 *      var g = f(3);
 *      g(4); //=> 10
 */


module.exports = _curry1(function curry(fn) {
  return curryN(fn.length, fn);
});

/***/ }),

/***/ "NUlt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("5hJT");

__webpack_require__("d3/y");

var _interopRequireDefault = __webpack_require__("63Ad");

var _interopRequireWildcard = __webpack_require__("vdEC");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var React = _interopRequireWildcard(__webpack_require__("mXGw"));

var _CheckCircleOutlined = _interopRequireDefault(__webpack_require__("OMNp"));

var _AntdIcon = _interopRequireDefault(__webpack_require__("CxZ5")); // GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY


var CheckCircleOutlined = function CheckCircleOutlined(props, ref) {
  return React.createElement(_AntdIcon["default"], Object.assign({}, props, {
    ref: ref,
    icon: _CheckCircleOutlined["default"]
  }));
};

CheckCircleOutlined.displayName = 'CheckCircleOutlined';

var _default = React.forwardRef(CheckCircleOutlined);

exports["default"] = _default;

/***/ }),

/***/ "NVL/":
/***/ (function(module, exports, __webpack_require__) {

// 7.2.8 IsRegExp(argument)
var isObject = __webpack_require__("Bsg+");
var cof = __webpack_require__("n+VH");
var MATCH = __webpack_require__("9dxi")('match');
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
};


/***/ }),

/***/ "NYms":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ../node_modules/react/index.js
var react = __webpack_require__("mXGw");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.assign.js
var es6_object_assign = __webpack_require__("5hJT");

// CONCATENATED MODULE: ../node_modules/@ant-design/icons-svg/es/asn/LoadingOutlined.js
// This icon file is generated automatically.
var LoadingOutlined_LoadingOutlined = {
  "icon": {
    "tag": "svg",
    "attrs": {
      "viewBox": "0 0 1024 1024",
      "focusable": "false"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "d": "M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 00-94.3-139.9 437.71 437.71 0 00-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z"
      }
    }]
  },
  "name": "loading",
  "theme": "outlined"
};
/* harmony default export */ var asn_LoadingOutlined = (LoadingOutlined_LoadingOutlined);
// EXTERNAL MODULE: ../node_modules/@ant-design/icons/es/components/AntdIcon.js + 2 modules
var AntdIcon = __webpack_require__("uoK5");

// CONCATENATED MODULE: ../node_modules/@ant-design/icons/es/icons/LoadingOutlined.js

// GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY




var icons_LoadingOutlined_LoadingOutlined = function LoadingOutlined(props, ref) {
  return react["createElement"](AntdIcon["a" /* default */], Object.assign({}, props, {
    ref: ref,
    icon: asn_LoadingOutlined
  }));
};

icons_LoadingOutlined_LoadingOutlined.displayName = 'LoadingOutlined';
/* harmony default export */ var icons_LoadingOutlined = (react["forwardRef"](icons_LoadingOutlined_LoadingOutlined));
// EXTERNAL MODULE: ../@antv/gatsby-theme-antv/site/components/PageLoading.module.less
var PageLoading_module = __webpack_require__("L+cS");
var PageLoading_module_default = /*#__PURE__*/__webpack_require__.n(PageLoading_module);

// CONCATENATED MODULE: ../@antv/gatsby-theme-antv/site/components/PageLoading.tsx




var PageLoading_PageLoading = function PageLoading() {
  return /*#__PURE__*/react_default.a.createElement("div", {
    className: PageLoading_module_default.a.container
  }, /*#__PURE__*/react_default.a.createElement(icons_LoadingOutlined, {
    className: PageLoading_module_default.a.loading
  }));
};

/* harmony default export */ var components_PageLoading = __webpack_exports__["a"] = (PageLoading_PageLoading);

/***/ }),

/***/ "Ndiv":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.13 String.prototype.sub()
__webpack_require__("LEAW")('sub', function (createHTML) {
  return function sub() {
    return createHTML(this, 'sub', '', '');
  };
});


/***/ }),

/***/ "NhxO":
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__("X6VK");

$export($export.P, 'String', {
  // 21.1.3.13 String.prototype.repeat(count)
  repeat: __webpack_require__("p1Jl")
});


/***/ }),

/***/ "Nu7b":
/***/ (function(module, exports) {

// 7.2.9 SameValue(x, y)
module.exports = Object.is || function is(x, y) {
  // eslint-disable-next-line no-self-compare
  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
};


/***/ }),

/***/ "NyDw":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("5hJT");

__webpack_require__("d3/y");

var _interopRequireDefault = __webpack_require__("63Ad");

var _interopRequireWildcard = __webpack_require__("vdEC");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var React = _interopRequireWildcard(__webpack_require__("mXGw"));

var _SearchOutlined = _interopRequireDefault(__webpack_require__("RaTo"));

var _AntdIcon = _interopRequireDefault(__webpack_require__("CxZ5")); // GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY


var SearchOutlined = function SearchOutlined(props, ref) {
  return React.createElement(_AntdIcon["default"], Object.assign({}, props, {
    ref: ref,
    icon: _SearchOutlined["default"]
  }));
};

SearchOutlined.displayName = 'SearchOutlined';

var _default = React.forwardRef(SearchOutlined);

exports["default"] = _default;

/***/ }),

/***/ "OFPg":
/***/ (function(module, exports, __webpack_require__) {

var _curry1 = __webpack_require__("AN6r");

var _isPlaceholder = __webpack_require__("SaPD");
/**
 * Optimized internal two-arity curry function.
 *
 * @private
 * @category Function
 * @param {Function} fn The function to curry.
 * @return {Function} The curried function.
 */


module.exports = function _curry2(fn) {
  return function f2(a, b) {
    switch (arguments.length) {
      case 0:
        return f2;

      case 1:
        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {
          return fn(a, _b);
        });

      default:
        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {
          return fn(_a, b);
        }) : _isPlaceholder(b) ? _curry1(function (_b) {
          return fn(a, _b);
        }) : fn(a, b);
    }
  };
};

/***/ }),

/***/ "OFVL":
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__("n+VH");
var TAG = __webpack_require__("9dxi")('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),

/***/ "OLqI":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "OMNp":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // This icon file is generated automatically.

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var CheckCircleOutlined = {
  "icon": {
    "tag": "svg",
    "attrs": {
      "viewBox": "64 64 896 896",
      "focusable": "false"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "d": "M699 353h-46.9c-10.2 0-19.9 4.9-25.9 13.3L469 584.3l-71.2-98.8c-6-8.3-15.6-13.3-25.9-13.3H325c-6.5 0-10.3 7.4-6.5 12.7l124.6 172.8a31.8 31.8 0 0051.7 0l210.6-292c3.9-5.3.1-12.7-6.4-12.7z"
      }
    }, {
      "tag": "path",
      "attrs": {
        "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
      }
    }]
  },
  "name": "check-circle",
  "theme": "outlined"
};
exports["default"] = CheckCircleOutlined;

/***/ }),

/***/ "OQzY":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var PRECISION = 0.00001; // numbers less than this is considered as 0

function isNumberEqual(a, b, precision) {
  if (precision === void 0) {
    precision = PRECISION;
  }

  return Math.abs(a - b) < precision;
}

exports["default"] = isNumberEqual;
;

/***/ }),

/***/ "OdHn":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
__webpack_require__("4aJ6");__webpack_require__("t91x");var React=__webpack_require__("mXGw");var preferDefault=function preferDefault(m){return m&&m.default||m;};var Layout;try{Layout=preferDefault(__webpack_require__("vTVJ"));}catch(e){if(e.toString().indexOf("Error: Cannot find module")!==-1){throw new Error("Couldn't find layout component at \""+"/Users/afc163/Projects/gatsby-theme-antv/@antv/gatsby-theme-antv/site/layouts/layout.tsx"+".\n\n"+"Please create layout component in that location or specify path to layout component in gatsby-config.js");}else{// Logging the error for debugging older browsers as there is no way
// to wrap the thrown error in a try/catch.
console.error(e);throw e;}}// eslint-disable-next-line react/prop-types,react/display-name
module.exports=function(_ref){var element=_ref.element,props=_ref.props;return/*#__PURE__*/React.createElement(Layout,props,element);};

/***/ }),

/***/ "OeCt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // This icon file is generated automatically.

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var CloseCircleFilled = {
  "icon": {
    "tag": "svg",
    "attrs": {
      "viewBox": "64 64 896 896",
      "focusable": "false"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
      }
    }]
  },
  "name": "close-circle",
  "theme": "filled"
};
exports["default"] = CloseCircleFilled;

/***/ }),

/***/ "OfmW":
/***/ (function(module, exports, __webpack_require__) {

// 22.1.3.31 Array.prototype[@@unscopables]
var UNSCOPABLES = __webpack_require__("9dxi")('unscopables');
var ArrayProto = Array.prototype;
if (ArrayProto[UNSCOPABLES] == undefined) __webpack_require__("tjmq")(ArrayProto, UNSCOPABLES, {});
module.exports = function (key) {
  ArrayProto[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "OgXt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("+3V6");

__webpack_require__("yIlq");

__webpack_require__("3y5y");

__webpack_require__("GkPX");

__webpack_require__("6/FK");

__webpack_require__("2Tod");

__webpack_require__("7lGJ");

__webpack_require__("9p7t");

__webpack_require__("ABKx");

__webpack_require__("W1QL");

__webpack_require__("K/PF");

__webpack_require__("t91x");

__webpack_require__("75LO");

__webpack_require__("d3/y");

var _interopRequireWildcard = __webpack_require__("vdEC");

var _interopRequireDefault = __webpack_require__("63Ad");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.warning = warning;
exports.isIconDefinition = isIconDefinition;
exports.normalizeAttrs = normalizeAttrs;
exports.generate = generate;
exports.getSecondaryColor = getSecondaryColor;
exports.normalizeTwoToneColors = normalizeTwoToneColors;
exports.useInsertStyles = exports.iconStyles = exports.svgBaseProps = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__("OvAC"));

var _typeof2 = _interopRequireDefault(__webpack_require__("e+GP"));

var _colors = __webpack_require__("LTuF");

var _react = _interopRequireWildcard(__webpack_require__("mXGw"));

var _warning = _interopRequireDefault(__webpack_require__("HApA"));

var _insertCss = __webpack_require__("3Q0B");

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        (0, _defineProperty2["default"])(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function warning(valid, message) {
  (0, _warning["default"])(valid, "[@ant-design/icons] ".concat(message));
}

function isIconDefinition(target) {
  return (0, _typeof2["default"])(target) === 'object' && typeof target.name === 'string' && typeof target.theme === 'string' && ((0, _typeof2["default"])(target.icon) === 'object' || typeof target.icon === 'function');
}

function normalizeAttrs() {
  var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return Object.keys(attrs).reduce(function (acc, key) {
    var val = attrs[key];

    switch (key) {
      case 'class':
        acc.className = val;
        delete acc["class"];
        break;

      default:
        acc[key] = val;
    }

    return acc;
  }, {});
}

function generate(node, key, rootProps) {
  if (!rootProps) {
    return _react["default"].createElement(node.tag, _objectSpread({
      key: key
    }, normalizeAttrs(node.attrs)), (node.children || []).map(function (child, index) {
      return generate(child, "".concat(key, "-").concat(node.tag, "-").concat(index));
    }));
  }

  return _react["default"].createElement(node.tag, _objectSpread(_objectSpread({
    key: key
  }, normalizeAttrs(node.attrs)), rootProps), (node.children || []).map(function (child, index) {
    return generate(child, "".concat(key, "-").concat(node.tag, "-").concat(index));
  }));
}

function getSecondaryColor(primaryColor) {
  // choose the second color
  return (0, _colors.generate)(primaryColor)[0];
}

function normalizeTwoToneColors(twoToneColor) {
  if (!twoToneColor) {
    return [];
  }

  return Array.isArray(twoToneColor) ? twoToneColor : [twoToneColor];
} // These props make sure that the SVG behaviours like general text.
// Reference: https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4


var svgBaseProps = {
  width: '1em',
  height: '1em',
  fill: 'currentColor',
  'aria-hidden': 'true',
  focusable: 'false'
};
exports.svgBaseProps = svgBaseProps;
var iconStyles = "\n.anticon {\n  display: inline-block;\n  color: inherit;\n  font-style: normal;\n  line-height: 0;\n  text-align: center;\n  text-transform: none;\n  vertical-align: -0.125em;\n  text-rendering: optimizeLegibility;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.anticon > * {\n  line-height: 1;\n}\n\n.anticon svg {\n  display: inline-block;\n}\n\n.anticon::before {\n  display: none;\n}\n\n.anticon .anticon-icon {\n  display: block;\n}\n\n.anticon[tabindex] {\n  cursor: pointer;\n}\n\n.anticon-spin::before,\n.anticon-spin {\n  display: inline-block;\n  -webkit-animation: loadingCircle 1s infinite linear;\n  animation: loadingCircle 1s infinite linear;\n}\n\n@-webkit-keyframes loadingCircle {\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loadingCircle {\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n";
exports.iconStyles = iconStyles;
var cssInjectedFlag = false;

var useInsertStyles = function useInsertStyles() {
  var styleStr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : iconStyles;
  (0, _react.useEffect)(function () {
    if (!cssInjectedFlag) {
      (0, _insertCss.insertCss)(styleStr, {
        prepend: true
      });
      cssInjectedFlag = true;
    }
  }, []);
};

exports.useInsertStyles = useInsertStyles;

/***/ }),

/***/ "OvAC":
/***/ (function(module, exports) {

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

module.exports = _defineProperty;

/***/ }),

/***/ "Ove1":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * @fileoverview 判断点是否在多边形内
 * @author dxq613@gmail.com
 */

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
}); // 多边形的射线检测，参考：https://blog.csdn.net/WilliamSun0122/article/details/77994526

var tolerance = 1e-6; // 三态函数，判断两个double在eps精度下的大小关系

function dcmp(x) {
  if (Math.abs(x) < tolerance) {
    return 0;
  }

  return x < 0 ? -1 : 1;
} // 判断点Q是否在p1和p2的线段上


function onSegment(p1, p2, q) {
  if ((q[0] - p1[0]) * (p2[1] - p1[1]) === (p2[0] - p1[0]) * (q[1] - p1[1]) && Math.min(p1[0], p2[0]) <= q[0] && q[0] <= Math.max(p1[0], p2[0]) && Math.min(p1[1], p2[1]) <= q[1] && q[1] <= Math.max(p1[1], p2[1])) {
    return true;
  }

  return false;
} // 判断点P在多边形内-射线法


function isInPolygon(points, x, y) {
  var isHit = false;
  var n = points.length;

  if (n <= 2) {
    // svg 中点小于 3 个时，不显示，也无法被拾取
    return false;
  }

  for (var i = 0; i < n; i++) {
    var p1 = points[i];
    var p2 = points[(i + 1) % n];

    if (onSegment(p1, p2, [x, y])) {
      // 点在多边形一条边上
      return true;
    } // 前一个判断min(p1[1],p2[1])<P.y<=max(p1[1],p2[1])
    // 后一个判断被测点 在 射线与边交点 的左边


    if (dcmp(p1[1] - y) > 0 !== dcmp(p2[1] - y) > 0 && dcmp(x - (y - p1[1]) * (p1[0] - p2[0]) / (p1[1] - p2[1]) - p1[0]) < 0) {
      isHit = !isHit;
    }
  }

  return isHit;
}

exports["default"] = isInPolygon;

/***/ }),

/***/ "P+uj":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _getPrototypeOf; });
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

/***/ }),

/***/ "P/oo":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__("X6VK");
var toIObject = __webpack_require__("ml72");
var toInteger = __webpack_require__("mvii");
var toLength = __webpack_require__("Sp5b");
var $native = [].lastIndexOf;
var NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;

$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__("/6rt")($native)), 'Array', {
  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
  lastIndexOf: function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {
    // convert -0 to +0
    if (NEGATIVE_ZERO) return $native.apply(this, arguments) || 0;
    var O = toIObject(this);
    var length = toLength(O.length);
    var index = length - 1;
    if (arguments.length > 1) index = Math.min(index, toInteger(arguments[1]));
    if (index < 0) index = length + index;
    for (;index >= 0; index--) if (index in O) if (O[index] === searchElement) return index || 0;
    return -1;
  }
});


/***/ }),

/***/ "P3BQ":
/***/ (function(module, exports) {

module.exports = function _arrayFromIterator(iter) {
  var list = [];
  var next;

  while (!(next = iter.next()).done) {
    list.push(next.value);
  }

  return list;
};

/***/ }),

/***/ "P56o":
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),

/***/ "PAFS":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("Bsg+");
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),

/***/ "PAbq":
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__("X6VK");
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export($export.S, 'Object', { create: __webpack_require__("Vx+c") });


/***/ }),

/***/ "PE9J":
/***/ (function(module, exports) {

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

module.exports = _objectWithoutPropertiesLoose;

/***/ }),

/***/ "PKNW":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "version", function() { return version; });
/* harmony import */ var _shape__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("FjZ0");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "Shape", function() { return _shape__WEBPACK_IMPORTED_MODULE_0__; });
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("Cgi2");
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _types__WEBPACK_IMPORTED_MODULE_1__) if(["version","Event","Canvas","Group","Shape","default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _types__WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _interfaces__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("p+I5");
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _interfaces__WEBPACK_IMPORTED_MODULE_2__) if(["version","Event","Canvas","Group","Shape","default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _interfaces__WEBPACK_IMPORTED_MODULE_2__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var _antv_g_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("AKAt");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Event", function() { return _antv_g_base__WEBPACK_IMPORTED_MODULE_3__["e"]; });

/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("4IO6");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Canvas", function() { return _canvas__WEBPACK_IMPORTED_MODULE_4__["a"]; });

/* harmony import */ var _group__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("MApM");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Group", function() { return _group__WEBPACK_IMPORTED_MODULE_5__["a"]; });



var pkg = __webpack_require__("hV6t");

var version = pkg.version;







/***/ }),

/***/ "PPkd":
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__("eOWL");
var createDesc = __webpack_require__("zJT+");
module.exports = __webpack_require__("lBnu") ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "PSh9":
/***/ (function(module, exports, __webpack_require__) {

module.exports = {
  "default": __webpack_require__("AFnJ"),
  __esModule: true
};

/***/ }),

/***/ "Pfmf":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)

var toObject = __webpack_require__("UnHL");
var toAbsoluteIndex = __webpack_require__("BUlT");
var toLength = __webpack_require__("Sp5b");
module.exports = function fill(value /* , start = 0, end = @length */) {
  var O = toObject(this);
  var length = toLength(O.length);
  var aLen = arguments.length;
  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);
  var end = aLen > 2 ? arguments[2] : undefined;
  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
  while (endPos > index) O[index++] = value;
  return O;
};


/***/ }),

/***/ "Pfmi":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = __webpack_require__("bb6g");

var base_1 = __webpack_require__("JFiQ");

exports.Attribute = base_1["default"]; // 所有的 attribute map

var ATTRIBUTE_MAP = {};
/**
 * 通过类型获得 Attribute 类
 * @param type
 */

var getAttribute = function getAttribute(type) {
  return ATTRIBUTE_MAP[type.toLowerCase()];
};

exports.getAttribute = getAttribute;

var registerAttribute = function registerAttribute(type, ctor) {
  // 注册的时候，需要校验 type 重名，不区分大小写
  if (getAttribute(type)) {
    throw new Error("Attribute type '" + type + "' existed.");
  } // 存储到 map 中


  ATTRIBUTE_MAP[type.toLowerCase()] = ctor;
};

exports.registerAttribute = registerAttribute;

tslib_1.__exportStar(__webpack_require__("1t9a"), exports);

/***/ }),

/***/ "PgXy":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // Dependencies

__webpack_require__("Z8gF");

__webpack_require__("nsbO");

__webpack_require__("9p7t");

__webpack_require__("e2Kn");

__webpack_require__("asZ9");

__webpack_require__("FEHE");

__webpack_require__("V7cS");

__webpack_require__("PAbq");

__webpack_require__("m8zh");

var protocols = __webpack_require__("30gj"),
    isSsh = __webpack_require__("2agF"),
    qs = __webpack_require__("UKnr");
/**
 * parsePath
 * Parses the input url.
 *
 * @name parsePath
 * @function
 * @param {String} url The input url.
 * @return {Object} An object containing the following fields:
 *
 *  - `protocols` (Array): An array with the url protocols (usually it has one element).
 *  - `protocol` (String): The first protocol, `"ssh"` (if the url is a ssh url) or `"file"`.
 *  - `port` (null|Number): The domain port.
 *  - `resource` (String): The url domain (including subdomains).
 *  - `user` (String): The authentication user (usually for ssh urls).
 *  - `pathname` (String): The url pathname.
 *  - `hash` (String): The url hash.
 *  - `search` (String): The url querystring value.
 *  - `href` (String): The input url.
 *  - `query` (Object): The url querystring, parsed as object.
 */


function parsePath(url) {
  url = (url || "").trim();
  var output = {
    protocols: protocols(url),
    protocol: null,
    port: null,
    resource: "",
    user: "",
    pathname: "",
    hash: "",
    search: "",
    href: url,
    query: Object.create(null)
  },
      protocolIndex = url.indexOf("://"),
      resourceIndex = -1,
      splits = null,
      parts = null;

  if (url.startsWith(".")) {
    if (url.startsWith("./")) {
      url = url.substring(2);
    }

    output.pathname = url;
    output.protocol = "file";
  }

  var firstChar = url.charAt(1);

  if (!output.protocol) {
    output.protocol = output.protocols[0];

    if (!output.protocol) {
      if (isSsh(url)) {
        output.protocol = "ssh";
      } else if (firstChar === "/" || firstChar === "~") {
        url = url.substring(2);
        output.protocol = "file";
      } else {
        output.protocol = "file";
      }
    }
  }

  if (protocolIndex !== -1) {
    url = url.substring(protocolIndex + 3);
  }

  parts = url.split("/");

  if (output.protocol !== "file") {
    output.resource = parts.shift();
  } else {
    output.resource = "";
  } // user@domain


  splits = output.resource.split("@");

  if (splits.length === 2) {
    output.user = splits[0];
    output.resource = splits[1];
  } // domain.com:port


  splits = output.resource.split(":");

  if (splits.length === 2) {
    output.resource = splits[0];

    if (splits[1]) {
      output.port = Number(splits[1]);

      if (isNaN(output.port)) {
        output.port = null;
        parts.unshift(splits[1]);
      }
    } else {
      output.port = null;
    }
  } // Remove empty elements


  parts = parts.filter(Boolean); // Stringify the pathname

  if (output.protocol === "file") {
    output.pathname = output.href;
  } else {
    output.pathname = output.pathname || (output.protocol !== "file" || output.href[0] === "/" ? "/" : "") + parts.join("/");
  } // #some-hash


  splits = output.pathname.split("#");

  if (splits.length === 2) {
    output.pathname = splits[0];
    output.hash = splits[1];
  } // ?foo=bar


  splits = output.pathname.split("?");

  if (splits.length === 2) {
    output.pathname = splits[0];
    output.search = splits[1];
  }

  output.query = qs.parse(output.search);
  output.href = output.href.replace(/\/$/, "");
  output.pathname = output.pathname.replace(/\/$/, "");
  return output;
}

module.exports = parsePath;

/***/ }),

/***/ "PrI8":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.assign.js
var es6_object_assign = __webpack_require__("5hJT");

// EXTERNAL MODULE: ../node_modules/react/index.js
var react = __webpack_require__("mXGw");

// CONCATENATED MODULE: ../node_modules/@ant-design/icons-svg/es/asn/HomeOutlined.js
// This icon file is generated automatically.
var HomeOutlined_HomeOutlined = {
  "icon": {
    "tag": "svg",
    "attrs": {
      "viewBox": "64 64 896 896",
      "focusable": "false"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "d": "M946.5 505L560.1 118.8l-25.9-25.9a31.5 31.5 0 00-44.4 0L77.5 505a63.9 63.9 0 00-18.8 46c.4 35.2 29.7 63.3 64.9 63.3h42.5V940h691.8V614.3h43.4c17.1 0 33.2-6.7 45.3-18.8a63.6 63.6 0 0018.7-45.3c0-17-6.7-33.1-18.8-45.2zM568 868H456V664h112v204zm217.9-325.7V868H632V640c0-22.1-17.9-40-40-40H432c-22.1 0-40 17.9-40 40v228H238.1V542.3h-96l370-369.7 23.1 23.1L882 542.3h-96.1z"
      }
    }]
  },
  "name": "home",
  "theme": "outlined"
};
/* harmony default export */ var asn_HomeOutlined = (HomeOutlined_HomeOutlined);
// EXTERNAL MODULE: ../node_modules/@ant-design/icons/es/components/AntdIcon.js + 2 modules
var AntdIcon = __webpack_require__("uoK5");

// CONCATENATED MODULE: ../node_modules/@ant-design/icons/es/icons/HomeOutlined.js

// GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY




var icons_HomeOutlined_HomeOutlined = function HomeOutlined(props, ref) {
  return react["createElement"](AntdIcon["a" /* default */], Object.assign({}, props, {
    ref: ref,
    icon: asn_HomeOutlined
  }));
};

icons_HomeOutlined_HomeOutlined.displayName = 'HomeOutlined';
/* harmony default export */ var icons_HomeOutlined = __webpack_exports__["a"] = (react["forwardRef"](icons_HomeOutlined_HomeOutlined));

/***/ }),

/***/ "Prd0":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
__webpack_require__("FEHE");__webpack_require__("it7j");exports.__esModule=true;exports.default=void 0;/**
 * Get a manifest filename depending on localized pathname
 *
 * @param {string} pathname
 * @param {Array<{start_url: string, lang: string}>} localizedManifests
 * @return string
 */var _default=function _default(pathname,localizedManifests){var defaultFilename="manifest.webmanifest";if(!Array.isArray(localizedManifests)){return defaultFilename;}var localizedManifest=localizedManifests.find(function(app){return pathname.startsWith(app.start_url);});if(!localizedManifest){return defaultFilename;}return"manifest_"+localizedManifest.lang+".webmanifest";};exports.default=_default;

/***/ }),

/***/ "Q5TA":
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__("67sl")('keys');
var uid = __webpack_require__("ct/D");
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),

/***/ "Q5fm":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * @fileoverview 椭圆的一些计算，
 *  - 周长计算参考：https://www.mathsisfun.com/geometry/ellipse-perimeter.html
 *  - 距离计算参考：https://wet-robots.ghost.io/simple-method-for-distance-to-ellipse/
 * @author dxq613@gmail.com
 */

__webpack_require__("aaOZ");

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var util_1 = __webpack_require__("H4Zb");

function copysign(v1, v2) {
  var absv = Math.abs(v1);
  return v2 > 0 ? absv : absv * -1;
}

exports["default"] = {
  /**
   * 包围盒计算
   * @param {number} x  椭圆中心 x
   * @param {number} y  椭圆中心 y
   * @param {number} rx 椭圆 x 方向半径
   * @param {number} ry 椭圆 y 方向半径
   * @return {object} 包围盒
   */
  box: function box(x, y, rx, ry) {
    return {
      x: x - rx,
      y: y - ry,
      width: rx * 2,
      height: ry * 2
    };
  },

  /**
   * 计算周长，使用近似法
   * @param {number} x  椭圆中心 x
   * @param {number} y  椭圆中心 y
   * @param {number} rx 椭圆 x 方向半径
   * @param {number} ry 椭圆 y 方向半径
   * @return {number} 椭圆周长
   */
  length: function length(x, y, rx, ry) {
    return Math.PI * (3 * (rx + ry) - Math.sqrt((3 * rx + ry) * (rx + 3 * ry)));
  },

  /**
   * 距离椭圆最近的点
   * @param {number} x  椭圆中心 x
   * @param {number} y  椭圆中心 y
   * @param {number} rx 椭圆 x 方向半径
   * @param {number} ry 椭圆 y 方向半径
   * @param {number} x0  指定的点 x
   * @param {number} y0  指定的点 y
   * @return {object} 椭圆上距离指定点最近的点
   */
  nearestPoint: function nearestPoint(x, y, rx, ry, x0, y0) {
    var a = rx;
    var b = ry; // 假如椭圆半径为0则返回圆心

    if (a === 0 || b === 0) {
      return {
        x: x,
        y: y
      };
    } // 转换成 0， 0 为中心的椭圆计算


    var relativeX = x0 - x;
    var relativeY = y0 - y;
    var px = Math.abs(relativeX);
    var py = Math.abs(relativeY);
    var squareA = a * a;
    var squareB = b * b; // const angle0 = Math.atan2(relativeY, relativeX);

    var t = Math.PI / 4;
    var nearestX; // 椭圆上的任一点

    var nearestY; // 迭代 4 次

    for (var i = 0; i < 4; i++) {
      nearestX = a * Math.cos(t);
      nearestY = b * Math.sin(t);
      var ex = (squareA - squareB) * Math.pow(Math.cos(t), 3) / a;
      var ey = (squareB - squareA) * Math.pow(Math.sin(t), 3) / b;
      var rx1 = nearestX - ex;
      var ry1 = nearestY - ey;
      var qx = px - ex;
      var qy = py - ey;
      var r = Math.hypot(ry1, rx1);
      var q = Math.hypot(qy, qx);
      var delta_c = r * Math.asin((rx1 * qy - ry1 * qx) / (r * q));
      var delta_t = delta_c / Math.sqrt(squareA + squareB - nearestX * nearestX - nearestY * nearestY);
      t += delta_t;
      t = Math.min(Math.PI / 2, Math.max(0, t));
    }

    return {
      x: x + copysign(nearestX, relativeX),
      y: y + copysign(nearestY, relativeY)
    };
  },

  /**
   * 点到椭圆最近的距离
   * @param {number} x  椭圆中心 x
   * @param {number} y  椭圆中心 y
   * @param {number} rx 椭圆 x 方向半径
   * @param {number} ry 椭圆 y 方向半径
   * @param {number} x0  指定的点 x
   * @param {number} y0  指定的点 y
   * @return {number} 点到椭圆的距离
   */
  pointDistance: function pointDistance(x, y, rx, ry, x0, y0) {
    var nearestPoint = this.nearestPoint(x, y, rx, ry, x0, y0);
    return util_1.distance(nearestPoint.x, nearestPoint.y, x0, y0);
  },

  /**
   * 根据比例获取点
   * @param {number} x 椭圆中心 x
   * @param {number} y 椭圆中心 y
   * @param {number} rx 椭圆 x 方向半径
   * @param {number} ry 椭圆 y 方向半径
   * @param {number} t 指定比例，x轴方向为 0
   * @return {object} 点
   */
  pointAt: function pointAt(x, y, rx, ry, t) {
    var angle = 2 * Math.PI * t; // 按照角度进行计算，而不按照周长计算

    return {
      x: x + rx * Math.cos(angle),
      y: y + ry * Math.sin(angle)
    };
  },

  /**
   * 根据比例计算切线角度
   * @param {number} x 椭圆中心 x
   * @param {number} y 椭圆中心 y
   * @param {number} rx 椭圆 x 方向半径
   * @param {number} ry 椭圆 y 方向半径
   * @param {number} t 指定比例 0 - 1 之间，x轴方向为 0。在 0-1 范围之外是循环还是返回 null，还需要调整
   * @return {number} 角度，在 0 - 2PI 之间
   */
  tangentAngle: function tangentAngle(x, y, rx, ry, t) {
    var angle = 2 * Math.PI * t; // 按照角度进行计算，而不按照周长计算
    // 直接使用 x,y 的导数计算， x' = -rx * sin(t); y' = ry * cos(t);

    var tangentAngle = Math.atan2(ry * Math.cos(angle), -rx * Math.sin(angle)); // 也可以使用指定点的切线方程计算，成本有些高
    // const point = this.pointAt(0, 0, rx, ry, t); // 椭圆的切线同椭圆的中心不相关
    // let tangentAngle = -1 * Math.atan((ry * ry * point.x) / (rx * rx * point.y));
    // if (angle >= 0 && angle <= Math.PI) {
    //   tangentAngle += Math.PI;
    // }

    return util_1.piMod(tangentAngle);
  }
};

/***/ }),

/***/ "QAqn":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("+3V6");

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var is_type_1 = __webpack_require__("z55C");

exports["default"] = function (value) {
  return Array.isArray ? Array.isArray(value) : is_type_1["default"](value, 'Array');
};

/***/ }),

/***/ "QHSJ":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("asZ9");

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _curry = __webpack_require__("NU6T");

var _curry2 = _interopRequireDefault(_curry);

var _getValidLangKey = __webpack_require__("l5BI");

var _getValidLangKey2 = _interopRequireDefault(_getValidLangKey);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * Get current language key from url.
 * @func
 * @param {[String]} langs allowed lang keys ['en', 'fr', 'pt']
 * @param {String} defaultLangKey default browser language key
 * @param {String} url browser url
 * @returns {String} current langKey
 */


var getCurrentLangKey = (0, _curry2["default"])(function (langs, defaultLangKey, url) {
  var langKey = url.split('/')[1];
  return (0, _getValidLangKey2["default"])(langs, defaultLangKey, langKey);
});
exports["default"] = getCurrentLangKey;

/***/ }),

/***/ "QKC2":
/***/ (function(module, exports) {

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

module.exports = _inheritsLoose;

/***/ }),

/***/ "QQd8":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var mod = function mod(n, m) {
  return (n % m + m) % m;
};

exports["default"] = mod;

/***/ }),

/***/ "QQye":
/***/ (function(module, exports) {



/***/ }),

/***/ "QVtb":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------

var _require = __webpack_require__("sfhO"),
    Error = _require.Error,
    Ok = _require.Ok;

var deprecated = __webpack_require__("GFZo");
/*~
 * stability: stable
 * authors:
 *   - "@boris-marinov"
 * 
 * type: |
 *   forall a, b:
 *     (a or None, b) => Result b a
 *   & (a or None) => Result None a
 */


var nullableToResult = function nullableToResult(a, givenFallback) {
  var oldBehaviour = arguments.length < 2; // eslint-disable-line prefer-rest-params

  if (oldBehaviour) {
    deprecated('nullableToResult(value) is being deprecated in favour of providing an explicit fallback value.\nnullableToResult(value, fallback) is the new preferred form of this function.\n');
  }

  var fallback = oldBehaviour ? a : givenFallback;
  return a != null ? Ok(a) :
  /* else */
  Error(fallback);
};

module.exports = nullableToResult;

/***/ }),

/***/ "QW2R":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("5hJT");

__webpack_require__("d3/y");

var _interopRequireDefault = __webpack_require__("63Ad");

var _interopRequireWildcard = __webpack_require__("vdEC");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var React = _interopRequireWildcard(__webpack_require__("mXGw"));

var _InfoCircleFilled = _interopRequireDefault(__webpack_require__("B3VA"));

var _AntdIcon = _interopRequireDefault(__webpack_require__("CxZ5")); // GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY


var InfoCircleFilled = function InfoCircleFilled(props, ref) {
  return React.createElement(_AntdIcon["default"], Object.assign({}, props, {
    ref: ref,
    icon: _InfoCircleFilled["default"]
  }));
};

InfoCircleFilled.displayName = 'InfoCircleFilled';

var _default = React.forwardRef(InfoCircleFilled);

exports["default"] = _default;

/***/ }),

/***/ "Qatm":
/***/ (function(module, exports) {

function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
}

module.exports = _iterableToArray;

/***/ }),

/***/ "Qno1":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("Bsg+");
var isArray = __webpack_require__("Xfku");
var SPECIES = __webpack_require__("9dxi")('species');

module.exports = function (original) {
  var C;
  if (isArray(original)) {
    C = original.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return C === undefined ? Array : C;
};


/***/ }),

/***/ "Qqke":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("qA3Z");
var toIObject = __webpack_require__("T/1i");
var arrayIndexOf = __webpack_require__("zeFm")(false);
var IE_PROTO = __webpack_require__("Q5TA")('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "R5TD":
/***/ (function(module, exports) {

var core = module.exports = { version: '2.6.11' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),

/***/ "ROCd":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("P56o");
var navigator = global.navigator;

module.exports = navigator && navigator.userAgent || '';


/***/ }),

/***/ "RQUx":
/***/ (function(module, exports) {

module.exports = function _isTransformer(obj) {
  return typeof obj['@@transducer/step'] === 'function';
};

/***/ }),

/***/ "RaTo":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // This icon file is generated automatically.

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var SearchOutlined = {
  "icon": {
    "tag": "svg",
    "attrs": {
      "viewBox": "64 64 896 896",
      "focusable": "false"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "d": "M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0011.6 0l43.6-43.5a8.2 8.2 0 000-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z"
      }
    }]
  },
  "name": "search",
  "theme": "outlined"
};
exports["default"] = SearchOutlined;

/***/ }),

/***/ "RiSW":
/***/ (function(module, exports, __webpack_require__) {

var objectWithoutPropertiesLoose = __webpack_require__("PE9J");

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = objectWithoutPropertiesLoose(source, excluded);
  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

module.exports = _objectWithoutProperties;

/***/ }),

/***/ "RoC8":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("d3/y");

module.exports = function (module) {
  if (!module.webpackPolyfill) {
    module.deprecate = function () {};

    module.paths = []; // module.parent = undefined by default

    if (!module.children) module.children = [];
    Object.defineProperty(module, "loaded", {
      enumerable: true,
      get: function get() {
        return module.l;
      }
    });
    Object.defineProperty(module, "id", {
      enumerable: true,
      get: function get() {
        return module.i;
      }
    });
    module.webpackPolyfill = 1;
  }

  return module;
};

/***/ }),

/***/ "S411":
/***/ (function(module, exports) {

function _iterableToArrayLimit(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

module.exports = _iterableToArrayLimit;

/***/ }),

/***/ "SAwA":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "SBFf":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var util_1 = __webpack_require__("H4Zb");

var EPSILON = 0.0001;
/**
 * 使用牛顿切割法求最近的点
 * @param {number[]} xArr      点的 x 数组
 * @param {number[]} yArr      点的 y 数组
 * @param {number}   x         指定的点 x
 * @param {number}   y         指定的点 y
 * @param {Function} tCallback 差值函数
 */

function nearestPoint(xArr, yArr, x, y, tCallback) {
  var t;
  var interval = 0.005;
  var d = Infinity;
  var v0 = [x, y];

  for (var i = 0; i <= 20; i++) {
    var _t = i * 0.05;

    var v1 = [tCallback.apply(null, xArr.concat([_t])), tCallback.apply(null, yArr.concat([_t]))];
    var d1 = util_1.distance(v0[0], v0[1], v1[0], v1[1]);

    if (d1 < d) {
      t = _t;
      d = d1;
    }
  } // 提前终止


  if (t === 0) {
    return {
      x: xArr[0],
      y: yArr[0]
    };
  }

  if (t === 1) {
    var count = xArr.length;
    return {
      x: xArr[count - 1],
      y: yArr[count - 1]
    };
  }

  d = Infinity;

  for (var i = 0; i < 32; i++) {
    if (interval < EPSILON) {
      break;
    }

    var prev = t - interval;
    var next = t + interval;
    var v1 = [tCallback.apply(null, xArr.concat([prev])), tCallback.apply(null, yArr.concat([prev]))];
    var d1 = util_1.distance(v0[0], v0[1], v1[0], v1[1]);

    if (prev >= 0 && d1 < d) {
      t = prev;
      d = d1;
    } else {
      var v2 = [tCallback.apply(null, xArr.concat([next])), tCallback.apply(null, yArr.concat([next]))];
      var d2 = util_1.distance(v0[0], v0[1], v2[0], v2[1]);

      if (next <= 1 && d2 < d) {
        t = next;
        d = d2;
      } else {
        interval *= 0.5;
      }
    }
  }

  return {
    x: tCallback.apply(null, xArr.concat([t])),
    y: tCallback.apply(null, yArr.concat([t]))
  };
}

exports.nearestPoint = nearestPoint; // 近似求解 https://community.khronos.org/t/3d-cubic-bezier-segment-length/62363/2

function snapLength(xArr, yArr) {
  var totalLength = 0;
  var count = xArr.length;

  for (var i = 0; i < count; i++) {
    var x = xArr[i];
    var y = yArr[i];
    var nextX = xArr[(i + 1) % count];
    var nextY = yArr[(i + 1) % count];
    totalLength += util_1.distance(x, y, nextX, nextY);
  }

  return totalLength / 2;
}

exports.snapLength = snapLength;

/***/ }),

/***/ "SDHo":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("o7PZ");

__webpack_require__("9p7t");

__webpack_require__("7lGJ");

__webpack_require__("BDzi");

__webpack_require__("FEHE");

__webpack_require__("Z8gF");

var _interopRequireDefault = __webpack_require__("63Ad");

exports.__esModule = true;
exports.withPrefix = withPrefix;
exports.withAssetPrefix = withAssetPrefix;
exports.navigateTo = exports.replace = exports.push = exports.navigate = exports["default"] = void 0;

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(__webpack_require__("PE9J"));

var _extends2 = _interopRequireDefault(__webpack_require__("8VmE"));

var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__("T1e2"));

var _inheritsLoose2 = _interopRequireDefault(__webpack_require__("QKC2"));

var _propTypes = _interopRequireDefault(__webpack_require__("W0B4"));

var _react = _interopRequireDefault(__webpack_require__("mXGw"));

var _router = __webpack_require__("JF+v");

var _utils = __webpack_require__("ZkUl");

var _parsePath = __webpack_require__("vhWV");

exports.parsePath = _parsePath.parsePath;

var isAbsolutePath = function isAbsolutePath(path) {
  return path === null || path === void 0 ? void 0 : path.startsWith("/");
};

function withPrefix(path, prefix) {
  var _ref, _prefix;

  if (prefix === void 0) {
    prefix = "";
  }

  if (!isLocalLink(path)) {
    return path;
  }

  if (path.startsWith("./") || path.startsWith("../")) {
    return path;
  }

  var base = (_ref = (_prefix = prefix) !== null && _prefix !== void 0 ? _prefix : "") !== null && _ref !== void 0 ? _ref : "/";
  return "" + ((base === null || base === void 0 ? void 0 : base.endsWith("/")) ? base.slice(0, -1) : base) + (path.startsWith("/") ? path : "/" + path);
}

var isLocalLink = function isLocalLink(path) {
  return path && !path.startsWith("http://") && !path.startsWith("https://") && !path.startsWith("//");
};

function withAssetPrefix(path) {
  return withPrefix(path, "");
}

function absolutify(path, current) {
  // If it's already absolute, return as-is
  if (isAbsolutePath(path)) {
    return path;
  }

  return (0, _utils.resolve)(path, current);
}

var rewriteLinkPath = function rewriteLinkPath(path, relativeTo) {
  if (!isLocalLink(path)) {
    return path;
  }

  return isAbsolutePath(path) ? withPrefix(path) : absolutify(path, relativeTo);
};

var NavLinkPropTypes = {
  activeClassName: _propTypes["default"].string,
  activeStyle: _propTypes["default"].object,
  partiallyActive: _propTypes["default"].bool
}; // Set up IntersectionObserver

var createIntersectionObserver = function createIntersectionObserver(el, cb) {
  var io = new window.IntersectionObserver(function (entries) {
    entries.forEach(function (entry) {
      if (el === entry.target) {
        // Check if element is within viewport, remove listener, destroy observer, and run link callback.
        // MSEdge doesn't currently support isIntersecting, so also test for  an intersectionRatio > 0
        if (entry.isIntersecting || entry.intersectionRatio > 0) {
          io.unobserve(el);
          io.disconnect();
          cb();
        }
      }
    });
  }); // Add element to the observer

  io.observe(el);
  return {
    instance: io,
    el: el
  };
};

var GatsbyLink = /*#__PURE__*/function (_React$Component) {
  (0, _inheritsLoose2["default"])(GatsbyLink, _React$Component);

  function GatsbyLink(props) {
    var _this;

    _this = _React$Component.call(this, props) || this; // Default to no support for IntersectionObserver

    _this.defaultGetProps = function (_ref2) {
      var isPartiallyCurrent = _ref2.isPartiallyCurrent,
          isCurrent = _ref2.isCurrent;

      if (_this.props.partiallyActive ? isPartiallyCurrent : isCurrent) {
        return {
          className: [_this.props.className, _this.props.activeClassName].filter(Boolean).join(" "),
          style: (0, _extends2["default"])({}, _this.props.style, _this.props.activeStyle)
        };
      }

      return null;
    };

    var IOSupported = false;

    if (typeof window !== "undefined" && window.IntersectionObserver) {
      IOSupported = true;
    }

    _this.state = {
      IOSupported: IOSupported
    };
    _this.handleRef = _this.handleRef.bind((0, _assertThisInitialized2["default"])(_this));
    return _this;
  }

  var _proto = GatsbyLink.prototype;

  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
    // Preserve non IO functionality if no support
    if (this.props.to !== prevProps.to && !this.state.IOSupported) {
      ___loader.enqueue((0, _parsePath.parsePath)(rewriteLinkPath(this.props.to, window.location.pathname)).pathname);
    }
  };

  _proto.componentDidMount = function componentDidMount() {
    // Preserve non IO functionality if no support
    if (!this.state.IOSupported) {
      ___loader.enqueue((0, _parsePath.parsePath)(rewriteLinkPath(this.props.to, window.location.pathname)).pathname);
    }
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    if (!this.io) {
      return;
    }

    var _this$io = this.io,
        instance = _this$io.instance,
        el = _this$io.el;
    instance.unobserve(el);
    instance.disconnect();
  };

  _proto.handleRef = function handleRef(ref) {
    var _this2 = this;

    if (this.props.innerRef && this.props.innerRef.hasOwnProperty("current")) {
      this.props.innerRef.current = ref;
    } else if (this.props.innerRef) {
      this.props.innerRef(ref);
    }

    if (this.state.IOSupported && ref) {
      // If IO supported and element reference found, setup Observer functionality
      this.io = createIntersectionObserver(ref, function () {
        ___loader.enqueue((0, _parsePath.parsePath)(rewriteLinkPath(_this2.props.to, window.location.pathname)).pathname);
      });
    }
  };

  _proto.render = function render() {
    var _this3 = this;

    var _this$props = this.props,
        to = _this$props.to,
        _this$props$getProps = _this$props.getProps,
        getProps = _this$props$getProps === void 0 ? this.defaultGetProps : _this$props$getProps,
        _onClick = _this$props.onClick,
        _onMouseEnter = _this$props.onMouseEnter,
        $activeClassName = _this$props.activeClassName,
        $activeStyle = _this$props.activeStyle,
        $innerRef = _this$props.innerRef,
        partiallyActive = _this$props.partiallyActive,
        state = _this$props.state,
        replace = _this$props.replace,
        rest = (0, _objectWithoutPropertiesLoose2["default"])(_this$props, ["to", "getProps", "onClick", "onMouseEnter", "activeClassName", "activeStyle", "innerRef", "partiallyActive", "state", "replace"]);

    if (false) {}

    return /*#__PURE__*/_react["default"].createElement(_router.Location, null, function (_ref3) {
      var location = _ref3.location;
      var prefixedTo = rewriteLinkPath(to, location.pathname);
      return isLocalLink(prefixedTo) ? /*#__PURE__*/_react["default"].createElement(_router.Link, (0, _extends2["default"])({
        to: prefixedTo,
        state: state,
        getProps: getProps,
        innerRef: _this3.handleRef,
        onMouseEnter: function onMouseEnter(e) {
          if (_onMouseEnter) {
            _onMouseEnter(e);
          }

          ___loader.hovering((0, _parsePath.parsePath)(prefixedTo).pathname);
        },
        onClick: function onClick(e) {
          if (_onClick) {
            _onClick(e);
          }

          if (e.button === 0 && // ignore right clicks
          !_this3.props.target && // let browser handle "target=_blank"
          !e.defaultPrevented && // onClick prevented default
          !e.metaKey && // ignore clicks with modifier keys...
          !e.altKey && !e.ctrlKey && !e.shiftKey) {
            e.preventDefault();
            var shouldReplace = replace;
            var isCurrent = encodeURI(prefixedTo) === window.location.pathname;

            if (typeof replace !== "boolean" && isCurrent) {
              shouldReplace = true;
            } // Make sure the necessary scripts and data are
            // loaded before continuing.


            window.___navigate(prefixedTo, {
              state: state,
              replace: shouldReplace
            });
          }

          return true;
        }
      }, rest)) : /*#__PURE__*/_react["default"].createElement("a", (0, _extends2["default"])({
        href: prefixedTo
      }, rest));
    });
  };

  return GatsbyLink;
}(_react["default"].Component);

GatsbyLink.propTypes = (0, _extends2["default"])({}, NavLinkPropTypes, {
  onClick: _propTypes["default"].func,
  to: _propTypes["default"].string.isRequired,
  replace: _propTypes["default"].bool,
  state: _propTypes["default"].object
});

var showDeprecationWarning = function showDeprecationWarning(functionName, altFunctionName, version) {
  return console.warn("The \"" + functionName + "\" method is now deprecated and will be removed in Gatsby v" + version + ". Please use \"" + altFunctionName + "\" instead.");
};

var _default = /*#__PURE__*/_react["default"].forwardRef(function (props, ref) {
  return /*#__PURE__*/_react["default"].createElement(GatsbyLink, (0, _extends2["default"])({
    innerRef: ref
  }, props));
});

exports["default"] = _default;

var navigate = function navigate(to, options) {
  window.___navigate(rewriteLinkPath(to, window.location.pathname), options);
};

exports.navigate = navigate;

var push = function push(to) {
  showDeprecationWarning("push", "navigate", 3);

  window.___push(rewriteLinkPath(to, window.location.pathname));
};

exports.push = push;

var replace = function replace(to) {
  showDeprecationWarning("replace", "navigate", 3);

  window.___replace(rewriteLinkPath(to, window.location.pathname));
}; // TODO: Remove navigateTo for Gatsby v3


exports.replace = replace;

var navigateTo = function navigateTo(to) {
  showDeprecationWarning("navigateTo", "navigate", 3);
  return push(to);
};

exports.navigateTo = navigateTo;

/***/ }),

/***/ "SDJZ":
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck;

/***/ }),

/***/ "SS24":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
}); // isFinite,

var isNil = function isNil(value) {
  /**
   * isNil(null) => true
   * isNil() => true
   */
  return value === null || value === undefined;
};

exports["default"] = isNil;

/***/ }),

/***/ "SaPD":
/***/ (function(module, exports) {

module.exports = function _isPlaceholder(a) {
  return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;
};

/***/ }),

/***/ "ScpY":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.10 String.prototype.link(url)
__webpack_require__("LEAW")('link', function (createHTML) {
  return function link(url) {
    return createHTML(this, 'a', 'href', url);
  };
});


/***/ }),

/***/ "SfRV":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("GkPX");

__webpack_require__("6/FK");

__webpack_require__("2Tod");

__webpack_require__("7lGJ");

__webpack_require__("9p7t");

__webpack_require__("ABKx");

__webpack_require__("W1QL");

__webpack_require__("K/PF");

__webpack_require__("t91x");

__webpack_require__("75LO");

__webpack_require__("d3/y");

var _interopRequireDefault = __webpack_require__("63Ad");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__("RiSW"));

var _defineProperty2 = _interopRequireDefault(__webpack_require__("OvAC"));

var _utils = __webpack_require__("OgXt");

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        (0, _defineProperty2["default"])(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

var twoToneColorPalette = {
  primaryColor: '#333',
  secondaryColor: '#E6E6E6',
  calculated: false
};

function setTwoToneColors(_ref) {
  var primaryColor = _ref.primaryColor,
      secondaryColor = _ref.secondaryColor;
  twoToneColorPalette.primaryColor = primaryColor;
  twoToneColorPalette.secondaryColor = secondaryColor || (0, _utils.getSecondaryColor)(primaryColor);
  twoToneColorPalette.calculated = !!secondaryColor;
}

function getTwoToneColors() {
  return _objectSpread({}, twoToneColorPalette);
}

var IconBase = function IconBase(props) {
  var icon = props.icon,
      className = props.className,
      onClick = props.onClick,
      style = props.style,
      primaryColor = props.primaryColor,
      secondaryColor = props.secondaryColor,
      restProps = (0, _objectWithoutProperties2["default"])(props, ["icon", "className", "onClick", "style", "primaryColor", "secondaryColor"]);
  var colors = twoToneColorPalette;

  if (primaryColor) {
    colors = {
      primaryColor: primaryColor,
      secondaryColor: secondaryColor || (0, _utils.getSecondaryColor)(primaryColor)
    };
  }

  (0, _utils.useInsertStyles)();
  (0, _utils.warning)((0, _utils.isIconDefinition)(icon), "icon should be icon definiton, but got ".concat(icon));

  if (!(0, _utils.isIconDefinition)(icon)) {
    return null;
  }

  var target = icon;

  if (target && typeof target.icon === 'function') {
    target = _objectSpread(_objectSpread({}, target), {}, {
      icon: target.icon(colors.primaryColor, colors.secondaryColor)
    });
  }

  return (0, _utils.generate)(target.icon, "svg-".concat(target.name), _objectSpread({
    className: className,
    onClick: onClick,
    style: style,
    'data-icon': target.name,
    width: '1em',
    height: '1em',
    fill: 'currentColor',
    'aria-hidden': 'true'
  }, restProps));
};

IconBase.displayName = 'IconReact';
IconBase.getTwoToneColors = getTwoToneColors;
IconBase.setTwoToneColors = setTwoToneColors;
var _default = IconBase;
exports["default"] = _default;

/***/ }),

/***/ "Sp5b":
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__("mvii");
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),

/***/ "SsG5":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("Bsg+");
module.exports = function (it, TYPE) {
  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');
  return it;
};


/***/ }),

/***/ "St5J":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var util_1 = __webpack_require__("H4Zb");

var line_1 = __webpack_require__("cU4Z");

var bezier_1 = __webpack_require__("SBFf");

function cubicAt(p0, p1, p2, p3, t) {
  var onet = 1 - t; // t * t * t 的性能大概是 Math.pow(t, 3) 的三倍

  return onet * onet * onet * p0 + 3 * p1 * t * onet * onet + 3 * p2 * t * t * onet + p3 * t * t * t;
}

function derivativeAt(p0, p1, p2, p3, t) {
  var onet = 1 - t;
  return 3 * (onet * onet * (p1 - p0) + 2 * onet * t * (p2 - p1) + t * t * (p3 - p2));
}

function extrema(p0, p1, p2, p3) {
  var a = -3 * p0 + 9 * p1 - 9 * p2 + 3 * p3;
  var b = 6 * p0 - 12 * p1 + 6 * p2;
  var c = 3 * p1 - 3 * p0;
  var extremas = [];
  var t1;
  var t2;
  var discSqrt;

  if (util_1.isNumberEqual(a, 0)) {
    if (!util_1.isNumberEqual(b, 0)) {
      t1 = -c / b;

      if (t1 >= 0 && t1 <= 1) {
        extremas.push(t1);
      }
    }
  } else {
    var disc = b * b - 4 * a * c;

    if (util_1.isNumberEqual(disc, 0)) {
      extremas.push(-b / (2 * a));
    } else if (disc > 0) {
      discSqrt = Math.sqrt(disc);
      t1 = (-b + discSqrt) / (2 * a);
      t2 = (-b - discSqrt) / (2 * a);

      if (t1 >= 0 && t1 <= 1) {
        extremas.push(t1);
      }

      if (t2 >= 0 && t2 <= 1) {
        extremas.push(t2);
      }
    }
  }

  return extremas;
} // 分割贝塞尔曲线


function divideCubic(x1, y1, x2, y2, x3, y3, x4, y4, t) {
  // 划分点
  var xt = cubicAt(x1, x2, x3, x4, t);
  var yt = cubicAt(y1, y2, y3, y4, t); // 计算两点之间的差值点

  var c1 = line_1["default"].pointAt(x1, y1, x2, y2, t);
  var c2 = line_1["default"].pointAt(x2, y2, x3, y3, t);
  var c3 = line_1["default"].pointAt(x3, y3, x4, y4, t);
  var c12 = line_1["default"].pointAt(c1.x, c1.y, c2.x, c2.y, t);
  var c23 = line_1["default"].pointAt(c2.x, c2.y, c3.x, c3.y, t);
  return [[x1, y1, c1.x, c1.y, c12.x, c12.y, xt, yt], [xt, yt, c23.x, c23.y, c3.x, c3.y, x4, y4]];
} // 使用迭代法取贝塞尔曲线的长度，二阶和三阶分开写，更清晰和便于调试


function cubicLength(x1, y1, x2, y2, x3, y3, x4, y4, iterationCount) {
  if (iterationCount === 0) {
    return bezier_1.snapLength([x1, x2, x3, x4], [y1, y2, y3, y4]);
  }

  var cubics = divideCubic(x1, y1, x2, y2, x3, y3, x4, y4, 0.5);
  var left = cubics[0];
  var right = cubics[1];
  left.push(iterationCount - 1);
  right.push(iterationCount - 1);
  return cubicLength.apply(null, left) + cubicLength.apply(null, right);
}

exports["default"] = {
  extrema: extrema,
  box: function box(x1, y1, x2, y2, x3, y3, x4, y4) {
    var xArr = [x1, x4];
    var yArr = [y1, y4];
    var xExtrema = extrema(x1, x2, x3, x4);
    var yExtrema = extrema(y1, y2, y3, y4);

    for (var i = 0; i < xExtrema.length; i++) {
      xArr.push(cubicAt(x1, x2, x3, x4, xExtrema[i]));
    }

    for (var i = 0; i < yExtrema.length; i++) {
      yArr.push(cubicAt(y1, y2, y3, y4, yExtrema[i]));
    }

    return util_1.getBBoxByArray(xArr, yArr);
  },
  length: function length(x1, y1, x2, y2, x3, y3, x4, y4) {
    // 迭代三次，划分成 8 段求长度
    return cubicLength(x1, y1, x2, y2, x3, y3, x4, y4, 3);
  },
  nearestPoint: function nearestPoint(x1, y1, x2, y2, x3, y3, x4, y4, x0, y0) {
    return bezier_1.nearestPoint([x1, x2, x3, x4], [y1, y2, y3, y4], x0, y0, cubicAt);
  },
  pointDistance: function pointDistance(x1, y1, x2, y2, x3, y3, x4, y4, x0, y0) {
    var point = this.nearestPoint(x1, y1, x2, y2, x3, y3, x4, y4, x0, y0);
    return util_1.distance(point.x, point.y, x0, y0);
  },
  interpolationAt: cubicAt,
  pointAt: function pointAt(x1, y1, x2, y2, x3, y3, x4, y4, t) {
    return {
      x: cubicAt(x1, x2, x3, x4, t),
      y: cubicAt(y1, y2, y3, y4, t)
    };
  },
  divide: function divide(x1, y1, x2, y2, x3, y3, x4, y4, t) {
    return divideCubic(x1, y1, x2, y2, x3, y3, x4, y4, t);
  },
  tangentAngle: function tangentAngle(x1, y1, x2, y2, x3, y3, x4, y4, t) {
    var dx = derivativeAt(x1, x2, x3, x4, t);
    var dy = derivativeAt(y1, y2, y3, y4, t);
    return util_1.piMod(Math.atan2(dy, dx));
  }
};

/***/ }),

/***/ "SvMv":
/***/ (function(module, exports) {

module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
  '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';


/***/ }),

/***/ "SwVN":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "T/1i":
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__("6wgB");
var defined = __webpack_require__("Xj5l");
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),

/***/ "T/r7":
/***/ (function(module, exports, __webpack_require__) {

var _curry1 = __webpack_require__("AN6r");

var _isArguments = __webpack_require__("d075");

var _isArray = __webpack_require__("GwS+");

var _isObject = __webpack_require__("Ln+j");

var _isString = __webpack_require__("74ju");
/**
 * Returns the empty value of its argument's type. Ramda defines the empty
 * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other
 * types are supported if they define `<Type>.empty` and/or
 * `<Type>.prototype.empty`.
 *
 * Dispatches to the `empty` method of the first argument, if present.
 *
 * @func
 * @memberOf R
 * @since v0.3.0
 * @category Function
 * @sig a -> a
 * @param {*} x
 * @return {*}
 * @example
 *
 *      R.empty(Just(42));      //=> Nothing()
 *      R.empty([1, 2, 3]);     //=> []
 *      R.empty('unicorns');    //=> ''
 *      R.empty({x: 1, y: 2});  //=> {}
 */


module.exports = _curry1(function empty(x) {
  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {
    return arguments;
  }() : // else
  void 0;
});

/***/ }),

/***/ "T1e2":
/***/ (function(module, exports) {

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

module.exports = _assertThisInitialized;

/***/ }),

/***/ "TCCx":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
__webpack_require__("Z8gF");__webpack_require__("J8hF");__webpack_require__("nsbO");__webpack_require__("oMRA");__webpack_require__("6d4m");var _interopRequireDefault=__webpack_require__("63Ad");exports.__esModule=true;exports.default=_default;exports.routeThroughBrowserOrApp=exports.hashShouldBeFollowed=exports.pathIsNotHandledByApp=exports.urlsAreOnSameOrigin=exports.authorIsForcingNavigation=exports.anchorsTargetIsEquivalentToSelf=exports.findClosestAnchor=exports.navigationWasHandledElsewhere=exports.slashedPathname=exports.userIsForcingNavigation=void 0;var _escapeStringRegexp=_interopRequireDefault(__webpack_require__("Jjw7"));var _gatsby=__webpack_require__("Wbzz");var userIsForcingNavigation=function userIsForcingNavigation(event){return event.button!==0||event.altKey||event.ctrlKey||event.metaKey||event.shiftKey;};// IE does not include leading slash in anchor.pathname
exports.userIsForcingNavigation=userIsForcingNavigation;var slashedPathname=function slashedPathname(pathname){return pathname[0]==="/"?pathname:"/"+pathname;};exports.slashedPathname=slashedPathname;var navigationWasHandledElsewhere=function navigationWasHandledElsewhere(event){return event.defaultPrevented;};exports.navigationWasHandledElsewhere=navigationWasHandledElsewhere;var findClosestAnchor=function findClosestAnchor(node){for(;node.parentNode;node=node.parentNode){if(node.nodeName.toLowerCase()==="a"){return node;}}return null;};exports.findClosestAnchor=findClosestAnchor;var anchorsTargetIsEquivalentToSelf=function anchorsTargetIsEquivalentToSelf(anchor){return(/* If target attribute is not present it's treated as _self */anchor.hasAttribute("target")===false||/**
     * The browser defaults to _self, but, not all browsers set
     * a.target to the string value `_self` by default
     */ /**
     * Assumption: some browsers use null/undefined for default
     * attribute values
     */anchor.target==null||/**
     * Some browsers use the empty string to mean _self, check
     * for actual `_self`
     */["_self",""].includes(anchor.target)||/**
     * As per https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-target
     */anchor.target==="_parent"&&(!anchor.ownerDocument.defaultView.parent||// Assumption: This can be falsey
anchor.ownerDocument.defaultView.parent===anchor.ownerDocument.defaultView)||anchor.target==="_top"&&(!anchor.ownerDocument.defaultView.top||// Assumption: This can be falsey
anchor.ownerDocument.defaultView.top===anchor.ownerDocument.defaultView));};exports.anchorsTargetIsEquivalentToSelf=anchorsTargetIsEquivalentToSelf;var authorIsForcingNavigation=function authorIsForcingNavigation(anchor){return(/**
     * HTML5 attribute that informs the browser to handle the
     * href as a downloadable file; let the browser handle it
     */anchor.hasAttribute("download")===true||/**
     * Let the browser handle anything that doesn't look like a
     * target="_self" anchor
     */anchorsTargetIsEquivalentToSelf(anchor)===false);};// https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy
exports.authorIsForcingNavigation=authorIsForcingNavigation;var urlsAreOnSameOrigin=function urlsAreOnSameOrigin(origin,destination){return origin.protocol===destination.protocol&&/* a.host includes both hostname and port in the expected format host:port */origin.host===destination.host;};exports.urlsAreOnSameOrigin=urlsAreOnSameOrigin;var pathIsNotHandledByApp=function pathIsNotHandledByApp(destination,pathStartRegEx){var pathFileExtensionRegEx=/^.*\.((?!htm)[a-z0-9]{1,5})$/i;return(/**
     * For when pathPrefix is used in an app and there happens to be a link
     * pointing to the same domain but outside of the app's pathPrefix. For
     * example, a Gatsby app lives at https://example.com/myapp/, with the
     * pathPrefix set to `/myapp`. When adding an absolute link to the same
     * domain but outside of the /myapp path, for example, `<a
     * href="https://example.com/not-my-app">` the plugin won't catch it and
     * will navigate to an external link instead of doing a pushState resulting
     * in `https://example.com/myapp/https://example.com/not-my-app`
     */pathStartRegEx.test(slashedPathname(destination.pathname))===false||/**
     * Don't catch links pointed at what look like file extensions (other than
     * .htm/html extensions).
     */destination.pathname.search(pathFileExtensionRegEx)!==-1);};exports.pathIsNotHandledByApp=pathIsNotHandledByApp;var hashShouldBeFollowed=function hashShouldBeFollowed(origin,destination){return destination.hash!==""&&(/**
   * Dynamically created anchor links (href="#my-anchor") do not always
   * have pathname on IE
   */destination.pathname===""||/* Don't catch links pointed to the same page but with a hash. */destination.pathname===origin.pathname);};exports.hashShouldBeFollowed=hashShouldBeFollowed;var routeThroughBrowserOrApp=function routeThroughBrowserOrApp(hrefHandler,pluginOptions){return function(event){if(window.___failedResources)return true;if(userIsForcingNavigation(event))return true;if(navigationWasHandledElsewhere(event))return true;var clickedAnchor=findClosestAnchor(event.target);if(clickedAnchor==null)return true;if(authorIsForcingNavigation(clickedAnchor))return true;// IE clears the host value if the anchor href changed after creation, e.g.
// in React. Creating a new anchor element to ensure host value is present
var destination=document.createElement("a");// https://html.spec.whatwg.org/multipage/links.html#concept-hyperlink-url-set
// If clickedAnchor has no href attribute like `<a>example</a>`, the href getter returns empty string.
if(clickedAnchor.href!==""){destination.href=clickedAnchor.href;}if(clickedAnchor.href instanceof SVGAnimatedString){destination.href=clickedAnchor.href.animVal;}// In IE, the default port is included in the anchor host but excluded from
// the location host.  This affects the ability to directly compare
// location host to anchor host.  For example: http://example.com would
// have a location.host of 'example.com' and an destination.host of
// 'example.com:80' Creating anchor from the location.href to normalize the
// host value.
var origin=document.createElement("a");origin.href=window.location.href;if(urlsAreOnSameOrigin(origin,destination)===false)return true;// Regex to test pathname against pathPrefix
var pathStartRegEx=new RegExp("^"+(0,_escapeStringRegexp.default)((0,_gatsby.withPrefix)("/")));if(pathIsNotHandledByApp(destination,pathStartRegEx))return true;if(hashShouldBeFollowed(origin,destination))return true;if(pluginOptions.excludePattern){var excludeRegex=new RegExp(pluginOptions.excludePattern);if(excludeRegex.test(destination.pathname)){return true;}}event.preventDefault();// See issue #8907: destination.pathname already includes pathPrefix added
// by gatsby-transformer-remark but gatsby-link.navigate needs href without
var destinationPathname=slashedPathname(destination.pathname).replace(pathStartRegEx,"/");hrefHandler(""+destinationPathname+destination.search+destination.hash);return false;};};exports.routeThroughBrowserOrApp=routeThroughBrowserOrApp;function _default(root,pluginOptions,cb){var clickHandler=routeThroughBrowserOrApp(cb,pluginOptions);root.addEventListener("click",clickHandler);return function(){return root.removeEventListener("click",clickHandler);};}

/***/ }),

/***/ "TEyA":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tinycolor2_1 = __importDefault(__webpack_require__("5xfP"));

var hueStep = 2; // 色相阶梯

var saturationStep = 16; // 饱和度阶梯，浅色部分

var saturationStep2 = 5; // 饱和度阶梯，深色部分

var brightnessStep1 = 5; // 亮度阶梯，浅色部分

var brightnessStep2 = 15; // 亮度阶梯，深色部分

var lightColorCount = 5; // 浅色数量，主色上

var darkColorCount = 4; // 深色数量，主色下

function getHue(hsv, i, light) {
  var hue; // 根据色相不同，色相转向不同

  if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) {
    hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;
  } else {
    hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;
  }

  if (hue < 0) {
    hue += 360;
  } else if (hue >= 360) {
    hue -= 360;
  }

  return hue;
}

function getSaturation(hsv, i, light) {
  // grey color don't change saturation
  if (hsv.h === 0 && hsv.s === 0) {
    return hsv.s;
  }

  var saturation;

  if (light) {
    saturation = Math.round(hsv.s * 100) - saturationStep * i;
  } else if (i === darkColorCount) {
    saturation = Math.round(hsv.s * 100) + saturationStep;
  } else {
    saturation = Math.round(hsv.s * 100) + saturationStep2 * i;
  } // 边界值修正


  if (saturation > 100) {
    saturation = 100;
  } // 第一格的 s 限制在 6-10 之间


  if (light && i === lightColorCount && saturation > 10) {
    saturation = 10;
  }

  if (saturation < 6) {
    saturation = 6;
  }

  return saturation;
}

function getValue(hsv, i, light) {
  if (light) {
    return Math.round(hsv.v * 100) + brightnessStep1 * i;
  }

  return Math.round(hsv.v * 100) - brightnessStep2 * i;
}

function generate(color) {
  var patterns = [];
  var pColor = tinycolor2_1["default"](color);

  for (var i = lightColorCount; i > 0; i -= 1) {
    var hsv = pColor.toHsv();
    var colorString = tinycolor2_1["default"]({
      h: getHue(hsv, i, true),
      s: getSaturation(hsv, i, true),
      v: getValue(hsv, i, true)
    }).toHexString();
    patterns.push(colorString);
  }

  patterns.push(pColor.toHexString());

  for (var i = 1; i <= darkColorCount; i += 1) {
    var hsv = pColor.toHsv();
    var colorString = tinycolor2_1["default"]({
      h: getHue(hsv, i),
      s: getSaturation(hsv, i),
      v: getValue(hsv, i)
    }).toHexString();
    patterns.push(colorString);
  }

  return patterns;
}

exports["default"] = generate;

/***/ }),

/***/ "TGEZ":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {__webpack_require__("7t+O");

// Generated by CoffeeScript 1.12.2
(function () {
  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;

  if (typeof performance !== "undefined" && performance !== null && performance.now) {
    module.exports = function () {
      return performance.now();
    };
  } else if (typeof process !== "undefined" && process !== null && process.hrtime) {
    module.exports = function () {
      return (getNanoSeconds() - nodeLoadTime) / 1e6;
    };

    hrtime = process.hrtime;

    getNanoSeconds = function getNanoSeconds() {
      var hr;
      hr = hrtime();
      return hr[0] * 1e9 + hr[1];
    };

    moduleLoadTime = getNanoSeconds();
    upTime = process.uptime() * 1e9;
    nodeLoadTime = moduleLoadTime - upTime;
  } else if (Date.now) {
    module.exports = function () {
      return Date.now() - loadTime;
    };

    loadTime = Date.now();
  } else {
    module.exports = function () {
      return new Date().getTime() - loadTime;
    };

    loadTime = new Date().getTime();
  }
}).call(this);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("5IsQ")))

/***/ }),

/***/ "THQi":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.


__webpack_require__("W1QL");

__webpack_require__("K/PF");

__webpack_require__("75LO");

__webpack_require__("yIlq");

__webpack_require__("4aJ6");

__webpack_require__("M/4x");

__webpack_require__("t91x");

__webpack_require__("+3V6");

var stringifyPrimitive = function stringifyPrimitive(v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function (obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';

  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), function (k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;

      if (isArray(obj[k])) {
        return map(obj[k], function (v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);
  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq + encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map(xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];

  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }

  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }

  return res;
};

/***/ }),

/***/ "TJjZ":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _unsupportedIterableToArray; });
/* harmony import */ var _arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("YZeP");

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return Object(_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Object(_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(o, minLen);
}

/***/ }),

/***/ "TNgo":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("m8zh");

__webpack_require__("oMRA");

__webpack_require__("6d4m");

__webpack_require__("asZ9");

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var util_1 = __webpack_require__("GgH8");

var offscreen_1 = __webpack_require__("vHKq");
/**
 * 获取文本的高度
 * @param text 文本
 * @param fontSize 字体大小
 * @param lineHeight 行高，可以为空
 */


function getTextHeight(text, fontSize, lineHeight) {
  var lineCount = 1;

  if (util_1.isString(text)) {
    lineCount = text.split('\n').length;
  }

  if (lineCount > 1) {
    var spaceingY = getLineSpaceing(fontSize, lineHeight);
    return fontSize * lineCount + spaceingY * (lineCount - 1);
  }

  return fontSize;
}

exports.getTextHeight = getTextHeight;
/**
 * 获取行间距如果文本多行，需要获取文本间距
 * @param fontSize 字体大小
 * @param lineHeight 行高
 */

function getLineSpaceing(fontSize, lineHeight) {
  return lineHeight ? lineHeight - fontSize : fontSize * 0.14;
}

exports.getLineSpaceing = getLineSpaceing;
/**
 * 字体宽度
 * @param text 文本
 * @param font 字体
 */

function getTextWidth(text, font) {
  var context = offscreen_1.getOffScreenContext(); // 获取离屏的 ctx 进行计算

  var width = 0; // null 或者 undefined 时，宽度为 0

  if (util_1.isNil(text) || text === '') {
    return width;
  }

  context.save();
  context.font = font;

  if (util_1.isString(text) && text.includes('\n')) {
    var textArr = text.split('\n');
    util_1.each(textArr, function (subText) {
      var measureWidth = context.measureText(subText).width;

      if (width < measureWidth) {
        width = measureWidth;
      }
    });
  } else {
    width = context.measureText(text).width;
  }

  context.restore();
  return width;
}

exports.getTextWidth = getTextWidth;

function assembleFont(attrs) {
  var fontSize = attrs.fontSize,
      fontFamily = attrs.fontFamily,
      fontWeight = attrs.fontWeight,
      fontStyle = attrs.fontStyle,
      fontVariant = attrs.fontVariant;
  return [fontStyle, fontVariant, fontWeight, fontSize + "px", fontFamily].join(' ').trim();
}

exports.assembleFont = assembleFont;

/***/ }),

/***/ "TOXe":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _interopRequireDefault=__webpack_require__("63Ad");exports.__esModule=true;exports.onRouteUpdate=exports.onRouteUpdateDelayed=exports.onClientEntry=void 0;var _extends2=_interopRequireDefault(__webpack_require__("8VmE"));var _nprogress=_interopRequireDefault(__webpack_require__("ZLCB"));var defaultOptions={color:"#29d"};var onClientEntry=function onClientEntry(a,pluginOptions){if(pluginOptions===void 0){pluginOptions={};}// Merge default options with user defined options in `gatsby-config.js`
var options=(0,_extends2.default)({},defaultOptions,pluginOptions);// Inject styles.
var styles="\n    #nprogress {\n     pointer-events: none;\n    }\n    #nprogress .bar {\n      background: "+options.color+";\n      position: fixed;\n      z-index: 1031;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 2px;\n    }\n    #nprogress .peg {\n      display: block;\n      position: absolute;\n      right: 0px;\n      width: 100px;\n      height: 100%;\n      box-shadow: 0 0 10px "+options.color+", 0 0 5px "+options.color+";\n      opacity: 1.0;\n      -webkit-transform: rotate(3deg) translate(0px, -4px);\n      -ms-transform: rotate(3deg) translate(0px, -4px);\n      transform: rotate(3deg) translate(0px, -4px);\n    }\n    #nprogress .spinner {\n      display: block;\n      position: fixed;\n      z-index: 1031;\n      top: 15px;\n      right: 15px;\n    }\n    #nprogress .spinner-icon {\n      width: 18px;\n      height: 18px;\n      box-sizing: border-box;\n      border: solid 2px transparent;\n      border-top-color: "+options.color+";\n      border-left-color: "+options.color+";\n      border-radius: 50%;\n      -webkit-animation: nprogress-spinner 400ms linear infinite;\n      animation: nprogress-spinner 400ms linear infinite;\n    }\n    .nprogress-custom-parent {\n      overflow: hidden;\n      position: relative;\n    }\n    .nprogress-custom-parent #nprogress .spinner,\n    .nprogress-custom-parent #nprogress .bar {\n      position: absolute;\n    }\n    @-webkit-keyframes nprogress-spinner {\n      0% {\n        -webkit-transform: rotate(0deg);\n      }\n      100% {\n        -webkit-transform: rotate(360deg);\n      }\n    }\n    @keyframes nprogress-spinner {\n      0% {\n        transform: rotate(0deg);\n      }\n      100% {\n        transform: rotate(360deg);\n      }\n    }\n  ";var node=document.createElement("style");node.id="nprogress-styles";node.innerHTML=styles;document.head.appendChild(node);_nprogress.default.configure(options);};exports.onClientEntry=onClientEntry;var onRouteUpdateDelayed=function onRouteUpdateDelayed(){_nprogress.default.start();};exports.onRouteUpdateDelayed=onRouteUpdateDelayed;var onRouteUpdate=function onRouteUpdate(){_nprogress.default.done();};exports.onRouteUpdate=onRouteUpdate;

/***/ }),

/***/ "TRAi":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.SessionStorage = void 0;
var STATE_KEY_PREFIX = "@@scroll|";
var GATSBY_ROUTER_SCROLL_STATE = "___GATSBY_REACT_ROUTER_SCROLL";

var SessionStorage = /*#__PURE__*/function () {
  function SessionStorage() {}

  var _proto = SessionStorage.prototype;

  _proto.read = function read(location, key) {
    var stateKey = this.getStateKey(location, key);

    try {
      var value = window.sessionStorage.getItem(stateKey);
      return value ? JSON.parse(value) : 0;
    } catch (e) {
      if (false) {}

      if (window && window[GATSBY_ROUTER_SCROLL_STATE] && window[GATSBY_ROUTER_SCROLL_STATE][stateKey]) {
        return window[GATSBY_ROUTER_SCROLL_STATE][stateKey];
      }

      return 0;
    }
  };

  _proto.save = function save(location, key, value) {
    var stateKey = this.getStateKey(location, key);
    var storedValue = JSON.stringify(value);

    try {
      window.sessionStorage.setItem(stateKey, storedValue);
    } catch (e) {
      if (window && window[GATSBY_ROUTER_SCROLL_STATE]) {
        window[GATSBY_ROUTER_SCROLL_STATE][stateKey] = JSON.parse(storedValue);
      } else {
        window[GATSBY_ROUTER_SCROLL_STATE] = {};
        window[GATSBY_ROUTER_SCROLL_STATE][stateKey] = JSON.parse(storedValue);
      }

      if (false) {}
    }
  };

  _proto.getStateKey = function getStateKey(location, key) {
    var locationKey = location.key || location.pathname;
    var stateKeyBase = "" + STATE_KEY_PREFIX + locationKey;
    return key === null || typeof key === "undefined" ? stateKeyBase : stateKeyBase + "|" + key;
  };

  return SessionStorage;
}();

exports.SessionStorage = SessionStorage;

/***/ }),

/***/ "TaGV":
/***/ (function(module, exports) {

var core = module.exports = { version: '2.6.11' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),

/***/ "U1KF":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("PAFS");
var IE8_DOM_DEFINE = __webpack_require__("HWsP");
var toPrimitive = __webpack_require__("5MU4");
var dP = Object.defineProperty;

exports.f = __webpack_require__("GGqZ") ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "U6lR":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var text_1 = __webpack_require__("TNgo");

function default_1(shape) {
  var attrs = shape.attr();
  var x = attrs.x,
      y = attrs.y,
      text = attrs.text,
      fontSize = attrs.fontSize,
      lineHeight = attrs.lineHeight;
  var font = attrs.font;

  if (!font) {
    // 如果未组装 font
    font = text_1.assembleFont(attrs);
  }

  var width = text_1.getTextWidth(text, font);
  var bbox;

  if (!width) {
    // 如果width不存在，四点共其实点
    bbox = {
      x: x,
      y: y,
      width: 0,
      height: 0
    };
  } else {
    var textAlign = attrs.textAlign,
        textBaseline = attrs.textBaseline;
    var height = text_1.getTextHeight(text, fontSize, lineHeight); // attrs.height
    // 默认左右对齐：left, 默认上下对齐 bottom

    var point = {
      x: x,
      y: y - height
    };

    if (textAlign) {
      if (textAlign === 'end' || textAlign === 'right') {
        point.x -= width;
      } else if (textAlign === 'center') {
        point.x -= width / 2;
      }
    }

    if (textBaseline) {
      if (textBaseline === 'top') {
        point.y += height;
      } else if (textBaseline === 'middle') {
        point.y += height / 2;
      }
    }

    bbox = {
      x: point.x,
      y: point.y,
      width: width,
      height: height
    };
  }

  return bbox;
}

exports["default"] = default_1;

/***/ }),

/***/ "U8p0":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__("X6VK");
var aFunction = __webpack_require__("b8Rm");
var toObject = __webpack_require__("UnHL");
var fails = __webpack_require__("E7Vc");
var $sort = [].sort;
var test = [1, 2, 3];

$export($export.P + $export.F * (fails(function () {
  // IE8-
  test.sort(undefined);
}) || !fails(function () {
  // V8 bug
  test.sort(null);
  // Old WebKit
}) || !__webpack_require__("/6rt")($sort)), 'Array', {
  // 22.1.3.25 Array.prototype.sort(comparefn)
  sort: function sort(comparefn) {
    return comparefn === undefined
      ? $sort.call(toObject(this))
      : $sort.call(toObject(this), aFunction(comparefn));
  }
});


/***/ }),

/***/ "UKnr":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.decode = exports.parse = __webpack_require__("MNOf");
exports.encode = exports.stringify = __webpack_require__("THQi");

/***/ }),

/***/ "UQd9":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("V7cS");

__webpack_require__("P/oo");

// CodeMirror, copyright (c) by Marijn Haverbeke and others
// Distributed under an MIT license: https://codemirror.net/LICENSE
(function (mod) {
  if (true) // CommonJS
    mod(__webpack_require__("Dln1"));else {}
})(function (CodeMirror) {
  "use strict";

  CodeMirror.registerHelper("fold", "brace", function (cm, start) {
    var line = start.line,
        lineText = cm.getLine(line);
    var tokenType;

    function findOpening(openCh) {
      for (var at = start.ch, pass = 0;;) {
        var found = at <= 0 ? -1 : lineText.lastIndexOf(openCh, at - 1);

        if (found == -1) {
          if (pass == 1) break;
          pass = 1;
          at = lineText.length;
          continue;
        }

        if (pass == 1 && found < start.ch) break;
        tokenType = cm.getTokenTypeAt(CodeMirror.Pos(line, found + 1));
        if (!/^(comment|string)/.test(tokenType)) return found + 1;
        at = found - 1;
      }
    }

    var startToken = "{",
        endToken = "}",
        startCh = findOpening("{");

    if (startCh == null) {
      startToken = "[", endToken = "]";
      startCh = findOpening("[");
    }

    if (startCh == null) return;
    var count = 1,
        lastLine = cm.lastLine(),
        end,
        endCh;

    outer: for (var i = line; i <= lastLine; ++i) {
      var text = cm.getLine(i),
          pos = i == line ? startCh : 0;

      for (;;) {
        var nextOpen = text.indexOf(startToken, pos),
            nextClose = text.indexOf(endToken, pos);
        if (nextOpen < 0) nextOpen = text.length;
        if (nextClose < 0) nextClose = text.length;
        pos = Math.min(nextOpen, nextClose);
        if (pos == text.length) break;

        if (cm.getTokenTypeAt(CodeMirror.Pos(i, pos + 1)) == tokenType) {
          if (pos == nextOpen) ++count;else if (! --count) {
            end = i;
            endCh = pos;
            break outer;
          }
        }

        ++pos;
      }
    }

    if (end == null || line == end) return;
    return {
      from: CodeMirror.Pos(line, startCh),
      to: CodeMirror.Pos(end, endCh)
    };
  });
  CodeMirror.registerHelper("fold", "import", function (cm, start) {
    function hasImport(line) {
      if (line < cm.firstLine() || line > cm.lastLine()) return null;
      var start = cm.getTokenAt(CodeMirror.Pos(line, 1));
      if (!/\S/.test(start.string)) start = cm.getTokenAt(CodeMirror.Pos(line, start.end + 1));
      if (start.type != "keyword" || start.string != "import") return null; // Now find closing semicolon, return its position

      for (var i = line, e = Math.min(cm.lastLine(), line + 10); i <= e; ++i) {
        var text = cm.getLine(i),
            semi = text.indexOf(";");
        if (semi != -1) return {
          startCh: start.end,
          end: CodeMirror.Pos(i, semi)
        };
      }
    }

    var startLine = start.line,
        has = hasImport(startLine),
        prev;
    if (!has || hasImport(startLine - 1) || (prev = hasImport(startLine - 2)) && prev.end.line == startLine - 1) return null;

    for (var end = has.end;;) {
      var next = hasImport(end.line + 1);
      if (next == null) break;
      end = next.end;
    }

    return {
      from: cm.clipPos(CodeMirror.Pos(startLine, has.startCh + 1)),
      to: end
    };
  });
  CodeMirror.registerHelper("fold", "include", function (cm, start) {
    function hasInclude(line) {
      if (line < cm.firstLine() || line > cm.lastLine()) return null;
      var start = cm.getTokenAt(CodeMirror.Pos(line, 1));
      if (!/\S/.test(start.string)) start = cm.getTokenAt(CodeMirror.Pos(line, start.end + 1));
      if (start.type == "meta" && start.string.slice(0, 8) == "#include") return start.start + 8;
    }

    var startLine = start.line,
        has = hasInclude(startLine);
    if (has == null || hasInclude(startLine - 1) != null) return null;

    for (var end = startLine;;) {
      var next = hasInclude(end + 1);
      if (next == null) break;
      ++end;
    }

    return {
      from: CodeMirror.Pos(startLine, has + 1),
      to: cm.clipPos(CodeMirror.Pos(end))
    };
  });
});

/***/ }),

/***/ "USUc":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // This icon file is generated automatically.

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var InfoCircleOutlined = {
  "icon": {
    "tag": "svg",
    "attrs": {
      "viewBox": "64 64 896 896",
      "focusable": "false"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
      }
    }, {
      "tag": "path",
      "attrs": {
        "d": "M464 336a48 48 0 1096 0 48 48 0 10-96 0zm72 112h-48c-4.4 0-8 3.6-8 8v272c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V456c0-4.4-3.6-8-8-8z"
      }
    }]
  },
  "name": "info-circle",
  "theme": "outlined"
};
exports["default"] = InfoCircleOutlined;

/***/ }),

/***/ "UTwT":
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__("lBnu") && !__webpack_require__("/Vl9")(function () {
  return Object.defineProperty(__webpack_require__("m/Uw")('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "UYXy":
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__("ml72");
var gOPN = __webpack_require__("zIds").f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};


/***/ }),

/***/ "Un63":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("P/oo");

__webpack_require__("V7cS");

__webpack_require__("J8hF");

// CodeMirror, copyright (c) by Marijn Haverbeke and others
// Distributed under an MIT license: https://codemirror.net/LICENSE
(function (mod) {
  if (true) // CommonJS
    mod(__webpack_require__("Dln1"));else {}
})(function (CodeMirror) {
  "use strict";

  var Pos = CodeMirror.Pos;

  function cmp(a, b) {
    return a.line - b.line || a.ch - b.ch;
  }

  var nameStartChar = "A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
  var nameChar = nameStartChar + "-:.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
  var xmlTagStart = new RegExp("<(/?)([" + nameStartChar + "][" + nameChar + "]*)", "g");

  function Iter(cm, line, ch, range) {
    this.line = line;
    this.ch = ch;
    this.cm = cm;
    this.text = cm.getLine(line);
    this.min = range ? Math.max(range.from, cm.firstLine()) : cm.firstLine();
    this.max = range ? Math.min(range.to - 1, cm.lastLine()) : cm.lastLine();
  }

  function tagAt(iter, ch) {
    var type = iter.cm.getTokenTypeAt(Pos(iter.line, ch));
    return type && /\btag\b/.test(type);
  }

  function nextLine(iter) {
    if (iter.line >= iter.max) return;
    iter.ch = 0;
    iter.text = iter.cm.getLine(++iter.line);
    return true;
  }

  function prevLine(iter) {
    if (iter.line <= iter.min) return;
    iter.text = iter.cm.getLine(--iter.line);
    iter.ch = iter.text.length;
    return true;
  }

  function toTagEnd(iter) {
    for (;;) {
      var gt = iter.text.indexOf(">", iter.ch);

      if (gt == -1) {
        if (nextLine(iter)) continue;else return;
      }

      if (!tagAt(iter, gt + 1)) {
        iter.ch = gt + 1;
        continue;
      }

      var lastSlash = iter.text.lastIndexOf("/", gt);
      var selfClose = lastSlash > -1 && !/\S/.test(iter.text.slice(lastSlash + 1, gt));
      iter.ch = gt + 1;
      return selfClose ? "selfClose" : "regular";
    }
  }

  function toTagStart(iter) {
    for (;;) {
      var lt = iter.ch ? iter.text.lastIndexOf("<", iter.ch - 1) : -1;

      if (lt == -1) {
        if (prevLine(iter)) continue;else return;
      }

      if (!tagAt(iter, lt + 1)) {
        iter.ch = lt;
        continue;
      }

      xmlTagStart.lastIndex = lt;
      iter.ch = lt;
      var match = xmlTagStart.exec(iter.text);
      if (match && match.index == lt) return match;
    }
  }

  function toNextTag(iter) {
    for (;;) {
      xmlTagStart.lastIndex = iter.ch;
      var found = xmlTagStart.exec(iter.text);

      if (!found) {
        if (nextLine(iter)) continue;else return;
      }

      if (!tagAt(iter, found.index + 1)) {
        iter.ch = found.index + 1;
        continue;
      }

      iter.ch = found.index + found[0].length;
      return found;
    }
  }

  function toPrevTag(iter) {
    for (;;) {
      var gt = iter.ch ? iter.text.lastIndexOf(">", iter.ch - 1) : -1;

      if (gt == -1) {
        if (prevLine(iter)) continue;else return;
      }

      if (!tagAt(iter, gt + 1)) {
        iter.ch = gt;
        continue;
      }

      var lastSlash = iter.text.lastIndexOf("/", gt);
      var selfClose = lastSlash > -1 && !/\S/.test(iter.text.slice(lastSlash + 1, gt));
      iter.ch = gt + 1;
      return selfClose ? "selfClose" : "regular";
    }
  }

  function findMatchingClose(iter, tag) {
    var stack = [];

    for (;;) {
      var next = toNextTag(iter),
          end,
          startLine = iter.line,
          startCh = iter.ch - (next ? next[0].length : 0);
      if (!next || !(end = toTagEnd(iter))) return;
      if (end == "selfClose") continue;

      if (next[1]) {
        // closing tag
        for (var i = stack.length - 1; i >= 0; --i) {
          if (stack[i] == next[2]) {
            stack.length = i;
            break;
          }
        }

        if (i < 0 && (!tag || tag == next[2])) return {
          tag: next[2],
          from: Pos(startLine, startCh),
          to: Pos(iter.line, iter.ch)
        };
      } else {
        // opening tag
        stack.push(next[2]);
      }
    }
  }

  function findMatchingOpen(iter, tag) {
    var stack = [];

    for (;;) {
      var prev = toPrevTag(iter);
      if (!prev) return;

      if (prev == "selfClose") {
        toTagStart(iter);
        continue;
      }

      var endLine = iter.line,
          endCh = iter.ch;
      var start = toTagStart(iter);
      if (!start) return;

      if (start[1]) {
        // closing tag
        stack.push(start[2]);
      } else {
        // opening tag
        for (var i = stack.length - 1; i >= 0; --i) {
          if (stack[i] == start[2]) {
            stack.length = i;
            break;
          }
        }

        if (i < 0 && (!tag || tag == start[2])) return {
          tag: start[2],
          from: Pos(iter.line, iter.ch),
          to: Pos(endLine, endCh)
        };
      }
    }
  }

  CodeMirror.registerHelper("fold", "xml", function (cm, start) {
    var iter = new Iter(cm, start.line, 0);

    for (;;) {
      var openTag = toNextTag(iter);
      if (!openTag || iter.line != start.line) return;
      var end = toTagEnd(iter);
      if (!end) return;

      if (!openTag[1] && end != "selfClose") {
        var startPos = Pos(iter.line, iter.ch);
        var endPos = findMatchingClose(iter, openTag[2]);
        return endPos && cmp(endPos.from, startPos) > 0 ? {
          from: startPos,
          to: endPos.from
        } : null;
      }
    }
  });

  CodeMirror.findMatchingTag = function (cm, pos, range) {
    var iter = new Iter(cm, pos.line, pos.ch, range);
    if (iter.text.indexOf(">") == -1 && iter.text.indexOf("<") == -1) return;
    var end = toTagEnd(iter),
        to = end && Pos(iter.line, iter.ch);
    var start = end && toTagStart(iter);
    if (!end || !start || cmp(iter, pos) > 0) return;
    var here = {
      from: Pos(iter.line, iter.ch),
      to: to,
      tag: start[2]
    };
    if (end == "selfClose") return {
      open: here,
      close: null,
      at: "open"
    };

    if (start[1]) {
      // closing tag
      return {
        open: findMatchingOpen(iter, start[2]),
        close: here,
        at: "close"
      };
    } else {
      // opening tag
      iter = new Iter(cm, to.line, to.ch, range);
      return {
        open: here,
        close: findMatchingClose(iter, start[2]),
        at: "open"
      };
    }
  };

  CodeMirror.findEnclosingTag = function (cm, pos, range, tag) {
    var iter = new Iter(cm, pos.line, pos.ch, range);

    for (;;) {
      var open = findMatchingOpen(iter, tag);
      if (!open) break;
      var forward = new Iter(cm, pos.line, pos.ch, range);
      var close = findMatchingClose(forward, open.tag);
      if (close) return {
        open: open,
        close: close
      };
    }
  }; // Used by addon/edit/closetag.js


  CodeMirror.scanForClosingTag = function (cm, pos, name, end) {
    var iter = new Iter(cm, pos.line, pos.ch, end ? {
      from: 0,
      to: end
    } : null);
    return findMatchingClose(iter, name);
  };
});

/***/ }),

/***/ "UnHL":
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__("GCOZ");
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),

/***/ "UxWs":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.search.js
var es6_regexp_search = __webpack_require__("nsbO");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.match.js
var es6_regexp_match = __webpack_require__("9ovy");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.assign.js
var es6_object_assign = __webpack_require__("5hJT");

// EXTERNAL MODULE: ./.cache/api-runner-browser.js
var api_runner_browser = __webpack_require__("xtsi");

// EXTERNAL MODULE: ../node_modules/react/index.js
var react = __webpack_require__("mXGw");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../node_modules/react-dom/index.js
var react_dom = __webpack_require__("xARA");
var react_dom_default = /*#__PURE__*/__webpack_require__.n(react_dom);

// EXTERNAL MODULE: ../node_modules/@reach/router/es/index.js
var es = __webpack_require__("JF+v");

// EXTERNAL MODULE: ../node_modules/gatsby-react-router-scroll/index.js
var gatsby_react_router_scroll = __webpack_require__("5LHb");

// EXTERNAL MODULE: ../node_modules/@mikaelkristiansson/domready/ready.js
var ready = __webpack_require__("Kn+0");
var ready_default = /*#__PURE__*/__webpack_require__.n(ready);

// EXTERNAL MODULE: ./.cache/loader.js + 3 modules
var loader = __webpack_require__("emEt");

// EXTERNAL MODULE: ./.cache/redirects.json
var redirects = __webpack_require__("YLt+");

// EXTERNAL MODULE: ./.cache/emitter.js + 1 modules
var emitter = __webpack_require__("5yr3");

// CONCATENATED MODULE: ./.cache/route-announcer-props.js
// This is extracted to separate module because it's shared
// between browser and SSR code
var RouteAnnouncerProps={id:"gatsby-announcer",style:{position:"absolute",top:0,width:1,height:1,padding:0,overflow:"hidden",clip:"rect(0, 0, 0, 0)",whiteSpace:"nowrap",border:0},"aria-live":"assertive","aria-atomic":"true"};
// EXTERNAL MODULE: ../node_modules/@reach/router/es/lib/history.js
var lib_history = __webpack_require__("ELdr");

// EXTERNAL MODULE: ../node_modules/gatsby-link/index.js
var gatsby_link = __webpack_require__("SDHo");

// CONCATENATED MODULE: ./.cache/navigation.js
function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype);subClass.prototype.constructor=subClass;subClass.__proto__=superClass;}// Convert to a map for faster lookup in maybeRedirect()
var redirectMap=redirects.reduce(function(map,redirect){map[redirect.fromPath]=redirect;return map;},{});function maybeRedirect(pathname){var redirect=redirectMap[pathname];if(redirect!=null){if(false){}window.___replace(redirect.toPath);return true;}else{return false;}}var navigation_onPreRouteUpdate=function onPreRouteUpdate(location,prevLocation){if(!maybeRedirect(location.pathname)){Object(api_runner_browser["apiRunner"])("onPreRouteUpdate",{location:location,prevLocation:prevLocation});}};var navigation_onRouteUpdate=function onRouteUpdate(location,prevLocation){if(!maybeRedirect(location.pathname)){Object(api_runner_browser["apiRunner"])("onRouteUpdate",{location:location,prevLocation:prevLocation});}};var navigation_navigate=function navigate(to,options){if(options===void 0){options={};}var _parsePath=Object(gatsby_link["parsePath"])(to),pathname=_parsePath.pathname;var redirect=redirectMap[pathname];// If we're redirecting, just replace the passed in pathname
// to the one we want to redirect to.
if(redirect){to=redirect.toPath;pathname=Object(gatsby_link["parsePath"])(to).pathname;}// If we had a service worker update, no matter the path, reload window and
// reset the pathname whitelist
if(window.___swUpdated){window.location=pathname;return;}// Start a timer to wait for a second before transitioning and showing a
// loader in case resources aren't around yet.
var timeoutId=setTimeout(function(){emitter["a" /* default */].emit("onDelayedLoadPageResources",{pathname:pathname});Object(api_runner_browser["apiRunner"])("onRouteUpdateDelayed",{location:window.location});},1000);loader["default"].loadPage(pathname).then(function(pageResources){// If no page resources, then refresh the page
// Do this, rather than simply `window.location.reload()`, so that
// pressing the back/forward buttons work - otherwise when pressing
// back, the browser will just change the URL and expect JS to handle
// the change, which won't always work since it might not be a Gatsby
// page.
if(!pageResources||pageResources.status===loader["PageResourceStatus"].Error){window.history.replaceState({},"",location.href);window.location=pathname;clearTimeout(timeoutId);return;}// If the loaded page has a different compilation hash to the
// window, then a rebuild has occurred on the server. Reload.
if( true&&pageResources){if(pageResources.page.webpackCompilationHash!==window.___webpackCompilationHash){// Purge plugin-offline cache
if("serviceWorker"in navigator&&navigator.serviceWorker.controller!==null&&navigator.serviceWorker.controller.state==="activated"){navigator.serviceWorker.controller.postMessage({gatsbyApi:"clearPathResources"});}console.log("Site has changed on server. Reloading browser");window.location=pathname;}}Object(es["navigate"])(to,options);clearTimeout(timeoutId);});};function shouldUpdateScroll(prevRouterProps,_ref){var _this=this;var location=_ref.location;var pathname=location.pathname,hash=location.hash;var results=Object(api_runner_browser["apiRunner"])("shouldUpdateScroll",{prevRouterProps:prevRouterProps,// `pathname` for backwards compatibility
pathname:pathname,routerProps:{location:location},getSavedScrollPosition:function getSavedScrollPosition(args){return _this._stateStorage.read(args);}});if(results.length>0){// Use the latest registered shouldUpdateScroll result, this allows users to override plugin's configuration
// @see https://github.com/gatsbyjs/gatsby/issues/12038
return results[results.length-1];}if(prevRouterProps){var oldPathname=prevRouterProps.location.pathname;if(oldPathname===pathname){// Scroll to element if it exists, if it doesn't, or no hash is provided,
// scroll to top.
return hash?decodeURI(hash.slice(1)):[0,0];}}return true;}function init(){// The "scroll-behavior" package expects the "action" to be on the location
// object so let's copy it over.
lib_history["c" /* globalHistory */].listen(function(args){args.location.action=args.action;});window.___push=function(to){return navigation_navigate(to,{replace:false});};window.___replace=function(to){return navigation_navigate(to,{replace:true});};window.___navigate=function(to,options){return navigation_navigate(to,options);};// Check for initial page-load redirect
maybeRedirect(window.location.pathname);}var navigation_RouteAnnouncer=/*#__PURE__*/function(_React$Component){_inheritsLoose(RouteAnnouncer,_React$Component);function RouteAnnouncer(props){var _this2;_this2=_React$Component.call(this,props)||this;_this2.announcementRef=/*#__PURE__*/react_default.a.createRef();return _this2;}var _proto=RouteAnnouncer.prototype;_proto.componentDidUpdate=function componentDidUpdate(prevProps,nextProps){var _this3=this;requestAnimationFrame(function(){var pageName="new page at "+_this3.props.location.pathname;if(document.title){pageName=document.title;}var pageHeadings=document.querySelectorAll("#gatsby-focus-wrapper h1");if(pageHeadings&&pageHeadings.length){pageName=pageHeadings[0].textContent;}var newAnnouncement="Navigated to "+pageName;if(_this3.announcementRef.current){var oldAnnouncement=_this3.announcementRef.current.innerText;if(oldAnnouncement!==newAnnouncement){_this3.announcementRef.current.innerText=newAnnouncement;}}});};_proto.render=function render(){return/*#__PURE__*/react_default.a.createElement("div",Object.assign({},RouteAnnouncerProps,{ref:this.announcementRef}));};return RouteAnnouncer;}(react_default.a.Component);// Fire on(Pre)RouteUpdate APIs
var navigation_RouteUpdates=/*#__PURE__*/function(_React$Component2){_inheritsLoose(RouteUpdates,_React$Component2);function RouteUpdates(props){var _this4;_this4=_React$Component2.call(this,props)||this;navigation_onPreRouteUpdate(props.location,null);return _this4;}var _proto2=RouteUpdates.prototype;_proto2.componentDidMount=function componentDidMount(){navigation_onRouteUpdate(this.props.location,null);};_proto2.componentDidUpdate=function componentDidUpdate(prevProps,prevState,shouldFireRouteUpdate){if(shouldFireRouteUpdate){navigation_onRouteUpdate(this.props.location,prevProps.location);}};_proto2.getSnapshotBeforeUpdate=function getSnapshotBeforeUpdate(prevProps){if(this.props.location.pathname!==prevProps.location.pathname){navigation_onPreRouteUpdate(this.props.location,prevProps.location);return true;}return false;};_proto2.render=function render(){return/*#__PURE__*/react_default.a.createElement(react_default.a.Fragment,null,this.props.children,/*#__PURE__*/react_default.a.createElement(navigation_RouteAnnouncer,{location:location}));};return RouteUpdates;}(react_default.a.Component);
// EXTERNAL MODULE: ./.cache/page-renderer.js
var page_renderer = __webpack_require__("IOVJ");

// EXTERNAL MODULE: ./node_modules/$virtual/async-requires.js
var async_requires = __webpack_require__("XyBk");
var async_requires_default = /*#__PURE__*/__webpack_require__.n(async_requires);

// CONCATENATED MODULE: ../node_modules/shallow-compare/es/index.js
// Pulled from react-compat
// https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349
function shallowDiffers(a, b) {
  for (var i in a) {
    if (!(i in b)) return true;
  }

  for (var _i in b) {
    if (a[_i] !== b[_i]) return true;
  }

  return false;
}

/* harmony default export */ var shallow_compare_es = (function (instance, nextProps, nextState) {
  return shallowDiffers(instance.props, nextProps) || shallowDiffers(instance.state, nextState);
});
// CONCATENATED MODULE: ./.cache/ensure-resources.js
function ensure_resources_inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype);subClass.prototype.constructor=subClass;subClass.__proto__=superClass;}var ensure_resources_EnsureResources=/*#__PURE__*/function(_React$Component){ensure_resources_inheritsLoose(EnsureResources,_React$Component);function EnsureResources(props){var _this;_this=_React$Component.call(this)||this;var location=props.location,pageResources=props.pageResources;_this.state={location:Object.assign({},location),pageResources:pageResources||loader["default"].loadPageSync(location.pathname)};return _this;}EnsureResources.getDerivedStateFromProps=function getDerivedStateFromProps(_ref,prevState){var location=_ref.location;if(prevState.location.href!==location.href){var pageResources=loader["default"].loadPageSync(location.pathname);return{pageResources:pageResources,location:Object.assign({},location)};}return{location:Object.assign({},location)};};var _proto=EnsureResources.prototype;_proto.loadResources=function loadResources(rawPath){var _this2=this;loader["default"].loadPage(rawPath).then(function(pageResources){if(pageResources&&pageResources.status!==loader["PageResourceStatus"].Error){_this2.setState({location:Object.assign({},window.location),pageResources:pageResources});}else{window.history.replaceState({},"",location.href);window.location=rawPath;}});};_proto.shouldComponentUpdate=function shouldComponentUpdate(nextProps,nextState){// Always return false if we're missing resources.
if(!nextState.pageResources){this.loadResources(nextProps.location.pathname);return false;}// Check if the component or json have changed.
if(this.state.pageResources!==nextState.pageResources){return true;}if(this.state.pageResources.component!==nextState.pageResources.component){return true;}if(this.state.pageResources.json!==nextState.pageResources.json){return true;}// Check if location has changed on a page using internal routing
// via matchPath configuration.
if(this.state.location.key!==nextState.location.key&&nextState.pageResources.page&&(nextState.pageResources.page.matchPath||nextState.pageResources.page.path)){return true;}return shallow_compare_es(this,nextProps,nextState);};_proto.render=function render(){if(false){}return this.props.children(this.state);};return EnsureResources;}(react_default.a.Component);/* harmony default export */ var ensure_resources = (ensure_resources_EnsureResources);
// EXTERNAL MODULE: ./.cache/strip-prefix.js
var strip_prefix = __webpack_require__("cSJ8");

// EXTERNAL MODULE: ./node_modules/$virtual/match-paths.json
var match_paths = __webpack_require__("o2xN");

// CONCATENATED MODULE: ./.cache/production-app.js
function production_app_inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype);subClass.prototype.constructor=subClass;subClass.__proto__=superClass;}// Generated during bootstrap
var production_app_loader=new loader["ProdLoader"](async_requires_default.a,match_paths);Object(loader["setLoader"])(production_app_loader);production_app_loader.setApiRunner(api_runner_browser["apiRunner"]);window.asyncRequires=async_requires_default.a;window.___emitter=emitter["a" /* default */];window.___loader=loader["publicLoader"];init();Object(api_runner_browser["apiRunnerAsync"])("onClientEntry").then(function(){// Let plugins register a service worker. The plugin just needs
// to return true.
if(Object(api_runner_browser["apiRunner"])("registerServiceWorker").length>0){__webpack_require__("NSX3");}// In gatsby v2 if Router is used in page using matchPaths
// paths need to contain full path.
// For example:
//   - page have `/app/*` matchPath
//   - inside template user needs to use `/app/xyz` as path
// Resetting `basepath`/`baseuri` keeps current behaviour
// to not introduce breaking change.
// Remove this in v3
var RouteHandler=function RouteHandler(props){return/*#__PURE__*/react_default.a.createElement(es["BaseContext"].Provider,{value:{baseuri:"/",basepath:"/"}},/*#__PURE__*/react_default.a.createElement(page_renderer["a" /* default */],props));};var LocationHandler=/*#__PURE__*/function(_React$Component){production_app_inheritsLoose(LocationHandler,_React$Component);function LocationHandler(){return _React$Component.apply(this,arguments)||this;}var _proto=LocationHandler.prototype;_proto.render=function render(){var _this=this;var location=this.props.location;return/*#__PURE__*/react_default.a.createElement(ensure_resources,{location:location},function(_ref){var pageResources=_ref.pageResources,location=_ref.location;return/*#__PURE__*/react_default.a.createElement(navigation_RouteUpdates,{location:location},/*#__PURE__*/react_default.a.createElement(gatsby_react_router_scroll["ScrollContext"],{location:location,shouldUpdateScroll:shouldUpdateScroll},/*#__PURE__*/react_default.a.createElement(es["Router"],{basepath:"",location:location,id:"gatsby-focus-wrapper"},/*#__PURE__*/react_default.a.createElement(RouteHandler,Object.assign({path:pageResources.page.path==="/404.html"?Object(strip_prefix["a" /* default */])(location.pathname,""):encodeURI(pageResources.page.matchPath||pageResources.page.path)},_this.props,{location:location,pageResources:pageResources},pageResources.json)))));});};return LocationHandler;}(react_default.a.Component);var _window=window,pagePath=_window.pagePath,browserLoc=_window.location;// Explicitly call navigate if the canonical path (window.pagePath)
// is different to the browser path (window.location.pathname). But
// only if NONE of the following conditions hold:
//
// - The url matches a client side route (page.matchPath)
// - it's a 404 page
// - it's the offline plugin shell (/offline-plugin-app-shell-fallback/)
if(pagePath&&""+pagePath!==browserLoc.pathname&&!(production_app_loader.findMatchPath(Object(strip_prefix["a" /* default */])(browserLoc.pathname,""))||pagePath==="/404.html"||pagePath.match(/^\/404\/?$/)||pagePath.match(/^\/offline-plugin-app-shell-fallback\/?$/))){Object(es["navigate"])(""+pagePath+browserLoc.search+browserLoc.hash,{replace:true});}loader["publicLoader"].loadPage(browserLoc.pathname).then(function(page){if(!page||page.status===loader["PageResourceStatus"].Error){throw new Error("page resources for "+browserLoc.pathname+" not found. Not rendering React");}window.___webpackCompilationHash=page.page.webpackCompilationHash;var Root=function Root(){return/*#__PURE__*/react_default.a.createElement(es["Location"],null,function(locationContext){return/*#__PURE__*/react_default.a.createElement(LocationHandler,locationContext);});};var WrappedRoot=Object(api_runner_browser["apiRunner"])("wrapRootElement",{element:/*#__PURE__*/react_default.a.createElement(Root,null)},/*#__PURE__*/react_default.a.createElement(Root,null),function(_ref2){var result=_ref2.result;return{element:result};}).pop();var NewRoot=function NewRoot(){return WrappedRoot;};var renderer=Object(api_runner_browser["apiRunner"])("replaceHydrateFunction",undefined,react_dom_default.a.hydrate)[0];ready_default()(function(){renderer(/*#__PURE__*/react_default.a.createElement(NewRoot,null),typeof window!=="undefined"?document.getElementById("___gatsby"):void 0,function(){Object(api_runner_browser["apiRunner"])("onInitialClientRender");});});});});

/***/ }),

/***/ "Uy6E":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------

var _require = __webpack_require__("nl0c"),
    flEquals = _require.equals;

var curry = __webpack_require__("iPMX");

var warn = __webpack_require__("4dnM")('equals');

var unsupported = __webpack_require__("zUWx")('equals');

var isNew = function isNew(a) {
  return typeof a[flEquals] === 'function';
};

var isOld = function isOld(a) {
  return typeof a.equals === 'function';
};
/*~
 * stability: stable
 * authors:
 *   - "@boris-marinov"
 *   - Quildreen Motta
 * 
 * type: |
 *   forall S, a:
 *     (S a, S a) => Boolean
 *   where S is Setoid
 */


var equals = function equals(setoidLeft, setoidRight) {
  return isNew(setoidLeft) ? setoidLeft[flEquals](setoidRight) : isOld(setoidLeft) ? warn(setoidLeft.equals(setoidRight)) :
  /*otherwise*/
  unsupported(setoidLeft);
};
/*~
 * stability: stable
 * authors:
 *   - "@boris-marinov"
 *   - Quildreen Motta
 * 
 * type: |
 *   forall S, a:
 *     (S a) => (S a) => Boolean
 *   where S is Setoid
 */


equals.curried = curry(2, function (setoidRight, setoidLeft) {
  return (// eslint-disable-line no-magic-numbers
    equals(setoidLeft, setoidRight)
  );
});
/*~
 * stability: experimental
 * authors:
 *   - Quildreen Motta
 * 
 * type: |
 *   forall S, a:
 *     (S a).(S a) => Boolean
 *   where S is Setoid
 */

equals.infix = function (aSetoid) {
  return equals(this, aSetoid);
};

module.exports = equals;

/***/ }),

/***/ "UyNX":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return tuple; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return tupleNum; });
// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead
var tuple = function tuple() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return args;
};
var tupleNum = function tupleNum() {
  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    args[_key2] = arguments[_key2];
  }

  return args;
};

/***/ }),

/***/ "V5Oj":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var core_js_modules_es6_array_for_each__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("7lGJ");
/* harmony import */ var core_js_modules_es6_array_for_each__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_for_each__WEBPACK_IMPORTED_MODULE_0__);

var START_EVENT_NAME_MAP = {
  transitionstart: {
    transition: 'transitionstart',
    WebkitTransition: 'webkitTransitionStart',
    MozTransition: 'mozTransitionStart',
    OTransition: 'oTransitionStart',
    msTransition: 'MSTransitionStart'
  },
  animationstart: {
    animation: 'animationstart',
    WebkitAnimation: 'webkitAnimationStart',
    MozAnimation: 'mozAnimationStart',
    OAnimation: 'oAnimationStart',
    msAnimation: 'MSAnimationStart'
  }
};
var END_EVENT_NAME_MAP = {
  transitionend: {
    transition: 'transitionend',
    WebkitTransition: 'webkitTransitionEnd',
    MozTransition: 'mozTransitionEnd',
    OTransition: 'oTransitionEnd',
    msTransition: 'MSTransitionEnd'
  },
  animationend: {
    animation: 'animationend',
    WebkitAnimation: 'webkitAnimationEnd',
    MozAnimation: 'mozAnimationEnd',
    OAnimation: 'oAnimationEnd',
    msAnimation: 'MSAnimationEnd'
  }
};
var startEvents = [];
var endEvents = [];

function detectEvents() {
  var testEl = document.createElement('div');
  var style = testEl.style;

  if (!('AnimationEvent' in window)) {
    delete START_EVENT_NAME_MAP.animationstart.animation;
    delete END_EVENT_NAME_MAP.animationend.animation;
  }

  if (!('TransitionEvent' in window)) {
    delete START_EVENT_NAME_MAP.transitionstart.transition;
    delete END_EVENT_NAME_MAP.transitionend.transition;
  }

  function process(EVENT_NAME_MAP, events) {
    for (var baseEventName in EVENT_NAME_MAP) {
      if (EVENT_NAME_MAP.hasOwnProperty(baseEventName)) {
        var baseEvents = EVENT_NAME_MAP[baseEventName];

        for (var styleName in baseEvents) {
          if (styleName in style) {
            events.push(baseEvents[styleName]);
            break;
          }
        }
      }
    }
  }

  process(START_EVENT_NAME_MAP, startEvents);
  process(END_EVENT_NAME_MAP, endEvents);
}

if (typeof window !== 'undefined' && typeof document !== 'undefined') {
  detectEvents();
}

function addEventListener(node, eventName, eventListener) {
  node.addEventListener(eventName, eventListener, false);
}

function removeEventListener(node, eventName, eventListener) {
  node.removeEventListener(eventName, eventListener, false);
}

var TransitionEvents = {
  // Start events
  startEvents: startEvents,
  addStartEventListener: function addStartEventListener(node, eventListener) {
    if (startEvents.length === 0) {
      window.setTimeout(eventListener, 0);
      return;
    }

    startEvents.forEach(function (startEvent) {
      addEventListener(node, startEvent, eventListener);
    });
  },
  removeStartEventListener: function removeStartEventListener(node, eventListener) {
    if (startEvents.length === 0) {
      return;
    }

    startEvents.forEach(function (startEvent) {
      removeEventListener(node, startEvent, eventListener);
    });
  },
  // End events
  endEvents: endEvents,
  addEndEventListener: function addEndEventListener(node, eventListener) {
    if (endEvents.length === 0) {
      window.setTimeout(eventListener, 0);
      return;
    }

    endEvents.forEach(function (endEvent) {
      addEventListener(node, endEvent, eventListener);
    });
  },
  removeEndEventListener: function removeEndEventListener(node, eventListener) {
    if (endEvents.length === 0) {
      return;
    }

    endEvents.forEach(function (endEvent) {
      removeEventListener(node, endEvent, eventListener);
    });
  }
};
/* harmony default export */ __webpack_exports__["a"] = (TransitionEvents);

/***/ }),

/***/ "V7cS":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__("X6VK");
var $indexOf = __webpack_require__("sdkr")(false);
var $native = [].indexOf;
var NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;

$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__("/6rt")($native)), 'Array', {
  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
    return NEGATIVE_ZERO
      // convert -0 to +0
      ? $native.apply(this, arguments) || 0
      : $indexOf(this, searchElement, arguments[1]);
  }
});


/***/ }),

/***/ "VNvs":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__("X6VK");
var $some = __webpack_require__("1wfo")(3);

$export($export.P + $export.F * !__webpack_require__("/6rt")([].some, true), 'Array', {
  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
  some: function some(callbackfn /* , thisArg */) {
    return $some(this, callbackfn, arguments[1]);
  }
});


/***/ }),

/***/ "VVFi":
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),

/***/ "VW18":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _EllipsisOutlined = _interopRequireDefault(__webpack_require__("K+P+"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    'default': obj
  };
}

var _default = _EllipsisOutlined;
exports["default"] = _default;
module.exports = _default;

/***/ }),

/***/ "Vx+c":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__("PAFS");
var dPs = __webpack_require__("pU1/");
var enumBugKeys = __webpack_require__("fQty");
var IE_PROTO = __webpack_require__("8kJd")('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__("mggL")('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__("CLuC").appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),

/***/ "W1QL":
/***/ (function(module, exports, __webpack_require__) {

var $iterators = __webpack_require__("K/PF");
var getKeys = __webpack_require__("LuBU");
var redefine = __webpack_require__("sU/p");
var global = __webpack_require__("P56o");
var hide = __webpack_require__("tjmq");
var Iterators = __webpack_require__("Ibj2");
var wks = __webpack_require__("9dxi");
var ITERATOR = wks('iterator');
var TO_STRING_TAG = wks('toStringTag');
var ArrayValues = Iterators.Array;

var DOMIterables = {
  CSSRuleList: true, // TODO: Not spec compliant, should be false.
  CSSStyleDeclaration: false,
  CSSValueList: false,
  ClientRectList: false,
  DOMRectList: false,
  DOMStringList: false,
  DOMTokenList: true,
  DataTransferItemList: false,
  FileList: false,
  HTMLAllCollection: false,
  HTMLCollection: false,
  HTMLFormElement: false,
  HTMLSelectElement: false,
  MediaList: true, // TODO: Not spec compliant, should be false.
  MimeTypeArray: false,
  NamedNodeMap: false,
  NodeList: true,
  PaintRequestList: false,
  Plugin: false,
  PluginArray: false,
  SVGLengthList: false,
  SVGNumberList: false,
  SVGPathSegList: false,
  SVGPointList: false,
  SVGStringList: false,
  SVGTransformList: false,
  SourceBufferList: false,
  StyleSheetList: true, // TODO: Not spec compliant, should be false.
  TextTrackCueList: false,
  TextTrackList: false,
  TouchList: false
};

for (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {
  var NAME = collections[i];
  var explicit = DOMIterables[NAME];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  var key;
  if (proto) {
    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
    Iterators[NAME] = ArrayValues;
    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);
  }
}


/***/ }),

/***/ "W2ws":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("m8zh");

__webpack_require__("+jjx");

__webpack_require__("ABKx");

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
};

var parsePath = __webpack_require__("PgXy"),
    normalizeUrl = __webpack_require__("iBmR");
/**
 * parseUrl
 * Parses the input url.
 *
 * **Note**: This *throws* if invalid urls are provided.
 *
 * @name parseUrl
 * @function
 * @param {String} url The input url.
 * @param {Boolean|Object} normalize Wheter to normalize the url or not.
 *                         Default is `false`. If `true`, the url will
 *                         be normalized. If an object, it will be the
 *                         options object sent to [`normalize-url`](https://github.com/sindresorhus/normalize-url).
 *
 *                         For SSH urls, normalize won't work.
 *
 * @return {Object} An object containing the following fields:
 *
 *  - `protocols` (Array): An array with the url protocols (usually it has one element).
 *  - `protocol` (String): The first protocol, `"ssh"` (if the url is a ssh url) or `"file"`.
 *  - `port` (null|Number): The domain port.
 *  - `resource` (String): The url domain (including subdomains).
 *  - `user` (String): The authentication user (usually for ssh urls).
 *  - `pathname` (String): The url pathname.
 *  - `hash` (String): The url hash.
 *  - `search` (String): The url querystring value.
 *  - `href` (String): The input url.
 *  - `query` (Object): The url querystring, parsed as object.
 */


function parseUrl(url) {
  var normalize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  if (typeof url !== "string" || !url.trim()) {
    throw new Error("Invalid url.");
  }

  if (normalize) {
    if ((typeof normalize === "undefined" ? "undefined" : _typeof(normalize)) !== "object") {
      normalize = {
        stripFragment: false
      };
    }

    url = normalizeUrl(url, normalize);
  }

  var parsed = parsePath(url);
  return parsed;
}

module.exports = parseUrl;

/***/ }),

/***/ "WSfz":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _style_index_less__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("SwVN");
/* harmony import */ var _style_index_less__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_index_less__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("k81u");
/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_index_less__WEBPACK_IMPORTED_MODULE_1__);



/***/ }),

/***/ "WWmS":
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "WYfr":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("W1QL");

__webpack_require__("K/PF");

__webpack_require__("t91x");

__webpack_require__("lQyR");

__webpack_require__("zx98");

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var cache = new Map();
/**
 * 注册计算包围盒的算法
 * @param type 方法名
 * @param method 方法
 */

function register(type, method) {
  cache.set(type, method);
}

exports.register = register;
/**
 * 获取计算包围盒的算法
 * @param type 方法名
 */

function getMethod(type) {
  return cache.get(type);
}

exports.getMethod = getMethod;

/***/ }),

/***/ "Wbzz":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "graphql", function() { return graphql; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StaticQueryContext", function() { return StaticQueryContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StaticQuery", function() { return StaticQuery; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useStaticQuery", function() { return useStaticQuery; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "prefetchPathname", function() { return prefetchPathname; });
/* harmony import */ var core_js_modules_es6_number_constructor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("e2Kn");
/* harmony import */ var core_js_modules_es6_number_constructor__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_number_constructor__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("mXGw");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var gatsby_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("SDHo");
/* harmony import */ var gatsby_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(gatsby_link__WEBPACK_IMPORTED_MODULE_2__);
/* harmony reexport (default from non-harmony) */ __webpack_require__.d(__webpack_exports__, "Link", function() { return gatsby_link__WEBPACK_IMPORTED_MODULE_2___default.a; });
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "withAssetPrefix", function() { return gatsby_link__WEBPACK_IMPORTED_MODULE_2__["withAssetPrefix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "withPrefix", function() { return gatsby_link__WEBPACK_IMPORTED_MODULE_2__["withPrefix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parsePath", function() { return gatsby_link__WEBPACK_IMPORTED_MODULE_2__["parsePath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "navigate", function() { return gatsby_link__WEBPACK_IMPORTED_MODULE_2__["navigate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "push", function() { return gatsby_link__WEBPACK_IMPORTED_MODULE_2__["push"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "replace", function() { return gatsby_link__WEBPACK_IMPORTED_MODULE_2__["replace"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "navigateTo", function() { return gatsby_link__WEBPACK_IMPORTED_MODULE_2__["navigateTo"]; });

/* harmony import */ var _public_page_renderer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("lw3w");
/* harmony import */ var _public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__);
/* harmony reexport (default from non-harmony) */ __webpack_require__.d(__webpack_exports__, "PageRenderer", function() { return _public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default.a; });
/* harmony import */ var _loader__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("emEt");
var prefetchPathname=_loader__WEBPACK_IMPORTED_MODULE_4__["default"].enqueue;var StaticQueryContext=/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createContext({});function StaticQueryDataRenderer(_ref){var staticQueryData=_ref.staticQueryData,data=_ref.data,query=_ref.query,render=_ref.render;var finalData=data?data.data:staticQueryData[query]&&staticQueryData[query].data;return/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,finalData&&render(finalData),!finalData&&/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div",null,"Loading (StaticQuery)"));}var StaticQuery=function StaticQuery(props){var data=props.data,query=props.query,render=props.render,children=props.children;return/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(StaticQueryContext.Consumer,null,function(staticQueryData){return/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(StaticQueryDataRenderer,{data:data,query:query,render:render||children,staticQueryData:staticQueryData});});};var useStaticQuery=function useStaticQuery(query){if(typeof react__WEBPACK_IMPORTED_MODULE_1___default.a.useContext!=="function"&&"production"==="development"){throw new Error("You're likely using a version of React that doesn't support Hooks\n"+"Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.");}var context=react__WEBPACK_IMPORTED_MODULE_1___default.a.useContext(StaticQueryContext);// query is a stringified number like `3303882` when wrapped with graphql, If a user forgets
// to wrap the query in a grqphql, then casting it to a Number results in `NaN` allowing us to
// catch the misuse of the API and give proper direction
if(isNaN(Number(query))){throw new Error("useStaticQuery was called with a string but expects to be called using `graphql`. Try this:\n\nimport { useStaticQuery, graphql } from 'gatsby';\n\nuseStaticQuery(graphql`"+query+"`);\n");}if(context[query]&&context[query].data){return context[query].data;}else{throw new Error("The result of this StaticQuery could not be fetched.\n\n"+"This is likely a bug in Gatsby and if refreshing the page does not fix it, "+"please open an issue in https://github.com/gatsbyjs/gatsby/issues");}};function graphql(){throw new Error("It appears like Gatsby is misconfigured. Gatsby related `graphql` calls "+"are supposed to only be evaluated at compile time, and then compiled away. "+"Unfortunately, something went wrong and the query was left in the compiled code.\n\n"+"Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.");}

/***/ }),

/***/ "WiT8":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("V7cS");

__webpack_require__("yIlq");

__webpack_require__("GkPX");

__webpack_require__("PAbq");

__webpack_require__("d3/y");

function _interopDefault(ex) {
  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;
}

var React = __webpack_require__("mXGw");

var React__default = _interopDefault(React);

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

function withSideEffect(reducePropsToState, handleStateChangeOnClient, mapStateOnServer) {
  if (typeof reducePropsToState !== 'function') {
    throw new Error('Expected reducePropsToState to be a function.');
  }

  if (typeof handleStateChangeOnClient !== 'function') {
    throw new Error('Expected handleStateChangeOnClient to be a function.');
  }

  if (typeof mapStateOnServer !== 'undefined' && typeof mapStateOnServer !== 'function') {
    throw new Error('Expected mapStateOnServer to either be undefined or a function.');
  }

  function getDisplayName(WrappedComponent) {
    return WrappedComponent.displayName || WrappedComponent.name || 'Component';
  }

  return function wrap(WrappedComponent) {
    if (typeof WrappedComponent !== 'function') {
      throw new Error('Expected WrappedComponent to be a React component.');
    }

    var mountedInstances = [];
    var state;

    function emitChange() {
      state = reducePropsToState(mountedInstances.map(function (instance) {
        return instance.props;
      }));

      if (SideEffect.canUseDOM) {
        handleStateChangeOnClient(state);
      } else if (mapStateOnServer) {
        state = mapStateOnServer(state);
      }
    }

    var SideEffect = /*#__PURE__*/function (_PureComponent) {
      _inheritsLoose(SideEffect, _PureComponent);

      function SideEffect() {
        return _PureComponent.apply(this, arguments) || this;
      } // Try to use displayName of wrapped component
      // Expose canUseDOM so tests can monkeypatch it


      SideEffect.peek = function peek() {
        return state;
      };

      SideEffect.rewind = function rewind() {
        if (SideEffect.canUseDOM) {
          throw new Error('You may only call rewind() on the server. Call peek() to read the current state.');
        }

        var recordedState = state;
        state = undefined;
        mountedInstances = [];
        return recordedState;
      };

      var _proto = SideEffect.prototype;

      _proto.UNSAFE_componentWillMount = function UNSAFE_componentWillMount() {
        mountedInstances.push(this);
        emitChange();
      };

      _proto.componentDidUpdate = function componentDidUpdate() {
        emitChange();
      };

      _proto.componentWillUnmount = function componentWillUnmount() {
        var index = mountedInstances.indexOf(this);
        mountedInstances.splice(index, 1);
        emitChange();
      };

      _proto.render = function render() {
        return React__default.createElement(WrappedComponent, this.props);
      };

      return SideEffect;
    }(React.PureComponent);

    _defineProperty(SideEffect, "displayName", "SideEffect(" + getDisplayName(WrappedComponent) + ")");

    _defineProperty(SideEffect, "canUseDOM", canUseDOM);

    return SideEffect;
  };
}

module.exports = withSideEffect;

/***/ }),

/***/ "Wifh":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

__webpack_require__("N6/Q");
var redefine = __webpack_require__("sU/p");
var hide = __webpack_require__("tjmq");
var fails = __webpack_require__("E7Vc");
var defined = __webpack_require__("GCOZ");
var wks = __webpack_require__("9dxi");
var regexpExec = __webpack_require__("lAKj");

var SPECIES = wks('species');

var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
  // #replace needs built-in support for named groups.
  // #match works fine because it just return the exec results, even if it has
  // a "grops" property.
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  return ''.replace(re, '$<a>') !== '7';
});

var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = (function () {
  // Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
  var re = /(?:)/;
  var originalExec = re.exec;
  re.exec = function () { return originalExec.apply(this, arguments); };
  var result = 'ab'.split(re);
  return result.length === 2 && result[0] === 'a' && result[1] === 'b';
})();

module.exports = function (KEY, length, exec) {
  var SYMBOL = wks(KEY);

  var DELEGATES_TO_SYMBOL = !fails(function () {
    // String methods call symbol-named RegEp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !fails(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;
    re.exec = function () { execCalled = true; return null; };
    if (KEY === 'split') {
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES] = function () { return re; };
    }
    re[SYMBOL]('');
    return !execCalled;
  }) : undefined;

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||
    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)
  ) {
    var nativeRegExpMethod = /./[SYMBOL];
    var fns = exec(
      defined,
      SYMBOL,
      ''[KEY],
      function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {
        if (regexp.exec === regexpExec) {
          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
            // The native String method already delegates to @@method (this
            // polyfilled function), leasing to infinite recursion.
            // We avoid it by directly calling the native @@method method.
            return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };
          }
          return { done: true, value: nativeMethod.call(str, regexp, arg2) };
        }
        return { done: false };
      }
    );
    var strfn = fns[0];
    var rxfn = fns[1];

    redefine(String.prototype, KEY, strfn);
    hide(RegExp.prototype, SYMBOL, length == 2
      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
      ? function (string, arg) { return rxfn.call(string, this, arg); }
      // 21.2.5.6 RegExp.prototype[@@match](string)
      // 21.2.5.9 RegExp.prototype[@@search](string)
      : function (string) { return rxfn.call(string, this); }
    );
  }
};


/***/ }),

/***/ "Wpb7":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("yIlq");

__webpack_require__("5hJT");

__webpack_require__("V7cS");

__webpack_require__("d3/y");

__webpack_require__("6/FK");

__webpack_require__("2Tod");

__webpack_require__("7lGJ");

__webpack_require__("9p7t");

__webpack_require__("ABKx");

__webpack_require__("W1QL");

__webpack_require__("K/PF");

__webpack_require__("t91x");

__webpack_require__("75LO");

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var react_1 = __importDefault(__webpack_require__("mXGw"));

var classnames_1 = __importDefault(__webpack_require__("8Jek"));

var column_1 = __importDefault(__webpack_require__("zGEu"));

var Footer = function Footer(_ref) {
  var _ref$prefixCls = _ref.prefixCls,
      prefixCls = _ref$prefixCls === void 0 ? 'rc-footer' : _ref$prefixCls,
      className = _ref.className,
      style = _ref.style,
      bottom = _ref.bottom,
      columns = _ref.columns,
      maxColumnsPerRow = _ref.maxColumnsPerRow,
      backgroundColor = _ref.backgroundColor,
      columnLayout = _ref.columnLayout,
      _ref$theme = _ref.theme,
      theme = _ref$theme === void 0 ? 'dark' : _ref$theme,
      restProps = _objectWithoutProperties(_ref, ["prefixCls", "className", "style", "bottom", "columns", "maxColumnsPerRow", "backgroundColor", "columnLayout", "theme"]);

  var footerClassName = classnames_1["default"]("".concat(prefixCls), className, _defineProperty({}, "".concat(prefixCls, "-").concat(theme), !!theme));
  var shouldWrap = typeof maxColumnsPerRow === 'number' && maxColumnsPerRow > 0;
  return react_1["default"].createElement("footer", Object.assign({}, restProps, {
    className: footerClassName,
    style: _objectSpread(_objectSpread({}, style), {}, {
      backgroundColor: backgroundColor
    })
  }), react_1["default"].createElement("section", {
    className: "".concat(prefixCls, "-container")
  }, columns && columns.length > 0 && react_1["default"].createElement("section", {
    className: "".concat(prefixCls, "-columns"),
    style: {
      justifyContent: columnLayout,
      flexWrap: shouldWrap ? 'wrap' : undefined
    }
  }, columns.map(function (_ref2, i) {
    var title = _ref2.title,
        icon = _ref2.icon,
        columnStyle = _ref2.style,
        columnClassName = _ref2.className,
        _ref2$items = _ref2.items,
        items = _ref2$items === void 0 ? [] : _ref2$items;

    var styleObject = _objectSpread({}, columnStyle);

    if (shouldWrap) {
      styleObject.flex = "0 0 ".concat(100 / (maxColumnsPerRow + 1) + 0.1, "%");
    }

    return react_1["default"].createElement(column_1["default"], {
      key: i,
      prefixCls: prefixCls,
      title: title,
      icon: icon,
      items: items,
      style: styleObject,
      className: columnClassName
    });
  }))), bottom && react_1["default"].createElement("section", {
    className: "".concat(prefixCls, "-bottom")
  }, react_1["default"].createElement("div", {
    className: "".concat(prefixCls, "-bottom-container")
  }, bottom)));
};

exports["default"] = Footer;

/***/ }),

/***/ "Wvwq":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("J8hF");

__webpack_require__("it7j");

// CodeMirror, copyright (c) by Marijn Haverbeke and others
// Distributed under an MIT license: https://codemirror.net/LICENSE
(function (mod) {
  if (true) // CommonJS
    mod(__webpack_require__("Dln1"), __webpack_require__("w/93"));else {}
})(function (CodeMirror) {
  "use strict";

  CodeMirror.defineOption("foldGutter", false, function (cm, val, old) {
    if (old && old != CodeMirror.Init) {
      cm.clearGutter(cm.state.foldGutter.options.gutter);
      cm.state.foldGutter = null;
      cm.off("gutterClick", onGutterClick);
      cm.off("changes", onChange);
      cm.off("viewportChange", onViewportChange);
      cm.off("fold", onFold);
      cm.off("unfold", onFold);
      cm.off("swapDoc", onChange);
    }

    if (val) {
      cm.state.foldGutter = new State(parseOptions(val));
      updateInViewport(cm);
      cm.on("gutterClick", onGutterClick);
      cm.on("changes", onChange);
      cm.on("viewportChange", onViewportChange);
      cm.on("fold", onFold);
      cm.on("unfold", onFold);
      cm.on("swapDoc", onChange);
    }
  });
  var Pos = CodeMirror.Pos;

  function State(options) {
    this.options = options;
    this.from = this.to = 0;
  }

  function parseOptions(opts) {
    if (opts === true) opts = {};
    if (opts.gutter == null) opts.gutter = "CodeMirror-foldgutter";
    if (opts.indicatorOpen == null) opts.indicatorOpen = "CodeMirror-foldgutter-open";
    if (opts.indicatorFolded == null) opts.indicatorFolded = "CodeMirror-foldgutter-folded";
    return opts;
  }

  function isFolded(cm, line) {
    var marks = cm.findMarks(Pos(line, 0), Pos(line + 1, 0));

    for (var i = 0; i < marks.length; ++i) {
      if (marks[i].__isFold) {
        var fromPos = marks[i].find(-1);
        if (fromPos && fromPos.line === line) return marks[i];
      }
    }
  }

  function marker(spec) {
    if (typeof spec == "string") {
      var elt = document.createElement("div");
      elt.className = spec + " CodeMirror-guttermarker-subtle";
      return elt;
    } else {
      return spec.cloneNode(true);
    }
  }

  function updateFoldInfo(cm, from, to) {
    var opts = cm.state.foldGutter.options,
        cur = from - 1;
    var minSize = cm.foldOption(opts, "minFoldSize");
    var func = cm.foldOption(opts, "rangeFinder"); // we can reuse the built-in indicator element if its className matches the new state

    var clsFolded = typeof opts.indicatorFolded == "string" && classTest(opts.indicatorFolded);
    var clsOpen = typeof opts.indicatorOpen == "string" && classTest(opts.indicatorOpen);
    cm.eachLine(from, to, function (line) {
      ++cur;
      var mark = null;
      var old = line.gutterMarkers;
      if (old) old = old[opts.gutter];

      if (isFolded(cm, cur)) {
        if (clsFolded && old && clsFolded.test(old.className)) return;
        mark = marker(opts.indicatorFolded);
      } else {
        var pos = Pos(cur, 0);
        var range = func && func(cm, pos);

        if (range && range.to.line - range.from.line >= minSize) {
          if (clsOpen && old && clsOpen.test(old.className)) return;
          mark = marker(opts.indicatorOpen);
        }
      }

      if (!mark && !old) return;
      cm.setGutterMarker(line, opts.gutter, mark);
    });
  } // copied from CodeMirror/src/util/dom.js


  function classTest(cls) {
    return new RegExp("(^|\\s)" + cls + "(?:$|\\s)\\s*");
  }

  function updateInViewport(cm) {
    var vp = cm.getViewport(),
        state = cm.state.foldGutter;
    if (!state) return;
    cm.operation(function () {
      updateFoldInfo(cm, vp.from, vp.to);
    });
    state.from = vp.from;
    state.to = vp.to;
  }

  function onGutterClick(cm, line, gutter) {
    var state = cm.state.foldGutter;
    if (!state) return;
    var opts = state.options;
    if (gutter != opts.gutter) return;
    var folded = isFolded(cm, line);
    if (folded) folded.clear();else cm.foldCode(Pos(line, 0), opts);
  }

  function onChange(cm) {
    var state = cm.state.foldGutter;
    if (!state) return;
    var opts = state.options;
    state.from = state.to = 0;
    clearTimeout(state.changeUpdate);
    state.changeUpdate = setTimeout(function () {
      updateInViewport(cm);
    }, opts.foldOnChangeTimeSpan || 600);
  }

  function onViewportChange(cm) {
    var state = cm.state.foldGutter;
    if (!state) return;
    var opts = state.options;
    clearTimeout(state.changeUpdate);
    state.changeUpdate = setTimeout(function () {
      var vp = cm.getViewport();

      if (state.from == state.to || vp.from - state.to > 20 || state.from - vp.to > 20) {
        updateInViewport(cm);
      } else {
        cm.operation(function () {
          if (vp.from < state.from) {
            updateFoldInfo(cm, vp.from, state.from);
            state.from = vp.from;
          }

          if (vp.to > state.to) {
            updateFoldInfo(cm, state.to, vp.to);
            state.to = vp.to;
          }
        });
      }
    }, opts.updateViewportTimeSpan || 400);
  }

  function onFold(cm, from) {
    var state = cm.state.foldGutter;
    if (!state) return;
    var line = from.line;
    if (line >= state.from && line < state.to) updateFoldInfo(cm, line, line + 1);
  }
});

/***/ }),

/***/ "X6VK":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("P56o");
var core = __webpack_require__("R5TD");
var hide = __webpack_require__("tjmq");
var redefine = __webpack_require__("sU/p");
var ctx = __webpack_require__("9liC");
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
  var key, own, out, exp;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    // export native or passed
    out = (own ? target : source)[key];
    // bind timers to global for call from export context
    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // extend global
    if (target) redefine(target, key, out, type & $export.U);
    // export
    if (exports[key] != out) hide(exports, key, exp);
    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
  }
};
global.core = core;
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),

/***/ "X7TY":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.propagationDelegate = void 0;

var graph_event_1 = __webpack_require__("65Qc");
/**
 *
 * @param group 分组
 * @param eventName 事件名
 * @param eventObject 事件对象
 */


function propagationDelegate(group, eventName, eventObject) {
  var event = new graph_event_1["default"](eventName, eventObject);
  event.target = group;
  event.propagationPath.push(group); // 从当前 group 开始触发 delegation

  group.emitDelegation(eventName, event);
  var parent = group.getParent(); // 执行冒泡

  while (parent) {
    // 委托事件要先触发
    parent.emitDelegation(eventName, event);
    event.propagationPath.push(parent);
    parent = parent.getParent();
  }
}

exports.propagationDelegate = propagationDelegate;

/***/ }),

/***/ "XDlq":
/***/ (function(module, exports, __webpack_require__) {

var _curry2 = __webpack_require__("OFPg");

var _dispatchable = __webpack_require__("ex0g");

var _xtake = __webpack_require__("FWEc");

var slice = __webpack_require__("w4Md");
/**
 * Returns the first `n` elements of the given list, string, or
 * transducer/transformer (or object with a `take` method).
 *
 * Dispatches to the `take` method of the second argument, if present.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig Number -> [a] -> [a]
 * @sig Number -> String -> String
 * @param {Number} n
 * @param {*} list
 * @return {*}
 * @see R.drop
 * @example
 *
 *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']
 *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']
 *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']
 *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']
 *      R.take(3, 'ramda');               //=> 'ram'
 *
 *      var personnel = [
 *        'Dave Brubeck',
 *        'Paul Desmond',
 *        'Eugene Wright',
 *        'Joe Morello',
 *        'Gerry Mulligan',
 *        'Bob Bates',
 *        'Joe Dodge',
 *        'Ron Crotty'
 *      ];
 *
 *      var takeFive = R.take(5);
 *      takeFive(personnel);
 *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']
 * @symb R.take(-1, [a, b]) = [a, b]
 * @symb R.take(0, [a, b]) = []
 * @symb R.take(1, [a, b]) = [a]
 * @symb R.take(2, [a, b]) = [a, b]
 */


module.exports = _curry2(_dispatchable(['take'], _xtake, function take(n, xs) {
  return slice(0, n < 0 ? Infinity : n, xs);
}));

/***/ }),

/***/ "XDzM":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("P56o");
var macrotask = __webpack_require__("5BMI").set;
var Observer = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var isNode = __webpack_require__("n+VH")(process) == 'process';

module.exports = function () {
  var head, last, notify;

  var flush = function () {
    var parent, fn;
    if (isNode && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (e) {
        if (head) notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (isNode) {
    notify = function () {
      process.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    var promise = Promise.resolve(undefined);
    notify = function () {
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }

  return function (fn) {
    var task = { fn: fn, next: undefined };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify();
    } last = task;
  };
};


/***/ }),

/***/ "XQie":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("W1QL");

__webpack_require__("K/PF");

__webpack_require__("t91x");

__webpack_require__("GkPX");

var _arrayFromIterator = __webpack_require__("P3BQ");

var _functionName = __webpack_require__("6z9p");

var _has = __webpack_require__("bprV");

var identical = __webpack_require__("1rpk");

var keys = __webpack_require__("bmJ9");

var type = __webpack_require__("CXzI");

module.exports = function _equals(a, b, stackA, stackB) {
  if (identical(a, b)) {
    return true;
  }

  if (type(a) !== type(b)) {
    return false;
  }

  if (a == null || b == null) {
    return false;
  }

  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {
    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);
  }

  if (typeof a.equals === 'function' || typeof b.equals === 'function') {
    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);
  }

  switch (type(a)) {
    case 'Arguments':
    case 'Array':
    case 'Object':
      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {
        return a === b;
      }

      break;

    case 'Boolean':
    case 'Number':
    case 'String':
      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {
        return false;
      }

      break;

    case 'Date':
      if (!identical(a.valueOf(), b.valueOf())) {
        return false;
      }

      break;

    case 'Error':
      return a.name === b.name && a.message === b.message;

    case 'RegExp':
      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {
        return false;
      }

      break;

    case 'Map':
    case 'Set':
      if (!_equals(_arrayFromIterator(a.entries()), _arrayFromIterator(b.entries()), stackA, stackB)) {
        return false;
      }

      break;

    case 'Int8Array':
    case 'Uint8Array':
    case 'Uint8ClampedArray':
    case 'Int16Array':
    case 'Uint16Array':
    case 'Int32Array':
    case 'Uint32Array':
    case 'Float32Array':
    case 'Float64Array':
      break;

    case 'ArrayBuffer':
      break;

    default:
      // Values of other types are only equal if identical.
      return false;
  }

  var keysA = keys(a);

  if (keysA.length !== keys(b).length) {
    return false;
  }

  var idx = stackA.length - 1;

  while (idx >= 0) {
    if (stackA[idx] === a) {
      return stackB[idx] === b;
    }

    idx -= 1;
  }

  stackA.push(a);
  stackB.push(b);
  idx = keysA.length - 1;

  while (idx >= 0) {
    var key = keysA[idx];

    if (!(_has(key, b) && _equals(b[key], a[key], stackA, stackB))) {
      return false;
    }

    idx -= 1;
  }

  stackA.pop();
  stackB.pop();
  return true;
};

/***/ }),

/***/ "XQta":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var dP = __webpack_require__("U1KF").f;
var create = __webpack_require__("Vx+c");
var redefineAll = __webpack_require__("+edc");
var ctx = __webpack_require__("9liC");
var anInstance = __webpack_require__("EusA");
var forOf = __webpack_require__("HqX2");
var $iterDefine = __webpack_require__("Jww/");
var step = __webpack_require__("VVFi");
var setSpecies = __webpack_require__("E8p1");
var DESCRIPTORS = __webpack_require__("GGqZ");
var fastKey = __webpack_require__("zIP/").fastKey;
var validate = __webpack_require__("SsG5");
var SIZE = DESCRIPTORS ? '_s' : 'size';

var getEntry = function (that, key) {
  // fast case
  var index = fastKey(key);
  var entry;
  if (index !== 'F') return that._i[index];
  // frozen object case
  for (entry = that._f; entry; entry = entry.n) {
    if (entry.k == key) return entry;
  }
};

module.exports = {
  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, NAME, '_i');
      that._t = NAME;         // collection type
      that._i = create(null); // index
      that._f = undefined;    // first entry
      that._l = undefined;    // last entry
      that[SIZE] = 0;         // size
      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.1.3.1 Map.prototype.clear()
      // 23.2.3.2 Set.prototype.clear()
      clear: function clear() {
        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {
          entry.r = true;
          if (entry.p) entry.p = entry.p.n = undefined;
          delete data[entry.i];
        }
        that._f = that._l = undefined;
        that[SIZE] = 0;
      },
      // 23.1.3.3 Map.prototype.delete(key)
      // 23.2.3.4 Set.prototype.delete(value)
      'delete': function (key) {
        var that = validate(this, NAME);
        var entry = getEntry(that, key);
        if (entry) {
          var next = entry.n;
          var prev = entry.p;
          delete that._i[entry.i];
          entry.r = true;
          if (prev) prev.n = next;
          if (next) next.p = prev;
          if (that._f == entry) that._f = next;
          if (that._l == entry) that._l = prev;
          that[SIZE]--;
        } return !!entry;
      },
      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
      forEach: function forEach(callbackfn /* , that = undefined */) {
        validate(this, NAME);
        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
        var entry;
        while (entry = entry ? entry.n : this._f) {
          f(entry.v, entry.k, this);
          // revert to the last existing entry
          while (entry && entry.r) entry = entry.p;
        }
      },
      // 23.1.3.7 Map.prototype.has(key)
      // 23.2.3.7 Set.prototype.has(value)
      has: function has(key) {
        return !!getEntry(validate(this, NAME), key);
      }
    });
    if (DESCRIPTORS) dP(C.prototype, 'size', {
      get: function () {
        return validate(this, NAME)[SIZE];
      }
    });
    return C;
  },
  def: function (that, key, value) {
    var entry = getEntry(that, key);
    var prev, index;
    // change existing entry
    if (entry) {
      entry.v = value;
    // create new entry
    } else {
      that._l = entry = {
        i: index = fastKey(key, true), // <- index
        k: key,                        // <- key
        v: value,                      // <- value
        p: prev = that._l,             // <- previous entry
        n: undefined,                  // <- next entry
        r: false                       // <- removed
      };
      if (!that._f) that._f = entry;
      if (prev) prev.n = entry;
      that[SIZE]++;
      // add to index
      if (index !== 'F') that._i[index] = entry;
    } return that;
  },
  getEntry: getEntry,
  setStrong: function (C, NAME, IS_MAP) {
    // add .keys, .values, .entries, [@@iterator]
    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
    $iterDefine(C, NAME, function (iterated, kind) {
      this._t = validate(iterated, NAME); // target
      this._k = kind;                     // kind
      this._l = undefined;                // previous
    }, function () {
      var that = this;
      var kind = that._k;
      var entry = that._l;
      // revert to the last existing entry
      while (entry && entry.r) entry = entry.p;
      // get next entry
      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
        // or finish the iteration
        that._t = undefined;
        return step(1);
      }
      // return step by kind
      if (kind == 'keys') return step(0, entry.k);
      if (kind == 'values') return step(0, entry.v);
      return step(0, [entry.k, entry.v]);
    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

    // add [@@species], 23.1.2.2, 23.2.2.2
    setSpecies(NAME);
  }
};


/***/ }),

/***/ "XUZz":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("V7cS");

__webpack_require__("9ovy");

// CodeMirror, copyright (c) by Marijn Haverbeke and others
// Distributed under an MIT license: https://codemirror.net/LICENSE
(function (mod) {
  if (true) // CommonJS
    mod(__webpack_require__("Dln1"), __webpack_require__("KvMB"), __webpack_require__("Bi0q"));else {}
})(function (CodeMirror) {
  "use strict"; // Depth means the amount of open braces in JS context, in XML
  // context 0 means not in tag, 1 means in tag, and 2 means in tag
  // and js block comment.

  function Context(state, mode, depth, prev) {
    this.state = state;
    this.mode = mode;
    this.depth = depth;
    this.prev = prev;
  }

  function copyContext(context) {
    return new Context(CodeMirror.copyState(context.mode, context.state), context.mode, context.depth, context.prev && copyContext(context.prev));
  }

  CodeMirror.defineMode("jsx", function (config, modeConfig) {
    var xmlMode = CodeMirror.getMode(config, {
      name: "xml",
      allowMissing: true,
      multilineTagIndentPastTag: false,
      allowMissingTagName: true
    });
    var jsMode = CodeMirror.getMode(config, modeConfig && modeConfig.base || "javascript");

    function flatXMLIndent(state) {
      var tagName = state.tagName;
      state.tagName = null;
      var result = xmlMode.indent(state, "", "");
      state.tagName = tagName;
      return result;
    }

    function token(stream, state) {
      if (state.context.mode == xmlMode) return xmlToken(stream, state, state.context);else return jsToken(stream, state, state.context);
    }

    function xmlToken(stream, state, cx) {
      if (cx.depth == 2) {
        // Inside a JS /* */ comment
        if (stream.match(/^.*?\*\//)) cx.depth = 1;else stream.skipToEnd();
        return "comment";
      }

      if (stream.peek() == "{") {
        xmlMode.skipAttribute(cx.state);
        var indent = flatXMLIndent(cx.state),
            xmlContext = cx.state.context; // If JS starts on same line as tag

        if (xmlContext && stream.match(/^[^>]*>\s*$/, false)) {
          while (xmlContext.prev && !xmlContext.startOfLine) {
            xmlContext = xmlContext.prev;
          } // If tag starts the line, use XML indentation level


          if (xmlContext.startOfLine) indent -= config.indentUnit; // Else use JS indentation level
          else if (cx.prev.state.lexical) indent = cx.prev.state.lexical.indented; // Else if inside of tag
        } else if (cx.depth == 1) {
          indent += config.indentUnit;
        }

        state.context = new Context(CodeMirror.startState(jsMode, indent), jsMode, 0, state.context);
        return null;
      }

      if (cx.depth == 1) {
        // Inside of tag
        if (stream.peek() == "<") {
          // Tag inside of tag
          xmlMode.skipAttribute(cx.state);
          state.context = new Context(CodeMirror.startState(xmlMode, flatXMLIndent(cx.state)), xmlMode, 0, state.context);
          return null;
        } else if (stream.match("//")) {
          stream.skipToEnd();
          return "comment";
        } else if (stream.match("/*")) {
          cx.depth = 2;
          return token(stream, state);
        }
      }

      var style = xmlMode.token(stream, cx.state),
          cur = stream.current(),
          stop;

      if (/\btag\b/.test(style)) {
        if (/>$/.test(cur)) {
          if (cx.state.context) cx.depth = 0;else state.context = state.context.prev;
        } else if (/^</.test(cur)) {
          cx.depth = 1;
        }
      } else if (!style && (stop = cur.indexOf("{")) > -1) {
        stream.backUp(cur.length - stop);
      }

      return style;
    }

    function jsToken(stream, state, cx) {
      if (stream.peek() == "<" && jsMode.expressionAllowed(stream, cx.state)) {
        jsMode.skipExpression(cx.state);
        state.context = new Context(CodeMirror.startState(xmlMode, jsMode.indent(cx.state, "", "")), xmlMode, 0, state.context);
        return null;
      }

      var style = jsMode.token(stream, cx.state);

      if (!style && cx.depth != null) {
        var cur = stream.current();

        if (cur == "{") {
          cx.depth++;
        } else if (cur == "}") {
          if (--cx.depth == 0) state.context = state.context.prev;
        }
      }

      return style;
    }

    return {
      startState: function startState() {
        return {
          context: new Context(CodeMirror.startState(jsMode), jsMode)
        };
      },
      copyState: function copyState(state) {
        return {
          context: copyContext(state.context)
        };
      },
      token: token,
      indent: function indent(state, textAfter, fullLine) {
        return state.context.mode.indent(state.context.state, textAfter, fullLine);
      },
      innerMode: function innerMode(state) {
        return state.context;
      }
    };
  }, "xml", "javascript");
  CodeMirror.defineMIME("text/jsx", "jsx");
  CodeMirror.defineMIME("text/typescript-jsx", {
    name: "jsx",
    base: {
      name: "javascript",
      typescript: true
    }
  });
});

/***/ }),

/***/ "XVYZ":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("oMRA");

__webpack_require__("6d4m");

__webpack_require__("V7cS");

__webpack_require__("Z8gF");

__webpack_require__("GkPX");

__webpack_require__("4aJ6");

__webpack_require__("M/4x");

__webpack_require__("t91x");

__webpack_require__("asZ9");

var gitUp = __webpack_require__("CyNN");
/**
 * gitUrlParse
 * Parses a Git url.
 *
 * @name gitUrlParse
 * @function
 * @param {String} url The Git url to parse.
 * @return {GitUrl} The `GitUrl` object containing:
 *
 *  - `protocols` (Array): An array with the url protocols (usually it has one element).
 *  - `port` (null|Number): The domain port.
 *  - `resource` (String): The url domain (including subdomains).
 *  - `user` (String): The authentication user (usually for ssh urls).
 *  - `pathname` (String): The url pathname.
 *  - `hash` (String): The url hash.
 *  - `search` (String): The url querystring value.
 *  - `href` (String): The input url.
 *  - `protocol` (String): The git url protocol.
 *  - `token` (String): The oauth token (could appear in the https urls).
 *  - `source` (String): The Git provider (e.g. `"github.com"`).
 *  - `owner` (String): The repository owner.
 *  - `name` (String): The repository name.
 *  - `ref` (String): The repository ref (e.g., "master" or "dev").
 *  - `filepath` (String): A filepath relative to the repository root.
 *  - `filepathtype` (String): The type of filepath in the url ("blob" or "tree").
 *  - `full_name` (String): The owner and name values in the `owner/name` format.
 *  - `toString` (Function): A function to stringify the parsed url into another url type.
 *  - `organization` (String): The organization the owner belongs to. This is CloudForge specific.
 *  - `git_suffix` (Boolean): Whether to add the `.git` suffix or not.
 *
 */


function gitUrlParse(url) {
  if (typeof url !== "string") {
    throw new Error("The url must be a string.");
  }

  var urlInfo = gitUp(url),
      sourceParts = urlInfo.resource.split("."),
      splits = null;

  urlInfo.toString = function (type) {
    return gitUrlParse.stringify(this, type);
  };

  urlInfo.source = sourceParts.length > 2 ? sourceParts.slice(1 - sourceParts.length).join(".") : urlInfo.source = urlInfo.resource; // Note: Some hosting services (e.g. Visual Studio Team Services) allow whitespace characters
  // in the repository and owner names so we decode the URL pieces to get the correct result

  urlInfo.git_suffix = /\.git$/.test(urlInfo.pathname);
  urlInfo.name = decodeURIComponent(urlInfo.pathname.replace(/^\//, '').replace(/\.git$/, ""));
  urlInfo.owner = decodeURIComponent(urlInfo.user);

  switch (urlInfo.source) {
    case "git.cloudforge.com":
      urlInfo.owner = urlInfo.user;
      urlInfo.organization = sourceParts[0];
      urlInfo.source = "cloudforge.com";
      break;

    case "visualstudio.com":
      // Handle VSTS SSH URLs
      if (urlInfo.resource === 'vs-ssh.visualstudio.com') {
        splits = urlInfo.name.split("/");

        if (splits.length === 4) {
          urlInfo.organization = splits[1];
          urlInfo.owner = splits[2];
          urlInfo.name = splits[3];
          urlInfo.full_name = splits[2] + '/' + splits[3];
        }

        break;
      } else {
        splits = urlInfo.name.split("/");

        if (splits.length === 2) {
          urlInfo.owner = splits[1];
          urlInfo.name = splits[1];
          urlInfo.full_name = '_git/' + urlInfo.name;
        } else if (splits.length === 3) {
          urlInfo.name = splits[2];

          if (splits[0] === 'DefaultCollection') {
            urlInfo.owner = splits[2];
            urlInfo.organization = splits[0];
            urlInfo.full_name = urlInfo.organization + '/_git/' + urlInfo.name;
          } else {
            urlInfo.owner = splits[0];
            urlInfo.full_name = urlInfo.owner + '/_git/' + urlInfo.name;
          }
        } else if (splits.length === 4) {
          urlInfo.organization = splits[0];
          urlInfo.owner = splits[1];
          urlInfo.name = splits[3];
          urlInfo.full_name = urlInfo.organization + '/' + urlInfo.owner + '/_git/' + urlInfo.name;
        }

        break;
      }

    // Azure DevOps (formerly Visual Studio Team Services)

    case "dev.azure.com":
    case "azure.com":
      if (urlInfo.resource === 'ssh.dev.azure.com') {
        splits = urlInfo.name.split("/");

        if (splits.length === 4) {
          urlInfo.organization = splits[1];
          urlInfo.owner = splits[2];
          urlInfo.name = splits[3];
        }

        break;
      } else {
        splits = urlInfo.name.split("/");

        if (splits.length === 5) {
          urlInfo.organization = splits[0];
          urlInfo.owner = splits[1];
          urlInfo.name = splits[4];
          urlInfo.full_name = '_git/' + urlInfo.name;
        } else if (splits.length === 3) {
          urlInfo.name = splits[2];

          if (splits[0] === 'DefaultCollection') {
            urlInfo.owner = splits[2];
            urlInfo.organization = splits[0];
            urlInfo.full_name = urlInfo.organization + '/_git/' + urlInfo.name;
          } else {
            urlInfo.owner = splits[0];
            urlInfo.full_name = urlInfo.owner + '/_git/' + urlInfo.name;
          }
        } else if (splits.length === 4) {
          urlInfo.organization = splits[0];
          urlInfo.owner = splits[1];
          urlInfo.name = splits[3];
          urlInfo.full_name = urlInfo.organization + '/' + urlInfo.owner + '/_git/' + urlInfo.name;
        }

        break;
      }

    default:
      splits = urlInfo.name.split("/");
      var nameIndex = splits.length - 1;

      if (splits.length >= 2) {
        var blobIndex = splits.indexOf("blob", 2);
        var treeIndex = splits.indexOf("tree", 2);
        var commitIndex = splits.indexOf("commit", 2);
        nameIndex = blobIndex > 0 ? blobIndex - 1 : treeIndex > 0 ? treeIndex - 1 : commitIndex > 0 ? commitIndex - 1 : nameIndex;
        urlInfo.owner = splits.slice(0, nameIndex).join('/');
        urlInfo.name = splits[nameIndex];

        if (commitIndex) {
          urlInfo.commit = splits[nameIndex + 2];
        }
      }

      urlInfo.ref = "";
      urlInfo.filepathtype = "";
      urlInfo.filepath = "";

      if (splits.length > nameIndex + 2 && ["blob", "tree"].indexOf(splits[nameIndex + 1]) >= 0) {
        urlInfo.filepathtype = splits[nameIndex + 1];
        urlInfo.ref = splits[nameIndex + 2];

        if (splits.length > nameIndex + 3) {
          urlInfo.filepath = splits.slice(nameIndex + 3).join('/');
        }
      }

      urlInfo.organization = urlInfo.owner;
      break;
  }

  if (!urlInfo.full_name) {
    urlInfo.full_name = urlInfo.owner;

    if (urlInfo.name) {
      urlInfo.full_name && (urlInfo.full_name += "/");
      urlInfo.full_name += urlInfo.name;
    }
  }

  return urlInfo;
}
/**
 * stringify
 * Stringifies a `GitUrl` object.
 *
 * @name stringify
 * @function
 * @param {GitUrl} obj The parsed Git url object.
 * @param {String} type The type of the stringified url (default `obj.protocol`).
 * @return {String} The stringified url.
 */


gitUrlParse.stringify = function (obj, type) {
  type = type || (obj.protocols && obj.protocols.length ? obj.protocols.join('+') : obj.protocol);
  var port = obj.port ? ":" + obj.port : '';
  var user = obj.user || 'git';
  var maybeGitSuffix = obj.git_suffix ? ".git" : "";

  switch (type) {
    case "ssh":
      if (port) return "ssh://" + user + "@" + obj.resource + port + "/" + obj.full_name + maybeGitSuffix;else return user + "@" + obj.resource + ":" + obj.full_name + maybeGitSuffix;

    case "git+ssh":
    case "ssh+git":
    case "ftp":
    case "ftps":
      return type + "://" + user + "@" + obj.resource + port + "/" + obj.full_name + maybeGitSuffix;

    case "http":
    case "https":
      var auth = obj.token ? buildToken(obj) : obj.user && (obj.protocols.includes('http') || obj.protocols.includes('https')) ? obj.user + "@" : "";
      return type + "://" + auth + obj.resource + port + "/" + obj.full_name + maybeGitSuffix;

    default:
      return obj.href;
  }
};
/*!
 * buildToken
 * Builds OAuth token prefix (helper function)
 *
 * @name buildToken
 * @function
 * @param {GitUrl} obj The parsed Git url object.
 * @return {String} token prefix
 */


function buildToken(obj) {
  switch (obj.source) {
    case "bitbucket.org":
      return "x-token-auth:" + obj.token + "@";

    default:
      return obj.token + "@";
  }
}

module.exports = gitUrlParse;

/***/ }),

/***/ "XfXe":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _style_index_less__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("SwVN");
/* harmony import */ var _style_index_less__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_index_less__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("DzUA");
/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_index_less__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _tooltip_style__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("WSfz");

 // style dependencies
// deps-lint-skip: layout



/***/ }),

/***/ "Xfku":
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__("n+VH");
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),

/***/ "XgqJ":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("5hJT");

__webpack_require__("d3/y");

var _interopRequireDefault = __webpack_require__("63Ad");

var _interopRequireWildcard = __webpack_require__("vdEC");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var React = _interopRequireWildcard(__webpack_require__("mXGw"));

var _CheckOutlined = _interopRequireDefault(__webpack_require__("h3fB"));

var _AntdIcon = _interopRequireDefault(__webpack_require__("CxZ5")); // GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY


var CheckOutlined = function CheckOutlined(props, ref) {
  return React.createElement(_AntdIcon["default"], Object.assign({}, props, {
    ref: ref,
    icon: _CheckOutlined["default"]
  }));
};

CheckOutlined.displayName = 'CheckOutlined';

var _default = React.forwardRef(CheckOutlined);

exports["default"] = _default;

/***/ }),

/***/ "Xj5l":
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),

/***/ "Xx9V":
/***/ (function(module, exports) {

module.exports = function _reduced(x) {
  return x && x['@@transducer/reduced'] ? x : {
    '@@transducer/value': x,
    '@@transducer/reduced': true
  };
};

/***/ }),

/***/ "XyBk":
/***/ (function(module, exports, __webpack_require__) {

// prefer default export if available
var preferDefault = function preferDefault(m) {
  return m && m["default"] || m;
};

exports.components = {
  "component---antv-gatsby-theme-antv-site-pages-404-tsx": function componentAntvGatsbyThemeAntvSitePages404Tsx() {
    return __webpack_require__.e(/* import() | component---antv-gatsby-theme-antv-site-pages-404-tsx */ 0).then(__webpack_require__.bind(null, "EVqs"));
  },
  "component---antv-gatsby-theme-antv-site-pages-index-tsx": function componentAntvGatsbyThemeAntvSitePagesIndexTsx() {
    return __webpack_require__.e(/* import() | component---antv-gatsby-theme-antv-site-pages-index-tsx */ 0).then(__webpack_require__.bind(null, "KByP"));
  },
  "component---antv-gatsby-theme-antv-site-templates-document-tsx": function componentAntvGatsbyThemeAntvSiteTemplatesDocumentTsx() {
    return __webpack_require__.e(/* import() | component---antv-gatsby-theme-antv-site-templates-document-tsx */ 0).then(__webpack_require__.bind(null, "+loJ"));
  },
  "component---antv-gatsby-theme-antv-site-templates-example-tsx": function componentAntvGatsbyThemeAntvSiteTemplatesExampleTsx() {
    return __webpack_require__.e(/* import() | component---antv-gatsby-theme-antv-site-templates-example-tsx */ 0).then(__webpack_require__.bind(null, "Rvvu"));
  },
  "component---site-pages-independent-en-tsx": function componentSitePagesIndependentEnTsx() {
    return __webpack_require__.e(/* import() | component---site-pages-independent-en-tsx */ 0).then(__webpack_require__.bind(null, "tOJG"));
  },
  "component---site-pages-independent-zh-tsx": function componentSitePagesIndependentZhTsx() {
    return __webpack_require__.e(/* import() | component---site-pages-independent-zh-tsx */ 0).then(__webpack_require__.bind(null, "BxFN"));
  },
  "component---site-pages-index-en-tsx": function componentSitePagesIndexEnTsx() {
    return __webpack_require__.e(/* import() | component---site-pages-index-en-tsx */ 0).then(__webpack_require__.bind(null, "ug36"));
  },
  "component---site-pages-index-zh-tsx": function componentSitePagesIndexZhTsx() {
    return __webpack_require__.e(/* import() | component---site-pages-index-zh-tsx */ 0).then(__webpack_require__.bind(null, "jAeI"));
  }
};

/***/ }),

/***/ "Y8EE":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return warning; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return isIconDefinition; });
/* unused harmony export normalizeAttrs */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return generate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return getSecondaryColor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return normalizeTwoToneColors; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return svgBaseProps; });
/* unused harmony export iconStyles */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return useInsertStyles; });
/* harmony import */ var core_js_modules_es6_array_is_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("+3V6");
/* harmony import */ var core_js_modules_es6_array_is_array__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_is_array__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_array_map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("yIlq");
/* harmony import */ var core_js_modules_es6_array_map__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_map__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es6_array_reduce__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("3y5y");
/* harmony import */ var core_js_modules_es6_array_reduce__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_reduce__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("GkPX");
/* harmony import */ var core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("d3/y");
/* harmony import */ var core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es6_object_define_properties__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("6/FK");
/* harmony import */ var core_js_modules_es6_object_define_properties__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_define_properties__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es7_object_get_own_property_descriptors__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("2Tod");
/* harmony import */ var core_js_modules_es7_object_get_own_property_descriptors__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es7_object_get_own_property_descriptors__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es6_array_for_each__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("7lGJ");
/* harmony import */ var core_js_modules_es6_array_for_each__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_for_each__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es6_array_filter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("9p7t");
/* harmony import */ var core_js_modules_es6_array_filter__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_filter__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("ABKx");
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("W1QL");
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var core_js_modules_es6_array_iterator__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("K/PF");
/* harmony import */ var core_js_modules_es6_array_iterator__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_iterator__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("t91x");
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var core_js_modules_es6_object_keys__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("75LO");
/* harmony import */ var core_js_modules_es6_object_keys__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_keys__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__("mK0O");
/* harmony import */ var _babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__("J1LG");
/* harmony import */ var _ant_design_colors__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__("LTuF");
/* harmony import */ var _ant_design_colors__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(_ant_design_colors__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__("mXGw");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_17__);
/* harmony import */ var rc_util_es_warning__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__("IFhY");
/* harmony import */ var insert_css__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__("3Q0B");
/* harmony import */ var insert_css__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(insert_css__WEBPACK_IMPORTED_MODULE_19__);

















function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_14__[/* default */ "a"])(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}





function warning(valid, message) {
  Object(rc_util_es_warning__WEBPACK_IMPORTED_MODULE_18__[/* default */ "a"])(valid, "[@ant-design/icons] ".concat(message));
}
function isIconDefinition(target) {
  return Object(_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_15__[/* default */ "a"])(target) === 'object' && typeof target.name === 'string' && typeof target.theme === 'string' && (Object(_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_15__[/* default */ "a"])(target.icon) === 'object' || typeof target.icon === 'function');
}
function normalizeAttrs() {
  var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return Object.keys(attrs).reduce(function (acc, key) {
    var val = attrs[key];

    switch (key) {
      case 'class':
        acc.className = val;
        delete acc["class"];
        break;

      default:
        acc[key] = val;
    }

    return acc;
  }, {});
}
function generate(node, key, rootProps) {
  if (!rootProps) {
    return react__WEBPACK_IMPORTED_MODULE_17___default.a.createElement(node.tag, _objectSpread({
      key: key
    }, normalizeAttrs(node.attrs)), (node.children || []).map(function (child, index) {
      return generate(child, "".concat(key, "-").concat(node.tag, "-").concat(index));
    }));
  }

  return react__WEBPACK_IMPORTED_MODULE_17___default.a.createElement(node.tag, _objectSpread(_objectSpread({
    key: key
  }, normalizeAttrs(node.attrs)), rootProps), (node.children || []).map(function (child, index) {
    return generate(child, "".concat(key, "-").concat(node.tag, "-").concat(index));
  }));
}
function getSecondaryColor(primaryColor) {
  // choose the second color
  return Object(_ant_design_colors__WEBPACK_IMPORTED_MODULE_16__["generate"])(primaryColor)[0];
}
function normalizeTwoToneColors(twoToneColor) {
  if (!twoToneColor) {
    return [];
  }

  return Array.isArray(twoToneColor) ? twoToneColor : [twoToneColor];
} // These props make sure that the SVG behaviours like general text.
// Reference: https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4

var svgBaseProps = {
  width: '1em',
  height: '1em',
  fill: 'currentColor',
  'aria-hidden': 'true',
  focusable: 'false'
};
var iconStyles = "\n.anticon {\n  display: inline-block;\n  color: inherit;\n  font-style: normal;\n  line-height: 0;\n  text-align: center;\n  text-transform: none;\n  vertical-align: -0.125em;\n  text-rendering: optimizeLegibility;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.anticon > * {\n  line-height: 1;\n}\n\n.anticon svg {\n  display: inline-block;\n}\n\n.anticon::before {\n  display: none;\n}\n\n.anticon .anticon-icon {\n  display: block;\n}\n\n.anticon[tabindex] {\n  cursor: pointer;\n}\n\n.anticon-spin::before,\n.anticon-spin {\n  display: inline-block;\n  -webkit-animation: loadingCircle 1s infinite linear;\n  animation: loadingCircle 1s infinite linear;\n}\n\n@-webkit-keyframes loadingCircle {\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loadingCircle {\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n";
var cssInjectedFlag = false;
var useInsertStyles = function useInsertStyles() {
  var styleStr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : iconStyles;
  Object(react__WEBPACK_IMPORTED_MODULE_17__["useEffect"])(function () {
    if (!cssInjectedFlag) {
      Object(insert_css__WEBPACK_IMPORTED_MODULE_19__["insertCss"])(styleStr, {
        prepend: true
      });
      cssInjectedFlag = true;
    }
  }, []);
};

/***/ }),

/***/ "YLt+":
/***/ (function(module) {

module.exports = JSON.parse("[{\"fromPath\":\"/zh/docs/specification\",\"isPermanent\":true,\"redirectInBrowser\":true,\"toPath\":\"/zh/docs/specification/getting-started\"},{\"fromPath\":\"/en/docs/other\",\"isPermanent\":true,\"redirectInBrowser\":true,\"toPath\":\"/en/docs/other/getting-started\"},{\"fromPath\":\"/en/docs/specification\",\"isPermanent\":true,\"redirectInBrowser\":true,\"toPath\":\"/en/docs/specification/getting-started\"},{\"fromPath\":\"/zh/docs/other\",\"isPermanent\":true,\"redirectInBrowser\":true,\"toPath\":\"/zh/docs/other/getting-started\"},{\"fromPath\":\"/zh/examples\",\"isPermanent\":true,\"redirectInBrowser\":true,\"toPath\":\"/zh/examples/gallery\"},{\"fromPath\":\"/en/examples\",\"isPermanent\":true,\"redirectInBrowser\":true,\"toPath\":\"/en/examples/gallery\"}]");

/***/ }),

/***/ "YSJY":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.function.bind.js
var es6_function_bind = __webpack_require__("o7PZ");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.map.js
var es6_array_map = __webpack_require__("yIlq");

// EXTERNAL MODULE: ../node_modules/core-js/modules/web.dom.iterable.js
var web_dom_iterable = __webpack_require__("W1QL");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.iterator.js
var es6_array_iterator = __webpack_require__("K/PF");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.to-string.js
var es6_object_to_string = __webpack_require__("t91x");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.keys.js
var es6_object_keys = __webpack_require__("75LO");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.for-each.js
var es6_array_for_each = __webpack_require__("7lGJ");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.filter.js
var es6_array_filter = __webpack_require__("9p7t");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.date.now.js
var es6_date_now = __webpack_require__("7t+O");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.set-prototype-of.js
var es6_object_set_prototype_of = __webpack_require__("1qKx");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.create.js
var es6_object_create = __webpack_require__("PAbq");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.define-property.js
var es6_object_define_property = __webpack_require__("d3/y");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.assign.js
var es6_object_assign = __webpack_require__("5hJT");

// EXTERNAL MODULE: ../node_modules/react/index.js
var react = __webpack_require__("mXGw");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// CONCATENATED MODULE: ../node_modules/rc-util/es/unsafeLifecyclesPolyfill.js


var unsafeLifecyclesPolyfill_unsafeLifecyclesPolyfill = function unsafeLifecyclesPolyfill(Component) {
  var prototype = Component.prototype;

  if (!prototype || !prototype.isReactComponent) {
    throw new Error('Can only polyfill class components');
  } // only handle componentWillReceiveProps


  if (typeof prototype.componentWillReceiveProps !== 'function') {
    return Component;
  } // In React 16.9, React.Profiler was introduced together with UNSAFE_componentWillReceiveProps
  // https://reactjs.org/blog/2019/08/08/react-v16.9.0.html#performance-measurements-with-reactprofiler


  if (!react_default.a.Profiler) {
    return Component;
  } // Here polyfill get started


  prototype.UNSAFE_componentWillReceiveProps = prototype.componentWillReceiveProps;
  delete prototype.componentWillReceiveProps;
  return Component;
};

/* harmony default export */ var es_unsafeLifecyclesPolyfill = (unsafeLifecyclesPolyfill_unsafeLifecyclesPolyfill);
// CONCATENATED MODULE: ../node_modules/rc-animate/es/ChildrenUtils.js


function toArrayChildren(children) {
  var ret = [];
  react_default.a.Children.forEach(children, function (child) {
    ret.push(child);
  });
  return ret;
}
function findChildInChildrenByKey(children, key) {
  var ret = null;

  if (children) {
    children.forEach(function (child) {
      if (ret) {
        return;
      }

      if (child && child.key === key) {
        ret = child;
      }
    });
  }

  return ret;
}
function findShownChildInChildrenByKey(children, key, showProp) {
  var ret = null;

  if (children) {
    children.forEach(function (child) {
      if (child && child.key === key && child.props[showProp]) {
        if (ret) {
          throw new Error('two child with same key for <rc-animate> children');
        }

        ret = child;
      }
    });
  }

  return ret;
}
function findHiddenChildInChildrenByKey(children, key, showProp) {
  var found = 0;

  if (children) {
    children.forEach(function (child) {
      if (found) {
        return;
      }

      found = child && child.key === key && !child.props[showProp];
    });
  }

  return found;
}
function isSameChildren(c1, c2, showProp) {
  var same = c1.length === c2.length;

  if (same) {
    c1.forEach(function (child, index) {
      var child2 = c2[index];

      if (child && child2) {
        if (child && !child2 || !child && child2) {
          same = false;
        } else if (child.key !== child2.key) {
          same = false;
        } else if (showProp && child.props[showProp] !== child2.props[showProp]) {
          same = false;
        }
      }
    });
  }

  return same;
}
function mergeChildren(prev, next) {
  var ret = []; // For each key of `next`, the list of keys to insert before that key in
  // the combined list

  var nextChildrenPending = {};
  var pendingChildren = [];
  prev.forEach(function (child) {
    if (child && findChildInChildrenByKey(next, child.key)) {
      if (pendingChildren.length) {
        nextChildrenPending[child.key] = pendingChildren;
        pendingChildren = [];
      }
    } else {
      pendingChildren.push(child);
    }
  });
  next.forEach(function (child) {
    if (child && Object.prototype.hasOwnProperty.call(nextChildrenPending, child.key)) {
      ret = ret.concat(nextChildrenPending[child.key]);
    }

    ret.push(child);
  });
  ret = ret.concat(pendingChildren);
  return ret;
}
// EXTERNAL MODULE: ../node_modules/react-dom/index.js
var react_dom = __webpack_require__("xARA");
var react_dom_default = /*#__PURE__*/__webpack_require__.n(react_dom);

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.to-string.js
var es6_regexp_to_string = __webpack_require__("4aJ6");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.date.to-string.js
var es6_date_to_string = __webpack_require__("M/4x");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.function.name.js
var es6_function_name = __webpack_require__("GkPX");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es7.symbol.async-iterator.js
var es7_symbol_async_iterator = __webpack_require__("+jjx");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.symbol.js
var es6_symbol = __webpack_require__("ABKx");

// EXTERNAL MODULE: ../node_modules/@ant-design/css-animation/es/Event.js
var Event = __webpack_require__("V5Oj");

// CONCATENATED MODULE: ../node_modules/@ant-design/css-animation/es/index.js








var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
};


var isCssAnimationSupported = Event["a" /* default */].endEvents.length !== 0;
var capitalPrefixes = ['Webkit', 'Moz', 'O', // ms is special .... !
'ms'];
var prefixes = ['-webkit-', '-moz-', '-o-', 'ms-', ''];

function getStyleProperty(node, name) {
  // old ff need null, https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle
  var style = window.getComputedStyle(node, null);
  var ret = '';

  for (var i = 0; i < prefixes.length; i++) {
    ret = style.getPropertyValue(prefixes[i] + name);

    if (ret) {
      break;
    }
  }

  return ret;
}

function fixBrowserByTimeout(node) {
  if (isCssAnimationSupported) {
    var transitionDelay = parseFloat(getStyleProperty(node, 'transition-delay')) || 0;
    var transitionDuration = parseFloat(getStyleProperty(node, 'transition-duration')) || 0;
    var animationDelay = parseFloat(getStyleProperty(node, 'animation-delay')) || 0;
    var animationDuration = parseFloat(getStyleProperty(node, 'animation-duration')) || 0;
    var time = Math.max(transitionDuration + transitionDelay, animationDuration + animationDelay); // sometimes, browser bug

    node.rcEndAnimTimeout = setTimeout(function () {
      node.rcEndAnimTimeout = null;

      if (node.rcEndListener) {
        node.rcEndListener();
      }
    }, time * 1000 + 200);
  }
}

function clearBrowserBugTimeout(node) {
  if (node.rcEndAnimTimeout) {
    clearTimeout(node.rcEndAnimTimeout);
    node.rcEndAnimTimeout = null;
  }
}

var es_cssAnimation = function cssAnimation(node, transitionName, endCallback) {
  var nameIsObj = (typeof transitionName === 'undefined' ? 'undefined' : _typeof(transitionName)) === 'object';
  var className = nameIsObj ? transitionName.name : transitionName;
  var activeClassName = nameIsObj ? transitionName.active : transitionName + '-active';
  var end = endCallback;
  var start = void 0;
  var active = void 0;

  if (endCallback && Object.prototype.toString.call(endCallback) === '[object Object]') {
    end = endCallback.end;
    start = endCallback.start;
    active = endCallback.active;
  }

  if (node.rcEndListener) {
    node.rcEndListener();
  }

  node.rcEndListener = function (e) {
    if (e && e.target !== node) {
      return;
    }

    if (node.rcAnimTimeout) {
      clearTimeout(node.rcAnimTimeout);
      node.rcAnimTimeout = null;
    }

    clearBrowserBugTimeout(node);
    node.classList.remove(className);
    node.classList.remove(activeClassName);
    Event["a" /* default */].removeEndEventListener(node, node.rcEndListener);
    node.rcEndListener = null; // Usually this optional end is used for informing an owner of
    // a leave animation and telling it to remove the child.

    if (end) {
      end();
    }
  };

  Event["a" /* default */].addEndEventListener(node, node.rcEndListener);

  if (start) {
    start();
  }

  node.classList.add(className);
  node.rcAnimTimeout = setTimeout(function () {
    node.rcAnimTimeout = null;
    node.classList.add(activeClassName);

    if (active) {
      setTimeout(active, 0);
    }

    fixBrowserByTimeout(node); // 30ms for firefox
  }, 30);
  return {
    stop: function stop() {
      if (node.rcEndListener) {
        node.rcEndListener();
      }
    }
  };
};

es_cssAnimation.style = function (node, style, callback) {
  if (node.rcEndListener) {
    node.rcEndListener();
  }

  node.rcEndListener = function (e) {
    if (e && e.target !== node) {
      return;
    }

    if (node.rcAnimTimeout) {
      clearTimeout(node.rcAnimTimeout);
      node.rcAnimTimeout = null;
    }

    clearBrowserBugTimeout(node);
    Event["a" /* default */].removeEndEventListener(node, node.rcEndListener);
    node.rcEndListener = null; // Usually this optional callback is used for informing an owner of
    // a leave animation and telling it to remove the child.

    if (callback) {
      callback();
    }
  };

  Event["a" /* default */].addEndEventListener(node, node.rcEndListener);
  node.rcAnimTimeout = setTimeout(function () {
    for (var s in style) {
      if (style.hasOwnProperty(s)) {
        node.style[s] = style[s];
      }
    }

    node.rcAnimTimeout = null;
    fixBrowserByTimeout(node);
  }, 0);
};

es_cssAnimation.setTransition = function (node, p, value) {
  var property = p;
  var v = value;

  if (value === undefined) {
    v = property;
    property = '';
  }

  property = property || '';
  capitalPrefixes.forEach(function (prefix) {
    node.style[prefix + 'Transition' + property] = v;
  });
};

es_cssAnimation.isCssAnimationSupported = isCssAnimationSupported;

/* harmony default export */ var es = (es_cssAnimation);
// CONCATENATED MODULE: ../node_modules/rc-animate/es/util/animate.js
var util = {
  isAppearSupported: function isAppearSupported(props) {
    return props.transitionName && props.transitionAppear || props.animation.appear;
  },
  isEnterSupported: function isEnterSupported(props) {
    return props.transitionName && props.transitionEnter || props.animation.enter;
  },
  isLeaveSupported: function isLeaveSupported(props) {
    return props.transitionName && props.transitionLeave || props.animation.leave;
  },
  allowAppearCallback: function allowAppearCallback(props) {
    return props.transitionAppear || props.animation.appear;
  },
  allowEnterCallback: function allowEnterCallback(props) {
    return props.transitionEnter || props.animation.enter;
  },
  allowLeaveCallback: function allowLeaveCallback(props) {
    return props.transitionLeave || props.animation.leave;
  }
};
/* harmony default export */ var animate = (util);
// CONCATENATED MODULE: ../node_modules/rc-animate/es/AnimateChild.js




var _createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
/* eslint react/prop-types: 0 */






var transitionMap = {
  enter: 'transitionEnter',
  appear: 'transitionAppear',
  leave: 'transitionLeave'
};

var AnimateChild_AnimateChild = function (_React$Component) {
  _inherits(AnimateChild, _React$Component);

  function AnimateChild() {
    _classCallCheck(this, AnimateChild);

    return _possibleConstructorReturn(this, (AnimateChild.__proto__ || Object.getPrototypeOf(AnimateChild)).apply(this, arguments));
  }

  _createClass(AnimateChild, [{
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.stop();
    }
  }, {
    key: 'componentWillEnter',
    value: function componentWillEnter(done) {
      if (animate.isEnterSupported(this.props)) {
        this.transition('enter', done);
      } else {
        done();
      }
    }
  }, {
    key: 'componentWillAppear',
    value: function componentWillAppear(done) {
      if (animate.isAppearSupported(this.props)) {
        this.transition('appear', done);
      } else {
        done();
      }
    }
  }, {
    key: 'componentWillLeave',
    value: function componentWillLeave(done) {
      if (animate.isLeaveSupported(this.props)) {
        this.transition('leave', done);
      } else {
        // always sync, do not interupt with react component life cycle
        // update hidden -> animate hidden ->
        // didUpdate -> animate leave -> unmount (if animate is none)
        done();
      }
    }
  }, {
    key: 'transition',
    value: function transition(animationType, finishCallback) {
      var _this2 = this;

      var node = react_dom_default.a.findDOMNode(this);
      var props = this.props;
      var transitionName = props.transitionName;
      var nameIsObj = typeof transitionName === 'object';
      this.stop();

      var end = function end() {
        _this2.stopper = null;
        finishCallback();
      };

      if ((isCssAnimationSupported || !props.animation[animationType]) && transitionName && props[transitionMap[animationType]]) {
        var name = nameIsObj ? transitionName[animationType] : transitionName + '-' + animationType;
        var activeName = name + '-active';

        if (nameIsObj && transitionName[animationType + 'Active']) {
          activeName = transitionName[animationType + 'Active'];
        }

        this.stopper = es(node, {
          name: name,
          active: activeName
        }, end);
      } else {
        this.stopper = props.animation[animationType](node, end);
      }
    }
  }, {
    key: 'stop',
    value: function stop() {
      var stopper = this.stopper;

      if (stopper) {
        this.stopper = null;
        stopper.stop();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return this.props.children;
    }
  }]);

  return AnimateChild;
}(react_default.a.Component);

/* harmony default export */ var es_AnimateChild = (AnimateChild_AnimateChild);
// CONCATENATED MODULE: ../node_modules/rc-animate/es/Animate.js














var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var Animate_createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function Animate_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function Animate_possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function Animate_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
/* eslint react/prop-types: 0 */







var defaultKey = 'rc_animate_' + Date.now();

function getChildrenFromProps(props) {
  var children = props.children;

  if (react_default.a.isValidElement(children)) {
    if (!children.key) {
      return react_default.a.cloneElement(children, {
        key: defaultKey
      });
    }
  }

  return children;
}

function noop() {}

var Animate_Animate = function (_React$Component) {
  Animate_inherits(Animate, _React$Component);

  function Animate(props) {
    Animate_classCallCheck(this, Animate);

    var _this = Animate_possibleConstructorReturn(this, (Animate.__proto__ || Object.getPrototypeOf(Animate)).call(this, props));

    Animate_initialiseProps.call(_this);

    _this.currentlyAnimatingKeys = {};
    _this.keysToEnter = [];
    _this.keysToLeave = [];
    _this.state = {
      children: toArrayChildren(getChildrenFromProps(props))
    };
    _this.childrenRefs = {};
    return _this;
  } // eslint-disable-line


  Animate_createClass(Animate, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      var showProp = this.props.showProp;
      var children = this.state.children;

      if (showProp) {
        children = children.filter(function (child) {
          return !!child.props[showProp];
        });
      }

      children.forEach(function (child) {
        if (child) {
          _this2.performAppear(child.key);
        }
      });
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var _this3 = this;

      this.nextProps = nextProps;
      var nextChildren = toArrayChildren(getChildrenFromProps(nextProps));
      var props = this.props; // exclusive needs immediate response

      if (props.exclusive) {
        Object.keys(this.currentlyAnimatingKeys).forEach(function (key) {
          _this3.stop(key);
        });
      }

      var showProp = props.showProp;
      var currentlyAnimatingKeys = this.currentlyAnimatingKeys; // last props children if exclusive

      var currentChildren = props.exclusive ? toArrayChildren(getChildrenFromProps(props)) : this.state.children; // in case destroy in showProp mode

      var newChildren = [];

      if (showProp) {
        currentChildren.forEach(function (currentChild) {
          var nextChild = currentChild && findChildInChildrenByKey(nextChildren, currentChild.key);
          var newChild = void 0;

          if ((!nextChild || !nextChild.props[showProp]) && currentChild.props[showProp]) {
            newChild = react_default.a.cloneElement(nextChild || currentChild, _defineProperty({}, showProp, true));
          } else {
            newChild = nextChild;
          }

          if (newChild) {
            newChildren.push(newChild);
          }
        });
        nextChildren.forEach(function (nextChild) {
          if (!nextChild || !findChildInChildrenByKey(currentChildren, nextChild.key)) {
            newChildren.push(nextChild);
          }
        });
      } else {
        newChildren = mergeChildren(currentChildren, nextChildren);
      } // need render to avoid update


      this.setState({
        children: newChildren
      });
      nextChildren.forEach(function (child) {
        var key = child && child.key;

        if (child && currentlyAnimatingKeys[key]) {
          return;
        }

        var hasPrev = child && findChildInChildrenByKey(currentChildren, key);

        if (showProp) {
          var showInNext = child.props[showProp];

          if (hasPrev) {
            var showInNow = findShownChildInChildrenByKey(currentChildren, key, showProp);

            if (!showInNow && showInNext) {
              _this3.keysToEnter.push(key);
            }
          } else if (showInNext) {
            _this3.keysToEnter.push(key);
          }
        } else if (!hasPrev) {
          _this3.keysToEnter.push(key);
        }
      });
      currentChildren.forEach(function (child) {
        var key = child && child.key;

        if (child && currentlyAnimatingKeys[key]) {
          return;
        }

        var hasNext = child && findChildInChildrenByKey(nextChildren, key);

        if (showProp) {
          var showInNow = child.props[showProp];

          if (hasNext) {
            var showInNext = findShownChildInChildrenByKey(nextChildren, key, showProp);

            if (!showInNext && showInNow) {
              _this3.keysToLeave.push(key);
            }
          } else if (showInNow) {
            _this3.keysToLeave.push(key);
          }
        } else if (!hasNext) {
          _this3.keysToLeave.push(key);
        }
      });
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      var keysToEnter = this.keysToEnter;
      this.keysToEnter = [];
      keysToEnter.forEach(this.performEnter);
      var keysToLeave = this.keysToLeave;
      this.keysToLeave = [];
      keysToLeave.forEach(this.performLeave);
    }
  }, {
    key: 'isValidChildByKey',
    value: function isValidChildByKey(currentChildren, key) {
      var showProp = this.props.showProp;

      if (showProp) {
        return findShownChildInChildrenByKey(currentChildren, key, showProp);
      }

      return findChildInChildrenByKey(currentChildren, key);
    }
  }, {
    key: 'stop',
    value: function stop(key) {
      delete this.currentlyAnimatingKeys[key];
      var component = this.childrenRefs[key];

      if (component) {
        component.stop();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this4 = this;

      var props = this.props;
      this.nextProps = props;
      var stateChildren = this.state.children;
      var children = null;

      if (stateChildren) {
        children = stateChildren.map(function (child) {
          if (child === null || child === undefined) {
            return child;
          }

          if (!child.key) {
            throw new Error('must set key for <rc-animate> children');
          }

          return react_default.a.createElement(es_AnimateChild, {
            key: child.key,
            ref: function ref(node) {
              _this4.childrenRefs[child.key] = node;
            },
            animation: props.animation,
            transitionName: props.transitionName,
            transitionEnter: props.transitionEnter,
            transitionAppear: props.transitionAppear,
            transitionLeave: props.transitionLeave
          }, child);
        });
      }

      var Component = props.component;

      if (Component) {
        var passedProps = props;

        if (typeof Component === 'string') {
          passedProps = _extends({
            className: props.className,
            style: props.style
          }, props.componentProps);
        }

        return react_default.a.createElement(Component, passedProps, children);
      }

      return children[0] || null;
    }
  }]);

  return Animate;
}(react_default.a.Component);

Animate_Animate.isAnimate = true;
Animate_Animate.defaultProps = {
  animation: {},
  component: 'span',
  componentProps: {},
  transitionEnter: true,
  transitionLeave: true,
  transitionAppear: false,
  onEnd: noop,
  onEnter: noop,
  onLeave: noop,
  onAppear: noop
};

var Animate_initialiseProps = function _initialiseProps() {
  var _this5 = this;

  this.performEnter = function (key) {
    // may already remove by exclusive
    if (_this5.childrenRefs[key]) {
      _this5.currentlyAnimatingKeys[key] = true;

      _this5.childrenRefs[key].componentWillEnter(_this5.handleDoneAdding.bind(_this5, key, 'enter'));
    }
  };

  this.performAppear = function (key) {
    if (_this5.childrenRefs[key]) {
      _this5.currentlyAnimatingKeys[key] = true;

      _this5.childrenRefs[key].componentWillAppear(_this5.handleDoneAdding.bind(_this5, key, 'appear'));
    }
  };

  this.handleDoneAdding = function (key, type) {
    var props = _this5.props;
    delete _this5.currentlyAnimatingKeys[key]; // if update on exclusive mode, skip check

    if (props.exclusive && props !== _this5.nextProps) {
      return;
    }

    var currentChildren = toArrayChildren(getChildrenFromProps(props));

    if (!_this5.isValidChildByKey(currentChildren, key)) {
      // exclusive will not need this
      _this5.performLeave(key);
    } else if (type === 'appear') {
      if (animate.allowAppearCallback(props)) {
        props.onAppear(key);
        props.onEnd(key, true);
      }
    } else if (animate.allowEnterCallback(props)) {
      props.onEnter(key);
      props.onEnd(key, true);
    }
  };

  this.performLeave = function (key) {
    // may already remove by exclusive
    if (_this5.childrenRefs[key]) {
      _this5.currentlyAnimatingKeys[key] = true;

      _this5.childrenRefs[key].componentWillLeave(_this5.handleDoneLeaving.bind(_this5, key));
    }
  };

  this.handleDoneLeaving = function (key) {
    var props = _this5.props;
    delete _this5.currentlyAnimatingKeys[key]; // if update on exclusive mode, skip check

    if (props.exclusive && props !== _this5.nextProps) {
      return;
    }

    var currentChildren = toArrayChildren(getChildrenFromProps(props)); // in case state change is too fast

    if (_this5.isValidChildByKey(currentChildren, key)) {
      _this5.performEnter(key);
    } else {
      var end = function end() {
        if (animate.allowLeaveCallback(props)) {
          props.onLeave(key);
          props.onEnd(key, false);
        }
      };

      if (!isSameChildren(_this5.state.children, currentChildren, props.showProp)) {
        _this5.setState({
          children: currentChildren
        }, end);
      } else {
        end();
      }
    }
  };
};

/* harmony default export */ var es_Animate = __webpack_exports__["a"] = (es_unsafeLifecyclesPolyfill(Animate_Animate));

/***/ }),

/***/ "YZeP":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _arrayLikeToArray; });
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

/***/ }),

/***/ "YhIr":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ctx = __webpack_require__("9liC");
var $export = __webpack_require__("X6VK");
var toObject = __webpack_require__("UnHL");
var call = __webpack_require__("iJnn");
var isArrayIter = __webpack_require__("2LOZ");
var toLength = __webpack_require__("Sp5b");
var createProperty = __webpack_require__("CIiV");
var getIterFn = __webpack_require__("pB2m");

$export($export.S + $export.F * !__webpack_require__("zlqh")(function (iter) { Array.from(iter); }), 'Array', {
  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
    var O = toObject(arrayLike);
    var C = typeof this == 'function' ? this : Array;
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var index = 0;
    var iterFn = getIterFn(O);
    var length, result, step, iterator;
    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
    // if object isn't iterable or it's array with default iterator - use simple case
    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
      }
    } else {
      length = toLength(O.length);
      for (result = new C(length); length > index; index++) {
        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
      }
    }
    result.length = index;
    return result;
  }
});


/***/ }),

/***/ "Yvte":
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return { e: false, v: exec() };
  } catch (e) {
    return { e: true, v: e };
  }
};


/***/ }),

/***/ "Z8gF":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var anObject = __webpack_require__("PAFS");
var toObject = __webpack_require__("UnHL");
var toLength = __webpack_require__("Sp5b");
var toInteger = __webpack_require__("mvii");
var advanceStringIndex = __webpack_require__("dVhv");
var regExpExec = __webpack_require__("Fu0I");
var max = Math.max;
var min = Math.min;
var floor = Math.floor;
var SUBSTITUTION_SYMBOLS = /\$([$&`']|\d\d?|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&`']|\d\d?)/g;

var maybeToString = function (it) {
  return it === undefined ? it : String(it);
};

// @@replace logic
__webpack_require__("Wifh")('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {
  return [
    // `String.prototype.replace` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.replace
    function replace(searchValue, replaceValue) {
      var O = defined(this);
      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];
      return fn !== undefined
        ? fn.call(searchValue, O, replaceValue)
        : $replace.call(String(O), searchValue, replaceValue);
    },
    // `RegExp.prototype[@@replace]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace
    function (regexp, replaceValue) {
      var res = maybeCallNative($replace, regexp, this, replaceValue);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);
      var functionalReplace = typeof replaceValue === 'function';
      if (!functionalReplace) replaceValue = String(replaceValue);
      var global = rx.global;
      if (global) {
        var fullUnicode = rx.unicode;
        rx.lastIndex = 0;
      }
      var results = [];
      while (true) {
        var result = regExpExec(rx, S);
        if (result === null) break;
        results.push(result);
        if (!global) break;
        var matchStr = String(result[0]);
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
      }
      var accumulatedResult = '';
      var nextSourcePosition = 0;
      for (var i = 0; i < results.length; i++) {
        result = results[i];
        var matched = String(result[0]);
        var position = max(min(toInteger(result.index), S.length), 0);
        var captures = [];
        // NOTE: This is equivalent to
        //   captures = result.slice(1).map(maybeToString)
        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));
        var namedCaptures = result.groups;
        if (functionalReplace) {
          var replacerArgs = [matched].concat(captures, position, S);
          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);
          var replacement = String(replaceValue.apply(undefined, replacerArgs));
        } else {
          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
        }
        if (position >= nextSourcePosition) {
          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;
          nextSourcePosition = position + matched.length;
        }
      }
      return accumulatedResult + S.slice(nextSourcePosition);
    }
  ];

    // https://tc39.github.io/ecma262/#sec-getsubstitution
  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {
    var tailPos = position + matched.length;
    var m = captures.length;
    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
    if (namedCaptures !== undefined) {
      namedCaptures = toObject(namedCaptures);
      symbols = SUBSTITUTION_SYMBOLS;
    }
    return $replace.call(replacement, symbols, function (match, ch) {
      var capture;
      switch (ch.charAt(0)) {
        case '$': return '$';
        case '&': return matched;
        case '`': return str.slice(0, position);
        case "'": return str.slice(tailPos);
        case '<':
          capture = namedCaptures[ch.slice(1, -1)];
          break;
        default: // \d\d?
          var n = +ch;
          if (n === 0) return match;
          if (n > m) {
            var f = floor(n / 10);
            if (f === 0) return match;
            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);
            return match;
          }
          capture = captures[n - 1];
      }
      return capture === undefined ? '' : capture;
    });
  }
});


/***/ }),

/***/ "ZGup":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("5hJT");

__webpack_require__("d3/y");

var _interopRequireDefault = __webpack_require__("63Ad");

var _interopRequireWildcard = __webpack_require__("vdEC");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var React = _interopRequireWildcard(__webpack_require__("mXGw"));

var _CheckCircleFilled = _interopRequireDefault(__webpack_require__("4NbO"));

var _AntdIcon = _interopRequireDefault(__webpack_require__("CxZ5")); // GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY


var CheckCircleFilled = function CheckCircleFilled(props, ref) {
  return React.createElement(_AntdIcon["default"], Object.assign({}, props, {
    ref: ref,
    icon: _CheckCircleFilled["default"]
  }));
};

CheckCircleFilled.displayName = 'CheckCircleFilled';

var _default = React.forwardRef(CheckCircleFilled);

exports["default"] = _default;

/***/ }),

/***/ "ZLCB":
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;__webpack_require__("V7cS");

__webpack_require__("Z8gF");

/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */
;

(function (root, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function () {
  var NProgress = {};
  NProgress.version = '0.2.0';
  var Settings = NProgress.settings = {
    minimum: 0.08,
    easing: 'ease',
    positionUsing: '',
    speed: 200,
    trickle: true,
    trickleRate: 0.02,
    trickleSpeed: 800,
    showSpinner: true,
    barSelector: '[role="bar"]',
    spinnerSelector: '[role="spinner"]',
    parent: 'body',
    template: '<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'
  };
  /**
   * Updates configuration.
   *
   *     NProgress.configure({
   *       minimum: 0.1
   *     });
   */

  NProgress.configure = function (options) {
    var key, value;

    for (key in options) {
      value = options[key];
      if (value !== undefined && options.hasOwnProperty(key)) Settings[key] = value;
    }

    return this;
  };
  /**
   * Last number.
   */


  NProgress.status = null;
  /**
   * Sets the progress bar status, where `n` is a number from `0.0` to `1.0`.
   *
   *     NProgress.set(0.4);
   *     NProgress.set(1.0);
   */

  NProgress.set = function (n) {
    var started = NProgress.isStarted();
    n = clamp(n, Settings.minimum, 1);
    NProgress.status = n === 1 ? null : n;
    var progress = NProgress.render(!started),
        bar = progress.querySelector(Settings.barSelector),
        speed = Settings.speed,
        ease = Settings.easing;
    progress.offsetWidth;
    /* Repaint */

    queue(function (next) {
      // Set positionUsing if it hasn't already been set
      if (Settings.positionUsing === '') Settings.positionUsing = NProgress.getPositioningCSS(); // Add transition

      css(bar, barPositionCSS(n, speed, ease));

      if (n === 1) {
        // Fade out
        css(progress, {
          transition: 'none',
          opacity: 1
        });
        progress.offsetWidth;
        /* Repaint */

        setTimeout(function () {
          css(progress, {
            transition: 'all ' + speed + 'ms linear',
            opacity: 0
          });
          setTimeout(function () {
            NProgress.remove();
            next();
          }, speed);
        }, speed);
      } else {
        setTimeout(next, speed);
      }
    });
    return this;
  };

  NProgress.isStarted = function () {
    return typeof NProgress.status === 'number';
  };
  /**
   * Shows the progress bar.
   * This is the same as setting the status to 0%, except that it doesn't go backwards.
   *
   *     NProgress.start();
   *
   */


  NProgress.start = function () {
    if (!NProgress.status) NProgress.set(0);

    var work = function work() {
      setTimeout(function () {
        if (!NProgress.status) return;
        NProgress.trickle();
        work();
      }, Settings.trickleSpeed);
    };

    if (Settings.trickle) work();
    return this;
  };
  /**
   * Hides the progress bar.
   * This is the *sort of* the same as setting the status to 100%, with the
   * difference being `done()` makes some placebo effect of some realistic motion.
   *
   *     NProgress.done();
   *
   * If `true` is passed, it will show the progress bar even if its hidden.
   *
   *     NProgress.done(true);
   */


  NProgress.done = function (force) {
    if (!force && !NProgress.status) return this;
    return NProgress.inc(0.3 + 0.5 * Math.random()).set(1);
  };
  /**
   * Increments by a random amount.
   */


  NProgress.inc = function (amount) {
    var n = NProgress.status;

    if (!n) {
      return NProgress.start();
    } else {
      if (typeof amount !== 'number') {
        amount = (1 - n) * clamp(Math.random() * n, 0.1, 0.95);
      }

      n = clamp(n + amount, 0, 0.994);
      return NProgress.set(n);
    }
  };

  NProgress.trickle = function () {
    return NProgress.inc(Math.random() * Settings.trickleRate);
  };
  /**
   * Waits for all supplied jQuery promises and
   * increases the progress as the promises resolve.
   *
   * @param $promise jQUery Promise
   */


  (function () {
    var initial = 0,
        current = 0;

    NProgress.promise = function ($promise) {
      if (!$promise || $promise.state() === "resolved") {
        return this;
      }

      if (current === 0) {
        NProgress.start();
      }

      initial++;
      current++;
      $promise.always(function () {
        current--;

        if (current === 0) {
          initial = 0;
          NProgress.done();
        } else {
          NProgress.set((initial - current) / initial);
        }
      });
      return this;
    };
  })();
  /**
   * (Internal) renders the progress bar markup based on the `template`
   * setting.
   */


  NProgress.render = function (fromStart) {
    if (NProgress.isRendered()) return document.getElementById('nprogress');
    addClass(document.documentElement, 'nprogress-busy');
    var progress = document.createElement('div');
    progress.id = 'nprogress';
    progress.innerHTML = Settings.template;
    var bar = progress.querySelector(Settings.barSelector),
        perc = fromStart ? '-100' : toBarPerc(NProgress.status || 0),
        parent = document.querySelector(Settings.parent),
        spinner;
    css(bar, {
      transition: 'all 0 linear',
      transform: 'translate3d(' + perc + '%,0,0)'
    });

    if (!Settings.showSpinner) {
      spinner = progress.querySelector(Settings.spinnerSelector);
      spinner && removeElement(spinner);
    }

    if (parent != document.body) {
      addClass(parent, 'nprogress-custom-parent');
    }

    parent.appendChild(progress);
    return progress;
  };
  /**
   * Removes the element. Opposite of render().
   */


  NProgress.remove = function () {
    removeClass(document.documentElement, 'nprogress-busy');
    removeClass(document.querySelector(Settings.parent), 'nprogress-custom-parent');
    var progress = document.getElementById('nprogress');
    progress && removeElement(progress);
  };
  /**
   * Checks if the progress bar is rendered.
   */


  NProgress.isRendered = function () {
    return !!document.getElementById('nprogress');
  };
  /**
   * Determine which positioning CSS rule to use.
   */


  NProgress.getPositioningCSS = function () {
    // Sniff on document.body.style
    var bodyStyle = document.body.style; // Sniff prefixes

    var vendorPrefix = 'WebkitTransform' in bodyStyle ? 'Webkit' : 'MozTransform' in bodyStyle ? 'Moz' : 'msTransform' in bodyStyle ? 'ms' : 'OTransform' in bodyStyle ? 'O' : '';

    if (vendorPrefix + 'Perspective' in bodyStyle) {
      // Modern browsers with 3D support, e.g. Webkit, IE10
      return 'translate3d';
    } else if (vendorPrefix + 'Transform' in bodyStyle) {
      // Browsers without 3D support, e.g. IE9
      return 'translate';
    } else {
      // Browsers without translate() support, e.g. IE7-8
      return 'margin';
    }
  };
  /**
   * Helpers
   */


  function clamp(n, min, max) {
    if (n < min) return min;
    if (n > max) return max;
    return n;
  }
  /**
   * (Internal) converts a percentage (`0..1`) to a bar translateX
   * percentage (`-100%..0%`).
   */


  function toBarPerc(n) {
    return (-1 + n) * 100;
  }
  /**
   * (Internal) returns the correct CSS for changing the bar's
   * position given an n percentage, and speed and ease from Settings
   */


  function barPositionCSS(n, speed, ease) {
    var barCSS;

    if (Settings.positionUsing === 'translate3d') {
      barCSS = {
        transform: 'translate3d(' + toBarPerc(n) + '%,0,0)'
      };
    } else if (Settings.positionUsing === 'translate') {
      barCSS = {
        transform: 'translate(' + toBarPerc(n) + '%,0)'
      };
    } else {
      barCSS = {
        'margin-left': toBarPerc(n) + '%'
      };
    }

    barCSS.transition = 'all ' + speed + 'ms ' + ease;
    return barCSS;
  }
  /**
   * (Internal) Queues a function to be executed.
   */


  var queue = function () {
    var pending = [];

    function next() {
      var fn = pending.shift();

      if (fn) {
        fn(next);
      }
    }

    return function (fn) {
      pending.push(fn);
      if (pending.length == 1) next();
    };
  }();
  /**
   * (Internal) Applies css properties to an element, similar to the jQuery 
   * css method.
   *
   * While this helper does assist with vendor prefixed property names, it 
   * does not perform any manipulation of values prior to setting styles.
   */


  var css = function () {
    var cssPrefixes = ['Webkit', 'O', 'Moz', 'ms'],
        cssProps = {};

    function camelCase(string) {
      return string.replace(/^-ms-/, 'ms-').replace(/-([\da-z])/gi, function (match, letter) {
        return letter.toUpperCase();
      });
    }

    function getVendorProp(name) {
      var style = document.body.style;
      if (name in style) return name;
      var i = cssPrefixes.length,
          capName = name.charAt(0).toUpperCase() + name.slice(1),
          vendorName;

      while (i--) {
        vendorName = cssPrefixes[i] + capName;
        if (vendorName in style) return vendorName;
      }

      return name;
    }

    function getStyleProp(name) {
      name = camelCase(name);
      return cssProps[name] || (cssProps[name] = getVendorProp(name));
    }

    function applyCss(element, prop, value) {
      prop = getStyleProp(prop);
      element.style[prop] = value;
    }

    return function (element, properties) {
      var args = arguments,
          prop,
          value;

      if (args.length == 2) {
        for (prop in properties) {
          value = properties[prop];
          if (value !== undefined && properties.hasOwnProperty(prop)) applyCss(element, prop, value);
        }
      } else {
        applyCss(element, args[1], args[2]);
      }
    };
  }();
  /**
   * (Internal) Determines if an element or space separated list of class names contains a class name.
   */


  function hasClass(element, name) {
    var list = typeof element == 'string' ? element : classList(element);
    return list.indexOf(' ' + name + ' ') >= 0;
  }
  /**
   * (Internal) Adds a class to an element.
   */


  function addClass(element, name) {
    var oldList = classList(element),
        newList = oldList + name;
    if (hasClass(oldList, name)) return; // Trim the opening space.

    element.className = newList.substring(1);
  }
  /**
   * (Internal) Removes a class from an element.
   */


  function removeClass(element, name) {
    var oldList = classList(element),
        newList;
    if (!hasClass(element, name)) return; // Replace the class name.

    newList = oldList.replace(' ' + name + ' ', ' '); // Trim the opening and closing spaces.

    element.className = newList.substring(1, newList.length - 1);
  }
  /**
   * (Internal) Gets a space separated list of the class names on the element. 
   * The list is wrapped with a single space on each end to facilitate finding 
   * matches within the list.
   */


  function classList(element) {
    return (' ' + (element.className || '') + ' ').replace(/\s+/gi, ' ');
  }
  /**
   * (Internal) Removes an element from the DOM.
   */


  function removeElement(element) {
    element && element.parentNode && element.parentNode.removeChild(element);
  }

  return NProgress;
});

/***/ }),

/***/ "ZVIm":
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__("R5TD");
var global = __webpack_require__("P56o");
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__("wEu9") ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "ZWs+":
/***/ (function(module, exports, __webpack_require__) {

var _arity = __webpack_require__("r/sL");

var _isPlaceholder = __webpack_require__("SaPD");
/**
 * Internal curryN function.
 *
 * @private
 * @category Function
 * @param {Number} length The arity of the curried function.
 * @param {Array} received An array of arguments received thus far.
 * @param {Function} fn The function to curry.
 * @return {Function} The curried function.
 */


module.exports = function _curryN(length, received, fn) {
  return function () {
    var combined = [];
    var argsIdx = 0;
    var left = length;
    var combinedIdx = 0;

    while (combinedIdx < received.length || argsIdx < arguments.length) {
      var result;

      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {
        result = received[combinedIdx];
      } else {
        result = arguments[argsIdx];
        argsIdx += 1;
      }

      combined[combinedIdx] = result;

      if (!_isPlaceholder(result)) {
        left -= 1;
      }

      combinedIdx += 1;
    }

    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));
  };
};

/***/ }),

/***/ "Zhxd":
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeToArray = __webpack_require__("+Sw5");

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);
}

module.exports = _unsupportedIterableToArray;

/***/ }),

/***/ "ZkUl":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "startsWith", function() { return startsWith; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pick", function() { return pick; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "match", function() { return match; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resolve", function() { return resolve; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "insertParams", function() { return insertParams; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validateRedirect", function() { return validateRedirect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shallowCompare", function() { return shallowCompare; });
/* harmony import */ var core_js_modules_es6_array_is_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("+3V6");
/* harmony import */ var core_js_modules_es6_array_is_array__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_is_array__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("W1QL");
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es6_array_iterator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("K/PF");
/* harmony import */ var core_js_modules_es6_array_iterator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_iterator__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("t91x");
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es6_object_keys__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("75LO");
/* harmony import */ var core_js_modules_es6_object_keys__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_keys__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("Z8gF");
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es6_array_reduce__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("3y5y");
/* harmony import */ var core_js_modules_es6_array_reduce__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_reduce__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es6_array_filter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("9p7t");
/* harmony import */ var core_js_modules_es6_array_filter__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_filter__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es6_array_sort__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("U8p0");
/* harmony import */ var core_js_modules_es6_array_sort__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_sort__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es6_regexp_search__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("nsbO");
/* harmony import */ var core_js_modules_es6_regexp_search__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_search__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_es6_array_index_of__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("V7cS");
/* harmony import */ var core_js_modules_es6_array_index_of__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_index_of__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var core_js_modules_es6_array_map__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("yIlq");
/* harmony import */ var core_js_modules_es6_array_map__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_map__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("asZ9");
/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var invariant__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("+Ltg");
/* harmony import */ var invariant__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(invariant__WEBPACK_IMPORTED_MODULE_13__);













 ////////////////////////////////////////////////////////////////////////////////
// startsWith(string, search) - Check if `string` starts with `search`

var startsWith = function startsWith(string, search) {
  return string.substr(0, search.length) === search;
}; ////////////////////////////////////////////////////////////////////////////////
// pick(routes, uri)
//
// Ranks and picks the best route to match. Each segment gets the highest
// amount of points, then the type of segment gets an additional amount of
// points where
//
//     static > dynamic > splat > root
//
// This way we don't have to worry about the order of our routes, let the
// computers do it.
//
// A route looks like this
//
//     { path, default, value }
//
// And a returned match looks like:
//
//     { route, params, uri }
//
// I know, I should use TypeScript not comments for these types.


var pick = function pick(routes, uri) {
  var match = void 0;
  var default_ = void 0;

  var _uri$split = uri.split("?"),
      uriPathname = _uri$split[0];

  var uriSegments = segmentize(uriPathname);
  var isRootUri = uriSegments[0] === "";
  var ranked = rankRoutes(routes);

  for (var i = 0, l = ranked.length; i < l; i++) {
    var missed = false;
    var route = ranked[i].route;

    if (route["default"]) {
      default_ = {
        route: route,
        params: {},
        uri: uri
      };
      continue;
    }

    var routeSegments = segmentize(route.path);
    var params = {};
    var max = Math.max(uriSegments.length, routeSegments.length);
    var index = 0;

    for (; index < max; index++) {
      var routeSegment = routeSegments[index];
      var uriSegment = uriSegments[index];

      if (isSplat(routeSegment)) {
        // Hit a splat, just grab the rest, and return a match
        // uri:   /files/documents/work
        // route: /files/*
        var param = routeSegment.slice(1) || "*";
        params[param] = uriSegments.slice(index).map(decodeURIComponent).join("/");
        break;
      }

      if (uriSegment === undefined) {
        // URI is shorter than the route, no match
        // uri:   /users
        // route: /users/:userId
        missed = true;
        break;
      }

      var dynamicMatch = paramRe.exec(routeSegment);

      if (dynamicMatch && !isRootUri) {
        var matchIsNotReserved = reservedNames.indexOf(dynamicMatch[1]) === -1;
        !matchIsNotReserved ?  false ? undefined : invariant__WEBPACK_IMPORTED_MODULE_13___default()(false) : void 0;
        var value = decodeURIComponent(uriSegment);
        params[dynamicMatch[1]] = value;
      } else if (routeSegment !== uriSegment) {
        // Current segments don't match, not dynamic, not splat, so no match
        // uri:   /users/123/settings
        // route: /users/:id/profile
        missed = true;
        break;
      }
    }

    if (!missed) {
      match = {
        route: route,
        params: params,
        uri: "/" + uriSegments.slice(0, index).join("/")
      };
      break;
    }
  }

  return match || default_ || null;
}; ////////////////////////////////////////////////////////////////////////////////
// match(path, uri) - Matches just one path to a uri, also lol


var match = function match(path, uri) {
  return pick([{
    path: path
  }], uri);
}; ////////////////////////////////////////////////////////////////////////////////
// resolve(to, basepath)
//
// Resolves URIs as though every path is a directory, no files.  Relative URIs
// in the browser can feel awkward because not only can you be "in a directory"
// you can be "at a file", too. For example
//
//     browserSpecResolve('foo', '/bar/') => /bar/foo
//     browserSpecResolve('foo', '/bar') => /foo
//
// But on the command line of a file system, it's not as complicated, you can't
// `cd` from a file, only directories.  This way, links have to know less about
// their current path. To go deeper you can do this:
//
//     <Link to="deeper"/>
//     // instead of
//     <Link to=`{${props.uri}/deeper}`/>
//
// Just like `cd`, if you want to go deeper from the command line, you do this:
//
//     cd deeper
//     # not
//     cd $(pwd)/deeper
//
// By treating every path as a directory, linking to relative paths should
// require less contextual information and (fingers crossed) be more intuitive.


var resolve = function resolve(to, base) {
  // /foo/bar, /baz/qux => /foo/bar
  if (startsWith(to, "/")) {
    return to;
  }

  var _to$split = to.split("?"),
      toPathname = _to$split[0],
      toQuery = _to$split[1];

  var _base$split = base.split("?"),
      basePathname = _base$split[0];

  var toSegments = segmentize(toPathname);
  var baseSegments = segmentize(basePathname); // ?a=b, /users?b=c => /users?a=b

  if (toSegments[0] === "") {
    return addQuery(basePathname, toQuery);
  } // profile, /users/789 => /users/789/profile


  if (!startsWith(toSegments[0], ".")) {
    var pathname = baseSegments.concat(toSegments).join("/");
    return addQuery((basePathname === "/" ? "" : "/") + pathname, toQuery);
  } // ./         /users/123  =>  /users/123
  // ../        /users/123  =>  /users
  // ../..      /users/123  =>  /
  // ../../one  /a/b/c/d    =>  /a/b/one
  // .././one   /a/b/c/d    =>  /a/b/c/one


  var allSegments = baseSegments.concat(toSegments);
  var segments = [];

  for (var i = 0, l = allSegments.length; i < l; i++) {
    var segment = allSegments[i];
    if (segment === "..") segments.pop();else if (segment !== ".") segments.push(segment);
  }

  return addQuery("/" + segments.join("/"), toQuery);
}; ////////////////////////////////////////////////////////////////////////////////
// insertParams(path, params)


var insertParams = function insertParams(path, params) {
  var _path$split = path.split("?"),
      pathBase = _path$split[0],
      _path$split$ = _path$split[1],
      query = _path$split$ === undefined ? "" : _path$split$;

  var segments = segmentize(pathBase);
  var constructedPath = "/" + segments.map(function (segment) {
    var match = paramRe.exec(segment);
    return match ? params[match[1]] : segment;
  }).join("/");
  var _params$location = params.location;
  _params$location = _params$location === undefined ? {} : _params$location;
  var _params$location$sear = _params$location.search,
      search = _params$location$sear === undefined ? "" : _params$location$sear;
  var searchSplit = search.split("?")[1] || "";
  constructedPath = addQuery(constructedPath, query, searchSplit);
  return constructedPath;
};

var validateRedirect = function validateRedirect(from, to) {
  var filter = function filter(segment) {
    return isDynamic(segment);
  };

  var fromString = segmentize(from).filter(filter).sort().join("/");
  var toString = segmentize(to).filter(filter).sort().join("/");
  return fromString === toString;
}; ////////////////////////////////////////////////////////////////////////////////
// Junk


var paramRe = /^:(.+)/;
var SEGMENT_POINTS = 4;
var STATIC_POINTS = 3;
var DYNAMIC_POINTS = 2;
var SPLAT_PENALTY = 1;
var ROOT_POINTS = 1;

var isRootSegment = function isRootSegment(segment) {
  return segment === "";
};

var isDynamic = function isDynamic(segment) {
  return paramRe.test(segment);
};

var isSplat = function isSplat(segment) {
  return segment && segment[0] === "*";
};

var rankRoute = function rankRoute(route, index) {
  var score = route["default"] ? 0 : segmentize(route.path).reduce(function (score, segment) {
    score += SEGMENT_POINTS;
    if (isRootSegment(segment)) score += ROOT_POINTS;else if (isDynamic(segment)) score += DYNAMIC_POINTS;else if (isSplat(segment)) score -= SEGMENT_POINTS + SPLAT_PENALTY;else score += STATIC_POINTS;
    return score;
  }, 0);
  return {
    route: route,
    score: score,
    index: index
  };
};

var rankRoutes = function rankRoutes(routes) {
  return routes.map(rankRoute).sort(function (a, b) {
    return a.score < b.score ? 1 : a.score > b.score ? -1 : a.index - b.index;
  });
};

var segmentize = function segmentize(uri) {
  return uri // strip starting/ending slashes
  .replace(/(^\/+|\/+$)/g, "").split("/");
};

var addQuery = function addQuery(pathname) {
  for (var _len = arguments.length, query = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    query[_key - 1] = arguments[_key];
  }

  query = query.filter(function (q) {
    return q && q.length > 0;
  });
  return pathname + (query && query.length > 0 ? "?" + query.join("&") : "");
};

var reservedNames = ["uri", "path"];
/**
 * Shallow compares two objects.
 * @param {Object} obj1 The first object to compare.
 * @param {Object} obj2 The second object to compare.
 */

var shallowCompare = function shallowCompare(obj1, obj2) {
  var obj1Keys = Object.keys(obj1);
  return obj1Keys.length === Object.keys(obj2).length && obj1Keys.every(function (key) {
    return obj2.hasOwnProperty(key) && obj1[key] === obj2[key];
  });
}; ////////////////////////////////////////////////////////////////////////////////




/***/ }),

/***/ "a2XJ":
/***/ (function(module, exports, __webpack_require__) {

var _curry1 = __webpack_require__("AN6r");

var _curry2 = __webpack_require__("OFPg");

var _isPlaceholder = __webpack_require__("SaPD");
/**
 * Optimized internal three-arity curry function.
 *
 * @private
 * @category Function
 * @param {Function} fn The function to curry.
 * @return {Function} The curried function.
 */


module.exports = function _curry3(fn) {
  return function f3(a, b, c) {
    switch (arguments.length) {
      case 0:
        return f3;

      case 1:
        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {
          return fn(a, _b, _c);
        });

      case 2:
        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {
          return fn(_a, b, _c);
        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {
          return fn(a, _b, _c);
        }) : _curry1(function (_c) {
          return fn(a, b, _c);
        });

      default:
        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {
          return fn(_a, _b, c);
        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {
          return fn(_a, b, _c);
        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {
          return fn(a, _b, _c);
        }) : _isPlaceholder(a) ? _curry1(function (_a) {
          return fn(_a, b, c);
        }) : _isPlaceholder(b) ? _curry1(function (_b) {
          return fn(a, _b, c);
        }) : _isPlaceholder(c) ? _curry1(function (_c) {
          return fn(a, b, _c);
        }) : fn(a, b, c);
    }
  };
};

/***/ }),

/***/ "aD5s":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("oMRA");

__webpack_require__("6d4m");

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var get_arc_params_1 = __webpack_require__("JfS1");

var get_arc_params_2 = __webpack_require__("JfS1");

var parse_path_1 = __webpack_require__("6xm/"); // 点对称


function toSymmetry(point, center) {
  return [center[0] + (center[0] - point[0]), center[1] + (center[1] - point[1])];
}

function getSegments(path) {
  path = parse_path_1["default"](path);
  var segments = [];
  var currentPoint = null; // 当前图形

  var nextParams = null; // 下一节点的 path 参数

  var startMovePoint = null; // 开始 M 的点，可能会有多个

  var lastStartMovePointIndex = 0; // 最近一个开始点 M 的索引

  var count = path.length;

  for (var i = 0; i < count; i++) {
    var params = path[i];
    nextParams = path[i + 1];
    var command = params[0]; // 数学定义上的参数，便于后面的计算

    var segment = {
      command: command,
      prePoint: currentPoint,
      params: params,
      startTangent: null,
      endTangent: null
    };

    switch (command) {
      case 'M':
        startMovePoint = [params[1], params[2]];
        lastStartMovePointIndex = i;
        break;

      case 'A':
        var arcParams = get_arc_params_1["default"](currentPoint, params);
        segment['arcParams'] = arcParams;
        break;

      default:
        break;
    }

    if (command === 'Z') {
      // 有了 Z 后，当前节点从开始 M 的点开始
      currentPoint = startMovePoint; // 如果当前点的命令为 Z，相当于当前点为最近一个 M 点，则下一个点直接指向最近一个 M 点的下一个点

      nextParams = path[lastStartMovePointIndex + 1];
    } else {
      var len = params.length;
      currentPoint = [params[len - 2], params[len - 1]];
    }

    if (nextParams && nextParams[0] === 'Z') {
      // 如果下一个点的命令为 Z，则下一个点直接指向最近一个 M 点
      nextParams = path[lastStartMovePointIndex];

      if (segments[lastStartMovePointIndex]) {
        // 如果下一个点的命令为 Z，则最近一个 M 点的前一个点为当前点
        segments[lastStartMovePointIndex].prePoint = currentPoint;
      }
    }

    segment['currentPoint'] = currentPoint; // 如果当前点与最近一个 M 点相同，则最近一个 M 点的前一个点为当前点的前一个点

    if (segments[lastStartMovePointIndex] && get_arc_params_2.isSamePoint(currentPoint, segments[lastStartMovePointIndex].currentPoint)) {
      segments[lastStartMovePointIndex].prePoint = segment.prePoint;
    }

    var nextPoint = nextParams ? [nextParams[nextParams.length - 2], nextParams[nextParams.length - 1]] : null;
    segment['nextPoint'] = nextPoint; // Add startTangent and endTangent

    var prePoint = segment.prePoint;

    if (['L', 'H', 'V'].includes(command)) {
      segment.startTangent = [prePoint[0] - currentPoint[0], prePoint[1] - currentPoint[1]];
      segment.endTangent = [currentPoint[0] - prePoint[0], currentPoint[1] - prePoint[1]];
    } else if (command === 'Q') {
      // 二次贝塞尔曲线只有一个控制点
      var cp = [params[1], params[2]]; // 二次贝塞尔曲线的终点为 currentPoint

      segment.startTangent = [prePoint[0] - cp[0], prePoint[1] - cp[1]];
      segment.endTangent = [currentPoint[0] - cp[0], currentPoint[1] - cp[1]];
    } else if (command === 'T') {
      var preSegment = segments[i - 1];
      var cp = toSymmetry(preSegment.currentPoint, prePoint);

      if (preSegment.command === 'Q') {
        segment.command = 'Q';
        segment.startTangent = [prePoint[0] - cp[0], prePoint[1] - cp[1]];
        segment.endTangent = [currentPoint[0] - cp[0], currentPoint[1] - cp[1]];
      } else {
        segment.command = 'TL';
        segment.startTangent = [prePoint[0] - currentPoint[0], prePoint[1] - currentPoint[1]];
        segment.endTangent = [currentPoint[0] - prePoint[0], currentPoint[1] - prePoint[1]];
      }
    } else if (command === 'C') {
      // 三次贝塞尔曲线有两个控制点
      var cp1 = [params[1], params[2]];
      var cp2 = [params[3], params[4]];
      segment.startTangent = [prePoint[0] - cp1[0], prePoint[1] - cp1[1]];
      segment.endTangent = [currentPoint[0] - cp2[0], currentPoint[1] - cp2[1]];
    } else if (command === 'S') {
      var preSegment = segments[i - 1];
      var cp1 = toSymmetry(preSegment.currentPoint, prePoint);
      var cp2 = [params[1], params[2]];

      if (preSegment.command === 'C') {
        segment.command = 'C'; // 将 S 命令变换为 C 命令

        segment.startTangent = [prePoint[0] - cp1[0], prePoint[1] - cp1[1]];
        segment.endTangent = [currentPoint[0] - cp2[0], currentPoint[1] - cp2[1]];
      } else {
        segment.command = 'SQ'; // 将 S 命令变换为 SQ 命令

        segment.startTangent = [prePoint[0] - cp2[0], prePoint[1] - cp2[1]];
        segment.endTangent = [currentPoint[0] - cp2[0], currentPoint[1] - cp2[1]];
      }
    } else if (command === 'A') {
      var d = 0.001;

      var _a = segment['arcParams'] || {},
          _b = _a.cx,
          cx = _b === void 0 ? 0 : _b,
          _c = _a.cy,
          cy = _c === void 0 ? 0 : _c,
          _d = _a.rx,
          rx = _d === void 0 ? 0 : _d,
          _e = _a.ry,
          ry = _e === void 0 ? 0 : _e,
          _f = _a.sweepFlag,
          sweepFlag = _f === void 0 ? 0 : _f,
          _g = _a.startAngle,
          startAngle = _g === void 0 ? 0 : _g,
          _h = _a.endAngle,
          endAngle = _h === void 0 ? 0 : _h;

      if (sweepFlag === 0) {
        d *= -1;
      }

      var dx1 = rx * Math.cos(startAngle - d) + cx;
      var dy1 = ry * Math.sin(startAngle - d) + cy;
      segment.startTangent = [dx1 - startMovePoint[0], dy1 - startMovePoint[1]];
      var dx2 = rx * Math.cos(startAngle + endAngle + d) + cx;
      var dy2 = ry * Math.sin(startAngle + endAngle - d) + cy;
      segment.endTangent = [prePoint[0] - dx2, prePoint[1] - dy2];
    }

    segments.push(segment);
  }

  return segments;
}

exports["default"] = getSegments;

/***/ }),

/***/ "aLAR":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _CloseCircleOutlined = _interopRequireDefault(__webpack_require__("cK8K"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    'default': obj
  };
}

var _default = _CloseCircleOutlined;
exports["default"] = _default;
module.exports = _default;

/***/ }),

/***/ "aNYv":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ _slicedToArray; });

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js
var arrayWithHoles = __webpack_require__("Cpn1");

// CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js
function _iterableToArrayLimit(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}
// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js
var unsupportedIterableToArray = __webpack_require__("TJjZ");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js
var nonIterableRest = __webpack_require__("IoK0");

// CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/slicedToArray.js




function _slicedToArray(arr, i) {
  return Object(arrayWithHoles["a" /* default */])(arr) || _iterableToArrayLimit(arr, i) || Object(unsupportedIterableToArray["a" /* default */])(arr, i) || Object(nonIterableRest["a" /* default */])();
}

/***/ }),

/***/ "aOS5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _isNil = __webpack_require__("CL0D");

var _isNil2 = _interopRequireDefault(_isNil);

var _result = __webpack_require__("yMzA");

var _result2 = _interopRequireDefault(_result);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * Get .pagesPaths from pluginOptions
 * @sig Options -> Result String[]
 * @param {{pagesPaths: String[]}} options plugin options
 * @return {Result<String[]>} pagesPaths Result
 */


var getPagesPaths = function getPagesPaths(options) {
  if ((0, _isNil2["default"])(options)) {
    return _result2["default"].Error('Null plugin options');
  }

  var pagesPaths = options.pagesPaths;

  if ((0, _isNil2["default"])(pagesPaths)) {
    return _result2["default"].Error('Null pluginOptions.pagesPaths');
  } // Should test if pagesPaths is an Array?
  // Should test if pagesPaths is empty?


  return _result2["default"].Ok(pagesPaths);
};

exports["default"] = getPagesPaths;

/***/ }),

/***/ "aOij":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
}); // 合并包围盒

function mergeBBox(bbox1, bbox2) {
  if (!bbox1 || !bbox2) {
    return bbox1 || bbox2;
  }

  return {
    minX: Math.min(bbox1.minX, bbox2.minX),
    minY: Math.min(bbox1.minY, bbox2.minY),
    maxX: Math.max(bbox1.maxX, bbox2.maxX),
    maxY: Math.max(bbox1.maxY, bbox2.maxY)
  };
}

exports.mergeBBox = mergeBBox; // 合并箭头的包围盒

function mergeArrowBBox(shape, bbox) {
  var startArrowShape = shape.get('startArrowShape');
  var endArrowShape = shape.get('endArrowShape');
  var startArrowBBox = null;
  var endArrowBBox = null;

  if (startArrowShape) {
    startArrowBBox = startArrowShape.getCanvasBBox();
    bbox = mergeBBox(bbox, startArrowBBox);
  }

  if (endArrowShape) {
    endArrowBBox = endArrowShape.getCanvasBBox();
    bbox = mergeBBox(bbox, endArrowBBox);
  }

  return bbox;
}

exports.mergeArrowBBox = mergeArrowBBox;

/***/ }),

/***/ "aaOZ":
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
var $export = __webpack_require__("X6VK");
var abs = Math.abs;

$export($export.S, 'Math', {
  hypot: function hypot(value1, value2) { // eslint-disable-line no-unused-vars
    var sum = 0;
    var i = 0;
    var aLen = arguments.length;
    var larg = 0;
    var arg, div;
    while (i < aLen) {
      arg = abs(arguments[i++]);
      if (larg < arg) {
        div = larg / arg;
        sum = sum * div * div + 1;
        larg = arg;
      } else if (arg > 0) {
        div = arg / larg;
        sum += div * div;
      } else sum += arg;
    }
    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
  }
});


/***/ }),

/***/ "aaoD":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin
module.exports = {"header":"Header-module--header--QrvNx","transparent":"Header-module--transparent--3ZG6S","fixed":"Header-module--fixed--3BvQD","container":"Header-module--container--28XPE","isHomePage":"Header-module--isHomePage--3JcXZ","left":"Header-module--left--3TsIM","divider":"Header-module--divider--1xZlR","subProduceName":"Header-module--subProduceName--1BLQm","nav":"Header-module--nav--35wlD","menu":"Header-module--menu--10i8K","activeItem":"Header-module--activeItem--8xX7A","githubCorner":"Header-module--githubCorner--2FzDo","translation":"Header-module--translation--wRnop","versions":"Header-module--versions--2idbQ","arrow":"Header-module--arrow--7H4HQ","open":"Header-module--open--3UsNv","popup":"Header-module--popup--3X91L","productsMenu":"Header-module--productsMenu--3odTm","popupHidden":"Header-module--popupHidden--3afKn","menuIcon":"Header-module--menuIcon--ZlZB5"};

/***/ }),

/***/ "asZ9":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isRegExp = __webpack_require__("NVL/");
var anObject = __webpack_require__("PAFS");
var speciesConstructor = __webpack_require__("5Fu2");
var advanceStringIndex = __webpack_require__("dVhv");
var toLength = __webpack_require__("Sp5b");
var callRegExpExec = __webpack_require__("Fu0I");
var regexpExec = __webpack_require__("lAKj");
var fails = __webpack_require__("E7Vc");
var $min = Math.min;
var $push = [].push;
var $SPLIT = 'split';
var LENGTH = 'length';
var LAST_INDEX = 'lastIndex';
var MAX_UINT32 = 0xffffffff;

// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError
var SUPPORTS_Y = !fails(function () { RegExp(MAX_UINT32, 'y'); });

// @@split logic
__webpack_require__("Wifh")('split', 2, function (defined, SPLIT, $split, maybeCallNative) {
  var internalSplit;
  if (
    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
    ''[$SPLIT](/.?/)[LENGTH]
  ) {
    // based on es5-shim implementation, need to rework it
    internalSplit = function (separator, limit) {
      var string = String(this);
      if (separator === undefined && limit === 0) return [];
      // If `separator` is not a regex, use native split
      if (!isRegExp(separator)) return $split.call(string, separator, limit);
      var output = [];
      var flags = (separator.ignoreCase ? 'i' : '') +
                  (separator.multiline ? 'm' : '') +
                  (separator.unicode ? 'u' : '') +
                  (separator.sticky ? 'y' : '');
      var lastLastIndex = 0;
      var splitLimit = limit === undefined ? MAX_UINT32 : limit >>> 0;
      // Make `global` and avoid `lastIndex` issues by working with a copy
      var separatorCopy = new RegExp(separator.source, flags + 'g');
      var match, lastIndex, lastLength;
      while (match = regexpExec.call(separatorCopy, string)) {
        lastIndex = separatorCopy[LAST_INDEX];
        if (lastIndex > lastLastIndex) {
          output.push(string.slice(lastLastIndex, match.index));
          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));
          lastLength = match[0][LENGTH];
          lastLastIndex = lastIndex;
          if (output[LENGTH] >= splitLimit) break;
        }
        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
      }
      if (lastLastIndex === string[LENGTH]) {
        if (lastLength || !separatorCopy.test('')) output.push('');
      } else output.push(string.slice(lastLastIndex));
      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
    };
  // Chakra, V8
  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {
    internalSplit = function (separator, limit) {
      return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);
    };
  } else {
    internalSplit = $split;
  }

  return [
    // `String.prototype.split` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.split
    function split(separator, limit) {
      var O = defined(this);
      var splitter = separator == undefined ? undefined : separator[SPLIT];
      return splitter !== undefined
        ? splitter.call(separator, O, limit)
        : internalSplit.call(String(O), separator, limit);
    },
    // `RegExp.prototype[@@split]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split
    //
    // NOTE: This cannot be properly polyfilled in engines that don't support
    // the 'y' flag.
    function (regexp, limit) {
      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);
      var C = speciesConstructor(rx, RegExp);

      var unicodeMatching = rx.unicode;
      var flags = (rx.ignoreCase ? 'i' : '') +
                  (rx.multiline ? 'm' : '') +
                  (rx.unicode ? 'u' : '') +
                  (SUPPORTS_Y ? 'y' : 'g');

      // ^(? + rx + ) is needed, in combination with some S slicing, to
      // simulate the 'y' flag.
      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);
      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
      if (lim === 0) return [];
      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];
      var p = 0;
      var q = 0;
      var A = [];
      while (q < S.length) {
        splitter.lastIndex = SUPPORTS_Y ? q : 0;
        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));
        var e;
        if (
          z === null ||
          (e = $min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p
        ) {
          q = advanceStringIndex(S, q, unicodeMatching);
        } else {
          A.push(S.slice(p, q));
          if (A.length === lim) return A;
          for (var i = 1; i <= z.length - 1; i++) {
            A.push(z[i]);
            if (A.length === lim) return A;
          }
          q = p = e;
        }
      }
      A.push(S.slice(p));
      return A;
    }
  ];
});


/***/ }),

/***/ "at5L":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("ezc+");
var toIObject = __webpack_require__("ml72");
var arrayIndexOf = __webpack_require__("sdkr")(false);
var IE_PROTO = __webpack_require__("8kJd")('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "az+3":
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__("X6VK");
var $parseFloat = __webpack_require__("wUFM");
// 20.1.2.12 Number.parseFloat(string)
$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', { parseFloat: $parseFloat });


/***/ }),

/***/ "b+fX":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("LAIM");

__webpack_require__("+3V6");

__webpack_require__("4aJ6");

__webpack_require__("M/4x");

__webpack_require__("GkPX");

__webpack_require__("W1QL");

__webpack_require__("K/PF");

__webpack_require__("t91x");

__webpack_require__("75LO");

__webpack_require__("yIlq");

__webpack_require__("+jjx");

__webpack_require__("ABKx");

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
}; //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------
// --[ Dependencies ]---------------------------------------------------


var _require = __webpack_require__("vgDc"),
    tagSymbol = _require.tagSymbol,
    typeSymbol = _require.typeSymbol; // --[ Helpers ]--------------------------------------------------------

/*~
 * type: (Object Any) => String
 */


var objectToKeyValuePairs = function objectToKeyValuePairs(object) {
  return Object.keys(object).map(function (key) {
    return key + ': ' + showValue(object[key]);
  }).join(', ');
};
/*~
 * type: (Object Any).() => String
 */


var plainObjectToString = function plainObjectToString() {
  return '{ ' + objectToKeyValuePairs(this) + ' }';
};
/*~
 * type: (Array Any).() => String
 */


var arrayToString = function arrayToString() {
  return '[' + this.map(showValue).join(', ') + ']';
};
/*~
 * type: (Function) => String
 */


var functionNameToString = function functionNameToString(fn) {
  return fn.name !== '' ? ': ' + fn.name : '';
};
/*~
 * type: (Function) => String
 */


var functionToString = function functionToString(fn) {
  return '[Function' + functionNameToString(fn) + ']';
};
/*~
 * type: () => String
 */


var nullToString = function nullToString() {
  return 'null';
};
/*~
 * type: (Any) => Bool
 */


var isPlainObject = function isPlainObject(object) {
  return !object.toString || object.toString === Object.prototype.toString;
};
/*~
 * type: (Null | Object Any) => String
 */


var objectToString = function objectToString(object) {
  return object === null ? nullToString : Array.isArray(object) ? arrayToString : isPlainObject(object) ? plainObjectToString :
  /* otherwise */
  object.toString;
};
/*~
 * type: (Any) => String
 */


var showValue = function showValue(value) {
  return typeof value === 'undefined' ? 'undefined' : typeof value === 'function' ? functionToString(value) : Object.is(value, -0) ? '-0' : typeof value === 'number' ? value : (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'symbol' ? value.toString() : (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' ? objectToString(value).call(value) :
  /* otherwise */
  JSON.stringify(value);
}; // --[ Implementation ]------------------------------------------------

/*~
 * stability: experimental
 * authors:
 *   - "@boris-marinov"
 * 
 * type: |
 *   (Variant, Union) => Void
 */


var debugRepresentation = function debugRepresentation(variant, adt) {
  // eslint-disable-line max-statements
  var typeName = adt[typeSymbol];
  var variantName = adt[typeSymbol] + '.' + variant.prototype[tagSymbol]; // (for Object.prototype.toString)

  adt[Symbol.toStringTag] = typeName;
  variant.prototype[Symbol.toStringTag] = variantName; // (regular JavaScript representations)

  /*~
   * stability: experimental
   * module: null
   * authors:
   *   - "@boris-marinov"
   * 
   * type: |
   *   () => String
   */

  adt.toString = function () {
    return typeName;
  };
  /*~
   * stability: experimental
   * mmodule: null
   * authors:
   *   - "@boris-marinov"
   * 
   * type: |
   *   () => String
   */


  variant.toString = function () {
    return variantName;
  };
  /*~
   * stability: experimental
   * module: null
   * authors:
   *   - "@boris-marinov"
   * 
   * type: |
   *   (Union).() => String
   */


  variant.prototype.toString = function () {
    return variantName + '(' + plainObjectToString.call(this) + ')';
  }; // (Node REPL representations)


  adt.inspect = adt.toString;
  variant.inspect = variant.toString;
  variant.prototype.inspect = variant.prototype.toString;
  return variant;
}; // --[ Exports ]-------------------------------------------------------


module.exports = debugRepresentation;

/***/ }),

/***/ "b01t":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

if (__webpack_require__("GGqZ")) {
  var LIBRARY = __webpack_require__("wEu9");
  var global = __webpack_require__("P56o");
  var fails = __webpack_require__("E7Vc");
  var $export = __webpack_require__("X6VK");
  var $typed = __webpack_require__("tW8y");
  var $buffer = __webpack_require__("Dhml");
  var ctx = __webpack_require__("9liC");
  var anInstance = __webpack_require__("EusA");
  var propertyDesc = __webpack_require__("WWmS");
  var hide = __webpack_require__("tjmq");
  var redefineAll = __webpack_require__("+edc");
  var toInteger = __webpack_require__("mvii");
  var toLength = __webpack_require__("Sp5b");
  var toIndex = __webpack_require__("GdbT");
  var toAbsoluteIndex = __webpack_require__("BUlT");
  var toPrimitive = __webpack_require__("5MU4");
  var has = __webpack_require__("ezc+");
  var classof = __webpack_require__("OFVL");
  var isObject = __webpack_require__("Bsg+");
  var toObject = __webpack_require__("UnHL");
  var isArrayIter = __webpack_require__("2LOZ");
  var create = __webpack_require__("Vx+c");
  var getPrototypeOf = __webpack_require__("A1KM");
  var gOPN = __webpack_require__("zIds").f;
  var getIterFn = __webpack_require__("pB2m");
  var uid = __webpack_require__("1Alt");
  var wks = __webpack_require__("9dxi");
  var createArrayMethod = __webpack_require__("1wfo");
  var createArrayIncludes = __webpack_require__("sdkr");
  var speciesConstructor = __webpack_require__("5Fu2");
  var ArrayIterators = __webpack_require__("K/PF");
  var Iterators = __webpack_require__("Ibj2");
  var $iterDetect = __webpack_require__("zlqh");
  var setSpecies = __webpack_require__("E8p1");
  var arrayFill = __webpack_require__("Pfmf");
  var arrayCopyWithin = __webpack_require__("JKk3");
  var $DP = __webpack_require__("U1KF");
  var $GOPD = __webpack_require__("1Tj+");
  var dP = $DP.f;
  var gOPD = $GOPD.f;
  var RangeError = global.RangeError;
  var TypeError = global.TypeError;
  var Uint8Array = global.Uint8Array;
  var ARRAY_BUFFER = 'ArrayBuffer';
  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;
  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
  var PROTOTYPE = 'prototype';
  var ArrayProto = Array[PROTOTYPE];
  var $ArrayBuffer = $buffer.ArrayBuffer;
  var $DataView = $buffer.DataView;
  var arrayForEach = createArrayMethod(0);
  var arrayFilter = createArrayMethod(2);
  var arraySome = createArrayMethod(3);
  var arrayEvery = createArrayMethod(4);
  var arrayFind = createArrayMethod(5);
  var arrayFindIndex = createArrayMethod(6);
  var arrayIncludes = createArrayIncludes(true);
  var arrayIndexOf = createArrayIncludes(false);
  var arrayValues = ArrayIterators.values;
  var arrayKeys = ArrayIterators.keys;
  var arrayEntries = ArrayIterators.entries;
  var arrayLastIndexOf = ArrayProto.lastIndexOf;
  var arrayReduce = ArrayProto.reduce;
  var arrayReduceRight = ArrayProto.reduceRight;
  var arrayJoin = ArrayProto.join;
  var arraySort = ArrayProto.sort;
  var arraySlice = ArrayProto.slice;
  var arrayToString = ArrayProto.toString;
  var arrayToLocaleString = ArrayProto.toLocaleString;
  var ITERATOR = wks('iterator');
  var TAG = wks('toStringTag');
  var TYPED_CONSTRUCTOR = uid('typed_constructor');
  var DEF_CONSTRUCTOR = uid('def_constructor');
  var ALL_CONSTRUCTORS = $typed.CONSTR;
  var TYPED_ARRAY = $typed.TYPED;
  var VIEW = $typed.VIEW;
  var WRONG_LENGTH = 'Wrong length!';

  var $map = createArrayMethod(1, function (O, length) {
    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
  });

  var LITTLE_ENDIAN = fails(function () {
    // eslint-disable-next-line no-undef
    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
  });

  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {
    new Uint8Array(1).set({});
  });

  var toOffset = function (it, BYTES) {
    var offset = toInteger(it);
    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');
    return offset;
  };

  var validate = function (it) {
    if (isObject(it) && TYPED_ARRAY in it) return it;
    throw TypeError(it + ' is not a typed array!');
  };

  var allocate = function (C, length) {
    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {
      throw TypeError('It is not a typed array constructor!');
    } return new C(length);
  };

  var speciesFromList = function (O, list) {
    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
  };

  var fromList = function (C, list) {
    var index = 0;
    var length = list.length;
    var result = allocate(C, length);
    while (length > index) result[index] = list[index++];
    return result;
  };

  var addGetter = function (it, key, internal) {
    dP(it, key, { get: function () { return this._d[internal]; } });
  };

  var $from = function from(source /* , mapfn, thisArg */) {
    var O = toObject(source);
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var iterFn = getIterFn(O);
    var i, length, values, result, step, iterator;
    if (iterFn != undefined && !isArrayIter(iterFn)) {
      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {
        values.push(step.value);
      } O = values;
    }
    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);
    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {
      result[i] = mapping ? mapfn(O[i], i) : O[i];
    }
    return result;
  };

  var $of = function of(/* ...items */) {
    var index = 0;
    var length = arguments.length;
    var result = allocate(this, length);
    while (length > index) result[index] = arguments[index++];
    return result;
  };

  // iOS Safari 6.x fails here
  var TO_LOCALE_BUG = !!Uint8Array && fails(function () { arrayToLocaleString.call(new Uint8Array(1)); });

  var $toLocaleString = function toLocaleString() {
    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
  };

  var proto = {
    copyWithin: function copyWithin(target, start /* , end */) {
      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
    },
    every: function every(callbackfn /* , thisArg */) {
      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars
      return arrayFill.apply(validate(this), arguments);
    },
    filter: function filter(callbackfn /* , thisArg */) {
      return speciesFromList(this, arrayFilter(validate(this), callbackfn,
        arguments.length > 1 ? arguments[1] : undefined));
    },
    find: function find(predicate /* , thisArg */) {
      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
    },
    findIndex: function findIndex(predicate /* , thisArg */) {
      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
    },
    forEach: function forEach(callbackfn /* , thisArg */) {
      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    indexOf: function indexOf(searchElement /* , fromIndex */) {
      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
    },
    includes: function includes(searchElement /* , fromIndex */) {
      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
    },
    join: function join(separator) { // eslint-disable-line no-unused-vars
      return arrayJoin.apply(validate(this), arguments);
    },
    lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars
      return arrayLastIndexOf.apply(validate(this), arguments);
    },
    map: function map(mapfn /* , thisArg */) {
      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
      return arrayReduce.apply(validate(this), arguments);
    },
    reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
      return arrayReduceRight.apply(validate(this), arguments);
    },
    reverse: function reverse() {
      var that = this;
      var length = validate(that).length;
      var middle = Math.floor(length / 2);
      var index = 0;
      var value;
      while (index < middle) {
        value = that[index];
        that[index++] = that[--length];
        that[length] = value;
      } return that;
    },
    some: function some(callbackfn /* , thisArg */) {
      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    sort: function sort(comparefn) {
      return arraySort.call(validate(this), comparefn);
    },
    subarray: function subarray(begin, end) {
      var O = validate(this);
      var length = O.length;
      var $begin = toAbsoluteIndex(begin, length);
      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
        O.buffer,
        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)
      );
    }
  };

  var $slice = function slice(start, end) {
    return speciesFromList(this, arraySlice.call(validate(this), start, end));
  };

  var $set = function set(arrayLike /* , offset */) {
    validate(this);
    var offset = toOffset(arguments[1], 1);
    var length = this.length;
    var src = toObject(arrayLike);
    var len = toLength(src.length);
    var index = 0;
    if (len + offset > length) throw RangeError(WRONG_LENGTH);
    while (index < len) this[offset + index] = src[index++];
  };

  var $iterators = {
    entries: function entries() {
      return arrayEntries.call(validate(this));
    },
    keys: function keys() {
      return arrayKeys.call(validate(this));
    },
    values: function values() {
      return arrayValues.call(validate(this));
    }
  };

  var isTAIndex = function (target, key) {
    return isObject(target)
      && target[TYPED_ARRAY]
      && typeof key != 'symbol'
      && key in target
      && String(+key) == String(key);
  };
  var $getDesc = function getOwnPropertyDescriptor(target, key) {
    return isTAIndex(target, key = toPrimitive(key, true))
      ? propertyDesc(2, target[key])
      : gOPD(target, key);
  };
  var $setDesc = function defineProperty(target, key, desc) {
    if (isTAIndex(target, key = toPrimitive(key, true))
      && isObject(desc)
      && has(desc, 'value')
      && !has(desc, 'get')
      && !has(desc, 'set')
      // TODO: add validation descriptor w/o calling accessors
      && !desc.configurable
      && (!has(desc, 'writable') || desc.writable)
      && (!has(desc, 'enumerable') || desc.enumerable)
    ) {
      target[key] = desc.value;
      return target;
    } return dP(target, key, desc);
  };

  if (!ALL_CONSTRUCTORS) {
    $GOPD.f = $getDesc;
    $DP.f = $setDesc;
  }

  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
    getOwnPropertyDescriptor: $getDesc,
    defineProperty: $setDesc
  });

  if (fails(function () { arrayToString.call({}); })) {
    arrayToString = arrayToLocaleString = function toString() {
      return arrayJoin.call(this);
    };
  }

  var $TypedArrayPrototype$ = redefineAll({}, proto);
  redefineAll($TypedArrayPrototype$, $iterators);
  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
  redefineAll($TypedArrayPrototype$, {
    slice: $slice,
    set: $set,
    constructor: function () { /* noop */ },
    toString: arrayToString,
    toLocaleString: $toLocaleString
  });
  addGetter($TypedArrayPrototype$, 'buffer', 'b');
  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
  addGetter($TypedArrayPrototype$, 'byteLength', 'l');
  addGetter($TypedArrayPrototype$, 'length', 'e');
  dP($TypedArrayPrototype$, TAG, {
    get: function () { return this[TYPED_ARRAY]; }
  });

  // eslint-disable-next-line max-statements
  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {
    CLAMPED = !!CLAMPED;
    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';
    var GETTER = 'get' + KEY;
    var SETTER = 'set' + KEY;
    var TypedArray = global[NAME];
    var Base = TypedArray || {};
    var TAC = TypedArray && getPrototypeOf(TypedArray);
    var FORCED = !TypedArray || !$typed.ABV;
    var O = {};
    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
    var getter = function (that, index) {
      var data = that._d;
      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
    };
    var setter = function (that, index, value) {
      var data = that._d;
      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
    };
    var addElement = function (that, index) {
      dP(that, index, {
        get: function () {
          return getter(this, index);
        },
        set: function (value) {
          return setter(this, index, value);
        },
        enumerable: true
      });
    };
    if (FORCED) {
      TypedArray = wrapper(function (that, data, $offset, $length) {
        anInstance(that, TypedArray, NAME, '_d');
        var index = 0;
        var offset = 0;
        var buffer, byteLength, length, klass;
        if (!isObject(data)) {
          length = toIndex(data);
          byteLength = length * BYTES;
          buffer = new $ArrayBuffer(byteLength);
        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
          buffer = data;
          offset = toOffset($offset, BYTES);
          var $len = data.byteLength;
          if ($length === undefined) {
            if ($len % BYTES) throw RangeError(WRONG_LENGTH);
            byteLength = $len - offset;
            if (byteLength < 0) throw RangeError(WRONG_LENGTH);
          } else {
            byteLength = toLength($length) * BYTES;
            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);
          }
          length = byteLength / BYTES;
        } else if (TYPED_ARRAY in data) {
          return fromList(TypedArray, data);
        } else {
          return $from.call(TypedArray, data);
        }
        hide(that, '_d', {
          b: buffer,
          o: offset,
          l: byteLength,
          e: length,
          v: new $DataView(buffer)
        });
        while (index < length) addElement(that, index++);
      });
      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
      hide(TypedArrayPrototype, 'constructor', TypedArray);
    } else if (!fails(function () {
      TypedArray(1);
    }) || !fails(function () {
      new TypedArray(-1); // eslint-disable-line no-new
    }) || !$iterDetect(function (iter) {
      new TypedArray(); // eslint-disable-line no-new
      new TypedArray(null); // eslint-disable-line no-new
      new TypedArray(1.5); // eslint-disable-line no-new
      new TypedArray(iter); // eslint-disable-line no-new
    }, true)) {
      TypedArray = wrapper(function (that, data, $offset, $length) {
        anInstance(that, TypedArray, NAME);
        var klass;
        // `ws` module bug, temporarily remove validation length for Uint8Array
        // https://github.com/websockets/ws/pull/645
        if (!isObject(data)) return new Base(toIndex(data));
        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
          return $length !== undefined
            ? new Base(data, toOffset($offset, BYTES), $length)
            : $offset !== undefined
              ? new Base(data, toOffset($offset, BYTES))
              : new Base(data);
        }
        if (TYPED_ARRAY in data) return fromList(TypedArray, data);
        return $from.call(TypedArray, data);
      });
      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {
        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);
      });
      TypedArray[PROTOTYPE] = TypedArrayPrototype;
      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;
    }
    var $nativeIterator = TypedArrayPrototype[ITERATOR];
    var CORRECT_ITER_NAME = !!$nativeIterator
      && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);
    var $iterator = $iterators.values;
    hide(TypedArray, TYPED_CONSTRUCTOR, true);
    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
    hide(TypedArrayPrototype, VIEW, true);
    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);

    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {
      dP(TypedArrayPrototype, TAG, {
        get: function () { return NAME; }
      });
    }

    O[NAME] = TypedArray;

    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);

    $export($export.S, NAME, {
      BYTES_PER_ELEMENT: BYTES
    });

    $export($export.S + $export.F * fails(function () { Base.of.call(TypedArray, 1); }), NAME, {
      from: $from,
      of: $of
    });

    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);

    $export($export.P, NAME, proto);

    setSpecies(NAME);

    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });

    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);

    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;

    $export($export.P + $export.F * fails(function () {
      new TypedArray(1).slice();
    }), NAME, { slice: $slice });

    $export($export.P + $export.F * (fails(function () {
      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();
    }) || !fails(function () {
      TypedArrayPrototype.toLocaleString.call([1, 2]);
    })), NAME, { toLocaleString: $toLocaleString });

    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);
  };
} else module.exports = function () { /* empty */ };


/***/ }),

/***/ "b0rI":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return useChinaMirrorHost; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return usePrevAndNext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return useLogoLink; });
/* harmony import */ var core_js_modules_es6_string_link__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("ScpY");
/* harmony import */ var core_js_modules_es6_string_link__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_string_link__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_string_iterator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("lQyR");
/* harmony import */ var core_js_modules_es6_string_iterator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_string_iterator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es6_array_from__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("YhIr");
/* harmony import */ var core_js_modules_es6_array_from__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_from__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es6_array_find_index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("2UZ+");
/* harmony import */ var core_js_modules_es6_array_find_index__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_find_index__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es7_array_includes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("oMRA");
/* harmony import */ var core_js_modules_es7_array_includes__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es7_array_includes__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es6_string_includes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("6d4m");
/* harmony import */ var core_js_modules_es6_string_includes__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_string_includes__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("mXGw");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);







var useChinaMirrorHost = function useChinaMirrorHost() {
  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_6__["useState"])(false),
      isChinaMirrorHost = _useState[0],
      setIsChinaMirrorHost = _useState[1];

  Object(react__WEBPACK_IMPORTED_MODULE_6__["useEffect"])(function () {
    if (window.location.host.includes('gitee.io') && window.location.host.includes('antv')) {
      setIsChinaMirrorHost(true);
    }
  }, []);
  return [isChinaMirrorHost];
};
var usePrevAndNext = function usePrevAndNext() {
  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_6__["useState"])([]),
      prevAndNext = _useState2[0],
      setPrevAndNext = _useState2[1];

  Object(react__WEBPACK_IMPORTED_MODULE_6__["useEffect"])(function () {
    var menuNodes = document.querySelectorAll('aside .ant-menu-item a');
    var currentMenuNode = document.querySelector('aside .ant-menu-item-selected a');
    var currentIndex = Array.from(menuNodes).findIndex(function (node) {
      return node === currentMenuNode;
    });
    var prevNode = currentIndex - 1 >= 0 ? menuNodes[currentIndex - 1] : undefined;
    var nextNode = currentIndex + 1 < menuNodes.length ? menuNodes[currentIndex + 1] : undefined;
    var prev = prevNode ? {
      slug: prevNode.getAttribute('href') || undefined,
      title: prevNode.textContent || undefined
    } : undefined;
    var next = nextNode ? {
      slug: nextNode.getAttribute('href') || undefined,
      title: nextNode.textContent || undefined
    } : undefined;
    setPrevAndNext([prev, next]);
  }, []);
  return prevAndNext;
};
var useLogoLink = function useLogoLink(_ref) {
  var _ref$link = _ref.link,
      link = _ref$link === void 0 ? '' : _ref$link,
      _ref$siteUrl = _ref.siteUrl,
      siteUrl = _ref$siteUrl === void 0 ? '' : _ref$siteUrl,
      _ref$lang = _ref.lang,
      lang = _ref$lang === void 0 ? '' : _ref$lang;
  var defaultLogoLink;

  if (link) {
    defaultLogoLink = link;
  } else if (siteUrl === 'https://antv.vision') {
    defaultLogoLink = "/" + lang;
  } else {
    defaultLogoLink = "https://antv.vision/" + lang;
  }

  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_6__["useState"])(''),
      giteeLogoLink = _useState3[0],
      setGiteeLogoLink = _useState3[1];

  Object(react__WEBPACK_IMPORTED_MODULE_6__["useEffect"])(function () {
    if (window.location.host.includes('gitee.io') && window.location.host.includes('antv')) {
      setGiteeLogoLink("https://antv.gitee.io/" + lang);
    }
  }, []);
  return [giteeLogoLink || defaultLogoLink];
};

/***/ }),

/***/ "b1Jh":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var util_1 = __webpack_require__("aOij");

function default_1(shape) {
  var attrs = shape.attr();
  var x1 = attrs.x1,
      y1 = attrs.y1,
      x2 = attrs.x2,
      y2 = attrs.y2;
  var minX = Math.min(x1, x2);
  var maxX = Math.max(x1, x2);
  var minY = Math.min(y1, y2);
  var maxY = Math.max(y1, y2);
  var bbox = {
    minX: minX,
    maxX: maxX,
    minY: minY,
    maxY: maxY
  };
  bbox = util_1.mergeArrowBBox(shape, bbox);
  return {
    x: bbox.minX,
    y: bbox.minY,
    width: bbox.maxX - bbox.minX,
    height: bbox.maxY - bbox.minY
  };
}

exports["default"] = default_1;

/***/ }),

/***/ "b8Rm":
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),

/***/ "bIG9":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return useNotification; });
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("5hJT");
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("6CzD");
/* harmony import */ var _babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("aNYv");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("mXGw");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _Notice__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("w37R");





function useNotification(notificationInstance) {
  var createdRef = react__WEBPACK_IMPORTED_MODULE_3__["useRef"]({});

  var _React$useState = react__WEBPACK_IMPORTED_MODULE_3__["useState"]([]),
      _React$useState2 = Object(_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(_React$useState, 2),
      elements = _React$useState2[0],
      setElements = _React$useState2[1];

  function notify(noticeProps) {
    notificationInstance.add(noticeProps, function (div, props) {
      var key = props.key;

      if (div && !createdRef.current[key]) {
        var noticeEle = react__WEBPACK_IMPORTED_MODULE_3__["createElement"](_Notice__WEBPACK_IMPORTED_MODULE_4__[/* default */ "a"], Object.assign({}, props, {
          holder: div
        }));
        createdRef.current[key] = noticeEle;
        setElements(function (originElements) {
          return [].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(originElements), [noticeEle]);
        });
      }
    });
  }

  return [notify, react__WEBPACK_IMPORTED_MODULE_3__["createElement"](react__WEBPACK_IMPORTED_MODULE_3__["Fragment"], null, elements)];
}

/***/ }),

/***/ "bLny":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var is_type_1 = __webpack_require__("z55C");

exports["default"] = function (str) {
  return is_type_1["default"](str, 'String');
};

/***/ }),

/***/ "bb6g":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__extends", function() { return __extends; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__assign", function() { return _assign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__rest", function() { return __rest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__decorate", function() { return __decorate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__param", function() { return __param; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__metadata", function() { return __metadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__awaiter", function() { return __awaiter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__generator", function() { return __generator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__createBinding", function() { return __createBinding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__exportStar", function() { return __exportStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__values", function() { return __values; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__read", function() { return __read; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spread", function() { return __spread; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spreadArrays", function() { return __spreadArrays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__await", function() { return __await; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function() { return __asyncGenerator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function() { return __asyncDelegator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncValues", function() { return __asyncValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function() { return __makeTemplateObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importStar", function() { return __importStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importDefault", function() { return __importDefault; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__classPrivateFieldGet", function() { return __classPrivateFieldGet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__classPrivateFieldSet", function() { return __classPrivateFieldSet; });
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("W1QL");
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("+jjx");
/* harmony import */ var core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es6_promise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("DbwS");
/* harmony import */ var core_js_modules_es6_promise__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_promise__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("t91x");
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("d3/y");
/* harmony import */ var core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("ABKx");
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es6_array_index_of__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("V7cS");
/* harmony import */ var core_js_modules_es6_array_index_of__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_index_of__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("5hJT");
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es6_object_create__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("PAbq");
/* harmony import */ var core_js_modules_es6_object_create__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_create__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es6_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("1qKx");
/* harmony import */ var core_js_modules_es6_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_9__);











/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

/* global Reflect, Promise */
var _extendStatics = function extendStatics(d, b) {
  _extendStatics = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (d, b) {
    d.__proto__ = b;
  } || function (d, b) {
    for (var p in b) {
      if (b.hasOwnProperty(p)) d[p] = b[p];
    }
  };

  return _extendStatics(d, b);
};

function __extends(d, b) {
  _extendStatics(d, b);

  function __() {
    this.constructor = d;
  }

  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var _assign = function __assign() {
  _assign = Object.assign || function __assign(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return _assign.apply(this, arguments);
};


function __rest(s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
}
function __decorate(decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
}
function __param(paramIndex, decorator) {
  return function (target, key) {
    decorator(target, key, paramIndex);
  };
}
function __metadata(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
}
function __createBinding(o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
}
function __exportStar(m, exports) {
  for (var p in m) {
    if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
  }
}
function __values(o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
}
function __spread() {
  for (var ar = [], i = 0; i < arguments.length; i++) {
    ar = ar.concat(__read(arguments[i]));
  }

  return ar;
}
function __spreadArrays() {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {
    s += arguments[i].length;
  }

  for (var r = Array(s), k = 0, i = 0; i < il; i++) {
    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {
      r[k] = a[j];
    }
  }

  return r;
}
;
function __await(v) {
  return this instanceof __await ? (this.v = v, this) : new __await(v);
}
function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g = generator.apply(thisArg, _arguments || []),
      i,
      q = [];
  return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
    return this;
  }, i;

  function verb(n) {
    if (g[n]) i[n] = function (v) {
      return new Promise(function (a, b) {
        q.push([n, v, a, b]) > 1 || resume(n, v);
      });
    };
  }

  function resume(n, v) {
    try {
      step(g[n](v));
    } catch (e) {
      settle(q[0][3], e);
    }
  }

  function step(r) {
    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
  }

  function fulfill(value) {
    resume("next", value);
  }

  function reject(value) {
    resume("throw", value);
  }

  function settle(f, v) {
    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
  }
}
function __asyncDelegator(o) {
  var i, p;
  return i = {}, verb("next"), verb("throw", function (e) {
    throw e;
  }), verb("return"), i[Symbol.iterator] = function () {
    return this;
  }, i;

  function verb(n, f) {
    i[n] = o[n] ? function (v) {
      return (p = !p) ? {
        value: __await(o[n](v)),
        done: n === "return"
      } : f ? f(v) : v;
    } : f;
  }
}
function __asyncValues(o) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m = o[Symbol.asyncIterator],
      i;
  return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
    return this;
  }, i);

  function verb(n) {
    i[n] = o[n] && function (v) {
      return new Promise(function (resolve, reject) {
        v = o[n](v), settle(resolve, reject, v.done, v.value);
      });
    };
  }

  function settle(resolve, reject, d, v) {
    Promise.resolve(v).then(function (v) {
      resolve({
        value: v,
        done: d
      });
    }, reject);
  }
}
function __makeTemplateObject(cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", {
      value: raw
    });
  } else {
    cooked.raw = raw;
  }

  return cooked;
}
;
function __importStar(mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
  }
  result["default"] = mod;
  return result;
}
function __importDefault(mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
}
function __classPrivateFieldGet(receiver, privateMap) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to get private field on non-instance");
  }

  return privateMap.get(receiver);
}
function __classPrivateFieldSet(receiver, privateMap, value) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to set private field on non-instance");
  }

  privateMap.set(receiver, value);
  return value;
}

/***/ }),

/***/ "bh9w":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("5hJT");

__webpack_require__("d3/y");

var _interopRequireDefault = __webpack_require__("63Ad");

var _interopRequireWildcard = __webpack_require__("vdEC");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var React = _interopRequireWildcard(__webpack_require__("mXGw"));

var _DownOutlined = _interopRequireDefault(__webpack_require__("5ERL"));

var _AntdIcon = _interopRequireDefault(__webpack_require__("CxZ5")); // GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY


var DownOutlined = function DownOutlined(props, ref) {
  return React.createElement(_AntdIcon["default"], Object.assign({}, props, {
    ref: ref,
    icon: _DownOutlined["default"]
  }));
};

DownOutlined.displayName = 'DownOutlined';

var _default = React.forwardRef(DownOutlined);

exports["default"] = _default;

/***/ }),

/***/ "bmJ9":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("W1QL");

__webpack_require__("K/PF");

__webpack_require__("t91x");

__webpack_require__("75LO");

var _curry1 = __webpack_require__("AN6r");

var _has = __webpack_require__("bprV");

var _isArguments = __webpack_require__("d075");
/**
 * Returns a list containing the names of all the enumerable own properties of
 * the supplied object.
 * Note that the order of the output array is not guaranteed to be consistent
 * across different JS platforms.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Object
 * @sig {k: v} -> [k]
 * @param {Object} obj The object to extract properties from
 * @return {Array} An array of the object's own properties.
 * @see R.keysIn, R.values
 * @example
 *
 *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']
 */


module.exports = function () {
  // cover IE < 9 keys issues
  var hasEnumBug = !{
    toString: null
  }.propertyIsEnumerable('toString');
  var nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString']; // Safari bug

  var hasArgsEnumBug = function () {
    'use strict';

    return arguments.propertyIsEnumerable('length');
  }();

  var contains = function contains(list, item) {
    var idx = 0;

    while (idx < list.length) {
      if (list[idx] === item) {
        return true;
      }

      idx += 1;
    }

    return false;
  };

  return typeof Object.keys === 'function' && !hasArgsEnumBug ? _curry1(function keys(obj) {
    return Object(obj) !== obj ? [] : Object.keys(obj);
  }) : _curry1(function keys(obj) {
    if (Object(obj) !== obj) {
      return [];
    }

    var prop, nIdx;
    var ks = [];

    var checkArgsLength = hasArgsEnumBug && _isArguments(obj);

    for (prop in obj) {
      if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {
        ks[ks.length] = prop;
      }
    }

    if (hasEnumBug) {
      nIdx = nonEnumerableProps.length - 1;

      while (nIdx >= 0) {
        prop = nonEnumerableProps[nIdx];

        if (_has(prop, obj) && !contains(ks, prop)) {
          ks[ks.length] = prop;
        }

        nIdx -= 1;
      }
    }

    return ks;
  });
}();

/***/ }),

/***/ "bprV":
/***/ (function(module, exports) {

module.exports = function _has(prop, obj) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
};

/***/ }),

/***/ "c+5F":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/* unused harmony export BrowserInfo */
/* unused harmony export NodeInfo */
/* unused harmony export SearchBotDeviceInfo */
/* unused harmony export BotInfo */
/* unused harmony export ReactNativeInfo */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return detect; });
/* unused harmony export browserName */
/* unused harmony export parseUserAgent */
/* unused harmony export detectOS */
/* unused harmony export getNodeVersion */
/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("asZ9");
/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_array_reduce__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("3y5y");
/* harmony import */ var core_js_modules_es6_array_reduce__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_reduce__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("GkPX");
/* harmony import */ var core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_2__);




var __spreadArrays = undefined && undefined.__spreadArrays || function () {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {
    s += arguments[i].length;
  }

  for (var r = Array(s), k = 0, i = 0; i < il; i++) {
    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {
      r[k] = a[j];
    }
  }

  return r;
};

var BrowserInfo =
/** @class */
function () {
  function BrowserInfo(name, version, os) {
    this.name = name;
    this.version = version;
    this.os = os;
    this.type = 'browser';
  }

  return BrowserInfo;
}();



var NodeInfo =
/** @class */
function () {
  function NodeInfo(version) {
    this.version = version;
    this.type = 'node';
    this.name = 'node';
    this.os = process.platform;
  }

  return NodeInfo;
}();



var SearchBotDeviceInfo =
/** @class */
function () {
  function SearchBotDeviceInfo(name, version, os, bot) {
    this.name = name;
    this.version = version;
    this.os = os;
    this.bot = bot;
    this.type = 'bot-device';
  }

  return SearchBotDeviceInfo;
}();



var BotInfo =
/** @class */
function () {
  function BotInfo() {
    this.type = 'bot';
    this.bot = true; // NOTE: deprecated test name instead

    this.name = 'bot';
    this.version = null;
    this.os = null;
  }

  return BotInfo;
}();



var ReactNativeInfo =
/** @class */
function () {
  function ReactNativeInfo() {
    this.type = 'react-native';
    this.name = 'react-native';
    this.version = null;
    this.os = null;
  }

  return ReactNativeInfo;
}();

 // tslint:disable-next-line:max-line-length

var SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;
var SEARCHBOT_OS_REGEX = /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\ Jeeves\/Teoma|ia_archiver)/;
var REQUIRED_VERSION_PARTS = 3;
var userAgentRules = [['aol', /AOLShield\/([0-9\._]+)/], ['edge', /Edge\/([0-9\._]+)/], ['edge-ios', /EdgiOS\/([0-9\._]+)/], ['yandexbrowser', /YaBrowser\/([0-9\._]+)/], ['kakaotalk', /KAKAOTALK\s([0-9\.]+)/], ['samsung', /SamsungBrowser\/([0-9\.]+)/], ['silk', /\bSilk\/([0-9._-]+)\b/], ['miui', /MiuiBrowser\/([0-9\.]+)$/], ['beaker', /BeakerBrowser\/([0-9\.]+)/], ['edge-chromium', /Edg\/([0-9\.]+)/], ['chromium-webview', /(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/], ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/], ['phantomjs', /PhantomJS\/([0-9\.]+)(:?\s|$)/], ['crios', /CriOS\/([0-9\.]+)(:?\s|$)/], ['firefox', /Firefox\/([0-9\.]+)(?:\s|$)/], ['fxios', /FxiOS\/([0-9\.]+)/], ['opera-mini', /Opera Mini.*Version\/([0-9\.]+)/], ['opera', /Opera\/([0-9\.]+)(?:\s|$)/], ['opera', /OPR\/([0-9\.]+)(:?\s|$)/], ['ie', /Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/], ['ie', /MSIE\s([0-9\.]+);.*Trident\/[4-7].0/], ['ie', /MSIE\s(7\.0)/], ['bb10', /BB10;\sTouch.*Version\/([0-9\.]+)/], ['android', /Android\s([0-9\.]+)/], ['ios', /Version\/([0-9\._]+).*Mobile.*Safari.*/], ['safari', /Version\/([0-9\._]+).*Safari/], ['facebook', /FBAV\/([0-9\.]+)/], ['instagram', /Instagram\s([0-9\.]+)/], ['ios-webview', /AppleWebKit\/([0-9\.]+).*Mobile/], ['ios-webview', /AppleWebKit\/([0-9\.]+).*Gecko\)$/], ['searchbot', SEARCHBOX_UA_REGEX]];
var operatingSystemRules = [['iOS', /iP(hone|od|ad)/], ['Android OS', /Android/], ['BlackBerry OS', /BlackBerry|BB10/], ['Windows Mobile', /IEMobile/], ['Amazon OS', /Kindle/], ['Windows 3.11', /Win16/], ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/], ['Windows 98', /(Windows 98)|(Win98)/], ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/], ['Windows XP', /(Windows NT 5.1)|(Windows XP)/], ['Windows Server 2003', /(Windows NT 5.2)/], ['Windows Vista', /(Windows NT 6.0)/], ['Windows 7', /(Windows NT 6.1)/], ['Windows 8', /(Windows NT 6.2)/], ['Windows 8.1', /(Windows NT 6.3)/], ['Windows 10', /(Windows NT 10.0)/], ['Windows ME', /Windows ME/], ['Open BSD', /OpenBSD/], ['Sun OS', /SunOS/], ['Chrome OS', /CrOS/], ['Linux', /(Linux)|(X11)/], ['Mac OS', /(Mac_PowerPC)|(Macintosh)/], ['QNX', /QNX/], ['BeOS', /BeOS/], ['OS/2', /OS\/2/]];
function detect(userAgent) {
  if (!!userAgent) {
    return parseUserAgent(userAgent);
  }

  if (typeof document === 'undefined' && typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {
    return new ReactNativeInfo();
  }

  if (typeof navigator !== 'undefined') {
    return parseUserAgent(navigator.userAgent);
  }

  return getNodeVersion();
}

function matchUserAgent(ua) {
  // opted for using reduce here rather than Array#first with a regex.test call
  // this is primarily because using the reduce we only perform the regex
  // execution once rather than once for the test and for the exec again below
  // probably something that needs to be benchmarked though
  return ua !== '' && userAgentRules.reduce(function (matched, _a) {
    var browser = _a[0],
        regex = _a[1];

    if (matched) {
      return matched;
    }

    var uaMatch = regex.exec(ua);
    return !!uaMatch && [browser, uaMatch];
  }, false);
}

function browserName(ua) {
  var data = matchUserAgent(ua);
  return data ? data[0] : null;
}
function parseUserAgent(ua) {
  var matchedRule = matchUserAgent(ua);

  if (!matchedRule) {
    return null;
  }

  var name = matchedRule[0],
      match = matchedRule[1];

  if (name === 'searchbot') {
    return new BotInfo();
  }

  var versionParts = match[1] && match[1].split(/[._]/).slice(0, 3);

  if (versionParts) {
    if (versionParts.length < REQUIRED_VERSION_PARTS) {
      versionParts = __spreadArrays(versionParts, createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length));
    }
  } else {
    versionParts = [];
  }

  var version = versionParts.join('.');
  var os = detectOS(ua);
  var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);

  if (searchBotMatch && searchBotMatch[1]) {
    return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);
  }

  return new BrowserInfo(name, version, os);
}
function detectOS(ua) {
  for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {
    var _a = operatingSystemRules[ii],
        os = _a[0],
        regex = _a[1];
    var match = regex.exec(ua);

    if (match) {
      return os;
    }
  }

  return null;
}
function getNodeVersion() {
  var isNode = typeof process !== 'undefined' && process.version;
  return isNode ? new NodeInfo(process.version.slice(1)) : null;
}

function createVersionParts(count) {
  var output = [];

  for (var ii = 0; ii < count; ii++) {
    output.push('0');
  }

  return output;
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("5IsQ")))

/***/ }),

/***/ "cK8K":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("5hJT");

__webpack_require__("d3/y");

var _interopRequireDefault = __webpack_require__("63Ad");

var _interopRequireWildcard = __webpack_require__("vdEC");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var React = _interopRequireWildcard(__webpack_require__("mXGw"));

var _CloseCircleOutlined = _interopRequireDefault(__webpack_require__("/hZi"));

var _AntdIcon = _interopRequireDefault(__webpack_require__("CxZ5")); // GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY


var CloseCircleOutlined = function CloseCircleOutlined(props, ref) {
  return React.createElement(_AntdIcon["default"], Object.assign({}, props, {
    ref: ref,
    icon: _CloseCircleOutlined["default"]
  }));
};

CloseCircleOutlined.displayName = 'CloseCircleOutlined';

var _default = React.forwardRef(CloseCircleOutlined);

exports["default"] = _default;

/***/ }),

/***/ "cSJ8":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return stripPrefix; });
/* harmony import */ var core_js_modules_es6_string_starts_with__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("FEHE");
/* harmony import */ var core_js_modules_es6_string_starts_with__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_string_starts_with__WEBPACK_IMPORTED_MODULE_0__);
/**
 * Remove a prefix from a string. Return the input string if the given prefix
 * isn't found.
 */function stripPrefix(str,prefix){if(prefix===void 0){prefix="";}if(!prefix){return str;}if(str===prefix){return"/";}if(str.startsWith(prefix+"/")){return str.slice(prefix.length);}return str;}

/***/ }),

/***/ "cU4Z":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var util_1 = __webpack_require__("H4Zb");

var vec2 = __webpack_require__("umh7");

exports["default"] = {
  /**
   * 计算线段的包围盒
   * @param {number} x1 起始点 x
   * @param {number} y1 起始点 y
   * @param {number} x2 结束点 x
   * @param {number} y2 结束点 y
   * @return {object} 包围盒对象
   */
  box: function box(x1, y1, x2, y2) {
    return util_1.getBBoxByArray([x1, x2], [y1, y2]);
  },

  /**
   * 线段的长度
   * @param {number} x1 起始点 x
   * @param {number} y1 起始点 y
   * @param {number} x2 结束点 x
   * @param {number} y2 结束点 y
   * @return {number} 距离
   */
  length: function length(x1, y1, x2, y2) {
    return util_1.distance(x1, y1, x2, y2);
  },

  /**
   * 根据比例获取点
   * @param {number} x1 起始点 x
   * @param {number} y1 起始点 y
   * @param {number} x2 结束点 x
   * @param {number} y2 结束点 y
   * @param {number} t 指定比例
   * @return {object} 包含 x, y 的点
   */
  pointAt: function pointAt(x1, y1, x2, y2, t) {
    return {
      x: (1 - t) * x1 + t * x2,
      y: (1 - t) * y1 + t * y2
    };
  },

  /**
   * 点到线段的距离
   * @param {number} x1 起始点 x
   * @param {number} y1 起始点 y
   * @param {number} x2 结束点 x
   * @param {number} y2 结束点 y
   * @param {number} x  测试点 x
   * @param {number} y  测试点 y
   * @return {number} 距离
   */
  pointDistance: function pointDistance(x1, y1, x2, y2, x, y) {
    // 投影距离 x1, y1 的向量，假设 p, p1, p2 三个点，投影点为 a
    // p1a = p1p.p1p2/|p1p2| * (p1p 的单位向量)
    var cross = (x2 - x1) * (x - x1) + (y2 - y1) * (y - y1);

    if (cross < 0) {
      return util_1.distance(x1, y1, x, y);
    }

    var lengthSquare = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);

    if (cross > lengthSquare) {
      return util_1.distance(x2, y2, x, y);
    }

    return this.pointToLine(x1, y1, x2, y2, x, y);
  },

  /**
   * 点到直线的距离，而不是点到线段的距离
   * @param {number} x1 起始点 x
   * @param {number} y1 起始点 y
   * @param {number} x2 结束点 x
   * @param {number} y2 结束点 y
   * @param {number} x  测试点 x
   * @param {number} y  测试点 y
   * @return {number} 距离
   */
  pointToLine: function pointToLine(x1, y1, x2, y2, x, y) {
    var d = [x2 - x1, y2 - y1]; // 如果端点相等，则判定点到点的距离

    if (vec2.exactEquals(d, [0, 0])) {
      return Math.sqrt((x - x1) * (x - x1) + (y - y1) * (y - y1));
    }

    var u = [-d[1], d[0]];
    vec2.normalize(u, u);
    var a = [x - x1, y - y1];
    return Math.abs(vec2.dot(a, u));
  },

  /**
   * 线段的角度
   * @param {number} x1 起始点 x
   * @param {number} y1 起始点 y
   * @param {number} x2 结束点 x
   * @param {number} y2 结束点 y
   * @return {number} 导数
   */
  tangentAngle: function tangentAngle(x1, y1, x2, y2) {
    return Math.atan2(y2 - y1, x2 - x1);
  }
};

/***/ }),

/***/ "cb3D":
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-string-pad-start-end
var toLength = __webpack_require__("Sp5b");
var repeat = __webpack_require__("p1Jl");
var defined = __webpack_require__("GCOZ");

module.exports = function (that, maxLength, fillString, left) {
  var S = String(defined(that));
  var stringLength = S.length;
  var fillStr = fillString === undefined ? ' ' : String(fillString);
  var intMaxLength = toLength(maxLength);
  if (intMaxLength <= stringLength || fillStr == '') return S;
  var fillLen = intMaxLength - stringLength;
  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);
  return left ? stringFiller + S : S + stringFiller;
};


/***/ }),

/***/ "cl25":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------

__webpack_require__("W1QL");

__webpack_require__("K/PF");

__webpack_require__("t91x");

__webpack_require__("75LO");

__webpack_require__("7lGJ");

var copyDocs = __webpack_require__("E6WT");

var defineAdtMethod = function defineAdtMethod(adt, definitions) {
  Object.keys(definitions).forEach(function (name) {
    var methods = definitions[name];
    adt.variants.forEach(function (variant) {
      var method = methods[variant.tag];

      if (!method) {
        throw new TypeError('Method ' + name + ' not defined for ' + variant.tag);
      }

      copyDocs(methods, method);
      variant.prototype[name] = method;
    });
  });
};

module.exports = defineAdtMethod;

/***/ }),

/***/ "cpHF":
/***/ (function(module, exports, __webpack_require__) {

var _curry2 = __webpack_require__("OFPg");

var equals = __webpack_require__("LGMZ");

var take = __webpack_require__("XDlq");
/**
 * Checks if a list starts with the provided values
 *
 * @func
 * @memberOf R
 * @since v0.24.0
 * @category List
 * @sig [a] -> Boolean
 * @sig String -> Boolean
 * @param {*} prefix
 * @param {*} list
 * @return {Boolean}
 * @example
 *
 *      R.startsWith('a', 'abc')                //=> true
 *      R.startsWith('b', 'abc')                //=> false
 *      R.startsWith(['a'], ['a', 'b', 'c'])    //=> true
 *      R.startsWith(['b'], ['a', 'b', 'c'])    //=> false
 */


module.exports = _curry2(function (prefix, list) {
  return equals(take(prefix.length, list), prefix);
});

/***/ }),

/***/ "ct/D":
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),

/***/ "czn3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__("vdEC");

var _interopRequireDefault = __webpack_require__("63Ad");

exports.__esModule = true;
exports.ScrollHandler = exports.ScrollContext = void 0;

var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__("T1e2"));

var _inheritsLoose2 = _interopRequireDefault(__webpack_require__("QKC2"));

var React = _interopRequireWildcard(__webpack_require__("mXGw"));

var _sessionStorage = __webpack_require__("TRAi");

var ScrollContext = React.createContext(new _sessionStorage.SessionStorage());
exports.ScrollContext = ScrollContext;
ScrollContext.displayName = "GatsbyScrollContext";

var ScrollHandler = /*#__PURE__*/function (_React$Component) {
  (0, _inheritsLoose2["default"])(ScrollHandler, _React$Component);

  function ScrollHandler() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this._stateStorage = new _sessionStorage.SessionStorage();

    _this.scrollListener = function () {
      var key = _this.props.location.key;

      if (key) {
        _this._stateStorage.save(_this.props.location, key, window.scrollY);
      }
    };

    _this.windowScroll = function (position, prevProps) {
      if (_this.shouldUpdateScroll(prevProps, _this.props)) {
        window.scrollTo(0, position);
      }
    };

    _this.scrollToHash = function (hash, prevProps) {
      var node = document.getElementById(hash.substring(1));

      if (node && _this.shouldUpdateScroll(prevProps, _this.props)) {
        node.scrollIntoView();
      }
    };

    _this.shouldUpdateScroll = function (prevRouterProps, routerProps) {
      var shouldUpdateScroll = _this.props.shouldUpdateScroll;

      if (!shouldUpdateScroll) {
        return true;
      } // Hack to allow accessing this._stateStorage.


      return shouldUpdateScroll.call((0, _assertThisInitialized2["default"])(_this), prevRouterProps, routerProps);
    };

    return _this;
  }

  var _proto = ScrollHandler.prototype;

  _proto.componentDidMount = function componentDidMount() {
    window.addEventListener("scroll", this.scrollListener);
    var scrollPosition;
    var _this$props$location = this.props.location,
        key = _this$props$location.key,
        hash = _this$props$location.hash;

    if (key) {
      scrollPosition = this._stateStorage.read(this.props.location, key);
    }

    if (scrollPosition) {
      this.windowScroll(scrollPosition, undefined);
    } else if (hash) {
      this.scrollToHash(decodeURI(hash), undefined);
    }
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    window.removeEventListener("scroll", this.scrollListener);
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var _this$props$location2 = this.props.location,
        hash = _this$props$location2.hash,
        key = _this$props$location2.key;
    var scrollPosition;

    if (key) {
      scrollPosition = this._stateStorage.read(this.props.location, key);
    }

    if (hash && scrollPosition === 0) {
      this.scrollToHash(decodeURI(hash), prevProps);
    } else {
      this.windowScroll(scrollPosition, prevProps);
    }
  };

  _proto.render = function render() {
    return /*#__PURE__*/React.createElement(ScrollContext.Provider, {
      value: this._stateStorage
    }, this.props.children);
  };

  return ScrollHandler;
}(React.Component);

exports.ScrollHandler = ScrollHandler;

/***/ }),

/***/ "d075":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("4aJ6");

__webpack_require__("M/4x");

__webpack_require__("t91x");

var _has = __webpack_require__("bprV");

module.exports = function () {
  var toString = Object.prototype.toString;
  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {
    return toString.call(x) === '[object Arguments]';
  } : function _isArguments(x) {
    return _has('callee', x);
  };
}();

/***/ }),

/***/ "d3/y":
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__("X6VK");
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !__webpack_require__("GGqZ"), 'Object', { defineProperty: __webpack_require__("U1KF").f });


/***/ }),

/***/ "dCrc":
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__("Xj5l");
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),

/***/ "dV/x":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ _objectWithoutProperties; });

// CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}
// CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

/***/ }),

/***/ "dVhv":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var at = __webpack_require__("uRBY")(true);

 // `AdvanceStringIndex` abstract operation
// https://tc39.github.io/ecma262/#sec-advancestringindex
module.exports = function (S, index, unicode) {
  return index + (unicode ? at(S, index).length : 1);
};


/***/ }),

/***/ "dXJ/":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
exports.wrapPageElement=__webpack_require__("OdHn");

/***/ }),

/***/ "deSU":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("5hJT");

__webpack_require__("d3/y");

var _interopRequireDefault = __webpack_require__("63Ad");

var _interopRequireWildcard = __webpack_require__("vdEC");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var React = _interopRequireWildcard(__webpack_require__("mXGw"));

var _ExclamationCircleFilled = _interopRequireDefault(__webpack_require__("IqHs"));

var _AntdIcon = _interopRequireDefault(__webpack_require__("CxZ5")); // GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY


var ExclamationCircleFilled = function ExclamationCircleFilled(props, ref) {
  return React.createElement(_AntdIcon["default"], Object.assign({}, props, {
    ref: ref,
    icon: _ExclamationCircleFilled["default"]
  }));
};

ExclamationCircleFilled.displayName = 'ExclamationCircleFilled';

var _default = React.forwardRef(ExclamationCircleFilled);

exports["default"] = _default;

/***/ }),

/***/ "dtzt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.2 String.prototype.anchor(name)
__webpack_require__("LEAW")('anchor', function (createHTML) {
  return function anchor(name) {
    return createHTML(this, 'a', 'name', name);
  };
});


/***/ }),

/***/ "e+GP":
/***/ (function(module, exports) {

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

module.exports = _typeof;

/***/ }),

/***/ "e2Kn":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__("P56o");
var has = __webpack_require__("ezc+");
var cof = __webpack_require__("n+VH");
var inheritIfRequired = __webpack_require__("jEou");
var toPrimitive = __webpack_require__("5MU4");
var fails = __webpack_require__("E7Vc");
var gOPN = __webpack_require__("zIds").f;
var gOPD = __webpack_require__("1Tj+").f;
var dP = __webpack_require__("U1KF").f;
var $trim = __webpack_require__("hGr/").trim;
var NUMBER = 'Number';
var $Number = global[NUMBER];
var Base = $Number;
var proto = $Number.prototype;
// Opera ~12 has broken Object#toString
var BROKEN_COF = cof(__webpack_require__("Vx+c")(proto)) == NUMBER;
var TRIM = 'trim' in String.prototype;

// 7.1.3 ToNumber(argument)
var toNumber = function (argument) {
  var it = toPrimitive(argument, false);
  if (typeof it == 'string' && it.length > 2) {
    it = TRIM ? it.trim() : $trim(it, 3);
    var first = it.charCodeAt(0);
    var third, radix, maxCode;
    if (first === 43 || first === 45) {
      third = it.charCodeAt(2);
      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
    } else if (first === 48) {
      switch (it.charCodeAt(1)) {
        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i
        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i
        default: return +it;
      }
      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {
        code = digits.charCodeAt(i);
        // parseInt parses a string to a first unavailable symbol
        // but ToNumber should return NaN if a string contains unavailable symbols
        if (code < 48 || code > maxCode) return NaN;
      } return parseInt(digits, radix);
    }
  } return +it;
};

if (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {
  $Number = function Number(value) {
    var it = arguments.length < 1 ? 0 : value;
    var that = this;
    return that instanceof $Number
      // check on 1..constructor(foo) case
      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)
        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
  };
  for (var keys = __webpack_require__("GGqZ") ? gOPN(Base) : (
    // ES3:
    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
    // ES6 (in case, if modules with ES6 Number statics required before):
    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
  ).split(','), j = 0, key; keys.length > j; j++) {
    if (has(Base, key = keys[j]) && !has($Number, key)) {
      dP($Number, key, gOPD(Base, key));
    }
  }
  $Number.prototype = proto;
  proto.constructor = $Number;
  __webpack_require__("sU/p")(global, NUMBER, $Number);
}


/***/ }),

/***/ "eCEB":
/***/ (function(module) {

module.exports = JSON.parse("{\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"AntV test site\",\"githubUrl\":\"https://github.com/antvis/gatsby-theme-antv/tree/master/example\",\"siteUrl\":\"https://test.antv.vision\",\"logoUrl\":null,\"showSearch\":null,\"showChinaMirror\":null,\"showLanguageSwitcher\":null,\"showAntVProductsCard\":null,\"showGithubCorner\":null,\"navs\":[{\"slug\":\"docs/specification/getting-started\",\"title\":{\"zh\":\"设计语言\",\"en\":\"Specification\"},\"target\":null},{\"slug\":\"docs/other\",\"title\":{\"zh\":\"其他文档\",\"en\":\"other\"},\"target\":null},{\"slug\":\"examples\",\"title\":{\"zh\":\"图表演示\",\"en\":\"Examples\"},\"target\":null},{\"slug\":\"independent\",\"title\":{\"zh\":\"独立\",\"en\":\"MyApp\"},\"target\":null}],\"redirects\":[],\"docsearchOptions\":null,\"versions\":{\"1.0.0\":\"https://ant.design\",\"2.x\":\"https://2x.ant.design\",\"1.x\":\"https://1x.ant.design\"}}},\"locales\":{\"internal\":{\"content\":\"{\\\"en\\\":{\\\"translation\\\":{\\\"蚂蚁数据可视化\\\":\\\"Liven Data Lively\\\",\\\"项目里的国际化\\\":\\\"English locale in project\\\",\\\"让数据栩栩如生\\\":\\\"Make the Data Vivid\\\",\\\"AntV 是蚂蚁金服全新一代数据可视化解决方案，致力于提供一套简单方便、专业可靠、无限可能的数据可视化最佳实践。\\\":\\\"AntV is a new generation of data visualization technique from Ant Financial. We provide best practices of data visualization with simplicity, convenience, profession, reliability, and infinite possibilities.\\\",\\\"继续了解\\\":\\\"More\\\",\\\"更新\\\":\\\"Update\\\",\\\"L7 发布新版本，让地图动起来！\\\":\\\"L7 has published the new viewsion!\\\",\\\"推荐\\\":\\\"Recommand\\\",\\\"Kitchen 3.75，效率大幅提升！\\\":\\\"Kitchen 3.75, lift your efficient!\\\",\\\"我们的优势\\\":\\\"Our Advantages\\\",\\\"简单方便\\\":\\\"Simple and Convenient\\\",\\\"从数据出发，仅需几行代码可以轻松获得想要的图表展示效果。\\\":\\\"Starting from the data, you will get the visualization results with only a few lines of codes.\\\",\\\"方便可靠\\\":\\\"Reliable\\\",\\\"大量产品实践之上，提供绘图引擎、完备图形语法，专业设计规范。\\\":\\\"We provide rendering engines, complete grammar of graphics, and professional design standards for plenty of practice products.\\\",\\\"无限可能\\\":\\\"Infinite\\\",\\\"任何图表，都可以基于图形语法灵活绘制，满足你无限的创意。\\\":\\\"Based on the grammar of graphics, any charts or diagrams can be flexibly created, which will satisfy your infinite ideas.\\\",\\\"2000+ 公司正在使用\\\":\\\"2000+ Companies are Using AntV\\\",\\\"测试\\\":\\\"Test\\\",\\\"G6 3.2 全新上线！\\\":\\\"G6 3.2 has already updated!\\\",\\\"合作公司\\\":\\\"Companies\\\",\\\"查看详情\\\":\\\"More\\\",\\\"所有产品\\\":\\\"Products\\\",\\\"周边生态\\\":\\\"Ecosystem\\\",\\\"搜索…\\\":\\\"Search...\\\",\\\"在 GitHub 上编辑\\\":\\\"Edit on GitHub\\\",\\\"演示\\\":\\\"Examples\\\",\\\"代码演示\\\":\\\"Examples\\\",\\\"设计指引\\\":\\\"Design Guide\\\",\\\"进入全屏\\\":\\\"Enter Fullscreen\\\",\\\"离开全屏\\\":\\\"Exit Fullscreen\\\",\\\"产品首页\\\":\\\"Home Page\\\",\\\"图表示例\\\":\\\"Examples\\\",\\\"使用文档\\\":\\\"Manual\\\",\\\"API 文档\\\":\\\"API\\\",\\\"更新日志\\\":\\\"Changelog\\\",\\\"GitHub 仓库\\\":\\\"GitHub Repository\\\",\\\"国内镜像\\\":\\\"China Mirror\\\",\\\"可视化引擎\\\":\\\"Visualization Engine\\\",\\\"图可视化引擎\\\":\\\"Graph Visualization\\\",\\\"移动可视化方案\\\":\\\"Mobile Charts\\\",\\\"地理空间数据可视化\\\":\\\"Geospatial Visualization\\\",\\\"开箱即用的图表库\\\":\\\"A Charting Library\\\",\\\"开箱即用、易于配置、极致体验的通用图表库。\\\":\\\"Pretty interactive charts out of box\\\",\\\"图表魔方\\\":\\\"Charts Maker\\\",\\\"生成图表\\\":\\\"Create charts\\\",\\\"AntV 在线图表制作利器。\\\":\\\"Create pretty charts without code\\\",\\\"数据驱动，高度易用，可扩展的可视化图形语法。\\\":\\\"Data-driven visual language with a high level of usability and scalability\\\",\\\"便捷的关系数据可视化引擎与图分析工具。\\\":\\\"A Graph Visualization Framework in JavaScript\\\",\\\"高性能/高渲染质量的地理空间数据可视化框架。\\\":\\\"Large-scale WebGL-powered Geospatial Data Visualization\\\",\\\"专注于移动端的可视化解决方案，兼容 H5/小程序/Weex 等多端环境\\\":\\\"An elegant, interactive and flexible charting library for mobile\\\",\\\"基于 G6 封装的图分析应用组件。\\\":\\\"A react toolkit for graph analysis based on g6\\\",\\\"墨者学院\\\":\\\"Mohist Academy\\\",\\\"学院首页\\\":\\\"Home Page\\\",\\\"数据可视化社团\\\":\\\"Visualization Community\\\",\\\"语雀社区\\\":\\\"Yuque\\\",\\\"钉钉服务群\\\":\\\"DingTalk Group\\\",\\\"扫码进 ChartCube 服务群\\\":\\\"Scan QRCode\\\",\\\"欢迎进入 2020 可视化智能研发时代\\\":\\\"New era of intelligent VIS\\\",\\\"AntV 11-22 品牌日：知源·致远\\\":\\\"11-22, AntV brand day!\\\",\\\"G2Plot 图表库发布\\\":\\\"G2Plot is released\\\",\\\"执行代码\\\":\\\"Run code\\\",\\\"在 CodeSandbox 中打开\\\":\\\"Open in CodeSandbox\\\",\\\"在 Riddle 中打开\\\":\\\"Open in Riddle\\\",\\\"在 StackBlitz 中打开\\\":\\\"Open in StackBlitz\\\",\\\"HTML 代码\\\":\\\"Html Source Code\\\",\\\"取消\\\":\\\"Cancel\\\",\\\"关于我们\\\":\\\"About us\\\",\\\"返回旧版\\\":\\\"Old site\\\"}}}\"}}}}");

/***/ }),

/***/ "eDOA":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return createChainedFunction; });
/**
 * Safe chained function
 *
 * Will only create a new function if needed,
 * otherwise will pass back existing functions or null.
 *
 * @returns {function|null}
 */
function createChainedFunction() {
  var args = [].slice.call(arguments, 0);

  if (args.length === 1) {
    return args[0];
  }

  return function chainedFunction() {
    for (var i = 0; i < args.length; i++) {
      if (args[i] && args[i].apply) {
        args[i].apply(this, arguments);
      }
    }
  };
}

/***/ }),

/***/ "eOWL":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("ADe/");
var IE8_DOM_DEFINE = __webpack_require__("UTwT");
var toPrimitive = __webpack_require__("HbTz");
var dP = Object.defineProperty;

exports.f = __webpack_require__("lBnu") ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "egL6":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return useTranslation; });
/* harmony import */ var core_js_modules_es6_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("DbwS");
/* harmony import */ var core_js_modules_es6_promise__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_promise__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("asZ9");
/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es6_array_is_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("+3V6");
/* harmony import */ var core_js_modules_es6_array_is_array__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_is_array__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("d3/y");
/* harmony import */ var core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es6_object_define_properties__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("6/FK");
/* harmony import */ var core_js_modules_es6_object_define_properties__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_define_properties__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es7_object_get_own_property_descriptors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("2Tod");
/* harmony import */ var core_js_modules_es7_object_get_own_property_descriptors__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es7_object_get_own_property_descriptors__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es6_array_for_each__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("7lGJ");
/* harmony import */ var core_js_modules_es6_array_for_each__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_for_each__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es6_array_filter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("9p7t");
/* harmony import */ var core_js_modules_es6_array_filter__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_filter__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("ABKx");
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("W1QL");
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_es6_array_iterator__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("K/PF");
/* harmony import */ var core_js_modules_es6_array_iterator__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_iterator__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("t91x");
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var core_js_modules_es6_object_keys__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("75LO");
/* harmony import */ var core_js_modules_es6_object_keys__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_keys__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("nxTg");
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__("OvAC");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__("mXGw");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var _context__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__("0Xeg");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__("zbS1");
















function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_14___default()(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}




function useTranslation(ns) {
  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var i18nFromProps = props.i18n;

  var _ref = Object(react__WEBPACK_IMPORTED_MODULE_15__["useContext"])(_context__WEBPACK_IMPORTED_MODULE_16__[/* I18nContext */ "a"]) || {},
      i18nFromContext = _ref.i18n,
      defaultNSFromContext = _ref.defaultNS;

  var i18n = i18nFromProps || i18nFromContext || Object(_context__WEBPACK_IMPORTED_MODULE_16__[/* getI18n */ "d"])();
  if (i18n && !i18n.reportNamespaces) i18n.reportNamespaces = new _context__WEBPACK_IMPORTED_MODULE_16__[/* ReportNamespaces */ "b"]();

  if (!i18n) {
    Object(_utils__WEBPACK_IMPORTED_MODULE_17__[/* warnOnce */ "d"])('You will need pass in an i18next instance by using initReactI18next');

    var notReadyT = function notReadyT(k) {
      return Array.isArray(k) ? k[k.length - 1] : k;
    };

    var retNotReady = [notReadyT, {}, false];
    retNotReady.t = notReadyT;
    retNotReady.i18n = {};
    retNotReady.ready = false;
    return retNotReady;
  }

  var i18nOptions = _objectSpread({}, Object(_context__WEBPACK_IMPORTED_MODULE_16__[/* getDefaults */ "c"])(), {}, i18n.options.react, {}, props);

  var useSuspense = i18nOptions.useSuspense;
  var namespaces = ns || defaultNSFromContext || i18n.options && i18n.options.defaultNS;
  namespaces = typeof namespaces === 'string' ? [namespaces] : namespaces || ['translation'];
  if (i18n.reportNamespaces.addUsedNamespaces) i18n.reportNamespaces.addUsedNamespaces(namespaces);
  var ready = (i18n.isInitialized || i18n.initializedStoreOnce) && namespaces.every(function (n) {
    return Object(_utils__WEBPACK_IMPORTED_MODULE_17__[/* hasLoadedNamespace */ "b"])(n, i18n, i18nOptions);
  });

  function getT() {
    return {
      t: i18n.getFixedT(null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0])
    };
  }

  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_15__["useState"])(getT()),
      _useState2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_13___default()(_useState, 2),
      t = _useState2[0],
      setT = _useState2[1];

  var isMounted = Object(react__WEBPACK_IMPORTED_MODULE_15__["useRef"])(true);
  Object(react__WEBPACK_IMPORTED_MODULE_15__["useEffect"])(function () {
    var bindI18n = i18nOptions.bindI18n,
        bindI18nStore = i18nOptions.bindI18nStore;
    isMounted.current = true;

    if (!ready && !useSuspense) {
      Object(_utils__WEBPACK_IMPORTED_MODULE_17__[/* loadNamespaces */ "c"])(i18n, namespaces, function () {
        if (isMounted.current) setT(getT());
      });
    }

    function boundReset() {
      if (isMounted.current) setT(getT());
    }

    if (bindI18n && i18n) i18n.on(bindI18n, boundReset);
    if (bindI18nStore && i18n) i18n.store.on(bindI18nStore, boundReset);
    return function () {
      isMounted.current = false;
      if (bindI18n && i18n) bindI18n.split(' ').forEach(function (e) {
        return i18n.off(e, boundReset);
      });
      if (bindI18nStore && i18n) bindI18nStore.split(' ').forEach(function (e) {
        return i18n.store.off(e, boundReset);
      });
    };
  }, [namespaces.join()]);
  var ret = [t.t, i18n, ready];
  ret.t = t.t;
  ret.i18n = i18n;
  ret.ready = ready;
  if (ready) return ret;
  if (!ready && !useSuspense) return ret;
  throw new Promise(function (resolve) {
    Object(_utils__WEBPACK_IMPORTED_MODULE_17__[/* loadNamespaces */ "c"])(i18n, namespaces, function () {
      if (isMounted.current) setT(getT());
      resolve();
    });
  });
}

/***/ }),

/***/ "emEt":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "PageResourceStatus", function() { return /* binding */ PageResourceStatus; });
__webpack_require__.d(__webpack_exports__, "BaseLoader", function() { return /* binding */ loader_BaseLoader; });
__webpack_require__.d(__webpack_exports__, "ProdLoader", function() { return /* binding */ loader_ProdLoader; });
__webpack_require__.d(__webpack_exports__, "setLoader", function() { return /* binding */ setLoader; });
__webpack_require__.d(__webpack_exports__, "publicLoader", function() { return /* binding */ publicLoader; });

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.function.name.js
var es6_function_name = __webpack_require__("GkPX");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.to-string.js
var es6_regexp_to_string = __webpack_require__("4aJ6");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.from.js
var es6_array_from = __webpack_require__("YhIr");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es7.symbol.async-iterator.js
var es7_symbol_async_iterator = __webpack_require__("+jjx");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.symbol.js
var es6_symbol = __webpack_require__("ABKx");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.set.js
var es6_set = __webpack_require__("m1Dn");

// EXTERNAL MODULE: ../node_modules/core-js/modules/web.dom.iterable.js
var web_dom_iterable = __webpack_require__("W1QL");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.iterator.js
var es6_array_iterator = __webpack_require__("K/PF");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.string.iterator.js
var es6_string_iterator = __webpack_require__("lQyR");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.map.js
var es6_map = __webpack_require__("zx98");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es7.array.includes.js
var es7_array_includes = __webpack_require__("oMRA");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.string.includes.js
var es6_string_includes = __webpack_require__("6d4m");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.assign.js
var es6_object_assign = __webpack_require__("5hJT");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.promise.js
var es6_promise = __webpack_require__("DbwS");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.to-string.js
var es6_object_to_string = __webpack_require__("t91x");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.string.ends-with.js
var es6_string_ends_with = __webpack_require__("BDzi");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.keys.js
var es6_object_keys = __webpack_require__("75LO");

// CONCATENATED MODULE: ./.cache/prefetch.js
var support=function support(feature){if(typeof document==="undefined"){return false;}var fakeLink=document.createElement("link");try{if(fakeLink.relList&&typeof fakeLink.relList.supports==="function"){return fakeLink.relList.supports(feature);}}catch(err){return false;}return false;};var linkPrefetchStrategy=function linkPrefetchStrategy(url,options){return new Promise(function(resolve,reject){if(typeof document==="undefined"){reject();return;}var link=document.createElement("link");link.setAttribute("rel","prefetch");link.setAttribute("href",url);Object.keys(options).forEach(function(key){link.setAttribute(key,options[key]);});link.onload=resolve;link.onerror=reject;var parentElement=document.getElementsByTagName("head")[0]||document.getElementsByName("script")[0].parentNode;parentElement.appendChild(link);});};var xhrPrefetchStrategy=function xhrPrefetchStrategy(url){return new Promise(function(resolve,reject){var req=new XMLHttpRequest();req.open("GET",url,true);req.onload=function(){if(req.status===200){resolve();}else{reject();}};req.send(null);});};var supportedPrefetchStrategy=support("prefetch")?linkPrefetchStrategy:xhrPrefetchStrategy;var preFetched={};var prefetch_prefetch=function prefetch(url,options){return new Promise(function(resolve){if(preFetched[url]){resolve();return;}supportedPrefetchStrategy(url,options).then(function(){resolve();preFetched[url]=true;}).catch(function(){});// 404s are logged to the console anyway
});};/* harmony default export */ var _cache_prefetch = (prefetch_prefetch);
// EXTERNAL MODULE: ./.cache/emitter.js + 1 modules
var emitter = __webpack_require__("5yr3");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.string.starts-with.js
var es6_string_starts_with = __webpack_require__("FEHE");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.split.js
var es6_regexp_split = __webpack_require__("asZ9");

// EXTERNAL MODULE: ../node_modules/@reach/router/es/lib/utils.js
var utils = __webpack_require__("ZkUl");

// EXTERNAL MODULE: ./.cache/strip-prefix.js
var strip_prefix = __webpack_require__("cSJ8");

// CONCATENATED MODULE: ./.cache/normalize-page-path.js
/* harmony default export */ var normalize_page_path = (function(path){if(path===undefined){return path;}if(path==="/"){return"/";}if(path.charAt(path.length-1)==="/"){return path.slice(0,-1);}return path;});
// CONCATENATED MODULE: ./.cache/find-path.js
function _createForOfIteratorHelperLoose(o,allowArrayLike){var it;if(typeof Symbol==="undefined"||o[Symbol.iterator]==null){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length==="number"){if(it)o=it;var i=0;return function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};};}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}it=o[Symbol.iterator]();return it.next.bind(it);}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}var pathCache=new Map();var find_path_matchPaths=[];var find_path_trimPathname=function trimPathname(rawPathname){var pathname=decodeURIComponent(rawPathname);// Remove the pathPrefix from the pathname.
var trimmedPathname=Object(strip_prefix["a" /* default */])(pathname,"")// Remove any hashfragment
.split("#")[0]// Remove search query
.split("?")[0];return trimmedPathname;};function absolutify(path){// If it's already absolute, return as-is
if(path.startsWith("/")||path.startsWith("https://")||path.startsWith("http://")){return path;}// Calculate path relative to current location, adding a trailing slash to
// match behavior of @reach/router
return new URL(path,window.location.href+(window.location.href.endsWith("/")?"":"/")).pathname;}/**
 * Set list of matchPaths
 *
 * @param {Array<{path: string, matchPath: string}>} value collection of matchPaths
 */var setMatchPaths=function setMatchPaths(value){find_path_matchPaths=value;};/**
 * Return a matchpath url
 * if `match-paths.json` contains `{ "/foo*": "/page1", ...}`, then
 * `/foo?bar=far` => `/page1`
 *
 * @param {string} rawPathname A raw pathname
 * @return {string|null}
 */var find_path_findMatchPath=function findMatchPath(rawPathname){var trimmedPathname=find_path_cleanPath(rawPathname);for(var _iterator=_createForOfIteratorHelperLoose(find_path_matchPaths),_step;!(_step=_iterator()).done;){var _step$value=_step.value,matchPath=_step$value.matchPath,path=_step$value.path;if(Object(utils["match"])(matchPath,trimmedPathname)){return normalize_page_path(path);}}return null;};// Given a raw URL path, returns the cleaned version of it (trim off
// `#` and query params), or if it matches an entry in
// `match-paths.json`, its matched path is returned
//
// E.g. `/foo?bar=far` => `/foo`
//
// Or if `match-paths.json` contains `{ "/foo*": "/page1", ...}`, then
// `/foo?bar=far` => `/page1`
var findPath=function findPath(rawPathname){var trimmedPathname=find_path_trimPathname(absolutify(rawPathname));if(pathCache.has(trimmedPathname)){return pathCache.get(trimmedPathname);}var foundPath=find_path_findMatchPath(trimmedPathname);if(!foundPath){foundPath=find_path_cleanPath(rawPathname);}pathCache.set(trimmedPathname,foundPath);return foundPath;};/**
 * Clean a url and converts /index.html => /
 * E.g. `/foo?bar=far` => `/foo`
 *
 * @param {string} rawPathname A raw pathname
 * @return {string}
 */var find_path_cleanPath=function cleanPath(rawPathname){var trimmedPathname=find_path_trimPathname(absolutify(rawPathname));var foundPath=trimmedPathname;if(foundPath==="/index.html"){foundPath="/";}foundPath=normalize_page_path(foundPath);return foundPath;};
// CONCATENATED MODULE: ./.cache/loader.js
function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype);subClass.prototype.constructor=subClass;subClass.__proto__=superClass;}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||loader_unsupportedIterableToArray(arr)||_nonIterableSpread();}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function loader_unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return loader_arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return loader_arrayLikeToArray(o,minLen);}function _iterableToArray(iter){if(typeof Symbol!=="undefined"&&Symbol.iterator in Object(iter))return Array.from(iter);}function _arrayWithoutHoles(arr){if(Array.isArray(arr))return loader_arrayLikeToArray(arr);}function loader_arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}/**
 * Available resource loading statuses
 */var PageResourceStatus={/**
   * At least one of critical resources failed to load
   */Error:"error",/**
   * Resources loaded successfully
   */Success:"success"};var preferDefault=function preferDefault(m){return m&&m.default||m;};var stripSurroundingSlashes=function stripSurroundingSlashes(s){s=s[0]==="/"?s.slice(1):s;s=s.endsWith("/")?s.slice(0,-1):s;return s;};var createPageDataUrl=function createPageDataUrl(path){var fixedPath=path==="/"?"index":stripSurroundingSlashes(path);return ""+"/page-data/"+fixedPath+"/page-data.json";};var doFetch=function doFetch(url,method){if(method===void 0){method="GET";}return new Promise(function(resolve,reject){var req=new XMLHttpRequest();req.open(method,url,true);req.onreadystatechange=function(){if(req.readyState==4){resolve(req);}};req.send(null);});};var _loadPageDataJson=function loadPageDataJson(loadObj){var pagePath=loadObj.pagePath,_loadObj$retries=loadObj.retries,retries=_loadObj$retries===void 0?0:_loadObj$retries;var url=createPageDataUrl(pagePath);return doFetch(url).then(function(req){var status=req.status,responseText=req.responseText;// Handle 200
if(status===200){try{var jsonPayload=JSON.parse(responseText);if(jsonPayload.path===undefined){throw new Error("not a valid pageData response");}return Object.assign(loadObj,{status:PageResourceStatus.Success,payload:jsonPayload});}catch(err){// continue regardless of error
}}// Handle 404
if(status===404||status===200){// If the request was for a 404 page and it doesn't exist, we're done
if(pagePath==="/404.html"){return Object.assign(loadObj,{status:PageResourceStatus.Error});}// Need some code here to cache the 404 request. In case
// multiple loadPageDataJsons result in 404s
return _loadPageDataJson(Object.assign(loadObj,{pagePath:"/404.html",notFound:true}));}// handle 500 response (Unrecoverable)
if(status===500){return Object.assign(loadObj,{status:PageResourceStatus.Error});}// Handle everything else, including status === 0, and 503s. Should retry
if(retries<3){return _loadPageDataJson(Object.assign(loadObj,{retries:retries+1}));}// Retried 3 times already, result is an error.
return Object.assign(loadObj,{status:PageResourceStatus.Error});});};var doesConnectionSupportPrefetch=function doesConnectionSupportPrefetch(){if("connection"in navigator&&typeof navigator.connection!=="undefined"){if((navigator.connection.effectiveType||"").includes("2g")){return false;}if(navigator.connection.saveData){return false;}}return true;};var toPageResources=function toPageResources(pageData,component){if(component===void 0){component=null;}var page={componentChunkName:pageData.componentChunkName,path:pageData.path,webpackCompilationHash:pageData.webpackCompilationHash,matchPath:pageData.matchPath};return{component:component,json:pageData.result,page:page};};var loader_BaseLoader=/*#__PURE__*/function(){function BaseLoader(loadComponent,matchPaths){// Map of pagePath -> Page. Where Page is an object with: {
//   status: PageResourceStatus.Success || PageResourceStatus.Error,
//   payload: PageResources, // undefined if PageResourceStatus.Error
// }
// PageResources is {
//   component,
//   json: pageData.result,
//   page: {
//     componentChunkName,
//     path,
//     webpackCompilationHash,
//   }
// }
this.pageDb=new Map();this.inFlightDb=new Map();this.pageDataDb=new Map();this.prefetchTriggered=new Set();this.prefetchCompleted=new Set();this.loadComponent=loadComponent;setMatchPaths(matchPaths);}var _proto=BaseLoader.prototype;_proto.setApiRunner=function setApiRunner(apiRunner){this.apiRunner=apiRunner;this.prefetchDisabled=apiRunner("disableCorePrefetching").some(function(a){return a;});};_proto.loadPageDataJson=function loadPageDataJson(rawPath){var _this=this;var pagePath=findPath(rawPath);if(this.pageDataDb.has(pagePath)){return Promise.resolve(this.pageDataDb.get(pagePath));}return _loadPageDataJson({pagePath:pagePath}).then(function(pageData){_this.pageDataDb.set(pagePath,pageData);return pageData;});};_proto.findMatchPath=function findMatchPath(rawPath){return find_path_findMatchPath(rawPath);}// TODO check all uses of this and whether they use undefined for page resources not exist
;_proto.loadPage=function loadPage(rawPath){var _this2=this;var pagePath=findPath(rawPath);if(this.pageDb.has(pagePath)){var page=this.pageDb.get(pagePath);return Promise.resolve(page.payload);}if(this.inFlightDb.has(pagePath)){return this.inFlightDb.get(pagePath);}var inFlight=Promise.all([this.loadAppData(),this.loadPageDataJson(pagePath)]).then(function(allData){var result=allData[1];if(result.status===PageResourceStatus.Error){return{status:PageResourceStatus.Error};}var pageData=result.payload;var _pageData=pageData,componentChunkName=_pageData.componentChunkName;return _this2.loadComponent(componentChunkName).then(function(component){var finalResult={createdAt:new Date()};var pageResources;if(!component){finalResult.status=PageResourceStatus.Error;}else{finalResult.status=PageResourceStatus.Success;if(result.notFound===true){finalResult.notFound=true;}pageData=Object.assign(pageData,{webpackCompilationHash:allData[0]?allData[0].webpackCompilationHash:""});pageResources=toPageResources(pageData,component);finalResult.payload=pageResources;emitter["a" /* default */].emit("onPostLoadPageResources",{page:pageResources,pageResources:pageResources});}_this2.pageDb.set(pagePath,finalResult);// undefined if final result is an error
return pageResources;});})// prefer duplication with then + catch over .finally to prevent problems in ie11 + firefox
.then(function(response){_this2.inFlightDb.delete(pagePath);return response;}).catch(function(err){_this2.inFlightDb.delete(pagePath);throw err;});this.inFlightDb.set(pagePath,inFlight);return inFlight;}// returns undefined if loading page ran into errors
;_proto.loadPageSync=function loadPageSync(rawPath){var pagePath=findPath(rawPath);if(this.pageDb.has(pagePath)){return this.pageDb.get(pagePath).payload;}return undefined;};_proto.shouldPrefetch=function shouldPrefetch(pagePath){// Skip prefetching if we know user is on slow or constrained connection
if(!doesConnectionSupportPrefetch()){return false;}// Check if the page exists.
if(this.pageDb.has(pagePath)){return false;}return true;};_proto.prefetch=function prefetch(pagePath){var _this3=this;if(!this.shouldPrefetch(pagePath)){return false;}// Tell plugins with custom prefetching logic that they should start
// prefetching this path.
if(!this.prefetchTriggered.has(pagePath)){this.apiRunner("onPrefetchPathname",{pathname:pagePath});this.prefetchTriggered.add(pagePath);}// If a plugin has disabled core prefetching, stop now.
if(this.prefetchDisabled){return false;}var realPath=findPath(pagePath);// Todo make doPrefetch logic cacheable
// eslint-disable-next-line consistent-return
this.doPrefetch(realPath).then(function(){if(!_this3.prefetchCompleted.has(pagePath)){_this3.apiRunner("onPostPrefetchPathname",{pathname:pagePath});_this3.prefetchCompleted.add(pagePath);}});return true;};_proto.doPrefetch=function doPrefetch(pagePath){throw new Error("doPrefetch not implemented");};_proto.hovering=function hovering(rawPath){this.loadPage(rawPath);};_proto.getResourceURLsForPathname=function getResourceURLsForPathname(rawPath){var pagePath=findPath(rawPath);var page=this.pageDataDb.get(pagePath);if(page){var pageResources=toPageResources(page.payload);return[].concat(_toConsumableArray(createComponentUrls(pageResources.page.componentChunkName)),[createPageDataUrl(pagePath)]);}else{return null;}};_proto.isPageNotFound=function isPageNotFound(rawPath){var pagePath=findPath(rawPath);var page=this.pageDb.get(pagePath);return page&&page.notFound===true;};_proto.loadAppData=function loadAppData(retries){var _this4=this;if(retries===void 0){retries=0;}return doFetch(""+"/page-data/app-data.json").then(function(req){var status=req.status,responseText=req.responseText;var appData;if(status!==200&&retries<3){// Retry 3 times incase of non-200 responses
return _this4.loadAppData(retries+1);}// Handle 200
if(status===200){try{var jsonPayload=JSON.parse(responseText);if(jsonPayload.webpackCompilationHash===undefined){throw new Error("not a valid app-data response");}appData=jsonPayload;}catch(err){// continue regardless of error
}}return appData;});};return BaseLoader;}();var createComponentUrls=function createComponentUrls(componentChunkName){return(window.___chunkMapping[componentChunkName]||[]).map(function(chunk){return ""+chunk;});};var loader_ProdLoader=/*#__PURE__*/function(_BaseLoader){_inheritsLoose(ProdLoader,_BaseLoader);function ProdLoader(asyncRequires,matchPaths){var loadComponent=function loadComponent(chunkName){return asyncRequires.components[chunkName]?asyncRequires.components[chunkName]().then(preferDefault)// loader will handle the case when component is null
.catch(function(){return null;}):Promise.resolve();};return _BaseLoader.call(this,loadComponent,matchPaths)||this;}var _proto2=ProdLoader.prototype;_proto2.doPrefetch=function doPrefetch(pagePath){var _this5=this;var pageDataUrl=createPageDataUrl(pagePath);return _cache_prefetch(pageDataUrl,{crossOrigin:"anonymous",as:"fetch"}).then(function(){return(// This was just prefetched, so will return a response from
// the cache instead of making another request to the server
_this5.loadPageDataJson(pagePath));}).then(function(result){if(result.status!==PageResourceStatus.Success){return Promise.resolve();}var pageData=result.payload;var chunkName=pageData.componentChunkName;var componentUrls=createComponentUrls(chunkName);return Promise.all(componentUrls.map(_cache_prefetch)).then(function(){return pageData;});});};_proto2.loadPageDataJson=function loadPageDataJson(rawPath){return _BaseLoader.prototype.loadPageDataJson.call(this,rawPath).then(function(data){if(data.notFound){// check if html file exist using HEAD request:
// if it does we should navigate to it instead of showing 404
return doFetch(rawPath,"HEAD").then(function(req){if(req.status===200){// page (.html file) actually exist (or we asked for 404 )
// returning page resources status as errored to trigger
// regular browser navigation to given page
return{status:PageResourceStatus.Error};}// if HEAD request wasn't 200, return notFound result
// and show 404 page
return data;});}return data;});};return ProdLoader;}(loader_BaseLoader);var instance;var setLoader=function setLoader(_loader){instance=_loader;};var publicLoader={// Deprecated methods. As far as we're aware, these are only used by
// core gatsby and the offline plugin, however there's a very small
// chance they're called by others.
getResourcesForPathname:function getResourcesForPathname(rawPath){console.warn("Warning: getResourcesForPathname is deprecated. Use loadPage instead");return instance.i.loadPage(rawPath);},getResourcesForPathnameSync:function getResourcesForPathnameSync(rawPath){console.warn("Warning: getResourcesForPathnameSync is deprecated. Use loadPageSync instead");return instance.i.loadPageSync(rawPath);},enqueue:function enqueue(rawPath){return instance.prefetch(rawPath);},// Real methods
getResourceURLsForPathname:function getResourceURLsForPathname(rawPath){return instance.getResourceURLsForPathname(rawPath);},loadPage:function loadPage(rawPath){return instance.loadPage(rawPath);},loadPageSync:function loadPageSync(rawPath){return instance.loadPageSync(rawPath);},prefetch:function prefetch(rawPath){return instance.prefetch(rawPath);},isPageNotFound:function isPageNotFound(rawPath){return instance.isPageNotFound(rawPath);},hovering:function hovering(rawPath){return instance.hovering(rawPath);},loadAppData:function loadAppData(){return instance.loadAppData();}};/* harmony default export */ var loader = __webpack_exports__["default"] = (publicLoader);

/***/ }),

/***/ "ex0g":
/***/ (function(module, exports, __webpack_require__) {

var _isArray = __webpack_require__("GwS+");

var _isTransformer = __webpack_require__("RQUx");
/**
 * Returns a function that dispatches with different strategies based on the
 * object in list position (last argument). If it is an array, executes [fn].
 * Otherwise, if it has a function with one of the given method names, it will
 * execute that function (functor case). Otherwise, if it is a transformer,
 * uses transducer [xf] to return a new transformer (transducer case).
 * Otherwise, it will default to executing [fn].
 *
 * @private
 * @param {Array} methodNames properties to check for a custom implementation
 * @param {Function} xf transducer to initialize if object is transformer
 * @param {Function} fn default ramda implementation
 * @return {Function} A function that dispatches on object in list position
 */


module.exports = function _dispatchable(methodNames, xf, fn) {
  return function () {
    if (arguments.length === 0) {
      return fn();
    }

    var args = Array.prototype.slice.call(arguments, 0);
    var obj = args.pop();

    if (!_isArray(obj)) {
      var idx = 0;

      while (idx < methodNames.length) {
        if (typeof obj[methodNames[idx]] === 'function') {
          return obj[methodNames[idx]].apply(obj, args);
        }

        idx += 1;
      }

      if (_isTransformer(obj)) {
        var transducer = xf.apply(null, args);
        return transducer(obj);
      }
    }

    return fn.apply(this, arguments);
  };
};

/***/ }),

/***/ "ezc+":
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "f7TZ":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------

var _require = __webpack_require__("sfhO"),
    Error = _require.Error,
    Ok = _require.Ok;
/*~
 * stability: stable
 * authors:
 *   - "@boris-marinov"
 * 
 * type: |
 *   forall a, b:
 *      (Validation a b) => Result a b
 */


var validationToResult = function validationToResult(aValidation) {
  return aValidation.matchWith({
    Failure: function Failure(_ref) {
      var value = _ref.value;
      return Error(value);
    },
    Success: function Success(_ref2) {
      var value = _ref2.value;
      return Ok(value);
    }
  });
};

module.exports = validationToResult;

/***/ }),

/***/ "fGh/":
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "fI5t":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var adjust_1 = __webpack_require__("3yYG");

exports.Adjust = adjust_1["default"];
var ADJUST_MAP = {};
/**
 * 根据类型获取 Adjust 类
 * @param type
 */

var getAdjust = function getAdjust(type) {
  return ADJUST_MAP[type.toLowerCase()];
};

exports.getAdjust = getAdjust;
/**
 * 注册自定义 Adjust
 * @param type
 * @param ctor
 */

var registerAdjust = function registerAdjust(type, ctor) {
  // 注册的时候，需要校验 type 重名，不区分大小写
  if (getAdjust(type)) {
    throw new Error("Adjust type '" + type + "' existed.");
  } // 存储到 map 中


  ADJUST_MAP[type.toLowerCase()] = ctor;
};

exports.registerAdjust = registerAdjust;

/***/ }),

/***/ "fQty":
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),

/***/ "ffXq":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "fj6J":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ LocaleReceiver_LocaleReceiver; });

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.to-string.js
var es6_regexp_to_string = __webpack_require__("4aJ6");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.date.to-string.js
var es6_date_to_string = __webpack_require__("M/4x");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.to-string.js
var es6_object_to_string = __webpack_require__("t91x");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.reflect.construct.js
var es6_reflect_construct = __webpack_require__("LXYL");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.set-prototype-of.js
var es6_object_set_prototype_of = __webpack_require__("1qKx");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.create.js
var es6_object_create = __webpack_require__("PAbq");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.define-property.js
var es6_object_define_property = __webpack_require__("d3/y");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.assign.js
var es6_object_assign = __webpack_require__("5hJT");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es7.symbol.async-iterator.js
var es7_symbol_async_iterator = __webpack_require__("+jjx");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.symbol.js
var es6_symbol = __webpack_require__("ABKx");

// EXTERNAL MODULE: ../node_modules/react/index.js
var react = __webpack_require__("mXGw");

// EXTERNAL MODULE: ../node_modules/antd/es/locale/default.js + 5 modules
var locale_default = __webpack_require__("xp7Y");

// CONCATENATED MODULE: ../node_modules/antd/es/locale-provider/default.js

/* harmony default export */ var locale_provider_default = (locale_default["a" /* default */]);
// EXTERNAL MODULE: ../node_modules/antd/es/locale-provider/context.js
var context = __webpack_require__("3vGZ");

// CONCATENATED MODULE: ../node_modules/antd/es/locale-provider/LocaleReceiver.js











function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return _possibleConstructorReturn(this, result);
  };
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}





var LocaleReceiver_LocaleReceiver = /*#__PURE__*/function (_React$Component) {
  _inherits(LocaleReceiver, _React$Component);

  var _super = _createSuper(LocaleReceiver);

  function LocaleReceiver() {
    _classCallCheck(this, LocaleReceiver);

    return _super.apply(this, arguments);
  }

  _createClass(LocaleReceiver, [{
    key: "getLocale",
    value: function getLocale() {
      var _this$props = this.props,
          componentName = _this$props.componentName,
          defaultLocale = _this$props.defaultLocale;
      var locale = defaultLocale || locale_provider_default[componentName || 'global'];
      var antLocale = this.context;
      var localeFromContext = componentName && antLocale ? antLocale[componentName] : {};
      return _extends(_extends({}, typeof locale === 'function' ? locale() : locale), localeFromContext || {});
    }
  }, {
    key: "getLocaleCode",
    value: function getLocaleCode() {
      var antLocale = this.context;
      var localeCode = antLocale && antLocale.locale; // Had use LocaleProvide but didn't set locale

      if (antLocale && antLocale.exist && !localeCode) {
        return locale_provider_default.locale;
      }

      return localeCode;
    }
  }, {
    key: "render",
    value: function render() {
      return this.props.children(this.getLocale(), this.getLocaleCode(), this.context);
    }
  }]);

  return LocaleReceiver;
}(react["Component"]);


LocaleReceiver_LocaleReceiver.defaultProps = {
  componentName: 'global'
};
LocaleReceiver_LocaleReceiver.contextType = context["a" /* default */];

/***/ }),

/***/ "foH5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------

/*~
 * stability: experimental
 * name: module folktale/adt/union/derivations
 */

module.exports = {
  serialization: __webpack_require__("jWh4"),
  equality: __webpack_require__("68WS"),
  debugRepresentation: __webpack_require__("b+fX")
};

/***/ }),

/***/ "fqg9":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _CheckCircleOutlined = _interopRequireDefault(__webpack_require__("NUlt"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    'default': obj
  };
}

var _default = _CheckCircleOutlined;
exports["default"] = _default;
module.exports = _default;

/***/ }),

/***/ "fqqo":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "fxUj":
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__("9dxi");


/***/ }),

/***/ "fy0x":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------

var _require = __webpack_require__("sfhO"),
    Error = _require.Error,
    Ok = _require.Ok;
/*~
 * stability: stable
 * authors:
 *   - "@boris-marinov"
 * 
 * type: |
 *   forall a, b: (() => b :: throws a) => Result a b
 */


var _try = function _try(f) {
  try {
    return Ok(f());
  } catch (e) {
    return Error(e);
  }
};

module.exports = _try;

/***/ }),

/***/ "g2V6":
/***/ (function(module, exports, __webpack_require__) {

var _curry2 = __webpack_require__("OFPg");

var _dispatchable = __webpack_require__("ex0g");

var _xdrop = __webpack_require__("CsEj");

var slice = __webpack_require__("w4Md");
/**
 * Returns all but the first `n` elements of the given list, string, or
 * transducer/transformer (or object with a `drop` method).
 *
 * Dispatches to the `drop` method of the second argument, if present.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig Number -> [a] -> [a]
 * @sig Number -> String -> String
 * @param {Number} n
 * @param {*} list
 * @return {*} A copy of list without the first `n` elements
 * @see R.take, R.transduce, R.dropLast, R.dropWhile
 * @example
 *
 *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']
 *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']
 *      R.drop(3, ['foo', 'bar', 'baz']); //=> []
 *      R.drop(4, ['foo', 'bar', 'baz']); //=> []
 *      R.drop(3, 'ramda');               //=> 'da'
 */


module.exports = _curry2(_dispatchable(['drop'], _xdrop, function drop(n, xs) {
  return slice(Math.max(0, n), Infinity, xs);
}));

/***/ }),

/***/ "g2rQ":
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "g3ZY":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var WILDCARD = '*';
/* event-emitter */

var EventEmitter =
/** @class */
function () {
  function EventEmitter() {
    this._events = {};
  }
  /**
   * 监听一个事件
   * @param evt
   * @param callback
   * @param once
   */


  EventEmitter.prototype.on = function (evt, callback, once) {
    if (!this._events[evt]) {
      this._events[evt] = [];
    }

    this._events[evt].push({
      callback: callback,
      once: !!once
    });

    return this;
  };
  /**
   * 监听一个事件一次
   * @param evt
   * @param callback
   */


  EventEmitter.prototype.once = function (evt, callback) {
    this.on(evt, callback, true);
    return this;
  };
  /**
   * 触发一个事件
   * @param evt
   * @param args
   */


  EventEmitter.prototype.emit = function (evt) {
    var _this = this;

    var args = [];

    for (var _i = 1; _i < arguments.length; _i++) {
      args[_i - 1] = arguments[_i];
    }

    var events = this._events[evt] || [];
    var wildcardEvents = this._events[WILDCARD] || []; // 实际的处理 emit 方法

    var doEmit = function doEmit(es) {
      var length = es.length;

      for (var i = 0; i < length; i++) {
        if (!es[i]) {
          continue;
        }

        var _a = es[i],
            callback = _a.callback,
            once = _a.once;

        if (once) {
          es.splice(i, 1);

          if (es.length === 0) {
            delete _this._events[evt];
          }

          length--;
          i--;
        }

        callback.apply(_this, args);
      }
    };

    doEmit(events);
    doEmit(wildcardEvents);
  };
  /**
   * 取消监听一个事件，或者一个channel
   * @param evt
   * @param callback
   */


  EventEmitter.prototype.off = function (evt, callback) {
    if (!evt) {
      // evt 为空全部清除
      this._events = {};
    } else {
      if (!callback) {
        // evt 存在，callback 为空，清除事件所有方法
        delete this._events[evt];
      } else {
        // evt 存在，callback 存在，清除匹配的
        var events = this._events[evt] || [];
        var length_1 = events.length;

        for (var i = 0; i < length_1; i++) {
          if (events[i].callback === callback) {
            events.splice(i, 1);
            length_1--;
            i--;
          }
        }

        if (events.length === 0) {
          delete this._events[evt];
        }
      }
    }

    return this;
  };
  /* 当前所有的事件 */


  EventEmitter.prototype.getEvents = function () {
    return this._events;
  };

  return EventEmitter;
}();

/* harmony default export */ __webpack_exports__["a"] = (EventEmitter);

/***/ }),

/***/ "g4/d":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _CloseCircleFilled = _interopRequireDefault(__webpack_require__("qbl3"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    'default': obj
  };
}

var _default = _CloseCircleFilled;
exports["default"] = _default;
module.exports = _default;

/***/ }),

/***/ "g5Li":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var core_js_modules_es6_array_for_each__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("7lGJ");
/* harmony import */ var core_js_modules_es6_array_for_each__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_for_each__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("4aJ6");
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("M/4x");
/* harmony import */ var core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es6_promise__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("DbwS");
/* harmony import */ var core_js_modules_es6_promise__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_promise__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("t91x");
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("d3/y");
/* harmony import */ var core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("5hJT");
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("mXGw");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("8Jek");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var rc_notification__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("qtgu");
/* harmony import */ var _ant_design_icons_LoadingOutlined__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("yRvC");
/* harmony import */ var _ant_design_icons_LoadingOutlined__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_ant_design_icons_LoadingOutlined__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _ant_design_icons_ExclamationCircleFilled__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("l8sR");
/* harmony import */ var _ant_design_icons_ExclamationCircleFilled__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_ant_design_icons_ExclamationCircleFilled__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var _ant_design_icons_CloseCircleFilled__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("g4/d");
/* harmony import */ var _ant_design_icons_CloseCircleFilled__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_ant_design_icons_CloseCircleFilled__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _ant_design_icons_CheckCircleFilled__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("Awoh");
/* harmony import */ var _ant_design_icons_CheckCircleFilled__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_ant_design_icons_CheckCircleFilled__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var _ant_design_icons_InfoCircleFilled__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__("zqvS");
/* harmony import */ var _ant_design_icons_InfoCircleFilled__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_ant_design_icons_InfoCircleFilled__WEBPACK_IMPORTED_MODULE_14__);








function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}









var defaultDuration = 3;
var defaultTop;
var messageInstance;
var key = 1;
var prefixCls = 'ant-message';
var transitionName = 'move-up';
var getContainer;
var maxCount;
var rtl = false;

function getMessageInstance(callback) {
  if (messageInstance) {
    callback(messageInstance);
    return;
  }

  rc_notification__WEBPACK_IMPORTED_MODULE_9__[/* default */ "a"].newInstance({
    prefixCls: prefixCls,
    transitionName: transitionName,
    style: {
      top: defaultTop
    },
    getContainer: getContainer,
    maxCount: maxCount
  }, function (instance) {
    if (messageInstance) {
      callback(messageInstance);
      return;
    }

    messageInstance = instance;
    callback(instance);
  });
}

var iconMap = {
  info: _ant_design_icons_InfoCircleFilled__WEBPACK_IMPORTED_MODULE_14___default.a,
  success: _ant_design_icons_CheckCircleFilled__WEBPACK_IMPORTED_MODULE_13___default.a,
  error: _ant_design_icons_CloseCircleFilled__WEBPACK_IMPORTED_MODULE_12___default.a,
  warning: _ant_design_icons_ExclamationCircleFilled__WEBPACK_IMPORTED_MODULE_11___default.a,
  loading: _ant_design_icons_LoadingOutlined__WEBPACK_IMPORTED_MODULE_10___default.a
};

function notice(args) {
  var _classNames;

  var duration = args.duration !== undefined ? args.duration : defaultDuration;
  var IconComponent = iconMap[args.type];
  var messageClass = classnames__WEBPACK_IMPORTED_MODULE_8___default()("".concat(prefixCls, "-custom-content"), (_classNames = {}, _defineProperty(_classNames, "".concat(prefixCls, "-").concat(args.type), args.type), _defineProperty(_classNames, "".concat(prefixCls, "-rtl"), rtl === true), _classNames));
  var target = args.key || key++;
  var closePromise = new Promise(function (resolve) {
    var callback = function callback() {
      if (typeof args.onClose === 'function') {
        args.onClose();
      }

      return resolve(true);
    };

    getMessageInstance(function (instance) {
      instance.notice({
        key: target,
        duration: duration,
        style: args.style || {},
        className: args.className,
        content: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7__["createElement"]("div", {
          className: messageClass
        }, args.icon || IconComponent && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7__["createElement"](IconComponent, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7__["createElement"]("span", null, args.content)),
        onClose: callback
      });
    });
  });

  var result = function result() {
    if (messageInstance) {
      messageInstance.removeNotice(target);
    }
  };

  result.then = function (filled, rejected) {
    return closePromise.then(filled, rejected);
  };

  result.promise = closePromise;
  return result;
}

function isArgsProps(content) {
  return Object.prototype.toString.call(content) === '[object Object]' && !!content.content;
}

var api = {
  open: notice,
  config: function config(options) {
    if (options.top !== undefined) {
      defaultTop = options.top;
      messageInstance = null; // delete messageInstance for new defaultTop
    }

    if (options.duration !== undefined) {
      defaultDuration = options.duration;
    }

    if (options.prefixCls !== undefined) {
      prefixCls = options.prefixCls;
    }

    if (options.getContainer !== undefined) {
      getContainer = options.getContainer;
    }

    if (options.transitionName !== undefined) {
      transitionName = options.transitionName;
      messageInstance = null; // delete messageInstance for new transitionName
    }

    if (options.maxCount !== undefined) {
      maxCount = options.maxCount;
      messageInstance = null;
    }

    if (options.rtl !== undefined) {
      rtl = options.rtl;
    }
  },
  destroy: function destroy() {
    if (messageInstance) {
      messageInstance.destroy();
      messageInstance = null;
    }
  }
};
['success', 'info', 'warning', 'error', 'loading'].forEach(function (type) {
  api[type] = function (content, duration, onClose) {
    if (isArgsProps(content)) {
      return api.open(_extends(_extends({}, content), {
        type: type
      }));
    }

    if (typeof duration === 'function') {
      onClose = duration;
      duration = undefined;
    }

    return api.open({
      content: content,
      duration: duration,
      type: type,
      onClose: onClose
    });
  };
});
api.warn = api.warning;
/* harmony default export */ __webpack_exports__["a"] = (api);

/***/ }),

/***/ "gRlk":
/***/ (function(module, exports, __webpack_require__) {

// most Object methods by ES6 should accept primitives
var $export = __webpack_require__("X6VK");
var core = __webpack_require__("R5TD");
var fails = __webpack_require__("E7Vc");
module.exports = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
};


/***/ }),

/***/ "gou2":
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__("zWQs");
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),

/***/ "gtO+":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 25.4.1.5 NewPromiseCapability(C)
var aFunction = __webpack_require__("b8Rm");

function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
}

module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),

/***/ "gtwY":
/***/ (function(module, exports) {

module.exports = true;


/***/ }),

/***/ "h3fB":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // This icon file is generated automatically.

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var CheckOutlined = {
  "icon": {
    "tag": "svg",
    "attrs": {
      "viewBox": "64 64 896 896",
      "focusable": "false"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "d": "M912 190h-69.9c-9.8 0-19.1 4.5-25.1 12.2L404.7 724.5 207 474a32 32 0 00-25.1-12.2H112c-6.7 0-10.4 7.7-6.3 12.9l273.9 347c12.8 16.2 37.4 16.2 50.3 0l488.4-618.9c4.1-5.1.4-12.8-6.3-12.8z"
      }
    }]
  },
  "name": "check",
  "theme": "outlined"
};
exports["default"] = CheckOutlined;

/***/ }),

/***/ "hGr/":
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__("X6VK");
var defined = __webpack_require__("GCOZ");
var fails = __webpack_require__("E7Vc");
var spaces = __webpack_require__("SvMv");
var space = '[' + spaces + ']';
var non = '\u200b\u0085';
var ltrim = RegExp('^' + space + space + '*');
var rtrim = RegExp(space + space + '*$');

var exporter = function (KEY, exec, ALIAS) {
  var exp = {};
  var FORCE = fails(function () {
    return !!spaces[KEY]() || non[KEY]() != non;
  });
  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
  if (ALIAS) exp[ALIAS] = fn;
  $export($export.P + $export.F * FORCE, 'String', exp);
};

// 1 -> String#trimLeft
// 2 -> String#trimRight
// 3 -> String#trim
var trim = exporter.trim = function (string, TYPE) {
  string = String(defined(string));
  if (TYPE & 1) string = string.replace(ltrim, '');
  if (TYPE & 2) string = string.replace(rtrim, '');
  return string;
};

module.exports = exporter;


/***/ }),

/***/ "hMok":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("b01t")('Float32', 4, function (init) {
  return function Float32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "hV/m":
/***/ (function(module, exports, __webpack_require__) {

var _curry2 = __webpack_require__("OFPg");

var equals = __webpack_require__("LGMZ");

var takeLast = __webpack_require__("wp6D");
/**
 * Checks if a list ends with the provided values
 *
 * @func
 * @memberOf R
 * @since v0.24.0
 * @category List
 * @sig [a] -> Boolean
 * @sig String -> Boolean
 * @param {*} suffix
 * @param {*} list
 * @return {Boolean}
 * @example
 *
 *      R.endsWith('c', 'abc')                //=> true
 *      R.endsWith('b', 'abc')                //=> false
 *      R.endsWith(['c'], ['a', 'b', 'c'])    //=> true
 *      R.endsWith(['b'], ['a', 'b', 'c'])    //=> false
 */


module.exports = _curry2(function (suffix, list) {
  return equals(takeLast(suffix.length, list), suffix);
});

/***/ }),

/***/ "hV6t":
/***/ (function(module) {

module.exports = JSON.parse("{\"name\":\"@antv/g-canvas\",\"version\":\"0.4.14\",\"description\":\"A canvas library which providing 2d\",\"main\":\"lib/index.js\",\"module\":\"esm/index.js\",\"unpkg\":\"dist/g.min.js\",\"types\":\"lib/index.d.ts\",\"files\":[\"package.json\",\"esm\",\"lib\",\"dist\",\"LICENSE\",\"README.md\"],\"scripts\":{\"build\":\"npm run clean && run-p build:*\",\"build:esm\":\"tsc -p tsconfig.json --target ES5 --module ESNext --outDir esm\",\"build:cjs\":\"tsc -p tsconfig.json --target ES5 --module commonjs --outDir lib\",\"build:umd\":\"webpack --config webpack.config.js --mode production\",\"clean\":\"rm -rf esm lib dist\",\"coverage\":\"npm run coverage-generator && npm run coverage-viewer\",\"coverage-generator\":\"torch --coverage --compile --source-pattern src/*.js,src/**/*.js --opts tests/mocha.opts\",\"coverage-viewer\":\"torch-coverage\",\"test\":\"torch --renderer --compile --opts tests/mocha.opts\",\"test-live\":\"torch --compile --interactive --opts tests/mocha.opts\",\"tsc\":\"tsc --noEmit\",\"typecheck\":\"tsc --noEmit\",\"dist\":\"webpack --config webpack.config.js --mode production\"},\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/antvis/g.git\"},\"keywords\":[\"util\",\"antv\",\"g\"],\"publishConfig\":{\"access\":\"public\"},\"author\":\"https://github.com/orgs/antvis/people\",\"license\":\"ISC\",\"bugs\":{\"url\":\"https://github.com/antvis/g/issues\"},\"devDependencies\":{\"@antv/torch\":\"^1.0.0\",\"less\":\"^3.9.0\",\"npm-run-all\":\"^4.1.5\",\"webpack\":\"^4.26.1\",\"webpack-cli\":\"^3.1.2\"},\"homepage\":\"https://github.com/antvis/g#readme\",\"dependencies\":{\"@antv/g-base\":\"^0.4.7\",\"@antv/g-math\":\"^0.1.3\",\"@antv/path-util\":\"~2.0.5\",\"@antv/util\":\"~2.0.0\",\"gl-matrix\":\"^3.0.0\"},\"__npminstall_done\":false,\"gitHead\":\"6b4107c8cfae1b893c385758ad8e870236f73f6b\"}");

/***/ }),

/***/ "hedj":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin
module.exports = {"main":"layout-module--main--2kZrn"};

/***/ }),

/***/ "hisu":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _classCallCheck; });
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

/***/ }),

/***/ "hjsu":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
}); // FIXME: Mutable param should be forbidden in static lang.

function _mix(dist, obj) {
  for (var key in obj) {
    if (obj.hasOwnProperty(key) && key !== 'constructor' && obj[key] !== undefined) {
      dist[key] = obj[key];
    }
  }
}

function mix(dist, src1, src2, src3) {
  if (src1) _mix(dist, src1);
  if (src2) _mix(dist, src2);
  if (src3) _mix(dist, src3);
  return dist;
}

exports["default"] = mix;

/***/ }),

/***/ "hulx":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export fillRef */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return composeRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return supportRef; });
/* harmony import */ var core_js_modules_es6_array_for_each__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("7lGJ");
/* harmony import */ var core_js_modules_es6_array_for_each__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_for_each__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("+jjx");
/* harmony import */ var core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("ABKx");
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("xVO4");
/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_is__WEBPACK_IMPORTED_MODULE_3__);




function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}


function fillRef(ref, node) {
  if (typeof ref === 'function') {
    ref(node);
  } else if (_typeof(ref) === 'object' && ref && 'current' in ref) {
    ref.current = node;
  }
}
/**
 * Merge refs into one ref function to support ref passing.
 */

function composeRef() {
  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {
    refs[_key] = arguments[_key];
  }

  return function (node) {
    refs.forEach(function (ref) {
      fillRef(ref, node);
    });
  };
}
function supportRef(nodeOrComponent) {
  var type = Object(react_is__WEBPACK_IMPORTED_MODULE_3__["isMemo"])(nodeOrComponent) ? nodeOrComponent.type.type : nodeOrComponent.type; // Function component node

  if (type && type.prototype && !type.prototype.render) {
    return false;
  } // Class component


  if (typeof nodeOrComponent === 'function' && nodeOrComponent.prototype && !nodeOrComponent.prototype.render) {
    return false;
  }

  return true;
}
/* eslint-enable */

/***/ }),

/***/ "hxuA":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SizeContextProvider; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("mXGw");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

var SizeContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__["createContext"](undefined);
var SizeContextProvider = function SizeContextProvider(_ref) {
  var children = _ref.children,
      size = _ref.size;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__["createElement"](SizeContext.Consumer, null, function (originSize) {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__["createElement"](SizeContext.Provider, {
      value: size || originSize
    }, children);
  });
};
/* harmony default export */ __webpack_exports__["b"] = (SizeContext);

/***/ }),

/***/ "iBmR":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // TODO: Use the `URL` global when targeting Node.js 10

__webpack_require__("4aJ6");

__webpack_require__("M/4x");

__webpack_require__("U8p0");

__webpack_require__("W1QL");

__webpack_require__("K/PF");

__webpack_require__("t91x");

var _toConsumableArray = __webpack_require__("5WRv");

__webpack_require__("asZ9");

__webpack_require__("+3V6");

__webpack_require__("Z8gF");

__webpack_require__("FEHE");

__webpack_require__("m8zh");

__webpack_require__("/dwC");

__webpack_require__("5hJT");

__webpack_require__("J8hF");

__webpack_require__("VNvs");

var URLParser = typeof URL === 'undefined' ? __webpack_require__("so/P").URL : URL;

var testParameter = function testParameter(name, filters) {
  return filters.some(function (filter) {
    return filter instanceof RegExp ? filter.test(name) : filter === name;
  });
};

module.exports = function (urlString, opts) {
  opts = Object.assign({
    defaultProtocol: 'http:',
    normalizeProtocol: true,
    forceHttp: false,
    forceHttps: false,
    stripHash: true,
    stripWWW: true,
    removeQueryParameters: [/^utm_\w+/i],
    removeTrailingSlash: true,
    removeDirectoryIndex: false,
    sortQueryParameters: true
  }, opts); // Backwards compatibility

  if (Reflect.has(opts, 'normalizeHttps')) {
    opts.forceHttp = opts.normalizeHttps;
  }

  if (Reflect.has(opts, 'normalizeHttp')) {
    opts.forceHttps = opts.normalizeHttp;
  }

  if (Reflect.has(opts, 'stripFragment')) {
    opts.stripHash = opts.stripFragment;
  }

  urlString = urlString.trim();
  var hasRelativeProtocol = urlString.startsWith('//');
  var isRelativeUrl = !hasRelativeProtocol && /^\.*\//.test(urlString); // Prepend protocol

  if (!isRelativeUrl) {
    urlString = urlString.replace(/^(?!(?:\w+:)?\/\/)|^\/\//, opts.defaultProtocol);
  }

  var urlObj = new URLParser(urlString);

  if (opts.forceHttp && opts.forceHttps) {
    throw new Error('The `forceHttp` and `forceHttps` options cannot be used together');
  }

  if (opts.forceHttp && urlObj.protocol === 'https:') {
    urlObj.protocol = 'http:';
  }

  if (opts.forceHttps && urlObj.protocol === 'http:') {
    urlObj.protocol = 'https:';
  } // Remove hash


  if (opts.stripHash) {
    urlObj.hash = '';
  } // Remove duplicate slashes if not preceded by a protocol


  if (urlObj.pathname) {
    // TODO: Use the following instead when targeting Node.js 10
    // `urlObj.pathname = urlObj.pathname.replace(/(?<!https?:)\/{2,}/g, '/');`
    urlObj.pathname = urlObj.pathname.replace(/((?![https?:]).)\/{2,}/g, function (_, p1) {
      if (/^(?!\/)/g.test(p1)) {
        return "".concat(p1, "/");
      }

      return '/';
    });
  } // Decode URI octets


  if (urlObj.pathname) {
    urlObj.pathname = decodeURI(urlObj.pathname);
  } // Remove directory index


  if (opts.removeDirectoryIndex === true) {
    opts.removeDirectoryIndex = [/^index\.[a-z]+$/];
  }

  if (Array.isArray(opts.removeDirectoryIndex) && opts.removeDirectoryIndex.length > 0) {
    var pathComponents = urlObj.pathname.split('/');
    var lastComponent = pathComponents[pathComponents.length - 1];

    if (testParameter(lastComponent, opts.removeDirectoryIndex)) {
      pathComponents = pathComponents.slice(0, pathComponents.length - 1);
      urlObj.pathname = pathComponents.slice(1).join('/') + '/';
    }
  }

  if (urlObj.hostname) {
    // Remove trailing dot
    urlObj.hostname = urlObj.hostname.replace(/\.$/, ''); // Remove `www.`
    // eslint-disable-next-line no-useless-escape

    if (opts.stripWWW && /^www\.([a-z\-\d]{2,63})\.([a-z\.]{2,5})$/.test(urlObj.hostname)) {
      // Each label should be max 63 at length (min: 2).
      // The extension should be max 5 at length (min: 2).
      // Source: https://en.wikipedia.org/wiki/Hostname#Restrictions_on_valid_host_names
      urlObj.hostname = urlObj.hostname.replace(/^www\./, '');
    }
  } // Remove query unwanted parameters


  if (Array.isArray(opts.removeQueryParameters)) {
    for (var _i = 0, _arr = _toConsumableArray(urlObj.searchParams.keys()); _i < _arr.length; _i++) {
      var key = _arr[_i];

      if (testParameter(key, opts.removeQueryParameters)) {
        urlObj.searchParams["delete"](key);
      }
    }
  } // Sort query parameters


  if (opts.sortQueryParameters) {
    urlObj.searchParams.sort();
  } // Take advantage of many of the Node `url` normalizations


  urlString = urlObj.toString(); // Remove ending `/`

  if (opts.removeTrailingSlash || urlObj.pathname === '/') {
    urlString = urlString.replace(/\/$/, '');
  } // Restore relative protocol, if applicable


  if (hasRelativeProtocol && !opts.normalizeProtocol) {
    urlString = urlString.replace(/^http:\/\//, '//');
  }

  return urlString;
};

/***/ }),

/***/ "iJnn":
/***/ (function(module, exports, __webpack_require__) {

// call something on iterator step with safe closing on error
var anObject = __webpack_require__("PAFS");
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};


/***/ }),

/***/ "iNmH":
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeToArray = __webpack_require__("+Sw5");

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return arrayLikeToArray(arr);
}

module.exports = _arrayWithoutHoles;

/***/ }),

/***/ "iPMX":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("lQyR");

__webpack_require__("YhIr");

__webpack_require__("+3V6");

function _toConsumableArray(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  } else {
    return Array.from(arr);
  }
} //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------

/*~
 * stability: stable
 * authors:
 *   - Quildreen Motta
 *
 * type: |
 *   (Number, (Any...) => 'a) => Any... => 'a or ((Any...) => 'a)
 */


var curry = function curry(arity, fn) {
  var curried = function curried(oldArgs) {
    return function () {
      for (var _len = arguments.length, newArgs = Array(_len), _key = 0; _key < _len; _key++) {
        newArgs[_key] = arguments[_key];
      }

      var allArgs = oldArgs.concat(newArgs);
      var argCount = allArgs.length;
      return argCount < arity ? curried(allArgs) :
      /* otherwise */
      fn.apply(undefined, _toConsumableArray(allArgs));
    };
  };

  return curried([]);
}; // --[ Exports ]-------------------------------------------------------


module.exports = curry;

/***/ }),

/***/ "iXSg":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "b", function() { return /* reexport */ mat3; });
__webpack_require__.d(__webpack_exports__, "c", function() { return /* reexport */ vec2; });
__webpack_require__.d(__webpack_exports__, "d", function() { return /* reexport */ vec3; });
__webpack_require__.d(__webpack_exports__, "a", function() { return /* reexport */ ext_namespaceObject; });

// NAMESPACE OBJECT: ../node_modules/@antv/matrix-util/esm/ext.js
var ext_namespaceObject = {};
__webpack_require__.r(ext_namespaceObject);
__webpack_require__.d(ext_namespaceObject, "leftTranslate", function() { return leftTranslate; });
__webpack_require__.d(ext_namespaceObject, "leftRotate", function() { return leftRotate; });
__webpack_require__.d(ext_namespaceObject, "leftScale", function() { return leftScale; });
__webpack_require__.d(ext_namespaceObject, "transform", function() { return transform; });
__webpack_require__.d(ext_namespaceObject, "direction", function() { return direction; });
__webpack_require__.d(ext_namespaceObject, "angleTo", function() { return angleTo; });
__webpack_require__.d(ext_namespaceObject, "vertical", function() { return vertical; });

// EXTERNAL MODULE: ../node_modules/gl-matrix/esm/mat3.js
var mat3 = __webpack_require__("GSm6");

// EXTERNAL MODULE: ../node_modules/gl-matrix/esm/vec2.js
var vec2 = __webpack_require__("umh7");

// EXTERNAL MODULE: ../node_modules/gl-matrix/esm/vec3.js
var vec3 = __webpack_require__("MTwu");

// CONCATENATED MODULE: ../node_modules/gl-matrix/esm/index.js











// CONCATENATED MODULE: ../node_modules/@antv/matrix-util/esm/ext.js
/**
 * @description 扩展方法，提供 gl-matrix 为提供的方法
 * */

function leftTranslate(out, a, v) {
  var transMat = [0, 0, 0, 0, 0, 0, 0, 0, 0];
  mat3.fromTranslation(transMat, v);
  return mat3.multiply(out, transMat, a);
}
function leftRotate(out, a, rad) {
  var rotateMat = [0, 0, 0, 0, 0, 0, 0, 0, 0];
  mat3.fromRotation(rotateMat, rad);
  return mat3.multiply(out, rotateMat, a);
}
function leftScale(out, a, v) {
  var scaleMat = [0, 0, 0, 0, 0, 0, 0, 0, 0];
  mat3.fromScaling(scaleMat, v);
  return mat3.multiply(out, scaleMat, a);
}

function leftMultiply(out, a, a1) {
  return mat3.multiply(out, a1, a);
}
/**
 * 根据 actions 来做 transform
 * @param m
 * @param actions
 */


function transform(m, actions) {
  var matrix = m ? [].concat(m) : [1, 0, 0, 0, 1, 0, 0, 0, 1];

  for (var i = 0, len = actions.length; i < len; i++) {
    var action = actions[i];

    switch (action[0]) {
      case 't':
        leftTranslate(matrix, matrix, [action[1], action[2]]);
        break;

      case 's':
        leftScale(matrix, matrix, [action[1], action[2]]);
        break;

      case 'r':
        leftRotate(matrix, matrix, action[1]);
        break;

      case 'm':
        leftMultiply(matrix, matrix, action[1]);
        break;

      default:
        break;
    }
  }

  return matrix;
}
/**
 * 向量 v1 到 向量 v2 夹角的方向
 * @param  {Array} v1 向量
 * @param  {Array} v2 向量
 * @return {Boolean} >= 0 顺时针 < 0 逆时针
 */

function direction(v1, v2) {
  return v1[0] * v2[1] - v2[0] * v1[1];
}
/**
 * 二维向量 v1 到 v2 的夹角
 * @param v1
 * @param v2
 * @param direct
 */

function angleTo(v1, v2, direct) {
  var ang = vec2.angle(v1, v2);
  var angleLargeThanPI = direction(v1, v2) >= 0;

  if (direct) {
    if (angleLargeThanPI) {
      return Math.PI * 2 - ang;
    }

    return ang;
  }

  if (angleLargeThanPI) {
    return ang;
  }

  return Math.PI * 2 - ang;
}
/**
 * 计算二维向量的垂直向量
 * @param out
 * @param v
 * @param flag
 */

function vertical(out, v, flag) {
  if (flag) {
    out[0] = v[1];
    out[1] = -1 * v[0];
  } else {
    out[0] = -1 * v[1];
    out[1] = v[0];
  }

  return out;
}
// CONCATENATED MODULE: ../node_modules/@antv/matrix-util/esm/index.js




/***/ }),

/***/ "iXzu":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var core_js_modules_es6_weak_map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("orKN");
/* harmony import */ var core_js_modules_es6_weak_map__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_weak_map__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_array_map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("yIlq");
/* harmony import */ var core_js_modules_es6_array_map__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_map__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es6_object_create__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("PAbq");
/* harmony import */ var core_js_modules_es6_object_create__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_create__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es6_array_reduce__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("3y5y");
/* harmony import */ var core_js_modules_es6_array_reduce__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_reduce__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es6_object_keys__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("75LO");
/* harmony import */ var core_js_modules_es6_object_keys__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_keys__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es6_array_filter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("9p7t");
/* harmony import */ var core_js_modules_es6_array_filter__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_filter__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es6_array_index_of__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("V7cS");
/* harmony import */ var core_js_modules_es6_array_index_of__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_index_of__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es6_date_now__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("7t+O");
/* harmony import */ var core_js_modules_es6_date_now__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_date_now__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es6_function_bind__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("o7PZ");
/* harmony import */ var core_js_modules_es6_function_bind__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_function_bind__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es6_array_for_each__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("7lGJ");
/* harmony import */ var core_js_modules_es6_array_for_each__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_for_each__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("d3/y");
/* harmony import */ var core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var core_js_modules_es6_array_some__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("VNvs");
/* harmony import */ var core_js_modules_es6_array_some__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_some__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("W1QL");
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var core_js_modules_es6_array_iterator__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("K/PF");
/* harmony import */ var core_js_modules_es6_array_iterator__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_iterator__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__("t91x");
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var core_js_modules_es6_string_iterator__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__("lQyR");
/* harmony import */ var core_js_modules_es6_string_iterator__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_string_iterator__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var core_js_modules_es6_map__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__("zx98");
/* harmony import */ var core_js_modules_es6_map__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_map__WEBPACK_IMPORTED_MODULE_16__);


















/**
 * A collection of shims that provide minimal functionality of the ES6 collections.
 *
 * These implementations are not meant to be used outside of the ResizeObserver
 * modules as they cover only a limited range of use cases.
 */

/* eslint-disable require-jsdoc, valid-jsdoc */
var MapShim = function () {
  if (typeof Map !== 'undefined') {
    return Map;
  }
  /**
   * Returns index in provided array that matches the specified key.
   *
   * @param {Array<Array>} arr
   * @param {*} key
   * @returns {number}
   */


  function getIndex(arr, key) {
    var result = -1;
    arr.some(function (entry, index) {
      if (entry[0] === key) {
        result = index;
        return true;
      }

      return false;
    });
    return result;
  }

  return (
    /** @class */
    function () {
      function class_1() {
        this.__entries__ = [];
      }

      Object.defineProperty(class_1.prototype, "size", {
        /**
         * @returns {boolean}
         */
        get: function get() {
          return this.__entries__.length;
        },
        enumerable: true,
        configurable: true
      });
      /**
       * @param {*} key
       * @returns {*}
       */

      class_1.prototype.get = function (key) {
        var index = getIndex(this.__entries__, key);
        var entry = this.__entries__[index];
        return entry && entry[1];
      };
      /**
       * @param {*} key
       * @param {*} value
       * @returns {void}
       */


      class_1.prototype.set = function (key, value) {
        var index = getIndex(this.__entries__, key);

        if (~index) {
          this.__entries__[index][1] = value;
        } else {
          this.__entries__.push([key, value]);
        }
      };
      /**
       * @param {*} key
       * @returns {void}
       */


      class_1.prototype["delete"] = function (key) {
        var entries = this.__entries__;
        var index = getIndex(entries, key);

        if (~index) {
          entries.splice(index, 1);
        }
      };
      /**
       * @param {*} key
       * @returns {void}
       */


      class_1.prototype.has = function (key) {
        return !!~getIndex(this.__entries__, key);
      };
      /**
       * @returns {void}
       */


      class_1.prototype.clear = function () {
        this.__entries__.splice(0);
      };
      /**
       * @param {Function} callback
       * @param {*} [ctx=null]
       * @returns {void}
       */


      class_1.prototype.forEach = function (callback, ctx) {
        if (ctx === void 0) {
          ctx = null;
        }

        for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {
          var entry = _a[_i];
          callback.call(ctx, entry[1], entry[0]);
        }
      };

      return class_1;
    }()
  );
}();
/**
 * Detects whether window and document objects are available in current environment.
 */


var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document; // Returns global object of a current environment.

var global$1 = function () {
  if (typeof global !== 'undefined' && global.Math === Math) {
    return global;
  }

  if (typeof self !== 'undefined' && self.Math === Math) {
    return self;
  }

  if (typeof window !== 'undefined' && window.Math === Math) {
    return window;
  } // eslint-disable-next-line no-new-func


  return Function('return this')();
}();
/**
 * A shim for the requestAnimationFrame which falls back to the setTimeout if
 * first one is not supported.
 *
 * @returns {number} Requests' identifier.
 */


var requestAnimationFrame$1 = function () {
  if (typeof requestAnimationFrame === 'function') {
    // It's required to use a bounded function because IE sometimes throws
    // an "Invalid calling object" error if rAF is invoked without the global
    // object on the left hand side.
    return requestAnimationFrame.bind(global$1);
  }

  return function (callback) {
    return setTimeout(function () {
      return callback(Date.now());
    }, 1000 / 60);
  };
}(); // Defines minimum timeout before adding a trailing call.


var trailingTimeout = 2;
/**
 * Creates a wrapper function which ensures that provided callback will be
 * invoked only once during the specified delay period.
 *
 * @param {Function} callback - Function to be invoked after the delay period.
 * @param {number} delay - Delay after which to invoke callback.
 * @returns {Function}
 */

function throttle(callback, delay) {
  var leadingCall = false,
      trailingCall = false,
      lastCallTime = 0;
  /**
   * Invokes the original callback function and schedules new invocation if
   * the "proxy" was called during current request.
   *
   * @returns {void}
   */

  function resolvePending() {
    if (leadingCall) {
      leadingCall = false;
      callback();
    }

    if (trailingCall) {
      proxy();
    }
  }
  /**
   * Callback invoked after the specified delay. It will further postpone
   * invocation of the original function delegating it to the
   * requestAnimationFrame.
   *
   * @returns {void}
   */


  function timeoutCallback() {
    requestAnimationFrame$1(resolvePending);
  }
  /**
   * Schedules invocation of the original function.
   *
   * @returns {void}
   */


  function proxy() {
    var timeStamp = Date.now();

    if (leadingCall) {
      // Reject immediately following calls.
      if (timeStamp - lastCallTime < trailingTimeout) {
        return;
      } // Schedule new call to be in invoked when the pending one is resolved.
      // This is important for "transitions" which never actually start
      // immediately so there is a chance that we might miss one if change
      // happens amids the pending invocation.


      trailingCall = true;
    } else {
      leadingCall = true;
      trailingCall = false;
      setTimeout(timeoutCallback, delay);
    }

    lastCallTime = timeStamp;
  }

  return proxy;
} // Minimum delay before invoking the update of observers.


var REFRESH_DELAY = 20; // A list of substrings of CSS properties used to find transition events that
// might affect dimensions of observed elements.

var transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight']; // Check if MutationObserver is available.

var mutationObserverSupported = typeof MutationObserver !== 'undefined';
/**
 * Singleton controller class which handles updates of ResizeObserver instances.
 */

var ResizeObserverController =
/** @class */
function () {
  /**
   * Creates a new instance of ResizeObserverController.
   *
   * @private
   */
  function ResizeObserverController() {
    /**
     * Indicates whether DOM listeners have been added.
     *
     * @private {boolean}
     */
    this.connected_ = false;
    /**
     * Tells that controller has subscribed for Mutation Events.
     *
     * @private {boolean}
     */

    this.mutationEventsAdded_ = false;
    /**
     * Keeps reference to the instance of MutationObserver.
     *
     * @private {MutationObserver}
     */

    this.mutationsObserver_ = null;
    /**
     * A list of connected observers.
     *
     * @private {Array<ResizeObserverSPI>}
     */

    this.observers_ = [];
    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);
  }
  /**
   * Adds observer to observers list.
   *
   * @param {ResizeObserverSPI} observer - Observer to be added.
   * @returns {void}
   */


  ResizeObserverController.prototype.addObserver = function (observer) {
    if (!~this.observers_.indexOf(observer)) {
      this.observers_.push(observer);
    } // Add listeners if they haven't been added yet.


    if (!this.connected_) {
      this.connect_();
    }
  };
  /**
   * Removes observer from observers list.
   *
   * @param {ResizeObserverSPI} observer - Observer to be removed.
   * @returns {void}
   */


  ResizeObserverController.prototype.removeObserver = function (observer) {
    var observers = this.observers_;
    var index = observers.indexOf(observer); // Remove observer if it's present in registry.

    if (~index) {
      observers.splice(index, 1);
    } // Remove listeners if controller has no connected observers.


    if (!observers.length && this.connected_) {
      this.disconnect_();
    }
  };
  /**
   * Invokes the update of observers. It will continue running updates insofar
   * it detects changes.
   *
   * @returns {void}
   */


  ResizeObserverController.prototype.refresh = function () {
    var changesDetected = this.updateObservers_(); // Continue running updates if changes have been detected as there might
    // be future ones caused by CSS transitions.

    if (changesDetected) {
      this.refresh();
    }
  };
  /**
   * Updates every observer from observers list and notifies them of queued
   * entries.
   *
   * @private
   * @returns {boolean} Returns "true" if any observer has detected changes in
   *      dimensions of it's elements.
   */


  ResizeObserverController.prototype.updateObservers_ = function () {
    // Collect observers that have active observations.
    var activeObservers = this.observers_.filter(function (observer) {
      return observer.gatherActive(), observer.hasActive();
    }); // Deliver notifications in a separate cycle in order to avoid any
    // collisions between observers, e.g. when multiple instances of
    // ResizeObserver are tracking the same element and the callback of one
    // of them changes content dimensions of the observed target. Sometimes
    // this may result in notifications being blocked for the rest of observers.

    activeObservers.forEach(function (observer) {
      return observer.broadcastActive();
    });
    return activeObservers.length > 0;
  };
  /**
   * Initializes DOM listeners.
   *
   * @private
   * @returns {void}
   */


  ResizeObserverController.prototype.connect_ = function () {
    // Do nothing if running in a non-browser environment or if listeners
    // have been already added.
    if (!isBrowser || this.connected_) {
      return;
    } // Subscription to the "Transitionend" event is used as a workaround for
    // delayed transitions. This way it's possible to capture at least the
    // final state of an element.


    document.addEventListener('transitionend', this.onTransitionEnd_);
    window.addEventListener('resize', this.refresh);

    if (mutationObserverSupported) {
      this.mutationsObserver_ = new MutationObserver(this.refresh);
      this.mutationsObserver_.observe(document, {
        attributes: true,
        childList: true,
        characterData: true,
        subtree: true
      });
    } else {
      document.addEventListener('DOMSubtreeModified', this.refresh);
      this.mutationEventsAdded_ = true;
    }

    this.connected_ = true;
  };
  /**
   * Removes DOM listeners.
   *
   * @private
   * @returns {void}
   */


  ResizeObserverController.prototype.disconnect_ = function () {
    // Do nothing if running in a non-browser environment or if listeners
    // have been already removed.
    if (!isBrowser || !this.connected_) {
      return;
    }

    document.removeEventListener('transitionend', this.onTransitionEnd_);
    window.removeEventListener('resize', this.refresh);

    if (this.mutationsObserver_) {
      this.mutationsObserver_.disconnect();
    }

    if (this.mutationEventsAdded_) {
      document.removeEventListener('DOMSubtreeModified', this.refresh);
    }

    this.mutationsObserver_ = null;
    this.mutationEventsAdded_ = false;
    this.connected_ = false;
  };
  /**
   * "Transitionend" event handler.
   *
   * @private
   * @param {TransitionEvent} event
   * @returns {void}
   */


  ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {
    var _b = _a.propertyName,
        propertyName = _b === void 0 ? '' : _b; // Detect whether transition may affect dimensions of an element.

    var isReflowProperty = transitionKeys.some(function (key) {
      return !!~propertyName.indexOf(key);
    });

    if (isReflowProperty) {
      this.refresh();
    }
  };
  /**
   * Returns instance of the ResizeObserverController.
   *
   * @returns {ResizeObserverController}
   */


  ResizeObserverController.getInstance = function () {
    if (!this.instance_) {
      this.instance_ = new ResizeObserverController();
    }

    return this.instance_;
  };
  /**
   * Holds reference to the controller's instance.
   *
   * @private {ResizeObserverController}
   */


  ResizeObserverController.instance_ = null;
  return ResizeObserverController;
}();
/**
 * Defines non-writable/enumerable properties of the provided target object.
 *
 * @param {Object} target - Object for which to define properties.
 * @param {Object} props - Properties to be defined.
 * @returns {Object} Target object.
 */


var defineConfigurable = function defineConfigurable(target, props) {
  for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {
    var key = _a[_i];
    Object.defineProperty(target, key, {
      value: props[key],
      enumerable: false,
      writable: false,
      configurable: true
    });
  }

  return target;
};
/**
 * Returns the global object associated with provided element.
 *
 * @param {Object} target
 * @returns {Object}
 */


var getWindowOf = function getWindowOf(target) {
  // Assume that the element is an instance of Node, which means that it
  // has the "ownerDocument" property from which we can retrieve a
  // corresponding global object.
  var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView; // Return the local global object if it's not possible extract one from
  // provided element.

  return ownerGlobal || global$1;
}; // Placeholder of an empty content rectangle.


var emptyRect = createRectInit(0, 0, 0, 0);
/**
 * Converts provided string to a number.
 *
 * @param {number|string} value
 * @returns {number}
 */

function toFloat(value) {
  return parseFloat(value) || 0;
}
/**
 * Extracts borders size from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @param {...string} positions - Borders positions (top, right, ...)
 * @returns {number}
 */


function getBordersSize(styles) {
  var positions = [];

  for (var _i = 1; _i < arguments.length; _i++) {
    positions[_i - 1] = arguments[_i];
  }

  return positions.reduce(function (size, position) {
    var value = styles['border-' + position + '-width'];
    return size + toFloat(value);
  }, 0);
}
/**
 * Extracts paddings sizes from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @returns {Object} Paddings box.
 */


function getPaddings(styles) {
  var positions = ['top', 'right', 'bottom', 'left'];
  var paddings = {};

  for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {
    var position = positions_1[_i];
    var value = styles['padding-' + position];
    paddings[position] = toFloat(value);
  }

  return paddings;
}
/**
 * Calculates content rectangle of provided SVG element.
 *
 * @param {SVGGraphicsElement} target - Element content rectangle of which needs
 *      to be calculated.
 * @returns {DOMRectInit}
 */


function getSVGContentRect(target) {
  var bbox = target.getBBox();
  return createRectInit(0, 0, bbox.width, bbox.height);
}
/**
 * Calculates content rectangle of provided HTMLElement.
 *
 * @param {HTMLElement} target - Element for which to calculate the content rectangle.
 * @returns {DOMRectInit}
 */


function getHTMLElementContentRect(target) {
  // Client width & height properties can't be
  // used exclusively as they provide rounded values.
  var clientWidth = target.clientWidth,
      clientHeight = target.clientHeight; // By this condition we can catch all non-replaced inline, hidden and
  // detached elements. Though elements with width & height properties less
  // than 0.5 will be discarded as well.
  //
  // Without it we would need to implement separate methods for each of
  // those cases and it's not possible to perform a precise and performance
  // effective test for hidden elements. E.g. even jQuery's ':visible' filter
  // gives wrong results for elements with width & height less than 0.5.

  if (!clientWidth && !clientHeight) {
    return emptyRect;
  }

  var styles = getWindowOf(target).getComputedStyle(target);
  var paddings = getPaddings(styles);
  var horizPad = paddings.left + paddings.right;
  var vertPad = paddings.top + paddings.bottom; // Computed styles of width & height are being used because they are the
  // only dimensions available to JS that contain non-rounded values. It could
  // be possible to utilize the getBoundingClientRect if only it's data wasn't
  // affected by CSS transformations let alone paddings, borders and scroll bars.

  var width = toFloat(styles.width),
      height = toFloat(styles.height); // Width & height include paddings and borders when the 'border-box' box
  // model is applied (except for IE).

  if (styles.boxSizing === 'border-box') {
    // Following conditions are required to handle Internet Explorer which
    // doesn't include paddings and borders to computed CSS dimensions.
    //
    // We can say that if CSS dimensions + paddings are equal to the "client"
    // properties then it's either IE, and thus we don't need to subtract
    // anything, or an element merely doesn't have paddings/borders styles.
    if (Math.round(width + horizPad) !== clientWidth) {
      width -= getBordersSize(styles, 'left', 'right') + horizPad;
    }

    if (Math.round(height + vertPad) !== clientHeight) {
      height -= getBordersSize(styles, 'top', 'bottom') + vertPad;
    }
  } // Following steps can't be applied to the document's root element as its
  // client[Width/Height] properties represent viewport area of the window.
  // Besides, it's as well not necessary as the <html> itself neither has
  // rendered scroll bars nor it can be clipped.


  if (!isDocumentElement(target)) {
    // In some browsers (only in Firefox, actually) CSS width & height
    // include scroll bars size which can be removed at this step as scroll
    // bars are the only difference between rounded dimensions + paddings
    // and "client" properties, though that is not always true in Chrome.
    var vertScrollbar = Math.round(width + horizPad) - clientWidth;
    var horizScrollbar = Math.round(height + vertPad) - clientHeight; // Chrome has a rather weird rounding of "client" properties.
    // E.g. for an element with content width of 314.2px it sometimes gives
    // the client width of 315px and for the width of 314.7px it may give
    // 314px. And it doesn't happen all the time. So just ignore this delta
    // as a non-relevant.

    if (Math.abs(vertScrollbar) !== 1) {
      width -= vertScrollbar;
    }

    if (Math.abs(horizScrollbar) !== 1) {
      height -= horizScrollbar;
    }
  }

  return createRectInit(paddings.left, paddings.top, width, height);
}
/**
 * Checks whether provided element is an instance of the SVGGraphicsElement.
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */


var isSVGGraphicsElement = function () {
  // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement
  // interface.
  if (typeof SVGGraphicsElement !== 'undefined') {
    return function (target) {
      return target instanceof getWindowOf(target).SVGGraphicsElement;
    };
  } // If it's so, then check that element is at least an instance of the
  // SVGElement and that it has the "getBBox" method.
  // eslint-disable-next-line no-extra-parens


  return function (target) {
    return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function';
  };
}();
/**
 * Checks whether provided element is a document element (<html>).
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */


function isDocumentElement(target) {
  return target === getWindowOf(target).document.documentElement;
}
/**
 * Calculates an appropriate content rectangle for provided html or svg element.
 *
 * @param {Element} target - Element content rectangle of which needs to be calculated.
 * @returns {DOMRectInit}
 */


function getContentRect(target) {
  if (!isBrowser) {
    return emptyRect;
  }

  if (isSVGGraphicsElement(target)) {
    return getSVGContentRect(target);
  }

  return getHTMLElementContentRect(target);
}
/**
 * Creates rectangle with an interface of the DOMRectReadOnly.
 * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly
 *
 * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.
 * @returns {DOMRectReadOnly}
 */


function createReadOnlyRect(_a) {
  var x = _a.x,
      y = _a.y,
      width = _a.width,
      height = _a.height; // If DOMRectReadOnly is available use it as a prototype for the rectangle.

  var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;
  var rect = Object.create(Constr.prototype); // Rectangle's properties are not writable and non-enumerable.

  defineConfigurable(rect, {
    x: x,
    y: y,
    width: width,
    height: height,
    top: y,
    right: x + width,
    bottom: height + y,
    left: x
  });
  return rect;
}
/**
 * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.
 * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit
 *
 * @param {number} x - X coordinate.
 * @param {number} y - Y coordinate.
 * @param {number} width - Rectangle's width.
 * @param {number} height - Rectangle's height.
 * @returns {DOMRectInit}
 */


function createRectInit(x, y, width, height) {
  return {
    x: x,
    y: y,
    width: width,
    height: height
  };
}
/**
 * Class that is responsible for computations of the content rectangle of
 * provided DOM element and for keeping track of it's changes.
 */


var ResizeObservation =
/** @class */
function () {
  /**
   * Creates an instance of ResizeObservation.
   *
   * @param {Element} target - Element to be observed.
   */
  function ResizeObservation(target) {
    /**
     * Broadcasted width of content rectangle.
     *
     * @type {number}
     */
    this.broadcastWidth = 0;
    /**
     * Broadcasted height of content rectangle.
     *
     * @type {number}
     */

    this.broadcastHeight = 0;
    /**
     * Reference to the last observed content rectangle.
     *
     * @private {DOMRectInit}
     */

    this.contentRect_ = createRectInit(0, 0, 0, 0);
    this.target = target;
  }
  /**
   * Updates content rectangle and tells whether it's width or height properties
   * have changed since the last broadcast.
   *
   * @returns {boolean}
   */


  ResizeObservation.prototype.isActive = function () {
    var rect = getContentRect(this.target);
    this.contentRect_ = rect;
    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;
  };
  /**
   * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data
   * from the corresponding properties of the last observed content rectangle.
   *
   * @returns {DOMRectInit} Last observed content rectangle.
   */


  ResizeObservation.prototype.broadcastRect = function () {
    var rect = this.contentRect_;
    this.broadcastWidth = rect.width;
    this.broadcastHeight = rect.height;
    return rect;
  };

  return ResizeObservation;
}();

var ResizeObserverEntry =
/** @class */
function () {
  /**
   * Creates an instance of ResizeObserverEntry.
   *
   * @param {Element} target - Element that is being observed.
   * @param {DOMRectInit} rectInit - Data of the element's content rectangle.
   */
  function ResizeObserverEntry(target, rectInit) {
    var contentRect = createReadOnlyRect(rectInit); // According to the specification following properties are not writable
    // and are also not enumerable in the native implementation.
    //
    // Property accessors are not being used as they'd require to define a
    // private WeakMap storage which may cause memory leaks in browsers that
    // don't support this type of collections.

    defineConfigurable(this, {
      target: target,
      contentRect: contentRect
    });
  }

  return ResizeObserverEntry;
}();

var ResizeObserverSPI =
/** @class */
function () {
  /**
   * Creates a new instance of ResizeObserver.
   *
   * @param {ResizeObserverCallback} callback - Callback function that is invoked
   *      when one of the observed elements changes it's content dimensions.
   * @param {ResizeObserverController} controller - Controller instance which
   *      is responsible for the updates of observer.
   * @param {ResizeObserver} callbackCtx - Reference to the public
   *      ResizeObserver instance which will be passed to callback function.
   */
  function ResizeObserverSPI(callback, controller, callbackCtx) {
    /**
     * Collection of resize observations that have detected changes in dimensions
     * of elements.
     *
     * @private {Array<ResizeObservation>}
     */
    this.activeObservations_ = [];
    /**
     * Registry of the ResizeObservation instances.
     *
     * @private {Map<Element, ResizeObservation>}
     */

    this.observations_ = new MapShim();

    if (typeof callback !== 'function') {
      throw new TypeError('The callback provided as parameter 1 is not a function.');
    }

    this.callback_ = callback;
    this.controller_ = controller;
    this.callbackCtx_ = callbackCtx;
  }
  /**
   * Starts observing provided element.
   *
   * @param {Element} target - Element to be observed.
   * @returns {void}
   */


  ResizeObserverSPI.prototype.observe = function (target) {
    if (!arguments.length) {
      throw new TypeError('1 argument required, but only 0 present.');
    } // Do nothing if current environment doesn't have the Element interface.


    if (typeof Element === 'undefined' || !(Element instanceof Object)) {
      return;
    }

    if (!(target instanceof getWindowOf(target).Element)) {
      throw new TypeError('parameter 1 is not of type "Element".');
    }

    var observations = this.observations_; // Do nothing if element is already being observed.

    if (observations.has(target)) {
      return;
    }

    observations.set(target, new ResizeObservation(target));
    this.controller_.addObserver(this); // Force the update of observations.

    this.controller_.refresh();
  };
  /**
   * Stops observing provided element.
   *
   * @param {Element} target - Element to stop observing.
   * @returns {void}
   */


  ResizeObserverSPI.prototype.unobserve = function (target) {
    if (!arguments.length) {
      throw new TypeError('1 argument required, but only 0 present.');
    } // Do nothing if current environment doesn't have the Element interface.


    if (typeof Element === 'undefined' || !(Element instanceof Object)) {
      return;
    }

    if (!(target instanceof getWindowOf(target).Element)) {
      throw new TypeError('parameter 1 is not of type "Element".');
    }

    var observations = this.observations_; // Do nothing if element is not being observed.

    if (!observations.has(target)) {
      return;
    }

    observations["delete"](target);

    if (!observations.size) {
      this.controller_.removeObserver(this);
    }
  };
  /**
   * Stops observing all elements.
   *
   * @returns {void}
   */


  ResizeObserverSPI.prototype.disconnect = function () {
    this.clearActive();
    this.observations_.clear();
    this.controller_.removeObserver(this);
  };
  /**
   * Collects observation instances the associated element of which has changed
   * it's content rectangle.
   *
   * @returns {void}
   */


  ResizeObserverSPI.prototype.gatherActive = function () {
    var _this = this;

    this.clearActive();
    this.observations_.forEach(function (observation) {
      if (observation.isActive()) {
        _this.activeObservations_.push(observation);
      }
    });
  };
  /**
   * Invokes initial callback function with a list of ResizeObserverEntry
   * instances collected from active resize observations.
   *
   * @returns {void}
   */


  ResizeObserverSPI.prototype.broadcastActive = function () {
    // Do nothing if observer doesn't have active observations.
    if (!this.hasActive()) {
      return;
    }

    var ctx = this.callbackCtx_; // Create ResizeObserverEntry instance for every active observation.

    var entries = this.activeObservations_.map(function (observation) {
      return new ResizeObserverEntry(observation.target, observation.broadcastRect());
    });
    this.callback_.call(ctx, entries, ctx);
    this.clearActive();
  };
  /**
   * Clears the collection of active observations.
   *
   * @returns {void}
   */


  ResizeObserverSPI.prototype.clearActive = function () {
    this.activeObservations_.splice(0);
  };
  /**
   * Tells whether observer has active observations.
   *
   * @returns {boolean}
   */


  ResizeObserverSPI.prototype.hasActive = function () {
    return this.activeObservations_.length > 0;
  };

  return ResizeObserverSPI;
}(); // Registry of internal observers. If WeakMap is not available use current shim
// for the Map collection as it has all required methods and because WeakMap
// can't be fully polyfilled anyway.


var observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();
/**
 * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation
 * exposing only those methods and properties that are defined in the spec.
 */

var ResizeObserver =
/** @class */
function () {
  /**
   * Creates a new instance of ResizeObserver.
   *
   * @param {ResizeObserverCallback} callback - Callback that is invoked when
   *      dimensions of the observed elements change.
   */
  function ResizeObserver(callback) {
    if (!(this instanceof ResizeObserver)) {
      throw new TypeError('Cannot call a class as a function.');
    }

    if (!arguments.length) {
      throw new TypeError('1 argument required, but only 0 present.');
    }

    var controller = ResizeObserverController.getInstance();
    var observer = new ResizeObserverSPI(callback, controller, this);
    observers.set(this, observer);
  }

  return ResizeObserver;
}(); // Expose public methods of ResizeObserver.


['observe', 'unobserve', 'disconnect'].forEach(function (method) {
  ResizeObserver.prototype[method] = function () {
    var _a;

    return (_a = observers.get(this))[method].apply(_a, arguments);
  };
});

var index = function () {
  // Export existing implementation if available.
  if (typeof global$1.ResizeObserver !== 'undefined') {
    return global$1.ResizeObserver;
  }

  return ResizeObserver;
}();

/* harmony default export */ __webpack_exports__["default"] = (index);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("pCvA")))

/***/ }),

/***/ "io9E":
/***/ (function(module, exports, __webpack_require__) {

var _indexOf = __webpack_require__("Gv4w");

module.exports = function _contains(a, list) {
  return _indexOf(list, a, 0) >= 0;
};

/***/ }),

/***/ "it7j":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
var $export = __webpack_require__("X6VK");
var $find = __webpack_require__("1wfo")(5);
var KEY = 'find';
var forced = true;
// Shouldn't skip holes
if (KEY in []) Array(1)[KEY](function () { forced = false; });
$export($export.P + $export.F * forced, 'Array', {
  find: function find(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
__webpack_require__("OfmW")(KEY);


/***/ }),

/***/ "iur1":
/***/ (function(module, exports, __webpack_require__) {

// 21.2.5.3 get RegExp.prototype.flags()
if (__webpack_require__("GGqZ") && /./g.flags != 'g') __webpack_require__("U1KF").f(RegExp.prototype, 'flags', {
  configurable: true,
  get: __webpack_require__("MBcE")
});


/***/ }),

/***/ "j/vf":
/***/ (function(module, exports, __webpack_require__) {

// all object keys, includes non-enumerable and symbols
var gOPN = __webpack_require__("zIds");
var gOPS = __webpack_require__("0oPD");
var anObject = __webpack_require__("PAFS");
var Reflect = __webpack_require__("P56o").Reflect;
module.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {
  var keys = gOPN.f(anObject(it));
  var getSymbols = gOPS.f;
  return getSymbols ? keys.concat(getSymbols(it)) : keys;
};


/***/ }),

/***/ "j2P5":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin
module.exports = {"products":"Product-module--products--3jgCj","container":"Product-module--container--1U_aM","show":"Product-module--show--kqtKc","mask":"Product-module--mask--OrbGy","product":"Product-module--product--3Tixh","productContent":"Product-module--productContent--ajiW0","productSlogan":"Product-module--productSlogan--eYqa5","productDescription":"Product-module--productDescription--q6OiA","productLinks":"Product-module--productLinks--2Rj_8"};

/***/ }),

/***/ "jCf+":
/***/ (function(module, exports, __webpack_require__) {

var _curry2 = __webpack_require__("OFPg");

var _xfBase = __webpack_require__("K8HH");

module.exports = function () {
  function XFilter(f, xf) {
    this.xf = xf;
    this.f = f;
  }

  XFilter.prototype['@@transducer/init'] = _xfBase.init;
  XFilter.prototype['@@transducer/result'] = _xfBase.result;

  XFilter.prototype['@@transducer/step'] = function (result, input) {
    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;
  };

  return _curry2(function _xfilter(f, xf) {
    return new XFilter(f, xf);
  });
}();

/***/ }),

/***/ "jEou":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("Bsg+");
var setPrototypeOf = __webpack_require__("3ydu").set;
module.exports = function (that, target, C) {
  var S = target.constructor;
  var P;
  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {
    setPrototypeOf(that, P);
  } return that;
};


/***/ }),

/***/ "jLVx":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _SearchOutlined = _interopRequireDefault(__webpack_require__("NyDw"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    'default': obj
  };
}

var _default = _SearchOutlined;
exports["default"] = _default;
module.exports = _default;

/***/ }),

/***/ "jPEw":
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__("U1KF").f;
var has = __webpack_require__("ezc+");
var TAG = __webpack_require__("9dxi")('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),

/***/ "jWh4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("PAbq");

__webpack_require__("ACU4");

__webpack_require__("3y5y");

__webpack_require__("d3/y");

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
} //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------
// --[ Dependencies ]---------------------------------------------------


var _require = __webpack_require__("vgDc"),
    tagSymbol = _require.tagSymbol,
    typeSymbol = _require.typeSymbol;

var mapValues = __webpack_require__("3AxU");

var values = __webpack_require__("qXhx");

var extend = __webpack_require__("0ONX"); // --[ Constants ]------------------------------------------------------


var typeJsonKey = '@@type';
var tagJsonKey = '@@tag';
var valueJsonKey = '@@value'; // --[ Helpers ]--------------------------------------------------------

/*~
 * type: ((Object 'a) => 'b) => ([Object 'a]) => Object 'b  
 */

var arrayToObject = function arrayToObject(extractKey) {
  return function (array) {
    return array.reduce(function (object, element) {
      object[extractKey(element)] = element;
      return object;
    }, {});
  };
};
/*~
 * type: (String) => (Object 'a) => 'a | None 
 */


var property = function property(propertyName) {
  return function (object) {
    return object[propertyName];
  };
};
/*~
 * type: ([Object 'a]) => Object 'a 
 */


var indexByType = arrayToObject(property(typeSymbol));
/*~
 * type: (String, String) => Bool
 */

var assertType = function assertType(given, expected) {
  if (expected !== given) {
    throw new TypeError('\n       The JSON structure was generated from ' + expected + '.\n       You are trying to parse it as ' + given + '. \n    ');
  }
};
/*~
 * type: |
 *   type JSONSerialisation = {
 *     "@@type":  String,
 *     "@@tag":   String,
 *     "@@value": Object Any
 *   }
 *   type JSONParser = {
 *     fromJSON: (JSONSerialisation, Array JSONParser) => Variant
 *   }
 * 
 *   (Object JSONParser) => (JSONSerialisation) => Any
 */


var parseValue = function parseValue(parsers) {
  return function (value) {
    if (value !== null && typeof value[typeJsonKey] === 'string') {
      var type = value[typeJsonKey];

      if (parsers[type]) {
        return parsers[type].fromJSON(value, parsers, true);
      } else {
        return value;
      }
    } else {
      return value;
    }
  };
};
/*~
 * type: ('a) => JSON
 */


var serializeValue = function serializeValue(value) {
  return value === undefined ? null : value !== null && typeof value.toJSON === 'function' ? value.toJSON() :
  /* otherwise */
  value;
}; // --[ Implementation ]-------------------------------------------------

/*~
 * stability: experimental
 * authors:
 *   - "@boris-marinov"
 * 
 * type: |
 *   (Variant, ADT) => Void 
 */


var serialization = function serialization(variant, adt) {
  var typeName = adt[typeSymbol];
  var tagName = variant.prototype[tagSymbol];
  /*~
   * stability: experimental
   * module: null
   * authors:
   *   - "@boris-marinov"
   * 
   * type: |
   *   type JSONSerialisation = {
   *     "@@type":  String,
   *     "@@tag":   String,
   *     "@@value": Object Any
   *   }
   * 
   *   Variant . () => JSONSerialisation
   */

  variant.prototype.toJSON = function () {
    var _ref;

    return _ref = {}, _defineProperty(_ref, typeJsonKey, typeName), _defineProperty(_ref, tagJsonKey, tagName), _defineProperty(_ref, valueJsonKey, mapValues(this, serializeValue)), _ref;
  };
  /*~
   * stability: experimental
   * module: null
   * authors:
   *   - "@boris-marinov"
   * 
   * type: |
   *   type JSONSerialisation = {
   *     "@@type":  String,
   *     "@@tag":   String,
   *     "@@value": Object Any
   *   }
   *   type JSONParser = {
   *     fromJSON: (JSONSerialisation, Array JSONParser) => Variant
   *   }
   * 
   *   (JSONSerialisation, Array JSONParser) => Variant
   */


  adt.fromJSON = function (value) {
    var parsers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _defineProperty({}, typeName, adt);
    var keysIndicateType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var valueTypeName = value[typeJsonKey];
    var valueTagName = value[tagJsonKey];
    var valueContents = value[valueJsonKey];
    assertType(typeName, valueTypeName);
    var parsersByType = keysIndicateType ? parsers :
    /*otherwise*/
    indexByType(values(parsers));
    var parsedValue = mapValues(valueContents, parseValue(parsersByType));
    return extend(Object.create(adt[valueTagName].prototype), parsedValue);
  };
}; // --[ Exports ]--------------------------------------------------------


module.exports = serialization;

/***/ }),

/***/ "joUm":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * 是否为函数
 * @param  {*} fn 对象
 * @return {Boolean}  是否函数
 */

var is_type_1 = __webpack_require__("z55C");

exports["default"] = function (value) {
  return is_type_1["default"](value, 'Function');
};

/***/ }),

/***/ "k81u":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "kBaS":
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),

/***/ "kEto":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // This icon file is generated automatically.

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var BarsOutlined = {
  "icon": {
    "tag": "svg",
    "attrs": {
      "viewBox": "0 0 1024 1024",
      "focusable": "false"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "d": "M912 192H328c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h584c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 284H328c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h584c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 284H328c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h584c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM104 228a56 56 0 10112 0 56 56 0 10-112 0zm0 284a56 56 0 10112 0 56 56 0 10-112 0zm0 284a56 56 0 10112 0 56 56 0 10-112 0z"
      }
    }]
  },
  "name": "bars",
  "theme": "outlined"
};
exports["default"] = BarsOutlined;

/***/ }),

/***/ "kFZj":
/***/ (function(module) {

module.exports = JSON.parse("{\"name\":\"@antv/g-base\",\"version\":\"0.4.7\",\"description\":\"A common util collection for antv projects\",\"main\":\"lib/index.js\",\"module\":\"esm/index.js\",\"types\":\"lib/index.d.ts\",\"files\":[\"package.json\",\"esm\",\"lib\",\"LICENSE\",\"README.md\"],\"scripts\":{\"build\":\"npm run clean && run-p build:*\",\"build:esm\":\"tsc -p tsconfig.json --target ES5 --module ESNext --outDir esm\",\"build:cjs\":\"tsc -p tsconfig.json --target ES5 --module commonjs --outDir lib\",\"clean\":\"rm -rf esm lib\",\"watch:cjs\":\"tsc-watch -p tsconfig.json --target ES5 --module commonjs --outDir lib --compiler typescript/bin/tsc\",\"coverage\":\"npm run coverage-generator && npm run coverage-viewer\",\"coverage-generator\":\"torch --coverage --compile --source-pattern src/*.js,src/**/*.js --opts tests/mocha.opts\",\"coverage-viewer\":\"torch-coverage\",\"test\":\"torch --renderer --compile --opts tests/mocha.opts\",\"test-live\":\"torch --compile --interactive --opts tests/mocha.opts\",\"tsc\":\"tsc --noEmit\",\"typecheck\":\"tsc --noEmit\"},\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/antvis/util.git\"},\"keywords\":[\"util\",\"antv\",\"g\"],\"publishConfig\":{\"access\":\"public\"},\"author\":\"https://github.com/orgs/antvis/people\",\"license\":\"ISC\",\"bugs\":{\"url\":\"https://github.com/antvis/util/issues\"},\"devDependencies\":{\"@antv/torch\":\"^1.0.0\",\"gl-matrix\":\"^3.0.0\",\"less\":\"^3.9.0\",\"npm-run-all\":\"^4.1.5\",\"tsc-watch\":\"^4.0.0\"},\"homepage\":\"https://github.com/antvis/util#readme\",\"dependencies\":{\"@antv/event-emitter\":\"^0.1.1\",\"@antv/g-math\":\"^0.1.3\",\"@antv/matrix-util\":\"^3.1.0-beta.1\",\"@antv/path-util\":\"~2.0.5\",\"@antv/util\":\"~2.0.0\",\"@types/d3-timer\":\"^1.0.9\",\"d3-ease\":\"^1.0.5\",\"d3-interpolate\":\"^1.3.2\",\"d3-timer\":\"^1.0.9\",\"detect-browser\":\"^5.1.0\"},\"__npminstall_done\":false,\"gitHead\":\"eb6a2503cb7bb8154697592b10680939d954a31a\"}");

/***/ }),

/***/ "kFsC":
/***/ (function(module, exports, __webpack_require__) {

var _curry1 = __webpack_require__("AN6r");
/**
 * A function that returns the `!` of its argument. It will return `true` when
 * passed false-y value, and `false` when passed a truth-y one.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Logic
 * @sig * -> Boolean
 * @param {*} a any value
 * @return {Boolean} the logical inverse of passed argument.
 * @see R.complement
 * @example
 *
 *      R.not(true); //=> false
 *      R.not(false); //=> true
 *      R.not(0); //=> true
 *      R.not(1); //=> false
 */


module.exports = _curry1(function not(a) {
  return !a;
});

/***/ }),

/***/ "kMo5":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _possibleConstructorReturn; });
/* harmony import */ var _helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("J1LG");
/* harmony import */ var _assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("0942");


function _possibleConstructorReturn(self, call) {
  if (call && (Object(_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(call) === "object" || typeof call === "function")) {
    return call;
  }

  return Object(_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(self);
}

/***/ }),

/***/ "kcW2":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("5hJT");

__webpack_require__("d3/y");

var _interopRequireDefault = __webpack_require__("63Ad");

var _interopRequireWildcard = __webpack_require__("vdEC");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var React = _interopRequireWildcard(__webpack_require__("mXGw"));

var _BarsOutlined = _interopRequireDefault(__webpack_require__("kEto"));

var _AntdIcon = _interopRequireDefault(__webpack_require__("CxZ5")); // GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY


var BarsOutlined = function BarsOutlined(props, ref) {
  return React.createElement(_AntdIcon["default"], Object.assign({}, props, {
    ref: ref,
    icon: _BarsOutlined["default"]
  }));
};

BarsOutlined.displayName = 'BarsOutlined';

var _default = React.forwardRef(BarsOutlined);

exports["default"] = _default;

/***/ }),

/***/ "khIB":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("PAFS");
var isObject = __webpack_require__("Bsg+");
var newPromiseCapability = __webpack_require__("gtO+");

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),

/***/ "kku+":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("asZ9");

var _curry1 = __webpack_require__("AN6r");

var _isString = __webpack_require__("74ju");
/**
 * Returns a new list or string with the elements or characters in reverse
 * order.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig [a] -> [a]
 * @sig String -> String
 * @param {Array|String} list
 * @return {Array|String}
 * @example
 *
 *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]
 *      R.reverse([1, 2]);     //=> [2, 1]
 *      R.reverse([1]);        //=> [1]
 *      R.reverse([]);         //=> []
 *
 *      R.reverse('abc');      //=> 'cba'
 *      R.reverse('ab');       //=> 'ba'
 *      R.reverse('a');        //=> 'a'
 *      R.reverse('');         //=> ''
 */


module.exports = _curry1(function reverse(list) {
  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();
});

/***/ }),

/***/ "kluZ":
/***/ (function(module, exports) {

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

module.exports = _nonIterableSpread;

/***/ }),

/***/ "l5BI":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _startsWith = __webpack_require__("cpHF");

var _startsWith2 = _interopRequireDefault(_startsWith);

var _filter = __webpack_require__("LOD0");

var _filter2 = _interopRequireDefault(_filter);

var _isNil = __webpack_require__("CL0D");

var _isNil2 = _interopRequireDefault(_isNil);

var _curry = __webpack_require__("NU6T");

var _curry2 = _interopRequireDefault(_curry);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * Get valid langKey in langs or return defaultLangKey
 * @func
 * @param {[String]} langs allowed lang keys ['en', 'fr', 'pt']
 * @param {String} defaultLangKey default browser language key
 * @returns {String} valid langKey
 */


var getValidLangKey = (0, _curry2["default"])(function (langs, defaultLangKey, langKey) {
  if ((0, _isNil2["default"])(langKey)) {
    return defaultLangKey;
  }

  var currentLangKey = (0, _filter2["default"])(function (l) {
    return (0, _startsWith2["default"])(l, langKey);
  }, langs);
  return currentLangKey[0] || defaultLangKey;
});
exports["default"] = getValidLangKey;

/***/ }),

/***/ "l8sR":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ExclamationCircleFilled = _interopRequireDefault(__webpack_require__("deSU"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    'default': obj
  };
}

var _default = _ExclamationCircleFilled;
exports["default"] = _default;
module.exports = _default;

/***/ }),

/***/ "lAJ1":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "lAKj":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var regexpFlags = __webpack_require__("MBcE");

var nativeExec = RegExp.prototype.exec;
// This always refers to the native implementation, because the
// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
// which loads this file before patching the method.
var nativeReplace = String.prototype.replace;

var patchedExec = nativeExec;

var LAST_INDEX = 'lastIndex';

var UPDATES_LAST_INDEX_WRONG = (function () {
  var re1 = /a/,
      re2 = /b*/g;
  nativeExec.call(re1, 'a');
  nativeExec.call(re2, 'a');
  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;
})();

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;

if (PATCH) {
  patchedExec = function exec(str) {
    var re = this;
    var lastIndex, reCopy, match, i;

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + re.source + '$(?!\\s)', regexpFlags.call(re));
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];

    match = nativeExec.call(re, str);

    if (UPDATES_LAST_INDEX_WRONG && match) {
      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
      // eslint-disable-next-line no-loop-func
      nativeReplace.call(match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    return match;
  };
}

module.exports = patchedExec;


/***/ }),

/***/ "lBnu":
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__("/Vl9")(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "lQyR":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at = __webpack_require__("uRBY")(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__("Jww/")(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "lVii":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var isArrayLike = function isArrayLike(value) {
  /**
   * isArrayLike([1, 2, 3]) => true
   * isArrayLike(document.body.children) => true
   * isArrayLike('abc') => true
   * isArrayLike(Function) => false
   */
  return value !== null && typeof value !== 'function' && isFinite(value.length);
};

exports["default"] = isArrayLike;

/***/ }),

/***/ "lphy":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;__webpack_require__("P/oo");

__webpack_require__("Z8gF");

__webpack_require__("asZ9");

/*! https://mths.be/punycode v1.4.1 by @mathias */
;

(function (root) {
  /** Detect free variables */
  var freeExports =  true && exports && !exports.nodeType && exports;
  var freeModule =  true && module && !module.nodeType && module;
  var freeGlobal = typeof global == 'object' && global;

  if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal) {
    root = freeGlobal;
  }
  /**
   * The `punycode` object.
   * @name punycode
   * @type Object
   */


  var punycode,

  /** Highest positive signed 32-bit float value */
  maxInt = 2147483647,
      // aka. 0x7FFFFFFF or 2^31-1

  /** Bootstring parameters */
  base = 36,
      tMin = 1,
      tMax = 26,
      skew = 38,
      damp = 700,
      initialBias = 72,
      initialN = 128,
      // 0x80
  delimiter = '-',
      // '\x2D'

  /** Regular expressions */
  regexPunycode = /^xn--/,
      regexNonASCII = /[^\x20-\x7E]/,
      // unprintable ASCII chars + non-ASCII chars
  regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g,
      // RFC 3490 separators

  /** Error messages */
  errors = {
    'overflow': 'Overflow: input needs wider integers to process',
    'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
    'invalid-input': 'Invalid input'
  },

  /** Convenience shortcuts */
  baseMinusTMin = base - tMin,
      floor = Math.floor,
      stringFromCharCode = String.fromCharCode,

  /** Temporary variable */
  key;
  /*--------------------------------------------------------------------------*/

  /**
   * A generic error utility function.
   * @private
   * @param {String} type The error type.
   * @returns {Error} Throws a `RangeError` with the applicable error message.
   */

  function error(type) {
    throw new RangeError(errors[type]);
  }
  /**
   * A generic `Array#map` utility function.
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} callback The function that gets called for every array
   * item.
   * @returns {Array} A new array of values returned by the callback function.
   */


  function map(array, fn) {
    var length = array.length;
    var result = [];

    while (length--) {
      result[length] = fn(array[length]);
    }

    return result;
  }
  /**
   * A simple `Array#map`-like wrapper to work with domain name strings or email
   * addresses.
   * @private
   * @param {String} domain The domain name or email address.
   * @param {Function} callback The function that gets called for every
   * character.
   * @returns {Array} A new string of characters returned by the callback
   * function.
   */


  function mapDomain(string, fn) {
    var parts = string.split('@');
    var result = '';

    if (parts.length > 1) {
      // In email addresses, only the domain name should be punycoded. Leave
      // the local part (i.e. everything up to `@`) intact.
      result = parts[0] + '@';
      string = parts[1];
    } // Avoid `split(regex)` for IE8 compatibility. See #17.


    string = string.replace(regexSeparators, '\x2E');
    var labels = string.split('.');
    var encoded = map(labels, fn).join('.');
    return result + encoded;
  }
  /**
   * Creates an array containing the numeric code points of each Unicode
   * character in the string. While JavaScript uses UCS-2 internally,
   * this function will convert a pair of surrogate halves (each of which
   * UCS-2 exposes as separate characters) into a single code point,
   * matching UTF-16.
   * @see `punycode.ucs2.encode`
   * @see <https://mathiasbynens.be/notes/javascript-encoding>
   * @memberOf punycode.ucs2
   * @name decode
   * @param {String} string The Unicode input string (UCS-2).
   * @returns {Array} The new array of code points.
   */


  function ucs2decode(string) {
    var output = [],
        counter = 0,
        length = string.length,
        value,
        extra;

    while (counter < length) {
      value = string.charCodeAt(counter++);

      if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
        // high surrogate, and there is a next character
        extra = string.charCodeAt(counter++);

        if ((extra & 0xFC00) == 0xDC00) {
          // low surrogate
          output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
        } else {
          // unmatched surrogate; only append this code unit, in case the next
          // code unit is the high surrogate of a surrogate pair
          output.push(value);
          counter--;
        }
      } else {
        output.push(value);
      }
    }

    return output;
  }
  /**
   * Creates a string based on an array of numeric code points.
   * @see `punycode.ucs2.decode`
   * @memberOf punycode.ucs2
   * @name encode
   * @param {Array} codePoints The array of numeric code points.
   * @returns {String} The new Unicode string (UCS-2).
   */


  function ucs2encode(array) {
    return map(array, function (value) {
      var output = '';

      if (value > 0xFFFF) {
        value -= 0x10000;
        output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
        value = 0xDC00 | value & 0x3FF;
      }

      output += stringFromCharCode(value);
      return output;
    }).join('');
  }
  /**
   * Converts a basic code point into a digit/integer.
   * @see `digitToBasic()`
   * @private
   * @param {Number} codePoint The basic numeric code point value.
   * @returns {Number} The numeric value of a basic code point (for use in
   * representing integers) in the range `0` to `base - 1`, or `base` if
   * the code point does not represent a value.
   */


  function basicToDigit(codePoint) {
    if (codePoint - 48 < 10) {
      return codePoint - 22;
    }

    if (codePoint - 65 < 26) {
      return codePoint - 65;
    }

    if (codePoint - 97 < 26) {
      return codePoint - 97;
    }

    return base;
  }
  /**
   * Converts a digit/integer into a basic code point.
   * @see `basicToDigit()`
   * @private
   * @param {Number} digit The numeric value of a basic code point.
   * @returns {Number} The basic code point whose value (when used for
   * representing integers) is `digit`, which needs to be in the range
   * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
   * used; else, the lowercase form is used. The behavior is undefined
   * if `flag` is non-zero and `digit` has no uppercase form.
   */


  function digitToBasic(digit, flag) {
    //  0..25 map to ASCII a..z or A..Z
    // 26..35 map to ASCII 0..9
    return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
  }
  /**
   * Bias adaptation function as per section 3.4 of RFC 3492.
   * https://tools.ietf.org/html/rfc3492#section-3.4
   * @private
   */


  function adapt(delta, numPoints, firstTime) {
    var k = 0;
    delta = firstTime ? floor(delta / damp) : delta >> 1;
    delta += floor(delta / numPoints);

    for (;
    /* no initialization */
    delta > baseMinusTMin * tMax >> 1; k += base) {
      delta = floor(delta / baseMinusTMin);
    }

    return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
  }
  /**
   * Converts a Punycode string of ASCII-only symbols to a string of Unicode
   * symbols.
   * @memberOf punycode
   * @param {String} input The Punycode string of ASCII-only symbols.
   * @returns {String} The resulting string of Unicode symbols.
   */


  function decode(input) {
    // Don't use UCS-2
    var output = [],
        inputLength = input.length,
        out,
        i = 0,
        n = initialN,
        bias = initialBias,
        basic,
        j,
        index,
        oldi,
        w,
        k,
        digit,
        t,

    /** Cached calculation results */
    baseMinusT; // Handle the basic code points: let `basic` be the number of input code
    // points before the last delimiter, or `0` if there is none, then copy
    // the first basic code points to the output.

    basic = input.lastIndexOf(delimiter);

    if (basic < 0) {
      basic = 0;
    }

    for (j = 0; j < basic; ++j) {
      // if it's not a basic code point
      if (input.charCodeAt(j) >= 0x80) {
        error('not-basic');
      }

      output.push(input.charCodeAt(j));
    } // Main decoding loop: start just after the last delimiter if any basic code
    // points were copied; start at the beginning otherwise.


    for (index = basic > 0 ? basic + 1 : 0; index < inputLength;)
    /* no final expression */
    {
      // `index` is the index of the next character to be consumed.
      // Decode a generalized variable-length integer into `delta`,
      // which gets added to `i`. The overflow checking is easier
      // if we increase `i` as we go, then subtract off its starting
      // value at the end to obtain `delta`.
      for (oldi = i, w = 1, k = base;;
      /* no condition */
      k += base) {
        if (index >= inputLength) {
          error('invalid-input');
        }

        digit = basicToDigit(input.charCodeAt(index++));

        if (digit >= base || digit > floor((maxInt - i) / w)) {
          error('overflow');
        }

        i += digit * w;
        t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;

        if (digit < t) {
          break;
        }

        baseMinusT = base - t;

        if (w > floor(maxInt / baseMinusT)) {
          error('overflow');
        }

        w *= baseMinusT;
      }

      out = output.length + 1;
      bias = adapt(i - oldi, out, oldi == 0); // `i` was supposed to wrap around from `out` to `0`,
      // incrementing `n` each time, so we'll fix that now:

      if (floor(i / out) > maxInt - n) {
        error('overflow');
      }

      n += floor(i / out);
      i %= out; // Insert `n` at position `i` of the output

      output.splice(i++, 0, n);
    }

    return ucs2encode(output);
  }
  /**
   * Converts a string of Unicode symbols (e.g. a domain name label) to a
   * Punycode string of ASCII-only symbols.
   * @memberOf punycode
   * @param {String} input The string of Unicode symbols.
   * @returns {String} The resulting Punycode string of ASCII-only symbols.
   */


  function encode(input) {
    var n,
        delta,
        handledCPCount,
        basicLength,
        bias,
        j,
        m,
        q,
        k,
        t,
        currentValue,
        output = [],

    /** `inputLength` will hold the number of code points in `input`. */
    inputLength,

    /** Cached calculation results */
    handledCPCountPlusOne,
        baseMinusT,
        qMinusT; // Convert the input in UCS-2 to Unicode

    input = ucs2decode(input); // Cache the length

    inputLength = input.length; // Initialize the state

    n = initialN;
    delta = 0;
    bias = initialBias; // Handle the basic code points

    for (j = 0; j < inputLength; ++j) {
      currentValue = input[j];

      if (currentValue < 0x80) {
        output.push(stringFromCharCode(currentValue));
      }
    }

    handledCPCount = basicLength = output.length; // `handledCPCount` is the number of code points that have been handled;
    // `basicLength` is the number of basic code points.
    // Finish the basic string - if it is not empty - with a delimiter

    if (basicLength) {
      output.push(delimiter);
    } // Main encoding loop:


    while (handledCPCount < inputLength) {
      // All non-basic code points < n have been handled already. Find the next
      // larger one:
      for (m = maxInt, j = 0; j < inputLength; ++j) {
        currentValue = input[j];

        if (currentValue >= n && currentValue < m) {
          m = currentValue;
        }
      } // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
      // but guard against overflow


      handledCPCountPlusOne = handledCPCount + 1;

      if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
        error('overflow');
      }

      delta += (m - n) * handledCPCountPlusOne;
      n = m;

      for (j = 0; j < inputLength; ++j) {
        currentValue = input[j];

        if (currentValue < n && ++delta > maxInt) {
          error('overflow');
        }

        if (currentValue == n) {
          // Represent delta as a generalized variable-length integer
          for (q = delta, k = base;;
          /* no condition */
          k += base) {
            t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;

            if (q < t) {
              break;
            }

            qMinusT = q - t;
            baseMinusT = base - t;
            output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));
            q = floor(qMinusT / baseMinusT);
          }

          output.push(stringFromCharCode(digitToBasic(q, 0)));
          bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
          delta = 0;
          ++handledCPCount;
        }
      }

      ++delta;
      ++n;
    }

    return output.join('');
  }
  /**
   * Converts a Punycode string representing a domain name or an email address
   * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
   * it doesn't matter if you call it on a string that has already been
   * converted to Unicode.
   * @memberOf punycode
   * @param {String} input The Punycoded domain name or email address to
   * convert to Unicode.
   * @returns {String} The Unicode representation of the given Punycode
   * string.
   */


  function toUnicode(input) {
    return mapDomain(input, function (string) {
      return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;
    });
  }
  /**
   * Converts a Unicode string representing a domain name or an email address to
   * Punycode. Only the non-ASCII parts of the domain name will be converted,
   * i.e. it doesn't matter if you call it with a domain that's already in
   * ASCII.
   * @memberOf punycode
   * @param {String} input The domain name or email address to convert, as a
   * Unicode string.
   * @returns {String} The Punycode representation of the given domain name or
   * email address.
   */


  function toASCII(input) {
    return mapDomain(input, function (string) {
      return regexNonASCII.test(string) ? 'xn--' + encode(string) : string;
    });
  }
  /*--------------------------------------------------------------------------*/

  /** Define the public API */


  punycode = {
    /**
     * A string representing the current Punycode.js version number.
     * @memberOf punycode
     * @type String
     */
    'version': '1.4.1',

    /**
     * An object of methods to convert from JavaScript's internal character
     * representation (UCS-2) to Unicode code points, and back.
     * @see <https://mathiasbynens.be/notes/javascript-encoding>
     * @memberOf punycode
     * @type Object
     */
    'ucs2': {
      'decode': ucs2decode,
      'encode': ucs2encode
    },
    'decode': decode,
    'encode': encode,
    'toASCII': toASCII,
    'toUnicode': toUnicode
  };
  /** Expose `punycode` */
  // Some AMD build optimizers, like r.js, check for specific condition patterns
  // like the following:

  if (true) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return punycode;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("RoC8")(module), __webpack_require__("pCvA")))

/***/ }),

/***/ "ltS6":
/***/ (function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__("LuBU");
var gOPS = __webpack_require__("0oPD");
var pIE = __webpack_require__("IdFN");
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};


/***/ }),

/***/ "lu3D":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var util_1 = __webpack_require__("H4Zb");

var util_2 = __webpack_require__("aOij");

function default_1(shape) {
  var attrs = shape.attr();
  var points = attrs.points;
  var xArr = [];
  var yArr = [];

  for (var i = 0; i < points.length; i++) {
    var point = points[i];
    xArr.push(point[0]);
    yArr.push(point[1]);
  }

  var _a = util_1.getBBoxByArray(xArr, yArr),
      x = _a.x,
      y = _a.y,
      width = _a.width,
      height = _a.height;

  var bbox = {
    minX: x,
    minY: y,
    maxX: x + width,
    maxY: y + height
  };
  bbox = util_2.mergeArrowBBox(shape, bbox);
  return {
    x: bbox.minX,
    y: bbox.minY,
    width: bbox.maxX - bbox.minX,
    height: bbox.maxY - bbox.minY
  };
}

exports["default"] = default_1;

/***/ }),

/***/ "lw3w":
/***/ (function(module, exports, __webpack_require__) {

var preferDefault=function preferDefault(m){return m&&m.default||m;};if(false){}else if(true){module.exports=preferDefault(__webpack_require__("rzlk"));}else{}

/***/ }),

/***/ "m+Nv":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CROSSHAIR_Y = exports.CROSSHAIR_X = exports.NAME_CLASS = exports.VALUE_CLASS = exports.MARKER_CLASS = exports.LIST_ITEM_CLASS = exports.LIST_CLASS = exports.TITLE_CLASS = exports.CONTAINER_CLASS = void 0;
exports.CONTAINER_CLASS = 'g2-tooltip';
exports.TITLE_CLASS = 'g2-tooltip-title';
exports.LIST_CLASS = 'g2-tooltip-list';
exports.LIST_ITEM_CLASS = 'g2-tooltip-list-item';
exports.MARKER_CLASS = 'g2-tooltip-marker';
exports.VALUE_CLASS = 'g2-tooltip-value';
exports.NAME_CLASS = 'g2-tooltip-name';
exports.CROSSHAIR_X = 'g2-tooltip-crosshair-x';
exports.CROSSHAIR_Y = 'g2-tooltip-crosshair-y';

/***/ }),

/***/ "m/Uw":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("fGh/");
var document = __webpack_require__("41F1").document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),

/***/ "m1Dn":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var strong = __webpack_require__("XQta");
var validate = __webpack_require__("SsG5");
var SET = 'Set';

// 23.2 Set Objects
module.exports = __webpack_require__("AkS8")(SET, function (get) {
  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.2.3.1 Set.prototype.add(value)
  add: function add(value) {
    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);
  }
}, strong);


/***/ }),

/***/ "m8zh":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 21.1.3.25 String.prototype.trim()
__webpack_require__("hGr/")('trim', function ($trim) {
  return function trim() {
    return $trim(this, 3);
  };
});


/***/ }),

/***/ "mHqD":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "mK0O":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _defineProperty; });
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

/***/ }),

/***/ "mPTt":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// UNUSED EXPORTS: generateTrigger

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.index-of.js
var es6_array_index_of = __webpack_require__("V7cS");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.assign.js
var es6_object_assign = __webpack_require__("5hJT");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.date.now.js
var es6_date_now = __webpack_require__("7t+O");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.to-string.js
var es6_regexp_to_string = __webpack_require__("4aJ6");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.date.to-string.js
var es6_date_to_string = __webpack_require__("M/4x");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.reflect.construct.js
var es6_reflect_construct = __webpack_require__("LXYL");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.define-property.js
var es6_object_define_property = __webpack_require__("d3/y");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.define-properties.js
var es6_object_define_properties = __webpack_require__("6/FK");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es7.object.get-own-property-descriptors.js
var es7_object_get_own_property_descriptors = __webpack_require__("2Tod");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.for-each.js
var es6_array_for_each = __webpack_require__("7lGJ");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.filter.js
var es6_array_filter = __webpack_require__("9p7t");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.symbol.js
var es6_symbol = __webpack_require__("ABKx");

// EXTERNAL MODULE: ../node_modules/core-js/modules/web.dom.iterable.js
var web_dom_iterable = __webpack_require__("W1QL");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.iterator.js
var es6_array_iterator = __webpack_require__("K/PF");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.to-string.js
var es6_object_to_string = __webpack_require__("t91x");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.keys.js
var es6_object_keys = __webpack_require__("75LO");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__("mK0O");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/classCallCheck.js
var classCallCheck = __webpack_require__("hisu");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/createClass.js
var createClass = __webpack_require__("yBJb");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
var assertThisInitialized = __webpack_require__("0942");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/inherits.js + 1 modules
var inherits = __webpack_require__("CHlC");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js
var possibleConstructorReturn = __webpack_require__("kMo5");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js
var getPrototypeOf = __webpack_require__("P+uj");

// EXTERNAL MODULE: ../node_modules/react/index.js
var react = __webpack_require__("mXGw");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../node_modules/react-dom/index.js
var react_dom = __webpack_require__("xARA");
var react_dom_default = /*#__PURE__*/__webpack_require__.n(react_dom);

// EXTERNAL MODULE: ../node_modules/rc-util/es/Dom/contains.js
var contains = __webpack_require__("p82W");

// EXTERNAL MODULE: ../node_modules/rc-util/es/Dom/findDOMNode.js
var findDOMNode = __webpack_require__("vXvS");

// EXTERNAL MODULE: ../node_modules/rc-util/es/ref.js
var es_ref = __webpack_require__("hulx");

// EXTERNAL MODULE: ../node_modules/rc-util/es/Dom/addEventListener.js
var addEventListener = __webpack_require__("4Alm");

// EXTERNAL MODULE: ../node_modules/rc-util/es/Portal.js
var Portal = __webpack_require__("LKC9");

// EXTERNAL MODULE: ../node_modules/classnames/index.js
var classnames = __webpack_require__("8Jek");
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);

// CONCATENATED MODULE: ../node_modules/rc-trigger/es/utils/alignUtil.js












function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        Object(defineProperty["a" /* default */])(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function isPointsEq(a1, a2, isAlignPoint) {
  if (isAlignPoint) {
    return a1[0] === a2[0];
  }

  return a1[0] === a2[0] && a1[1] === a2[1];
}

function getAlignFromPlacement(builtinPlacements, placementStr, align) {
  var baseAlign = builtinPlacements[placementStr] || {};
  return _objectSpread(_objectSpread({}, baseAlign), align);
}
function getAlignPopupClassName(builtinPlacements, prefixCls, align, isAlignPoint) {
  var points = align.points;
  var placements = Object.keys(builtinPlacements);

  for (var i = 0; i < placements.length; i += 1) {
    var placement = placements[i];

    if (isPointsEq(builtinPlacements[placement].points, points, isAlignPoint)) {
      return "".concat(prefixCls, "-placement-").concat(placement);
    }
  }

  return '';
}
// EXTERNAL MODULE: ../node_modules/core-js/modules/es7.array.includes.js
var es7_array_includes = __webpack_require__("oMRA");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.string.includes.js
var es6_string_includes = __webpack_require__("6d4m");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js + 1 modules
var objectWithoutProperties = __webpack_require__("dV/x");

// EXTERNAL MODULE: ../node_modules/raf/index.js
var raf = __webpack_require__("rQBY");
var raf_default = /*#__PURE__*/__webpack_require__.n(raf);

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 1 modules
var slicedToArray = __webpack_require__("aNYv");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/typeof.js
var esm_typeof = __webpack_require__("J1LG");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.number.constructor.js
var es6_number_constructor = __webpack_require__("e2Kn");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.constructor.js
var es6_regexp_constructor = __webpack_require__("J8hF");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.map.js
var es6_array_map = __webpack_require__("yIlq");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.match.js
var es6_regexp_match = __webpack_require__("9ovy");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.replace.js
var es6_regexp_replace = __webpack_require__("Z8gF");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.split.js
var es6_regexp_split = __webpack_require__("asZ9");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es7.symbol.async-iterator.js
var es7_symbol_async_iterator = __webpack_require__("+jjx");

// CONCATENATED MODULE: ../node_modules/dom-align/dist-web/index.js



















function _typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function dist_web_ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      dist_web_ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      dist_web_ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

var vendorPrefix;
var jsCssMap = {
  Webkit: '-webkit-',
  Moz: '-moz-',
  // IE did it wrong again ...
  ms: '-ms-',
  O: '-o-'
};

function getVendorPrefix() {
  if (vendorPrefix !== undefined) {
    return vendorPrefix;
  }

  vendorPrefix = '';
  var style = document.createElement('p').style;
  var testProp = 'Transform';

  for (var key in jsCssMap) {
    if (key + testProp in style) {
      vendorPrefix = key;
    }
  }

  return vendorPrefix;
}

function getTransitionName() {
  return getVendorPrefix() ? "".concat(getVendorPrefix(), "TransitionProperty") : 'transitionProperty';
}

function getTransformName() {
  return getVendorPrefix() ? "".concat(getVendorPrefix(), "Transform") : 'transform';
}

function setTransitionProperty(node, value) {
  var name = getTransitionName();

  if (name) {
    node.style[name] = value;

    if (name !== 'transitionProperty') {
      node.style.transitionProperty = value;
    }
  }
}

function setTransform(node, value) {
  var name = getTransformName();

  if (name) {
    node.style[name] = value;

    if (name !== 'transform') {
      node.style.transform = value;
    }
  }
}

function getTransitionProperty(node) {
  return node.style.transitionProperty || node.style[getTransitionName()];
}

function getTransformXY(node) {
  var style = window.getComputedStyle(node, null);
  var transform = style.getPropertyValue('transform') || style.getPropertyValue(getTransformName());

  if (transform && transform !== 'none') {
    var matrix = transform.replace(/[^0-9\-.,]/g, '').split(',');
    return {
      x: parseFloat(matrix[12] || matrix[4], 0),
      y: parseFloat(matrix[13] || matrix[5], 0)
    };
  }

  return {
    x: 0,
    y: 0
  };
}

var matrix2d = /matrix\((.*)\)/;
var matrix3d = /matrix3d\((.*)\)/;

function setTransformXY(node, xy) {
  var style = window.getComputedStyle(node, null);
  var transform = style.getPropertyValue('transform') || style.getPropertyValue(getTransformName());

  if (transform && transform !== 'none') {
    var arr;
    var match2d = transform.match(matrix2d);

    if (match2d) {
      match2d = match2d[1];
      arr = match2d.split(',').map(function (item) {
        return parseFloat(item, 10);
      });
      arr[4] = xy.x;
      arr[5] = xy.y;
      setTransform(node, "matrix(".concat(arr.join(','), ")"));
    } else {
      var match3d = transform.match(matrix3d)[1];
      arr = match3d.split(',').map(function (item) {
        return parseFloat(item, 10);
      });
      arr[12] = xy.x;
      arr[13] = xy.y;
      setTransform(node, "matrix3d(".concat(arr.join(','), ")"));
    }
  } else {
    setTransform(node, "translateX(".concat(xy.x, "px) translateY(").concat(xy.y, "px) translateZ(0)"));
  }
}

var RE_NUM = /[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source;
var getComputedStyleX; // https://stackoverflow.com/a/3485654/3040605

function forceRelayout(elem) {
  var originalStyle = elem.style.display;
  elem.style.display = 'none';
  elem.offsetHeight; // eslint-disable-line

  elem.style.display = originalStyle;
}

function css(el, name, v) {
  var value = v;

  if (_typeof(name) === 'object') {
    for (var i in name) {
      if (name.hasOwnProperty(i)) {
        css(el, i, name[i]);
      }
    }

    return undefined;
  }

  if (typeof value !== 'undefined') {
    if (typeof value === 'number') {
      value = "".concat(value, "px");
    }

    el.style[name] = value;
    return undefined;
  }

  return getComputedStyleX(el, name);
}

function getClientPosition(elem) {
  var box;
  var x;
  var y;
  var doc = elem.ownerDocument;
  var body = doc.body;
  var docElem = doc && doc.documentElement; // 根据 GBS 最新数据，A-Grade Browsers 都已支持 getBoundingClientRect 方法，不用再考虑传统的实现方式

  box = elem.getBoundingClientRect(); // 注：jQuery 还考虑减去 docElem.clientLeft/clientTop
  // 但测试发现，这样反而会导致当 html 和 body 有边距/边框样式时，获取的值不正确
  // 此外，ie6 会忽略 html 的 margin 值，幸运地是没有谁会去设置 html 的 margin

  x = box.left;
  y = box.top; // In IE, most of the time, 2 extra pixels are added to the top and left
  // due to the implicit 2-pixel inset border.  In IE6/7 quirks mode and
  // IE6 standards mode, this border can be overridden by setting the
  // document element's border to zero -- thus, we cannot rely on the
  // offset always being 2 pixels.
  // In quirks mode, the offset can be determined by querying the body's
  // clientLeft/clientTop, but in standards mode, it is found by querying
  // the document element's clientLeft/clientTop.  Since we already called
  // getClientBoundingRect we have already forced a reflow, so it is not
  // too expensive just to query them all.
  // ie 下应该减去窗口的边框吧，毕竟默认 absolute 都是相对窗口定位的
  // 窗口边框标准是设 documentElement ,quirks 时设置 body
  // 最好禁止在 body 和 html 上边框 ，但 ie < 9 html 默认有 2px ，减去
  // 但是非 ie 不可能设置窗口边框，body html 也不是窗口 ,ie 可以通过 html,body 设置
  // 标准 ie 下 docElem.clientTop 就是 border-top
  // ie7 html 即窗口边框改变不了。永远为 2
  // 但标准 firefox/chrome/ie9 下 docElem.clientTop 是窗口边框，即使设了 border-top 也为 0

  x -= docElem.clientLeft || body.clientLeft || 0;
  y -= docElem.clientTop || body.clientTop || 0;
  return {
    left: x,
    top: y
  };
}

function getScroll(w, top) {
  var ret = w["page".concat(top ? 'Y' : 'X', "Offset")];
  var method = "scroll".concat(top ? 'Top' : 'Left');

  if (typeof ret !== 'number') {
    var d = w.document; // ie6,7,8 standard mode

    ret = d.documentElement[method];

    if (typeof ret !== 'number') {
      // quirks mode
      ret = d.body[method];
    }
  }

  return ret;
}

function getScrollLeft(w) {
  return getScroll(w);
}

function getScrollTop(w) {
  return getScroll(w, true);
}

function getOffset(el) {
  var pos = getClientPosition(el);
  var doc = el.ownerDocument;
  var w = doc.defaultView || doc.parentWindow;
  pos.left += getScrollLeft(w);
  pos.top += getScrollTop(w);
  return pos;
}
/**
 * A crude way of determining if an object is a window
 * @member util
 */


function isWindow(obj) {
  // must use == for ie8

  /* eslint eqeqeq:0 */
  return obj !== null && obj !== undefined && obj == obj.window;
}

function getDocument(node) {
  if (isWindow(node)) {
    return node.document;
  }

  if (node.nodeType === 9) {
    return node;
  }

  return node.ownerDocument;
}

function _getComputedStyle(elem, name, cs) {
  var computedStyle = cs;
  var val = '';
  var d = getDocument(elem);
  computedStyle = computedStyle || d.defaultView.getComputedStyle(elem, null); // https://github.com/kissyteam/kissy/issues/61

  if (computedStyle) {
    val = computedStyle.getPropertyValue(name) || computedStyle[name];
  }

  return val;
}

var _RE_NUM_NO_PX = new RegExp("^(".concat(RE_NUM, ")(?!px)[a-z%]+$"), 'i');

var RE_POS = /^(top|right|bottom|left)$/;
var CURRENT_STYLE = 'currentStyle';
var RUNTIME_STYLE = 'runtimeStyle';
var LEFT = 'left';
var PX = 'px';

function _getComputedStyleIE(elem, name) {
  // currentStyle maybe null
  // http://msdn.microsoft.com/en-us/library/ms535231.aspx
  var ret = elem[CURRENT_STYLE] && elem[CURRENT_STYLE][name]; // 当 width/height 设置为百分比时，通过 pixelLeft 方式转换的 width/height 值
  // 一开始就处理了! CUSTOM_STYLE.height,CUSTOM_STYLE.width ,cssHook 解决@2011-08-19
  // 在 ie 下不对，需要直接用 offset 方式
  // borderWidth 等值也有问题，但考虑到 borderWidth 设为百分比的概率很小，这里就不考虑了
  // From the awesome hack by Dean Edwards
  // http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291
  // If we're not dealing with a regular pixel number
  // but a number that has a weird ending, we need to convert it to pixels
  // exclude left right for relativity

  if (_RE_NUM_NO_PX.test(ret) && !RE_POS.test(name)) {
    // Remember the original values
    var style = elem.style;
    var left = style[LEFT];
    var rsLeft = elem[RUNTIME_STYLE][LEFT]; // prevent flashing of content

    elem[RUNTIME_STYLE][LEFT] = elem[CURRENT_STYLE][LEFT]; // Put in the new values to get a computed value out

    style[LEFT] = name === 'fontSize' ? '1em' : ret || 0;
    ret = style.pixelLeft + PX; // Revert the changed values

    style[LEFT] = left;
    elem[RUNTIME_STYLE][LEFT] = rsLeft;
  }

  return ret === '' ? 'auto' : ret;
}

if (typeof window !== 'undefined') {
  getComputedStyleX = window.getComputedStyle ? _getComputedStyle : _getComputedStyleIE;
}

function getOffsetDirection(dir, option) {
  if (dir === 'left') {
    return option.useCssRight ? 'right' : dir;
  }

  return option.useCssBottom ? 'bottom' : dir;
}

function oppositeOffsetDirection(dir) {
  if (dir === 'left') {
    return 'right';
  } else if (dir === 'right') {
    return 'left';
  } else if (dir === 'top') {
    return 'bottom';
  } else if (dir === 'bottom') {
    return 'top';
  }
} // 设置 elem 相对 elem.ownerDocument 的坐标


function setLeftTop(elem, offset, option) {
  // set position first, in-case top/left are set even on static elem
  if (css(elem, 'position') === 'static') {
    elem.style.position = 'relative';
  }

  var presetH = -999;
  var presetV = -999;
  var horizontalProperty = getOffsetDirection('left', option);
  var verticalProperty = getOffsetDirection('top', option);
  var oppositeHorizontalProperty = oppositeOffsetDirection(horizontalProperty);
  var oppositeVerticalProperty = oppositeOffsetDirection(verticalProperty);

  if (horizontalProperty !== 'left') {
    presetH = 999;
  }

  if (verticalProperty !== 'top') {
    presetV = 999;
  }

  var originalTransition = '';
  var originalOffset = getOffset(elem);

  if ('left' in offset || 'top' in offset) {
    originalTransition = getTransitionProperty(elem) || '';
    setTransitionProperty(elem, 'none');
  }

  if ('left' in offset) {
    elem.style[oppositeHorizontalProperty] = '';
    elem.style[horizontalProperty] = "".concat(presetH, "px");
  }

  if ('top' in offset) {
    elem.style[oppositeVerticalProperty] = '';
    elem.style[verticalProperty] = "".concat(presetV, "px");
  } // force relayout


  forceRelayout(elem);
  var old = getOffset(elem);
  var originalStyle = {};

  for (var key in offset) {
    if (offset.hasOwnProperty(key)) {
      var dir = getOffsetDirection(key, option);
      var preset = key === 'left' ? presetH : presetV;
      var off = originalOffset[key] - old[key];

      if (dir === key) {
        originalStyle[dir] = preset + off;
      } else {
        originalStyle[dir] = preset - off;
      }
    }
  }

  css(elem, originalStyle); // force relayout

  forceRelayout(elem);

  if ('left' in offset || 'top' in offset) {
    setTransitionProperty(elem, originalTransition);
  }

  var ret = {};

  for (var _key in offset) {
    if (offset.hasOwnProperty(_key)) {
      var _dir = getOffsetDirection(_key, option);

      var _off = offset[_key] - originalOffset[_key];

      if (_key === _dir) {
        ret[_dir] = originalStyle[_dir] + _off;
      } else {
        ret[_dir] = originalStyle[_dir] - _off;
      }
    }
  }

  css(elem, ret);
}

function setTransform$1(elem, offset) {
  var originalOffset = getOffset(elem);
  var originalXY = getTransformXY(elem);
  var resultXY = {
    x: originalXY.x,
    y: originalXY.y
  };

  if ('left' in offset) {
    resultXY.x = originalXY.x + offset.left - originalOffset.left;
  }

  if ('top' in offset) {
    resultXY.y = originalXY.y + offset.top - originalOffset.top;
  }

  setTransformXY(elem, resultXY);
}

function setOffset(elem, offset, option) {
  if (option.ignoreShake) {
    var oriOffset = getOffset(elem);
    var oLeft = oriOffset.left.toFixed(0);
    var oTop = oriOffset.top.toFixed(0);
    var tLeft = offset.left.toFixed(0);
    var tTop = offset.top.toFixed(0);

    if (oLeft === tLeft && oTop === tTop) {
      return;
    }
  }

  if (option.useCssRight || option.useCssBottom) {
    setLeftTop(elem, offset, option);
  } else if (option.useCssTransform && getTransformName() in document.body.style) {
    setTransform$1(elem, offset);
  } else {
    setLeftTop(elem, offset, option);
  }
}

function each(arr, fn) {
  for (var i = 0; i < arr.length; i++) {
    fn(arr[i]);
  }
}

function isBorderBoxFn(elem) {
  return getComputedStyleX(elem, 'boxSizing') === 'border-box';
}

var BOX_MODELS = ['margin', 'border', 'padding'];
var CONTENT_INDEX = -1;
var PADDING_INDEX = 2;
var BORDER_INDEX = 1;
var MARGIN_INDEX = 0;

function swap(elem, options, callback) {
  var old = {};
  var style = elem.style;
  var name; // Remember the old values, and insert the new ones

  for (name in options) {
    if (options.hasOwnProperty(name)) {
      old[name] = style[name];
      style[name] = options[name];
    }
  }

  callback.call(elem); // Revert the old values

  for (name in options) {
    if (options.hasOwnProperty(name)) {
      style[name] = old[name];
    }
  }
}

function getPBMWidth(elem, props, which) {
  var value = 0;
  var prop;
  var j;
  var i;

  for (j = 0; j < props.length; j++) {
    prop = props[j];

    if (prop) {
      for (i = 0; i < which.length; i++) {
        var cssProp = void 0;

        if (prop === 'border') {
          cssProp = "".concat(prop).concat(which[i], "Width");
        } else {
          cssProp = prop + which[i];
        }

        value += parseFloat(getComputedStyleX(elem, cssProp)) || 0;
      }
    }
  }

  return value;
}

var domUtils = {
  getParent: function getParent(element) {
    var parent = element;

    do {
      if (parent.nodeType === 11 && parent.host) {
        parent = parent.host;
      } else {
        parent = parent.parentNode;
      }
    } while (parent && parent.nodeType !== 1 && parent.nodeType !== 9);

    return parent;
  }
};
each(['Width', 'Height'], function (name) {
  domUtils["doc".concat(name)] = function (refWin) {
    var d = refWin.document;
    return Math.max( // firefox chrome documentElement.scrollHeight< body.scrollHeight
    // ie standard mode : documentElement.scrollHeight> body.scrollHeight
    d.documentElement["scroll".concat(name)], // quirks : documentElement.scrollHeight 最大等于可视窗口多一点？
    d.body["scroll".concat(name)], domUtils["viewport".concat(name)](d));
  };

  domUtils["viewport".concat(name)] = function (win) {
    // pc browser includes scrollbar in window.innerWidth
    var prop = "client".concat(name);
    var doc = win.document;
    var body = doc.body;
    var documentElement = doc.documentElement;
    var documentElementProp = documentElement[prop]; // 标准模式取 documentElement
    // backcompat 取 body

    return doc.compatMode === 'CSS1Compat' && documentElementProp || body && body[prop] || documentElementProp;
  };
});
/*
 得到元素的大小信息
 @param elem
 @param name
 @param {String} [extra]  'padding' : (css width) + padding
 'border' : (css width) + padding + border
 'margin' : (css width) + padding + border + margin
 */

function getWH(elem, name, ex) {
  var extra = ex;

  if (isWindow(elem)) {
    return name === 'width' ? domUtils.viewportWidth(elem) : domUtils.viewportHeight(elem);
  } else if (elem.nodeType === 9) {
    return name === 'width' ? domUtils.docWidth(elem) : domUtils.docHeight(elem);
  }

  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];
  var borderBoxValue = name === 'width' ? elem.getBoundingClientRect().width : elem.getBoundingClientRect().height;
  var computedStyle = getComputedStyleX(elem);
  var isBorderBox = isBorderBoxFn(elem);
  var cssBoxValue = 0;

  if (borderBoxValue === null || borderBoxValue === undefined || borderBoxValue <= 0) {
    borderBoxValue = undefined; // Fall back to computed then un computed css if necessary

    cssBoxValue = getComputedStyleX(elem, name);

    if (cssBoxValue === null || cssBoxValue === undefined || Number(cssBoxValue) < 0) {
      cssBoxValue = elem.style[name] || 0;
    } // Normalize '', auto, and prepare for extra


    cssBoxValue = parseFloat(cssBoxValue) || 0;
  }

  if (extra === undefined) {
    extra = isBorderBox ? BORDER_INDEX : CONTENT_INDEX;
  }

  var borderBoxValueOrIsBorderBox = borderBoxValue !== undefined || isBorderBox;
  var val = borderBoxValue || cssBoxValue;

  if (extra === CONTENT_INDEX) {
    if (borderBoxValueOrIsBorderBox) {
      return val - getPBMWidth(elem, ['border', 'padding'], which);
    }

    return cssBoxValue;
  } else if (borderBoxValueOrIsBorderBox) {
    if (extra === BORDER_INDEX) {
      return val;
    }

    return val + (extra === PADDING_INDEX ? -getPBMWidth(elem, ['border'], which) : getPBMWidth(elem, ['margin'], which));
  }

  return cssBoxValue + getPBMWidth(elem, BOX_MODELS.slice(extra), which);
}

var cssShow = {
  position: 'absolute',
  visibility: 'hidden',
  display: 'block'
}; // fix #119 : https://github.com/kissyteam/kissy/issues/119

function getWHIgnoreDisplay() {
  for (var _len = arguments.length, args = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {
    args[_key2] = arguments[_key2];
  }

  var val;
  var elem = args[0]; // in case elem is window
  // elem.offsetWidth === undefined

  if (elem.offsetWidth !== 0) {
    val = getWH.apply(undefined, args);
  } else {
    swap(elem, cssShow, function () {
      val = getWH.apply(undefined, args);
    });
  }

  return val;
}

each(['width', 'height'], function (name) {
  var first = name.charAt(0).toUpperCase() + name.slice(1);

  domUtils["outer".concat(first)] = function (el, includeMargin) {
    return el && getWHIgnoreDisplay(el, name, includeMargin ? MARGIN_INDEX : BORDER_INDEX);
  };

  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];

  domUtils[name] = function (elem, v) {
    var val = v;

    if (val !== undefined) {
      if (elem) {
        var computedStyle = getComputedStyleX(elem);
        var isBorderBox = isBorderBoxFn(elem);

        if (isBorderBox) {
          val += getPBMWidth(elem, ['padding', 'border'], which);
        }

        return css(elem, name, val);
      }

      return undefined;
    }

    return elem && getWHIgnoreDisplay(elem, name, CONTENT_INDEX);
  };
});

function mix(to, from) {
  for (var i in from) {
    if (from.hasOwnProperty(i)) {
      to[i] = from[i];
    }
  }

  return to;
}

var utils = {
  getWindow: function getWindow(node) {
    if (node && node.document && node.setTimeout) {
      return node;
    }

    var doc = node.ownerDocument || node;
    return doc.defaultView || doc.parentWindow;
  },
  getDocument: getDocument,
  offset: function offset(el, value, option) {
    if (typeof value !== 'undefined') {
      setOffset(el, value, option || {});
    } else {
      return getOffset(el);
    }
  },
  isWindow: isWindow,
  each: each,
  css: css,
  clone: function clone(obj) {
    var i;
    var ret = {};

    for (i in obj) {
      if (obj.hasOwnProperty(i)) {
        ret[i] = obj[i];
      }
    }

    var overflow = obj.overflow;

    if (overflow) {
      for (i in obj) {
        if (obj.hasOwnProperty(i)) {
          ret.overflow[i] = obj.overflow[i];
        }
      }
    }

    return ret;
  },
  mix: mix,
  getWindowScrollLeft: function getWindowScrollLeft(w) {
    return getScrollLeft(w);
  },
  getWindowScrollTop: function getWindowScrollTop(w) {
    return getScrollTop(w);
  },
  merge: function merge() {
    var ret = {};

    for (var i = 0; i < arguments.length; i++) {
      utils.mix(ret, i < 0 || arguments.length <= i ? undefined : arguments[i]);
    }

    return ret;
  },
  viewportWidth: 0,
  viewportHeight: 0
};
mix(utils, domUtils);
/**
 * 得到会导致元素显示不全的祖先元素
 */

var getParent = utils.getParent;

function getOffsetParent(element) {
  if (utils.isWindow(element) || element.nodeType === 9) {
    return null;
  } // ie 这个也不是完全可行

  /*
   <div style="width: 50px;height: 100px;overflow: hidden">
   <div style="width: 50px;height: 100px;position: relative;" id="d6">
   元素 6 高 100px 宽 50px<br/>
   </div>
   </div>
   */
  // element.offsetParent does the right thing in ie7 and below. Return parent with layout!
  //  In other browsers it only includes elements with position absolute, relative or
  // fixed, not elements with overflow set to auto or scroll.
  //        if (UA.ie && ieMode < 8) {
  //            return element.offsetParent;
  //        }
  // 统一的 offsetParent 方法


  var doc = utils.getDocument(element);
  var body = doc.body;
  var parent;
  var positionStyle = utils.css(element, 'position');
  var skipStatic = positionStyle === 'fixed' || positionStyle === 'absolute';

  if (!skipStatic) {
    return element.nodeName.toLowerCase() === 'html' ? null : getParent(element);
  }

  for (parent = getParent(element); parent && parent !== body && parent.nodeType !== 9; parent = getParent(parent)) {
    positionStyle = utils.css(parent, 'position');

    if (positionStyle !== 'static') {
      return parent;
    }
  }

  return null;
}

var getParent$1 = utils.getParent;

function isAncestorFixed(element) {
  if (utils.isWindow(element) || element.nodeType === 9) {
    return false;
  }

  var doc = utils.getDocument(element);
  var body = doc.body;
  var parent = null;

  for (parent = getParent$1(element); parent && parent !== body; parent = getParent$1(parent)) {
    var positionStyle = utils.css(parent, 'position');

    if (positionStyle === 'fixed') {
      return true;
    }
  }

  return false;
}
/**
 * 获得元素的显示部分的区域
 */


function getVisibleRectForElement(element, alwaysByViewport) {
  var visibleRect = {
    left: 0,
    right: Infinity,
    top: 0,
    bottom: Infinity
  };
  var el = getOffsetParent(element);
  var doc = utils.getDocument(element);
  var win = doc.defaultView || doc.parentWindow;
  var body = doc.body;
  var documentElement = doc.documentElement; // Determine the size of the visible rect by climbing the dom accounting for
  // all scrollable containers.

  while (el) {
    // clientWidth is zero for inline block elements in ie.
    if ((navigator.userAgent.indexOf('MSIE') === -1 || el.clientWidth !== 0) && // body may have overflow set on it, yet we still get the entire
    // viewport. In some browsers, el.offsetParent may be
    // document.documentElement, so check for that too.
    el !== body && el !== documentElement && utils.css(el, 'overflow') !== 'visible') {
      var pos = utils.offset(el); // add border

      pos.left += el.clientLeft;
      pos.top += el.clientTop;
      visibleRect.top = Math.max(visibleRect.top, pos.top);
      visibleRect.right = Math.min(visibleRect.right, // consider area without scrollBar
      pos.left + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.top + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.left);
    } else if (el === body || el === documentElement) {
      break;
    }

    el = getOffsetParent(el);
  } // Set element position to fixed
  // make sure absolute element itself don't affect it's visible area
  // https://github.com/ant-design/ant-design/issues/7601


  var originalPosition = null;

  if (!utils.isWindow(element) && element.nodeType !== 9) {
    originalPosition = element.style.position;
    var position = utils.css(element, 'position');

    if (position === 'absolute') {
      element.style.position = 'fixed';
    }
  }

  var scrollX = utils.getWindowScrollLeft(win);
  var scrollY = utils.getWindowScrollTop(win);
  var viewportWidth = utils.viewportWidth(win);
  var viewportHeight = utils.viewportHeight(win);
  var documentWidth = documentElement.scrollWidth;
  var documentHeight = documentElement.scrollHeight; // scrollXXX on html is sync with body which means overflow: hidden on body gets wrong scrollXXX.
  // We should cut this ourself.

  var bodyStyle = window.getComputedStyle(body);

  if (bodyStyle.overflowX === 'hidden') {
    documentWidth = win.innerWidth;
  }

  if (bodyStyle.overflowY === 'hidden') {
    documentHeight = win.innerHeight;
  } // Reset element position after calculate the visible area


  if (element.style) {
    element.style.position = originalPosition;
  }

  if (alwaysByViewport || isAncestorFixed(element)) {
    // Clip by viewport's size.
    visibleRect.left = Math.max(visibleRect.left, scrollX);
    visibleRect.top = Math.max(visibleRect.top, scrollY);
    visibleRect.right = Math.min(visibleRect.right, scrollX + viewportWidth);
    visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + viewportHeight);
  } else {
    // Clip by document's size.
    var maxVisibleWidth = Math.max(documentWidth, scrollX + viewportWidth);
    visibleRect.right = Math.min(visibleRect.right, maxVisibleWidth);
    var maxVisibleHeight = Math.max(documentHeight, scrollY + viewportHeight);
    visibleRect.bottom = Math.min(visibleRect.bottom, maxVisibleHeight);
  }

  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null;
}

function adjustForViewport(elFuturePos, elRegion, visibleRect, overflow) {
  var pos = utils.clone(elFuturePos);
  var size = {
    width: elRegion.width,
    height: elRegion.height
  };

  if (overflow.adjustX && pos.left < visibleRect.left) {
    pos.left = visibleRect.left;
  } // Left edge inside and right edge outside viewport, try to resize it.


  if (overflow.resizeWidth && pos.left >= visibleRect.left && pos.left + size.width > visibleRect.right) {
    size.width -= pos.left + size.width - visibleRect.right;
  } // Right edge outside viewport, try to move it.


  if (overflow.adjustX && pos.left + size.width > visibleRect.right) {
    // 保证左边界和可视区域左边界对齐
    pos.left = Math.max(visibleRect.right - size.width, visibleRect.left);
  } // Top edge outside viewport, try to move it.


  if (overflow.adjustY && pos.top < visibleRect.top) {
    pos.top = visibleRect.top;
  } // Top edge inside and bottom edge outside viewport, try to resize it.


  if (overflow.resizeHeight && pos.top >= visibleRect.top && pos.top + size.height > visibleRect.bottom) {
    size.height -= pos.top + size.height - visibleRect.bottom;
  } // Bottom edge outside viewport, try to move it.


  if (overflow.adjustY && pos.top + size.height > visibleRect.bottom) {
    // 保证上边界和可视区域上边界对齐
    pos.top = Math.max(visibleRect.bottom - size.height, visibleRect.top);
  }

  return utils.mix(pos, size);
}

function getRegion(node) {
  var offset;
  var w;
  var h;

  if (!utils.isWindow(node) && node.nodeType !== 9) {
    offset = utils.offset(node);
    w = utils.outerWidth(node);
    h = utils.outerHeight(node);
  } else {
    var win = utils.getWindow(node);
    offset = {
      left: utils.getWindowScrollLeft(win),
      top: utils.getWindowScrollTop(win)
    };
    w = utils.viewportWidth(win);
    h = utils.viewportHeight(win);
  }

  offset.width = w;
  offset.height = h;
  return offset;
}
/**
 * 获取 node 上的 align 对齐点 相对于页面的坐标
 */


function getAlignOffset(region, align) {
  var V = align.charAt(0);
  var H = align.charAt(1);
  var w = region.width;
  var h = region.height;
  var x = region.left;
  var y = region.top;

  if (V === 'c') {
    y += h / 2;
  } else if (V === 'b') {
    y += h;
  }

  if (H === 'c') {
    x += w / 2;
  } else if (H === 'r') {
    x += w;
  }

  return {
    left: x,
    top: y
  };
}

function getElFuturePos(elRegion, refNodeRegion, points, offset, targetOffset) {
  var p1 = getAlignOffset(refNodeRegion, points[1]);
  var p2 = getAlignOffset(elRegion, points[0]);
  var diff = [p2.left - p1.left, p2.top - p1.top];
  return {
    left: Math.round(elRegion.left - diff[0] + offset[0] - targetOffset[0]),
    top: Math.round(elRegion.top - diff[1] + offset[1] - targetOffset[1])
  };
}
/**
 * align dom node flexibly
 * @author yiminghe@gmail.com
 */


function isFailX(elFuturePos, elRegion, visibleRect) {
  return elFuturePos.left < visibleRect.left || elFuturePos.left + elRegion.width > visibleRect.right;
}

function isFailY(elFuturePos, elRegion, visibleRect) {
  return elFuturePos.top < visibleRect.top || elFuturePos.top + elRegion.height > visibleRect.bottom;
}

function isCompleteFailX(elFuturePos, elRegion, visibleRect) {
  return elFuturePos.left > visibleRect.right || elFuturePos.left + elRegion.width < visibleRect.left;
}

function isCompleteFailY(elFuturePos, elRegion, visibleRect) {
  return elFuturePos.top > visibleRect.bottom || elFuturePos.top + elRegion.height < visibleRect.top;
}

function flip(points, reg, map) {
  var ret = [];
  utils.each(points, function (p) {
    ret.push(p.replace(reg, function (m) {
      return map[m];
    }));
  });
  return ret;
}

function flipOffset(offset, index) {
  offset[index] = -offset[index];
  return offset;
}

function convertOffset(str, offsetLen) {
  var n;

  if (/%$/.test(str)) {
    n = parseInt(str.substring(0, str.length - 1), 10) / 100 * offsetLen;
  } else {
    n = parseInt(str, 10);
  }

  return n || 0;
}

function normalizeOffset(offset, el) {
  offset[0] = convertOffset(offset[0], el.width);
  offset[1] = convertOffset(offset[1], el.height);
}
/**
 * @param el
 * @param tgtRegion 参照节点所占的区域: { left, top, width, height }
 * @param align
 */


function doAlign(el, tgtRegion, align, isTgtRegionVisible) {
  var points = align.points;
  var offset = align.offset || [0, 0];
  var targetOffset = align.targetOffset || [0, 0];
  var overflow = align.overflow;
  var source = align.source || el;
  offset = [].concat(offset);
  targetOffset = [].concat(targetOffset);
  overflow = overflow || {};
  var newOverflowCfg = {};
  var fail = 0;
  var alwaysByViewport = !!(overflow && overflow.alwaysByViewport); // 当前节点可以被放置的显示区域

  var visibleRect = getVisibleRectForElement(source, alwaysByViewport); // 当前节点所占的区域, left/top/width/height

  var elRegion = getRegion(source); // 将 offset 转换成数值，支持百分比

  normalizeOffset(offset, elRegion);
  normalizeOffset(targetOffset, tgtRegion); // 当前节点将要被放置的位置

  var elFuturePos = getElFuturePos(elRegion, tgtRegion, points, offset, targetOffset); // 当前节点将要所处的区域

  var newElRegion = utils.merge(elRegion, elFuturePos); // 如果可视区域不能完全放置当前节点时允许调整

  if (visibleRect && (overflow.adjustX || overflow.adjustY) && isTgtRegionVisible) {
    if (overflow.adjustX) {
      // 如果横向不能放下
      if (isFailX(elFuturePos, elRegion, visibleRect)) {
        // 对齐位置反下
        var newPoints = flip(points, /[lr]/gi, {
          l: 'r',
          r: 'l'
        }); // 偏移量也反下

        var newOffset = flipOffset(offset, 0);
        var newTargetOffset = flipOffset(targetOffset, 0);
        var newElFuturePos = getElFuturePos(elRegion, tgtRegion, newPoints, newOffset, newTargetOffset);

        if (!isCompleteFailX(newElFuturePos, elRegion, visibleRect)) {
          fail = 1;
          points = newPoints;
          offset = newOffset;
          targetOffset = newTargetOffset;
        }
      }
    }

    if (overflow.adjustY) {
      // 如果纵向不能放下
      if (isFailY(elFuturePos, elRegion, visibleRect)) {
        // 对齐位置反下
        var _newPoints = flip(points, /[tb]/gi, {
          t: 'b',
          b: 't'
        }); // 偏移量也反下


        var _newOffset = flipOffset(offset, 1);

        var _newTargetOffset = flipOffset(targetOffset, 1);

        var _newElFuturePos = getElFuturePos(elRegion, tgtRegion, _newPoints, _newOffset, _newTargetOffset);

        if (!isCompleteFailY(_newElFuturePos, elRegion, visibleRect)) {
          fail = 1;
          points = _newPoints;
          offset = _newOffset;
          targetOffset = _newTargetOffset;
        }
      }
    } // 如果失败，重新计算当前节点将要被放置的位置


    if (fail) {
      elFuturePos = getElFuturePos(elRegion, tgtRegion, points, offset, targetOffset);
      utils.mix(newElRegion, elFuturePos);
    }

    var isStillFailX = isFailX(elFuturePos, elRegion, visibleRect);
    var isStillFailY = isFailY(elFuturePos, elRegion, visibleRect); // 检查反下后的位置是否可以放下了，如果仍然放不下：
    // 1. 复原修改过的定位参数

    if (isStillFailX || isStillFailY) {
      var _newPoints2 = points; // 重置对应部分的翻转逻辑

      if (isStillFailX) {
        _newPoints2 = flip(points, /[lr]/gi, {
          l: 'r',
          r: 'l'
        });
      }

      if (isStillFailY) {
        _newPoints2 = flip(points, /[tb]/gi, {
          t: 'b',
          b: 't'
        });
      }

      points = _newPoints2;
      offset = align.offset || [0, 0];
      targetOffset = align.targetOffset || [0, 0];
    } // 2. 只有指定了可以调整当前方向才调整


    newOverflowCfg.adjustX = overflow.adjustX && isStillFailX;
    newOverflowCfg.adjustY = overflow.adjustY && isStillFailY; // 确实要调整，甚至可能会调整高度宽度

    if (newOverflowCfg.adjustX || newOverflowCfg.adjustY) {
      newElRegion = adjustForViewport(elFuturePos, elRegion, visibleRect, newOverflowCfg);
    }
  } // need judge to in case set fixed with in css on height auto element


  if (newElRegion.width !== elRegion.width) {
    utils.css(source, 'width', utils.width(source) + newElRegion.width - elRegion.width);
  }

  if (newElRegion.height !== elRegion.height) {
    utils.css(source, 'height', utils.height(source) + newElRegion.height - elRegion.height);
  } // https://github.com/kissyteam/kissy/issues/190
  // 相对于屏幕位置没变，而 left/top 变了
  // 例如 <div 'relative'><el absolute></div>


  utils.offset(source, {
    left: newElRegion.left,
    top: newElRegion.top
  }, {
    useCssRight: align.useCssRight,
    useCssBottom: align.useCssBottom,
    useCssTransform: align.useCssTransform,
    ignoreShake: align.ignoreShake
  });
  return {
    points: points,
    offset: offset,
    targetOffset: targetOffset,
    overflow: newOverflowCfg
  };
}
/**
 *  2012-04-26 yiminghe@gmail.com
 *   - 优化智能对齐算法
 *   - 慎用 resizeXX
 *
 *  2011-07-13 yiminghe@gmail.com note:
 *   - 增加智能对齐，以及大小调整选项
 **/


function isOutOfVisibleRect(target, alwaysByViewport) {
  var visibleRect = getVisibleRectForElement(target, alwaysByViewport);
  var targetRegion = getRegion(target);
  return !visibleRect || targetRegion.left + targetRegion.width <= visibleRect.left || targetRegion.top + targetRegion.height <= visibleRect.top || targetRegion.left >= visibleRect.right || targetRegion.top >= visibleRect.bottom;
}

function alignElement(el, refNode, align) {
  var target = align.target || refNode;
  var refNodeRegion = getRegion(target);
  var isTargetNotOutOfVisible = !isOutOfVisibleRect(target, align.overflow && align.overflow.alwaysByViewport);
  return doAlign(el, refNodeRegion, align, isTargetNotOutOfVisible);
}

alignElement.__getOffsetParent = getOffsetParent;
alignElement.__getVisibleRectForElement = getVisibleRectForElement;
/**
 * `tgtPoint`: { pageX, pageY } or { clientX, clientY }.
 * If client position provided, will internal convert to page position.
 */

function dist_web_alignPoint(el, tgtPoint, align) {
  var pageX;
  var pageY;
  var doc = utils.getDocument(el);
  var win = doc.defaultView || doc.parentWindow;
  var scrollX = utils.getWindowScrollLeft(win);
  var scrollY = utils.getWindowScrollTop(win);
  var viewportWidth = utils.viewportWidth(win);
  var viewportHeight = utils.viewportHeight(win);

  if ('pageX' in tgtPoint) {
    pageX = tgtPoint.pageX;
  } else {
    pageX = scrollX + tgtPoint.clientX;
  }

  if ('pageY' in tgtPoint) {
    pageY = tgtPoint.pageY;
  } else {
    pageY = scrollY + tgtPoint.clientY;
  }

  var tgtRegion = {
    left: pageX,
    top: pageY,
    width: 0,
    height: 0
  };
  var pointInView = pageX >= 0 && pageX <= scrollX + viewportWidth && pageY >= 0 && pageY <= scrollY + viewportHeight; // Provide default target point

  var points = [align.points[0], 'cc'];
  return doAlign(el, tgtRegion, _objectSpread2({}, align, {
    points: points
  }), pointInView);
}

/* harmony default export */ var dist_web = (alignElement);

// EXTERNAL MODULE: ../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js
var ResizeObserver_es = __webpack_require__("iXzu");

// CONCATENATED MODULE: ../node_modules/rc-align/es/util.js



function isSamePoint(prev, next) {
  if (prev === next) return true;
  if (!prev || !next) return false;

  if ('pageX' in next && 'pageY' in next) {
    return prev.pageX === next.pageX && prev.pageY === next.pageY;
  }

  if ('clientX' in next && 'clientY' in next) {
    return prev.clientX === next.clientX && prev.clientY === next.clientY;
  }

  return false;
}
function restoreFocus(activeElement, container) {
  // Focus back if is in the container
  if (activeElement !== document.activeElement && Object(contains["a" /* default */])(container, activeElement) && typeof activeElement.focus === 'function') {
    activeElement.focus();
  }
}
function monitorResize(element, callback) {
  var prevWidth = null;
  var prevHeight = null;

  function onResize(_ref) {
    var _ref2 = Object(slicedToArray["a" /* default */])(_ref, 1),
        target = _ref2[0].target;

    var _target$getBoundingCl = target.getBoundingClientRect(),
        width = _target$getBoundingCl.width,
        height = _target$getBoundingCl.height;

    var fixedWidth = Math.floor(width);
    var fixedHeight = Math.floor(height);

    if (prevWidth !== fixedWidth || prevHeight !== fixedHeight) {
      callback({
        width: fixedWidth,
        height: fixedHeight
      });
    }

    prevWidth = fixedWidth;
    prevHeight = fixedHeight;
  }

  var resizeObserver = new ResizeObserver_es["default"](onResize);

  if (element) {
    resizeObserver.observe(element);
  }

  return function () {
    resizeObserver.disconnect();
  };
}
// CONCATENATED MODULE: ../node_modules/rc-align/es/hooks/useBuffer.js

/* harmony default export */ var useBuffer = (function (callback, buffer) {
  var calledRef = react_default.a.useRef(false);
  var timeoutRef = react_default.a.useRef(null);

  function cancelTrigger() {
    window.clearTimeout(timeoutRef.current);
  }

  function trigger(force) {
    if (!calledRef.current || force === true) {
      if (callback() === false) {
        // Not delay since callback cancelled self
        return;
      }

      calledRef.current = true;
      cancelTrigger();
      timeoutRef.current = window.setTimeout(function () {
        calledRef.current = false;
      }, buffer);
    } else {
      cancelTrigger();
      timeoutRef.current = window.setTimeout(function () {
        calledRef.current = false;
        trigger();
      }, buffer);
    }
  }

  return [trigger, function () {
    calledRef.current = false;
    cancelTrigger();
  }];
});
// CONCATENATED MODULE: ../node_modules/rc-align/es/Align.js


/**
 * Removed props:
 *  - childrenProps
 */








function getElement(func) {
  if (typeof func !== 'function') return null;
  return func();
}

function getPoint(point) {
  if (Object(esm_typeof["a" /* default */])(point) !== 'object' || !point) return null;
  return point;
}

var Align_Align = function Align(_ref, ref) {
  var children = _ref.children,
      disabled = _ref.disabled,
      target = _ref.target,
      align = _ref.align,
      onAlign = _ref.onAlign,
      monitorWindowResize = _ref.monitorWindowResize,
      _ref$monitorBufferTim = _ref.monitorBufferTime,
      monitorBufferTime = _ref$monitorBufferTim === void 0 ? 0 : _ref$monitorBufferTim;
  var cacheRef = react_default.a.useRef({});
  var nodeRef = react_default.a.useRef();
  var childNode = react_default.a.Children.only(children); // ===================== Align ======================
  // We save the props here to avoid closure makes props ood

  var forceAlignPropsRef = react_default.a.useRef({});
  forceAlignPropsRef.current.disabled = disabled;
  forceAlignPropsRef.current.target = target;
  forceAlignPropsRef.current.onAlign = onAlign;

  var _useBuffer = useBuffer(function () {
    var _forceAlignPropsRef$c = forceAlignPropsRef.current,
        latestDisabled = _forceAlignPropsRef$c.disabled,
        latestTarget = _forceAlignPropsRef$c.target;

    if (!latestDisabled && latestTarget) {
      var source = nodeRef.current;
      var result;
      var element = getElement(latestTarget);
      var point = getPoint(latestTarget);
      cacheRef.current.element = element;
      cacheRef.current.point = point; // IE lose focus after element realign
      // We should record activeElement and restore later

      var _document = document,
          activeElement = _document.activeElement;

      if (element) {
        result = alignElement(source, element, align);
      } else if (point) {
        result = dist_web_alignPoint(source, point, align);
      }

      restoreFocus(activeElement, source);

      if (onAlign) {
        onAlign(source, result);
      }

      return true;
    }

    return false;
  }, monitorBufferTime),
      _useBuffer2 = Object(slicedToArray["a" /* default */])(_useBuffer, 2),
      _forceAlign = _useBuffer2[0],
      cancelForceAlign = _useBuffer2[1]; // ===================== Effect =====================
  // Listen for target updated


  var resizeMonitor = react_default.a.useRef({
    cancel: function cancel() {}
  }); // Listen for source updated

  var sourceResizeMonitor = react_default.a.useRef({
    cancel: function cancel() {}
  });
  react_default.a.useEffect(function () {
    var element = getElement(target);
    var point = getPoint(target);

    if (nodeRef.current !== sourceResizeMonitor.current.element) {
      sourceResizeMonitor.current.cancel();
      sourceResizeMonitor.current.element = nodeRef.current;
      sourceResizeMonitor.current.cancel = monitorResize(nodeRef.current, _forceAlign);
    }

    if (cacheRef.current.element !== element || !isSamePoint(cacheRef.current.point, point)) {
      _forceAlign(); // Add resize observer


      if (resizeMonitor.current.element !== element) {
        resizeMonitor.current.cancel();
        resizeMonitor.current.element = element;
        resizeMonitor.current.cancel = monitorResize(element, _forceAlign);
      }
    }
  }); // Listen for disabled change

  react_default.a.useEffect(function () {
    if (!disabled) {
      _forceAlign();
    } else {
      cancelForceAlign();
    }
  }, [disabled]); // Listen for window resize

  var winResizeRef = react_default.a.useRef(null);
  react_default.a.useEffect(function () {
    if (monitorWindowResize) {
      if (!winResizeRef.current) {
        winResizeRef.current = Object(addEventListener["a" /* default */])(window, 'resize', _forceAlign);
      }
    } else if (winResizeRef.current) {
      winResizeRef.current.remove();
      winResizeRef.current = null;
    }
  }, [monitorWindowResize]); // Clear all if unmount

  react_default.a.useEffect(function () {
    return function () {
      resizeMonitor.current.cancel();
      sourceResizeMonitor.current.cancel();
      if (winResizeRef.current) winResizeRef.current.remove();
      cancelForceAlign();
    };
  }, []); // ====================== Ref =======================

  react_default.a.useImperativeHandle(ref, function () {
    return {
      forceAlign: function forceAlign() {
        return _forceAlign(true);
      }
    };
  }); // ===================== Render =====================

  if (react_default.a.isValidElement(childNode)) {
    childNode = react_default.a.cloneElement(childNode, {
      ref: Object(es_ref["a" /* composeRef */])(childNode.ref, nodeRef)
    });
  }

  return childNode;
};

var RefAlign = react_default.a.forwardRef(Align_Align);
RefAlign.displayName = 'Align';
/* harmony default export */ var es_Align = (RefAlign);
// CONCATENATED MODULE: ../node_modules/rc-align/es/index.js
// export this package's api

/* harmony default export */ var es = (es_Align);
// EXTERNAL MODULE: ../node_modules/rc-animate/es/CSSMotion.js
var CSSMotion = __webpack_require__("67vp");

// CONCATENATED MODULE: ../node_modules/rc-trigger/es/PopupInner.js



var PopupInner_PopupInner = function PopupInner(props, ref) {
  var prefixCls = props.prefixCls,
      className = props.className,
      visible = props.visible,
      style = props.style,
      children = props.children,
      onMouseEnter = props.onMouseEnter,
      onMouseLeave = props.onMouseLeave,
      onMouseDown = props.onMouseDown,
      onTouchStart = props.onTouchStart;
  var childNode = children;

  if (react_default.a.Children.count(children) > 1) {
    childNode = react_default.a.createElement("div", {
      className: "".concat(prefixCls, "-content")
    }, children);
  }

  return react_default.a.createElement("div", {
    ref: ref,
    className: classnames_default()(className, !visible && "".concat(props.hiddenClassName)),
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave,
    onMouseDown: onMouseDown,
    onTouchStart: onTouchStart,
    style: style
  }, childNode);
};

var RefPopupInner = react_default.a.forwardRef(PopupInner_PopupInner);
RefPopupInner.displayName = 'PopupInner';
/* harmony default export */ var es_PopupInner = (RefPopupInner);
// CONCATENATED MODULE: ../node_modules/rc-trigger/es/utils/legacyUtil.js
function getMotion(_ref) {
  var prefixCls = _ref.prefixCls,
      motion = _ref.motion,
      animation = _ref.animation,
      transitionName = _ref.transitionName;

  if (motion) {
    return motion;
  }

  if (animation) {
    return {
      motionName: "".concat(prefixCls, "-").concat(animation)
    };
  }

  if (transitionName) {
    return {
      motionName: transitionName
    };
  }

  return null;
}
// CONCATENATED MODULE: ../node_modules/rc-trigger/es/Popup.js

























function Popup_ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function Popup_objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      Popup_ownKeys(Object(source), true).forEach(function (key) {
        Object(defineProperty["a" /* default */])(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      Popup_ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();

  return function () {
    var Super = Object(getPrototypeOf["a" /* default */])(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = Object(getPrototypeOf["a" /* default */])(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return Object(possibleConstructorReturn["a" /* default */])(this, result);
  };
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
/* eslint-disable no-param-reassign */










var Popup_CSSMotion = CSSMotion["a" /* default */];

function supportMotion(motion) {
  return motion && motion.motionName;
}

var Popup_Popup = /*#__PURE__*/function (_Component) {
  Object(inherits["a" /* default */])(Popup, _Component);

  var _super = _createSuper(Popup);

  function Popup() {
    var _this;

    Object(classCallCheck["a" /* default */])(this, Popup);

    _this = _super.apply(this, arguments);
    _this.state = {
      targetWidth: undefined,
      targetHeight: undefined,
      status: null,
      prevVisible: null,
      alignClassName: null
    };
    _this.popupRef = react_default.a.createRef();
    _this.alignRef = react_default.a.createRef();
    _this.nextFrameState = null;
    _this.nextFrameId = null;

    _this.onAlign = function (popupDomNode, align) {
      var status = _this.state.status;
      var _this$props = _this.props,
          getClassNameFromAlign = _this$props.getClassNameFromAlign,
          onAlign = _this$props.onAlign;
      var alignClassName = getClassNameFromAlign(align);

      if (status === 'align') {
        _this.setState({
          alignClassName: alignClassName,
          status: 'aligned'
        }, function () {
          _this.alignRef.current.forceAlign();
        });
      } else if (status === 'aligned') {
        _this.setState({
          alignClassName: alignClassName,
          status: 'afterAlign'
        });

        onAlign(popupDomNode, align);
      } else {
        _this.setState({
          alignClassName: alignClassName
        });
      }
    };

    _this.onMotionEnd = function () {
      var visible = _this.props.visible;

      _this.setState({
        status: visible ? 'AfterMotion' : 'stable'
      });
    };

    _this.setStateOnNextFrame = function (state) {
      _this.cancelFrameState();

      _this.nextFrameState = Popup_objectSpread(Popup_objectSpread({}, _this.nextFrameState), state);
      _this.nextFrameId = raf_default()(function () {
        var submitState = Popup_objectSpread({}, _this.nextFrameState);

        _this.nextFrameState = null;

        _this.setState(submitState);
      });
    };

    _this.getMotion = function () {
      return Popup_objectSpread({}, getMotion(_this.props));
    }; // `target` on `rc-align` can accept as a function to get the bind element or a point.
    // ref: https://www.npmjs.com/package/rc-align


    _this.getAlignTarget = function () {
      var _this$props2 = _this.props,
          point = _this$props2.point,
          getRootDomNode = _this$props2.getRootDomNode;

      if (point) {
        return point;
      }

      return getRootDomNode;
    };

    _this.cancelFrameState = function () {
      raf_default.a.cancel(_this.nextFrameId);
    };

    _this.renderPopupElement = function () {
      var _this$state = _this.state,
          status = _this$state.status,
          targetHeight = _this$state.targetHeight,
          targetWidth = _this$state.targetWidth,
          alignClassName = _this$state.alignClassName;
      var _this$props3 = _this.props,
          prefixCls = _this$props3.prefixCls,
          className = _this$props3.className,
          style = _this$props3.style,
          stretch = _this$props3.stretch,
          visible = _this$props3.visible,
          align = _this$props3.align,
          destroyPopupOnHide = _this$props3.destroyPopupOnHide,
          onMouseEnter = _this$props3.onMouseEnter,
          onMouseLeave = _this$props3.onMouseLeave,
          onMouseDown = _this$props3.onMouseDown,
          onTouchStart = _this$props3.onTouchStart,
          children = _this$props3.children;
      var mergedClassName = classnames_default()(prefixCls, className, alignClassName);
      var hiddenClassName = "".concat(prefixCls, "-hidden"); // ================== Style ==================

      var sizeStyle = {};

      if (stretch) {
        // Stretch with target
        if (stretch.indexOf('height') !== -1) {
          sizeStyle.height = targetHeight;
        } else if (stretch.indexOf('minHeight') !== -1) {
          sizeStyle.minHeight = targetHeight;
        }

        if (stretch.indexOf('width') !== -1) {
          sizeStyle.width = targetWidth;
        } else if (stretch.indexOf('minWidth') !== -1) {
          sizeStyle.minWidth = targetWidth;
        }
      }

      var mergedStyle = Popup_objectSpread(Popup_objectSpread(Popup_objectSpread(Popup_objectSpread({}, sizeStyle), _this.getZIndexStyle()), style), {}, {
        opacity: status === 'stable' || !visible ? undefined : 0
      }); // ================= Motions =================


      var mergedMotion = _this.getMotion();

      var mergedMotionVisible = visible;

      if (visible && status !== 'beforeMotion' && status !== 'motion' && status !== 'stable') {
        mergedMotion.motionAppear = false;
        mergedMotion.motionEnter = false;
        mergedMotion.motionLeave = false;
      }

      if (status === 'afterAlign' || status === 'beforeMotion') {
        mergedMotionVisible = false;
      } // ================== Align ==================


      var mergedAlignDisabled = !visible || status !== 'align' && status !== 'aligned' && status !== 'stable'; // ================== Popup ==================

      var mergedPopupVisible = true;

      if (status === 'stable') {
        mergedPopupVisible = visible;
      } // Only remove popup since mask may still need animation


      if (destroyPopupOnHide && !mergedPopupVisible) {
        return null;
      }

      return react_default.a.createElement(Popup_CSSMotion, Object.assign({
        visible: mergedMotionVisible
      }, mergedMotion, {
        removeOnLeave: false,
        onEnterEnd: _this.onMotionEnd,
        onLeaveEnd: _this.onMotionEnd
      }), function (_ref, motionRef) {
        var motionStyle = _ref.style,
            motionClassName = _ref.className;
        return react_default.a.createElement(es, {
          target: _this.getAlignTarget(),
          key: "popup",
          ref: _this.alignRef,
          monitorWindowResize: true,
          disabled: mergedAlignDisabled,
          align: align,
          onAlign: _this.onAlign
        }, react_default.a.createElement(es_PopupInner, {
          prefixCls: prefixCls,
          visible: mergedPopupVisible,
          hiddenClassName: hiddenClassName,
          className: classnames_default()(mergedClassName, motionClassName),
          ref: Object(es_ref["a" /* composeRef */])(motionRef, _this.popupRef),
          onMouseEnter: onMouseEnter,
          onMouseLeave: onMouseLeave,
          onMouseDown: onMouseDown,
          onTouchStart: onTouchStart,
          style: Popup_objectSpread(Popup_objectSpread({}, mergedStyle), motionStyle)
        }, children));
      });
    };

    _this.renderMaskElement = function () {
      var _this$props4 = _this.props,
          mask = _this$props4.mask,
          maskMotion = _this$props4.maskMotion,
          maskTransitionName = _this$props4.maskTransitionName,
          maskAnimation = _this$props4.maskAnimation,
          prefixCls = _this$props4.prefixCls,
          visible = _this$props4.visible;

      if (!mask) {
        return null;
      }

      var motion = {};

      if (maskMotion && maskMotion.motionName) {
        motion = Popup_objectSpread({
          motionAppear: true
        }, getMotion({
          motion: maskMotion,
          prefixCls: prefixCls,
          transitionName: maskTransitionName,
          animation: maskAnimation
        }));
      }

      return react_default.a.createElement(Popup_CSSMotion, Object.assign({}, motion, {
        visible: visible,
        removeOnLeave: true
      }), function (_ref2) {
        var className = _ref2.className;
        return react_default.a.createElement("div", {
          style: _this.getZIndexStyle(),
          key: "mask",
          className: classnames_default()("".concat(prefixCls, "-mask"), className)
        });
      });
    };

    return _this;
  }

  Object(createClass["a" /* default */])(Popup, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.componentDidUpdate();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      var status = this.state.status;
      var _this$props5 = this.props,
          getRootDomNode = _this$props5.getRootDomNode,
          visible = _this$props5.visible,
          stretch = _this$props5.stretch; // If there is a pending state update, cancel it, a new one will be set if necessary

      this.cancelFrameState();

      if (visible && status !== 'stable') {
        switch (status) {
          case null:
            {
              this.setStateOnNextFrame({
                status: stretch ? 'measure' : 'align'
              });
              break;
            }

          case 'afterAlign':
            {
              this.setStateOnNextFrame({
                status: supportMotion(this.getMotion()) ? 'beforeMotion' : 'stable'
              });
              break;
            }

          case 'AfterMotion':
            {
              this.setStateOnNextFrame({
                status: 'stable'
              });
              break;
            }

          default:
            {
              // Go to next status
              var queue = ['measure', 'align', null, 'beforeMotion', 'motion'];
              var index = queue.indexOf(status);
              var nextStatus = queue[index + 1];

              if (index !== -1 && nextStatus) {
                this.setStateOnNextFrame({
                  status: nextStatus
                });
              }
            }
        }
      } // Measure stretch size


      if (status === 'measure') {
        var $ele = getRootDomNode();

        if ($ele) {
          this.setStateOnNextFrame({
            targetHeight: $ele.offsetHeight,
            targetWidth: $ele.offsetWidth
          });
        }
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.cancelFrameState();
    }
  }, {
    key: "getZIndexStyle",
    value: function getZIndexStyle() {
      var zIndex = this.props.zIndex;
      return {
        zIndex: zIndex
      };
    }
  }, {
    key: "render",
    value: function render() {
      return react_default.a.createElement("div", null, this.renderMaskElement(), this.renderPopupElement());
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(_ref3, _ref4) {
      var visible = _ref3.visible,
          props = Object(objectWithoutProperties["a" /* default */])(_ref3, ["visible"]);

      var prevVisible = _ref4.prevVisible,
          status = _ref4.status;
      var newState = {
        prevVisible: visible,
        status: status
      };
      var mergedMotion = getMotion(props);

      if (prevVisible === null && visible === false) {
        // Init render should always be stable
        newState.status = 'stable';
      } else if (visible !== prevVisible) {
        if (visible || supportMotion(mergedMotion) && ['motion', 'AfterMotion', 'stable'].includes(status)) {
          newState.status = null;
        } else {
          newState.status = 'stable';
        }

        if (visible) {
          newState.alignClassName = null;
        }
      }

      return newState;
    }
  }]);

  return Popup;
}(react["Component"]);

/* harmony default export */ var es_Popup = (Popup_Popup);
/* eslint-enable */
// CONCATENATED MODULE: ../node_modules/rc-trigger/es/context.js

var TriggerContext = react_default.a.createContext(null);
/* harmony default export */ var context = (TriggerContext);
// CONCATENATED MODULE: ../node_modules/rc-trigger/es/index.js
























function es_ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function es_objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      es_ownKeys(Object(source), true).forEach(function (key) {
        Object(defineProperty["a" /* default */])(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      es_ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function es_createSuper(Derived) {
  var hasNativeReflectConstruct = es_isNativeReflectConstruct();

  return function () {
    var Super = Object(getPrototypeOf["a" /* default */])(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = Object(getPrototypeOf["a" /* default */])(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return Object(possibleConstructorReturn["a" /* default */])(this, result);
  };
}

function es_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}













function noop() {}

function returnEmptyString() {
  return '';
}

function returnDocument() {
  return window.document;
}

var ALL_HANDLERS = ['onClick', 'onMouseDown', 'onTouchStart', 'onMouseEnter', 'onMouseLeave', 'onFocus', 'onBlur', 'onContextMenu'];
/**
 * Internal usage. Do not use in your code since this will be removed.
 */

function generateTrigger(PortalComponent) {
  var Trigger = /*#__PURE__*/function (_React$Component) {
    Object(inherits["a" /* default */])(Trigger, _React$Component);

    var _super = es_createSuper(Trigger);

    function Trigger(props) {
      var _this;

      Object(classCallCheck["a" /* default */])(this, Trigger);

      _this = _super.call(this, props);
      _this.popupRef = react_default.a.createRef();
      _this.triggerRef = react_default.a.createRef();

      _this.onMouseEnter = function (e) {
        var mouseEnterDelay = _this.props.mouseEnterDelay;

        _this.fireEvents('onMouseEnter', e);

        _this.delaySetPopupVisible(true, mouseEnterDelay, mouseEnterDelay ? null : e);
      };

      _this.onMouseMove = function (e) {
        _this.fireEvents('onMouseMove', e);

        _this.setPoint(e);
      };

      _this.onMouseLeave = function (e) {
        _this.fireEvents('onMouseLeave', e);

        _this.delaySetPopupVisible(false, _this.props.mouseLeaveDelay);
      };

      _this.onPopupMouseEnter = function () {
        _this.clearDelayTimer();
      };

      _this.onPopupMouseLeave = function (e) {
        // https://github.com/react-component/trigger/pull/13
        // react bug?
        if (e.relatedTarget && !e.relatedTarget.setTimeout && _this.popupRef.current && _this.popupRef.current.popupRef.current && Object(contains["a" /* default */])(_this.popupRef.current.popupRef.current, e.relatedTarget)) {
          return;
        }

        _this.delaySetPopupVisible(false, _this.props.mouseLeaveDelay);
      };

      _this.onFocus = function (e) {
        _this.fireEvents('onFocus', e); // incase focusin and focusout


        _this.clearDelayTimer();

        if (_this.isFocusToShow()) {
          _this.focusTime = Date.now();

          _this.delaySetPopupVisible(true, _this.props.focusDelay);
        }
      };

      _this.onMouseDown = function (e) {
        _this.fireEvents('onMouseDown', e);

        _this.preClickTime = Date.now();
      };

      _this.onTouchStart = function (e) {
        _this.fireEvents('onTouchStart', e);

        _this.preTouchTime = Date.now();
      };

      _this.onBlur = function (e) {
        _this.fireEvents('onBlur', e);

        _this.clearDelayTimer();

        if (_this.isBlurToHide()) {
          _this.delaySetPopupVisible(false, _this.props.blurDelay);
        }
      };

      _this.onContextMenu = function (e) {
        e.preventDefault();

        _this.fireEvents('onContextMenu', e);

        _this.setPopupVisible(true, e);
      };

      _this.onContextMenuClose = function () {
        if (_this.isContextMenuToShow()) {
          _this.close();
        }
      };

      _this.onClick = function (event) {
        _this.fireEvents('onClick', event); // focus will trigger click


        if (_this.focusTime) {
          var preTime;

          if (_this.preClickTime && _this.preTouchTime) {
            preTime = Math.min(_this.preClickTime, _this.preTouchTime);
          } else if (_this.preClickTime) {
            preTime = _this.preClickTime;
          } else if (_this.preTouchTime) {
            preTime = _this.preTouchTime;
          }

          if (Math.abs(preTime - _this.focusTime) < 20) {
            return;
          }

          _this.focusTime = 0;
        }

        _this.preClickTime = 0;
        _this.preTouchTime = 0; // Only prevent default when all the action is click.
        // https://github.com/ant-design/ant-design/issues/17043
        // https://github.com/ant-design/ant-design/issues/17291

        if (_this.isClickToShow() && (_this.isClickToHide() || _this.isBlurToHide()) && event && event.preventDefault) {
          event.preventDefault();
        }

        var nextVisible = !_this.state.popupVisible;

        if (_this.isClickToHide() && !nextVisible || nextVisible && _this.isClickToShow()) {
          _this.setPopupVisible(!_this.state.popupVisible, event);
        }
      };

      _this.onPopupMouseDown = function () {
        _this.hasPopupMouseDown = true;
        clearTimeout(_this.mouseDownTimeout);
        _this.mouseDownTimeout = window.setTimeout(function () {
          _this.hasPopupMouseDown = false;
        }, 0);

        if (_this.context) {
          var _this$context;

          (_this$context = _this.context).onPopupMouseDown.apply(_this$context, arguments);
        }
      };

      _this.onDocumentClick = function (event) {
        if (_this.props.mask && !_this.props.maskClosable) {
          return;
        }

        var target = event.target;

        var root = _this.getRootDomNode();

        var popupNode = _this.getPopupDomNode();

        if (!Object(contains["a" /* default */])(root, target) && !Object(contains["a" /* default */])(popupNode, target) && !_this.hasPopupMouseDown) {
          _this.close();
        }
      };

      _this.getRootDomNode = function () {
        var getTriggerDOMNode = _this.props.getTriggerDOMNode;

        if (getTriggerDOMNode) {
          return getTriggerDOMNode(_this.triggerRef.current);
        }

        try {
          var domNode = Object(findDOMNode["a" /* default */])(_this.triggerRef.current);

          if (domNode) {
            return domNode;
          }
        } catch (err) {// Do nothing
        }

        return react_dom_default.a.findDOMNode(Object(assertThisInitialized["a" /* default */])(_this));
      };

      _this.getPopupClassNameFromAlign = function (align) {
        var className = [];
        var _this$props = _this.props,
            popupPlacement = _this$props.popupPlacement,
            builtinPlacements = _this$props.builtinPlacements,
            prefixCls = _this$props.prefixCls,
            alignPoint = _this$props.alignPoint,
            getPopupClassNameFromAlign = _this$props.getPopupClassNameFromAlign;

        if (popupPlacement && builtinPlacements) {
          className.push(getAlignPopupClassName(builtinPlacements, prefixCls, align, alignPoint));
        }

        if (getPopupClassNameFromAlign) {
          className.push(getPopupClassNameFromAlign(align));
        }

        return className.join(' ');
      };

      _this.getComponent = function () {
        var _this$props2 = _this.props,
            prefixCls = _this$props2.prefixCls,
            destroyPopupOnHide = _this$props2.destroyPopupOnHide,
            popupClassName = _this$props2.popupClassName,
            onPopupAlign = _this$props2.onPopupAlign,
            popupMotion = _this$props2.popupMotion,
            popupAnimation = _this$props2.popupAnimation,
            popupTransitionName = _this$props2.popupTransitionName,
            popupStyle = _this$props2.popupStyle,
            mask = _this$props2.mask,
            maskAnimation = _this$props2.maskAnimation,
            maskTransitionName = _this$props2.maskTransitionName,
            maskMotion = _this$props2.maskMotion,
            zIndex = _this$props2.zIndex,
            popup = _this$props2.popup,
            stretch = _this$props2.stretch,
            alignPoint = _this$props2.alignPoint;
        var _this$state = _this.state,
            popupVisible = _this$state.popupVisible,
            point = _this$state.point;

        var align = _this.getPopupAlign();

        var mouseProps = {};

        if (_this.isMouseEnterToShow()) {
          mouseProps.onMouseEnter = _this.onPopupMouseEnter;
        }

        if (_this.isMouseLeaveToHide()) {
          mouseProps.onMouseLeave = _this.onPopupMouseLeave;
        }

        mouseProps.onMouseDown = _this.onPopupMouseDown;
        mouseProps.onTouchStart = _this.onPopupMouseDown;
        return react_default.a.createElement(es_Popup, Object.assign({
          prefixCls: prefixCls,
          destroyPopupOnHide: destroyPopupOnHide,
          visible: popupVisible,
          point: alignPoint && point,
          className: popupClassName,
          align: align,
          onAlign: onPopupAlign,
          animation: popupAnimation,
          getClassNameFromAlign: _this.getPopupClassNameFromAlign
        }, mouseProps, {
          stretch: stretch,
          getRootDomNode: _this.getRootDomNode,
          style: popupStyle,
          mask: mask,
          zIndex: zIndex,
          transitionName: popupTransitionName,
          maskAnimation: maskAnimation,
          maskTransitionName: maskTransitionName,
          maskMotion: maskMotion,
          ref: _this.popupRef,
          motion: popupMotion
        }), typeof popup === 'function' ? popup() : popup);
      };

      _this.getContainer = function () {
        var _assertThisInitialize = Object(assertThisInitialized["a" /* default */])(_this),
            props = _assertThisInitialize.props;

        var popupContainer = document.createElement('div'); // Make sure default popup container will never cause scrollbar appearing
        // https://github.com/react-component/trigger/issues/41

        popupContainer.style.position = 'absolute';
        popupContainer.style.top = '0';
        popupContainer.style.left = '0';
        popupContainer.style.width = '100%';
        var mountNode = props.getPopupContainer ? props.getPopupContainer(_this.getRootDomNode()) : props.getDocument().body;
        mountNode.appendChild(popupContainer);
        return popupContainer;
      };

      _this.setPoint = function (point) {
        var alignPoint = _this.props.alignPoint;
        if (!alignPoint || !point) return;

        _this.setState({
          point: {
            pageX: point.pageX,
            pageY: point.pageY
          }
        });
      };

      _this.handlePortalUpdate = function () {
        if (_this.state.prevPopupVisible !== _this.state.popupVisible) {
          _this.props.afterPopupVisibleChange(_this.state.popupVisible);
        }
      };

      var popupVisible;

      if ('popupVisible' in props) {
        popupVisible = !!props.popupVisible;
      } else {
        popupVisible = !!props.defaultPopupVisible;
      }

      _this.state = {
        prevPopupVisible: popupVisible,
        popupVisible: popupVisible
      };
      ALL_HANDLERS.forEach(function (h) {
        _this["fire".concat(h)] = function (e) {
          _this.fireEvents(h, e);
        };
      });
      return _this;
    }

    Object(createClass["a" /* default */])(Trigger, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.componentDidUpdate();
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate() {
        var props = this.props;
        var state = this.state; // We must listen to `mousedown` or `touchstart`, edge case:
        // https://github.com/ant-design/ant-design/issues/5804
        // https://github.com/react-component/calendar/issues/250
        // https://github.com/react-component/trigger/issues/50

        if (state.popupVisible) {
          var currentDocument;

          if (!this.clickOutsideHandler && (this.isClickToHide() || this.isContextMenuToShow())) {
            currentDocument = props.getDocument();
            this.clickOutsideHandler = Object(addEventListener["a" /* default */])(currentDocument, 'mousedown', this.onDocumentClick);
          } // always hide on mobile


          if (!this.touchOutsideHandler) {
            currentDocument = currentDocument || props.getDocument();
            this.touchOutsideHandler = Object(addEventListener["a" /* default */])(currentDocument, 'touchstart', this.onDocumentClick);
          } // close popup when trigger type contains 'onContextMenu' and document is scrolling.


          if (!this.contextMenuOutsideHandler1 && this.isContextMenuToShow()) {
            currentDocument = currentDocument || props.getDocument();
            this.contextMenuOutsideHandler1 = Object(addEventListener["a" /* default */])(currentDocument, 'scroll', this.onContextMenuClose);
          } // close popup when trigger type contains 'onContextMenu' and window is blur.


          if (!this.contextMenuOutsideHandler2 && this.isContextMenuToShow()) {
            this.contextMenuOutsideHandler2 = Object(addEventListener["a" /* default */])(window, 'blur', this.onContextMenuClose);
          }

          return;
        }

        this.clearOutsideHandler();
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.clearDelayTimer();
        this.clearOutsideHandler();
        clearTimeout(this.mouseDownTimeout);
      }
    }, {
      key: "getPopupDomNode",
      value: function getPopupDomNode() {
        // for test
        if (this.popupRef.current && this.popupRef.current.popupRef.current) {
          return this.popupRef.current.popupRef.current;
        }

        return null;
      }
    }, {
      key: "getPopupAlign",
      value: function getPopupAlign() {
        var props = this.props;
        var popupPlacement = props.popupPlacement,
            popupAlign = props.popupAlign,
            builtinPlacements = props.builtinPlacements;

        if (popupPlacement && builtinPlacements) {
          return getAlignFromPlacement(builtinPlacements, popupPlacement, popupAlign);
        }

        return popupAlign;
      }
      /**
       * @param popupVisible    Show or not the popup element
       * @param event           SyntheticEvent, used for `pointAlign`
       */

    }, {
      key: "setPopupVisible",
      value: function setPopupVisible(popupVisible, event) {
        var alignPoint = this.props.alignPoint;
        var prevPopupVisible = this.state.popupVisible;
        this.clearDelayTimer();

        if (prevPopupVisible !== popupVisible) {
          if (!('popupVisible' in this.props)) {
            this.setState({
              popupVisible: popupVisible,
              prevPopupVisible: prevPopupVisible
            });
          }

          this.props.onPopupVisibleChange(popupVisible);
        } // Always record the point position since mouseEnterDelay will delay the show


        if (alignPoint && event) {
          this.setPoint(event);
        }
      }
    }, {
      key: "delaySetPopupVisible",
      value: function delaySetPopupVisible(visible, delayS, event) {
        var _this2 = this;

        var delay = delayS * 1000;
        this.clearDelayTimer();

        if (delay) {
          var point = event ? {
            pageX: event.pageX,
            pageY: event.pageY
          } : null;
          this.delayTimer = window.setTimeout(function () {
            _this2.setPopupVisible(visible, point);

            _this2.clearDelayTimer();
          }, delay);
        } else {
          this.setPopupVisible(visible, event);
        }
      }
    }, {
      key: "clearDelayTimer",
      value: function clearDelayTimer() {
        if (this.delayTimer) {
          clearTimeout(this.delayTimer);
          this.delayTimer = null;
        }
      }
    }, {
      key: "clearOutsideHandler",
      value: function clearOutsideHandler() {
        if (this.clickOutsideHandler) {
          this.clickOutsideHandler.remove();
          this.clickOutsideHandler = null;
        }

        if (this.contextMenuOutsideHandler1) {
          this.contextMenuOutsideHandler1.remove();
          this.contextMenuOutsideHandler1 = null;
        }

        if (this.contextMenuOutsideHandler2) {
          this.contextMenuOutsideHandler2.remove();
          this.contextMenuOutsideHandler2 = null;
        }

        if (this.touchOutsideHandler) {
          this.touchOutsideHandler.remove();
          this.touchOutsideHandler = null;
        }
      }
    }, {
      key: "createTwoChains",
      value: function createTwoChains(event) {
        var childPros = this.props.children.props;
        var props = this.props;

        if (childPros[event] && props[event]) {
          return this["fire".concat(event)];
        }

        return childPros[event] || props[event];
      }
    }, {
      key: "isClickToShow",
      value: function isClickToShow() {
        var _this$props3 = this.props,
            action = _this$props3.action,
            showAction = _this$props3.showAction;
        return action.indexOf('click') !== -1 || showAction.indexOf('click') !== -1;
      }
    }, {
      key: "isContextMenuToShow",
      value: function isContextMenuToShow() {
        var _this$props4 = this.props,
            action = _this$props4.action,
            showAction = _this$props4.showAction;
        return action.indexOf('contextMenu') !== -1 || showAction.indexOf('contextMenu') !== -1;
      }
    }, {
      key: "isClickToHide",
      value: function isClickToHide() {
        var _this$props5 = this.props,
            action = _this$props5.action,
            hideAction = _this$props5.hideAction;
        return action.indexOf('click') !== -1 || hideAction.indexOf('click') !== -1;
      }
    }, {
      key: "isMouseEnterToShow",
      value: function isMouseEnterToShow() {
        var _this$props6 = this.props,
            action = _this$props6.action,
            showAction = _this$props6.showAction;
        return action.indexOf('hover') !== -1 || showAction.indexOf('mouseEnter') !== -1;
      }
    }, {
      key: "isMouseLeaveToHide",
      value: function isMouseLeaveToHide() {
        var _this$props7 = this.props,
            action = _this$props7.action,
            hideAction = _this$props7.hideAction;
        return action.indexOf('hover') !== -1 || hideAction.indexOf('mouseLeave') !== -1;
      }
    }, {
      key: "isFocusToShow",
      value: function isFocusToShow() {
        var _this$props8 = this.props,
            action = _this$props8.action,
            showAction = _this$props8.showAction;
        return action.indexOf('focus') !== -1 || showAction.indexOf('focus') !== -1;
      }
    }, {
      key: "isBlurToHide",
      value: function isBlurToHide() {
        var _this$props9 = this.props,
            action = _this$props9.action,
            hideAction = _this$props9.hideAction;
        return action.indexOf('focus') !== -1 || hideAction.indexOf('blur') !== -1;
      }
    }, {
      key: "forcePopupAlign",
      value: function forcePopupAlign() {
        if (this.state.popupVisible && this.popupRef.current && this.popupRef.current.alignRef.current) {
          this.popupRef.current.alignRef.current.forceAlign();
        }
      }
    }, {
      key: "fireEvents",
      value: function fireEvents(type, e) {
        var childCallback = this.props.children.props[type];

        if (childCallback) {
          childCallback(e);
        }

        var callback = this.props[type];

        if (callback) {
          callback(e);
        }
      }
    }, {
      key: "close",
      value: function close() {
        this.setPopupVisible(false);
      }
    }, {
      key: "render",
      value: function render() {
        var popupVisible = this.state.popupVisible;
        var _this$props10 = this.props,
            children = _this$props10.children,
            forceRender = _this$props10.forceRender,
            alignPoint = _this$props10.alignPoint,
            className = _this$props10.className,
            autoDestroy = _this$props10.autoDestroy;
        var child = react_default.a.Children.only(children);
        var newChildProps = {
          key: 'trigger'
        };

        if (this.isContextMenuToShow()) {
          newChildProps.onContextMenu = this.onContextMenu;
        } else {
          newChildProps.onContextMenu = this.createTwoChains('onContextMenu');
        }

        if (this.isClickToHide() || this.isClickToShow()) {
          newChildProps.onClick = this.onClick;
          newChildProps.onMouseDown = this.onMouseDown;
          newChildProps.onTouchStart = this.onTouchStart;
        } else {
          newChildProps.onClick = this.createTwoChains('onClick');
          newChildProps.onMouseDown = this.createTwoChains('onMouseDown');
          newChildProps.onTouchStart = this.createTwoChains('onTouchStart');
        }

        if (this.isMouseEnterToShow()) {
          newChildProps.onMouseEnter = this.onMouseEnter;

          if (alignPoint) {
            newChildProps.onMouseMove = this.onMouseMove;
          }
        } else {
          newChildProps.onMouseEnter = this.createTwoChains('onMouseEnter');
        }

        if (this.isMouseLeaveToHide()) {
          newChildProps.onMouseLeave = this.onMouseLeave;
        } else {
          newChildProps.onMouseLeave = this.createTwoChains('onMouseLeave');
        }

        if (this.isFocusToShow() || this.isBlurToHide()) {
          newChildProps.onFocus = this.onFocus;
          newChildProps.onBlur = this.onBlur;
        } else {
          newChildProps.onFocus = this.createTwoChains('onFocus');
          newChildProps.onBlur = this.createTwoChains('onBlur');
        }

        var childrenClassName = classnames_default()(child && child.props && child.props.className, className);

        if (childrenClassName) {
          newChildProps.className = childrenClassName;
        }

        var cloneProps = es_objectSpread({}, newChildProps);

        if (Object(es_ref["b" /* supportRef */])(child)) {
          cloneProps.ref = Object(es_ref["a" /* composeRef */])(this.triggerRef, child.ref);
        }

        var trigger = react_default.a.cloneElement(child, cloneProps);
        var portal; // prevent unmounting after it's rendered

        if (popupVisible || this.popupRef.current || forceRender) {
          portal = react_default.a.createElement(PortalComponent, {
            key: "portal",
            getContainer: this.getContainer,
            didUpdate: this.handlePortalUpdate
          }, this.getComponent());
        }

        if (!popupVisible && autoDestroy) {
          portal = null;
        }

        return react_default.a.createElement(context.Provider, {
          value: {
            onPopupMouseDown: this.onPopupMouseDown
          }
        }, trigger, portal);
      }
    }], [{
      key: "getDerivedStateFromProps",
      value: function getDerivedStateFromProps(_ref, prevState) {
        var popupVisible = _ref.popupVisible;
        var newState = {};

        if (popupVisible !== undefined && prevState.popupVisible !== popupVisible) {
          newState.popupVisible = popupVisible;
          newState.prevPopupVisible = prevState.popupVisible;
        }

        return newState;
      }
    }]);

    return Trigger;
  }(react_default.a.Component);

  Trigger.contextType = context;
  Trigger.defaultProps = {
    prefixCls: 'rc-trigger-popup',
    getPopupClassNameFromAlign: returnEmptyString,
    getDocument: returnDocument,
    onPopupVisibleChange: noop,
    afterPopupVisibleChange: noop,
    onPopupAlign: noop,
    popupClassName: '',
    mouseEnterDelay: 0,
    mouseLeaveDelay: 0.1,
    focusDelay: 0,
    blurDelay: 0.15,
    popupStyle: {},
    destroyPopupOnHide: false,
    popupAlign: {},
    defaultPopupVisible: false,
    mask: false,
    maskClosable: true,
    action: [],
    showAction: [],
    hideAction: [],
    autoDestroy: false
  };
  return Trigger;
}
/* harmony default export */ var rc_trigger_es = __webpack_exports__["a"] = (generateTrigger(Portal["a" /* default */]));

/***/ }),

/***/ "mTAF":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return wrapperRaf; });
/* harmony import */ var raf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("rQBY");
/* harmony import */ var raf__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(raf__WEBPACK_IMPORTED_MODULE_0__);

var id = 0;
var ids = {}; // Support call raf with delay specified frame

function wrapperRaf(callback) {
  var delayFrames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
  var myId = id++;
  var restFrames = delayFrames;

  function internalCallback() {
    restFrames -= 1;

    if (restFrames <= 0) {
      callback();
      delete ids[myId];
    } else {
      ids[myId] = raf__WEBPACK_IMPORTED_MODULE_0___default()(internalCallback);
    }
  }

  ids[myId] = raf__WEBPACK_IMPORTED_MODULE_0___default()(internalCallback);
  return myId;
}

wrapperRaf.cancel = function cancel(pid) {
  if (pid === undefined) return;
  raf__WEBPACK_IMPORTED_MODULE_0___default.a.cancel(ids[pid]);
  delete ids[pid];
};

wrapperRaf.ids = ids; // export this for test usage

/***/ }),

/***/ "mU+h":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var is_array_1 = __webpack_require__("QAqn");

var is_object_1 = __webpack_require__("JN4+");

function each(elements, func) {
  if (!elements) {
    return;
  }

  var rst;

  if (is_array_1["default"](elements)) {
    for (var i = 0, len = elements.length; i < len; i++) {
      rst = func(elements[i], i);

      if (rst === false) {
        break;
      }
    }
  } else if (is_object_1["default"](elements)) {
    for (var k in elements) {
      if (elements.hasOwnProperty(k)) {
        rst = func(elements[k], k);

        if (rst === false) {
          break;
        }
      }
    }
  }
}

exports["default"] = each;

/***/ }),

/***/ "mWFu":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("yIlq");

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _isEmpty = __webpack_require__("zFdY");

var _isEmpty2 = _interopRequireDefault(_isEmpty);

var _not = __webpack_require__("kFsC");

var _not2 = _interopRequireDefault(_not);

var _compose = __webpack_require__("+yb+");

var _compose2 = _interopRequireDefault(_compose);

var _contains = __webpack_require__("893G");

var _contains2 = _interopRequireDefault(_contains);

var _filter = __webpack_require__("LOD0");

var _filter2 = _interopRequireDefault(_filter);

var _getPagesPaths = __webpack_require__("aOS5");

var _getPagesPaths2 = _interopRequireDefault(_getPagesPaths);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/*
 * Checks if a path is in options.pagesPaths
 * @sig Options -> String -> Boolean
 * @param {{pagesPaths: string[]}} options plugin options
 * @param {String} path path to check
 * @return {Result<Boolean>} is in
 */


var isInPagesPaths = function isInPagesPaths(options, path) {
  return (0, _getPagesPaths2["default"])(options).map((0, _filter2["default"])(function (pagePath) {
    return (0, _contains2["default"])(pagePath, path);
  })).map((0, _compose2["default"])(_not2["default"], _isEmpty2["default"]));
};

exports["default"] = isInPagesPaths;

/***/ }),

/***/ "mbwt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("+jjx");

__webpack_require__("ABKx");

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
}; //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------


module.exports = function (method, maybeObject) {
  if ((typeof maybeObject === 'undefined' ? 'undefined' : _typeof(maybeObject)) !== 'object') {
    throw new TypeError(method + ' expects an Object, but was given ' + maybeObject + '.');
  }
};

/***/ }),

/***/ "mggL":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("Bsg+");
var document = __webpack_require__("P56o").document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),

/***/ "miGZ":
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),

/***/ "ml72":
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__("Cmsx");
var defined = __webpack_require__("GCOZ");
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),

/***/ "mthV":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------

__webpack_require__("5hJT");

__webpack_require__("yIlq");

var assertType = __webpack_require__("yCBR");

var assertFunction = __webpack_require__("nAPr");

var _require = __webpack_require__("sMOp"),
    union = _require.union,
    derivations = _require.derivations;

var provideAliases = __webpack_require__("JiyH");

var adtMethods = __webpack_require__("cl25");

var extend = __webpack_require__("0ONX");

var warnDeprecation = __webpack_require__("GFZo");

var equality = derivations.equality,
    debugRepresentation = derivations.debugRepresentation,
    serialization = derivations.serialization;
/*~ stability: stable */

var Validation = union('folktale:Validation', {
  /*~
   * type: |
   *   forall a, b: (a) => Validation a b
   */
  Failure: function Failure(value) {
    return {
      value: value
    };
  },

  /*~
   * type: |
   *   forall a, b: (b) => Validation a b
   */
  Success: function Success(value) {
    return {
      value: value
    };
  }
}).derive(equality, debugRepresentation, serialization);
var Success = Validation.Success,
    Failure = Validation.Failure;
var assertValidation = assertType(Validation);
extend(Failure.prototype, {
  /*~
   * isRequired: true
   * type: |
   *   forall a, b: get (Validation a b) => a
   */
  get value() {
    throw new TypeError('`value` can’t be accessed in an abstract instance of Validation.Failure');
  }

});
extend(Success.prototype, {
  /*~
   * isRequired: true
   * type: |
   *   forall a, b: get (Validation a b) => b
   */
  get value() {
    throw new TypeError('`value` can’t be accessed in an abstract instance of Validation.Success');
  }

});
/*~~belongsTo: Validation */

adtMethods(Validation, {
  /*~
   * type: |
   *   forall a, b, c: (Validation a b).((b) => c) => Validation a c
   */
  map: {
    /*~*/
    Failure: function map(transformation) {
      assertFunction('Validation.Failure#map', transformation);
      return this;
    },

    /*~*/
    Success: function map(transformation) {
      assertFunction('Validation.Success#map', transformation);
      return Success(transformation(this.value));
    }
  },

  /*~
   * type: |
   *   forall a, b, c: (Validation (b) => c).(Validation a b) => Validation a c
   */
  apply: {
    /*~*/
    Failure: function apply(aValidation) {
      assertValidation('Failure#apply', aValidation);
      return Failure.hasInstance(aValidation) ? Failure(this.value.concat(aValidation.value)) :
      /* otherwise */
      this;
    },

    /*~*/
    Success: function apply(aValidation) {
      assertValidation('Success#apply', aValidation);
      return Failure.hasInstance(aValidation) ? aValidation :
      /* otherwise */
      aValidation.map(this.value);
    }
  },

  /*~
   * type: |
   *   forall a, b: (Validation a b).() => b :: throws TypeError
   */
  unsafeGet: {
    /*~*/
    Failure: function unsafeGet() {
      throw new TypeError('Can\'t extract the value of a Failure.\n\n    Failure does not contain a normal value - it contains an error.\n    You might consider switching from Validation#get to Validation#getOrElse, or some other method\n    that is not partial.\n      ');
    },

    /*~*/
    Success: function unsafeGet() {
      return this.value;
    }
  },

  /*~
   * type: |
   *   forall a, b: (Validation a b).(b) => b
   */
  getOrElse: {
    /*~*/
    Failure: function getOrElse(_default) {
      return _default;
    },

    /*~*/
    Success: function getOrElse(_default) {
      return this.value;
    }
  },

  /*~
   * type: |
   *   forall a, b, c:
   *     (Validation a b).((a) => Validation c b) => Validation c b
   */
  orElse: {
    /*~*/
    Failure: function orElse(handler) {
      assertFunction('Validation.Failure#orElse', handler);
      return handler(this.value);
    },

    /*~*/
    Success: function orElse(handler) {
      assertFunction('Validation.Success#orElse', handler);
      return this;
    }
  },

  /*~
   * type: |
   *   forall a, b:
   *     (Validation a b).(Validation a b) => Validation a b
   *   where a is Semigroup
   */
  concat: {
    /*~*/
    Failure: function concat(aValidation) {
      assertValidation('Validation.Failure#concat', aValidation);

      if (Failure.hasInstance(aValidation)) {
        return Failure(this.value.concat(aValidation.value));
      } else {
        return this;
      }
    },

    /*~*/
    Success: function concat(aValidation) {
      assertValidation('Validation.Success#concat', aValidation);
      return aValidation;
    }
  },

  /*~
   * type: |
   *   forall a, b, c:
   *     (Validation a b).((a) => c, (b) => c) => c
   */
  fold: {
    /*~*/
    Failure: function fold(failureTransformation, successTransformation) {
      assertFunction('Validation.Failure#fold', failureTransformation);
      assertFunction('Validation.Failure#fold', successTransformation);
      return failureTransformation(this.value);
    },

    /*~*/
    Success: function fold(failureTransformation, successTransformation) {
      assertFunction('Validation.Success#fold', failureTransformation);
      assertFunction('Validation.Success#fold', successTransformation);
      return successTransformation(this.value);
    }
  },

  /*~
   * type: |
   *   forall a, b: (Validation a b).() => Validation b a
   */
  swap: {
    /*~*/
    Failure: function swap() {
      return Success(this.value);
    },

    /*~*/
    Success: function swap() {
      return Failure(this.value);
    }
  },

  /*~
   * type: |
   *   forall a, b, c, d:
   *     (Validation a b).((a) => c, (b) => d) => Validation c d
   */
  bimap: {
    /*~*/
    Failure: function bimap(failureTransformation, successTransformation) {
      assertFunction('Validation.Failure#fold', failureTransformation);
      assertFunction('Validation.Failure#fold', successTransformation);
      return Failure(failureTransformation(this.value));
    },

    /*~*/
    Success: function bimap(failureTransformation, successTransformation) {
      assertFunction('Validation.Success#fold', failureTransformation);
      assertFunction('Validation.Success#fold', successTransformation);
      return Success(successTransformation(this.value));
    }
  },

  /*~
   * type: |
   *   forall a, b, c:
   *     (Validation a b).((a) => c) Validation c b
   */
  mapFailure: {
    /*~*/
    Failure: function mapFailure(transformation) {
      assertFunction('Validation.Failure#mapFailure', transformation);
      return Failure(transformation(this.value));
    },

    /*~*/
    Success: function mapFailure(transformation) {
      assertFunction('Validation.Failure#mapFailure', transformation);
      return this;
    }
  }
});
Object.assign(Validation, {
  /*~
   * type: |
   *   forall a, b: (b) => Validation a b
   */
  of: function of(value) {
    return Success(value);
  },

  /*~
   * type: |
   *   forall a, b: (Validation a b).() => b :: throws TypeError
   */
  'get': function get() {
    warnDeprecation('`.get()` is deprecated, and has been renamed to `.unsafeGet()`.');
    return this.unsafeGet();
  },

  /*~
   * type: |
   *   forall a, b: (Validation a b).() => a or b
   */
  merge: function merge() {
    return this.value;
  },

  /*~
   * type: |
   *   forall a, b: (Validation a b).() => Result a b
   */
  toResult: function toResult() {
    return __webpack_require__("f7TZ")(this);
  },

  /*~
   * type: |
   *   forall a, b: (Validation a b).() => Maybe b
   */
  toMaybe: function toMaybe() {
    return __webpack_require__("ByO0")(this);
  }
});
provideAliases(Success.prototype);
provideAliases(Failure.prototype);
provideAliases(Validation);
module.exports = Validation;

/***/ }),

/***/ "mvii":
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),

/***/ "n+VH":
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "nAPr":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------

module.exports = function (method, transformation) {
  if (typeof transformation !== 'function') {
    throw new TypeError(method + ' expects a function, but was given ' + transformation + '.');
  }
};

/***/ }),

/***/ "nNvC":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "nT+N":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin
module.exports = {"export":"ExternalLinkIcon-module--export--3gleA"};

/***/ }),

/***/ "ng6+":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var segments_1 = __webpack_require__("ufEP");

var util_1 = __webpack_require__("H4Zb");

exports["default"] = {
  /**
   * 计算多折线的包围盒
   * @param {array} points 点的集合 [x,y] 的形式
   * @return {object} 包围盒
   */
  box: function box(points) {
    var xArr = [];
    var yArr = [];

    for (var i = 0; i < points.length; i++) {
      var point = points[i];
      xArr.push(point[0]);
      yArr.push(point[1]);
    }

    return util_1.getBBoxByArray(xArr, yArr);
  },

  /**
   * 计算多折线的长度
   * @param {array} points 点的集合 [x,y] 的形式
   * @return {object} 多条边的长度
   */
  length: function length(points) {
    return segments_1.lengthOfSegment(points);
  },

  /**
   * 根据比例获取多折线的点
   * @param {array} points 点的集合 [x,y] 的形式
   * @param {number} t 在多折线的长度上的比例
   * @return {object} 根据比例值计算出来的点
   */
  pointAt: function pointAt(points, t) {
    return segments_1.pointAtSegments(points, t);
  },

  /**
   * 指定点到多折线的距离
   * @param {array} points 点的集合 [x,y] 的形式
   * @param {number} x 指定点的 x
   * @param {number} y 指定点的 y
   * @return {number} 点到多折线的距离
   */
  pointDistance: function pointDistance(points, x, y) {
    return segments_1.distanceAtSegment(points, x, y);
  },

  /**
   * 根据比例获取多折线的切线角度
   * @param {array} points 点的集合 [x,y] 的形式
   * @param {number} t 在多折线的长度上的比例
   * @return {object} 根据比例值计算出来的角度
   */
  tangentAngle: function tangentAngle(points, t) {
    return segments_1.angleAtSegments(points, t);
  }
};

/***/ }),

/***/ "nl0c":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------

module.exports = {
  equals: 'fantasy-land/equals',
  concat: 'fantasy-land/concat',
  empty: 'fantasy-land/empty',
  map: 'fantasy-land/map',
  ap: 'fantasy-land/ap',
  of: 'fantasy-land/of',
  alt: 'fantasy-land/alt',
  reduce: 'fantasy-land/reduce',
  traverse: 'fantasy-land/traverse',
  chain: 'fantasy-land/chain',
  chainRec: 'fantasy-land/chainRec',
  extend: 'fantasy-land/extend',
  extract: 'fantasy-land/extract',
  bimap: 'fantasy-land/bimap',
  promap: 'fantasy-land/promap'
};

/***/ }),

/***/ "nqlD":
/***/ (function(module, exports, __webpack_require__) {

/*
  Why commonjs and not ES imports/exports?

  This module is used to alias `create-react-context` package, but drop the the actual implementation part
  because Gatsby requires version of react that has implementatoin baked in.
  
  Package source is using ES modules:
    - https://github.com/jamiebuilds/create-react-context/blob/v0.3.0/src/index.js
  
  But to build this package `babel-plugin-add-module-exports` is used ( https://www.npmjs.com/package/babel-plugin-add-module-exports).
  Which result in both `module.exports` and `exports.default` being set to same thing.

  We don't use that babel plugin so we only have `exports.default`.

  This cause problems in various 3rd party react components that rely on `module.exports` being set.
  See https://github.com/gatsbyjs/gatsby/issues/23645 for example of it.
  
  Instead of adding same babel plugin we mimic output here. Adding babel plugin just for this would:
   a) unnecesairly slow down compilation for all other files (if we just apply it everywhere)
   b) or complicate babel-loader configuration with overwrite specifically for this file
*/var _require=__webpack_require__("mXGw"),createContext=_require.createContext;module.exports=createContext;module.exports.default=createContext;

/***/ }),

/***/ "nsWf":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _pipe = __webpack_require__("IycE");

var _pipe2 = _interopRequireDefault(_pipe);

var _getBrowserLanguage = __webpack_require__("ylPP");

var _getBrowserLanguage2 = _interopRequireDefault(_getBrowserLanguage);

var _getValidLangKey = __webpack_require__("l5BI");

var _getValidLangKey2 = _interopRequireDefault(_getValidLangKey);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * Get user browser valid langKey
 * @param {[String]} langs allowed lang keys ['en', 'fr', 'pt']
 * @param {String} defaultLangKey default browser language key
 * @return {string} valid langKey
 */


var getUserLangKey = function getUserLangKey(langs, defaultLangKey) {
  return (0, _pipe2["default"])(_getBrowserLanguage2["default"], (0, _getValidLangKey2["default"])(langs, defaultLangKey))();
};

exports["default"] = getUserLangKey;

/***/ }),

/***/ "nsbO":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var anObject = __webpack_require__("PAFS");
var sameValue = __webpack_require__("Nu7b");
var regExpExec = __webpack_require__("Fu0I");

// @@search logic
__webpack_require__("Wifh")('search', 1, function (defined, SEARCH, $search, maybeCallNative) {
  return [
    // `String.prototype.search` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.search
    function search(regexp) {
      var O = defined(this);
      var fn = regexp == undefined ? undefined : regexp[SEARCH];
      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
    },
    // `RegExp.prototype[@@search]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search
    function (regexp) {
      var res = maybeCallNative($search, regexp, this);
      if (res.done) return res.value;
      var rx = anObject(regexp);
      var S = String(this);
      var previousLastIndex = rx.lastIndex;
      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;
      var result = regExpExec(rx, S);
      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;
      return result === null ? -1 : result.index;
    }
  ];
});


/***/ }),

/***/ "ntCI":
/***/ (function(module, exports) {

module.exports = function () {
  function XWrap(fn) {
    this.f = fn;
  }

  XWrap.prototype['@@transducer/init'] = function () {
    throw new Error('init not implemented on XWrap');
  };

  XWrap.prototype['@@transducer/result'] = function (acc) {
    return acc;
  };

  XWrap.prototype['@@transducer/step'] = function (acc, x) {
    return this.f(acc, x);
  };

  return function _xwrap(fn) {
    return new XWrap(fn);
  };
}();

/***/ }),

/***/ "nw12":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // This icon file is generated automatically.

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var LeftOutlined = {
  "icon": {
    "tag": "svg",
    "attrs": {
      "viewBox": "64 64 896 896",
      "focusable": "false"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "d": "M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z"
      }
    }]
  },
  "name": "left",
  "theme": "outlined"
};
exports["default"] = LeftOutlined;

/***/ }),

/***/ "nxLd":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return PresetStatusColorTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PresetColorTypes; });
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("UyNX");

var PresetStatusColorTypes = Object(_type__WEBPACK_IMPORTED_MODULE_0__[/* tuple */ "a"])('success', 'processing', 'error', 'default', 'warning'); // eslint-disable-next-line import/prefer-default-export

var PresetColorTypes = Object(_type__WEBPACK_IMPORTED_MODULE_0__[/* tuple */ "a"])('pink', 'red', 'yellow', 'orange', 'cyan', 'green', 'blue', 'purple', 'geekblue', 'magenta', 'volcano', 'gold', 'lime');

/***/ }),

/***/ "nxTg":
/***/ (function(module, exports, __webpack_require__) {

var arrayWithHoles = __webpack_require__("+3YS");

var iterableToArrayLimit = __webpack_require__("S411");

var unsupportedIterableToArray = __webpack_require__("Zhxd");

var nonIterableRest = __webpack_require__("+bRE");

function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();
}

module.exports = _slicedToArray;

/***/ }),

/***/ "o/3r":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // This icon file is generated automatically.

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var ExclamationCircleOutlined = {
  "icon": {
    "tag": "svg",
    "attrs": {
      "viewBox": "64 64 896 896",
      "focusable": "false"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"
      }
    }, {
      "tag": "path",
      "attrs": {
        "d": "M464 688a48 48 0 1096 0 48 48 0 10-96 0zm24-112h48c4.4 0 8-3.6 8-8V296c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v272c0 4.4 3.6 8 8 8z"
      }
    }]
  },
  "name": "exclamation-circle",
  "theme": "outlined"
};
exports["default"] = ExclamationCircleOutlined;

/***/ }),

/***/ "o2D/":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("3y5y");

__webpack_require__("+jjx");

__webpack_require__("ABKx");

var _isArrayLike = __webpack_require__("xCUo");

var _xwrap = __webpack_require__("ntCI");

var bind = __webpack_require__("CZpP");

module.exports = function () {
  function _arrayReduce(xf, acc, list) {
    var idx = 0;
    var len = list.length;

    while (idx < len) {
      acc = xf['@@transducer/step'](acc, list[idx]);

      if (acc && acc['@@transducer/reduced']) {
        acc = acc['@@transducer/value'];
        break;
      }

      idx += 1;
    }

    return xf['@@transducer/result'](acc);
  }

  function _iterableReduce(xf, acc, iter) {
    var step = iter.next();

    while (!step.done) {
      acc = xf['@@transducer/step'](acc, step.value);

      if (acc && acc['@@transducer/reduced']) {
        acc = acc['@@transducer/value'];
        break;
      }

      step = iter.next();
    }

    return xf['@@transducer/result'](acc);
  }

  function _methodReduce(xf, acc, obj, methodName) {
    return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));
  }

  var symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';
  return function _reduce(fn, acc, list) {
    if (typeof fn === 'function') {
      fn = _xwrap(fn);
    }

    if (_isArrayLike(list)) {
      return _arrayReduce(fn, acc, list);
    }

    if (typeof list['fantasy-land/reduce'] === 'function') {
      return _methodReduce(fn, acc, list, 'fantasy-land/reduce');
    }

    if (list[symIterator] != null) {
      return _iterableReduce(fn, acc, list[symIterator]());
    }

    if (typeof list.next === 'function') {
      return _iterableReduce(fn, acc, list);
    }

    if (typeof list.reduce === 'function') {
      return _methodReduce(fn, acc, list, 'reduce');
    }

    throw new TypeError('reduce: list must be array or iterable');
  };
}();

/***/ }),

/***/ "o2xN":
/***/ (function(module) {

module.exports = JSON.parse("[]");

/***/ }),

/***/ "o6jA":
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__("X6VK");
$export($export.G + $export.W + $export.F * !__webpack_require__("tW8y").ABV, {
  DataView: __webpack_require__("Dhml").DataView
});


/***/ }),

/***/ "o7PZ":
/***/ (function(module, exports, __webpack_require__) {

// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
var $export = __webpack_require__("X6VK");

$export($export.P, 'Function', { bind: __webpack_require__("oAuq") });


/***/ }),

/***/ "oAuq":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var aFunction = __webpack_require__("b8Rm");
var isObject = __webpack_require__("Bsg+");
var invoke = __webpack_require__("KFSm");
var arraySlice = [].slice;
var factories = {};

var construct = function (F, len, args) {
  if (!(len in factories)) {
    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';
    // eslint-disable-next-line no-new-func
    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
  } return factories[len](F, args);
};

module.exports = Function.bind || function bind(that /* , ...args */) {
  var fn = aFunction(this);
  var partArgs = arraySlice.call(arguments, 1);
  var bound = function (/* args... */) {
    var args = partArgs.concat(arraySlice.call(arguments));
    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
  };
  if (isObject(fn.prototype)) bound.prototype = fn.prototype;
  return bound;
};


/***/ }),

/***/ "oH4r":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var util_1 = __webpack_require__("H4Zb");

function default_1(shape) {
  var attrs = shape.attr();
  var points = attrs.points;
  var xArr = [];
  var yArr = [];

  for (var i = 0; i < points.length; i++) {
    var point = points[i];
    xArr.push(point[0]);
    yArr.push(point[1]);
  }

  return util_1.getBBoxByArray(xArr, yArr);
}

exports["default"] = default_1;

/***/ }),

/***/ "oLHe":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("dtzt");

// CodeMirror, copyright (c) by Marijn Haverbeke and others
// Distributed under an MIT license: https://codemirror.net/LICENSE
(function (mod) {
  if (true) // CommonJS
    mod(__webpack_require__("Dln1"));else {}
})(function (CodeMirror) {
  "use strict";

  var WRAP_CLASS = "CodeMirror-activeline";
  var BACK_CLASS = "CodeMirror-activeline-background";
  var GUTT_CLASS = "CodeMirror-activeline-gutter";
  CodeMirror.defineOption("styleActiveLine", false, function (cm, val, old) {
    var prev = old == CodeMirror.Init ? false : old;
    if (val == prev) return;

    if (prev) {
      cm.off("beforeSelectionChange", selectionChange);
      clearActiveLines(cm);
      delete cm.state.activeLines;
    }

    if (val) {
      cm.state.activeLines = [];
      updateActiveLines(cm, cm.listSelections());
      cm.on("beforeSelectionChange", selectionChange);
    }
  });

  function clearActiveLines(cm) {
    for (var i = 0; i < cm.state.activeLines.length; i++) {
      cm.removeLineClass(cm.state.activeLines[i], "wrap", WRAP_CLASS);
      cm.removeLineClass(cm.state.activeLines[i], "background", BACK_CLASS);
      cm.removeLineClass(cm.state.activeLines[i], "gutter", GUTT_CLASS);
    }
  }

  function sameArray(a, b) {
    if (a.length != b.length) return false;

    for (var i = 0; i < a.length; i++) {
      if (a[i] != b[i]) return false;
    }

    return true;
  }

  function updateActiveLines(cm, ranges) {
    var active = [];

    for (var i = 0; i < ranges.length; i++) {
      var range = ranges[i];
      var option = cm.getOption("styleActiveLine");
      if (typeof option == "object" && option.nonEmpty ? range.anchor.line != range.head.line : !range.empty()) continue;
      var line = cm.getLineHandleVisualStart(range.head.line);
      if (active[active.length - 1] != line) active.push(line);
    }

    if (sameArray(cm.state.activeLines, active)) return;
    cm.operation(function () {
      clearActiveLines(cm);

      for (var i = 0; i < active.length; i++) {
        cm.addLineClass(active[i], "wrap", WRAP_CLASS);
        cm.addLineClass(active[i], "background", BACK_CLASS);
        cm.addLineClass(active[i], "gutter", GUTT_CLASS);
      }

      cm.state.activeLines = active;
    });
  }

  function selectionChange(cm, sel) {
    updateActiveLines(cm, sel.ranges);
  }
});

/***/ }),

/***/ "oMRA":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/tc39/Array.prototype.includes
var $export = __webpack_require__("X6VK");
var $includes = __webpack_require__("sdkr")(true);

$export($export.P, 'Array', {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

__webpack_require__("OfmW")('includes');


/***/ }),

/***/ "oRxD":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _BarsOutlined = _interopRequireDefault(__webpack_require__("kcW2"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    'default': obj
  };
}

var _default = _BarsOutlined;
exports["default"] = _default;
module.exports = _default;

/***/ }),

/***/ "oV81":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return ping; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return capitalize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return getChinaMirrorHost; });
/* harmony import */ var core_js_modules_es6_regexp_match__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("9ovy");
/* harmony import */ var core_js_modules_es6_regexp_match__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_match__WEBPACK_IMPORTED_MODULE_0__);

var ping = function ping(callback) {
  var url = 'https://private-a' + 'lipay' + 'objects.alip' + 'ay.com/alip' + 'ay-rmsdeploy-image/rmsportal/RKuAiriJqrUhyqW.png';
  var img = new Image();
  var done = false;

  var finish = function finish(status) {
    if (!done) {
      done = true;
      img.src = '';
      callback(status);
    }
  };

  img.onload = function () {
    return finish('responded');
  };

  img.onerror = function () {
    return finish('error');
  };

  img.src = url;
  return setTimeout(function () {
    return finish('timeout');
  }, 1500);
};
var capitalize = function capitalize(s) {
  if (typeof s !== 'string') {
    return '';
  }

  return s.charAt(0).toUpperCase() + s.slice(1);
};
var getChinaMirrorHost = function getChinaMirrorHost(host) {
  var hostString = typeof host === 'undefined' ? window.location.host : host; // antv.vision => antv.gitee.io

  if (hostString === 'antv.vision') {
    return 'antv.gitee.io';
  } // g2plot.antv.vision => antv-g2plot.gitee.io


  var match = hostString.match(/(.*)\.antv\.vision/);

  if (match && match[1]) {
    return "antv-" + match[1] + ".gitee.io";
  }

  return hostString;
};

/***/ }),

/***/ "orKN":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__("P56o");
var each = __webpack_require__("1wfo")(0);
var redefine = __webpack_require__("sU/p");
var meta = __webpack_require__("zIP/");
var assign = __webpack_require__("NR3o");
var weak = __webpack_require__("s14n");
var isObject = __webpack_require__("Bsg+");
var validate = __webpack_require__("SsG5");
var NATIVE_WEAK_MAP = __webpack_require__("SsG5");
var IS_IE11 = !global.ActiveXObject && 'ActiveXObject' in global;
var WEAK_MAP = 'WeakMap';
var getWeak = meta.getWeak;
var isExtensible = Object.isExtensible;
var uncaughtFrozenStore = weak.ufstore;
var InternalMap;

var wrapper = function (get) {
  return function WeakMap() {
    return get(this, arguments.length > 0 ? arguments[0] : undefined);
  };
};

var methods = {
  // 23.3.3.3 WeakMap.prototype.get(key)
  get: function get(key) {
    if (isObject(key)) {
      var data = getWeak(key);
      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);
      return data ? data[this._i] : undefined;
    }
  },
  // 23.3.3.5 WeakMap.prototype.set(key, value)
  set: function set(key, value) {
    return weak.def(validate(this, WEAK_MAP), key, value);
  }
};

// 23.3 WeakMap Objects
var $WeakMap = module.exports = __webpack_require__("AkS8")(WEAK_MAP, wrapper, methods, weak, true, true);

// IE11 WeakMap frozen keys fix
if (NATIVE_WEAK_MAP && IS_IE11) {
  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);
  assign(InternalMap.prototype, methods);
  meta.NEED = true;
  each(['delete', 'has', 'get', 'set'], function (key) {
    var proto = $WeakMap.prototype;
    var method = proto[key];
    redefine(proto, key, function (a, b) {
      // store frozen objects on internal weakmap shim
      if (isObject(a) && !isExtensible(a)) {
        if (!this._f) this._f = new InternalMap();
        var result = this._f[key](a, b);
        return key == 'set' ? this : result;
      // store all the rest on native weakmap
      } return method.call(this, a, b);
    });
  });
}


/***/ }),

/***/ "ov/p":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "p+I5":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _antv_g_base_lib_interfaces__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("KcPA");
/* harmony import */ var _antv_g_base_lib_interfaces__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_antv_g_base_lib_interfaces__WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _antv_g_base_lib_interfaces__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _antv_g_base_lib_interfaces__WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));
// 导出 g-base 中的 interfaces


/***/ }),

/***/ "p1Jl":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toInteger = __webpack_require__("mvii");
var defined = __webpack_require__("GCOZ");

module.exports = function repeat(count) {
  var str = String(defined(this));
  var res = '';
  var n = toInteger(count);
  if (n < 0 || n == Infinity) throw RangeError("Count can't be negative");
  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;
  return res;
};


/***/ }),

/***/ "p82W":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return contains; });
function contains(root, n) {
  var node = n;

  while (node) {
    if (node === root) {
      return true;
    }

    node = node.parentNode;
  }

  return false;
}

/***/ }),

/***/ "pB2m":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("OFVL");
var ITERATOR = __webpack_require__("9dxi")('iterator');
var Iterators = __webpack_require__("Ibj2");
module.exports = __webpack_require__("R5TD").getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),

/***/ "pCvA":
/***/ (function(module, exports) {

var g; // This works in non-strict mode

g = function () {
  return this;
}();

try {
  // This works if eval is allowed (see CSP)
  g = g || new Function("return this")();
} catch (e) {
  // This works if the window reference is available
  if (typeof window === "object") g = window;
} // g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}


module.exports = g;

/***/ }),

/***/ "pGW6":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("GGqZ");
var getKeys = __webpack_require__("LuBU");
var toIObject = __webpack_require__("ml72");
var isEnum = __webpack_require__("IdFN").f;
module.exports = function (isEntries) {
  return function (it) {
    var O = toIObject(it);
    var keys = getKeys(O);
    var length = keys.length;
    var i = 0;
    var result = [];
    var key;
    while (length > i) {
      key = keys[i++];
      if (!DESCRIPTORS || isEnum.call(O, key)) {
        result.push(isEntries ? [key, O[key]] : O[key]);
      }
    }
    return result;
  };
};


/***/ }),

/***/ "pS6Z":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------

var _require = __webpack_require__("sfhO"),
    Error = _require.Error,
    Ok = _require.Ok;
/*~
 * stability: stable
 * authors:
 *   - "@boris-marinov"
 * 
 * type: |
 *   forall a, b:
 *     (Maybe a, b) => Result b a
 */


var maybeToResult = function maybeToResult(aMaybe, failureValue) {
  return aMaybe.matchWith({
    Nothing: function Nothing() {
      return Error(failureValue);
    },
    Just: function Just(_ref) {
      var value = _ref.value;
      return Ok(value);
    }
  });
};

module.exports = maybeToResult;

/***/ }),

/***/ "pU1/":
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__("U1KF");
var anObject = __webpack_require__("PAFS");
var getKeys = __webpack_require__("LuBU");

module.exports = __webpack_require__("GGqZ") ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),

/***/ "phsM":
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "puZ4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__("Vx+c");
var descriptor = __webpack_require__("WWmS");
var setToStringTag = __webpack_require__("jPEw");
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__("tjmq")(IteratorPrototype, __webpack_require__("9dxi")('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),

/***/ "q7lU":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // This icon file is generated automatically.

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var LoadingOutlined = {
  "icon": {
    "tag": "svg",
    "attrs": {
      "viewBox": "0 0 1024 1024",
      "focusable": "false"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "d": "M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 00-94.3-139.9 437.71 437.71 0 00-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z"
      }
    }]
  },
  "name": "loading",
  "theme": "outlined"
};
exports["default"] = LoadingOutlined;

/***/ }),

/***/ "qA3Z":
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "qXhx":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------

/*~
 * stability : stable
 * authors:
 *   - Quildreen Motta
 *
 * complexity : O(n), n is the number of own enumerable properties.
 * type: |
 *   (Object 'a) => Array 'a
 */

__webpack_require__("W1QL");

__webpack_require__("K/PF");

__webpack_require__("t91x");

__webpack_require__("75LO");

__webpack_require__("yIlq");

var values = function values(object) {
  return Object.keys(object).map(function (k) {
    return object[k];
  });
}; // --[ Exports ]-------------------------------------------------------


module.exports = values;

/***/ }),

/***/ "qbl3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("5hJT");

__webpack_require__("d3/y");

var _interopRequireDefault = __webpack_require__("63Ad");

var _interopRequireWildcard = __webpack_require__("vdEC");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var React = _interopRequireWildcard(__webpack_require__("mXGw"));

var _CloseCircleFilled = _interopRequireDefault(__webpack_require__("OeCt"));

var _AntdIcon = _interopRequireDefault(__webpack_require__("CxZ5")); // GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY


var CloseCircleFilled = function CloseCircleFilled(props, ref) {
  return React.createElement(_AntdIcon["default"], Object.assign({}, props, {
    ref: ref,
    icon: _CloseCircleFilled["default"]
  }));
};

CloseCircleFilled.displayName = 'CloseCircleFilled';

var _default = React.forwardRef(CloseCircleFilled);

exports["default"] = _default;

/***/ }),

/***/ "qca1":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "qgos":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

function default_1(shape) {
  var attrs = shape.attr();
  var x = attrs.x,
      y = attrs.y,
      rx = attrs.rx,
      ry = attrs.ry;
  return {
    x: x - rx,
    y: y - ry,
    width: rx * 2,
    height: ry * 2
  };
}

exports["default"] = default_1;

/***/ }),

/***/ "qsLp":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ../node_modules/core-js/modules/web.dom.iterable.js
var web_dom_iterable = __webpack_require__("W1QL");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.iterator.js
var es6_array_iterator = __webpack_require__("K/PF");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.keys.js
var es6_object_keys = __webpack_require__("75LO");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.for-each.js
var es6_array_for_each = __webpack_require__("7lGJ");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.promise.js
var es6_promise = __webpack_require__("DbwS");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.to-string.js
var es6_object_to_string = __webpack_require__("t91x");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.define-property.js
var es6_object_define_property = __webpack_require__("d3/y");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.assign.js
var es6_object_assign = __webpack_require__("5hJT");

// EXTERNAL MODULE: ../node_modules/react/index.js
var react = __webpack_require__("mXGw");

// EXTERNAL MODULE: ../node_modules/rc-notification/es/index.js + 1 modules
var es = __webpack_require__("qtgu");

// EXTERNAL MODULE: ../node_modules/@ant-design/icons/CloseOutlined.js
var CloseOutlined = __webpack_require__("EWXb");
var CloseOutlined_default = /*#__PURE__*/__webpack_require__.n(CloseOutlined);

// EXTERNAL MODULE: ../node_modules/classnames/index.js
var classnames = __webpack_require__("8Jek");
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);

// EXTERNAL MODULE: ../node_modules/@ant-design/icons/CheckCircleOutlined.js
var CheckCircleOutlined = __webpack_require__("fqg9");
var CheckCircleOutlined_default = /*#__PURE__*/__webpack_require__.n(CheckCircleOutlined);

// EXTERNAL MODULE: ../node_modules/@ant-design/icons/CloseCircleOutlined.js
var CloseCircleOutlined = __webpack_require__("aLAR");
var CloseCircleOutlined_default = /*#__PURE__*/__webpack_require__.n(CloseCircleOutlined);

// EXTERNAL MODULE: ../node_modules/@ant-design/icons/ExclamationCircleOutlined.js
var ExclamationCircleOutlined = __webpack_require__("ASIu");
var ExclamationCircleOutlined_default = /*#__PURE__*/__webpack_require__.n(ExclamationCircleOutlined);

// EXTERNAL MODULE: ../node_modules/@ant-design/icons/InfoCircleOutlined.js
var InfoCircleOutlined = __webpack_require__("Avyj");
var InfoCircleOutlined_default = /*#__PURE__*/__webpack_require__.n(InfoCircleOutlined);

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.is-array.js
var es6_array_is_array = __webpack_require__("+3V6");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es7.symbol.async-iterator.js
var es7_symbol_async_iterator = __webpack_require__("+jjx");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.symbol.js
var es6_symbol = __webpack_require__("ABKx");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.string.iterator.js
var es6_string_iterator = __webpack_require__("lQyR");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.from.js
var es6_array_from = __webpack_require__("YhIr");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.function.name.js
var es6_function_name = __webpack_require__("GkPX");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.to-string.js
var es6_regexp_to_string = __webpack_require__("4aJ6");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.date.to-string.js
var es6_date_to_string = __webpack_require__("M/4x");

// EXTERNAL MODULE: ../node_modules/rc-notification/es/useNotification.js
var es_useNotification = __webpack_require__("bIG9");

// EXTERNAL MODULE: ../node_modules/antd/es/config-provider/context.js + 4 modules
var context = __webpack_require__("Bfez");

// CONCATENATED MODULE: ../node_modules/antd/es/notification/hooks/useNotification.js













function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

function _iterableToArrayLimit(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}




function createUseNotification(getNotificationInstance, getRCNoticeProps) {
  var useNotification = function useNotification() {
    // We can only get content by render
    var getPrefixCls; // We create a proxy to handle delay created instance

    var innerInstance = null;
    var proxy = {
      add: function add(noticeProps, holderCallback) {
        innerInstance === null || innerInstance === void 0 ? void 0 : innerInstance.component.add(noticeProps, holderCallback);
      }
    };

    var _useRCNotification = Object(es_useNotification["a" /* default */])(proxy),
        _useRCNotification2 = _slicedToArray(_useRCNotification, 2),
        hookNotify = _useRCNotification2[0],
        holder = _useRCNotification2[1];

    function notify(args) {
      var customizePrefixCls = args.prefixCls;
      var mergedPrefixCls = getPrefixCls('notification', customizePrefixCls);
      getNotificationInstance(_extends(_extends({}, args), {
        prefixCls: mergedPrefixCls
      }), function (_ref) {
        var prefixCls = _ref.prefixCls,
            instance = _ref.instance;
        innerInstance = instance;
        hookNotify(getRCNoticeProps(args, prefixCls));
      });
    } // Fill functions


    var hookApiRef = react["useRef"]({});
    hookApiRef.current.open = notify;
    ['success', 'info', 'warning', 'error'].forEach(function (type) {
      hookApiRef.current[type] = function (args) {
        return hookApiRef.current.open(_extends(_extends({}, args), {
          type: type
        }));
      };
    });
    return [hookApiRef.current, /*#__PURE__*/react["createElement"](context["a" /* ConfigConsumer */], {
      key: "holder"
    }, function (context) {
      getPrefixCls = context.getPrefixCls;
      return holder;
    })];
  };

  return useNotification;
}
// CONCATENATED MODULE: ../node_modules/antd/es/notification/index.js









function notification_extends() {
  notification_extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return notification_extends.apply(this, arguments);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}










var notificationInstance = {};
var defaultDuration = 4.5;
var defaultTop = 24;
var defaultBottom = 24;
var defaultPrefixCls = 'ant-notification';
var defaultPlacement = 'topRight';
var defaultGetContainer;
var defaultCloseIcon;
var rtl = false;

function setNotificationConfig(options) {
  var duration = options.duration,
      placement = options.placement,
      bottom = options.bottom,
      top = options.top,
      getContainer = options.getContainer,
      closeIcon = options.closeIcon,
      prefixCls = options.prefixCls;

  if (prefixCls !== undefined) {
    defaultPrefixCls = prefixCls;
  }

  if (duration !== undefined) {
    defaultDuration = duration;
  }

  if (placement !== undefined) {
    defaultPlacement = placement;
  } else if (options.rtl) {
    defaultPlacement = 'topLeft';
  }

  if (bottom !== undefined) {
    defaultBottom = bottom;
  }

  if (top !== undefined) {
    defaultTop = top;
  }

  if (getContainer !== undefined) {
    defaultGetContainer = getContainer;
  }

  if (closeIcon !== undefined) {
    defaultCloseIcon = closeIcon;
  }

  if (options.rtl !== undefined) {
    rtl = options.rtl;
  }
}

function getPlacementStyle(placement) {
  var top = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultTop;
  var bottom = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultBottom;
  var style;

  switch (placement) {
    case 'topLeft':
      style = {
        left: 0,
        top: top,
        bottom: 'auto'
      };
      break;

    case 'topRight':
      style = {
        right: 0,
        top: top,
        bottom: 'auto'
      };
      break;

    case 'bottomLeft':
      style = {
        left: 0,
        top: 'auto',
        bottom: bottom
      };
      break;

    default:
      style = {
        right: 0,
        top: 'auto',
        bottom: bottom
      };
      break;
  }

  return style;
}

function notification_getNotificationInstance(args, callback) {
  var _args$placement = args.placement,
      placement = _args$placement === void 0 ? defaultPlacement : _args$placement,
      top = args.top,
      bottom = args.bottom,
      _args$getContainer = args.getContainer,
      getContainer = _args$getContainer === void 0 ? defaultGetContainer : _args$getContainer,
      _args$closeIcon = args.closeIcon,
      closeIcon = _args$closeIcon === void 0 ? defaultCloseIcon : _args$closeIcon;
  var outerPrefixCls = args.prefixCls || defaultPrefixCls;
  var prefixCls = "".concat(outerPrefixCls, "-notice");
  var cacheKey = "".concat(outerPrefixCls, "-").concat(placement);
  var cacheInstance = notificationInstance[cacheKey];

  if (cacheInstance) {
    Promise.resolve(cacheInstance).then(function (instance) {
      callback({
        prefixCls: prefixCls,
        instance: instance
      });
    });
    return;
  }

  var closeIconToRender = /*#__PURE__*/react["createElement"]("span", {
    className: "".concat(outerPrefixCls, "-close-x")
  }, closeIcon || /*#__PURE__*/react["createElement"](CloseOutlined_default.a, {
    className: "".concat(outerPrefixCls, "-close-icon")
  }));
  var notificationClass = classnames_default()("".concat(outerPrefixCls, "-").concat(placement), _defineProperty({}, "".concat(outerPrefixCls, "-rtl"), rtl === true));
  notificationInstance[cacheKey] = new Promise(function (resolve) {
    es["a" /* default */].newInstance({
      prefixCls: outerPrefixCls,
      className: notificationClass,
      style: getPlacementStyle(placement, top, bottom),
      getContainer: getContainer,
      closeIcon: closeIconToRender
    }, function (notification) {
      resolve(notification);
      callback({
        prefixCls: prefixCls,
        instance: notification
      });
    });
  });
}

var typeToIcon = {
  success: CheckCircleOutlined_default.a,
  info: InfoCircleOutlined_default.a,
  error: CloseCircleOutlined_default.a,
  warning: ExclamationCircleOutlined_default.a
};

function notification_getRCNoticeProps(args, prefixCls) {
  var duration = args.duration === undefined ? defaultDuration : args.duration;
  var iconNode = null;

  if (args.icon) {
    iconNode = /*#__PURE__*/react["createElement"]("span", {
      className: "".concat(prefixCls, "-icon")
    }, args.icon);
  } else if (args.type) {
    iconNode = /*#__PURE__*/react["createElement"](typeToIcon[args.type] || null, {
      className: "".concat(prefixCls, "-icon ").concat(prefixCls, "-icon-").concat(args.type)
    });
  }

  var autoMarginTag = !args.description && iconNode ? /*#__PURE__*/react["createElement"]("span", {
    className: "".concat(prefixCls, "-message-single-line-auto-margin")
  }) : null;
  return {
    content: /*#__PURE__*/react["createElement"]("div", {
      className: iconNode ? "".concat(prefixCls, "-with-icon") : ''
    }, iconNode, /*#__PURE__*/react["createElement"]("div", {
      className: "".concat(prefixCls, "-message")
    }, autoMarginTag, args.message), /*#__PURE__*/react["createElement"]("div", {
      className: "".concat(prefixCls, "-description")
    }, args.description), args.btn ? /*#__PURE__*/react["createElement"]("span", {
      className: "".concat(prefixCls, "-btn")
    }, args.btn) : null),
    duration: duration,
    closable: true,
    onClose: args.onClose,
    onClick: args.onClick,
    key: args.key,
    style: args.style || {},
    className: args.className
  };
}

var api = {
  open: function open(args) {
    notification_getNotificationInstance(args, function (_ref) {
      var prefixCls = _ref.prefixCls,
          instance = _ref.instance;
      instance.notice(notification_getRCNoticeProps(args, prefixCls));
    });
  },
  close: function close(key) {
    Object.keys(notificationInstance).forEach(function (cacheKey) {
      return Promise.resolve(notificationInstance[cacheKey]).then(function (instance) {
        instance.removeNotice(key);
      });
    });
  },
  config: setNotificationConfig,
  destroy: function destroy() {
    Object.keys(notificationInstance).forEach(function (cacheKey) {
      Promise.resolve(notificationInstance[cacheKey]).then(function (instance) {
        instance.destroy();
      });
      delete notificationInstance[cacheKey]; // lgtm[js/missing-await]
    });
  }
};
['success', 'info', 'warning', 'error'].forEach(function (type) {
  api[type] = function (args) {
    return api.open(notification_extends(notification_extends({}, args), {
      type: type
    }));
  };
});
api.warn = api.warning;
api.useNotification = createUseNotification(notification_getNotificationInstance, notification_getRCNoticeProps);
/* harmony default export */ var notification = __webpack_exports__["a"] = (api);

/***/ }),

/***/ "qtgu":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.assign.js
var es6_object_assign = __webpack_require__("5hJT");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.function.bind.js
var es6_function_bind = __webpack_require__("o7PZ");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.map.js
var es6_array_map = __webpack_require__("yIlq");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.index-of.js
var es6_array_index_of = __webpack_require__("V7cS");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.string.iterator.js
var es6_string_iterator = __webpack_require__("lQyR");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.map.js
var es6_map = __webpack_require__("zx98");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.date.now.js
var es6_date_now = __webpack_require__("7t+O");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.to-string.js
var es6_regexp_to_string = __webpack_require__("4aJ6");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.date.to-string.js
var es6_date_to_string = __webpack_require__("M/4x");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.reflect.construct.js
var es6_reflect_construct = __webpack_require__("LXYL");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.define-property.js
var es6_object_define_property = __webpack_require__("d3/y");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.define-properties.js
var es6_object_define_properties = __webpack_require__("6/FK");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es7.object.get-own-property-descriptors.js
var es7_object_get_own_property_descriptors = __webpack_require__("2Tod");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.for-each.js
var es6_array_for_each = __webpack_require__("7lGJ");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.filter.js
var es6_array_filter = __webpack_require__("9p7t");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.symbol.js
var es6_symbol = __webpack_require__("ABKx");

// EXTERNAL MODULE: ../node_modules/core-js/modules/web.dom.iterable.js
var web_dom_iterable = __webpack_require__("W1QL");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.iterator.js
var es6_array_iterator = __webpack_require__("K/PF");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.to-string.js
var es6_object_to_string = __webpack_require__("t91x");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.keys.js
var es6_object_keys = __webpack_require__("75LO");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js + 1 modules
var objectWithoutProperties = __webpack_require__("dV/x");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__("mK0O");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/classCallCheck.js
var classCallCheck = __webpack_require__("hisu");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/createClass.js
var createClass = __webpack_require__("yBJb");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/inherits.js + 1 modules
var inherits = __webpack_require__("CHlC");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js
var possibleConstructorReturn = __webpack_require__("kMo5");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js
var getPrototypeOf = __webpack_require__("P+uj");

// EXTERNAL MODULE: ../node_modules/react/index.js
var react = __webpack_require__("mXGw");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../node_modules/react-dom/index.js
var react_dom = __webpack_require__("xARA");
var react_dom_default = /*#__PURE__*/__webpack_require__.n(react_dom);

// EXTERNAL MODULE: ../node_modules/rc-animate/es/Animate.js + 5 modules
var Animate = __webpack_require__("YSJY");

// EXTERNAL MODULE: ../node_modules/rc-util/es/createChainedFunction.js
var createChainedFunction = __webpack_require__("eDOA");

// EXTERNAL MODULE: ../node_modules/classnames/index.js
var classnames = __webpack_require__("8Jek");
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);

// EXTERNAL MODULE: ../node_modules/rc-notification/es/Notice.js
var Notice = __webpack_require__("w37R");

// EXTERNAL MODULE: ../node_modules/rc-notification/es/useNotification.js
var es_useNotification = __webpack_require__("bIG9");

// CONCATENATED MODULE: ../node_modules/rc-notification/es/Notification.js




























function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        Object(defineProperty["a" /* default */])(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();

  return function () {
    var Super = Object(getPrototypeOf["a" /* default */])(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = Object(getPrototypeOf["a" /* default */])(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return Object(possibleConstructorReturn["a" /* default */])(this, result);
  };
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}








var seed = 0;
var now = Date.now();

function getUuid() {
  var id = seed;
  seed += 1;
  return "rcNotification_".concat(now, "_").concat(id);
}

var Notification_Notification = /*#__PURE__*/function (_Component) {
  Object(inherits["a" /* default */])(Notification, _Component);

  var _super = _createSuper(Notification);

  function Notification() {
    var _this;

    Object(classCallCheck["a" /* default */])(this, Notification);

    _this = _super.apply(this, arguments);
    _this.state = {
      notices: []
    };
    _this.hookRefs = new Map();

    _this.add = function (notice, holderCallback) {
      // eslint-disable-next-line no-param-reassign
      notice.key = notice.key || getUuid();
      var key = notice.key;
      var maxCount = _this.props.maxCount;

      _this.setState(function (previousState) {
        var notices = previousState.notices;
        var noticeIndex = notices.map(function (v) {
          return v.notice.key;
        }).indexOf(key);
        var updatedNotices = notices.concat();

        if (noticeIndex !== -1) {
          updatedNotices.splice(noticeIndex, 1, {
            notice: notice,
            holderCallback: holderCallback
          });
        } else {
          if (maxCount && notices.length >= maxCount) {
            // XXX, use key of first item to update new added (let React to move exsiting
            // instead of remove and mount). Same key was used before for both a) external
            // manual control and b) internal react 'key' prop , which is not that good.
            // eslint-disable-next-line no-param-reassign
            notice.updateKey = updatedNotices[0].notice.updateKey || updatedNotices[0].notice.key;
            updatedNotices.shift();
          }

          updatedNotices.push({
            notice: notice,
            holderCallback: holderCallback
          });
        }

        return {
          notices: updatedNotices
        };
      });
    };

    _this.remove = function (key) {
      _this.setState(function (previousState) {
        return {
          notices: previousState.notices.filter(function (_ref) {
            var notice = _ref.notice;
            return notice.key !== key;
          })
        };
      });
    };

    return _this;
  }

  Object(createClass["a" /* default */])(Notification, [{
    key: "getTransitionName",
    value: function getTransitionName() {
      var _this$props = this.props,
          prefixCls = _this$props.prefixCls,
          animation = _this$props.animation;
      var transitionName = this.props.transitionName;

      if (!transitionName && animation) {
        transitionName = "".concat(prefixCls, "-").concat(animation);
      }

      return transitionName;
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var notices = this.state.notices;
      var _this$props2 = this.props,
          prefixCls = _this$props2.prefixCls,
          className = _this$props2.className,
          closeIcon = _this$props2.closeIcon,
          style = _this$props2.style;
      var noticeNodes = notices.map(function (_ref2, index) {
        var notice = _ref2.notice,
            holderCallback = _ref2.holderCallback;
        var update = Boolean(index === notices.length - 1 && notice.updateKey);
        var key = notice.updateKey ? notice.updateKey : notice.key;
        var onClose = Object(createChainedFunction["a" /* default */])(_this2.remove.bind(_this2, notice.key), notice.onClose);

        var noticeProps = _objectSpread(_objectSpread(_objectSpread({
          prefixCls: prefixCls,
          closeIcon: closeIcon
        }, notice), notice.props), {}, {
          key: key,
          update: update,
          onClose: onClose,
          onClick: notice.onClick,
          children: notice.content
        });

        if (holderCallback) {
          return react_default.a.createElement("div", {
            key: key,
            className: "".concat(prefixCls, "-hook-holder"),
            ref: function ref(div) {
              if (typeof key === 'undefined') {
                return;
              }

              if (div) {
                _this2.hookRefs.set(key, div);

                holderCallback(div, noticeProps);
              } else {
                _this2.hookRefs["delete"](key);
              }
            }
          });
        }

        return react_default.a.createElement(Notice["a" /* default */], Object.assign({}, noticeProps));
      });
      return react_default.a.createElement("div", {
        className: classnames_default()(prefixCls, className),
        style: style
      }, react_default.a.createElement(Animate["a" /* default */], {
        transitionName: this.getTransitionName()
      }, noticeNodes));
    }
  }]);

  return Notification;
}(react["Component"]);

Notification_Notification.defaultProps = {
  prefixCls: 'rc-notification',
  animation: 'fade',
  style: {
    top: 65,
    left: '50%'
  }
};

Notification_Notification.newInstance = function newNotificationInstance(properties, callback) {
  var _ref3 = properties || {},
      getContainer = _ref3.getContainer,
      props = Object(objectWithoutProperties["a" /* default */])(_ref3, ["getContainer"]);

  var div = document.createElement('div');

  if (getContainer) {
    var root = getContainer();
    root.appendChild(div);
  } else {
    document.body.appendChild(div);
  }

  var called = false;

  function ref(notification) {
    if (called) {
      return;
    }

    called = true;
    callback({
      notice: function notice(noticeProps) {
        notification.add(noticeProps);
      },
      removeNotice: function removeNotice(key) {
        notification.remove(key);
      },
      component: notification,
      destroy: function destroy() {
        react_dom_default.a.unmountComponentAtNode(div);

        if (div.parentNode) {
          div.parentNode.removeChild(div);
        }
      },
      // Hooks
      useNotification: function useNotification() {
        return Object(es_useNotification["a" /* default */])(notification);
      }
    });
  } // Only used for test case usage


  if (false) {}

  react_dom_default.a.render(react_default.a.createElement(Notification_Notification, Object.assign({}, props, {
    ref: ref
  })), div);
};

/* harmony default export */ var es_Notification = (Notification_Notification);
// CONCATENATED MODULE: ../node_modules/rc-notification/es/index.js

/* harmony default export */ var es = __webpack_exports__["a"] = (es_Notification);

/***/ }),

/***/ "quyU":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("W1QL");

__webpack_require__("K/PF");

__webpack_require__("t91x");

__webpack_require__("75LO");

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var is_object_like_1 = __webpack_require__("JHqH");

var is_array_like_1 = __webpack_require__("lVii");

var is_string_1 = __webpack_require__("bLny");

var isEqual = function isEqual(value, other) {
  if (value === other) {
    return true;
  }

  if (!value || !other) {
    return false;
  }

  if (is_string_1["default"](value) || is_string_1["default"](other)) {
    return false;
  }

  if (is_array_like_1["default"](value) || is_array_like_1["default"](other)) {
    if (value.length !== other.length) {
      return false;
    }

    var rst = true;

    for (var i = 0; i < value.length; i++) {
      rst = isEqual(value[i], other[i]);

      if (!rst) {
        break;
      }
    }

    return rst;
  }

  if (is_object_like_1["default"](value) || is_object_like_1["default"](other)) {
    var valueKeys = Object.keys(value);
    var otherKeys = Object.keys(other);

    if (valueKeys.length !== otherKeys.length) {
      return false;
    }

    var rst = true;

    for (var i = 0; i < valueKeys.length; i++) {
      rst = isEqual(value[valueKeys[i]], other[valueKeys[i]]);

      if (!rst) {
        break;
      }
    }

    return rst;
  }

  return false;
};

exports["default"] = isEqual;

/***/ }),

/***/ "r/sL":
/***/ (function(module, exports) {

module.exports = function _arity(n, fn) {
  /* eslint-disable no-unused-vars */
  switch (n) {
    case 0:
      return function () {
        return fn.apply(this, arguments);
      };

    case 1:
      return function (a0) {
        return fn.apply(this, arguments);
      };

    case 2:
      return function (a0, a1) {
        return fn.apply(this, arguments);
      };

    case 3:
      return function (a0, a1, a2) {
        return fn.apply(this, arguments);
      };

    case 4:
      return function (a0, a1, a2, a3) {
        return fn.apply(this, arguments);
      };

    case 5:
      return function (a0, a1, a2, a3, a4) {
        return fn.apply(this, arguments);
      };

    case 6:
      return function (a0, a1, a2, a3, a4, a5) {
        return fn.apply(this, arguments);
      };

    case 7:
      return function (a0, a1, a2, a3, a4, a5, a6) {
        return fn.apply(this, arguments);
      };

    case 8:
      return function (a0, a1, a2, a3, a4, a5, a6, a7) {
        return fn.apply(this, arguments);
      };

    case 9:
      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {
        return fn.apply(this, arguments);
      };

    case 10:
      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
        return fn.apply(this, arguments);
      };

    default:
      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');
  }
};

/***/ }),

/***/ "r8tM":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("5hJT");

__webpack_require__("d3/y");

var _interopRequireDefault = __webpack_require__("63Ad");

var _interopRequireWildcard = __webpack_require__("vdEC");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var React = _interopRequireWildcard(__webpack_require__("mXGw"));

var _InfoCircleOutlined = _interopRequireDefault(__webpack_require__("USUc"));

var _AntdIcon = _interopRequireDefault(__webpack_require__("CxZ5")); // GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY


var InfoCircleOutlined = function InfoCircleOutlined(props, ref) {
  return React.createElement(_AntdIcon["default"], Object.assign({}, props, {
    ref: ref,
    icon: _InfoCircleOutlined["default"]
  }));
};

InfoCircleOutlined.displayName = 'InfoCircleOutlined';

var _default = React.forwardRef(InfoCircleOutlined);

exports["default"] = _default;

/***/ }),

/***/ "rKUe":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var util_1 = __webpack_require__("B+TZ"); // 向量长度


function vMag(v) {
  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);
} // u.v/|u||v|，计算夹角的余弦值


function vRatio(u, v) {
  // 当存在一个向量的长度为 0 时，夹角也为 0，即夹角的余弦值为 1
  return vMag(u) * vMag(v) ? (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v)) : 1;
} // 向量角度


function vAngle(u, v) {
  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));
} // A 0:rx 1:ry 2:x-axis-rotation 3:large-arc-flag 4:sweep-flag 5: x 6: y


function getArcParams(startPoint, params) {
  var rx = params[1];
  var ry = params[2];
  var xRotation = util_1.mod(util_1.toRadian(params[3]), Math.PI * 2);
  var arcFlag = params[4];
  var sweepFlag = params[5]; // 弧形起点坐标

  var x1 = startPoint[0];
  var y1 = startPoint[1]; // 弧形终点坐标

  var x2 = params[6];
  var y2 = params[7];
  var xp = Math.cos(xRotation) * (x1 - x2) / 2.0 + Math.sin(xRotation) * (y1 - y2) / 2.0;
  var yp = -1 * Math.sin(xRotation) * (x1 - x2) / 2.0 + Math.cos(xRotation) * (y1 - y2) / 2.0;
  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);

  if (lambda > 1) {
    rx *= Math.sqrt(lambda);
    ry *= Math.sqrt(lambda);
  }

  var diff = rx * rx * (yp * yp) + ry * ry * (xp * xp);
  var f = diff ? Math.sqrt((rx * rx * (ry * ry) - diff) / diff) : 1;

  if (arcFlag === sweepFlag) {
    f *= -1;
  }

  if (isNaN(f)) {
    f = 0;
  } // 旋转前的起点坐标，且当长半轴和短半轴的长度为 0 时，坐标按 (0, 0) 处理


  var cxp = ry ? f * rx * yp / ry : 0;
  var cyp = rx ? f * -ry * xp / rx : 0; // 椭圆圆心坐标

  var cx = (x1 + x2) / 2.0 + Math.cos(xRotation) * cxp - Math.sin(xRotation) * cyp;
  var cy = (y1 + y2) / 2.0 + Math.sin(xRotation) * cxp + Math.cos(xRotation) * cyp; // 起始点的单位向量

  var u = [(xp - cxp) / rx, (yp - cyp) / ry]; // 终止点的单位向量

  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry]; // 计算起始点和圆心的连线，与 x 轴正方向的夹角

  var theta = vAngle([1, 0], u); // 计算圆弧起始点和终止点与椭圆圆心连线的夹角

  var dTheta = vAngle(u, v);

  if (vRatio(u, v) <= -1) {
    dTheta = Math.PI;
  }

  if (vRatio(u, v) >= 1) {
    dTheta = 0;
  }

  if (sweepFlag === 0 && dTheta > 0) {
    dTheta = dTheta - 2 * Math.PI;
  }

  if (sweepFlag === 1 && dTheta < 0) {
    dTheta = dTheta + 2 * Math.PI;
  }

  return {
    cx: cx,
    cy: cy,
    // 弧形的起点和终点相同时，长轴和短轴的长度按 0 处理
    rx: util_1.isSamePoint(startPoint, [x2, y2]) ? 0 : rx,
    ry: util_1.isSamePoint(startPoint, [x2, y2]) ? 0 : ry,
    startAngle: theta,
    endAngle: theta + dTheta,
    xRotation: xRotation,
    arcFlag: arcFlag,
    sweepFlag: sweepFlag
  };
}

exports["default"] = getArcParams;

/***/ }),

/***/ "rQBY":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var now = __webpack_require__("TGEZ"),
    root = typeof window === 'undefined' ? global : window,
    vendors = ['moz', 'webkit'],
    suffix = 'AnimationFrame',
    raf = root['request' + suffix],
    caf = root['cancel' + suffix] || root['cancelRequest' + suffix];

for (var i = 0; !raf && i < vendors.length; i++) {
  raf = root[vendors[i] + 'Request' + suffix];
  caf = root[vendors[i] + 'Cancel' + suffix] || root[vendors[i] + 'CancelRequest' + suffix];
} // Some versions of FF have rAF but not cAF


if (!raf || !caf) {
  var last = 0,
      id = 0,
      queue = [],
      frameDuration = 1000 / 60;

  raf = function raf(callback) {
    if (queue.length === 0) {
      var _now = now(),
          next = Math.max(0, frameDuration - (_now - last));

      last = next + _now;
      setTimeout(function () {
        var cp = queue.slice(0); // Clear queue here to prevent
        // callbacks from appending listeners
        // to the current frame's queue

        queue.length = 0;

        for (var i = 0; i < cp.length; i++) {
          if (!cp[i].cancelled) {
            try {
              cp[i].callback(last);
            } catch (e) {
              setTimeout(function () {
                throw e;
              }, 0);
            }
          }
        }
      }, Math.round(next));
    }

    queue.push({
      handle: ++id,
      callback: callback,
      cancelled: false
    });
    return id;
  };

  caf = function caf(handle) {
    for (var i = 0; i < queue.length; i++) {
      if (queue[i].handle === handle) {
        queue[i].cancelled = true;
      }
    }
  };
}

module.exports = function (fn) {
  // Wrap in a new function to prevent
  // `cancel` potentially being assigned
  // to the native rAF function
  return raf.call(root, fn);
};

module.exports.cancel = function () {
  caf.apply(root, arguments);
};

module.exports.polyfill = function (object) {
  if (!object) {
    object = root;
  }

  object.requestAnimationFrame = raf;
  object.cancelAnimationFrame = caf;
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("pCvA")))

/***/ }),

/***/ "rpsq":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("J8hF");

__webpack_require__("9ovy");

__webpack_require__("nsbO");

// CodeMirror, copyright (c) by Marijn Haverbeke and others
// Distributed under an MIT license: https://codemirror.net/LICENSE
(function (mod) {
  if (true) // CommonJS
    mod(__webpack_require__("Dln1"), __webpack_require__("KvMB"), __webpack_require__("Bi0q"), __webpack_require__("I2ZI"));else {}
})(function (CodeMirror) {
  "use strict";

  var defaultTags = {
    script: [["lang", /(javascript|babel)/i, "javascript"], ["type", /^(?:text|application)\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, "javascript"], ["type", /./, "text/plain"], [null, null, "javascript"]],
    style: [["lang", /^css$/i, "css"], ["type", /^(text\/)?(x-)?(stylesheet|css)$/i, "css"], ["type", /./, "text/plain"], [null, null, "css"]]
  };

  function maybeBackup(stream, pat, style) {
    var cur = stream.current(),
        close = cur.search(pat);

    if (close > -1) {
      stream.backUp(cur.length - close);
    } else if (cur.match(/<\/?$/)) {
      stream.backUp(cur.length);
      if (!stream.match(pat, false)) stream.match(cur);
    }

    return style;
  }

  var attrRegexpCache = {};

  function getAttrRegexp(attr) {
    var regexp = attrRegexpCache[attr];
    if (regexp) return regexp;
    return attrRegexpCache[attr] = new RegExp("\\s+" + attr + "\\s*=\\s*('|\")?([^'\"]+)('|\")?\\s*");
  }

  function getAttrValue(text, attr) {
    var match = text.match(getAttrRegexp(attr));
    return match ? /^\s*(.*?)\s*$/.exec(match[2])[1] : "";
  }

  function getTagRegexp(tagName, anchored) {
    return new RegExp((anchored ? "^" : "") + "<\/\s*" + tagName + "\s*>", "i");
  }

  function addTags(from, to) {
    for (var tag in from) {
      var dest = to[tag] || (to[tag] = []);
      var source = from[tag];

      for (var i = source.length - 1; i >= 0; i--) {
        dest.unshift(source[i]);
      }
    }
  }

  function findMatchingMode(tagInfo, tagText) {
    for (var i = 0; i < tagInfo.length; i++) {
      var spec = tagInfo[i];
      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];
    }
  }

  CodeMirror.defineMode("htmlmixed", function (config, parserConfig) {
    var htmlMode = CodeMirror.getMode(config, {
      name: "xml",
      htmlMode: true,
      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,
      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag
    });
    var tags = {};
    var configTags = parserConfig && parserConfig.tags,
        configScript = parserConfig && parserConfig.scriptTypes;
    addTags(defaultTags, tags);
    if (configTags) addTags(configTags, tags);
    if (configScript) for (var i = configScript.length - 1; i >= 0; i--) {
      tags.script.unshift(["type", configScript[i].matches, configScript[i].mode]);
    }

    function html(stream, state) {
      var style = htmlMode.token(stream, state.htmlState),
          tag = /\btag\b/.test(style),
          tagName;

      if (tag && !/[<>\s\/]/.test(stream.current()) && (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) && tags.hasOwnProperty(tagName)) {
        state.inTag = tagName + " ";
      } else if (state.inTag && tag && />$/.test(stream.current())) {
        var inTag = /^([\S]+) (.*)/.exec(state.inTag);
        state.inTag = null;
        var modeSpec = stream.current() == ">" && findMatchingMode(tags[inTag[1]], inTag[2]);
        var mode = CodeMirror.getMode(config, modeSpec);
        var endTagA = getTagRegexp(inTag[1], true),
            endTag = getTagRegexp(inTag[1], false);

        state.token = function (stream, state) {
          if (stream.match(endTagA, false)) {
            state.token = html;
            state.localState = state.localMode = null;
            return null;
          }

          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));
        };

        state.localMode = mode;
        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, "", ""));
      } else if (state.inTag) {
        state.inTag += stream.current();
        if (stream.eol()) state.inTag += " ";
      }

      return style;
    }

    ;
    return {
      startState: function startState() {
        var state = CodeMirror.startState(htmlMode);
        return {
          token: html,
          inTag: null,
          localMode: null,
          localState: null,
          htmlState: state
        };
      },
      copyState: function copyState(state) {
        var local;

        if (state.localState) {
          local = CodeMirror.copyState(state.localMode, state.localState);
        }

        return {
          token: state.token,
          inTag: state.inTag,
          localMode: state.localMode,
          localState: local,
          htmlState: CodeMirror.copyState(htmlMode, state.htmlState)
        };
      },
      token: function token(stream, state) {
        return state.token(stream, state);
      },
      indent: function indent(state, textAfter, line) {
        if (!state.localMode || /^\s*<\//.test(textAfter)) return htmlMode.indent(state.htmlState, textAfter, line);else if (state.localMode.indent) return state.localMode.indent(state.localState, textAfter, line);else return CodeMirror.Pass;
      },
      innerMode: function innerMode(state) {
        return {
          state: state.localState || state.htmlState,
          mode: state.localMode || htmlMode
        };
      }
    };
  }, "xml", "javascript", "css");
  CodeMirror.defineMIME("text/html", "htmlmixed");
});

/***/ }),

/***/ "rwvH":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _RightOutlined = _interopRequireDefault(__webpack_require__("8rx3"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    'default': obj
  };
}

var _default = _RightOutlined;
exports["default"] = _default;
module.exports = _default;

/***/ }),

/***/ "rzlk":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("5hJT");
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("mXGw");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _page_renderer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("IOVJ");
var ProdPageRenderer=function ProdPageRenderer(_ref){var location=_ref.location,pageResources=_ref.pageResources;if(!pageResources){return null;}return/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_page_renderer__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"],Object.assign({location:location,pageResources:pageResources},pageResources.json));};/* harmony default export */ __webpack_exports__["default"] = (ProdPageRenderer);

/***/ }),

/***/ "s14n":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var redefineAll = __webpack_require__("+edc");
var getWeak = __webpack_require__("zIP/").getWeak;
var anObject = __webpack_require__("PAFS");
var isObject = __webpack_require__("Bsg+");
var anInstance = __webpack_require__("EusA");
var forOf = __webpack_require__("HqX2");
var createArrayMethod = __webpack_require__("1wfo");
var $has = __webpack_require__("ezc+");
var validate = __webpack_require__("SsG5");
var arrayFind = createArrayMethod(5);
var arrayFindIndex = createArrayMethod(6);
var id = 0;

// fallback for uncaught frozen keys
var uncaughtFrozenStore = function (that) {
  return that._l || (that._l = new UncaughtFrozenStore());
};
var UncaughtFrozenStore = function () {
  this.a = [];
};
var findUncaughtFrozen = function (store, key) {
  return arrayFind(store.a, function (it) {
    return it[0] === key;
  });
};
UncaughtFrozenStore.prototype = {
  get: function (key) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) return entry[1];
  },
  has: function (key) {
    return !!findUncaughtFrozen(this, key);
  },
  set: function (key, value) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) entry[1] = value;
    else this.a.push([key, value]);
  },
  'delete': function (key) {
    var index = arrayFindIndex(this.a, function (it) {
      return it[0] === key;
    });
    if (~index) this.a.splice(index, 1);
    return !!~index;
  }
};

module.exports = {
  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, NAME, '_i');
      that._t = NAME;      // collection type
      that._i = id++;      // collection id
      that._l = undefined; // leak store for uncaught frozen objects
      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.3.3.2 WeakMap.prototype.delete(key)
      // 23.4.3.3 WeakSet.prototype.delete(value)
      'delete': function (key) {
        if (!isObject(key)) return false;
        var data = getWeak(key);
        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);
        return data && $has(data, this._i) && delete data[this._i];
      },
      // 23.3.3.4 WeakMap.prototype.has(key)
      // 23.4.3.4 WeakSet.prototype.has(value)
      has: function has(key) {
        if (!isObject(key)) return false;
        var data = getWeak(key);
        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);
        return data && $has(data, this._i);
      }
    });
    return C;
  },
  def: function (that, key, value) {
    var data = getWeak(anObject(key), true);
    if (data === true) uncaughtFrozenStore(that).set(key, value);
    else data[that._i] = value;
    return that;
  },
  ufstore: uncaughtFrozenStore
};


/***/ }),

/***/ "sLzF":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("yIlq");

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var point_in_polygon_1 = __webpack_require__("Ove1");

var get_line_intersect_1 = __webpack_require__("G0eR");

var util_1 = __webpack_require__("NFQX");

function parseToLines(points) {
  var lines = [];
  var count = points.length;

  for (var i = 0; i < count - 1; i++) {
    var point = points[i];
    var next = points[i + 1];
    lines.push({
      from: {
        x: point[0],
        y: point[1]
      },
      to: {
        x: next[0],
        y: next[1]
      }
    });
  }

  if (lines.length > 1) {
    var first = points[0];
    var last = points[count - 1];
    lines.push({
      from: {
        x: last[0],
        y: last[1]
      },
      to: {
        x: first[0],
        y: first[1]
      }
    });
  }

  return lines;
}

function lineIntersectPolygon(lines, line) {
  var isIntersect = false;
  util_1.each(lines, function (l) {
    if (get_line_intersect_1["default"](l.from, l.to, line.from, line.to)) {
      isIntersect = true;
      return false;
    }
  });
  return isIntersect;
}

function getBBox(points) {
  var xArr = points.map(function (p) {
    return p[0];
  });
  var yArr = points.map(function (p) {
    return p[1];
  });
  return {
    minX: Math.min.apply(null, xArr),
    maxX: Math.max.apply(null, xArr),
    minY: Math.min.apply(null, yArr),
    maxY: Math.max.apply(null, yArr)
  };
}

function intersectBBox(box1, box2) {
  return !(box2.minX > box1.maxX || box2.maxX < box1.minX || box2.minY > box1.maxY || box2.maxY < box1.minY);
}

function isPolygonsIntersect(points1, points2) {
  // 空数组，或者一个点返回 false
  if (points1.length < 2 || points2.length < 2) {
    return false;
  }

  var bbox1 = getBBox(points1);
  var bbox2 = getBBox(points2); // 判定包围盒是否相交，比判定点是否在多边形内要快的多，可以筛选掉大多数情况

  if (!intersectBBox(bbox1, bbox2)) {
    return false;
  }

  var isIn = false; // 判定点是否在多边形内部，一旦有一个点在另一个多边形内，则返回

  util_1.each(points2, function (point) {
    if (point_in_polygon_1["default"](points1, point[0], point[1])) {
      isIn = true;
      return false;
    }
  });

  if (isIn) {
    return true;
  } // 两个多边形都需要判定


  util_1.each(points1, function (point) {
    if (point_in_polygon_1["default"](points2, point[0], point[1])) {
      isIn = true;
      return false;
    }
  });

  if (isIn) {
    return true;
  }

  var lines1 = parseToLines(points1);
  var lines2 = parseToLines(points2);
  var isIntersect = false;
  util_1.each(lines2, function (line) {
    if (lineIntersectPolygon(lines1, line)) {
      isIntersect = true;
      return false;
    }
  });
  return isIntersect;
}

exports["default"] = isPolygonsIntersect;

/***/ }),

/***/ "sMOp":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------

/*~
 * stability: experimental
 * name: module folktale/adt/union
 */

module.exports = {
  union: __webpack_require__("vgDc"),
  derivations: __webpack_require__("foH5")
};

/***/ }),

/***/ "sU/p":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("P56o");
var hide = __webpack_require__("tjmq");
var has = __webpack_require__("ezc+");
var SRC = __webpack_require__("1Alt")('src');
var $toString = __webpack_require__("JGfN");
var TO_STRING = 'toString';
var TPL = ('' + $toString).split(TO_STRING);

__webpack_require__("R5TD").inspectSource = function (it) {
  return $toString.call(it);
};

(module.exports = function (O, key, val, safe) {
  var isFunction = typeof val == 'function';
  if (isFunction) has(val, 'name') || hide(val, 'name', key);
  if (O[key] === val) return;
  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
  if (O === global) {
    O[key] = val;
  } else if (!safe) {
    delete O[key];
    hide(O, key, val);
  } else if (O[key]) {
    O[key] = val;
  } else {
    hide(O, key, val);
  }
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, TO_STRING, function toString() {
  return typeof this == 'function' && this[SRC] || $toString.call(this);
});


/***/ }),

/***/ "sZHf":
/***/ (function(module, exports, __webpack_require__) {

var React = __webpack_require__("mXGw");

function ExternalLink (props) {
    return React.createElement("svg",props,React.createElement("path",{"d":"M 5 3 C 3.9069372 3 3 3.9069372 3 5 L 3 19 C 3 20.093063 3.9069372 21 5 21 L 19 21 C 20.093063 21 21 20.093063 21 19 L 21 12 L 19 12 L 19 19 L 5 19 L 5 5 L 12 5 L 12 3 L 5 3 z M 14 3 L 14 5 L 17.585938 5 L 8.2929688 14.292969 L 9.7070312 15.707031 L 19 6.4140625 L 19 10 L 21 10 L 21 3 L 14 3 z"}));
}

ExternalLink.defaultProps = {"width":"24","height":"24","fill":"#000","viewBox":"0 0 24 24"};

module.exports = ExternalLink;

ExternalLink.default = ExternalLink;


/***/ }),

/***/ "sbMj":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _style_index_less__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("SwVN");
/* harmony import */ var _style_index_less__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_index_less__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("2jw+");
/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_index_less__WEBPACK_IMPORTED_MODULE_1__);



/***/ }),

/***/ "sdkr":
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__("ml72");
var toLength = __webpack_require__("Sp5b");
var toAbsoluteIndex = __webpack_require__("BUlT");
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),

/***/ "sfhO":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------

__webpack_require__("5hJT");

__webpack_require__("yIlq");

var assertType = __webpack_require__("yCBR");

var assertFunction = __webpack_require__("nAPr");

var _require = __webpack_require__("sMOp"),
    union = _require.union,
    derivations = _require.derivations;

var provideAliases = __webpack_require__("JiyH");

var adtMethods = __webpack_require__("cl25");

var extend = __webpack_require__("0ONX");

var warnDeprecation = __webpack_require__("GFZo");

var equality = derivations.equality,
    debugRepresentation = derivations.debugRepresentation,
    serialization = derivations.serialization;
/*~ stability: stable */

var Result = union('folktale:Result', {
  /*~
   * stability: stable
   * type: |
   *   forall a, b: (a) => Result a b
   */
  Error: function Error(value) {
    return {
      value: value
    };
  },

  /*~
   * stability: stable
   * type: |
   *   forall a, b: (b) => Result a b
   */
  Ok: function Ok(value) {
    return {
      value: value
    };
  }
}).derive(equality, debugRepresentation, serialization);
var Error = Result.Error,
    Ok = Result.Ok;
var assertResult = assertType(Result);
extend(Error.prototype, {
  /*~
   * isRequired: true
   * type: |
   *   forall a, b: get (Result a b) => a
   */
  get value() {
    throw new TypeError('`value` can’t be accessed in an abstract instance of Result.Error');
  }

});
extend(Ok.prototype, {
  /*~
   * isRequired: true
   * type: |
   *   forall a, b: get (Result a b) => b
   */
  get value() {
    throw new TypeError('`value` can’t be accessed in an abstract instance of Result.Ok');
  }

});
/*~
 * ~belongsTo: Result
 */

adtMethods(Result, {
  /*~
   * stability: stable
   * type: |
   *   forall a, b, c:
   *     (Result a b).((b) => c) => Result a c
   */
  map: {
    /*~*/
    Error: function map(f) {
      assertFunction('Result.Error#map', f);
      return this;
    },

    /*~*/
    Ok: function map(f) {
      assertFunction('Result.Ok#map', f);
      return Ok(f(this.value));
    }
  },

  /*~
   * stability: stable
   * type: |
   *   forall a, b, c:
   *     (Result a ((b) => c)).(Result a b) => Result a c
   */
  apply: {
    /*~*/
    Error: function apply(anResult) {
      assertResult('Result.Error#apply', anResult);
      return this;
    },

    /*~*/
    Ok: function apply(anResult) {
      assertResult('Result.Ok#apply', anResult);
      return anResult.map(this.value);
    }
  },

  /*~
   * stability: stable
   * type: |
   *   forall a, b, c:
   *     (Result a b).((b) => Result a c) => Result a c
   */
  chain: {
    /*~*/
    Error: function chain(f) {
      assertFunction('Result.Error#chain', f);
      return this;
    },

    /*~*/
    Ok: function chain(f) {
      assertFunction('Result.Ok#chain', f);
      return f(this.value);
    }
  },

  /*~
   * stability: stable
   * type: |
   *   forall a, b: (Result a b).() => b :: throws TypeError
   */
  unsafeGet: {
    /*~*/
    Error: function unsafeGet() {
      throw new TypeError('Can\'t extract the value of an Error.\n\nError does not contain a normal value - it contains an error.\nYou might consider switching from Result#unsafeGet to Result#getOrElse,\nor some other method that is not partial.\n      ');
    },

    /*~*/
    Ok: function unsafeGet() {
      return this.value;
    }
  },

  /*~
   * stability: stable
   * type: |
   *   forall a, b: (Result a b).(b) => b
   */
  getOrElse: {
    /*~*/
    Error: function getOrElse(_default) {
      return _default;
    },

    /*~*/
    Ok: function getOrElse(_default) {
      return this.value;
    }
  },

  /*~
   * stability: stable
   * type: |
   *   forall a, b, c:
   *     (Result a b).((a) => Result c b) => Result c b
   */
  orElse: {
    /*~*/
    Error: function orElse(handler) {
      assertFunction('Result.Error#orElse', handler);
      return handler(this.value);
    },

    /*~*/
    Ok: function orElse(handler) {
      assertFunction('Result.Ok#orElse', handler);
      return this;
    }
  },

  /*~
   * stability: stable
   * type: |
   *   forall a, b: (Result a b).(Result a b) => Result a b
   *   where b is Semigroup
   */
  concat: {
    /*~*/
    Error: function concat(aResult) {
      assertResult('Result.Error#concat', aResult);
      return this;
    },

    /*~*/
    Ok: function concat(aResult) {
      var _this = this;

      assertResult('Result.Ok#concat', aResult);
      return aResult.map(function (xs) {
        return _this.value.concat(xs);
      });
    }
  },

  /*~
   * stability: stable
   * type: |
   *   forall a, b, c:
   *     (Result a b).((a) => c, (b) => c) => c
   */
  fold: {
    /*~*/
    Error: function fold(f, g) {
      assertFunction('Result.Error#fold', f);
      assertFunction('Result.Error#fold', g);
      return f(this.value);
    },

    /*~*/
    Ok: function fold(f, g) {
      assertFunction('Result.Ok#fold', f);
      assertFunction('Result.Ok#fold', g);
      return g(this.value);
    }
  },

  /*~
   * stability: stable
   * type: |
   *   forall a, b: (Result a b).() => Result b a
   */
  swap: {
    /*~*/
    Error: function swap() {
      return Ok(this.value);
    },

    /*~*/
    Ok: function swap() {
      return Error(this.value);
    }
  },

  /*~
   * stability: stable
   * type: |
   *   (Result a b).((a) => c, (b) => d) => Result c d
   */
  bimap: {
    /*~*/
    Error: function bimap(f, g) {
      assertFunction('Result.Error#bimap', f);
      assertFunction('Result.Error#bimap', g);
      return Error(f(this.value));
    },

    /*~*/
    Ok: function bimap(f, g) {
      assertFunction('Result.Ok#bimap', f);
      assertFunction('Result.Ok#bimap', g);
      return Ok(g(this.value));
    }
  },

  /*~
   * stability: stable
   * type: |
   *   forall a, b, c:
   *     (Result a b).((a) => c) => Result c b
   */
  mapError: {
    /*~*/
    Error: function mapError(f) {
      assertFunction('Result.Error#mapError', f);
      return Error(f(this.value));
    },

    /*~*/
    Ok: function mapError(f) {
      assertFunction('Result.Ok#mapError', f);
      return this;
    }
  },

  /*~
   * stability: stable
   * type: |
   *   forall a: (Maybe a).((a) => Boolean) => Maybe a
   */
  filter: {
    /*~*/
    Error: function filter(predicate) {
      assertFunction('Result.Error#filter', predicate);
      return this;
    },

    /*~*/
    Ok: function filter(predicate) {
      assertFunction('Result.Ok#filter', predicate);
      return predicate(this.value) ? this : Error(this.value);
    }
  }
});
Object.assign(Result, {
  /*~
   * stability: stable
   * type: |
   *   forall a, b: (b) => Result a b
   */
  of: function of(value) {
    return Ok(value);
  },

  /*~
   * deprecated:
   *   since: 2.0.0
   *   replacedBy: .unsafeGet()
   * type: |
   *   forall a, b: (Result a b).() => b :: (throws TypeError)
   */
  'get': function get() {
    warnDeprecation('`.get()` is deprecated, and has been renamed to `.unsafeGet()`.');
    return this.unsafeGet();
  },

  /*~
   * stability: stable
   * type: |
   *   forall a, b: (Result a b).() => a or b
   */
  merge: function merge() {
    return this.value;
  },

  /*~
   * stability: stable
   * type: |
   *   forall a, b: (Result a b).() => Validation a b
   */
  toValidation: function toValidation() {
    return __webpack_require__("vmge")(this);
  },

  /*~
   * stability: stable
   * type: |
   *   forall a, b: (Result a b).() => Maybe b
   */
  toMaybe: function toMaybe() {
    return __webpack_require__("/l6L")(this);
  }
});
provideAliases(Error.prototype);
provideAliases(Ok.prototype);
provideAliases(Result);
module.exports = Result;

/***/ }),

/***/ "so/P":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.


__webpack_require__("W1QL");

__webpack_require__("K/PF");

__webpack_require__("t91x");

__webpack_require__("75LO");

__webpack_require__("P/oo");

__webpack_require__("9ovy");

__webpack_require__("m8zh");

__webpack_require__("Z8gF");

__webpack_require__("asZ9");

__webpack_require__("V7cS");

__webpack_require__("nsbO");

var punycode = __webpack_require__("lphy");

var util = __webpack_require__("wjI5");

exports.parse = urlParse;
exports.resolve = urlResolve;
exports.resolveObject = urlResolveObject;
exports.format = urlFormat;
exports.Url = Url;

function Url() {
  this.protocol = null;
  this.slashes = null;
  this.auth = null;
  this.host = null;
  this.port = null;
  this.hostname = null;
  this.hash = null;
  this.search = null;
  this.query = null;
  this.pathname = null;
  this.path = null;
  this.href = null;
} // Reference: RFC 3986, RFC 1808, RFC 2396
// define these here so at least they only have to be
// compiled once on the first module load.


var protocolPattern = /^([a-z0-9.+-]+:)/i,
    portPattern = /:[0-9]*$/,
    // Special case for a simple path URL
simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,
    // RFC 2396: characters reserved for delimiting URLs.
// We actually just auto-escape these.
delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],
    // RFC 2396: characters not allowed for various reasons.
unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),
    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
autoEscape = ['\''].concat(unwise),
    // Characters that are never ever allowed in a hostname.
// Note that any invalid chars are also handled, but these
// are the ones that are *expected* to be seen, so we fast-path
// them.
nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
    hostEndingChars = ['/', '?', '#'],
    hostnameMaxLen = 255,
    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,
    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
    // protocols that can allow "unsafe" and "unwise" chars.
unsafeProtocol = {
  'javascript': true,
  'javascript:': true
},
    // protocols that never have a hostname.
hostlessProtocol = {
  'javascript': true,
  'javascript:': true
},
    // protocols that always contain a // bit.
slashedProtocol = {
  'http': true,
  'https': true,
  'ftp': true,
  'gopher': true,
  'file': true,
  'http:': true,
  'https:': true,
  'ftp:': true,
  'gopher:': true,
  'file:': true
},
    querystring = __webpack_require__("UKnr");

function urlParse(url, parseQueryString, slashesDenoteHost) {
  if (url && util.isObject(url) && url instanceof Url) return url;
  var u = new Url();
  u.parse(url, parseQueryString, slashesDenoteHost);
  return u;
}

Url.prototype.parse = function (url, parseQueryString, slashesDenoteHost) {
  if (!util.isString(url)) {
    throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
  } // Copy chrome, IE, opera backslash-handling behavior.
  // Back slashes before the query string get converted to forward slashes
  // See: https://code.google.com/p/chromium/issues/detail?id=25916


  var queryIndex = url.indexOf('?'),
      splitter = queryIndex !== -1 && queryIndex < url.indexOf('#') ? '?' : '#',
      uSplit = url.split(splitter),
      slashRegex = /\\/g;
  uSplit[0] = uSplit[0].replace(slashRegex, '/');
  url = uSplit.join(splitter);
  var rest = url; // trim before proceeding.
  // This is to support parse stuff like "  http://foo.com  \n"

  rest = rest.trim();

  if (!slashesDenoteHost && url.split('#').length === 1) {
    // Try fast path regexp
    var simplePath = simplePathPattern.exec(rest);

    if (simplePath) {
      this.path = rest;
      this.href = rest;
      this.pathname = simplePath[1];

      if (simplePath[2]) {
        this.search = simplePath[2];

        if (parseQueryString) {
          this.query = querystring.parse(this.search.substr(1));
        } else {
          this.query = this.search.substr(1);
        }
      } else if (parseQueryString) {
        this.search = '';
        this.query = {};
      }

      return this;
    }
  }

  var proto = protocolPattern.exec(rest);

  if (proto) {
    proto = proto[0];
    var lowerProto = proto.toLowerCase();
    this.protocol = lowerProto;
    rest = rest.substr(proto.length);
  } // figure out if it's got a host
  // user@server is *always* interpreted as a hostname, and url
  // resolution will treat //foo/bar as host=foo,path=bar because that's
  // how the browser resolves relative URLs.


  if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
    var slashes = rest.substr(0, 2) === '//';

    if (slashes && !(proto && hostlessProtocol[proto])) {
      rest = rest.substr(2);
      this.slashes = true;
    }
  }

  if (!hostlessProtocol[proto] && (slashes || proto && !slashedProtocol[proto])) {
    // there's a hostname.
    // the first instance of /, ?, ;, or # ends the host.
    //
    // If there is an @ in the hostname, then non-host chars *are* allowed
    // to the left of the last @ sign, unless some host-ending character
    // comes *before* the @-sign.
    // URLs are obnoxious.
    //
    // ex:
    // http://a@b@c/ => user:a@b host:c
    // http://a@b?@c => user:a host:c path:/?@c
    // v0.12 TODO(isaacs): This is not quite how Chrome does things.
    // Review our test case against browsers more comprehensively.
    // find the first instance of any hostEndingChars
    var hostEnd = -1;

    for (var i = 0; i < hostEndingChars.length; i++) {
      var hec = rest.indexOf(hostEndingChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) hostEnd = hec;
    } // at this point, either we have an explicit point where the
    // auth portion cannot go past, or the last @ char is the decider.


    var auth, atSign;

    if (hostEnd === -1) {
      // atSign can be anywhere.
      atSign = rest.lastIndexOf('@');
    } else {
      // atSign must be in auth portion.
      // http://a@b/c@d => host:b auth:a path:/c@d
      atSign = rest.lastIndexOf('@', hostEnd);
    } // Now we have a portion which is definitely the auth.
    // Pull that off.


    if (atSign !== -1) {
      auth = rest.slice(0, atSign);
      rest = rest.slice(atSign + 1);
      this.auth = decodeURIComponent(auth);
    } // the host is the remaining to the left of the first non-host char


    hostEnd = -1;

    for (var i = 0; i < nonHostChars.length; i++) {
      var hec = rest.indexOf(nonHostChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) hostEnd = hec;
    } // if we still have not hit it, then the entire thing is a host.


    if (hostEnd === -1) hostEnd = rest.length;
    this.host = rest.slice(0, hostEnd);
    rest = rest.slice(hostEnd); // pull out port.

    this.parseHost(); // we've indicated that there is a hostname,
    // so even if it's empty, it has to be present.

    this.hostname = this.hostname || ''; // if hostname begins with [ and ends with ]
    // assume that it's an IPv6 address.

    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']'; // validate a little.

    if (!ipv6Hostname) {
      var hostparts = this.hostname.split(/\./);

      for (var i = 0, l = hostparts.length; i < l; i++) {
        var part = hostparts[i];
        if (!part) continue;

        if (!part.match(hostnamePartPattern)) {
          var newpart = '';

          for (var j = 0, k = part.length; j < k; j++) {
            if (part.charCodeAt(j) > 127) {
              // we replace non-ASCII char with a temporary placeholder
              // we need this to make sure size of hostname is not
              // broken by replacing non-ASCII by nothing
              newpart += 'x';
            } else {
              newpart += part[j];
            }
          } // we test again with ASCII char only


          if (!newpart.match(hostnamePartPattern)) {
            var validParts = hostparts.slice(0, i);
            var notHost = hostparts.slice(i + 1);
            var bit = part.match(hostnamePartStart);

            if (bit) {
              validParts.push(bit[1]);
              notHost.unshift(bit[2]);
            }

            if (notHost.length) {
              rest = '/' + notHost.join('.') + rest;
            }

            this.hostname = validParts.join('.');
            break;
          }
        }
      }
    }

    if (this.hostname.length > hostnameMaxLen) {
      this.hostname = '';
    } else {
      // hostnames are always lower case.
      this.hostname = this.hostname.toLowerCase();
    }

    if (!ipv6Hostname) {
      // IDNA Support: Returns a punycoded representation of "domain".
      // It only converts parts of the domain name that
      // have non-ASCII characters, i.e. it doesn't matter if
      // you call it with a domain that already is ASCII-only.
      this.hostname = punycode.toASCII(this.hostname);
    }

    var p = this.port ? ':' + this.port : '';
    var h = this.hostname || '';
    this.host = h + p;
    this.href += this.host; // strip [ and ] from the hostname
    // the host field still retains them, though

    if (ipv6Hostname) {
      this.hostname = this.hostname.substr(1, this.hostname.length - 2);

      if (rest[0] !== '/') {
        rest = '/' + rest;
      }
    }
  } // now rest is set to the post-host stuff.
  // chop off any delim chars.


  if (!unsafeProtocol[lowerProto]) {
    // First, make 100% sure that any "autoEscape" chars get
    // escaped, even if encodeURIComponent doesn't think they
    // need to be.
    for (var i = 0, l = autoEscape.length; i < l; i++) {
      var ae = autoEscape[i];
      if (rest.indexOf(ae) === -1) continue;
      var esc = encodeURIComponent(ae);

      if (esc === ae) {
        esc = escape(ae);
      }

      rest = rest.split(ae).join(esc);
    }
  } // chop off from the tail first.


  var hash = rest.indexOf('#');

  if (hash !== -1) {
    // got a fragment string.
    this.hash = rest.substr(hash);
    rest = rest.slice(0, hash);
  }

  var qm = rest.indexOf('?');

  if (qm !== -1) {
    this.search = rest.substr(qm);
    this.query = rest.substr(qm + 1);

    if (parseQueryString) {
      this.query = querystring.parse(this.query);
    }

    rest = rest.slice(0, qm);
  } else if (parseQueryString) {
    // no query string, but parseQueryString still requested
    this.search = '';
    this.query = {};
  }

  if (rest) this.pathname = rest;

  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {
    this.pathname = '/';
  } //to support http.request


  if (this.pathname || this.search) {
    var p = this.pathname || '';
    var s = this.search || '';
    this.path = p + s;
  } // finally, reconstruct the href based on what has been validated.


  this.href = this.format();
  return this;
}; // format a parsed object into a url string


function urlFormat(obj) {
  // ensure it's an object, and not a string url.
  // If it's an obj, this is a no-op.
  // this way, you can call url_format() on strings
  // to clean up potentially wonky urls.
  if (util.isString(obj)) obj = urlParse(obj);
  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
  return obj.format();
}

Url.prototype.format = function () {
  var auth = this.auth || '';

  if (auth) {
    auth = encodeURIComponent(auth);
    auth = auth.replace(/%3A/i, ':');
    auth += '@';
  }

  var protocol = this.protocol || '',
      pathname = this.pathname || '',
      hash = this.hash || '',
      host = false,
      query = '';

  if (this.host) {
    host = auth + this.host;
  } else if (this.hostname) {
    host = auth + (this.hostname.indexOf(':') === -1 ? this.hostname : '[' + this.hostname + ']');

    if (this.port) {
      host += ':' + this.port;
    }
  }

  if (this.query && util.isObject(this.query) && Object.keys(this.query).length) {
    query = querystring.stringify(this.query);
  }

  var search = this.search || query && '?' + query || '';
  if (protocol && protocol.substr(-1) !== ':') protocol += ':'; // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
  // unless they had them to begin with.

  if (this.slashes || (!protocol || slashedProtocol[protocol]) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }

  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
  if (search && search.charAt(0) !== '?') search = '?' + search;
  pathname = pathname.replace(/[?#]/g, function (match) {
    return encodeURIComponent(match);
  });
  search = search.replace('#', '%23');
  return protocol + host + pathname + search + hash;
};

function urlResolve(source, relative) {
  return urlParse(source, false, true).resolve(relative);
}

Url.prototype.resolve = function (relative) {
  return this.resolveObject(urlParse(relative, false, true)).format();
};

function urlResolveObject(source, relative) {
  if (!source) return relative;
  return urlParse(source, false, true).resolveObject(relative);
}

Url.prototype.resolveObject = function (relative) {
  if (util.isString(relative)) {
    var rel = new Url();
    rel.parse(relative, false, true);
    relative = rel;
  }

  var result = new Url();
  var tkeys = Object.keys(this);

  for (var tk = 0; tk < tkeys.length; tk++) {
    var tkey = tkeys[tk];
    result[tkey] = this[tkey];
  } // hash is always overridden, no matter what.
  // even href="" will remove it.


  result.hash = relative.hash; // if the relative url is empty, then there's nothing left to do here.

  if (relative.href === '') {
    result.href = result.format();
    return result;
  } // hrefs like //foo/bar always cut to the protocol.


  if (relative.slashes && !relative.protocol) {
    // take everything except the protocol from relative
    var rkeys = Object.keys(relative);

    for (var rk = 0; rk < rkeys.length; rk++) {
      var rkey = rkeys[rk];
      if (rkey !== 'protocol') result[rkey] = relative[rkey];
    } //urlParse appends trailing / to urls like http://www.example.com


    if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) {
      result.path = result.pathname = '/';
    }

    result.href = result.format();
    return result;
  }

  if (relative.protocol && relative.protocol !== result.protocol) {
    // if it's a known url protocol, then changing
    // the protocol does weird things
    // first, if it's not file:, then we MUST have a host,
    // and if there was a path
    // to begin with, then we MUST have a path.
    // if it is file:, then the host is dropped,
    // because that's known to be hostless.
    // anything else is assumed to be absolute.
    if (!slashedProtocol[relative.protocol]) {
      var keys = Object.keys(relative);

      for (var v = 0; v < keys.length; v++) {
        var k = keys[v];
        result[k] = relative[k];
      }

      result.href = result.format();
      return result;
    }

    result.protocol = relative.protocol;

    if (!relative.host && !hostlessProtocol[relative.protocol]) {
      var relPath = (relative.pathname || '').split('/');

      while (relPath.length && !(relative.host = relPath.shift())) {
        ;
      }

      if (!relative.host) relative.host = '';
      if (!relative.hostname) relative.hostname = '';
      if (relPath[0] !== '') relPath.unshift('');
      if (relPath.length < 2) relPath.unshift('');
      result.pathname = relPath.join('/');
    } else {
      result.pathname = relative.pathname;
    }

    result.search = relative.search;
    result.query = relative.query;
    result.host = relative.host || '';
    result.auth = relative.auth;
    result.hostname = relative.hostname || relative.host;
    result.port = relative.port; // to support http.request

    if (result.pathname || result.search) {
      var p = result.pathname || '';
      var s = result.search || '';
      result.path = p + s;
    }

    result.slashes = result.slashes || relative.slashes;
    result.href = result.format();
    return result;
  }

  var isSourceAbs = result.pathname && result.pathname.charAt(0) === '/',
      isRelAbs = relative.host || relative.pathname && relative.pathname.charAt(0) === '/',
      mustEndAbs = isRelAbs || isSourceAbs || result.host && relative.pathname,
      removeAllDots = mustEndAbs,
      srcPath = result.pathname && result.pathname.split('/') || [],
      relPath = relative.pathname && relative.pathname.split('/') || [],
      psychotic = result.protocol && !slashedProtocol[result.protocol]; // if the url is a non-slashed url, then relative
  // links like ../.. should be able
  // to crawl up to the hostname, as well.  This is strange.
  // result.protocol has already been set by now.
  // Later on, put the first path part into the host field.

  if (psychotic) {
    result.hostname = '';
    result.port = null;

    if (result.host) {
      if (srcPath[0] === '') srcPath[0] = result.host;else srcPath.unshift(result.host);
    }

    result.host = '';

    if (relative.protocol) {
      relative.hostname = null;
      relative.port = null;

      if (relative.host) {
        if (relPath[0] === '') relPath[0] = relative.host;else relPath.unshift(relative.host);
      }

      relative.host = null;
    }

    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
  }

  if (isRelAbs) {
    // it's absolute.
    result.host = relative.host || relative.host === '' ? relative.host : result.host;
    result.hostname = relative.hostname || relative.hostname === '' ? relative.hostname : result.hostname;
    result.search = relative.search;
    result.query = relative.query;
    srcPath = relPath; // fall through to the dot-handling below.
  } else if (relPath.length) {
    // it's relative
    // throw away the existing file, and take the new path instead.
    if (!srcPath) srcPath = [];
    srcPath.pop();
    srcPath = srcPath.concat(relPath);
    result.search = relative.search;
    result.query = relative.query;
  } else if (!util.isNullOrUndefined(relative.search)) {
    // just pull out the search.
    // like href='?foo'.
    // Put this after the other two cases because it simplifies the booleans
    if (psychotic) {
      result.hostname = result.host = srcPath.shift(); //occationaly the auth can get stuck only in host
      //this especially happens in cases like
      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')

      var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;

      if (authInHost) {
        result.auth = authInHost.shift();
        result.host = result.hostname = authInHost.shift();
      }
    }

    result.search = relative.search;
    result.query = relative.query; //to support http.request

    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
      result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');
    }

    result.href = result.format();
    return result;
  }

  if (!srcPath.length) {
    // no path at all.  easy.
    // we've already handled the other stuff above.
    result.pathname = null; //to support http.request

    if (result.search) {
      result.path = '/' + result.search;
    } else {
      result.path = null;
    }

    result.href = result.format();
    return result;
  } // if a url ENDs in . or .., then it must get a trailing slash.
  // however, if it ends in anything else non-slashy,
  // then it must NOT get a trailing slash.


  var last = srcPath.slice(-1)[0];
  var hasTrailingSlash = (result.host || relative.host || srcPath.length > 1) && (last === '.' || last === '..') || last === ''; // strip single dots, resolve double dots to parent dir
  // if the path tries to go above the root, `up` ends up > 0

  var up = 0;

  for (var i = srcPath.length; i >= 0; i--) {
    last = srcPath[i];

    if (last === '.') {
      srcPath.splice(i, 1);
    } else if (last === '..') {
      srcPath.splice(i, 1);
      up++;
    } else if (up) {
      srcPath.splice(i, 1);
      up--;
    }
  } // if the path is allowed to go above the root, restore leading ..s


  if (!mustEndAbs && !removeAllDots) {
    for (; up--; up) {
      srcPath.unshift('..');
    }
  }

  if (mustEndAbs && srcPath[0] !== '' && (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
    srcPath.unshift('');
  }

  if (hasTrailingSlash && srcPath.join('/').substr(-1) !== '/') {
    srcPath.push('');
  }

  var isAbsolute = srcPath[0] === '' || srcPath[0] && srcPath[0].charAt(0) === '/'; // put the host back

  if (psychotic) {
    result.hostname = result.host = isAbsolute ? '' : srcPath.length ? srcPath.shift() : ''; //occationaly the auth can get stuck only in host
    //this especially happens in cases like
    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')

    var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;

    if (authInHost) {
      result.auth = authInHost.shift();
      result.host = result.hostname = authInHost.shift();
    }
  }

  mustEndAbs = mustEndAbs || result.host && srcPath.length;

  if (mustEndAbs && !isAbsolute) {
    srcPath.unshift('');
  }

  if (!srcPath.length) {
    result.pathname = null;
    result.path = null;
  } else {
    result.pathname = srcPath.join('/');
  } //to support request.http


  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
    result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');
  }

  result.auth = relative.auth || result.auth;
  result.slashes = result.slashes || relative.slashes;
  result.href = result.format();
  return result;
};

Url.prototype.parseHost = function () {
  var host = this.host;
  var port = portPattern.exec(host);

  if (port) {
    port = port[0];

    if (port !== ':') {
      this.port = port.substr(1);
    }

    host = host.substr(0, host.length - port.length);
  }

  if (host) this.hostname = host;
};

/***/ }),

/***/ "t91x":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.3.6 Object.prototype.toString()
var classof = __webpack_require__("OFVL");
var test = {};
test[__webpack_require__("9dxi")('toStringTag')] = 'z';
if (test + '' != '[object z]') {
  __webpack_require__("sU/p")(Object.prototype, 'toString', function toString() {
    return '[object ' + classof(this) + ']';
  }, true);
}


/***/ }),

/***/ "tR8E":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var to_string_1 = __webpack_require__("9XxO");

var upperFirst = function upperFirst(value) {
  var str = to_string_1["default"](value);
  return str.charAt(0).toUpperCase() + str.substring(1);
};

exports["default"] = upperFirst;

/***/ }),

/***/ "tW8y":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("P56o");
var hide = __webpack_require__("tjmq");
var uid = __webpack_require__("1Alt");
var TYPED = uid('typed_array');
var VIEW = uid('view');
var ABV = !!(global.ArrayBuffer && global.DataView);
var CONSTR = ABV;
var i = 0;
var l = 9;
var Typed;

var TypedArrayConstructors = (
  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'
).split(',');

while (i < l) {
  if (Typed = global[TypedArrayConstructors[i++]]) {
    hide(Typed.prototype, TYPED, true);
    hide(Typed.prototype, VIEW, true);
  } else CONSTR = false;
}

module.exports = {
  ABV: ABV,
  CONSTR: CONSTR,
  TYPED: TYPED,
  VIEW: VIEW
};


/***/ }),

/***/ "tWFn":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("5hJT");

__webpack_require__("d3/y");

var _interopRequireDefault = __webpack_require__("63Ad");

var _interopRequireWildcard = __webpack_require__("vdEC");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var React = _interopRequireWildcard(__webpack_require__("mXGw"));

var _LeftOutlined = _interopRequireDefault(__webpack_require__("nw12"));

var _AntdIcon = _interopRequireDefault(__webpack_require__("CxZ5")); // GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY


var LeftOutlined = function LeftOutlined(props, ref) {
  return React.createElement(_AntdIcon["default"], Object.assign({}, props, {
    ref: ref,
    icon: _LeftOutlined["default"]
  }));
};

LeftOutlined.displayName = 'LeftOutlined';

var _default = React.forwardRef(LeftOutlined);

exports["default"] = _default;

/***/ }),

/***/ "tbIA":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.2.1 Object.assign(target, source, ...)
var DESCRIPTORS = __webpack_require__("lBnu");
var getKeys = __webpack_require__("/Lgp");
var gOPS = __webpack_require__("phsM");
var pIE = __webpack_require__("kBaS");
var toObject = __webpack_require__("dCrc");
var IObject = __webpack_require__("6wgB");
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || __webpack_require__("/Vl9")(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;


/***/ }),

/***/ "tdEy":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _iterableToArray; });
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
}

/***/ }),

/***/ "tjmq":
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__("U1KF");
var createDesc = __webpack_require__("WWmS");
module.exports = __webpack_require__("GGqZ") ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "ttYz":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _style_index_less__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("SwVN");
/* harmony import */ var _style_index_less__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_index_less__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("zYiv");
/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_index_less__WEBPACK_IMPORTED_MODULE_1__);



/***/ }),

/***/ "tvu5":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LayoutContext; });
/* harmony import */ var core_js_modules_es6_array_filter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("9p7t");
/* harmony import */ var core_js_modules_es6_array_filter__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_filter__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_array_index_of__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("V7cS");
/* harmony import */ var core_js_modules_es6_array_index_of__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_index_of__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es6_reflect_construct__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("LXYL");
/* harmony import */ var core_js_modules_es6_reflect_construct__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_reflect_construct__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es6_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("1qKx");
/* harmony import */ var core_js_modules_es6_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es6_object_create__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("PAbq");
/* harmony import */ var core_js_modules_es6_object_create__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_create__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("5hJT");
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("d3/y");
/* harmony import */ var core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es6_array_is_array__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("+3V6");
/* harmony import */ var core_js_modules_es6_array_is_array__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_is_array__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("W1QL");
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es6_string_iterator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("lQyR");
/* harmony import */ var core_js_modules_es6_string_iterator__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_string_iterator__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_es6_array_from__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("YhIr");
/* harmony import */ var core_js_modules_es6_array_from__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_from__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("GkPX");
/* harmony import */ var core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("4aJ6");
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("M/4x");
/* harmony import */ var core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__("t91x");
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__("+jjx");
/* harmony import */ var core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__("ABKx");
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__("mXGw");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_17__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__("8Jek");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_18__);
/* harmony import */ var _config_provider__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__("Bfez");


















function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return _possibleConstructorReturn(this, result);
  };
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

var __rest = undefined && undefined.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};




var LayoutContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_17__["createContext"]({
  siderHook: {
    addSider: function addSider() {
      return null;
    },
    removeSider: function removeSider() {
      return null;
    }
  }
});

function generator(_ref) {
  var suffixCls = _ref.suffixCls,
      tagName = _ref.tagName,
      displayName = _ref.displayName;
  return function (BasicComponent) {
    var _a;

    return _a = /*#__PURE__*/function (_React$Component) {
      _inherits(Adapter, _React$Component);

      var _super = _createSuper(Adapter);

      function Adapter() {
        var _this;

        _classCallCheck(this, Adapter);

        _this = _super.apply(this, arguments);

        _this.renderComponent = function (_ref2) {
          var getPrefixCls = _ref2.getPrefixCls;
          var customizePrefixCls = _this.props.prefixCls;
          var prefixCls = getPrefixCls(suffixCls, customizePrefixCls);
          return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_17__["createElement"](BasicComponent, _extends({
            prefixCls: prefixCls,
            tagName: tagName
          }, _this.props));
        };

        return _this;
      }

      _createClass(Adapter, [{
        key: "render",
        value: function render() {
          return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_17__["createElement"](_config_provider__WEBPACK_IMPORTED_MODULE_19__[/* ConfigConsumer */ "a"], null, this.renderComponent);
        }
      }]);

      return Adapter;
    }(react__WEBPACK_IMPORTED_MODULE_17__["Component"]), _a.displayName = displayName, _a;
  };
}

var Basic = function Basic(props) {
  var prefixCls = props.prefixCls,
      className = props.className,
      children = props.children,
      tagName = props.tagName,
      others = __rest(props, ["prefixCls", "className", "children", "tagName"]);

  var classString = classnames__WEBPACK_IMPORTED_MODULE_18___default()(prefixCls, className);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_17__["createElement"](tagName, _extends({
    className: classString
  }, others), children);
};

var BasicLayout = /*#__PURE__*/function (_React$Component2) {
  _inherits(BasicLayout, _React$Component2);

  var _super2 = _createSuper(BasicLayout);

  function BasicLayout() {
    var _this2;

    _classCallCheck(this, BasicLayout);

    _this2 = _super2.apply(this, arguments);
    _this2.state = {
      siders: []
    };

    _this2.renderComponent = function (_ref3) {
      var _classNames;

      var direction = _ref3.direction;

      var _a = _this2.props,
          prefixCls = _a.prefixCls,
          className = _a.className,
          children = _a.children,
          hasSider = _a.hasSider,
          Tag = _a.tagName,
          others = __rest(_a, ["prefixCls", "className", "children", "hasSider", "tagName"]);

      var classString = classnames__WEBPACK_IMPORTED_MODULE_18___default()(prefixCls, (_classNames = {}, _defineProperty(_classNames, "".concat(prefixCls, "-has-sider"), typeof hasSider === 'boolean' ? hasSider : _this2.state.siders.length > 0), _defineProperty(_classNames, "".concat(prefixCls, "-rtl"), direction === 'rtl'), _classNames), className);
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_17__["createElement"](LayoutContext.Provider, {
        value: {
          siderHook: _this2.getSiderHook()
        }
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_17__["createElement"](Tag, _extends({
        className: classString
      }, others), children));
    };

    return _this2;
  }

  _createClass(BasicLayout, [{
    key: "getSiderHook",
    value: function getSiderHook() {
      var _this3 = this;

      return {
        addSider: function addSider(id) {
          _this3.setState(function (state) {
            return {
              siders: [].concat(_toConsumableArray(state.siders), [id])
            };
          });
        },
        removeSider: function removeSider(id) {
          _this3.setState(function (state) {
            return {
              siders: state.siders.filter(function (currentId) {
                return currentId !== id;
              })
            };
          });
        }
      };
    }
  }, {
    key: "render",
    value: function render() {
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_17__["createElement"](_config_provider__WEBPACK_IMPORTED_MODULE_19__[/* ConfigConsumer */ "a"], null, this.renderComponent);
    }
  }]);

  return BasicLayout;
}(react__WEBPACK_IMPORTED_MODULE_17__["Component"]);

var Layout = generator({
  suffixCls: 'layout',
  tagName: 'section',
  displayName: 'Layout'
})(BasicLayout);
var Header = generator({
  suffixCls: 'layout-header',
  tagName: 'header',
  displayName: 'Header'
})(Basic);
var Footer = generator({
  suffixCls: 'layout-footer',
  tagName: 'footer',
  displayName: 'Footer'
})(Basic);
var Content = generator({
  suffixCls: 'layout-content',
  tagName: 'main',
  displayName: 'Content'
})(Basic);
Layout.Header = Header;
Layout.Footer = Footer;
Layout.Content = Content;
/* harmony default export */ __webpack_exports__["b"] = (Layout);

/***/ }),

/***/ "uKE/":
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.1 Number.EPSILON
var $export = __webpack_require__("X6VK");

$export($export.S, 'Number', { EPSILON: Math.pow(2, -52) });


/***/ }),

/***/ "uLh5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // do not edit .js files directly - edit src/index.jst

__webpack_require__("W1QL");

__webpack_require__("K/PF");

__webpack_require__("75LO");

__webpack_require__("4aJ6");

__webpack_require__("M/4x");

__webpack_require__("t91x");

__webpack_require__("iur1");

__webpack_require__("J8hF");

__webpack_require__("+3V6");

module.exports = function equal(a, b) {
  if (a === b) return true;

  if (a && b && typeof a == 'object' && typeof b == 'object') {
    if (a.constructor !== b.constructor) return false;
    var length, i, keys;

    if (Array.isArray(a)) {
      length = a.length;
      if (length != b.length) return false;

      for (i = length; i-- !== 0;) {
        if (!equal(a[i], b[i])) return false;
      }

      return true;
    }

    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;
    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();
    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();
    keys = Object.keys(a);
    length = keys.length;
    if (length !== Object.keys(b).length) return false;

    for (i = length; i-- !== 0;) {
      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;
    }

    for (i = length; i-- !== 0;) {
      var key = keys[i];

      if (key === '_owner' && a.$$typeof) {
        // React-specific: avoid traversing React elements' _owner.
        //  _owner contains circular references
        // and is not needed when comparing the actual elements (and not their owners)
        continue;
      }

      if (!equal(a[key], b[key])) return false;
    }

    return true;
  } // true if both NaN, false otherwise


  return a !== a && b !== b;
};

/***/ }),

/***/ "uRBY":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("mvii");
var defined = __webpack_require__("GCOZ");
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),

/***/ "uUP6":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------

__webpack_require__("5hJT");

__webpack_require__("yIlq");

var assertType = __webpack_require__("yCBR");

var assertFunction = __webpack_require__("nAPr");

var _require = __webpack_require__("sMOp"),
    union = _require.union,
    derivations = _require.derivations;

var provideAliases = __webpack_require__("JiyH");

var warnDeprecation = __webpack_require__("GFZo");

var adtMethods = __webpack_require__("cl25");

var extend = __webpack_require__("0ONX");

var equality = derivations.equality,
    debugRepresentation = derivations.debugRepresentation,
    serialization = derivations.serialization;
/*~ stability: stable */

var Maybe = union('folktale:Maybe', {
  /*~
   * type: |
   *   forall a: () => Maybe a
   */
  Nothing: function Nothing() {},

  /*~
   * type: |
   *   forall a: (a) => Maybe a
   */
  Just: function Just(value) {
    return {
      value: value
    };
  }
}).derive(equality, debugRepresentation, serialization);
var Nothing = Maybe.Nothing,
    _Just = Maybe.Just;
var assertMaybe = assertType(Maybe);
extend(_Just.prototype, {
  /*~
   * isRequired: true
   * type: |
   *   forall a: get (Maybe a) => a
   */
  get value() {
    throw new TypeError('`value` can’t be accessed in an abstract instance of Maybe.Just');
  }

});
/*~~belongsTo: Maybe */

adtMethods(Maybe, {
  /*~
   * stability: stable
   * type: |
   *   forall a, b: (Maybe a).((a) => b) => Maybe b
   */
  map: {
    /*~*/
    Nothing: function map(transformation) {
      assertFunction('Maybe.Nothing#map', transformation);
      return this;
    },

    /*~*/
    Just: function map(transformation) {
      assertFunction('Maybe.Just#map', transformation);
      return _Just(transformation(this.value));
    }
  },

  /*~
   * stability: stable
   * type: |
   *   forall a, b: (Maybe (a) => b).(Maybe a) => Maybe b
   */
  apply: {
    /*~*/
    Nothing: function apply(aMaybe) {
      assertMaybe('Maybe.Nothing#apply', aMaybe);
      return this;
    },

    /*~*/
    Just: function apply(aMaybe) {
      assertMaybe('Maybe.Just#apply', aMaybe);
      return aMaybe.map(this.value);
    }
  },

  /*~
   * stability: stable
   * type: |
   *   forall a, b: (Maybe a).((a) => Maybe b) => Maybe b
   */
  chain: {
    /*~*/
    Nothing: function chain(transformation) {
      assertFunction('Maybe.Nothing#chain', transformation);
      return this;
    },

    /*~*/
    Just: function chain(transformation) {
      assertFunction('Maybe.Just#chain', transformation);
      return transformation(this.value);
    }
  },

  /*~
   * type: |
   *   forall a: (Maybe a).() => a :: (throws TypeError)
   */
  unsafeGet: {
    /*~*/
    Nothing: function unsafeGet() {
      throw new TypeError('Can\'t extract the value of a Nothing.\n\n    Since Nothing holds no values, it\'s not possible to extract one from them.\n    You might consider switching from Maybe#get to Maybe#getOrElse, or some other method\n    that is not partial.\n      ');
    },

    /*~*/
    Just: function unsafeGet() {
      return this.value;
    }
  },

  /*~
   * type: |
   *   forall a: (Maybe a).(a) => a
   */
  getOrElse: {
    /*~*/
    Nothing: function getOrElse(_default) {
      return _default;
    },

    /*~*/
    Just: function getOrElse(_default) {
      return this.value;
    }
  },

  /*~
   * type: |
   *   forall a: (Maybe a).((a) => Maybe a) => Maybe a
   */
  orElse: {
    /*~*/
    Nothing: function orElse(handler) {
      assertFunction('Maybe.Nothing#orElse', handler);
      return handler(this.value);
    },

    /*~*/
    Just: function orElse(handler) {
      assertFunction('Maybe.Nothing#orElse', handler);
      return this;
    }
  },

  /*~
   * authors:
   *   - "@diasbruno"
   * type: |
   *   forall a: (Maybe a).(Maybe a) => Maybe a
   *   where a is Semigroup
   */
  concat: {
    /*~*/
    Nothing: function concat(aMaybe) {
      assertMaybe('Maybe.Nothing#concat', aMaybe);
      return aMaybe;
    },

    /*~*/
    Just: function concat(aMaybe) {
      var _this = this;

      assertMaybe('Maybe.Just#concat', aMaybe);
      return aMaybe.matchWith({
        Nothing: function Nothing() {
          return _Just(_this.value);
        },
        Just: function Just(a) {
          return _Just(_this.value.concat(a.value));
        }
      });
    }
  },

  /*~
   * deprecated:
   *   since: 2.0.0
   *   replacedBy: .matchWith(pattern)
   *
   * type: |
   *   forall a, b:
   *     (Maybe a).({
   *       Nothing: () => b,
   *       Just: (a) => b
   *     }) => b
   */
  cata: {
    /*~*/
    Nothing: function cata(pattern) {
      warnDeprecation('`.cata(pattern)` is deprecated. Use `.matchWith(pattern)` instead.');
      return pattern.Nothing();
    },

    /*~*/
    Just: function cata(pattern) {
      warnDeprecation('`.cata(pattern)` is deprecated. Use `.matchWith(pattern)` instead.');
      return pattern.Just(this.value);
    }
  },

  /*~
   * type: |
   *   forall a, b: (Maybe a).(() => b, (a) => b) => b
   */
  fold: {
    /*~*/
    Nothing: function Nothing(transformNothing, transformJust) {
      assertFunction('Maybe.Nothing#fold', transformNothing);
      assertFunction('Maybe.Nothing#fold', transformJust);
      return transformNothing();
    },

    /*~*/
    Just: function Just(transformNothing, transformJust) {
      assertFunction('Maybe.Just#fold', transformNothing);
      assertFunction('Maybe.Just#fold', transformJust);
      return transformJust(this.value);
    }
  },

  /*~
   * stability: stable
   * type: |
   *   forall a: (Maybe a).((a) => Boolean) => Maybe a
   */
  filter: {
    /*~*/
    Nothing: function filter(predicate) {
      assertFunction('Maybe.Nothing#filter', predicate);
      return this;
    },

    /*~*/
    Just: function filter(predicate) {
      assertFunction('Maybe.Just#filter', predicate);
      return predicate(this.value) ? this : Nothing();
    }
  },

  /*~
   * authors:
   *   - "@joshmili"
   * type: |
   *   forall a: (Maybe a).(Maybe a) => Maybe a
   */
  or: {
    /*~*/
    Nothing: function alt(aMaybe) {
      assertMaybe('Maybe.Nothing#or', aMaybe);
      return aMaybe;
    },

    /*~*/
    Just: function alt(aMaybe) {
      assertMaybe('Maybe.Just#or', aMaybe);
      return this;
    }
  }
});
Object.assign(Maybe, {
  /*~
   * stability: stable
   * type: |
   *   forall a: (a) => Maybe a
   */
  of: function of(value) {
    return _Just(value);
  },

  /*~
   * authors:
   *   - "@diasbruno"
   * type: |
   *   forall a: () => Maybe a
   */
  empty: function empty() {
    return Nothing();
  },

  /*~
   * deprecated:
   *   since: 2.0.0
   *   replacedBy: .unsafeGet()
   * type: |
   *   forall a: (Maybe a).() => a :: (throws TypeError)
   */
  'get': function get() {
    warnDeprecation('`.get()` is deprecated, and has been renamed to `.unsafeGet()`.');
    return this.unsafeGet();
  },

  /*~
   * stability: stable
   * type: |
   *   forall a, b: (Maybe a).(b) => Result b a
   */
  toResult: function toResult(fallbackValue) {
    return __webpack_require__("pS6Z")(this, fallbackValue);
  },

  /*~
   * stability: stable
   * type: |
   *   forall a, b: (Maybe a).(b) => Result b a
   */
  toValidation: function toValidation(fallbackValue) {
    return __webpack_require__("3PM6")(this, fallbackValue);
  }
});
provideAliases(_Just.prototype);
provideAliases(Nothing.prototype);
provideAliases(Maybe);
module.exports = Maybe;

/***/ }),

/***/ "ufEP":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var line_1 = __webpack_require__("cU4Z");

var util_1 = __webpack_require__("H4Zb");

function analyzePoints(points) {
  // 计算每段的长度和总的长度
  var totalLength = 0;
  var segments = [];

  for (var i = 0; i < points.length - 1; i++) {
    var from = points[i];
    var to = points[i + 1];
    var length_1 = util_1.distance(from[0], from[1], to[0], to[1]);
    var seg = {
      from: from,
      to: to,
      length: length_1
    };
    segments.push(seg);
    totalLength += length_1;
  }

  return {
    segments: segments,
    totalLength: totalLength
  };
}

function lengthOfSegment(points) {
  if (points.length < 2) {
    return 0;
  }

  var totalLength = 0;

  for (var i = 0; i < points.length - 1; i++) {
    var from = points[i];
    var to = points[i + 1];
    totalLength += util_1.distance(from[0], from[1], to[0], to[1]);
  }

  return totalLength;
}

exports.lengthOfSegment = lengthOfSegment;
/**
 * 按照比例在数据片段中获取点
 * @param {array} points 点的集合
 * @param {number} t 百分比 0-1
 * @return {object} 点的坐标
 */

function pointAtSegments(points, t) {
  // 边界判断
  if (t > 1 || t < 0 || points.length < 2) {
    return null;
  }

  var _a = analyzePoints(points),
      segments = _a.segments,
      totalLength = _a.totalLength; // 多个点有可能重合


  if (totalLength === 0) {
    return {
      x: points[0][0],
      y: points[0][1]
    };
  } // 计算比例


  var startRatio = 0;
  var point = null;

  for (var i = 0; i < segments.length; i++) {
    var seg = segments[i];
    var from = seg.from,
        to = seg.to;
    var currentRatio = seg.length / totalLength;

    if (t >= startRatio && t <= startRatio + currentRatio) {
      var localRatio = (t - startRatio) / currentRatio;
      point = line_1["default"].pointAt(from[0], from[1], to[0], to[1], localRatio);
      break;
    }

    startRatio += currentRatio;
  }

  return point;
}

exports.pointAtSegments = pointAtSegments;
/**
 * 按照比例在数据片段中获取切线的角度
 * @param {array} points 点的集合
 * @param {number} t 百分比 0-1
 */

function angleAtSegments(points, t) {
  // 边界判断
  if (t > 1 || t < 0 || points.length < 2) {
    return 0;
  }

  var _a = analyzePoints(points),
      segments = _a.segments,
      totalLength = _a.totalLength; // 计算比例


  var startRatio = 0;
  var angle = 0;

  for (var i = 0; i < segments.length; i++) {
    var seg = segments[i];
    var from = seg.from,
        to = seg.to;
    var currentRatio = seg.length / totalLength;

    if (t >= startRatio && t <= startRatio + currentRatio) {
      angle = Math.atan2(to[1] - from[1], to[0] - from[0]);
      break;
    }

    startRatio += currentRatio;
  }

  return angle;
}

exports.angleAtSegments = angleAtSegments;

function distanceAtSegment(points, x, y) {
  var minDistance = Infinity;

  for (var i = 0; i < points.length - 1; i++) {
    var point = points[i];
    var nextPoint = points[i + 1];
    var distance_1 = line_1["default"].pointDistance(point[0], point[1], nextPoint[0], nextPoint[1], x, y);

    if (distance_1 < minDistance) {
      minDistance = distance_1;
    }
  }

  return minDistance;
}

exports.distanceAtSegment = distanceAtSegment;

/***/ }),

/***/ "ulL0":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "umh7":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create", function() { return create; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clone", function() { return clone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromValues", function() { return fromValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add", function() { return add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subtract", function() { return subtract; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiply", function() { return multiply; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "divide", function() { return divide; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ceil", function() { return ceil; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "floor", function() { return floor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "min", function() { return min; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "max", function() { return max; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "round", function() { return round; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return scale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scaleAndAdd", function() { return scaleAndAdd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "distance", function() { return distance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "squaredDistance", function() { return squaredDistance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "length", function() { return length; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "squaredLength", function() { return squaredLength; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "negate", function() { return negate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inverse", function() { return inverse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalize", function() { return normalize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dot", function() { return dot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cross", function() { return cross; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lerp", function() { return lerp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "random", function() { return random; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformMat2", function() { return transformMat2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformMat2d", function() { return transformMat2d; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformMat3", function() { return transformMat3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformMat4", function() { return transformMat4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotate", function() { return rotate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "angle", function() { return angle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zero", function() { return zero; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "str", function() { return str; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exactEquals", function() { return exactEquals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equals", function() { return equals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "len", function() { return len; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sub", function() { return sub; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mul", function() { return mul; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "div", function() { return div; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dist", function() { return dist; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrDist", function() { return sqrDist; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrLen", function() { return sqrLen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forEach", function() { return forEach; });
/* harmony import */ var core_js_modules_es6_math_hypot__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("aaOZ");
/* harmony import */ var core_js_modules_es6_math_hypot__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_math_hypot__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_typed_float32_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("hMok");
/* harmony import */ var core_js_modules_es6_typed_float32_array__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_typed_float32_array__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("yOd+");



/**
 * 2 Dimensional Vector
 * @module vec2
 */

/**
 * Creates a new, empty vec2
 *
 * @returns {vec2} a new 2D vector
 */

function create() {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_2__[/* ARRAY_TYPE */ "a"](2);

  if (_common_js__WEBPACK_IMPORTED_MODULE_2__[/* ARRAY_TYPE */ "a"] != Float32Array) {
    out[0] = 0;
    out[1] = 0;
  }

  return out;
}
/**
 * Creates a new vec2 initialized with values from an existing vector
 *
 * @param {ReadonlyVec2} a vector to clone
 * @returns {vec2} a new 2D vector
 */

function clone(a) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_2__[/* ARRAY_TYPE */ "a"](2);
  out[0] = a[0];
  out[1] = a[1];
  return out;
}
/**
 * Creates a new vec2 initialized with the given values
 *
 * @param {Number} x X component
 * @param {Number} y Y component
 * @returns {vec2} a new 2D vector
 */

function fromValues(x, y) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_2__[/* ARRAY_TYPE */ "a"](2);
  out[0] = x;
  out[1] = y;
  return out;
}
/**
 * Copy the values from one vec2 to another
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the source vector
 * @returns {vec2} out
 */

function copy(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  return out;
}
/**
 * Set the components of a vec2 to the given values
 *
 * @param {vec2} out the receiving vector
 * @param {Number} x X component
 * @param {Number} y Y component
 * @returns {vec2} out
 */

function set(out, x, y) {
  out[0] = x;
  out[1] = y;
  return out;
}
/**
 * Adds two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @returns {vec2} out
 */

function add(out, a, b) {
  out[0] = a[0] + b[0];
  out[1] = a[1] + b[1];
  return out;
}
/**
 * Subtracts vector b from vector a
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @returns {vec2} out
 */

function subtract(out, a, b) {
  out[0] = a[0] - b[0];
  out[1] = a[1] - b[1];
  return out;
}
/**
 * Multiplies two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @returns {vec2} out
 */

function multiply(out, a, b) {
  out[0] = a[0] * b[0];
  out[1] = a[1] * b[1];
  return out;
}
/**
 * Divides two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @returns {vec2} out
 */

function divide(out, a, b) {
  out[0] = a[0] / b[0];
  out[1] = a[1] / b[1];
  return out;
}
/**
 * Math.ceil the components of a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a vector to ceil
 * @returns {vec2} out
 */

function ceil(out, a) {
  out[0] = Math.ceil(a[0]);
  out[1] = Math.ceil(a[1]);
  return out;
}
/**
 * Math.floor the components of a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a vector to floor
 * @returns {vec2} out
 */

function floor(out, a) {
  out[0] = Math.floor(a[0]);
  out[1] = Math.floor(a[1]);
  return out;
}
/**
 * Returns the minimum of two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @returns {vec2} out
 */

function min(out, a, b) {
  out[0] = Math.min(a[0], b[0]);
  out[1] = Math.min(a[1], b[1]);
  return out;
}
/**
 * Returns the maximum of two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @returns {vec2} out
 */

function max(out, a, b) {
  out[0] = Math.max(a[0], b[0]);
  out[1] = Math.max(a[1], b[1]);
  return out;
}
/**
 * Math.round the components of a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a vector to round
 * @returns {vec2} out
 */

function round(out, a) {
  out[0] = Math.round(a[0]);
  out[1] = Math.round(a[1]);
  return out;
}
/**
 * Scales a vec2 by a scalar number
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the vector to scale
 * @param {Number} b amount to scale the vector by
 * @returns {vec2} out
 */

function scale(out, a, b) {
  out[0] = a[0] * b;
  out[1] = a[1] * b;
  return out;
}
/**
 * Adds two vec2's after scaling the second operand by a scalar value
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @param {Number} scale the amount to scale b by before adding
 * @returns {vec2} out
 */

function scaleAndAdd(out, a, b, scale) {
  out[0] = a[0] + b[0] * scale;
  out[1] = a[1] + b[1] * scale;
  return out;
}
/**
 * Calculates the euclidian distance between two vec2's
 *
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @returns {Number} distance between a and b
 */

function distance(a, b) {
  var x = b[0] - a[0],
      y = b[1] - a[1];
  return Math.hypot(x, y);
}
/**
 * Calculates the squared euclidian distance between two vec2's
 *
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @returns {Number} squared distance between a and b
 */

function squaredDistance(a, b) {
  var x = b[0] - a[0],
      y = b[1] - a[1];
  return x * x + y * y;
}
/**
 * Calculates the length of a vec2
 *
 * @param {ReadonlyVec2} a vector to calculate length of
 * @returns {Number} length of a
 */

function length(a) {
  var x = a[0],
      y = a[1];
  return Math.hypot(x, y);
}
/**
 * Calculates the squared length of a vec2
 *
 * @param {ReadonlyVec2} a vector to calculate squared length of
 * @returns {Number} squared length of a
 */

function squaredLength(a) {
  var x = a[0],
      y = a[1];
  return x * x + y * y;
}
/**
 * Negates the components of a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a vector to negate
 * @returns {vec2} out
 */

function negate(out, a) {
  out[0] = -a[0];
  out[1] = -a[1];
  return out;
}
/**
 * Returns the inverse of the components of a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a vector to invert
 * @returns {vec2} out
 */

function inverse(out, a) {
  out[0] = 1.0 / a[0];
  out[1] = 1.0 / a[1];
  return out;
}
/**
 * Normalize a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a vector to normalize
 * @returns {vec2} out
 */

function normalize(out, a) {
  var x = a[0],
      y = a[1];
  var len = x * x + y * y;

  if (len > 0) {
    //TODO: evaluate use of glm_invsqrt here?
    len = 1 / Math.sqrt(len);
  }

  out[0] = a[0] * len;
  out[1] = a[1] * len;
  return out;
}
/**
 * Calculates the dot product of two vec2's
 *
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @returns {Number} dot product of a and b
 */

function dot(a, b) {
  return a[0] * b[0] + a[1] * b[1];
}
/**
 * Computes the cross product of two vec2's
 * Note that the cross product must by definition produce a 3D vector
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @returns {vec3} out
 */

function cross(out, a, b) {
  var z = a[0] * b[1] - a[1] * b[0];
  out[0] = out[1] = 0;
  out[2] = z;
  return out;
}
/**
 * Performs a linear interpolation between two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @param {Number} t interpolation amount, in the range [0-1], between the two inputs
 * @returns {vec2} out
 */

function lerp(out, a, b, t) {
  var ax = a[0],
      ay = a[1];
  out[0] = ax + t * (b[0] - ax);
  out[1] = ay + t * (b[1] - ay);
  return out;
}
/**
 * Generates a random vector with the given scale
 *
 * @param {vec2} out the receiving vector
 * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned
 * @returns {vec2} out
 */

function random(out, scale) {
  scale = scale || 1.0;
  var r = _common_js__WEBPACK_IMPORTED_MODULE_2__[/* RANDOM */ "c"]() * 2.0 * Math.PI;
  out[0] = Math.cos(r) * scale;
  out[1] = Math.sin(r) * scale;
  return out;
}
/**
 * Transforms the vec2 with a mat2
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the vector to transform
 * @param {ReadonlyMat2} m matrix to transform with
 * @returns {vec2} out
 */

function transformMat2(out, a, m) {
  var x = a[0],
      y = a[1];
  out[0] = m[0] * x + m[2] * y;
  out[1] = m[1] * x + m[3] * y;
  return out;
}
/**
 * Transforms the vec2 with a mat2d
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the vector to transform
 * @param {ReadonlyMat2d} m matrix to transform with
 * @returns {vec2} out
 */

function transformMat2d(out, a, m) {
  var x = a[0],
      y = a[1];
  out[0] = m[0] * x + m[2] * y + m[4];
  out[1] = m[1] * x + m[3] * y + m[5];
  return out;
}
/**
 * Transforms the vec2 with a mat3
 * 3rd vector component is implicitly '1'
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the vector to transform
 * @param {ReadonlyMat3} m matrix to transform with
 * @returns {vec2} out
 */

function transformMat3(out, a, m) {
  var x = a[0],
      y = a[1];
  out[0] = m[0] * x + m[3] * y + m[6];
  out[1] = m[1] * x + m[4] * y + m[7];
  return out;
}
/**
 * Transforms the vec2 with a mat4
 * 3rd vector component is implicitly '0'
 * 4th vector component is implicitly '1'
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the vector to transform
 * @param {ReadonlyMat4} m matrix to transform with
 * @returns {vec2} out
 */

function transformMat4(out, a, m) {
  var x = a[0];
  var y = a[1];
  out[0] = m[0] * x + m[4] * y + m[12];
  out[1] = m[1] * x + m[5] * y + m[13];
  return out;
}
/**
 * Rotate a 2D vector
 * @param {vec2} out The receiving vec2
 * @param {ReadonlyVec2} a The vec2 point to rotate
 * @param {ReadonlyVec2} b The origin of the rotation
 * @param {Number} rad The angle of rotation in radians
 * @returns {vec2} out
 */

function rotate(out, a, b, rad) {
  //Translate point to the origin
  var p0 = a[0] - b[0],
      p1 = a[1] - b[1],
      sinC = Math.sin(rad),
      cosC = Math.cos(rad); //perform rotation and translate to correct position

  out[0] = p0 * cosC - p1 * sinC + b[0];
  out[1] = p0 * sinC + p1 * cosC + b[1];
  return out;
}
/**
 * Get the angle between two 2D vectors
 * @param {ReadonlyVec2} a The first operand
 * @param {ReadonlyVec2} b The second operand
 * @returns {Number} The angle in radians
 */

function angle(a, b) {
  var x1 = a[0],
      y1 = a[1],
      x2 = b[0],
      y2 = b[1],
      // mag is the product of the magnitudes of a and b
  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),
      // mag &&.. short circuits if mag == 0
  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1

  return Math.acos(Math.min(Math.max(cosine, -1), 1));
}
/**
 * Set the components of a vec2 to zero
 *
 * @param {vec2} out the receiving vector
 * @returns {vec2} out
 */

function zero(out) {
  out[0] = 0.0;
  out[1] = 0.0;
  return out;
}
/**
 * Returns a string representation of a vector
 *
 * @param {ReadonlyVec2} a vector to represent as a string
 * @returns {String} string representation of the vector
 */

function str(a) {
  return "vec2(" + a[0] + ", " + a[1] + ")";
}
/**
 * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)
 *
 * @param {ReadonlyVec2} a The first vector.
 * @param {ReadonlyVec2} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */

function exactEquals(a, b) {
  return a[0] === b[0] && a[1] === b[1];
}
/**
 * Returns whether or not the vectors have approximately the same elements in the same position.
 *
 * @param {ReadonlyVec2} a The first vector.
 * @param {ReadonlyVec2} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */

function equals(a, b) {
  var a0 = a[0],
      a1 = a[1];
  var b0 = b[0],
      b1 = b[1];
  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_2__[/* EPSILON */ "b"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_2__[/* EPSILON */ "b"] * Math.max(1.0, Math.abs(a1), Math.abs(b1));
}
/**
 * Alias for {@link vec2.length}
 * @function
 */

var len = length;
/**
 * Alias for {@link vec2.subtract}
 * @function
 */

var sub = subtract;
/**
 * Alias for {@link vec2.multiply}
 * @function
 */

var mul = multiply;
/**
 * Alias for {@link vec2.divide}
 * @function
 */

var div = divide;
/**
 * Alias for {@link vec2.distance}
 * @function
 */

var dist = distance;
/**
 * Alias for {@link vec2.squaredDistance}
 * @function
 */

var sqrDist = squaredDistance;
/**
 * Alias for {@link vec2.squaredLength}
 * @function
 */

var sqrLen = squaredLength;
/**
 * Perform some operation over an array of vec2s.
 *
 * @param {Array} a the array of vectors to iterate over
 * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed
 * @param {Number} offset Number of elements to skip at the beginning of the array
 * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array
 * @param {Function} fn Function to call for each vector in the array
 * @param {Object} [arg] additional argument to pass to fn
 * @returns {Array} a
 * @function
 */

var forEach = function () {
  var vec = create();
  return function (a, stride, offset, count, fn, arg) {
    var i, l;

    if (!stride) {
      stride = 2;
    }

    if (!offset) {
      offset = 0;
    }

    if (count) {
      l = Math.min(count * stride + offset, a.length);
    } else {
      l = a.length;
    }

    for (i = offset; i < l; i += stride) {
      vec[0] = a[i];
      vec[1] = a[i + 1];
      fn(vec, vec, arg);
      a[i] = vec[0];
      a[i + 1] = vec[1];
    }

    return a;
  };
}();

/***/ }),

/***/ "uoK5":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.assign.js
var es6_object_assign = __webpack_require__("5hJT");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.function.name.js
var es6_function_name = __webpack_require__("GkPX");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 1 modules
var slicedToArray = __webpack_require__("aNYv");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__("mK0O");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js + 1 modules
var objectWithoutProperties = __webpack_require__("dV/x");

// EXTERNAL MODULE: ../node_modules/react/index.js
var react = __webpack_require__("mXGw");

// EXTERNAL MODULE: ../node_modules/classnames/index.js
var classnames = __webpack_require__("8Jek");
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.define-property.js
var es6_object_define_property = __webpack_require__("d3/y");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.define-properties.js
var es6_object_define_properties = __webpack_require__("6/FK");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es7.object.get-own-property-descriptors.js
var es7_object_get_own_property_descriptors = __webpack_require__("2Tod");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.for-each.js
var es6_array_for_each = __webpack_require__("7lGJ");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.filter.js
var es6_array_filter = __webpack_require__("9p7t");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.symbol.js
var es6_symbol = __webpack_require__("ABKx");

// EXTERNAL MODULE: ../node_modules/core-js/modules/web.dom.iterable.js
var web_dom_iterable = __webpack_require__("W1QL");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.iterator.js
var es6_array_iterator = __webpack_require__("K/PF");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.to-string.js
var es6_object_to_string = __webpack_require__("t91x");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.keys.js
var es6_object_keys = __webpack_require__("75LO");

// EXTERNAL MODULE: ../node_modules/@ant-design/icons/es/utils.js
var utils = __webpack_require__("Y8EE");

// CONCATENATED MODULE: ../node_modules/@ant-design/icons/es/components/IconBase.js














function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        Object(defineProperty["a" /* default */])(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}


var twoToneColorPalette = {
  primaryColor: '#333',
  secondaryColor: '#E6E6E6',
  calculated: false
};

function setTwoToneColors(_ref) {
  var primaryColor = _ref.primaryColor,
      secondaryColor = _ref.secondaryColor;
  twoToneColorPalette.primaryColor = primaryColor;
  twoToneColorPalette.secondaryColor = secondaryColor || Object(utils["b" /* getSecondaryColor */])(primaryColor);
  twoToneColorPalette.calculated = !!secondaryColor;
}

function getTwoToneColors() {
  return _objectSpread({}, twoToneColorPalette);
}

var IconBase_IconBase = function IconBase(props) {
  var icon = props.icon,
      className = props.className,
      onClick = props.onClick,
      style = props.style,
      primaryColor = props.primaryColor,
      secondaryColor = props.secondaryColor,
      restProps = Object(objectWithoutProperties["a" /* default */])(props, ["icon", "className", "onClick", "style", "primaryColor", "secondaryColor"]);

  var colors = twoToneColorPalette;

  if (primaryColor) {
    colors = {
      primaryColor: primaryColor,
      secondaryColor: secondaryColor || Object(utils["b" /* getSecondaryColor */])(primaryColor)
    };
  }

  Object(utils["f" /* useInsertStyles */])();
  Object(utils["g" /* warning */])(Object(utils["c" /* isIconDefinition */])(icon), "icon should be icon definiton, but got ".concat(icon));

  if (!Object(utils["c" /* isIconDefinition */])(icon)) {
    return null;
  }

  var target = icon;

  if (target && typeof target.icon === 'function') {
    target = _objectSpread(_objectSpread({}, target), {}, {
      icon: target.icon(colors.primaryColor, colors.secondaryColor)
    });
  }

  return Object(utils["a" /* generate */])(target.icon, "svg-".concat(target.name), _objectSpread({
    className: className,
    onClick: onClick,
    style: style,
    'data-icon': target.name,
    width: '1em',
    height: '1em',
    fill: 'currentColor',
    'aria-hidden': 'true'
  }, restProps));
};

IconBase_IconBase.displayName = 'IconReact';
IconBase_IconBase.getTwoToneColors = getTwoToneColors;
IconBase_IconBase.setTwoToneColors = setTwoToneColors;
/* harmony default export */ var components_IconBase = (IconBase_IconBase);
// CONCATENATED MODULE: ../node_modules/@ant-design/icons/es/components/twoTonePrimaryColor.js



function setTwoToneColor(twoToneColor) {
  var _normalizeTwoToneColo = Object(utils["d" /* normalizeTwoToneColors */])(twoToneColor),
      _normalizeTwoToneColo2 = Object(slicedToArray["a" /* default */])(_normalizeTwoToneColo, 2),
      primaryColor = _normalizeTwoToneColo2[0],
      secondaryColor = _normalizeTwoToneColo2[1];

  return components_IconBase.setTwoToneColors({
    primaryColor: primaryColor,
    secondaryColor: secondaryColor
  });
}
function getTwoToneColor() {
  var colors = components_IconBase.getTwoToneColors();

  if (!colors.calculated) {
    return colors.primaryColor;
  }

  return [colors.primaryColor, colors.secondaryColor];
}
// CONCATENATED MODULE: ../node_modules/@ant-design/icons/es/components/AntdIcon.js









 // Initial setting
// should move it to antd main repo?

setTwoToneColor('#1890ff');
var Icon = react["forwardRef"](function (props, ref) {
  var className = props.className,
      icon = props.icon,
      spin = props.spin,
      rotate = props.rotate,
      tabIndex = props.tabIndex,
      onClick = props.onClick,
      twoToneColor = props.twoToneColor,
      restProps = Object(objectWithoutProperties["a" /* default */])(props, ["className", "icon", "spin", "rotate", "tabIndex", "onClick", "twoToneColor"]);

  var classString = classnames_default()('anticon', Object(defineProperty["a" /* default */])({}, "anticon-".concat(icon.name), Boolean(icon.name)), className);
  var svgClassString = classnames_default()({
    'anticon-spin': !!spin || icon.name === 'loading'
  });
  var iconTabIndex = tabIndex;

  if (iconTabIndex === undefined && onClick) {
    iconTabIndex = -1;
  }

  var svgStyle = rotate ? {
    msTransform: "rotate(".concat(rotate, "deg)"),
    transform: "rotate(".concat(rotate, "deg)")
  } : undefined;

  var _normalizeTwoToneColo = Object(utils["d" /* normalizeTwoToneColors */])(twoToneColor),
      _normalizeTwoToneColo2 = Object(slicedToArray["a" /* default */])(_normalizeTwoToneColo, 2),
      primaryColor = _normalizeTwoToneColo2[0],
      secondaryColor = _normalizeTwoToneColo2[1];

  return react["createElement"]("span", Object.assign({
    role: "img",
    "aria-label": icon.name
  }, restProps, {
    ref: ref,
    tabIndex: iconTabIndex,
    onClick: onClick,
    className: classString
  }), react["createElement"](components_IconBase, {
    className: svgClassString,
    icon: icon,
    primaryColor: primaryColor,
    secondaryColor: secondaryColor,
    style: svgStyle
  }));
});
Icon.displayName = 'AntdIcon';
Icon.getTwoToneColor = getTwoToneColor;
Icon.setTwoToneColor = setTwoToneColor;
/* harmony default export */ var AntdIcon = __webpack_exports__["a"] = (Icon);

/***/ }),

/***/ "v5c9":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ menu_Menu; });

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.to-string.js
var es6_regexp_to_string = __webpack_require__("4aJ6");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.date.to-string.js
var es6_date_to_string = __webpack_require__("M/4x");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.to-string.js
var es6_object_to_string = __webpack_require__("t91x");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.reflect.construct.js
var es6_reflect_construct = __webpack_require__("LXYL");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.set-prototype-of.js
var es6_object_set_prototype_of = __webpack_require__("1qKx");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.create.js
var es6_object_create = __webpack_require__("PAbq");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.define-property.js
var es6_object_define_property = __webpack_require__("d3/y");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.assign.js
var es6_object_assign = __webpack_require__("5hJT");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es7.symbol.async-iterator.js
var es7_symbol_async_iterator = __webpack_require__("+jjx");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.symbol.js
var es6_symbol = __webpack_require__("ABKx");

// EXTERNAL MODULE: ../node_modules/react/index.js
var react = __webpack_require__("mXGw");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.is-array.js
var es6_array_is_array = __webpack_require__("+3V6");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.index-of.js
var es6_array_index_of = __webpack_require__("V7cS");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.define-properties.js
var es6_object_define_properties = __webpack_require__("6/FK");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es7.object.get-own-property-descriptors.js
var es7_object_get_own_property_descriptors = __webpack_require__("2Tod");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.for-each.js
var es6_array_for_each = __webpack_require__("7lGJ");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.filter.js
var es6_array_filter = __webpack_require__("9p7t");

// EXTERNAL MODULE: ../node_modules/core-js/modules/web.dom.iterable.js
var web_dom_iterable = __webpack_require__("W1QL");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.iterator.js
var es6_array_iterator = __webpack_require__("K/PF");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.keys.js
var es6_object_keys = __webpack_require__("75LO");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__("mK0O");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/classCallCheck.js
var classCallCheck = __webpack_require__("hisu");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/createClass.js
var createClass = __webpack_require__("yBJb");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
var assertThisInitialized = __webpack_require__("0942");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/inherits.js + 1 modules
var inherits = __webpack_require__("CHlC");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js
var possibleConstructorReturn = __webpack_require__("kMo5");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js
var getPrototypeOf = __webpack_require__("P+uj");

// CONCATENATED MODULE: ../node_modules/mini-store/esm/Provider.js



var __extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (b.hasOwnProperty(p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();


var MiniStoreContext = react["createContext"](null);

var Provider_Provider =
/** @class */
function (_super) {
  __extends(Provider, _super);

  function Provider() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  Provider.prototype.render = function () {
    return react["createElement"](MiniStoreContext.Provider, {
      value: this.props.store
    }, this.props.children);
  };

  return Provider;
}(react["Component"]);


// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.function.name.js
var es6_function_name = __webpack_require__("GkPX");

// EXTERNAL MODULE: ../node_modules/shallowequal/index.js
var shallowequal = __webpack_require__("F56x");
var shallowequal_default = /*#__PURE__*/__webpack_require__.n(shallowequal);

// EXTERNAL MODULE: ../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js
var hoist_non_react_statics_cjs = __webpack_require__("GeWT");
var hoist_non_react_statics_cjs_default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics_cjs);

// CONCATENATED MODULE: ../node_modules/mini-store/esm/connect.js





var connect_extends = undefined && undefined.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (b.hasOwnProperty(p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};






function getDisplayName(WrappedComponent) {
  return WrappedComponent.displayName || WrappedComponent.name || 'Component';
}

var defaultMapStateToProps = function defaultMapStateToProps() {
  return {};
};

function connect(mapStateToProps, options) {
  if (options === void 0) {
    options = {};
  }

  var shouldSubscribe = !!mapStateToProps;
  var finalMapStateToProps = mapStateToProps || defaultMapStateToProps;
  return function wrapWithConnect(WrappedComponent) {
    var Connect =
    /** @class */
    function (_super) {
      connect_extends(Connect, _super);

      function Connect(props, context) {
        var _this = _super.call(this, props, context) || this;

        _this.unsubscribe = null;

        _this.handleChange = function () {
          if (!_this.unsubscribe) {
            return;
          }

          var nextState = finalMapStateToProps(_this.store.getState(), _this.props);

          _this.setState({
            subscribed: nextState
          });
        };

        _this.store = _this.context;
        _this.state = {
          subscribed: finalMapStateToProps(_this.store.getState(), props),
          store: _this.store,
          props: props
        };
        return _this;
      }

      Connect.getDerivedStateFromProps = function (props, prevState) {
        // using ownProps
        if (mapStateToProps && mapStateToProps.length === 2 && props !== prevState.props) {
          return {
            subscribed: finalMapStateToProps(prevState.store.getState(), props),
            props: props
          };
        }

        return {
          props: props
        };
      };

      Connect.prototype.componentDidMount = function () {
        this.trySubscribe();
      };

      Connect.prototype.componentWillUnmount = function () {
        this.tryUnsubscribe();
      };

      Connect.prototype.shouldComponentUpdate = function (nextProps, nextState) {
        return !shallowequal_default()(this.props, nextProps) || !shallowequal_default()(this.state.subscribed, nextState.subscribed);
      };

      Connect.prototype.trySubscribe = function () {
        if (shouldSubscribe) {
          this.unsubscribe = this.store.subscribe(this.handleChange);
          this.handleChange();
        }
      };

      Connect.prototype.tryUnsubscribe = function () {
        if (this.unsubscribe) {
          this.unsubscribe();
          this.unsubscribe = null;
        }
      };

      Connect.prototype.render = function () {
        var props = __assign(__assign(__assign({}, this.props), this.state.subscribed), {
          store: this.store
        });

        return react["createElement"](WrappedComponent, __assign({}, props, {
          ref: this.props.miniStoreForwardedRef
        }));
      };

      Connect.displayName = "Connect(" + getDisplayName(WrappedComponent) + ")";
      Connect.contextType = MiniStoreContext;
      return Connect;
    }(react["Component"]);

    if (options.forwardRef) {
      var forwarded = react["forwardRef"](function (props, ref) {
        return react["createElement"](Connect, __assign({}, props, {
          miniStoreForwardedRef: ref
        }));
      });
      return hoist_non_react_statics_cjs_default()(forwarded, WrappedComponent);
    }

    return hoist_non_react_statics_cjs_default()(Connect, WrappedComponent);
  };
}
// CONCATENATED MODULE: ../node_modules/mini-store/esm/create.js



var create_assign = undefined && undefined.__assign || function () {
  create_assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return create_assign.apply(this, arguments);
};

function create(initialState) {
  var state = initialState;
  var listeners = [];

  function setState(partial) {
    state = create_assign(create_assign({}, state), partial);

    for (var i = 0; i < listeners.length; i++) {
      listeners[i]();
    }
  }

  function getState() {
    return state;
  }

  function subscribe(listener) {
    listeners.push(listener);
    return function unsubscribe() {
      var index = listeners.indexOf(listener);
      listeners.splice(index, 1);
    };
  }

  return {
    setState: setState,
    getState: getState,
    subscribe: subscribe
  };
}
// CONCATENATED MODULE: ../node_modules/mini-store/esm/index.js



// EXTERNAL MODULE: ../node_modules/omit.js/es/index.js
var es = __webpack_require__("x9u5");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.map.js
var es6_array_map = __webpack_require__("yIlq");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.function.bind.js
var es6_function_bind = __webpack_require__("o7PZ");

// CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/extends.js
function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}
// EXTERNAL MODULE: ../node_modules/rc-util/es/KeyCode.js
var KeyCode = __webpack_require__("zAXs");

// EXTERNAL MODULE: ../node_modules/rc-util/es/createChainedFunction.js
var createChainedFunction = __webpack_require__("eDOA");

// EXTERNAL MODULE: ../node_modules/classnames/index.js
var classnames = __webpack_require__("8Jek");
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.find.js
var es6_array_find = __webpack_require__("it7j");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/typeof.js
var esm_typeof = __webpack_require__("J1LG");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.split.js
var es6_regexp_split = __webpack_require__("asZ9");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 1 modules
var slicedToArray = __webpack_require__("aNYv");

// CONCATENATED MODULE: ../node_modules/rc-menu/es/utils/isMobile.js














function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        Object(defineProperty["a" /* default */])(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
} // MIT License from https://github.com/kaimallea/isMobile


var applePhone = /iPhone/i;
var appleIpod = /iPod/i;
var appleTablet = /iPad/i;
var androidPhone = /\bAndroid(?:.+)Mobile\b/i; // Match 'Android' AND 'Mobile'

var androidTablet = /Android/i;
var amazonPhone = /\bAndroid(?:.+)SD4930UR\b/i;
var amazonTablet = /\bAndroid(?:.+)(?:KF[A-Z]{2,4})\b/i;
var windowsPhone = /Windows Phone/i;
var windowsTablet = /\bWindows(?:.+)ARM\b/i; // Match 'Windows' AND 'ARM'

var otherBlackberry = /BlackBerry/i;
var otherBlackberry10 = /BB10/i;
var otherOpera = /Opera Mini/i;
var otherChrome = /\b(CriOS|Chrome)(?:.+)Mobile/i;
var otherFirefox = /Mobile(?:.+)Firefox\b/i; // Match 'Mobile' AND 'Firefox'

function match(regex, userAgent) {
  return regex.test(userAgent);
}

function isMobile(userAgent) {
  var ua = userAgent || (typeof navigator !== 'undefined' ? navigator.userAgent : ''); // Facebook mobile app's integrated browser adds a bunch of strings that
  // match everything. Strip it out if it exists.

  var tmp = ua.split('[FBAN');

  if (typeof tmp[1] !== 'undefined') {
    var _tmp = tmp;

    var _tmp2 = Object(slicedToArray["a" /* default */])(_tmp, 1);

    ua = _tmp2[0];
  } // Twitter mobile app's integrated browser on iPad adds a "Twitter for
  // iPhone" string. Same probably happens on other tablet platforms.
  // This will confuse detection so strip it out if it exists.


  tmp = ua.split('Twitter');

  if (typeof tmp[1] !== 'undefined') {
    var _tmp3 = tmp;

    var _tmp4 = Object(slicedToArray["a" /* default */])(_tmp3, 1);

    ua = _tmp4[0];
  }

  var result = {
    apple: {
      phone: match(applePhone, ua) && !match(windowsPhone, ua),
      ipod: match(appleIpod, ua),
      tablet: !match(applePhone, ua) && match(appleTablet, ua) && !match(windowsPhone, ua),
      device: (match(applePhone, ua) || match(appleIpod, ua) || match(appleTablet, ua)) && !match(windowsPhone, ua)
    },
    amazon: {
      phone: match(amazonPhone, ua),
      tablet: !match(amazonPhone, ua) && match(amazonTablet, ua),
      device: match(amazonPhone, ua) || match(amazonTablet, ua)
    },
    android: {
      phone: !match(windowsPhone, ua) && match(amazonPhone, ua) || !match(windowsPhone, ua) && match(androidPhone, ua),
      tablet: !match(windowsPhone, ua) && !match(amazonPhone, ua) && !match(androidPhone, ua) && (match(amazonTablet, ua) || match(androidTablet, ua)),
      device: !match(windowsPhone, ua) && (match(amazonPhone, ua) || match(amazonTablet, ua) || match(androidPhone, ua) || match(androidTablet, ua)) || match(/\bokhttp\b/i, ua)
    },
    windows: {
      phone: match(windowsPhone, ua),
      tablet: match(windowsTablet, ua),
      device: match(windowsPhone, ua) || match(windowsTablet, ua)
    },
    other: {
      blackberry: match(otherBlackberry, ua),
      blackberry10: match(otherBlackberry10, ua),
      opera: match(otherOpera, ua),
      firefox: match(otherFirefox, ua),
      chrome: match(otherChrome, ua),
      device: match(otherBlackberry, ua) || match(otherBlackberry10, ua) || match(otherOpera, ua) || match(otherFirefox, ua) || match(otherChrome, ua)
    },
    // Additional
    any: null,
    phone: null,
    tablet: null
  };
  result.any = result.apple.device || result.android.device || result.windows.device || result.other.device; // excludes 'other' devices and ipods, targeting touchscreen phones

  result.phone = result.apple.phone || result.android.phone || result.windows.phone;
  result.tablet = result.apple.tablet || result.android.tablet || result.windows.tablet;
  return result;
}

var defaultResult = _objectSpread(_objectSpread({}, isMobile()), {}, {
  isMobile: isMobile
});

/* harmony default export */ var utils_isMobile = (defaultResult);
// CONCATENATED MODULE: ../node_modules/rc-menu/es/util.js






function noop() {}
function getKeyFromChildrenIndex(child, menuEventKey, index) {
  var prefix = menuEventKey || '';
  return child.key || "".concat(prefix, "item_").concat(index);
}
function getMenuIdFromSubMenuEventKey(eventKey) {
  return "".concat(eventKey, "-menu-");
}
function loopMenuItem(children, cb) {
  var index = -1;
  react_default.a.Children.forEach(children, function (c) {
    index += 1;

    if (c && c.type && c.type.isMenuItemGroup) {
      react_default.a.Children.forEach(c.props.children, function (c2) {
        index += 1;
        cb(c2, index);
      });
    } else {
      cb(c, index);
    }
  });
}
function loopMenuItemRecursively(children, keys, ret) {
  /* istanbul ignore if */
  if (!children || ret.find) {
    return;
  }

  react_default.a.Children.forEach(children, function (c) {
    if (c) {
      var construct = c.type;

      if (!construct || !(construct.isSubMenu || construct.isMenuItem || construct.isMenuItemGroup)) {
        return;
      }

      if (keys.indexOf(c.key) !== -1) {
        ret.find = true;
      } else if (c.props.children) {
        loopMenuItemRecursively(c.props.children, keys, ret);
      }
    }
  });
}
var menuAllProps = ['defaultSelectedKeys', 'selectedKeys', 'defaultOpenKeys', 'openKeys', 'mode', 'getPopupContainer', 'onSelect', 'onDeselect', 'onDestroy', 'openTransitionName', 'openAnimation', 'subMenuOpenDelay', 'subMenuCloseDelay', 'forceSubMenuRender', 'triggerSubMenuAction', 'level', 'selectable', 'multiple', 'onOpenChange', 'visible', 'focusable', 'defaultActiveFirst', 'prefixCls', 'inlineIndent', 'parentMenu', 'title', 'rootPrefixCls', 'eventKey', 'active', 'onItemHover', 'onTitleMouseEnter', 'onTitleMouseLeave', 'onTitleClick', 'popupAlign', 'popupOffset', 'isOpen', 'renderMenuItem', 'manualRef', 'subMenuKey', 'disabled', 'index', 'isSelected', 'store', 'activeKey', 'builtinPlacements', 'overflowedIndicator', 'motion', // the following keys found need to be removed from test regression
'attribute', 'value', 'popupClassName', 'inlineCollapsed', 'menu', 'theme', 'itemIcon', 'expandIcon']; // ref: https://github.com/ant-design/ant-design/issues/14007
// ref: https://bugs.chromium.org/p/chromium/issues/detail?id=360889
// getBoundingClientRect return the full precision value, which is
// not the same behavior as on chrome. Set the precision to 6 to
// unify their behavior

var getWidth = function getWidth(elem) {
  var width = elem && typeof elem.getBoundingClientRect === 'function' && elem.getBoundingClientRect().width;

  if (width) {
    width = +width.toFixed(6);
  }

  return width || 0;
};
var util_setStyle = function setStyle(elem, styleProperty, value) {
  if (elem && Object(esm_typeof["a" /* default */])(elem.style) === 'object') {
    elem.style[styleProperty] = value;
  }
};
var util_isMobileDevice = function isMobileDevice() {
  return utils_isMobile.any;
};
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.reduce.js
var es6_array_reduce = __webpack_require__("3y5y");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 2 modules
var toConsumableArray = __webpack_require__("6CzD");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js + 1 modules
var objectWithoutProperties = __webpack_require__("dV/x");

// EXTERNAL MODULE: ../node_modules/react-dom/index.js
var react_dom = __webpack_require__("xARA");
var react_dom_default = /*#__PURE__*/__webpack_require__.n(react_dom);

// EXTERNAL MODULE: ../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js
var ResizeObserver_es = __webpack_require__("iXzu");

// EXTERNAL MODULE: ../node_modules/rc-trigger/es/index.js + 10 modules
var rc_trigger_es = __webpack_require__("mPTt");

// EXTERNAL MODULE: ../node_modules/rc-animate/es/CSSMotion.js
var CSSMotion = __webpack_require__("67vp");

// CONCATENATED MODULE: ../node_modules/rc-menu/es/placements.js
var autoAdjustOverflow = {
  adjustX: 1,
  adjustY: 1
};
var placements = {
  topLeft: {
    points: ['bl', 'tl'],
    overflow: autoAdjustOverflow,
    offset: [0, -7]
  },
  bottomLeft: {
    points: ['tl', 'bl'],
    overflow: autoAdjustOverflow,
    offset: [0, 7]
  },
  leftTop: {
    points: ['tr', 'tl'],
    overflow: autoAdjustOverflow,
    offset: [-4, 0]
  },
  rightTop: {
    points: ['tl', 'tr'],
    overflow: autoAdjustOverflow,
    offset: [4, 0]
  }
};
var placementsRtl = {
  topLeft: {
    points: ['bl', 'tl'],
    overflow: autoAdjustOverflow,
    offset: [0, -7]
  },
  bottomLeft: {
    points: ['tl', 'bl'],
    overflow: autoAdjustOverflow,
    offset: [0, 7]
  },
  rightTop: {
    points: ['tr', 'tl'],
    overflow: autoAdjustOverflow,
    offset: [-4, 0]
  },
  leftTop: {
    points: ['tl', 'tr'],
    overflow: autoAdjustOverflow,
    offset: [4, 0]
  }
};
/* harmony default export */ var es_placements = (placements);
// CONCATENATED MODULE: ../node_modules/rc-menu/es/SubMenu.js























function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = Object(getPrototypeOf["a" /* default */])(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = Object(getPrototypeOf["a" /* default */])(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return Object(possibleConstructorReturn["a" /* default */])(this, result);
  };
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function SubMenu_ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function SubMenu_objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      SubMenu_ownKeys(Object(source), true).forEach(function (key) {
        Object(defineProperty["a" /* default */])(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      SubMenu_ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}











var guid = 0;
var popupPlacementMap = {
  horizontal: 'bottomLeft',
  vertical: 'rightTop',
  'vertical-left': 'rightTop',
  'vertical-right': 'leftTop'
};

var SubMenu_updateDefaultActiveFirst = function updateDefaultActiveFirst(store, eventKey, defaultActiveFirst) {
  var menuId = getMenuIdFromSubMenuEventKey(eventKey);
  var state = store.getState();
  store.setState({
    defaultActiveFirst: SubMenu_objectSpread(SubMenu_objectSpread({}, state.defaultActiveFirst), {}, Object(defineProperty["a" /* default */])({}, menuId, defaultActiveFirst))
  });
};

var SubMenu_SubMenu = /*#__PURE__*/function (_React$Component) {
  Object(inherits["a" /* default */])(SubMenu, _React$Component);

  var _super = _createSuper(SubMenu);

  function SubMenu(props) {
    var _this;

    Object(classCallCheck["a" /* default */])(this, SubMenu);

    _this = _super.call(this, props);

    _this.onDestroy = function (key) {
      _this.props.onDestroy(key);
    };
    /**
     * note:
     *  This legacy code that `onKeyDown` is called by parent instead of dom self.
     *  which need return code to check if this event is handled
     */


    _this.onKeyDown = function (e) {
      var keyCode = e.keyCode;
      var menu = _this.menuInstance;
      var _this$props = _this.props,
          isOpen = _this$props.isOpen,
          store = _this$props.store;

      if (keyCode === KeyCode["a" /* default */].ENTER) {
        _this.onTitleClick(e);

        SubMenu_updateDefaultActiveFirst(store, _this.props.eventKey, true);
        return true;
      }

      if (keyCode === KeyCode["a" /* default */].RIGHT) {
        if (isOpen) {
          menu.onKeyDown(e);
        } else {
          _this.triggerOpenChange(true); // need to update current menu's defaultActiveFirst value


          SubMenu_updateDefaultActiveFirst(store, _this.props.eventKey, true);
        }

        return true;
      }

      if (keyCode === KeyCode["a" /* default */].LEFT) {
        var handled;

        if (isOpen) {
          handled = menu.onKeyDown(e);
        } else {
          return undefined;
        }

        if (!handled) {
          _this.triggerOpenChange(false);

          handled = true;
        }

        return handled;
      }

      if (isOpen && (keyCode === KeyCode["a" /* default */].UP || keyCode === KeyCode["a" /* default */].DOWN)) {
        return menu.onKeyDown(e);
      }

      return undefined;
    };

    _this.onOpenChange = function (e) {
      _this.props.onOpenChange(e);
    };

    _this.onPopupVisibleChange = function (visible) {
      _this.triggerOpenChange(visible, visible ? 'mouseenter' : 'mouseleave');
    };

    _this.onMouseEnter = function (e) {
      var _this$props2 = _this.props,
          key = _this$props2.eventKey,
          onMouseEnter = _this$props2.onMouseEnter,
          store = _this$props2.store;
      SubMenu_updateDefaultActiveFirst(store, _this.props.eventKey, false);
      onMouseEnter({
        key: key,
        domEvent: e
      });
    };

    _this.onMouseLeave = function (e) {
      var _this$props3 = _this.props,
          parentMenu = _this$props3.parentMenu,
          eventKey = _this$props3.eventKey,
          onMouseLeave = _this$props3.onMouseLeave;
      parentMenu.subMenuInstance = Object(assertThisInitialized["a" /* default */])(_this);
      onMouseLeave({
        key: eventKey,
        domEvent: e
      });
    };

    _this.onTitleMouseEnter = function (domEvent) {
      var _this$props4 = _this.props,
          key = _this$props4.eventKey,
          onItemHover = _this$props4.onItemHover,
          onTitleMouseEnter = _this$props4.onTitleMouseEnter;
      onItemHover({
        key: key,
        hover: true
      });
      onTitleMouseEnter({
        key: key,
        domEvent: domEvent
      });
    };

    _this.onTitleMouseLeave = function (e) {
      var _this$props5 = _this.props,
          parentMenu = _this$props5.parentMenu,
          eventKey = _this$props5.eventKey,
          onItemHover = _this$props5.onItemHover,
          onTitleMouseLeave = _this$props5.onTitleMouseLeave;
      parentMenu.subMenuInstance = Object(assertThisInitialized["a" /* default */])(_this);
      onItemHover({
        key: eventKey,
        hover: false
      });
      onTitleMouseLeave({
        key: eventKey,
        domEvent: e
      });
    };

    _this.onTitleClick = function (e) {
      var _assertThisInitialize = Object(assertThisInitialized["a" /* default */])(_this),
          props = _assertThisInitialize.props;

      props.onTitleClick({
        key: props.eventKey,
        domEvent: e
      });

      if (props.triggerSubMenuAction === 'hover') {
        return;
      }

      _this.triggerOpenChange(!props.isOpen, 'click');

      SubMenu_updateDefaultActiveFirst(props.store, _this.props.eventKey, false);
    };

    _this.onSubMenuClick = function (info) {
      // in the case of overflowed submenu
      // onClick is not copied over
      if (typeof _this.props.onClick === 'function') {
        _this.props.onClick(_this.addKeyPath(info));
      }
    };

    _this.onSelect = function (info) {
      _this.props.onSelect(info);
    };

    _this.onDeselect = function (info) {
      _this.props.onDeselect(info);
    };

    _this.getPrefixCls = function () {
      return "".concat(_this.props.rootPrefixCls, "-submenu");
    };

    _this.getActiveClassName = function () {
      return "".concat(_this.getPrefixCls(), "-active");
    };

    _this.getDisabledClassName = function () {
      return "".concat(_this.getPrefixCls(), "-disabled");
    };

    _this.getSelectedClassName = function () {
      return "".concat(_this.getPrefixCls(), "-selected");
    };

    _this.getOpenClassName = function () {
      return "".concat(_this.props.rootPrefixCls, "-submenu-open");
    };

    _this.saveMenuInstance = function (c) {
      // children menu instance
      _this.menuInstance = c;
    };

    _this.addKeyPath = function (info) {
      return SubMenu_objectSpread(SubMenu_objectSpread({}, info), {}, {
        keyPath: (info.keyPath || []).concat(_this.props.eventKey)
      });
    };

    _this.triggerOpenChange = function (open, type) {
      var key = _this.props.eventKey;

      var openChange = function openChange() {
        _this.onOpenChange({
          key: key,
          item: Object(assertThisInitialized["a" /* default */])(_this),
          trigger: type,
          open: open
        });
      };

      if (type === 'mouseenter') {
        // make sure mouseenter happen after other menu item's mouseleave
        _this.mouseenterTimeout = setTimeout(function () {
          openChange();
        }, 0);
      } else {
        openChange();
      }
    };

    _this.isChildrenSelected = function () {
      var ret = {
        find: false
      };
      loopMenuItemRecursively(_this.props.children, _this.props.selectedKeys, ret);
      return ret.find;
    };

    _this.isOpen = function () {
      return _this.props.openKeys.indexOf(_this.props.eventKey) !== -1;
    };

    _this.adjustWidth = function () {
      /* istanbul ignore if */
      if (!_this.subMenuTitle || !_this.menuInstance) {
        return;
      }

      var popupMenu = react_dom_default.a.findDOMNode(_this.menuInstance);

      if (popupMenu.offsetWidth >= _this.subMenuTitle.offsetWidth) {
        return;
      }
      /* istanbul ignore next */


      popupMenu.style.minWidth = "".concat(_this.subMenuTitle.offsetWidth, "px");
    };

    _this.saveSubMenuTitle = function (subMenuTitle) {
      _this.subMenuTitle = subMenuTitle;
    };

    _this.getBaseProps = function () {
      var _assertThisInitialize2 = Object(assertThisInitialized["a" /* default */])(_this),
          props = _assertThisInitialize2.props;

      return {
        mode: props.mode === 'horizontal' ? 'vertical' : props.mode,
        visible: _this.props.isOpen,
        level: props.level + 1,
        inlineIndent: props.inlineIndent,
        focusable: false,
        onClick: _this.onSubMenuClick,
        onSelect: _this.onSelect,
        onDeselect: _this.onDeselect,
        onDestroy: _this.onDestroy,
        selectedKeys: props.selectedKeys,
        eventKey: "".concat(props.eventKey, "-menu-"),
        openKeys: props.openKeys,
        motion: props.motion,
        onOpenChange: _this.onOpenChange,
        subMenuOpenDelay: props.subMenuOpenDelay,
        parentMenu: Object(assertThisInitialized["a" /* default */])(_this),
        subMenuCloseDelay: props.subMenuCloseDelay,
        forceSubMenuRender: props.forceSubMenuRender,
        triggerSubMenuAction: props.triggerSubMenuAction,
        builtinPlacements: props.builtinPlacements,
        defaultActiveFirst: props.store.getState().defaultActiveFirst[getMenuIdFromSubMenuEventKey(props.eventKey)],
        multiple: props.multiple,
        prefixCls: props.rootPrefixCls,
        id: _this.internalMenuId,
        manualRef: _this.saveMenuInstance,
        itemIcon: props.itemIcon,
        expandIcon: props.expandIcon,
        direction: props.direction
      };
    };

    _this.getMotion = function (mode, visible) {
      var _assertThisInitialize3 = Object(assertThisInitialized["a" /* default */])(_this),
          haveRendered = _assertThisInitialize3.haveRendered;

      var _this$props6 = _this.props,
          motion = _this$props6.motion,
          rootPrefixCls = _this$props6.rootPrefixCls; // don't show transition on first rendering (no animation for opened menu)
      // show appear transition if it's not visible (not sure why)
      // show appear transition if it's not inline mode

      var mergedMotion = SubMenu_objectSpread(SubMenu_objectSpread({}, motion), {}, {
        leavedClassName: "".concat(rootPrefixCls, "-hidden"),
        removeOnLeave: false,
        motionAppear: haveRendered || !visible || mode !== 'inline'
      });

      return mergedMotion;
    };

    var store = props.store,
        eventKey = props.eventKey;

    var _store$getState = store.getState(),
        defaultActiveFirst = _store$getState.defaultActiveFirst;

    _this.isRootMenu = false;
    var value = false;

    if (defaultActiveFirst) {
      value = defaultActiveFirst[eventKey];
    }

    SubMenu_updateDefaultActiveFirst(store, eventKey, value);
    return _this;
  }

  Object(createClass["a" /* default */])(SubMenu, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.componentDidUpdate();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      var _this2 = this;

      var _this$props7 = this.props,
          mode = _this$props7.mode,
          parentMenu = _this$props7.parentMenu,
          manualRef = _this$props7.manualRef; // invoke customized ref to expose component to mixin

      if (manualRef) {
        manualRef(this);
      }

      if (mode !== 'horizontal' || !parentMenu.isRootMenu || !this.props.isOpen) {
        return;
      }

      this.minWidthTimeout = setTimeout(function () {
        return _this2.adjustWidth();
      }, 0);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var _this$props8 = this.props,
          onDestroy = _this$props8.onDestroy,
          eventKey = _this$props8.eventKey;

      if (onDestroy) {
        onDestroy(eventKey);
      }
      /* istanbul ignore if */


      if (this.minWidthTimeout) {
        clearTimeout(this.minWidthTimeout);
      }
      /* istanbul ignore if */


      if (this.mouseenterTimeout) {
        clearTimeout(this.mouseenterTimeout);
      }
    }
  }, {
    key: "renderChildren",
    value: function renderChildren(children) {
      var _this3 = this;

      var baseProps = this.getBaseProps(); // [Legacy] getMotion must be called before `haveRendered`

      var mergedMotion = this.getMotion(baseProps.mode, baseProps.visible);
      this.haveRendered = true;
      this.haveOpened = this.haveOpened || baseProps.visible || baseProps.forceSubMenuRender; // never rendered not planning to, don't render

      if (!this.haveOpened) {
        return react_default.a.createElement("div", null);
      }

      var direction = baseProps.direction;
      return react_default.a.createElement(CSSMotion["a" /* default */], Object.assign({
        visible: baseProps.visible
      }, mergedMotion), function (_ref) {
        var className = _ref.className,
            style = _ref.style;
        var mergedClassName = classnames_default()("".concat(baseProps.prefixCls, "-sub"), className, Object(defineProperty["a" /* default */])({}, "".concat(baseProps.prefixCls, "-rtl"), direction === 'rtl'));
        return react_default.a.createElement(es_SubPopupMenu, Object.assign({}, baseProps, {
          id: _this3.internalMenuId,
          className: mergedClassName,
          style: style
        }), children);
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _classNames2;

      var props = SubMenu_objectSpread({}, this.props);

      var isOpen = props.isOpen;
      var prefixCls = this.getPrefixCls();
      var isInlineMode = props.mode === 'inline';
      var className = classnames_default()(prefixCls, "".concat(prefixCls, "-").concat(props.mode), (_classNames2 = {}, Object(defineProperty["a" /* default */])(_classNames2, props.className, !!props.className), Object(defineProperty["a" /* default */])(_classNames2, this.getOpenClassName(), isOpen), Object(defineProperty["a" /* default */])(_classNames2, this.getActiveClassName(), props.active || isOpen && !isInlineMode), Object(defineProperty["a" /* default */])(_classNames2, this.getDisabledClassName(), props.disabled), Object(defineProperty["a" /* default */])(_classNames2, this.getSelectedClassName(), this.isChildrenSelected()), _classNames2));

      if (!this.internalMenuId) {
        if (props.eventKey) {
          this.internalMenuId = "".concat(props.eventKey, "$Menu");
        } else {
          guid += 1;
          this.internalMenuId = "$__$".concat(guid, "$Menu");
        }
      }

      var mouseEvents = {};
      var titleClickEvents = {};
      var titleMouseEvents = {};

      if (!props.disabled) {
        mouseEvents = {
          onMouseLeave: this.onMouseLeave,
          onMouseEnter: this.onMouseEnter
        }; // only works in title, not outer li

        titleClickEvents = {
          onClick: this.onTitleClick
        };
        titleMouseEvents = {
          onMouseEnter: this.onTitleMouseEnter,
          onMouseLeave: this.onTitleMouseLeave
        };
      }

      var style = {};
      var direction = props.direction;

      if (isInlineMode) {
        if (direction === 'rtl') {
          style.paddingRight = props.inlineIndent * props.level;
        } else {
          style.paddingLeft = props.inlineIndent * props.level;
        }
      }

      var ariaOwns = {}; // only set aria-owns when menu is open
      // otherwise it would be an invalid aria-owns value
      // since corresponding node cannot be found

      if (this.props.isOpen) {
        ariaOwns = {
          'aria-owns': this.internalMenuId
        };
      } // expand custom icon should NOT be displayed in menu with horizontal mode.


      var icon = null;

      if (props.mode !== 'horizontal') {
        icon = this.props.expandIcon; // ReactNode

        if (typeof this.props.expandIcon === 'function') {
          icon = react_default.a.createElement(this.props.expandIcon, SubMenu_objectSpread({}, this.props));
        }
      }

      var title = react_default.a.createElement("div", Object.assign({
        ref: this.saveSubMenuTitle,
        style: style,
        className: "".concat(prefixCls, "-title"),
        role: "button"
      }, titleMouseEvents, titleClickEvents, {
        "aria-expanded": isOpen
      }, ariaOwns, {
        "aria-haspopup": "true",
        title: typeof props.title === 'string' ? props.title : undefined
      }), props.title, icon || react_default.a.createElement("i", {
        className: "".concat(prefixCls, "-arrow")
      }));
      var children = this.renderChildren(props.children);
      var getPopupContainer = props.parentMenu.isRootMenu ? props.parentMenu.props.getPopupContainer : function (triggerNode) {
        return triggerNode.parentNode;
      };
      var popupPlacement = popupPlacementMap[props.mode];
      var popupAlign = props.popupOffset ? {
        offset: props.popupOffset
      } : {};
      var popupClassName = props.mode === 'inline' ? '' : props.popupClassName;
      popupClassName += direction === 'rtl' ? " ".concat(prefixCls, "-rtl") : '';
      var disabled = props.disabled,
          triggerSubMenuAction = props.triggerSubMenuAction,
          subMenuOpenDelay = props.subMenuOpenDelay,
          forceSubMenuRender = props.forceSubMenuRender,
          subMenuCloseDelay = props.subMenuCloseDelay,
          builtinPlacements = props.builtinPlacements;
      menuAllProps.forEach(function (key) {
        return delete props[key];
      }); // Set onClick to null, to ignore propagated onClick event

      delete props.onClick;
      var placement = direction === 'rtl' ? Object.assign({}, placementsRtl, builtinPlacements) : Object.assign({}, placements, builtinPlacements);
      delete props.direction;
      return react_default.a.createElement("li", Object.assign({}, props, mouseEvents, {
        className: className,
        role: "menuitem"
      }), isInlineMode && title, isInlineMode && children, !isInlineMode && react_default.a.createElement(rc_trigger_es["a" /* default */], {
        prefixCls: prefixCls,
        popupClassName: classnames_default()("".concat(prefixCls, "-popup"), popupClassName),
        getPopupContainer: getPopupContainer,
        builtinPlacements: placement,
        popupPlacement: popupPlacement,
        popupVisible: isOpen,
        popupAlign: popupAlign,
        popup: children,
        action: disabled ? [] : [triggerSubMenuAction],
        mouseEnterDelay: subMenuOpenDelay,
        mouseLeaveDelay: subMenuCloseDelay,
        onPopupVisibleChange: this.onPopupVisibleChange,
        forceRender: forceSubMenuRender
      }, title));
    }
  }]);

  return SubMenu;
}(react_default.a.Component);
SubMenu_SubMenu.defaultProps = {
  onMouseEnter: noop,
  onMouseLeave: noop,
  onTitleMouseEnter: noop,
  onTitleMouseLeave: noop,
  onTitleClick: noop,
  manualRef: noop,
  mode: 'vertical',
  title: ''
};
var connected = connect(function (_ref2, _ref3) {
  var openKeys = _ref2.openKeys,
      activeKey = _ref2.activeKey,
      selectedKeys = _ref2.selectedKeys;
  var eventKey = _ref3.eventKey,
      subMenuKey = _ref3.subMenuKey;
  return {
    isOpen: openKeys.indexOf(eventKey) > -1,
    active: activeKey[subMenuKey] === eventKey,
    selectedKeys: selectedKeys
  };
})(SubMenu_SubMenu);
connected.isSubMenu = true;
/* harmony default export */ var es_SubMenu = (connected);
// CONCATENATED MODULE: ../node_modules/rc-menu/es/DOMWrap.js




























function DOMWrap_ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function DOMWrap_objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      DOMWrap_ownKeys(Object(source), true).forEach(function (key) {
        Object(defineProperty["a" /* default */])(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      DOMWrap_ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function DOMWrap_createSuper(Derived) {
  var hasNativeReflectConstruct = DOMWrap_isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = Object(getPrototypeOf["a" /* default */])(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = Object(getPrototypeOf["a" /* default */])(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return Object(possibleConstructorReturn["a" /* default */])(this, result);
  };
}

function DOMWrap_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}






var MENUITEM_OVERFLOWED_CLASSNAME = 'menuitem-overflowed';
var FLOAT_PRECISION_ADJUST = 0.5;

var DOMWrap_DOMWrap = /*#__PURE__*/function (_React$Component) {
  Object(inherits["a" /* default */])(DOMWrap, _React$Component);

  var _super = DOMWrap_createSuper(DOMWrap);

  function DOMWrap() {
    var _this;

    Object(classCallCheck["a" /* default */])(this, DOMWrap);

    _this = _super.apply(this, arguments);
    _this.resizeObserver = null;
    _this.mutationObserver = null; // original scroll size of the list

    _this.originalTotalWidth = 0; // copy of overflowed items

    _this.overflowedItems = []; // cache item of the original items (so we can track the size and order)

    _this.menuItemSizes = [];
    _this.cancelFrameId = null;
    _this.state = {
      lastVisibleIndex: undefined
    }; // get all valid menuItem nodes

    _this.getMenuItemNodes = function () {
      var prefixCls = _this.props.prefixCls;
      var ul = react_dom_default.a.findDOMNode(Object(assertThisInitialized["a" /* default */])(_this));

      if (!ul) {
        return [];
      } // filter out all overflowed indicator placeholder


      return [].slice.call(ul.children).filter(function (node) {
        return node.className.split(' ').indexOf("".concat(prefixCls, "-overflowed-submenu")) < 0;
      });
    };

    _this.getOverflowedSubMenuItem = function (keyPrefix, overflowedItems, renderPlaceholder) {
      var _this$props = _this.props,
          overflowedIndicator = _this$props.overflowedIndicator,
          level = _this$props.level,
          mode = _this$props.mode,
          prefixCls = _this$props.prefixCls,
          theme = _this$props.theme;

      if (level !== 1 || mode !== 'horizontal') {
        return null;
      } // put all the overflowed item inside a submenu
      // with a title of overflow indicator ('...')


      var copy = _this.props.children[0];

      var _copy$props = copy.props,
          throwAway = _copy$props.children,
          title = _copy$props.title,
          propStyle = _copy$props.style,
          rest = Object(objectWithoutProperties["a" /* default */])(_copy$props, ["children", "title", "style"]);

      var style = DOMWrap_objectSpread({}, propStyle);

      var key = "".concat(keyPrefix, "-overflowed-indicator");
      var eventKey = "".concat(keyPrefix, "-overflowed-indicator");

      if (overflowedItems.length === 0 && renderPlaceholder !== true) {
        style = DOMWrap_objectSpread(DOMWrap_objectSpread({}, style), {}, {
          display: 'none'
        });
      } else if (renderPlaceholder) {
        style = DOMWrap_objectSpread(DOMWrap_objectSpread({}, style), {}, {
          visibility: 'hidden',
          // prevent from taking normal dom space
          position: 'absolute'
        });
        key = "".concat(key, "-placeholder");
        eventKey = "".concat(eventKey, "-placeholder");
      }

      var popupClassName = theme ? "".concat(prefixCls, "-").concat(theme) : '';
      var props = {};
      menuAllProps.forEach(function (k) {
        if (rest[k] !== undefined) {
          props[k] = rest[k];
        }
      });
      return react_default.a.createElement(es_SubMenu, Object.assign({
        title: overflowedIndicator,
        className: "".concat(prefixCls, "-overflowed-submenu"),
        popupClassName: popupClassName
      }, props, {
        key: key,
        eventKey: eventKey,
        disabled: false,
        style: style
      }), overflowedItems);
    }; // memorize rendered menuSize


    _this.setChildrenWidthAndResize = function () {
      if (_this.props.mode !== 'horizontal') {
        return;
      }

      var ul = react_dom_default.a.findDOMNode(Object(assertThisInitialized["a" /* default */])(_this));

      if (!ul) {
        return;
      }

      var ulChildrenNodes = ul.children;

      if (!ulChildrenNodes || ulChildrenNodes.length === 0) {
        return;
      }

      var lastOverflowedIndicatorPlaceholder = ul.children[ulChildrenNodes.length - 1]; // need last overflowed indicator for calculating length;

      util_setStyle(lastOverflowedIndicatorPlaceholder, 'display', 'inline-block');

      var menuItemNodes = _this.getMenuItemNodes(); // reset display attribute for all hidden elements caused by overflow to calculate updated width
      // and then reset to original state after width calculation


      var overflowedItems = menuItemNodes.filter(function (c) {
        return c.className.split(' ').indexOf(MENUITEM_OVERFLOWED_CLASSNAME) >= 0;
      });
      overflowedItems.forEach(function (c) {
        util_setStyle(c, 'display', 'inline-block');
      });
      _this.menuItemSizes = menuItemNodes.map(function (c) {
        return getWidth(c);
      });
      overflowedItems.forEach(function (c) {
        util_setStyle(c, 'display', 'none');
      });
      _this.overflowedIndicatorWidth = getWidth(ul.children[ul.children.length - 1]);
      _this.originalTotalWidth = _this.menuItemSizes.reduce(function (acc, cur) {
        return acc + cur;
      }, 0);

      _this.handleResize(); // prevent the overflowed indicator from taking space;


      util_setStyle(lastOverflowedIndicatorPlaceholder, 'display', 'none');
    };

    _this.handleResize = function () {
      if (_this.props.mode !== 'horizontal') {
        return;
      }

      var ul = react_dom_default.a.findDOMNode(Object(assertThisInitialized["a" /* default */])(_this));

      if (!ul) {
        return;
      }

      var width = getWidth(ul);
      _this.overflowedItems = [];
      var currentSumWidth = 0; // index for last visible child in horizontal mode

      var lastVisibleIndex; // float number comparison could be problematic
      // e.g. 0.1 + 0.2 > 0.3 =====> true
      // thus using FLOAT_PRECISION_ADJUST as buffer to help the situation

      if (_this.originalTotalWidth > width + FLOAT_PRECISION_ADJUST) {
        lastVisibleIndex = -1;

        _this.menuItemSizes.forEach(function (liWidth) {
          currentSumWidth += liWidth;

          if (currentSumWidth + _this.overflowedIndicatorWidth <= width) {
            lastVisibleIndex += 1;
          }
        });
      }

      _this.setState({
        lastVisibleIndex: lastVisibleIndex
      });
    };

    return _this;
  }

  Object(createClass["a" /* default */])(DOMWrap, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      this.setChildrenWidthAndResize();

      if (this.props.level === 1 && this.props.mode === 'horizontal') {
        var menuUl = react_dom_default.a.findDOMNode(this);

        if (!menuUl) {
          return;
        }

        this.resizeObserver = new ResizeObserver_es["default"](function (entries) {
          entries.forEach(function () {
            var cancelFrameId = _this2.cancelFrameId;
            cancelAnimationFrame(cancelFrameId);
            _this2.cancelFrameId = requestAnimationFrame(_this2.setChildrenWidthAndResize);
          });
        });
        [].slice.call(menuUl.children).concat(menuUl).forEach(function (el) {
          _this2.resizeObserver.observe(el);
        });

        if (typeof MutationObserver !== 'undefined') {
          this.mutationObserver = new MutationObserver(function () {
            _this2.resizeObserver.disconnect();

            [].slice.call(menuUl.children).concat(menuUl).forEach(function (el) {
              _this2.resizeObserver.observe(el);
            });

            _this2.setChildrenWidthAndResize();
          });
          this.mutationObserver.observe(menuUl, {
            attributes: false,
            childList: true,
            subTree: false
          });
        }
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.resizeObserver) {
        this.resizeObserver.disconnect();
      }

      if (this.mutationObserver) {
        this.mutationObserver.disconnect();
      }

      cancelAnimationFrame(this.cancelFrameId);
    }
  }, {
    key: "renderChildren",
    value: function renderChildren(children) {
      var _this3 = this; // need to take care of overflowed items in horizontal mode


      var lastVisibleIndex = this.state.lastVisibleIndex;
      return (children || []).reduce(function (acc, childNode, index) {
        var item = childNode;

        if (_this3.props.mode === 'horizontal') {
          var overflowed = _this3.getOverflowedSubMenuItem(childNode.props.eventKey, []);

          if (lastVisibleIndex !== undefined && _this3.props.className.indexOf("".concat(_this3.props.prefixCls, "-root")) !== -1) {
            if (index > lastVisibleIndex) {
              item = react_default.a.cloneElement(childNode, // 这里修改 eventKey 是为了防止隐藏状态下还会触发 openkeys 事件
              {
                style: {
                  display: 'none'
                },
                eventKey: "".concat(childNode.props.eventKey, "-hidden"),

                /**
                 * Legacy code. Here `className` never used:
                 * https://github.com/react-component/menu/commit/4cd6b49fce9d116726f4ea00dda85325d6f26500#diff-e2fa48f75c2dd2318295cde428556a76R240
                 */
                className: "".concat(MENUITEM_OVERFLOWED_CLASSNAME)
              });
            }

            if (index === lastVisibleIndex + 1) {
              _this3.overflowedItems = children.slice(lastVisibleIndex + 1).map(function (c) {
                return react_default.a.cloneElement(c, // children[index].key will become '.$key' in clone by default,
                // we have to overwrite with the correct key explicitly
                {
                  key: c.props.eventKey,
                  mode: 'vertical-left'
                });
              });
              overflowed = _this3.getOverflowedSubMenuItem(childNode.props.eventKey, _this3.overflowedItems);
            }
          }

          var ret = [].concat(Object(toConsumableArray["a" /* default */])(acc), [overflowed, item]);

          if (index === children.length - 1) {
            // need a placeholder for calculating overflowed indicator width
            ret.push(_this3.getOverflowedSubMenuItem(childNode.props.eventKey, [], true));
          }

          return ret;
        }

        return [].concat(Object(toConsumableArray["a" /* default */])(acc), [item]);
      }, []);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          visible = _this$props2.visible,
          prefixCls = _this$props2.prefixCls,
          overflowedIndicator = _this$props2.overflowedIndicator,
          mode = _this$props2.mode,
          level = _this$props2.level,
          tag = _this$props2.tag,
          children = _this$props2.children,
          theme = _this$props2.theme,
          rest = Object(objectWithoutProperties["a" /* default */])(_this$props2, ["visible", "prefixCls", "overflowedIndicator", "mode", "level", "tag", "children", "theme"]);

      var Tag = tag;
      return react_default.a.createElement(Tag, Object.assign({}, rest), this.renderChildren(children));
    }
  }]);

  return DOMWrap;
}(react_default.a.Component);

DOMWrap_DOMWrap.defaultProps = {
  tag: 'div',
  className: ''
};
/* harmony default export */ var es_DOMWrap = (DOMWrap_DOMWrap);
// CONCATENATED MODULE: ../node_modules/rc-menu/es/SubPopupMenu.js



























function SubPopupMenu_createSuper(Derived) {
  var hasNativeReflectConstruct = SubPopupMenu_isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = Object(getPrototypeOf["a" /* default */])(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = Object(getPrototypeOf["a" /* default */])(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return Object(possibleConstructorReturn["a" /* default */])(this, result);
  };
}

function SubPopupMenu_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function SubPopupMenu_ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function SubPopupMenu_objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      SubPopupMenu_ownKeys(Object(source), true).forEach(function (key) {
        Object(defineProperty["a" /* default */])(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      SubPopupMenu_ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}










function allDisabled(arr) {
  if (!arr.length) {
    return true;
  }

  return arr.every(function (c) {
    return !!c.props.disabled;
  });
}

function updateActiveKey(store, menuId, activeKey) {
  var state = store.getState();
  store.setState({
    activeKey: SubPopupMenu_objectSpread(SubPopupMenu_objectSpread({}, state.activeKey), {}, Object(defineProperty["a" /* default */])({}, menuId, activeKey))
  });
}

function getEventKey(props) {
  // when eventKey not available ,it's menu and return menu id '0-menu-'
  return props.eventKey || '0-menu-';
}

function getActiveKey(props, originalActiveKey) {
  var activeKey = originalActiveKey;
  var children = props.children,
      eventKey = props.eventKey;

  if (activeKey) {
    var found;
    loopMenuItem(children, function (c, i) {
      if (c && c.props && !c.props.disabled && activeKey === getKeyFromChildrenIndex(c, eventKey, i)) {
        found = true;
      }
    });

    if (found) {
      return activeKey;
    }
  }

  activeKey = null;

  if (props.defaultActiveFirst) {
    loopMenuItem(children, function (c, i) {
      if (!activeKey && c && !c.props.disabled) {
        activeKey = getKeyFromChildrenIndex(c, eventKey, i);
      }
    });
    return activeKey;
  }

  return activeKey;
}
function saveRef(c) {
  if (c) {
    var index = this.instanceArray.indexOf(c);

    if (index !== -1) {
      // update component if it's already inside instanceArray
      this.instanceArray[index] = c;
    } else {
      // add component if it's not in instanceArray yet;
      this.instanceArray.push(c);
    }
  }
}
var SubPopupMenu_SubPopupMenu = /*#__PURE__*/function (_React$Component) {
  Object(inherits["a" /* default */])(SubPopupMenu, _React$Component);

  var _super = SubPopupMenu_createSuper(SubPopupMenu);

  function SubPopupMenu(props) {
    var _this;

    Object(classCallCheck["a" /* default */])(this, SubPopupMenu);

    _this = _super.call(this, props);
    /**
     * all keyboard events callbacks run from here at first
     *
     * note:
     *  This legacy code that `onKeyDown` is called by parent instead of dom self.
     *  which need return code to check if this event is handled
     */

    _this.onKeyDown = function (e, callback) {
      var keyCode = e.keyCode;
      var handled;

      _this.getFlatInstanceArray().forEach(function (obj) {
        if (obj && obj.props.active && obj.onKeyDown) {
          handled = obj.onKeyDown(e);
        }
      });

      if (handled) {
        return 1;
      }

      var activeItem = null;

      if (keyCode === KeyCode["a" /* default */].UP || keyCode === KeyCode["a" /* default */].DOWN) {
        activeItem = _this.step(keyCode === KeyCode["a" /* default */].UP ? -1 : 1);
      }

      if (activeItem) {
        e.preventDefault();
        updateActiveKey(_this.props.store, getEventKey(_this.props), activeItem.props.eventKey);

        if (typeof callback === 'function') {
          callback(activeItem);
        }

        return 1;
      }

      return undefined;
    };

    _this.onItemHover = function (e) {
      var key = e.key,
          hover = e.hover;
      updateActiveKey(_this.props.store, getEventKey(_this.props), hover ? key : null);
    };

    _this.onDeselect = function (selectInfo) {
      _this.props.onDeselect(selectInfo);
    };

    _this.onSelect = function (selectInfo) {
      _this.props.onSelect(selectInfo);
    };

    _this.onClick = function (e) {
      _this.props.onClick(e);
    };

    _this.onOpenChange = function (e) {
      _this.props.onOpenChange(e);
    };

    _this.onDestroy = function (key) {
      /* istanbul ignore next */
      _this.props.onDestroy(key);
    };

    _this.getFlatInstanceArray = function () {
      return _this.instanceArray;
    };

    _this.step = function (direction) {
      var children = _this.getFlatInstanceArray();

      var activeKey = _this.props.store.getState().activeKey[getEventKey(_this.props)];

      var len = children.length;

      if (!len) {
        return null;
      }

      if (direction < 0) {
        children = children.concat().reverse();
      } // find current activeIndex


      var activeIndex = -1;
      children.every(function (c, ci) {
        if (c && c.props.eventKey === activeKey) {
          activeIndex = ci;
          return false;
        }

        return true;
      });

      if (!_this.props.defaultActiveFirst && activeIndex !== -1 && allDisabled(children.slice(activeIndex, len - 1))) {
        return undefined;
      }

      var start = (activeIndex + 1) % len;
      var i = start;

      do {
        var child = children[i];

        if (!child || child.props.disabled) {
          i = (i + 1) % len;
        } else {
          return child;
        }
      } while (i !== start);

      return null;
    };

    _this.renderCommonMenuItem = function (child, i, extraProps) {
      var state = _this.props.store.getState();

      var _assertThisInitialize = Object(assertThisInitialized["a" /* default */])(_this),
          props = _assertThisInitialize.props;

      var key = getKeyFromChildrenIndex(child, props.eventKey, i);
      var childProps = child.props; // https://github.com/ant-design/ant-design/issues/11517#issuecomment-477403055

      if (!childProps || typeof child.type === 'string') {
        return child;
      }

      var isActive = key === state.activeKey;

      var newChildProps = SubPopupMenu_objectSpread(SubPopupMenu_objectSpread({
        mode: childProps.mode || props.mode,
        level: props.level,
        inlineIndent: props.inlineIndent,
        renderMenuItem: _this.renderMenuItem,
        rootPrefixCls: props.prefixCls,
        index: i,
        parentMenu: props.parentMenu,
        // customized ref function, need to be invoked manually in child's componentDidMount
        manualRef: childProps.disabled ? undefined : Object(createChainedFunction["a" /* default */])(child.ref, saveRef.bind(Object(assertThisInitialized["a" /* default */])(_this))),
        eventKey: key,
        active: !childProps.disabled && isActive,
        multiple: props.multiple,
        onClick: function onClick(e) {
          (childProps.onClick || noop)(e);

          _this.onClick(e);
        },
        onItemHover: _this.onItemHover,
        motion: props.motion,
        subMenuOpenDelay: props.subMenuOpenDelay,
        subMenuCloseDelay: props.subMenuCloseDelay,
        forceSubMenuRender: props.forceSubMenuRender,
        onOpenChange: _this.onOpenChange,
        onDeselect: _this.onDeselect,
        onSelect: _this.onSelect,
        builtinPlacements: props.builtinPlacements,
        itemIcon: childProps.itemIcon || _this.props.itemIcon,
        expandIcon: childProps.expandIcon || _this.props.expandIcon
      }, extraProps), {}, {
        direction: props.direction
      }); // ref: https://github.com/ant-design/ant-design/issues/13943


      if (props.mode === 'inline' || util_isMobileDevice()) {
        newChildProps.triggerSubMenuAction = 'click';
      }

      return react_default.a.cloneElement(child, newChildProps);
    };

    _this.renderMenuItem = function (c, i, subMenuKey) {
      /* istanbul ignore if */
      if (!c) {
        return null;
      }

      var state = _this.props.store.getState();

      var extraProps = {
        openKeys: state.openKeys,
        selectedKeys: state.selectedKeys,
        triggerSubMenuAction: _this.props.triggerSubMenuAction,
        subMenuKey: subMenuKey
      };
      return _this.renderCommonMenuItem(c, i, extraProps);
    };

    props.store.setState({
      activeKey: SubPopupMenu_objectSpread(SubPopupMenu_objectSpread({}, props.store.getState().activeKey), {}, Object(defineProperty["a" /* default */])({}, props.eventKey, getActiveKey(props, props.activeKey)))
    });
    _this.instanceArray = [];
    return _this;
  }

  Object(createClass["a" /* default */])(SubPopupMenu, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      // invoke customized ref to expose component to mixin
      if (this.props.manualRef) {
        this.props.manualRef(this);
      }
    }
  }, {
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      return this.props.visible || nextProps.visible || this.props.className !== nextProps.className || !shallowequal_default()(this.props.style, nextProps.style);
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      var props = this.props;
      var originalActiveKey = 'activeKey' in props ? props.activeKey : props.store.getState().activeKey[getEventKey(props)];
      var activeKey = getActiveKey(props, originalActiveKey);

      if (activeKey !== originalActiveKey) {
        updateActiveKey(props.store, getEventKey(props), activeKey);
      } else if ('activeKey' in prevProps) {
        // If prev activeKey is not same as current activeKey,
        // we should set it.
        var prevActiveKey = getActiveKey(prevProps, prevProps.activeKey);

        if (activeKey !== prevActiveKey) {
          updateActiveKey(props.store, getEventKey(props), activeKey);
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var props = _extends({}, this.props);

      this.instanceArray = [];
      var className = classnames_default()(props.prefixCls, props.className, "".concat(props.prefixCls, "-").concat(props.mode));
      var domProps = {
        className: className,
        // role could be 'select' and by default set to menu
        role: props.role || 'menu'
      };

      if (props.id) {
        domProps.id = props.id;
      }

      if (props.focusable) {
        domProps.tabIndex = 0;
        domProps.onKeyDown = this.onKeyDown;
      }

      var prefixCls = props.prefixCls,
          eventKey = props.eventKey,
          visible = props.visible,
          level = props.level,
          mode = props.mode,
          overflowedIndicator = props.overflowedIndicator,
          theme = props.theme;
      menuAllProps.forEach(function (key) {
        return delete props[key];
      }); // Otherwise, the propagated click event will trigger another onClick

      delete props.onClick;
      return react_default.a.createElement(es_DOMWrap, Object.assign({}, props, {
        prefixCls: prefixCls,
        mode: mode,
        tag: "ul",
        level: level,
        theme: theme,
        visible: visible,
        overflowedIndicator: overflowedIndicator
      }, domProps), react_default.a.Children.map(props.children, function (c, i) {
        return _this2.renderMenuItem(c, i, eventKey || '0-menu-');
      }));
    }
  }]);

  return SubPopupMenu;
}(react_default.a.Component);
SubPopupMenu_SubPopupMenu.defaultProps = {
  prefixCls: 'rc-menu',
  className: '',
  mode: 'vertical',
  level: 1,
  inlineIndent: 24,
  visible: true,
  focusable: true,
  style: {},
  manualRef: noop
};
var SubPopupMenu_connected = connect()(SubPopupMenu_SubPopupMenu);
/* harmony default export */ var es_SubPopupMenu = (SubPopupMenu_connected);
// EXTERNAL MODULE: ../node_modules/rc-util/es/warning.js
var warning = __webpack_require__("IFhY");

// CONCATENATED MODULE: ../node_modules/rc-menu/es/utils/legacyUtil.js


function getMotion(_ref, _ref2, menuMode) {
  var prefixCls = _ref.prefixCls,
      motion = _ref.motion,
      _ref$defaultMotions = _ref.defaultMotions,
      defaultMotions = _ref$defaultMotions === void 0 ? {} : _ref$defaultMotions,
      openAnimation = _ref.openAnimation,
      openTransitionName = _ref.openTransitionName;
  var switchingModeFromInline = _ref2.switchingModeFromInline;

  if (motion) {
    return motion;
  }

  if (Object(esm_typeof["a" /* default */])(openAnimation) === 'object' && openAnimation) {
    Object(warning["a" /* default */])(false, 'Object type of `openAnimation` is removed. Please use `motion` instead.');
  } else if (typeof openAnimation === 'string') {
    return {
      motionName: "".concat(prefixCls, "-open-").concat(openAnimation)
    };
  }

  if (openTransitionName) {
    return {
      motionName: openTransitionName
    };
  } // Default logic


  var defaultMotion = defaultMotions[menuMode];

  if (defaultMotion) {
    return defaultMotion;
  } // When mode switch from inline
  // submenu should hide without animation


  return switchingModeFromInline ? null : defaultMotions.other;
}
// CONCATENATED MODULE: ../node_modules/rc-menu/es/Menu.js
























function Menu_ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function Menu_objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      Menu_ownKeys(Object(source), true).forEach(function (key) {
        Object(defineProperty["a" /* default */])(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      Menu_ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function Menu_createSuper(Derived) {
  var hasNativeReflectConstruct = Menu_isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = Object(getPrototypeOf["a" /* default */])(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = Object(getPrototypeOf["a" /* default */])(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return Object(possibleConstructorReturn["a" /* default */])(this, result);
  };
}

function Menu_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}








var Menu_Menu = /*#__PURE__*/function (_React$Component) {
  Object(inherits["a" /* default */])(Menu, _React$Component);

  var _super = Menu_createSuper(Menu);

  function Menu(props) {
    var _this;

    Object(classCallCheck["a" /* default */])(this, Menu);

    _this = _super.call(this, props);
    _this.inlineOpenKeys = [];

    _this.onSelect = function (selectInfo) {
      var _assertThisInitialize = Object(assertThisInitialized["a" /* default */])(_this),
          props = _assertThisInitialize.props;

      if (props.selectable) {
        // root menu
        var _this$store$getState = _this.store.getState(),
            _selectedKeys = _this$store$getState.selectedKeys;

        var selectedKey = selectInfo.key;

        if (props.multiple) {
          _selectedKeys = _selectedKeys.concat([selectedKey]);
        } else {
          _selectedKeys = [selectedKey];
        }

        if (!('selectedKeys' in props)) {
          _this.store.setState({
            selectedKeys: _selectedKeys
          });
        }

        props.onSelect(Menu_objectSpread(Menu_objectSpread({}, selectInfo), {}, {
          selectedKeys: _selectedKeys
        }));
      }
    };

    _this.onClick = function (e) {
      var mode = _this.getRealMenuMode();

      var _assertThisInitialize2 = Object(assertThisInitialized["a" /* default */])(_this),
          store = _assertThisInitialize2.store,
          onOpenChange = _assertThisInitialize2.props.onOpenChange;

      if (mode !== 'inline' && !('openKeys' in _this.props)) {
        // closing vertical popup submenu after click it
        store.setState({
          openKeys: []
        });
        onOpenChange([]);
      }

      _this.props.onClick(e);
    }; // onKeyDown needs to be exposed as a instance method
    // e.g., in rc-select, we need to navigate menu item while
    // current active item is rc-select input box rather than the menu itself


    _this.onKeyDown = function (e, callback) {
      _this.innerMenu.getWrappedInstance().onKeyDown(e, callback);
    };

    _this.onOpenChange = function (event) {
      var _assertThisInitialize3 = Object(assertThisInitialized["a" /* default */])(_this),
          props = _assertThisInitialize3.props;

      var openKeys = _this.store.getState().openKeys.concat();

      var changed = false;

      var processSingle = function processSingle(e) {
        var oneChanged = false;

        if (e.open) {
          oneChanged = openKeys.indexOf(e.key) === -1;

          if (oneChanged) {
            openKeys.push(e.key);
          }
        } else {
          var index = openKeys.indexOf(e.key);
          oneChanged = index !== -1;

          if (oneChanged) {
            openKeys.splice(index, 1);
          }
        }

        changed = changed || oneChanged;
      };

      if (Array.isArray(event)) {
        // batch change call
        event.forEach(processSingle);
      } else {
        processSingle(event);
      }

      if (changed) {
        if (!('openKeys' in _this.props)) {
          _this.store.setState({
            openKeys: openKeys
          });
        }

        props.onOpenChange(openKeys);
      }
    };

    _this.onDeselect = function (selectInfo) {
      var _assertThisInitialize4 = Object(assertThisInitialized["a" /* default */])(_this),
          props = _assertThisInitialize4.props;

      if (props.selectable) {
        var _selectedKeys2 = _this.store.getState().selectedKeys.concat();

        var selectedKey = selectInfo.key;

        var index = _selectedKeys2.indexOf(selectedKey);

        if (index !== -1) {
          _selectedKeys2.splice(index, 1);
        }

        if (!('selectedKeys' in props)) {
          _this.store.setState({
            selectedKeys: _selectedKeys2
          });
        }

        props.onDeselect(Menu_objectSpread(Menu_objectSpread({}, selectInfo), {}, {
          selectedKeys: _selectedKeys2
        }));
      }
    }; // Restore vertical mode when menu is collapsed responsively when mounted
    // https://github.com/ant-design/ant-design/issues/13104
    // TODO: not a perfect solution,
    // looking a new way to avoid setting switchingModeFromInline in this situation


    _this.onMouseEnter = function (e) {
      _this.restoreModeVerticalFromInline();

      var onMouseEnter = _this.props.onMouseEnter;

      if (onMouseEnter) {
        onMouseEnter(e);
      }
    };

    _this.onTransitionEnd = function (e) {
      // when inlineCollapsed menu width animation finished
      // https://github.com/ant-design/ant-design/issues/12864
      var widthCollapsed = e.propertyName === 'width' && e.target === e.currentTarget; // Fix SVGElement e.target.className.indexOf is not a function
      // https://github.com/ant-design/ant-design/issues/15699

      var className = e.target.className; // SVGAnimatedString.animVal should be identical to SVGAnimatedString.baseVal,
      // unless during an animation.

      var classNameValue = Object.prototype.toString.call(className) === '[object SVGAnimatedString]' ? className.animVal : className; // Fix for <Menu style={{ width: '100%' }} />,
      // the width transition won't trigger when menu is collapsed
      // https://github.com/ant-design/ant-design-pro/issues/2783

      var iconScaled = e.propertyName === 'font-size' && classNameValue.indexOf('anticon') >= 0;

      if (widthCollapsed || iconScaled) {
        _this.restoreModeVerticalFromInline();
      }
    };

    _this.setInnerMenu = function (node) {
      _this.innerMenu = node;
    };

    _this.isRootMenu = true;
    var selectedKeys = props.defaultSelectedKeys;
    var openKeys = props.defaultOpenKeys;

    if ('selectedKeys' in props) {
      selectedKeys = props.selectedKeys || [];
    }

    if ('openKeys' in props) {
      openKeys = props.openKeys || [];
    }

    _this.store = create({
      selectedKeys: selectedKeys,
      openKeys: openKeys,
      activeKey: {
        '0-menu-': getActiveKey(props, props.activeKey)
      }
    });
    _this.state = {
      switchingModeFromInline: false
    };
    return _this;
  }

  Object(createClass["a" /* default */])(Menu, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.updateMiniStore();
      this.updateMenuDisplay();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      this.updateOpentKeysWhenSwitchMode(prevProps);
      this.updateMiniStore();
      var _this$props = this.props,
          siderCollapsed = _this$props.siderCollapsed,
          inlineCollapsed = _this$props.inlineCollapsed,
          onOpenChange = _this$props.onOpenChange;

      if (!prevProps.inlineCollapsed && inlineCollapsed || !prevProps.siderCollapsed && siderCollapsed) {
        onOpenChange([]);
      }

      this.updateMenuDisplay();
    }
  }, {
    key: "updateOpentKeysWhenSwitchMode",
    value: function updateOpentKeysWhenSwitchMode(prevProps) {
      var nextProps = this.props,
          store = this.store,
          inlineOpenKeys = this.inlineOpenKeys;
      var prevState = store.getState();
      var newState = {};

      if (prevProps.mode === 'inline' && nextProps.mode !== 'inline') {
        this.setState({
          switchingModeFromInline: true
        });
      }

      if (!('openKeys' in nextProps)) {
        // [Legacy] Old code will return after `openKeys` changed.
        // Not sure the reason, we should keep this logic still.
        if (nextProps.inlineCollapsed && !prevProps.inlineCollapsed || nextProps.siderCollapsed && !prevProps.siderCollapsed) {
          this.setState({
            switchingModeFromInline: true
          });
          this.inlineOpenKeys = prevState.openKeys.concat();
          newState.openKeys = [];
        }

        if (!nextProps.inlineCollapsed && prevProps.inlineCollapsed || !nextProps.siderCollapsed && prevProps.siderCollapsed) {
          newState.openKeys = inlineOpenKeys;
          this.inlineOpenKeys = [];
        }
      }

      if (Object.keys(newState).length) {
        store.setState(newState);
      }
    }
  }, {
    key: "updateMenuDisplay",
    value: function updateMenuDisplay() {
      var collapsedWidth = this.props.collapsedWidth,
          store = this.store,
          prevOpenKeys = this.prevOpenKeys; // https://github.com/ant-design/ant-design/issues/8587

      var hideMenu = this.getInlineCollapsed() && (collapsedWidth === 0 || collapsedWidth === '0' || collapsedWidth === '0px');

      if (hideMenu) {
        this.prevOpenKeys = store.getState().openKeys.concat();
        this.store.setState({
          openKeys: []
        });
      } else if (prevOpenKeys) {
        this.store.setState({
          openKeys: prevOpenKeys
        });
        this.prevOpenKeys = null;
      }
    }
  }, {
    key: "getRealMenuMode",
    value: function getRealMenuMode() {
      var mode = this.props.mode;
      var switchingModeFromInline = this.state.switchingModeFromInline;
      var inlineCollapsed = this.getInlineCollapsed();

      if (switchingModeFromInline && inlineCollapsed) {
        return 'inline';
      }

      return inlineCollapsed ? 'vertical' : mode;
    }
  }, {
    key: "getInlineCollapsed",
    value: function getInlineCollapsed() {
      var _this$props2 = this.props,
          inlineCollapsed = _this$props2.inlineCollapsed,
          siderCollapsed = _this$props2.siderCollapsed;

      if (siderCollapsed !== undefined) {
        return siderCollapsed;
      }

      return inlineCollapsed;
    }
  }, {
    key: "restoreModeVerticalFromInline",
    value: function restoreModeVerticalFromInline() {
      var switchingModeFromInline = this.state.switchingModeFromInline;

      if (switchingModeFromInline) {
        this.setState({
          switchingModeFromInline: false
        });
      }
    }
  }, {
    key: "updateMiniStore",
    value: function updateMiniStore() {
      if ('selectedKeys' in this.props) {
        this.store.setState({
          selectedKeys: this.props.selectedKeys || []
        });
      }

      if ('openKeys' in this.props) {
        this.store.setState({
          openKeys: this.props.openKeys || []
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var props = Menu_objectSpread({}, Object(es["a" /* default */])(this.props, ['collapsedWidth', 'siderCollapsed', 'defaultMotions']));

      var mode = this.getRealMenuMode();
      props.className += " ".concat(props.prefixCls, "-root");

      if (props.direction === 'rtl') {
        props.className += " ".concat(props.prefixCls, "-rtl");
      }

      props = Menu_objectSpread(Menu_objectSpread({}, props), {}, {
        mode: mode,
        onClick: this.onClick,
        onOpenChange: this.onOpenChange,
        onDeselect: this.onDeselect,
        onSelect: this.onSelect,
        onMouseEnter: this.onMouseEnter,
        onTransitionEnd: this.onTransitionEnd,
        parentMenu: this,
        motion: getMotion(this.props, this.state, mode)
      });
      delete props.openAnimation;
      delete props.openTransitionName;
      return react_default.a.createElement(Provider_Provider, {
        store: this.store
      }, react_default.a.createElement(es_SubPopupMenu, Object.assign({}, props, {
        ref: this.setInnerMenu
      }), this.props.children));
    }
  }]);

  return Menu;
}(react_default.a.Component);

Menu_Menu.defaultProps = {
  selectable: true,
  onClick: noop,
  onSelect: noop,
  onOpenChange: noop,
  onDeselect: noop,
  defaultSelectedKeys: [],
  defaultOpenKeys: [],
  subMenuOpenDelay: 0.1,
  subMenuCloseDelay: 0.1,
  triggerSubMenuAction: 'hover',
  prefixCls: 'rc-menu',
  className: '',
  mode: 'vertical',
  style: {},
  builtinPlacements: {},
  overflowedIndicator: react_default.a.createElement("span", null, "\xB7\xB7\xB7")
};
/* harmony default export */ var es_Menu = (Menu_Menu);
// CONCATENATED MODULE: ../node_modules/rc-menu/es/MenuItem.js























function MenuItem_ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function MenuItem_objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      MenuItem_ownKeys(Object(source), true).forEach(function (key) {
        Object(defineProperty["a" /* default */])(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      MenuItem_ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function MenuItem_createSuper(Derived) {
  var hasNativeReflectConstruct = MenuItem_isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = Object(getPrototypeOf["a" /* default */])(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = Object(getPrototypeOf["a" /* default */])(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return Object(possibleConstructorReturn["a" /* default */])(this, result);
  };
}

function MenuItem_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}







var MenuItem_MenuItem = /*#__PURE__*/function (_React$Component) {
  Object(inherits["a" /* default */])(MenuItem, _React$Component);

  var _super = MenuItem_createSuper(MenuItem);

  function MenuItem() {
    var _this;

    Object(classCallCheck["a" /* default */])(this, MenuItem);

    _this = _super.apply(this, arguments);

    _this.onKeyDown = function (e) {
      var keyCode = e.keyCode;

      if (keyCode === KeyCode["a" /* default */].ENTER) {
        _this.onClick(e);

        return true;
      }

      return undefined;
    };

    _this.onMouseLeave = function (e) {
      var _this$props = _this.props,
          eventKey = _this$props.eventKey,
          onItemHover = _this$props.onItemHover,
          onMouseLeave = _this$props.onMouseLeave;
      onItemHover({
        key: eventKey,
        hover: false
      });
      onMouseLeave({
        key: eventKey,
        domEvent: e
      });
    };

    _this.onMouseEnter = function (e) {
      var _this$props2 = _this.props,
          eventKey = _this$props2.eventKey,
          onItemHover = _this$props2.onItemHover,
          onMouseEnter = _this$props2.onMouseEnter;
      onItemHover({
        key: eventKey,
        hover: true
      });
      onMouseEnter({
        key: eventKey,
        domEvent: e
      });
    };

    _this.onClick = function (e) {
      var _this$props3 = _this.props,
          eventKey = _this$props3.eventKey,
          multiple = _this$props3.multiple,
          onClick = _this$props3.onClick,
          onSelect = _this$props3.onSelect,
          onDeselect = _this$props3.onDeselect,
          isSelected = _this$props3.isSelected;
      var info = {
        key: eventKey,
        keyPath: [eventKey],
        item: Object(assertThisInitialized["a" /* default */])(_this),
        domEvent: e
      };
      onClick(info);

      if (multiple) {
        if (isSelected) {
          onDeselect(info);
        } else {
          onSelect(info);
        }
      } else if (!isSelected) {
        onSelect(info);
      }
    };

    _this.saveNode = function (node) {
      _this.node = node;
    };

    return _this;
  }

  Object(createClass["a" /* default */])(MenuItem, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      // invoke customized ref to expose component to mixin
      this.callRef();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.callRef();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var props = this.props;

      if (props.onDestroy) {
        props.onDestroy(props.eventKey);
      }
    }
  }, {
    key: "getPrefixCls",
    value: function getPrefixCls() {
      return "".concat(this.props.rootPrefixCls, "-item");
    }
  }, {
    key: "getActiveClassName",
    value: function getActiveClassName() {
      return "".concat(this.getPrefixCls(), "-active");
    }
  }, {
    key: "getSelectedClassName",
    value: function getSelectedClassName() {
      return "".concat(this.getPrefixCls(), "-selected");
    }
  }, {
    key: "getDisabledClassName",
    value: function getDisabledClassName() {
      return "".concat(this.getPrefixCls(), "-disabled");
    }
  }, {
    key: "callRef",
    value: function callRef() {
      if (this.props.manualRef) {
        this.props.manualRef(this);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _classNames;

      var props = MenuItem_objectSpread({}, this.props);

      var className = classnames_default()(this.getPrefixCls(), props.className, (_classNames = {}, Object(defineProperty["a" /* default */])(_classNames, this.getActiveClassName(), !props.disabled && props.active), Object(defineProperty["a" /* default */])(_classNames, this.getSelectedClassName(), props.isSelected), Object(defineProperty["a" /* default */])(_classNames, this.getDisabledClassName(), props.disabled), _classNames));

      var attrs = MenuItem_objectSpread(MenuItem_objectSpread({}, props.attribute), {}, {
        title: typeof props.title === 'string' ? props.title : undefined,
        className: className,
        // set to menuitem by default
        role: props.role || 'menuitem',
        'aria-disabled': props.disabled
      });

      if (props.role === 'option') {
        // overwrite to option
        attrs = MenuItem_objectSpread(MenuItem_objectSpread({}, attrs), {}, {
          role: 'option',
          'aria-selected': props.isSelected
        });
      } else if (props.role === null || props.role === 'none') {
        // sometimes we want to specify role inside <li/> element
        // <li><a role='menuitem'>Link</a></li> would be a good example
        // in this case the role on <li/> should be "none" to
        // remove the implied listitem role.
        // https://www.w3.org/TR/wai-aria-practices-1.1/examples/menubar/menubar-1/menubar-1.html
        attrs.role = 'none';
      } // In case that onClick/onMouseLeave/onMouseEnter is passed down from owner


      var mouseEvent = {
        onClick: props.disabled ? null : this.onClick,
        onMouseLeave: props.disabled ? null : this.onMouseLeave,
        onMouseEnter: props.disabled ? null : this.onMouseEnter
      };

      var style = MenuItem_objectSpread({}, props.style);

      if (props.mode === 'inline') {
        if (props.direction === 'rtl') {
          style.paddingRight = props.inlineIndent * props.level;
        } else {
          style.paddingLeft = props.inlineIndent * props.level;
        }
      }

      menuAllProps.forEach(function (key) {
        return delete props[key];
      });
      delete props.direction;
      var icon = this.props.itemIcon;

      if (typeof this.props.itemIcon === 'function') {
        // TODO: This is a bug which should fixed after TS refactor
        icon = react_default.a.createElement(this.props.itemIcon, this.props);
      }

      return react_default.a.createElement("li", Object.assign({}, Object(es["a" /* default */])(props, ['onClick', 'onMouseEnter', 'onMouseLeave', 'onSelect']), attrs, mouseEvent, {
        style: style,
        ref: this.saveNode
      }), props.children, icon);
    }
  }]);

  return MenuItem;
}(react_default.a.Component);
MenuItem_MenuItem.isMenuItem = true;
MenuItem_MenuItem.defaultProps = {
  onSelect: noop,
  onMouseEnter: noop,
  onMouseLeave: noop,
  manualRef: noop
};
var MenuItem_connected = connect(function (_ref, _ref2) {
  var activeKey = _ref.activeKey,
      selectedKeys = _ref.selectedKeys;
  var eventKey = _ref2.eventKey,
      subMenuKey = _ref2.subMenuKey;
  return {
    active: activeKey[subMenuKey] === eventKey,
    isSelected: selectedKeys.indexOf(eventKey) !== -1
  };
})(MenuItem_MenuItem);
/* harmony default export */ var es_MenuItem = (MenuItem_connected);
// CONCATENATED MODULE: ../node_modules/rc-menu/es/MenuItemGroup.js














function MenuItemGroup_createSuper(Derived) {
  var hasNativeReflectConstruct = MenuItemGroup_isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = Object(getPrototypeOf["a" /* default */])(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = Object(getPrototypeOf["a" /* default */])(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return Object(possibleConstructorReturn["a" /* default */])(this, result);
  };
}

function MenuItemGroup_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}




var MenuItemGroup_MenuItemGroup = /*#__PURE__*/function (_React$Component) {
  Object(inherits["a" /* default */])(MenuItemGroup, _React$Component);

  var _super = MenuItemGroup_createSuper(MenuItemGroup);

  function MenuItemGroup() {
    var _this;

    Object(classCallCheck["a" /* default */])(this, MenuItemGroup);

    _this = _super.apply(this, arguments);

    _this.renderInnerMenuItem = function (item) {
      var _this$props = _this.props,
          renderMenuItem = _this$props.renderMenuItem,
          index = _this$props.index;
      return renderMenuItem(item, index, _this.props.subMenuKey);
    };

    return _this;
  }

  Object(createClass["a" /* default */])(MenuItemGroup, [{
    key: "render",
    value: function render() {
      var props = _extends({}, this.props);

      var _props$className = props.className,
          className = _props$className === void 0 ? '' : _props$className,
          rootPrefixCls = props.rootPrefixCls;
      var titleClassName = "".concat(rootPrefixCls, "-item-group-title");
      var listClassName = "".concat(rootPrefixCls, "-item-group-list");
      var title = props.title,
          children = props.children;
      menuAllProps.forEach(function (key) {
        return delete props[key];
      }); // Set onClick to null, to ignore propagated onClick event

      delete props.onClick;
      delete props.direction;
      return react_default.a.createElement("li", Object.assign({}, props, {
        className: "".concat(className, " ").concat(rootPrefixCls, "-item-group")
      }), react_default.a.createElement("div", {
        className: titleClassName,
        title: typeof title === 'string' ? title : undefined
      }, title), react_default.a.createElement("ul", {
        className: listClassName
      }, react_default.a.Children.map(children, this.renderInnerMenuItem)));
    }
  }]);

  return MenuItemGroup;
}(react_default.a.Component);

MenuItemGroup_MenuItemGroup.isMenuItemGroup = true;
MenuItemGroup_MenuItemGroup.defaultProps = {
  disabled: true
};
/* harmony default export */ var es_MenuItemGroup = (MenuItemGroup_MenuItemGroup);
// CONCATENATED MODULE: ../node_modules/rc-menu/es/Divider.js


var Divider_Divider = function Divider(_ref) {
  var className = _ref.className,
      rootPrefixCls = _ref.rootPrefixCls,
      style = _ref.style;
  return react_default.a.createElement("li", {
    className: "".concat(className, " ").concat(rootPrefixCls, "-item-divider"),
    style: style
  });
};

Divider_Divider.defaultProps = {
  // To fix keyboard UX.
  disabled: true,
  className: '',
  style: {}
};
/* harmony default export */ var es_Divider = (Divider_Divider);
// CONCATENATED MODULE: ../node_modules/rc-menu/es/index.js






/* harmony default export */ var rc_menu_es = (es_Menu);
// CONCATENATED MODULE: ../node_modules/antd/es/menu/MenuContext.js

var MenuContext = /*#__PURE__*/Object(react["createContext"])({
  inlineCollapsed: false
});
/* harmony default export */ var menu_MenuContext = (MenuContext);
// EXTERNAL MODULE: ../node_modules/antd/es/_util/reactNode.js
var reactNode = __webpack_require__("Bu1f");

// CONCATENATED MODULE: ../node_modules/antd/es/menu/SubMenu.js











function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function SubMenu_extends() {
  SubMenu_extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return SubMenu_extends.apply(this, arguments);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function SubMenu_createSuper(Derived) {
  var hasNativeReflectConstruct = SubMenu_isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return _possibleConstructorReturn(this, result);
  };
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function SubMenu_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}








var menu_SubMenu_SubMenu = /*#__PURE__*/function (_React$Component) {
  _inherits(SubMenu, _React$Component);

  var _super = SubMenu_createSuper(SubMenu);

  function SubMenu() {
    var _this;

    _classCallCheck(this, SubMenu);

    _this = _super.apply(this, arguments);

    _this.onKeyDown = function (e) {
      _this.subMenu.onKeyDown(e);
    };

    _this.saveSubMenu = function (subMenu) {
      _this.subMenu = subMenu;
    };

    return _this;
  }

  _createClass(SubMenu, [{
    key: "renderTitle",
    value: function renderTitle(inlineCollapsed) {
      var _this$props = this.props,
          icon = _this$props.icon,
          title = _this$props.title,
          level = _this$props.level,
          rootPrefixCls = _this$props.rootPrefixCls;

      if (!icon) {
        return inlineCollapsed && level === 1 && title && typeof title === 'string' ? /*#__PURE__*/react["createElement"]("div", {
          className: "".concat(rootPrefixCls, "-inline-collapsed-noicon")
        }, title.charAt(0)) : title;
      } // inline-collapsed.md demo 依赖 span 来隐藏文字,有 icon 属性，则内部包裹一个 span
      // ref: https://github.com/ant-design/ant-design/pull/23456


      var titleIsSpan = Object(reactNode["b" /* isValidElement */])(title) && title.type === 'span';
      return /*#__PURE__*/react["createElement"](react["Fragment"], null, icon, titleIsSpan ? title : /*#__PURE__*/react["createElement"]("span", null, title));
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props2 = this.props,
          rootPrefixCls = _this$props2.rootPrefixCls,
          popupClassName = _this$props2.popupClassName;
      return /*#__PURE__*/react["createElement"](menu_MenuContext.Consumer, null, function (_ref) {
        var inlineCollapsed = _ref.inlineCollapsed,
            antdMenuTheme = _ref.antdMenuTheme;
        return /*#__PURE__*/react["createElement"](es_SubMenu, SubMenu_extends({}, Object(es["a" /* default */])(_this2.props, ['icon']), {
          title: _this2.renderTitle(inlineCollapsed),
          ref: _this2.saveSubMenu,
          popupClassName: classnames_default()(rootPrefixCls, "".concat(rootPrefixCls, "-").concat(antdMenuTheme), popupClassName)
        }));
      });
    }
  }]);

  return SubMenu;
}(react["Component"]);

menu_SubMenu_SubMenu.contextType = menu_MenuContext; // fix issue:https://github.com/ant-design/ant-design/issues/8666

menu_SubMenu_SubMenu.isSubMenu = 1;
/* harmony default export */ var menu_SubMenu = (menu_SubMenu_SubMenu);
// EXTERNAL MODULE: ../node_modules/rc-util/es/Children/toArray.js
var toArray = __webpack_require__("xTM7");

// EXTERNAL MODULE: ../node_modules/antd/es/tooltip/index.js + 5 modules
var tooltip = __webpack_require__("DGR3");

// EXTERNAL MODULE: ../node_modules/antd/es/layout/Sider.js + 1 modules
var Sider = __webpack_require__("znB+");

// CONCATENATED MODULE: ../node_modules/antd/es/menu/MenuItem.js












function MenuItem_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    MenuItem_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    MenuItem_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return MenuItem_typeof(obj);
}

function MenuItem_extends() {
  MenuItem_extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return MenuItem_extends.apply(this, arguments);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function MenuItem_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function MenuItem_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function MenuItem_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) MenuItem_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) MenuItem_defineProperties(Constructor, staticProps);
  return Constructor;
}

function MenuItem_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) MenuItem_setPrototypeOf(subClass, superClass);
}

function MenuItem_setPrototypeOf(o, p) {
  MenuItem_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return MenuItem_setPrototypeOf(o, p);
}

function menu_MenuItem_createSuper(Derived) {
  var hasNativeReflectConstruct = menu_MenuItem_isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = MenuItem_getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = MenuItem_getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return MenuItem_possibleConstructorReturn(this, result);
  };
}

function MenuItem_possibleConstructorReturn(self, call) {
  if (call && (MenuItem_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return MenuItem_assertThisInitialized(self);
}

function MenuItem_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function menu_MenuItem_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function MenuItem_getPrototypeOf(o) {
  MenuItem_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return MenuItem_getPrototypeOf(o);
}

var __rest = undefined && undefined.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};










var menu_MenuItem_MenuItem = /*#__PURE__*/function (_React$Component) {
  MenuItem_inherits(MenuItem, _React$Component);

  var _super = menu_MenuItem_createSuper(MenuItem);

  function MenuItem() {
    var _this;

    MenuItem_classCallCheck(this, MenuItem);

    _this = _super.apply(this, arguments);

    _this.onKeyDown = function (e) {
      _this.menuItem.onKeyDown(e);
    };

    _this.saveMenuItem = function (menuItem) {
      _this.menuItem = menuItem;
    };

    _this.renderItem = function (_ref) {
      var siderCollapsed = _ref.siderCollapsed;
      var _this$props = _this.props,
          level = _this$props.level,
          className = _this$props.className,
          children = _this$props.children,
          rootPrefixCls = _this$props.rootPrefixCls;

      var _a = _this.props,
          title = _a.title,
          icon = _a.icon,
          danger = _a.danger,
          rest = __rest(_a, ["title", "icon", "danger"]);

      return /*#__PURE__*/react["createElement"](menu_MenuContext.Consumer, null, function (_ref2) {
        var _classNames;

        var inlineCollapsed = _ref2.inlineCollapsed,
            direction = _ref2.direction;
        var tooltipTitle = title;

        if (typeof title === 'undefined') {
          tooltipTitle = level === 1 ? children : '';
        } else if (title === false) {
          tooltipTitle = '';
        }

        var tooltipProps = {
          title: tooltipTitle
        };

        if (!siderCollapsed && !inlineCollapsed) {
          tooltipProps.title = null; // Reset `visible` to fix control mode tooltip display not correct
          // ref: https://github.com/ant-design/ant-design/issues/16742

          tooltipProps.visible = false;
        }

        var childrenLength = Object(toArray["a" /* default */])(children).length;
        return /*#__PURE__*/react["createElement"](tooltip["a" /* default */], MenuItem_extends({}, tooltipProps, {
          placement: direction === 'rtl' ? 'left' : 'right',
          overlayClassName: "".concat(rootPrefixCls, "-inline-collapsed-tooltip")
        }), /*#__PURE__*/react["createElement"](es_MenuItem, MenuItem_extends({}, rest, {
          className: classnames_default()(className, (_classNames = {}, _defineProperty(_classNames, "".concat(rootPrefixCls, "-item-danger"), danger), _defineProperty(_classNames, "".concat(rootPrefixCls, "-item-only-child"), (icon ? childrenLength + 1 : childrenLength) === 1), _classNames)),
          title: title,
          ref: _this.saveMenuItem
        }), icon, _this.renderItemChildren(inlineCollapsed)));
      });
    };

    return _this;
  }

  MenuItem_createClass(MenuItem, [{
    key: "renderItemChildren",
    value: function renderItemChildren(inlineCollapsed) {
      var _this$props2 = this.props,
          icon = _this$props2.icon,
          children = _this$props2.children,
          level = _this$props2.level,
          rootPrefixCls = _this$props2.rootPrefixCls; // inline-collapsed.md demo 依赖 span 来隐藏文字,有 icon 属性，则内部包裹一个 span
      // ref: https://github.com/ant-design/ant-design/pull/23456

      if (!icon || Object(reactNode["b" /* isValidElement */])(children) && children.type === 'span') {
        if (children && inlineCollapsed && level === 1 && typeof children === 'string') {
          return /*#__PURE__*/react["createElement"]("div", {
            className: "".concat(rootPrefixCls, "-inline-collapsed-noicon")
          }, children.charAt(0));
        }

        return children;
      }

      return /*#__PURE__*/react["createElement"]("span", null, children);
    }
  }, {
    key: "render",
    value: function render() {
      return /*#__PURE__*/react["createElement"](Sider["a" /* SiderContext */].Consumer, null, this.renderItem);
    }
  }]);

  return MenuItem;
}(react["Component"]);


menu_MenuItem_MenuItem.isMenuItem = true;
// EXTERNAL MODULE: ../node_modules/antd/es/config-provider/context.js + 4 modules
var config_provider_context = __webpack_require__("Bfez");

// EXTERNAL MODULE: ../node_modules/antd/es/_util/devWarning.js
var devWarning = __webpack_require__("Hd5E");

// CONCATENATED MODULE: ../node_modules/antd/es/_util/motion.js
// ================== Collapse Motion ==================
var getCollapsedHeight = function getCollapsedHeight() {
  return {
    height: 0,
    opacity: 0
  };
};

var getRealHeight = function getRealHeight(node) {
  return {
    height: node.scrollHeight,
    opacity: 1
  };
};

var getCurrentHeight = function getCurrentHeight(node) {
  return {
    height: node.offsetHeight
  };
};

function skipOpacityTransition(_, event) {
  return event.propertyName === 'height';
}

var collapseMotion = {
  motionName: 'ant-motion-collapse',
  onAppearStart: getCollapsedHeight,
  onEnterStart: getCollapsedHeight,
  onAppearActive: getRealHeight,
  onEnterActive: getRealHeight,
  onLeaveStart: getCurrentHeight,
  onLeaveActive: getCollapsedHeight,
  onAppearEnd: skipOpacityTransition,
  onEnterEnd: skipOpacityTransition,
  onLeaveEnd: skipOpacityTransition,
  motionDeadline: 500
};
/* harmony default export */ var _util_motion = (collapseMotion);
// CONCATENATED MODULE: ../node_modules/antd/es/menu/index.js











function menu_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    menu_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    menu_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return menu_typeof(obj);
}

function menu_extends() {
  menu_extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return menu_extends.apply(this, arguments);
}

function menu_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function menu_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function menu_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function menu_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) menu_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) menu_defineProperties(Constructor, staticProps);
  return Constructor;
}

function menu_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) menu_setPrototypeOf(subClass, superClass);
}

function menu_setPrototypeOf(o, p) {
  menu_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return menu_setPrototypeOf(o, p);
}

function menu_createSuper(Derived) {
  var hasNativeReflectConstruct = menu_isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = menu_getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = menu_getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return menu_possibleConstructorReturn(this, result);
  };
}

function menu_possibleConstructorReturn(self, call) {
  if (call && (menu_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return menu_assertThisInitialized(self);
}

function menu_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function menu_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function menu_getPrototypeOf(o) {
  menu_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return menu_getPrototypeOf(o);
}












var menu_InternalMenu = /*#__PURE__*/function (_React$Component) {
  menu_inherits(InternalMenu, _React$Component);

  var _super = menu_createSuper(InternalMenu);

  function InternalMenu(props) {
    var _this;

    menu_classCallCheck(this, InternalMenu);

    _this = _super.call(this, props);

    _this.renderMenu = function (_ref) {
      var getPopupContainer = _ref.getPopupContainer,
          getPrefixCls = _ref.getPrefixCls,
          direction = _ref.direction;
      var _this$props = _this.props,
          customizePrefixCls = _this$props.prefixCls,
          className = _this$props.className,
          theme = _this$props.theme;
      var defaultMotions = {
        horizontal: {
          motionName: 'slide-up'
        },
        inline: _util_motion,
        other: {
          motionName: 'zoom-big'
        }
      };
      var prefixCls = getPrefixCls('menu', customizePrefixCls);
      var menuClassName = classnames_default()(className, "".concat(prefixCls, "-").concat(theme), menu_defineProperty({}, "".concat(prefixCls, "-inline-collapsed"), _this.getInlineCollapsed()));
      return /*#__PURE__*/react["createElement"](menu_MenuContext.Provider, {
        value: {
          inlineCollapsed: _this.getInlineCollapsed() || false,
          antdMenuTheme: theme,
          direction: direction
        }
      }, /*#__PURE__*/react["createElement"](rc_menu_es, menu_extends({
        getPopupContainer: getPopupContainer
      }, _this.props, {
        className: menuClassName,
        prefixCls: prefixCls,
        direction: direction,
        defaultMotions: defaultMotions
      })));
    };

    Object(devWarning["a" /* default */])(!('inlineCollapsed' in props && props.mode !== 'inline'), 'Menu', '`inlineCollapsed` should only be used when `mode` is inline.');
    Object(devWarning["a" /* default */])(!(props.siderCollapsed !== undefined && 'inlineCollapsed' in props), 'Menu', '`inlineCollapsed` not control Menu under Sider. Should set `collapsed` on Sider instead.');
    return _this;
  }

  menu_createClass(InternalMenu, [{
    key: "getInlineCollapsed",
    value: function getInlineCollapsed() {
      var _this$props2 = this.props,
          inlineCollapsed = _this$props2.inlineCollapsed,
          siderCollapsed = _this$props2.siderCollapsed;

      if (siderCollapsed !== undefined) {
        return siderCollapsed;
      }

      return inlineCollapsed;
    }
  }, {
    key: "render",
    value: function render() {
      return /*#__PURE__*/react["createElement"](config_provider_context["a" /* ConfigConsumer */], null, this.renderMenu);
    }
  }]);

  return InternalMenu;
}(react["Component"]);

menu_InternalMenu.defaultProps = {
  className: '',
  theme: 'light',
  focusable: false
}; // We should keep this as ref-able

var menu_Menu = /*#__PURE__*/function (_React$Component2) {
  menu_inherits(Menu, _React$Component2);

  var _super2 = menu_createSuper(Menu);

  function Menu() {
    menu_classCallCheck(this, Menu);

    return _super2.apply(this, arguments);
  }

  menu_createClass(Menu, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      return /*#__PURE__*/react["createElement"](Sider["a" /* SiderContext */].Consumer, null, function (context) {
        return /*#__PURE__*/react["createElement"](menu_InternalMenu, menu_extends({}, _this2.props, context));
      });
    }
  }]);

  return Menu;
}(react["Component"]);


menu_Menu.Divider = es_Divider;
menu_Menu.Item = menu_MenuItem_MenuItem;
menu_Menu.SubMenu = menu_SubMenu;
menu_Menu.ItemGroup = es_MenuItemGroup;

/***/ }),

/***/ "vHKq":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
}); // 全局设置一个唯一离屏的 ctx，用于计算 isPointInPath

var offScreenCtx = null;

function getOffScreenContext() {
  if (!offScreenCtx) {
    var canvas = document.createElement('canvas');
    canvas.width = 1;
    canvas.height = 1;
    offScreenCtx = canvas.getContext('2d');
  }

  return offScreenCtx;
}

exports.getOffScreenContext = getOffScreenContext;

/***/ }),

/***/ "vTVJ":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.assign.js
var es6_object_assign = __webpack_require__("5hJT");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.constructor.js
var es6_regexp_constructor = __webpack_require__("J8hF");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.replace.js
var es6_regexp_replace = __webpack_require__("Z8gF");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es7.array.includes.js
var es7_array_includes = __webpack_require__("oMRA");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.string.includes.js
var es6_string_includes = __webpack_require__("6d4m");

// EXTERNAL MODULE: ./public/static/d/653731124.json
var _653731124 = __webpack_require__("eCEB");

// EXTERNAL MODULE: ../node_modules/react/index.js
var react = __webpack_require__("mXGw");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ./.cache/gatsby-browser-entry.js
var gatsby_browser_entry = __webpack_require__("Wbzz");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.function.bind.js
var es6_function_bind = __webpack_require__("o7PZ");

// EXTERNAL MODULE: ../node_modules/core-js/modules/web.dom.iterable.js
var web_dom_iterable = __webpack_require__("W1QL");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.iterator.js
var es6_array_iterator = __webpack_require__("K/PF");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.keys.js
var es6_object_keys = __webpack_require__("75LO");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.reduce.js
var es6_array_reduce = __webpack_require__("3y5y");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.string.trim.js
var es6_string_trim = __webpack_require__("m8zh");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.number.constructor.js
var es6_number_constructor = __webpack_require__("e2Kn");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.find.js
var es6_array_find = __webpack_require__("it7j");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.map.js
var es6_array_map = __webpack_require__("yIlq");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.is-array.js
var es6_array_is_array = __webpack_require__("+3V6");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.match.js
var es6_regexp_match = __webpack_require__("9ovy");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.function.name.js
var es6_function_name = __webpack_require__("GkPX");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.to-string.js
var es6_regexp_to_string = __webpack_require__("4aJ6");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.date.to-string.js
var es6_date_to_string = __webpack_require__("M/4x");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.index-of.js
var es6_array_index_of = __webpack_require__("V7cS");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.promise.js
var es6_promise = __webpack_require__("DbwS");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.to-string.js
var es6_object_to_string = __webpack_require__("t91x");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.filter.js
var es6_array_filter = __webpack_require__("9p7t");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.split.js
var es6_regexp_split = __webpack_require__("asZ9");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.for-each.js
var es6_array_for_each = __webpack_require__("7lGJ");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/typeof.js
var esm_typeof = __webpack_require__("J1LG");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__("mK0O");

// CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/objectSpread.js

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? Object(arguments[i]) : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      Object(defineProperty["a" /* default */])(target, key, source[key]);
    });
  }

  return target;
}
// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/classCallCheck.js
var classCallCheck = __webpack_require__("hisu");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/createClass.js
var createClass = __webpack_require__("yBJb");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js
var possibleConstructorReturn = __webpack_require__("kMo5");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js
var getPrototypeOf = __webpack_require__("P+uj");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
var assertThisInitialized = __webpack_require__("0942");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/inherits.js + 1 modules
var inherits = __webpack_require__("CHlC");

// CONCATENATED MODULE: ../node_modules/i18next/dist/esm/i18next.js
































var consoleLogger = {
  type: 'logger',
  log: function log(args) {
    this.output('log', args);
  },
  warn: function warn(args) {
    this.output('warn', args);
  },
  error: function error(args) {
    this.output('error', args);
  },
  output: function output(type, args) {
    if (console && console[type]) console[type].apply(console, args);
  }
};

var i18next_Logger = function () {
  function Logger(concreteLogger) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    Object(classCallCheck["a" /* default */])(this, Logger);

    this.init(concreteLogger, options);
  }

  Object(createClass["a" /* default */])(Logger, [{
    key: "init",
    value: function init(concreteLogger) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      this.prefix = options.prefix || 'i18next:';
      this.logger = concreteLogger || consoleLogger;
      this.options = options;
      this.debug = options.debug;
    }
  }, {
    key: "setDebug",
    value: function setDebug(bool) {
      this.debug = bool;
    }
  }, {
    key: "log",
    value: function log() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return this.forward(args, 'log', '', true);
    }
  }, {
    key: "warn",
    value: function warn() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return this.forward(args, 'warn', '', true);
    }
  }, {
    key: "error",
    value: function error() {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      return this.forward(args, 'error', '');
    }
  }, {
    key: "deprecate",
    value: function deprecate() {
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }

      return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);
    }
  }, {
    key: "forward",
    value: function forward(args, lvl, prefix, debugOnly) {
      if (debugOnly && !this.debug) return null;
      if (typeof args[0] === 'string') args[0] = "".concat(prefix).concat(this.prefix, " ").concat(args[0]);
      return this.logger[lvl](args);
    }
  }, {
    key: "create",
    value: function create(moduleName) {
      return new Logger(this.logger, _objectSpread({}, {
        prefix: "".concat(this.prefix, ":").concat(moduleName, ":")
      }, this.options));
    }
  }]);

  return Logger;
}();

var baseLogger = new i18next_Logger();

var i18next_EventEmitter = function () {
  function EventEmitter() {
    Object(classCallCheck["a" /* default */])(this, EventEmitter);

    this.observers = {};
  }

  Object(createClass["a" /* default */])(EventEmitter, [{
    key: "on",
    value: function on(events, listener) {
      var _this = this;

      events.split(' ').forEach(function (event) {
        _this.observers[event] = _this.observers[event] || [];

        _this.observers[event].push(listener);
      });
      return this;
    }
  }, {
    key: "off",
    value: function off(event, listener) {
      if (!this.observers[event]) return;

      if (!listener) {
        delete this.observers[event];
        return;
      }

      this.observers[event] = this.observers[event].filter(function (l) {
        return l !== listener;
      });
    }
  }, {
    key: "emit",
    value: function emit(event) {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      if (this.observers[event]) {
        var cloned = [].concat(this.observers[event]);
        cloned.forEach(function (observer) {
          observer.apply(void 0, args);
        });
      }

      if (this.observers['*']) {
        var _cloned = [].concat(this.observers['*']);

        _cloned.forEach(function (observer) {
          observer.apply(observer, [event].concat(args));
        });
      }
    }
  }]);

  return EventEmitter;
}();

function defer() {
  var res;
  var rej;
  var promise = new Promise(function (resolve, reject) {
    res = resolve;
    rej = reject;
  });
  promise.resolve = res;
  promise.reject = rej;
  return promise;
}

function makeString(object) {
  if (object == null) return '';
  return '' + object;
}

function copy(a, s, t) {
  a.forEach(function (m) {
    if (s[m]) t[m] = s[m];
  });
}

function getLastOfPath(object, path, Empty) {
  function cleanKey(key) {
    return key && key.indexOf('###') > -1 ? key.replace(/###/g, '.') : key;
  }

  function canNotTraverseDeeper() {
    return !object || typeof object === 'string';
  }

  var stack = typeof path !== 'string' ? [].concat(path) : path.split('.');

  while (stack.length > 1) {
    if (canNotTraverseDeeper()) return {};
    var key = cleanKey(stack.shift());
    if (!object[key] && Empty) object[key] = new Empty();
    object = object[key];
  }

  if (canNotTraverseDeeper()) return {};
  return {
    obj: object,
    k: cleanKey(stack.shift())
  };
}

function setPath(object, path, newValue) {
  var _getLastOfPath = getLastOfPath(object, path, Object),
      obj = _getLastOfPath.obj,
      k = _getLastOfPath.k;

  obj[k] = newValue;
}

function pushPath(object, path, newValue, concat) {
  var _getLastOfPath2 = getLastOfPath(object, path, Object),
      obj = _getLastOfPath2.obj,
      k = _getLastOfPath2.k;

  obj[k] = obj[k] || [];
  if (concat) obj[k] = obj[k].concat(newValue);
  if (!concat) obj[k].push(newValue);
}

function getPath(object, path) {
  var _getLastOfPath3 = getLastOfPath(object, path),
      obj = _getLastOfPath3.obj,
      k = _getLastOfPath3.k;

  if (!obj) return undefined;
  return obj[k];
}

function getPathWithDefaults(data, defaultData, key) {
  var value = getPath(data, key);

  if (value !== undefined) {
    return value;
  }

  return getPath(defaultData, key);
}

function deepExtend(target, source, overwrite) {
  for (var prop in source) {
    if (prop in target) {
      if (typeof target[prop] === 'string' || target[prop] instanceof String || typeof source[prop] === 'string' || source[prop] instanceof String) {
        if (overwrite) target[prop] = source[prop];
      } else {
        deepExtend(target[prop], source[prop], overwrite);
      }
    } else {
      target[prop] = source[prop];
    }
  }

  return target;
}

function regexEscape(str) {
  return str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, '\\$&');
}

var _entityMap = {
  '&': '&amp;',
  '<': '&lt;',
  '>': '&gt;',
  '"': '&quot;',
  "'": '&#39;',
  '/': '&#x2F;'
};

function i18next_escape(data) {
  if (typeof data === 'string') {
    return data.replace(/[&<>"'\/]/g, function (s) {
      return _entityMap[s];
    });
  }

  return data;
}

var isIE10 = typeof window !== 'undefined' && window.navigator && window.navigator.userAgent && window.navigator.userAgent.indexOf('MSIE') > -1;

var i18next_ResourceStore = function (_EventEmitter) {
  Object(inherits["a" /* default */])(ResourceStore, _EventEmitter);

  function ResourceStore(data) {
    var _this;

    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
      ns: ['translation'],
      defaultNS: 'translation'
    };

    Object(classCallCheck["a" /* default */])(this, ResourceStore);

    _this = Object(possibleConstructorReturn["a" /* default */])(this, Object(getPrototypeOf["a" /* default */])(ResourceStore).call(this));

    if (isIE10) {
      i18next_EventEmitter.call(Object(assertThisInitialized["a" /* default */])(_this));
    }

    _this.data = data || {};
    _this.options = options;

    if (_this.options.keySeparator === undefined) {
      _this.options.keySeparator = '.';
    }

    return _this;
  }

  Object(createClass["a" /* default */])(ResourceStore, [{
    key: "addNamespaces",
    value: function addNamespaces(ns) {
      if (this.options.ns.indexOf(ns) < 0) {
        this.options.ns.push(ns);
      }
    }
  }, {
    key: "removeNamespaces",
    value: function removeNamespaces(ns) {
      var index = this.options.ns.indexOf(ns);

      if (index > -1) {
        this.options.ns.splice(index, 1);
      }
    }
  }, {
    key: "getResource",
    value: function getResource(lng, ns, key) {
      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
      var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;
      var path = [lng, ns];
      if (key && typeof key !== 'string') path = path.concat(key);
      if (key && typeof key === 'string') path = path.concat(keySeparator ? key.split(keySeparator) : key);

      if (lng.indexOf('.') > -1) {
        path = lng.split('.');
      }

      return getPath(this.data, path);
    }
  }, {
    key: "addResource",
    value: function addResource(lng, ns, key, value) {
      var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {
        silent: false
      };
      var keySeparator = this.options.keySeparator;
      if (keySeparator === undefined) keySeparator = '.';
      var path = [lng, ns];
      if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);

      if (lng.indexOf('.') > -1) {
        path = lng.split('.');
        value = ns;
        ns = path[1];
      }

      this.addNamespaces(ns);
      setPath(this.data, path, value);
      if (!options.silent) this.emit('added', lng, ns, key, value);
    }
  }, {
    key: "addResources",
    value: function addResources(lng, ns, resources) {
      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {
        silent: false
      };

      for (var m in resources) {
        if (typeof resources[m] === 'string' || Object.prototype.toString.apply(resources[m]) === '[object Array]') this.addResource(lng, ns, m, resources[m], {
          silent: true
        });
      }

      if (!options.silent) this.emit('added', lng, ns, resources);
    }
  }, {
    key: "addResourceBundle",
    value: function addResourceBundle(lng, ns, resources, deep, overwrite) {
      var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {
        silent: false
      };
      var path = [lng, ns];

      if (lng.indexOf('.') > -1) {
        path = lng.split('.');
        deep = resources;
        resources = ns;
        ns = path[1];
      }

      this.addNamespaces(ns);
      var pack = getPath(this.data, path) || {};

      if (deep) {
        deepExtend(pack, resources, overwrite);
      } else {
        pack = _objectSpread({}, pack, resources);
      }

      setPath(this.data, path, pack);
      if (!options.silent) this.emit('added', lng, ns, resources);
    }
  }, {
    key: "removeResourceBundle",
    value: function removeResourceBundle(lng, ns) {
      if (this.hasResourceBundle(lng, ns)) {
        delete this.data[lng][ns];
      }

      this.removeNamespaces(ns);
      this.emit('removed', lng, ns);
    }
  }, {
    key: "hasResourceBundle",
    value: function hasResourceBundle(lng, ns) {
      return this.getResource(lng, ns) !== undefined;
    }
  }, {
    key: "getResourceBundle",
    value: function getResourceBundle(lng, ns) {
      if (!ns) ns = this.options.defaultNS;
      if (this.options.compatibilityAPI === 'v1') return _objectSpread({}, {}, this.getResource(lng, ns));
      return this.getResource(lng, ns);
    }
  }, {
    key: "getDataByLanguage",
    value: function getDataByLanguage(lng) {
      return this.data[lng];
    }
  }, {
    key: "toJSON",
    value: function toJSON() {
      return this.data;
    }
  }]);

  return ResourceStore;
}(i18next_EventEmitter);

var postProcessor = {
  processors: {},
  addPostProcessor: function addPostProcessor(module) {
    this.processors[module.name] = module;
  },
  handle: function handle(processors, value, key, options, translator) {
    var _this = this;

    processors.forEach(function (processor) {
      if (_this.processors[processor]) value = _this.processors[processor].process(value, key, options, translator);
    });
    return value;
  }
};
var checkedLoadedFor = {};

var i18next_Translator = function (_EventEmitter) {
  Object(inherits["a" /* default */])(Translator, _EventEmitter);

  function Translator(services) {
    var _this;

    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    Object(classCallCheck["a" /* default */])(this, Translator);

    _this = Object(possibleConstructorReturn["a" /* default */])(this, Object(getPrototypeOf["a" /* default */])(Translator).call(this));

    if (isIE10) {
      i18next_EventEmitter.call(Object(assertThisInitialized["a" /* default */])(_this));
    }

    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, Object(assertThisInitialized["a" /* default */])(_this));
    _this.options = options;

    if (_this.options.keySeparator === undefined) {
      _this.options.keySeparator = '.';
    }

    _this.logger = baseLogger.create('translator');
    return _this;
  }

  Object(createClass["a" /* default */])(Translator, [{
    key: "changeLanguage",
    value: function changeLanguage(lng) {
      if (lng) this.language = lng;
    }
  }, {
    key: "exists",
    value: function exists(key) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
        interpolation: {}
      };
      var resolved = this.resolve(key, options);
      return resolved && resolved.res !== undefined;
    }
  }, {
    key: "extractFromKey",
    value: function extractFromKey(key, options) {
      var nsSeparator = options.nsSeparator || this.options.nsSeparator;
      if (nsSeparator === undefined) nsSeparator = ':';
      var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;
      var namespaces = options.ns || this.options.defaultNS;

      if (nsSeparator && key.indexOf(nsSeparator) > -1) {
        var m = key.match(this.interpolator.nestingRegexp);

        if (m && m.length > 0) {
          return {
            key: key,
            namespaces: namespaces
          };
        }

        var parts = key.split(nsSeparator);
        if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();
        key = parts.join(keySeparator);
      }

      if (typeof namespaces === 'string') namespaces = [namespaces];
      return {
        key: key,
        namespaces: namespaces
      };
    }
  }, {
    key: "translate",
    value: function translate(keys, options) {
      var _this2 = this;

      if (Object(esm_typeof["a" /* default */])(options) !== 'object' && this.options.overloadTranslationOptionHandler) {
        options = this.options.overloadTranslationOptionHandler(arguments);
      }

      if (!options) options = {};
      if (keys === undefined || keys === null) return '';
      if (!Array.isArray(keys)) keys = [String(keys)];
      var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;

      var _this$extractFromKey = this.extractFromKey(keys[keys.length - 1], options),
          key = _this$extractFromKey.key,
          namespaces = _this$extractFromKey.namespaces;

      var namespace = namespaces[namespaces.length - 1];
      var lng = options.lng || this.language;
      var appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;

      if (lng && lng.toLowerCase() === 'cimode') {
        if (appendNamespaceToCIMode) {
          var nsSeparator = options.nsSeparator || this.options.nsSeparator;
          return namespace + nsSeparator + key;
        }

        return key;
      }

      var resolved = this.resolve(keys, options);
      var res = resolved && resolved.res;
      var resUsedKey = resolved && resolved.usedKey || key;
      var resExactUsedKey = resolved && resolved.exactUsedKey || key;
      var resType = Object.prototype.toString.apply(res);
      var noObject = ['[object Number]', '[object Function]', '[object RegExp]'];
      var joinArrays = options.joinArrays !== undefined ? options.joinArrays : this.options.joinArrays;
      var handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;
      var handleAsObject = typeof res !== 'string' && typeof res !== 'boolean' && typeof res !== 'number';

      if (handleAsObjectInI18nFormat && res && handleAsObject && noObject.indexOf(resType) < 0 && !(typeof joinArrays === 'string' && resType === '[object Array]')) {
        if (!options.returnObjects && !this.options.returnObjects) {
          this.logger.warn('accessing an object - but returnObjects options is not enabled!');
          return this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, res, options) : "key '".concat(key, " (").concat(this.language, ")' returned an object instead of string.");
        }

        if (keySeparator) {
          var resTypeIsArray = resType === '[object Array]';
          var copy$$1 = resTypeIsArray ? [] : {};
          var newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;

          for (var m in res) {
            if (Object.prototype.hasOwnProperty.call(res, m)) {
              var deepKey = "".concat(newKeyToUse).concat(keySeparator).concat(m);
              copy$$1[m] = this.translate(deepKey, _objectSpread({}, options, {
                joinArrays: false,
                ns: namespaces
              }));
              if (copy$$1[m] === deepKey) copy$$1[m] = res[m];
            }
          }

          res = copy$$1;
        }
      } else if (handleAsObjectInI18nFormat && typeof joinArrays === 'string' && resType === '[object Array]') {
        res = res.join(joinArrays);
        if (res) res = this.extendTranslation(res, keys, options);
      } else {
        var usedDefault = false;
        var usedKey = false;

        if (!this.isValidLookup(res) && options.defaultValue !== undefined) {
          usedDefault = true;

          if (options.count !== undefined) {
            var suffix = this.pluralResolver.getSuffix(lng, options.count);
            res = options["defaultValue".concat(suffix)];
          }

          if (!res) res = options.defaultValue;
        }

        if (!this.isValidLookup(res)) {
          usedKey = true;
          res = key;
        }

        var updateMissing = options.defaultValue && options.defaultValue !== res && this.options.updateMissing;

        if (usedKey || usedDefault || updateMissing) {
          this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? options.defaultValue : res);

          if (keySeparator) {
            var fk = this.resolve(key, _objectSpread({}, options, {
              keySeparator: false
            }));
            if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');
          }

          var lngs = [];
          var fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);

          if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {
            for (var i = 0; i < fallbackLngs.length; i++) {
              lngs.push(fallbackLngs[i]);
            }
          } else if (this.options.saveMissingTo === 'all') {
            lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);
          } else {
            lngs.push(options.lng || this.language);
          }

          var send = function send(l, k) {
            if (_this2.options.missingKeyHandler) {
              _this2.options.missingKeyHandler(l, namespace, k, updateMissing ? options.defaultValue : res, updateMissing, options);
            } else if (_this2.backendConnector && _this2.backendConnector.saveMissing) {
              _this2.backendConnector.saveMissing(l, namespace, k, updateMissing ? options.defaultValue : res, updateMissing, options);
            }

            _this2.emit('missingKey', l, namespace, k, res);
          };

          if (this.options.saveMissing) {
            var needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';

            if (this.options.saveMissingPlurals && needsPluralHandling) {
              lngs.forEach(function (l) {
                var plurals = _this2.pluralResolver.getPluralFormsOfKey(l, key);

                plurals.forEach(function (p) {
                  return send([l], p);
                });
              });
            } else {
              send(lngs, key);
            }
          }
        }

        res = this.extendTranslation(res, keys, options, resolved);
        if (usedKey && res === key && this.options.appendNamespaceToMissingKey) res = "".concat(namespace, ":").concat(key);
        if (usedKey && this.options.parseMissingKeyHandler) res = this.options.parseMissingKeyHandler(res);
      }

      return res;
    }
  }, {
    key: "extendTranslation",
    value: function extendTranslation(res, key, options, resolved) {
      var _this3 = this;

      if (this.i18nFormat && this.i18nFormat.parse) {
        res = this.i18nFormat.parse(res, options, resolved.usedLng, resolved.usedNS, resolved.usedKey, {
          resolved: resolved
        });
      } else if (!options.skipInterpolation) {
        if (options.interpolation) this.interpolator.init(_objectSpread({}, options, {
          interpolation: _objectSpread({}, this.options.interpolation, options.interpolation)
        }));
        var data = options.replace && typeof options.replace !== 'string' ? options.replace : options;
        if (this.options.interpolation.defaultVariables) data = _objectSpread({}, this.options.interpolation.defaultVariables, data);
        res = this.interpolator.interpolate(res, data, options.lng || this.language, options);
        if (options.nest !== false) res = this.interpolator.nest(res, function () {
          return _this3.translate.apply(_this3, arguments);
        }, options);
        if (options.interpolation) this.interpolator.reset();
      }

      var postProcess = options.postProcess || this.options.postProcess;
      var postProcessorNames = typeof postProcess === 'string' ? [postProcess] : postProcess;

      if (res !== undefined && res !== null && postProcessorNames && postProcessorNames.length && options.applyPostProcessor !== false) {
        res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? _objectSpread({
          i18nResolved: resolved
        }, options) : options, this);
      }

      return res;
    }
  }, {
    key: "resolve",
    value: function resolve(keys) {
      var _this4 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var found;
      var usedKey;
      var exactUsedKey;
      var usedLng;
      var usedNS;
      if (typeof keys === 'string') keys = [keys];
      keys.forEach(function (k) {
        if (_this4.isValidLookup(found)) return;

        var extracted = _this4.extractFromKey(k, options);

        var key = extracted.key;
        usedKey = key;
        var namespaces = extracted.namespaces;
        if (_this4.options.fallbackNS) namespaces = namespaces.concat(_this4.options.fallbackNS);
        var needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';
        var needsContextHandling = options.context !== undefined && typeof options.context === 'string' && options.context !== '';
        var codes = options.lngs ? options.lngs : _this4.languageUtils.toResolveHierarchy(options.lng || _this4.language, options.fallbackLng);
        namespaces.forEach(function (ns) {
          if (_this4.isValidLookup(found)) return;
          usedNS = ns;

          if (!checkedLoadedFor["".concat(codes[0], "-").concat(ns)] && _this4.utils && _this4.utils.hasLoadedNamespace && !_this4.utils.hasLoadedNamespace(usedNS)) {
            checkedLoadedFor["".concat(codes[0], "-").concat(ns)] = true;

            _this4.logger.warn("key \"".concat(usedKey, "\" for languages \"").concat(codes.join(', '), "\" won't get resolved as namespace \"").concat(usedNS, "\" was not yet loaded"), 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');
          }

          codes.forEach(function (code) {
            if (_this4.isValidLookup(found)) return;
            usedLng = code;
            var finalKey = key;
            var finalKeys = [finalKey];

            if (_this4.i18nFormat && _this4.i18nFormat.addLookupKeys) {
              _this4.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);
            } else {
              var pluralSuffix;
              if (needsPluralHandling) pluralSuffix = _this4.pluralResolver.getSuffix(code, options.count);
              if (needsPluralHandling && needsContextHandling) finalKeys.push(finalKey + pluralSuffix);
              if (needsContextHandling) finalKeys.push(finalKey += "".concat(_this4.options.contextSeparator).concat(options.context));
              if (needsPluralHandling) finalKeys.push(finalKey += pluralSuffix);
            }

            var possibleKey;

            while (possibleKey = finalKeys.pop()) {
              if (!_this4.isValidLookup(found)) {
                exactUsedKey = possibleKey;
                found = _this4.getResource(code, ns, possibleKey, options);
              }
            }
          });
        });
      });
      return {
        res: found,
        usedKey: usedKey,
        exactUsedKey: exactUsedKey,
        usedLng: usedLng,
        usedNS: usedNS
      };
    }
  }, {
    key: "isValidLookup",
    value: function isValidLookup(res) {
      return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');
    }
  }, {
    key: "getResource",
    value: function getResource(code, ns, key) {
      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
      if (this.i18nFormat && this.i18nFormat.getResource) return this.i18nFormat.getResource(code, ns, key, options);
      return this.resourceStore.getResource(code, ns, key, options);
    }
  }]);

  return Translator;
}(i18next_EventEmitter);

function capitalize(string) {
  return string.charAt(0).toUpperCase() + string.slice(1);
}

var i18next_LanguageUtil = function () {
  function LanguageUtil(options) {
    Object(classCallCheck["a" /* default */])(this, LanguageUtil);

    this.options = options;
    this.whitelist = this.options.supportedLngs || false;
    this.supportedLngs = this.options.supportedLngs || false;
    this.logger = baseLogger.create('languageUtils');
  }

  Object(createClass["a" /* default */])(LanguageUtil, [{
    key: "getScriptPartFromCode",
    value: function getScriptPartFromCode(code) {
      if (!code || code.indexOf('-') < 0) return null;
      var p = code.split('-');
      if (p.length === 2) return null;
      p.pop();
      if (p[p.length - 1].toLowerCase() === 'x') return null;
      return this.formatLanguageCode(p.join('-'));
    }
  }, {
    key: "getLanguagePartFromCode",
    value: function getLanguagePartFromCode(code) {
      if (!code || code.indexOf('-') < 0) return code;
      var p = code.split('-');
      return this.formatLanguageCode(p[0]);
    }
  }, {
    key: "formatLanguageCode",
    value: function formatLanguageCode(code) {
      if (typeof code === 'string' && code.indexOf('-') > -1) {
        var specialCases = ['hans', 'hant', 'latn', 'cyrl', 'cans', 'mong', 'arab'];
        var p = code.split('-');

        if (this.options.lowerCaseLng) {
          p = p.map(function (part) {
            return part.toLowerCase();
          });
        } else if (p.length === 2) {
          p[0] = p[0].toLowerCase();
          p[1] = p[1].toUpperCase();
          if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());
        } else if (p.length === 3) {
          p[0] = p[0].toLowerCase();
          if (p[1].length === 2) p[1] = p[1].toUpperCase();
          if (p[0] !== 'sgn' && p[2].length === 2) p[2] = p[2].toUpperCase();
          if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());
          if (specialCases.indexOf(p[2].toLowerCase()) > -1) p[2] = capitalize(p[2].toLowerCase());
        }

        return p.join('-');
      }

      return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;
    }
  }, {
    key: "isWhitelisted",
    value: function isWhitelisted(code) {
      this.logger.deprecate('languageUtils.isWhitelisted', 'function "isWhitelisted" will be renamed to "isSupportedCode" in the next major - please make sure to rename it\'s usage asap.');
      return this.isSupportedCode(code);
    }
  }, {
    key: "isSupportedCode",
    value: function isSupportedCode(code) {
      if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {
        code = this.getLanguagePartFromCode(code);
      }

      return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;
    }
  }, {
    key: "getBestMatchFromCodes",
    value: function getBestMatchFromCodes(codes) {
      var _this = this;

      if (!codes) return null;
      var found;
      codes.forEach(function (code) {
        if (found) return;

        var cleanedLng = _this.formatLanguageCode(code);

        if (!_this.options.supportedLngs || _this.isSupportedCode(cleanedLng)) found = cleanedLng;
      });

      if (!found && this.options.supportedLngs) {
        codes.forEach(function (code) {
          if (found) return;

          var lngOnly = _this.getLanguagePartFromCode(code);

          if (_this.isSupportedCode(lngOnly)) return found = lngOnly;
          found = _this.options.supportedLngs.find(function (supportedLng) {
            if (supportedLng.indexOf(lngOnly) === 0) return supportedLng;
          });
        });
      }

      if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];
      return found;
    }
  }, {
    key: "getFallbackCodes",
    value: function getFallbackCodes(fallbacks, code) {
      if (!fallbacks) return [];
      if (typeof fallbacks === 'string') fallbacks = [fallbacks];
      if (Object.prototype.toString.apply(fallbacks) === '[object Array]') return fallbacks;
      if (!code) return fallbacks["default"] || [];
      var found = fallbacks[code];
      if (!found) found = fallbacks[this.getScriptPartFromCode(code)];
      if (!found) found = fallbacks[this.formatLanguageCode(code)];
      if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];
      if (!found) found = fallbacks["default"];
      return found || [];
    }
  }, {
    key: "toResolveHierarchy",
    value: function toResolveHierarchy(code, fallbackCode) {
      var _this2 = this;

      var fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);
      var codes = [];

      var addCode = function addCode(c) {
        if (!c) return;

        if (_this2.isSupportedCode(c)) {
          codes.push(c);
        } else {
          _this2.logger.warn("rejecting language code not found in supportedLngs: ".concat(c));
        }
      };

      if (typeof code === 'string' && code.indexOf('-') > -1) {
        if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));
        if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));
        if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));
      } else if (typeof code === 'string') {
        addCode(this.formatLanguageCode(code));
      }

      fallbackCodes.forEach(function (fc) {
        if (codes.indexOf(fc) < 0) addCode(_this2.formatLanguageCode(fc));
      });
      return codes;
    }
  }]);

  return LanguageUtil;
}();

var sets = [{
  lngs: ['ach', 'ak', 'am', 'arn', 'br', 'fil', 'gun', 'ln', 'mfe', 'mg', 'mi', 'oc', 'pt', 'pt-BR', 'tg', 'ti', 'tr', 'uz', 'wa'],
  nr: [1, 2],
  fc: 1
}, {
  lngs: ['af', 'an', 'ast', 'az', 'bg', 'bn', 'ca', 'da', 'de', 'dev', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fi', 'fo', 'fur', 'fy', 'gl', 'gu', 'ha', 'hi', 'hu', 'hy', 'ia', 'it', 'kn', 'ku', 'lb', 'mai', 'ml', 'mn', 'mr', 'nah', 'nap', 'nb', 'ne', 'nl', 'nn', 'no', 'nso', 'pa', 'pap', 'pms', 'ps', 'pt-PT', 'rm', 'sco', 'se', 'si', 'so', 'son', 'sq', 'sv', 'sw', 'ta', 'te', 'tk', 'ur', 'yo'],
  nr: [1, 2],
  fc: 2
}, {
  lngs: ['ay', 'bo', 'cgg', 'fa', 'id', 'ja', 'jbo', 'ka', 'kk', 'km', 'ko', 'ky', 'lo', 'ms', 'sah', 'su', 'th', 'tt', 'ug', 'vi', 'wo', 'zh'],
  nr: [1],
  fc: 3
}, {
  lngs: ['be', 'bs', 'cnr', 'dz', 'hr', 'ru', 'sr', 'uk'],
  nr: [1, 2, 5],
  fc: 4
}, {
  lngs: ['ar'],
  nr: [0, 1, 2, 3, 11, 100],
  fc: 5
}, {
  lngs: ['cs', 'sk'],
  nr: [1, 2, 5],
  fc: 6
}, {
  lngs: ['csb', 'pl'],
  nr: [1, 2, 5],
  fc: 7
}, {
  lngs: ['cy'],
  nr: [1, 2, 3, 8],
  fc: 8
}, {
  lngs: ['fr'],
  nr: [1, 2],
  fc: 9
}, {
  lngs: ['ga'],
  nr: [1, 2, 3, 7, 11],
  fc: 10
}, {
  lngs: ['gd'],
  nr: [1, 2, 3, 20],
  fc: 11
}, {
  lngs: ['is'],
  nr: [1, 2],
  fc: 12
}, {
  lngs: ['jv'],
  nr: [0, 1],
  fc: 13
}, {
  lngs: ['kw'],
  nr: [1, 2, 3, 4],
  fc: 14
}, {
  lngs: ['lt'],
  nr: [1, 2, 10],
  fc: 15
}, {
  lngs: ['lv'],
  nr: [1, 2, 0],
  fc: 16
}, {
  lngs: ['mk'],
  nr: [1, 2],
  fc: 17
}, {
  lngs: ['mnk'],
  nr: [0, 1, 2],
  fc: 18
}, {
  lngs: ['mt'],
  nr: [1, 2, 11, 20],
  fc: 19
}, {
  lngs: ['or'],
  nr: [2, 1],
  fc: 2
}, {
  lngs: ['ro'],
  nr: [1, 2, 20],
  fc: 20
}, {
  lngs: ['sl'],
  nr: [5, 1, 2, 3],
  fc: 21
}, {
  lngs: ['he'],
  nr: [1, 2, 20, 21],
  fc: 22
}];
var _rulesPluralsTypes = {
  1: function _(n) {
    return Number(n > 1);
  },
  2: function _(n) {
    return Number(n != 1);
  },
  3: function _(n) {
    return 0;
  },
  4: function _(n) {
    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);
  },
  5: function _(n) {
    return Number(n == 0 ? 0 : n == 1 ? 1 : n == 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5);
  },
  6: function _(n) {
    return Number(n == 1 ? 0 : n >= 2 && n <= 4 ? 1 : 2);
  },
  7: function _(n) {
    return Number(n == 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);
  },
  8: function _(n) {
    return Number(n == 1 ? 0 : n == 2 ? 1 : n != 8 && n != 11 ? 2 : 3);
  },
  9: function _(n) {
    return Number(n >= 2);
  },
  10: function _(n) {
    return Number(n == 1 ? 0 : n == 2 ? 1 : n < 7 ? 2 : n < 11 ? 3 : 4);
  },
  11: function _(n) {
    return Number(n == 1 || n == 11 ? 0 : n == 2 || n == 12 ? 1 : n > 2 && n < 20 ? 2 : 3);
  },
  12: function _(n) {
    return Number(n % 10 != 1 || n % 100 == 11);
  },
  13: function _(n) {
    return Number(n !== 0);
  },
  14: function _(n) {
    return Number(n == 1 ? 0 : n == 2 ? 1 : n == 3 ? 2 : 3);
  },
  15: function _(n) {
    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);
  },
  16: function _(n) {
    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n !== 0 ? 1 : 2);
  },
  17: function _(n) {
    return Number(n == 1 || n % 10 == 1 && n % 100 != 11 ? 0 : 1);
  },
  18: function _(n) {
    return Number(n == 0 ? 0 : n == 1 ? 1 : 2);
  },
  19: function _(n) {
    return Number(n == 1 ? 0 : n == 0 || n % 100 > 1 && n % 100 < 11 ? 1 : n % 100 > 10 && n % 100 < 20 ? 2 : 3);
  },
  20: function _(n) {
    return Number(n == 1 ? 0 : n == 0 || n % 100 > 0 && n % 100 < 20 ? 1 : 2);
  },
  21: function _(n) {
    return Number(n % 100 == 1 ? 1 : n % 100 == 2 ? 2 : n % 100 == 3 || n % 100 == 4 ? 3 : 0);
  },
  22: function _(n) {
    return Number(n == 1 ? 0 : n == 2 ? 1 : (n < 0 || n > 10) && n % 10 == 0 ? 2 : 3);
  }
};

function createRules() {
  var rules = {};
  sets.forEach(function (set) {
    set.lngs.forEach(function (l) {
      rules[l] = {
        numbers: set.nr,
        plurals: _rulesPluralsTypes[set.fc]
      };
    });
  });
  return rules;
}

var i18next_PluralResolver = function () {
  function PluralResolver(languageUtils) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    Object(classCallCheck["a" /* default */])(this, PluralResolver);

    this.languageUtils = languageUtils;
    this.options = options;
    this.logger = baseLogger.create('pluralResolver');
    this.rules = createRules();
  }

  Object(createClass["a" /* default */])(PluralResolver, [{
    key: "addRule",
    value: function addRule(lng, obj) {
      this.rules[lng] = obj;
    }
  }, {
    key: "getRule",
    value: function getRule(code) {
      return this.rules[code] || this.rules[this.languageUtils.getLanguagePartFromCode(code)];
    }
  }, {
    key: "needsPlural",
    value: function needsPlural(code) {
      var rule = this.getRule(code);
      return rule && rule.numbers.length > 1;
    }
  }, {
    key: "getPluralFormsOfKey",
    value: function getPluralFormsOfKey(code, key) {
      var _this = this;

      var ret = [];
      var rule = this.getRule(code);
      if (!rule) return ret;
      rule.numbers.forEach(function (n) {
        var suffix = _this.getSuffix(code, n);

        ret.push("".concat(key).concat(suffix));
      });
      return ret;
    }
  }, {
    key: "getSuffix",
    value: function getSuffix(code, count) {
      var _this2 = this;

      var rule = this.getRule(code);

      if (rule) {
        var idx = rule.noAbs ? rule.plurals(count) : rule.plurals(Math.abs(count));
        var suffix = rule.numbers[idx];

        if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {
          if (suffix === 2) {
            suffix = 'plural';
          } else if (suffix === 1) {
            suffix = '';
          }
        }

        var returnSuffix = function returnSuffix() {
          return _this2.options.prepend && suffix.toString() ? _this2.options.prepend + suffix.toString() : suffix.toString();
        };

        if (this.options.compatibilityJSON === 'v1') {
          if (suffix === 1) return '';
          if (typeof suffix === 'number') return "_plural_".concat(suffix.toString());
          return returnSuffix();
        } else if (this.options.compatibilityJSON === 'v2') {
          return returnSuffix();
        } else if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {
          return returnSuffix();
        }

        return this.options.prepend && idx.toString() ? this.options.prepend + idx.toString() : idx.toString();
      }

      this.logger.warn("no plural rule found for: ".concat(code));
      return '';
    }
  }]);

  return PluralResolver;
}();

var i18next_Interpolator = function () {
  function Interpolator() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    Object(classCallCheck["a" /* default */])(this, Interpolator);

    this.logger = baseLogger.create('interpolator');
    this.options = options;

    this.format = options.interpolation && options.interpolation.format || function (value) {
      return value;
    };

    this.init(options);
  }

  Object(createClass["a" /* default */])(Interpolator, [{
    key: "init",
    value: function init() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      if (!options.interpolation) options.interpolation = {
        escapeValue: true
      };
      var iOpts = options.interpolation;
      this.escape = iOpts.escape !== undefined ? iOpts.escape : i18next_escape;
      this.escapeValue = iOpts.escapeValue !== undefined ? iOpts.escapeValue : true;
      this.useRawValueToEscape = iOpts.useRawValueToEscape !== undefined ? iOpts.useRawValueToEscape : false;
      this.prefix = iOpts.prefix ? regexEscape(iOpts.prefix) : iOpts.prefixEscaped || '{{';
      this.suffix = iOpts.suffix ? regexEscape(iOpts.suffix) : iOpts.suffixEscaped || '}}';
      this.formatSeparator = iOpts.formatSeparator ? iOpts.formatSeparator : iOpts.formatSeparator || ',';
      this.unescapePrefix = iOpts.unescapeSuffix ? '' : iOpts.unescapePrefix || '-';
      this.unescapeSuffix = this.unescapePrefix ? '' : iOpts.unescapeSuffix || '';
      this.nestingPrefix = iOpts.nestingPrefix ? regexEscape(iOpts.nestingPrefix) : iOpts.nestingPrefixEscaped || regexEscape('$t(');
      this.nestingSuffix = iOpts.nestingSuffix ? regexEscape(iOpts.nestingSuffix) : iOpts.nestingSuffixEscaped || regexEscape(')');
      this.nestingOptionsSeparator = iOpts.nestingOptionsSeparator ? iOpts.nestingOptionsSeparator : iOpts.nestingOptionsSeparator || ',';
      this.maxReplaces = iOpts.maxReplaces ? iOpts.maxReplaces : 1000;
      this.alwaysFormat = iOpts.alwaysFormat !== undefined ? iOpts.alwaysFormat : false;
      this.resetRegExp();
    }
  }, {
    key: "reset",
    value: function reset() {
      if (this.options) this.init(this.options);
    }
  }, {
    key: "resetRegExp",
    value: function resetRegExp() {
      var regexpStr = "".concat(this.prefix, "(.+?)").concat(this.suffix);
      this.regexp = new RegExp(regexpStr, 'g');
      var regexpUnescapeStr = "".concat(this.prefix).concat(this.unescapePrefix, "(.+?)").concat(this.unescapeSuffix).concat(this.suffix);
      this.regexpUnescape = new RegExp(regexpUnescapeStr, 'g');
      var nestingRegexpStr = "".concat(this.nestingPrefix, "(.+?)").concat(this.nestingSuffix);
      this.nestingRegexp = new RegExp(nestingRegexpStr, 'g');
    }
  }, {
    key: "interpolate",
    value: function interpolate(str, data, lng, options) {
      var _this = this;

      var match;
      var value;
      var replaces;
      var defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};

      function regexSafe(val) {
        return val.replace(/\$/g, '$$$$');
      }

      var handleFormat = function handleFormat(key) {
        if (key.indexOf(_this.formatSeparator) < 0) {
          var path = getPathWithDefaults(data, defaultData, key);
          return _this.alwaysFormat ? _this.format(path, undefined, lng) : path;
        }

        var p = key.split(_this.formatSeparator);
        var k = p.shift().trim();
        var f = p.join(_this.formatSeparator).trim();
        return _this.format(getPathWithDefaults(data, defaultData, k), f, lng, options);
      };

      this.resetRegExp();
      var missingInterpolationHandler = options && options.missingInterpolationHandler || this.options.missingInterpolationHandler;
      replaces = 0;

      while (match = this.regexpUnescape.exec(str)) {
        value = handleFormat(match[1].trim());

        if (value === undefined) {
          if (typeof missingInterpolationHandler === 'function') {
            var temp = missingInterpolationHandler(str, match, options);
            value = typeof temp === 'string' ? temp : '';
          } else {
            this.logger.warn("missed to pass in variable ".concat(match[1], " for interpolating ").concat(str));
            value = '';
          }
        } else if (typeof value !== 'string' && !this.useRawValueToEscape) {
          value = makeString(value);
        }

        str = str.replace(match[0], regexSafe(value));
        this.regexpUnescape.lastIndex = 0;
        replaces++;

        if (replaces >= this.maxReplaces) {
          break;
        }
      }

      replaces = 0;

      while (match = this.regexp.exec(str)) {
        value = handleFormat(match[1].trim());

        if (value === undefined) {
          if (typeof missingInterpolationHandler === 'function') {
            var _temp = missingInterpolationHandler(str, match, options);

            value = typeof _temp === 'string' ? _temp : '';
          } else {
            this.logger.warn("missed to pass in variable ".concat(match[1], " for interpolating ").concat(str));
            value = '';
          }
        } else if (typeof value !== 'string' && !this.useRawValueToEscape) {
          value = makeString(value);
        }

        value = this.escapeValue ? regexSafe(this.escape(value)) : regexSafe(value);
        str = str.replace(match[0], value);
        this.regexp.lastIndex = 0;
        replaces++;

        if (replaces >= this.maxReplaces) {
          break;
        }
      }

      return str;
    }
  }, {
    key: "nest",
    value: function nest(str, fc) {
      var _this2 = this;

      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var match;
      var value;

      var clonedOptions = _objectSpread({}, options);

      clonedOptions.applyPostProcessor = false;
      delete clonedOptions.defaultValue;

      function handleHasOptions(key, inheritedOptions) {
        var sep = this.nestingOptionsSeparator;
        if (key.indexOf(sep) < 0) return key;
        var c = key.split(new RegExp("".concat(sep, "[ ]*{")));
        var optionsString = "{".concat(c[1]);
        key = c[0];
        optionsString = this.interpolate(optionsString, clonedOptions);
        optionsString = optionsString.replace(/'/g, '"');

        try {
          clonedOptions = JSON.parse(optionsString);
          if (inheritedOptions) clonedOptions = _objectSpread({}, inheritedOptions, clonedOptions);
        } catch (e) {
          this.logger.warn("failed parsing options string in nesting for key ".concat(key), e);
          return "".concat(key).concat(sep).concat(optionsString);
        }

        delete clonedOptions.defaultValue;
        return key;
      }

      while (match = this.nestingRegexp.exec(str)) {
        var formatters = [];
        var doReduce = false;

        if (match[0].includes(this.formatSeparator) && !/{.*}/.test(match[1])) {
          var r = match[1].split(this.formatSeparator).map(function (elem) {
            return elem.trim();
          });
          match[1] = r.shift();
          formatters = r;
          doReduce = true;
        }

        value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);
        if (value && match[0] === str && typeof value !== 'string') return value;
        if (typeof value !== 'string') value = makeString(value);

        if (!value) {
          this.logger.warn("missed to resolve ".concat(match[1], " for nesting ").concat(str));
          value = '';
        }

        if (doReduce) {
          value = formatters.reduce(function (v, f) {
            return _this2.format(v, f, options.lng, options);
          }, value.trim());
        }

        str = str.replace(match[0], value);
        this.regexp.lastIndex = 0;
      }

      return str;
    }
  }]);

  return Interpolator;
}();

function remove(arr, what) {
  var found = arr.indexOf(what);

  while (found !== -1) {
    arr.splice(found, 1);
    found = arr.indexOf(what);
  }
}

var i18next_Connector = function (_EventEmitter) {
  Object(inherits["a" /* default */])(Connector, _EventEmitter);

  function Connector(backend, store, services) {
    var _this;

    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

    Object(classCallCheck["a" /* default */])(this, Connector);

    _this = Object(possibleConstructorReturn["a" /* default */])(this, Object(getPrototypeOf["a" /* default */])(Connector).call(this));

    if (isIE10) {
      i18next_EventEmitter.call(Object(assertThisInitialized["a" /* default */])(_this));
    }

    _this.backend = backend;
    _this.store = store;
    _this.services = services;
    _this.languageUtils = services.languageUtils;
    _this.options = options;
    _this.logger = baseLogger.create('backendConnector');
    _this.state = {};
    _this.queue = [];

    if (_this.backend && _this.backend.init) {
      _this.backend.init(services, options.backend, options);
    }

    return _this;
  }

  Object(createClass["a" /* default */])(Connector, [{
    key: "queueLoad",
    value: function queueLoad(languages, namespaces, options, callback) {
      var _this2 = this;

      var toLoad = [];
      var pending = [];
      var toLoadLanguages = [];
      var toLoadNamespaces = [];
      languages.forEach(function (lng) {
        var hasAllNamespaces = true;
        namespaces.forEach(function (ns) {
          var name = "".concat(lng, "|").concat(ns);

          if (!options.reload && _this2.store.hasResourceBundle(lng, ns)) {
            _this2.state[name] = 2;
          } else if (_this2.state[name] < 0) ;else if (_this2.state[name] === 1) {
            if (pending.indexOf(name) < 0) pending.push(name);
          } else {
            _this2.state[name] = 1;
            hasAllNamespaces = false;
            if (pending.indexOf(name) < 0) pending.push(name);
            if (toLoad.indexOf(name) < 0) toLoad.push(name);
            if (toLoadNamespaces.indexOf(ns) < 0) toLoadNamespaces.push(ns);
          }
        });
        if (!hasAllNamespaces) toLoadLanguages.push(lng);
      });

      if (toLoad.length || pending.length) {
        this.queue.push({
          pending: pending,
          loaded: {},
          errors: [],
          callback: callback
        });
      }

      return {
        toLoad: toLoad,
        pending: pending,
        toLoadLanguages: toLoadLanguages,
        toLoadNamespaces: toLoadNamespaces
      };
    }
  }, {
    key: "loaded",
    value: function loaded(name, err, data) {
      var s = name.split('|');
      var lng = s[0];
      var ns = s[1];
      if (err) this.emit('failedLoading', lng, ns, err);

      if (data) {
        this.store.addResourceBundle(lng, ns, data);
      }

      this.state[name] = err ? -1 : 2;
      var loaded = {};
      this.queue.forEach(function (q) {
        pushPath(q.loaded, [lng], ns);
        remove(q.pending, name);
        if (err) q.errors.push(err);

        if (q.pending.length === 0 && !q.done) {
          Object.keys(q.loaded).forEach(function (l) {
            if (!loaded[l]) loaded[l] = [];

            if (q.loaded[l].length) {
              q.loaded[l].forEach(function (ns) {
                if (loaded[l].indexOf(ns) < 0) loaded[l].push(ns);
              });
            }
          });
          q.done = true;

          if (q.errors.length) {
            q.callback(q.errors);
          } else {
            q.callback();
          }
        }
      });
      this.emit('loaded', loaded);
      this.queue = this.queue.filter(function (q) {
        return !q.done;
      });
    }
  }, {
    key: "read",
    value: function read(lng, ns, fcName) {
      var _this3 = this;

      var tried = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
      var wait = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 350;
      var callback = arguments.length > 5 ? arguments[5] : undefined;
      if (!lng.length) return callback(null, {});
      return this.backend[fcName](lng, ns, function (err, data) {
        if (err && data && tried < 5) {
          setTimeout(function () {
            _this3.read.call(_this3, lng, ns, fcName, tried + 1, wait * 2, callback);
          }, wait);
          return;
        }

        callback(err, data);
      });
    }
  }, {
    key: "prepareLoading",
    value: function prepareLoading(languages, namespaces) {
      var _this4 = this;

      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var callback = arguments.length > 3 ? arguments[3] : undefined;

      if (!this.backend) {
        this.logger.warn('No backend was added via i18next.use. Will not load resources.');
        return callback && callback();
      }

      if (typeof languages === 'string') languages = this.languageUtils.toResolveHierarchy(languages);
      if (typeof namespaces === 'string') namespaces = [namespaces];
      var toLoad = this.queueLoad(languages, namespaces, options, callback);

      if (!toLoad.toLoad.length) {
        if (!toLoad.pending.length) callback();
        return null;
      }

      toLoad.toLoad.forEach(function (name) {
        _this4.loadOne(name);
      });
    }
  }, {
    key: "load",
    value: function load(languages, namespaces, callback) {
      this.prepareLoading(languages, namespaces, {}, callback);
    }
  }, {
    key: "reload",
    value: function reload(languages, namespaces, callback) {
      this.prepareLoading(languages, namespaces, {
        reload: true
      }, callback);
    }
  }, {
    key: "loadOne",
    value: function loadOne(name) {
      var _this5 = this;

      var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
      var s = name.split('|');
      var lng = s[0];
      var ns = s[1];
      this.read(lng, ns, 'read', undefined, undefined, function (err, data) {
        if (err) _this5.logger.warn("".concat(prefix, "loading namespace ").concat(ns, " for language ").concat(lng, " failed"), err);
        if (!err && data) _this5.logger.log("".concat(prefix, "loaded namespace ").concat(ns, " for language ").concat(lng), data);

        _this5.loaded(name, err, data);
      });
    }
  }, {
    key: "saveMissing",
    value: function saveMissing(languages, namespace, key, fallbackValue, isUpdate) {
      var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};

      if (this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(namespace)) {
        this.logger.warn("did not save key \"".concat(key, "\" as the namespace \"").concat(namespace, "\" was not yet loaded"), 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');
        return;
      }

      if (key === undefined || key === null || key === '') return;

      if (this.backend && this.backend.create) {
        this.backend.create(languages, namespace, key, fallbackValue, null, _objectSpread({}, options, {
          isUpdate: isUpdate
        }));
      }

      if (!languages || !languages[0]) return;
      this.store.addResource(languages[0], namespace, key, fallbackValue);
    }
  }]);

  return Connector;
}(i18next_EventEmitter);

function i18next_get() {
  return {
    debug: false,
    initImmediate: true,
    ns: ['translation'],
    defaultNS: ['translation'],
    fallbackLng: ['dev'],
    fallbackNS: false,
    whitelist: false,
    nonExplicitWhitelist: false,
    supportedLngs: false,
    nonExplicitSupportedLngs: false,
    load: 'all',
    preload: false,
    simplifyPluralSuffix: true,
    keySeparator: '.',
    nsSeparator: ':',
    pluralSeparator: '_',
    contextSeparator: '_',
    partialBundledLanguages: false,
    saveMissing: false,
    updateMissing: false,
    saveMissingTo: 'fallback',
    saveMissingPlurals: true,
    missingKeyHandler: false,
    missingInterpolationHandler: false,
    postProcess: false,
    postProcessPassResolved: false,
    returnNull: true,
    returnEmptyString: true,
    returnObjects: false,
    joinArrays: false,
    returnedObjectHandler: false,
    parseMissingKeyHandler: false,
    appendNamespaceToMissingKey: false,
    appendNamespaceToCIMode: false,
    overloadTranslationOptionHandler: function handle(args) {
      var ret = {};
      if (Object(esm_typeof["a" /* default */])(args[1]) === 'object') ret = args[1];
      if (typeof args[1] === 'string') ret.defaultValue = args[1];
      if (typeof args[2] === 'string') ret.tDescription = args[2];

      if (Object(esm_typeof["a" /* default */])(args[2]) === 'object' || Object(esm_typeof["a" /* default */])(args[3]) === 'object') {
        var options = args[3] || args[2];
        Object.keys(options).forEach(function (key) {
          ret[key] = options[key];
        });
      }

      return ret;
    },
    interpolation: {
      escapeValue: true,
      format: function format(value, _format, lng, options) {
        return value;
      },
      prefix: '{{',
      suffix: '}}',
      formatSeparator: ',',
      unescapePrefix: '-',
      nestingPrefix: '$t(',
      nestingSuffix: ')',
      nestingOptionsSeparator: ',',
      maxReplaces: 1000
    }
  };
}

function transformOptions(options) {
  if (typeof options.ns === 'string') options.ns = [options.ns];
  if (typeof options.fallbackLng === 'string') options.fallbackLng = [options.fallbackLng];
  if (typeof options.fallbackNS === 'string') options.fallbackNS = [options.fallbackNS];

  if (options.whitelist) {
    if (options.whitelist && options.whitelist.indexOf('cimode') < 0) {
      options.whitelist = options.whitelist.concat(['cimode']);
    }

    options.supportedLngs = options.whitelist;
  }

  if (options.nonExplicitWhitelist) {
    options.nonExplicitSupportedLngs = options.nonExplicitWhitelist;
  }

  if (options.supportedLngs && options.supportedLngs.indexOf('cimode') < 0) {
    options.supportedLngs = options.supportedLngs.concat(['cimode']);
  }

  return options;
}

function noop() {}

var i18next_I18n = function (_EventEmitter) {
  Object(inherits["a" /* default */])(I18n, _EventEmitter);

  function I18n() {
    var _this;

    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var callback = arguments.length > 1 ? arguments[1] : undefined;

    Object(classCallCheck["a" /* default */])(this, I18n);

    _this = Object(possibleConstructorReturn["a" /* default */])(this, Object(getPrototypeOf["a" /* default */])(I18n).call(this));

    if (isIE10) {
      i18next_EventEmitter.call(Object(assertThisInitialized["a" /* default */])(_this));
    }

    _this.options = transformOptions(options);
    _this.services = {};
    _this.logger = baseLogger;
    _this.modules = {
      external: []
    };

    if (callback && !_this.isInitialized && !options.isClone) {
      if (!_this.options.initImmediate) {
        _this.init(options, callback);

        return Object(possibleConstructorReturn["a" /* default */])(_this, Object(assertThisInitialized["a" /* default */])(_this));
      }

      setTimeout(function () {
        _this.init(options, callback);
      }, 0);
    }

    return _this;
  }

  Object(createClass["a" /* default */])(I18n, [{
    key: "init",
    value: function init() {
      var _this2 = this;

      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var callback = arguments.length > 1 ? arguments[1] : undefined;

      if (typeof options === 'function') {
        callback = options;
        options = {};
      }

      if (options.whitelist && !options.supportedLngs) {
        this.logger.deprecate('whitelist', 'option "whitelist" will be renamed to "supportedLngs" in the next major - please make sure to rename this option asap.');
      }

      if (options.nonExplicitWhitelist && !options.nonExplicitSupportedLngs) {
        this.logger.deprecate('whitelist', 'options "nonExplicitWhitelist" will be renamed to "nonExplicitSupportedLngs" in the next major - please make sure to rename this option asap.');
      }

      this.options = _objectSpread({}, i18next_get(), this.options, transformOptions(options));
      this.format = this.options.interpolation.format;
      if (!callback) callback = noop;

      function createClassOnDemand(ClassOrObject) {
        if (!ClassOrObject) return null;
        if (typeof ClassOrObject === 'function') return new ClassOrObject();
        return ClassOrObject;
      }

      if (!this.options.isClone) {
        if (this.modules.logger) {
          baseLogger.init(createClassOnDemand(this.modules.logger), this.options);
        } else {
          baseLogger.init(null, this.options);
        }

        var lu = new i18next_LanguageUtil(this.options);
        this.store = new i18next_ResourceStore(this.options.resources, this.options);
        var s = this.services;
        s.logger = baseLogger;
        s.resourceStore = this.store;
        s.languageUtils = lu;
        s.pluralResolver = new i18next_PluralResolver(lu, {
          prepend: this.options.pluralSeparator,
          compatibilityJSON: this.options.compatibilityJSON,
          simplifyPluralSuffix: this.options.simplifyPluralSuffix
        });
        s.interpolator = new i18next_Interpolator(this.options);
        s.utils = {
          hasLoadedNamespace: this.hasLoadedNamespace.bind(this)
        };
        s.backendConnector = new i18next_Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);
        s.backendConnector.on('*', function (event) {
          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            args[_key - 1] = arguments[_key];
          }

          _this2.emit.apply(_this2, [event].concat(args));
        });

        if (this.modules.languageDetector) {
          s.languageDetector = createClassOnDemand(this.modules.languageDetector);
          s.languageDetector.init(s, this.options.detection, this.options);
        }

        if (this.modules.i18nFormat) {
          s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);
          if (s.i18nFormat.init) s.i18nFormat.init(this);
        }

        this.translator = new i18next_Translator(this.services, this.options);
        this.translator.on('*', function (event) {
          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
            args[_key2 - 1] = arguments[_key2];
          }

          _this2.emit.apply(_this2, [event].concat(args));
        });
        this.modules.external.forEach(function (m) {
          if (m.init) m.init(_this2);
        });
      }

      if (!this.modules.languageDetector && !this.options.lng) {
        this.logger.warn('init: no languageDetector is used and no lng is defined');
      }

      var storeApi = ['getResource', 'addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];
      storeApi.forEach(function (fcName) {
        _this2[fcName] = function () {
          var _this2$store;

          return (_this2$store = _this2.store)[fcName].apply(_this2$store, arguments);
        };
      });
      var deferred = defer();

      var load = function load() {
        _this2.changeLanguage(_this2.options.lng, function (err, t) {
          _this2.isInitialized = true;

          _this2.logger.log('initialized', _this2.options);

          _this2.emit('initialized', _this2.options);

          deferred.resolve(t);
          callback(err, t);
        });
      };

      if (this.options.resources || !this.options.initImmediate) {
        load();
      } else {
        setTimeout(load, 0);
      }

      return deferred;
    }
  }, {
    key: "loadResources",
    value: function loadResources(language) {
      var _this3 = this;

      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;
      var usedCallback = callback;
      var usedLng = typeof language === 'string' ? language : this.language;
      if (typeof language === 'function') usedCallback = language;

      if (!this.options.resources || this.options.partialBundledLanguages) {
        if (usedLng && usedLng.toLowerCase() === 'cimode') return usedCallback();
        var toLoad = [];

        var append = function append(lng) {
          if (!lng) return;

          var lngs = _this3.services.languageUtils.toResolveHierarchy(lng);

          lngs.forEach(function (l) {
            if (toLoad.indexOf(l) < 0) toLoad.push(l);
          });
        };

        if (!usedLng) {
          var fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);
          fallbacks.forEach(function (l) {
            return append(l);
          });
        } else {
          append(usedLng);
        }

        if (this.options.preload) {
          this.options.preload.forEach(function (l) {
            return append(l);
          });
        }

        this.services.backendConnector.load(toLoad, this.options.ns, usedCallback);
      } else {
        usedCallback(null);
      }
    }
  }, {
    key: "reloadResources",
    value: function reloadResources(lngs, ns, callback) {
      var deferred = defer();
      if (!lngs) lngs = this.languages;
      if (!ns) ns = this.options.ns;
      if (!callback) callback = noop;
      this.services.backendConnector.reload(lngs, ns, function (err) {
        deferred.resolve();
        callback(err);
      });
      return deferred;
    }
  }, {
    key: "use",
    value: function use(module) {
      if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');
      if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');

      if (module.type === 'backend') {
        this.modules.backend = module;
      }

      if (module.type === 'logger' || module.log && module.warn && module.error) {
        this.modules.logger = module;
      }

      if (module.type === 'languageDetector') {
        this.modules.languageDetector = module;
      }

      if (module.type === 'i18nFormat') {
        this.modules.i18nFormat = module;
      }

      if (module.type === 'postProcessor') {
        postProcessor.addPostProcessor(module);
      }

      if (module.type === '3rdParty') {
        this.modules.external.push(module);
      }

      return this;
    }
  }, {
    key: "changeLanguage",
    value: function changeLanguage(lng, callback) {
      var _this4 = this;

      this.isLanguageChangingTo = lng;
      var deferred = defer();
      this.emit('languageChanging', lng);

      var done = function done(err, l) {
        if (l) {
          _this4.language = l;
          _this4.languages = _this4.services.languageUtils.toResolveHierarchy(l);

          _this4.translator.changeLanguage(l);

          _this4.isLanguageChangingTo = undefined;

          _this4.emit('languageChanged', l);

          _this4.logger.log('languageChanged', l);
        } else {
          _this4.isLanguageChangingTo = undefined;
        }

        deferred.resolve(function () {
          return _this4.t.apply(_this4, arguments);
        });
        if (callback) callback(err, function () {
          return _this4.t.apply(_this4, arguments);
        });
      };

      var setLng = function setLng(lngs) {
        var l = typeof lngs === 'string' ? lngs : _this4.services.languageUtils.getBestMatchFromCodes(lngs);

        if (l) {
          if (!_this4.language) {
            _this4.language = l;
            _this4.languages = _this4.services.languageUtils.toResolveHierarchy(l);
          }

          if (!_this4.translator.language) _this4.translator.changeLanguage(l);
          if (_this4.services.languageDetector) _this4.services.languageDetector.cacheUserLanguage(l);
        }

        _this4.loadResources(l, function (err) {
          done(err, l);
        });
      };

      if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {
        setLng(this.services.languageDetector.detect());
      } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {
        this.services.languageDetector.detect(setLng);
      } else {
        setLng(lng);
      }

      return deferred;
    }
  }, {
    key: "getFixedT",
    value: function getFixedT(lng, ns) {
      var _this5 = this;

      var fixedT = function fixedT(key, opts) {
        var options;

        if (Object(esm_typeof["a" /* default */])(opts) !== 'object') {
          for (var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {
            rest[_key3 - 2] = arguments[_key3];
          }

          options = _this5.options.overloadTranslationOptionHandler([key, opts].concat(rest));
        } else {
          options = _objectSpread({}, opts);
        }

        options.lng = options.lng || fixedT.lng;
        options.lngs = options.lngs || fixedT.lngs;
        options.ns = options.ns || fixedT.ns;
        return _this5.t(key, options);
      };

      if (typeof lng === 'string') {
        fixedT.lng = lng;
      } else {
        fixedT.lngs = lng;
      }

      fixedT.ns = ns;
      return fixedT;
    }
  }, {
    key: "t",
    value: function t() {
      var _this$translator;

      return this.translator && (_this$translator = this.translator).translate.apply(_this$translator, arguments);
    }
  }, {
    key: "exists",
    value: function exists() {
      var _this$translator2;

      return this.translator && (_this$translator2 = this.translator).exists.apply(_this$translator2, arguments);
    }
  }, {
    key: "setDefaultNamespace",
    value: function setDefaultNamespace(ns) {
      this.options.defaultNS = ns;
    }
  }, {
    key: "hasLoadedNamespace",
    value: function hasLoadedNamespace(ns) {
      var _this6 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      if (!this.isInitialized) {
        this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);
        return false;
      }

      if (!this.languages || !this.languages.length) {
        this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);
        return false;
      }

      var lng = this.languages[0];
      var fallbackLng = this.options ? this.options.fallbackLng : false;
      var lastLng = this.languages[this.languages.length - 1];
      if (lng.toLowerCase() === 'cimode') return true;

      var loadNotPending = function loadNotPending(l, n) {
        var loadState = _this6.services.backendConnector.state["".concat(l, "|").concat(n)];

        return loadState === -1 || loadState === 2;
      };

      if (options.precheck) {
        var preResult = options.precheck(this, loadNotPending);
        if (preResult !== undefined) return preResult;
      }

      if (this.hasResourceBundle(lng, ns)) return true;
      if (!this.services.backendConnector.backend) return true;
      if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;
      return false;
    }
  }, {
    key: "loadNamespaces",
    value: function loadNamespaces(ns, callback) {
      var _this7 = this;

      var deferred = defer();

      if (!this.options.ns) {
        callback && callback();
        return Promise.resolve();
      }

      if (typeof ns === 'string') ns = [ns];
      ns.forEach(function (n) {
        if (_this7.options.ns.indexOf(n) < 0) _this7.options.ns.push(n);
      });
      this.loadResources(function (err) {
        deferred.resolve();
        if (callback) callback(err);
      });
      return deferred;
    }
  }, {
    key: "loadLanguages",
    value: function loadLanguages(lngs, callback) {
      var deferred = defer();
      if (typeof lngs === 'string') lngs = [lngs];
      var preloaded = this.options.preload || [];
      var newLngs = lngs.filter(function (lng) {
        return preloaded.indexOf(lng) < 0;
      });

      if (!newLngs.length) {
        if (callback) callback();
        return Promise.resolve();
      }

      this.options.preload = preloaded.concat(newLngs);
      this.loadResources(function (err) {
        deferred.resolve();
        if (callback) callback(err);
      });
      return deferred;
    }
  }, {
    key: "dir",
    value: function dir(lng) {
      if (!lng) lng = this.languages && this.languages.length > 0 ? this.languages[0] : this.language;
      if (!lng) return 'rtl';
      var rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam'];
      return rtlLngs.indexOf(this.services.languageUtils.getLanguagePartFromCode(lng)) >= 0 ? 'rtl' : 'ltr';
    }
  }, {
    key: "createInstance",
    value: function createInstance() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var callback = arguments.length > 1 ? arguments[1] : undefined;
      return new I18n(options, callback);
    }
  }, {
    key: "cloneInstance",
    value: function cloneInstance() {
      var _this8 = this;

      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;

      var mergedOptions = _objectSpread({}, this.options, options, {
        isClone: true
      });

      var clone = new I18n(mergedOptions);
      var membersToCopy = ['store', 'services', 'language'];
      membersToCopy.forEach(function (m) {
        clone[m] = _this8[m];
      });
      clone.services = _objectSpread({}, this.services);
      clone.services.utils = {
        hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)
      };
      clone.translator = new i18next_Translator(clone.services, clone.options);
      clone.translator.on('*', function (event) {
        for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
          args[_key4 - 1] = arguments[_key4];
        }

        clone.emit.apply(clone, [event].concat(args));
      });
      clone.init(mergedOptions, callback);
      clone.translator.options = clone.options;
      clone.translator.backendConnector.services.utils = {
        hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)
      };
      return clone;
    }
  }]);

  return I18n;
}(i18next_EventEmitter);

var i18next = new i18next_I18n();
/* harmony default export */ var esm_i18next = (i18next);
// EXTERNAL MODULE: ../node_modules/react-i18next/dist/es/context.js
var context = __webpack_require__("0Xeg");

// EXTERNAL MODULE: ../node_modules/ptz-i18n/dist/index.js
var dist = __webpack_require__("wc+d");

// EXTERNAL MODULE: ../node_modules/react-helmet/es/Helmet.js
var Helmet = __webpack_require__("Hrl7");

// EXTERNAL MODULE: ../@antv/gatsby-theme-antv/site/components/Seo.tsx
var Seo = __webpack_require__("MlAH");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.string.fixed.js
var es6_string_fixed = __webpack_require__("BTfu");

// EXTERNAL MODULE: ../node_modules/antd/es/style/index.less
var es_style = __webpack_require__("SwVN");

// EXTERNAL MODULE: ../node_modules/antd/es/dropdown/style/index.less
var dropdown_style = __webpack_require__("mHqD");

// EXTERNAL MODULE: ../node_modules/antd/es/button/style/index.js
var button_style = __webpack_require__("sbMj");

// CONCATENATED MODULE: ../node_modules/antd/es/dropdown/style/index.js

 // style dependencies


// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.define-property.js
var es6_object_define_property = __webpack_require__("d3/y");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 1 modules
var slicedToArray = __webpack_require__("aNYv");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js + 1 modules
var objectWithoutProperties = __webpack_require__("dV/x");

// EXTERNAL MODULE: ../node_modules/rc-trigger/es/index.js + 10 modules
var es = __webpack_require__("mPTt");

// EXTERNAL MODULE: ../node_modules/classnames/index.js
var classnames = __webpack_require__("8Jek");
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);

// CONCATENATED MODULE: ../node_modules/rc-dropdown/es/placements.js
var autoAdjustOverflow = {
  adjustX: 1,
  adjustY: 1
};
var targetOffset = [0, 0];
var placements_placements = {
  topLeft: {
    points: ['bl', 'tl'],
    overflow: autoAdjustOverflow,
    offset: [0, -4],
    targetOffset: targetOffset
  },
  topCenter: {
    points: ['bc', 'tc'],
    overflow: autoAdjustOverflow,
    offset: [0, -4],
    targetOffset: targetOffset
  },
  topRight: {
    points: ['br', 'tr'],
    overflow: autoAdjustOverflow,
    offset: [0, -4],
    targetOffset: targetOffset
  },
  bottomLeft: {
    points: ['tl', 'bl'],
    overflow: autoAdjustOverflow,
    offset: [0, 4],
    targetOffset: targetOffset
  },
  bottomCenter: {
    points: ['tc', 'bc'],
    overflow: autoAdjustOverflow,
    offset: [0, 4],
    targetOffset: targetOffset
  },
  bottomRight: {
    points: ['tr', 'br'],
    overflow: autoAdjustOverflow,
    offset: [0, 4],
    targetOffset: targetOffset
  }
};
/* harmony default export */ var es_placements = (placements_placements);
// CONCATENATED MODULE: ../node_modules/rc-dropdown/es/Dropdown.js










function Dropdown_Dropdown(props, ref) {
  var _props$arrow = props.arrow,
      arrow = _props$arrow === void 0 ? false : _props$arrow,
      _props$prefixCls = props.prefixCls,
      prefixCls = _props$prefixCls === void 0 ? 'rc-dropdown' : _props$prefixCls,
      transitionName = props.transitionName,
      animation = props.animation,
      align = props.align,
      _props$placement = props.placement,
      placement = _props$placement === void 0 ? 'bottomLeft' : _props$placement,
      _props$placements = props.placements,
      placements = _props$placements === void 0 ? es_placements : _props$placements,
      getPopupContainer = props.getPopupContainer,
      showAction = props.showAction,
      hideAction = props.hideAction,
      overlayClassName = props.overlayClassName,
      overlayStyle = props.overlayStyle,
      visible = props.visible,
      _props$trigger = props.trigger,
      trigger = _props$trigger === void 0 ? ['hover'] : _props$trigger,
      otherProps = Object(objectWithoutProperties["a" /* default */])(props, ["arrow", "prefixCls", "transitionName", "animation", "align", "placement", "placements", "getPopupContainer", "showAction", "hideAction", "overlayClassName", "overlayStyle", "visible", "trigger"]);

  var _React$useState = react["useState"](),
      _React$useState2 = Object(slicedToArray["a" /* default */])(_React$useState, 2),
      triggerVisible = _React$useState2[0],
      setTriggerVisible = _React$useState2[1];

  var mergedVisible = 'visible' in props ? visible : triggerVisible;
  var triggerRef = react["useRef"](null);
  react["useImperativeHandle"](ref, function () {
    return triggerRef.current;
  });

  var getOverlayElement = function getOverlayElement() {
    var overlay = props.overlay;
    var overlayElement;

    if (typeof overlay === 'function') {
      overlayElement = overlay();
    } else {
      overlayElement = overlay;
    }

    return overlayElement;
  };

  var onClick = function onClick(e) {
    var onOverlayClick = props.onOverlayClick;
    var overlayProps = getOverlayElement().props;
    setTriggerVisible(false);

    if (onOverlayClick) {
      onOverlayClick(e);
    }

    if (overlayProps.onClick) {
      overlayProps.onClick(e);
    }
  };

  var onVisibleChange = function onVisibleChange(visible) {
    var onVisibleChange = props.onVisibleChange;
    setTriggerVisible(visible);

    if (typeof onVisibleChange === 'function') {
      onVisibleChange(visible);
    }
  };

  var getMenuElement = function getMenuElement() {
    var overlayElement = getOverlayElement();
    var extraOverlayProps = {
      prefixCls: "".concat(prefixCls, "-menu"),
      onClick: onClick
    };

    if (typeof overlayElement.type === 'string') {
      delete extraOverlayProps.prefixCls;
    }

    return react["createElement"](react["Fragment"], null, arrow && react["createElement"]("div", {
      className: "".concat(prefixCls, "-arrow")
    }), react["cloneElement"](overlayElement, extraOverlayProps));
  };

  var getMenuElementOrLambda = function getMenuElementOrLambda() {
    var overlay = props.overlay;

    if (typeof overlay === 'function') {
      return getMenuElement;
    }

    return getMenuElement();
  };

  var getMinOverlayWidthMatchTrigger = function getMinOverlayWidthMatchTrigger() {
    var minOverlayWidthMatchTrigger = props.minOverlayWidthMatchTrigger,
        alignPoint = props.alignPoint;

    if ('minOverlayWidthMatchTrigger' in props) {
      return minOverlayWidthMatchTrigger;
    }

    return !alignPoint;
  };

  var getOpenClassName = function getOpenClassName() {
    var openClassName = props.openClassName;

    if (openClassName !== undefined) {
      return openClassName;
    }

    return "".concat(prefixCls, "-open");
  };

  var renderChildren = function renderChildren() {
    var children = props.children;
    var childrenProps = children.props ? children.props : {};
    var childClassName = classnames_default()(childrenProps.className, getOpenClassName());
    return triggerVisible && children ? react["cloneElement"](children, {
      className: childClassName
    }) : children;
  };

  var triggerHideAction = hideAction;

  if (!triggerHideAction && trigger.indexOf('contextMenu') !== -1) {
    triggerHideAction = ['click'];
  }

  return react["createElement"](es["a" /* default */], Object.assign({}, otherProps, {
    prefixCls: prefixCls,
    ref: triggerRef,
    popupClassName: classnames_default()(overlayClassName, Object(defineProperty["a" /* default */])({}, "".concat(prefixCls, "-show-arrow"), arrow)),
    popupStyle: overlayStyle,
    builtinPlacements: placements,
    action: trigger,
    showAction: showAction,
    hideAction: triggerHideAction || [],
    popupPlacement: placement,
    popupAlign: align,
    popupTransitionName: transitionName,
    popupAnimation: animation,
    popupVisible: mergedVisible,
    stretch: getMinOverlayWidthMatchTrigger() ? 'minWidth' : '',
    popup: getMenuElementOrLambda(),
    onPopupVisibleChange: onVisibleChange,
    getPopupContainer: getPopupContainer
  }), renderChildren());
}

/* harmony default export */ var es_Dropdown = (react["forwardRef"](Dropdown_Dropdown));
// CONCATENATED MODULE: ../node_modules/rc-dropdown/es/index.js

/* harmony default export */ var rc_dropdown_es = (es_Dropdown);
// EXTERNAL MODULE: ../node_modules/@ant-design/icons/RightOutlined.js
var RightOutlined = __webpack_require__("rwvH");
var RightOutlined_default = /*#__PURE__*/__webpack_require__.n(RightOutlined);

// EXTERNAL MODULE: ../node_modules/core-js/modules/es7.symbol.async-iterator.js
var es7_symbol_async_iterator = __webpack_require__("+jjx");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.symbol.js
var es6_symbol = __webpack_require__("ABKx");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.string.iterator.js
var es6_string_iterator = __webpack_require__("lQyR");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.from.js
var es6_array_from = __webpack_require__("YhIr");

// EXTERNAL MODULE: ../node_modules/@ant-design/icons/EllipsisOutlined.js
var EllipsisOutlined = __webpack_require__("VW18");
var EllipsisOutlined_default = /*#__PURE__*/__webpack_require__.n(EllipsisOutlined);

// EXTERNAL MODULE: ../node_modules/antd/es/button/index.js
var es_button = __webpack_require__("H4M2");

// EXTERNAL MODULE: ../node_modules/antd/es/config-provider/context.js + 4 modules
var config_provider_context = __webpack_require__("Bfez");

// CONCATENATED MODULE: ../node_modules/antd/es/dropdown/dropdown-button.js













function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

function _iterableToArrayLimit(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

var __rest = undefined && undefined.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};







var ButtonGroup = es_button["a" /* default */].Group;

var dropdown_button_DropdownButton = function DropdownButton(props) {
  var _React$useContext = react["useContext"](config_provider_context["b" /* ConfigContext */]),
      getContextPopupContainer = _React$useContext.getPopupContainer,
      getPrefixCls = _React$useContext.getPrefixCls,
      direction = _React$useContext.direction;

  var customizePrefixCls = props.prefixCls,
      type = props.type,
      disabled = props.disabled,
      onClick = props.onClick,
      htmlType = props.htmlType,
      children = props.children,
      className = props.className,
      overlay = props.overlay,
      trigger = props.trigger,
      align = props.align,
      visible = props.visible,
      onVisibleChange = props.onVisibleChange,
      placement = props.placement,
      getPopupContainer = props.getPopupContainer,
      href = props.href,
      _props$icon = props.icon,
      icon = _props$icon === void 0 ? /*#__PURE__*/react["createElement"](EllipsisOutlined_default.a, null) : _props$icon,
      title = props.title,
      buttonsRender = props.buttonsRender,
      restProps = __rest(props, ["prefixCls", "type", "disabled", "onClick", "htmlType", "children", "className", "overlay", "trigger", "align", "visible", "onVisibleChange", "placement", "getPopupContainer", "href", "icon", "title", "buttonsRender"]);

  var prefixCls = getPrefixCls('dropdown-button', customizePrefixCls);
  var dropdownProps = {
    align: align,
    overlay: overlay,
    disabled: disabled,
    trigger: disabled ? [] : trigger,
    onVisibleChange: onVisibleChange,
    getPopupContainer: getPopupContainer || getContextPopupContainer
  };

  if ('visible' in props) {
    dropdownProps.visible = visible;
  }

  if ('placement' in props) {
    dropdownProps.placement = placement;
  } else {
    dropdownProps.placement = direction === 'rtl' ? 'bottomLeft' : 'bottomRight';
  }

  var leftButton = /*#__PURE__*/react["createElement"](es_button["a" /* default */], {
    type: type,
    disabled: disabled,
    onClick: onClick,
    htmlType: htmlType,
    href: href,
    title: title
  }, children);
  var rightButton = /*#__PURE__*/react["createElement"](es_button["a" /* default */], {
    type: type,
    icon: icon
  });

  var _buttonsRender = buttonsRender([leftButton, rightButton]),
      _buttonsRender2 = _slicedToArray(_buttonsRender, 2),
      leftButtonToRender = _buttonsRender2[0],
      rightButtonToRender = _buttonsRender2[1];

  return /*#__PURE__*/react["createElement"](ButtonGroup, _extends({}, restProps, {
    className: classnames_default()(prefixCls, className)
  }), leftButtonToRender, /*#__PURE__*/react["createElement"](dropdown, dropdownProps, rightButtonToRender));
};

dropdown_button_DropdownButton.__ANT_BUTTON = true;
dropdown_button_DropdownButton.defaultProps = {
  type: 'default',
  buttonsRender: function buttonsRender(buttons) {
    return buttons;
  }
};
/* harmony default export */ var dropdown_button = (dropdown_button_DropdownButton);
// EXTERNAL MODULE: ../node_modules/antd/es/_util/devWarning.js
var devWarning = __webpack_require__("Hd5E");

// EXTERNAL MODULE: ../node_modules/antd/es/_util/type.js
var _util_type = __webpack_require__("UyNX");

// EXTERNAL MODULE: ../node_modules/antd/es/_util/reactNode.js
var reactNode = __webpack_require__("Bu1f");

// CONCATENATED MODULE: ../node_modules/antd/es/dropdown/dropdown.js




function dropdown_extends() {
  dropdown_extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return dropdown_extends.apply(this, arguments);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}










var Placements = Object(_util_type["a" /* tuple */])('topLeft', 'topCenter', 'topRight', 'bottomLeft', 'bottomCenter', 'bottomRight');

var dropdown_Dropdown = function Dropdown(props) {
  var _React$useContext = react["useContext"](config_provider_context["b" /* ConfigContext */]),
      getContextPopupContainer = _React$useContext.getPopupContainer,
      getPrefixCls = _React$useContext.getPrefixCls,
      direction = _React$useContext.direction;

  var getTransitionName = function getTransitionName() {
    var _props$placement = props.placement,
        placement = _props$placement === void 0 ? '' : _props$placement,
        transitionName = props.transitionName;

    if (transitionName !== undefined) {
      return transitionName;
    }

    if (placement.indexOf('top') >= 0) {
      return 'slide-down';
    }

    return 'slide-up';
  };

  var renderOverlay = function renderOverlay(prefixCls) {
    // rc-dropdown already can process the function of overlay, but we have check logic here.
    // So we need render the element to check and pass back to rc-dropdown.
    var overlay = props.overlay;
    var overlayNode;

    if (typeof overlay === 'function') {
      overlayNode = overlay();
    } else {
      overlayNode = overlay;
    }

    overlayNode = react["Children"].only(typeof overlayNode === 'string' ? /*#__PURE__*/react["createElement"]("span", null, "overlayNode") : overlayNode);
    var overlayProps = overlayNode.props; // Warning if use other mode

    Object(devWarning["a" /* default */])(!overlayProps.mode || overlayProps.mode === 'vertical', 'Dropdown', "mode=\"".concat(overlayProps.mode, "\" is not supported for Dropdown's Menu.")); // menu cannot be selectable in dropdown defaultly
    // menu should be focusable in dropdown defaultly

    var _overlayProps$selecta = overlayProps.selectable,
        selectable = _overlayProps$selecta === void 0 ? false : _overlayProps$selecta,
        _overlayProps$focusab = overlayProps.focusable,
        focusable = _overlayProps$focusab === void 0 ? true : _overlayProps$focusab;
    var expandIcon = /*#__PURE__*/react["createElement"]("span", {
      className: "".concat(prefixCls, "-menu-submenu-arrow")
    }, /*#__PURE__*/react["createElement"](RightOutlined_default.a, {
      className: "".concat(prefixCls, "-menu-submenu-arrow-icon")
    }));
    var fixedModeOverlay = typeof overlayNode.type === 'string' ? overlayNode : Object(reactNode["a" /* cloneElement */])(overlayNode, {
      mode: 'vertical',
      selectable: selectable,
      focusable: focusable,
      expandIcon: expandIcon
    });
    return fixedModeOverlay;
  };

  var getPlacement = function getPlacement() {
    var placement = props.placement;

    if (placement !== undefined) {
      return placement;
    }

    return direction === 'rtl' ? 'bottomRight' : 'bottomLeft';
  };

  var arrow = props.arrow,
      customizePrefixCls = props.prefixCls,
      children = props.children,
      trigger = props.trigger,
      disabled = props.disabled,
      getPopupContainer = props.getPopupContainer,
      overlayClassName = props.overlayClassName;
  var prefixCls = getPrefixCls('dropdown', customizePrefixCls);
  var child = react["Children"].only(children);
  var dropdownTrigger = Object(reactNode["a" /* cloneElement */])(child, {
    className: classnames_default()(child.props.className, "".concat(prefixCls, "-trigger"), _defineProperty({}, "".concat(prefixCls, "-rtl"), direction === 'rtl')),
    disabled: disabled
  });
  var overlayClassNameCustomized = classnames_default()(overlayClassName, _defineProperty({}, "".concat(prefixCls, "-rtl"), direction === 'rtl'));
  var triggerActions = disabled ? [] : trigger;
  var alignPoint;

  if (triggerActions && triggerActions.indexOf('contextMenu') !== -1) {
    alignPoint = true;
  }

  return /*#__PURE__*/react["createElement"](rc_dropdown_es, dropdown_extends({
    arrow: arrow,
    alignPoint: alignPoint
  }, props, {
    overlayClassName: overlayClassNameCustomized,
    prefixCls: prefixCls,
    getPopupContainer: getPopupContainer || getContextPopupContainer,
    transitionName: getTransitionName(),
    trigger: triggerActions,
    overlay: function overlay() {
      return renderOverlay(prefixCls);
    },
    placement: getPlacement()
  }), dropdownTrigger);
};

dropdown_Dropdown.Button = dropdown_button;
dropdown_Dropdown.defaultProps = {
  mouseEnterDelay: 0.15,
  mouseLeaveDelay: 0.1
};
/* harmony default export */ var dropdown = (dropdown_Dropdown);
// CONCATENATED MODULE: ../node_modules/antd/es/dropdown/index.js

/* harmony default export */ var es_dropdown = (dropdown);
// EXTERNAL MODULE: ../node_modules/antd/es/menu/style/index.js
var menu_style = __webpack_require__("XfXe");

// EXTERNAL MODULE: ../node_modules/antd/es/menu/index.js + 21 modules
var es_menu = __webpack_require__("v5c9");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.string.ends-with.js
var es6_string_ends_with = __webpack_require__("BDzi");

// EXTERNAL MODULE: ../node_modules/antd/es/popover/style/index.less
var popover_style = __webpack_require__("nNvC");

// CONCATENATED MODULE: ../node_modules/antd/es/popover/style/index.js

 // style dependencies
// deps-lint-skip: tooltip
// EXTERNAL MODULE: ../node_modules/antd/es/tooltip/index.js + 5 modules
var tooltip = __webpack_require__("DGR3");

// CONCATENATED MODULE: ../node_modules/antd/es/_util/getRenderPropValue.js
var getRenderPropValue = function getRenderPropValue(propValue) {
  if (!propValue) {
    return null;
  }

  var isRenderFunction = typeof propValue === 'function';

  if (isRenderFunction) {
    return propValue();
  }

  return propValue;
};
// CONCATENATED MODULE: ../node_modules/antd/es/popover/index.js




function popover_extends() {
  popover_extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return popover_extends.apply(this, arguments);
}

var popover_rest = undefined && undefined.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};





var Popover = /*#__PURE__*/react["forwardRef"](function (_a, ref) {
  var customizePrefixCls = _a.prefixCls,
      title = _a.title,
      content = _a.content,
      otherProps = popover_rest(_a, ["prefixCls", "title", "content"]);

  var _React$useContext = react["useContext"](config_provider_context["b" /* ConfigContext */]),
      getPrefixCls = _React$useContext.getPrefixCls;

  var getOverlay = function getOverlay(prefixCls) {
    return /*#__PURE__*/react["createElement"](react["Fragment"], null, title && /*#__PURE__*/react["createElement"]("div", {
      className: "".concat(prefixCls, "-title")
    }, getRenderPropValue(title)), /*#__PURE__*/react["createElement"]("div", {
      className: "".concat(prefixCls, "-inner-content")
    }, getRenderPropValue(content)));
  };

  var prefixCls = getPrefixCls('popover', customizePrefixCls);
  return /*#__PURE__*/react["createElement"](tooltip["a" /* default */], popover_extends({}, otherProps, {
    prefixCls: prefixCls,
    ref: ref,
    overlay: getOverlay(prefixCls)
  }));
});
Popover.displayName = 'Popover';
Popover.defaultProps = {
  placement: 'top',
  transitionName: 'zoom-big',
  trigger: 'hover',
  mouseEnterDelay: 0.1,
  mouseLeaveDelay: 0.1,
  overlayStyle: {}
};
/* harmony default export */ var popover = (Popover);
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.string.link.js
var es6_string_link = __webpack_require__("ScpY");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.string.starts-with.js
var es6_string_starts_with = __webpack_require__("FEHE");

// EXTERNAL MODULE: ../node_modules/antd/es/message/style/index.js
var message_style = __webpack_require__("ttYz");

// EXTERNAL MODULE: ../node_modules/antd/es/message/index.js
var message = __webpack_require__("g5Li");

// EXTERNAL MODULE: ../node_modules/antd/es/select/style/index.less
var select_style = __webpack_require__("ov/p");

// EXTERNAL MODULE: ../node_modules/antd/es/empty/style/index.less
var empty_style = __webpack_require__("GFpW");

// CONCATENATED MODULE: ../node_modules/antd/es/empty/style/index.js


// CONCATENATED MODULE: ../node_modules/antd/es/select/style/index.js

 // style dependencies


// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.reflect.construct.js
var es6_reflect_construct = __webpack_require__("LXYL");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.set-prototype-of.js
var es6_object_set_prototype_of = __webpack_require__("1qKx");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.create.js
var es6_object_create = __webpack_require__("PAbq");

// EXTERNAL MODULE: ../node_modules/omit.js/es/index.js
var omit_js_es = __webpack_require__("x9u5");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.find-index.js
var es6_array_find_index = __webpack_require__("2UZ+");

// EXTERNAL MODULE: ../node_modules/rc-util/es/KeyCode.js
var KeyCode = __webpack_require__("zAXs");

// CONCATENATED MODULE: ../node_modules/rc-util/es/pickAttrs.js









var attributes = "accept acceptCharset accessKey action allowFullScreen allowTransparency\n    alt async autoComplete autoFocus autoPlay capture cellPadding cellSpacing challenge\n    charSet checked classID className colSpan cols content contentEditable contextMenu\n    controls coords crossOrigin data dateTime default defer dir disabled download draggable\n    encType form formAction formEncType formMethod formNoValidate formTarget frameBorder\n    headers height hidden high href hrefLang htmlFor httpEquiv icon id inputMode integrity\n    is keyParams keyType kind label lang list loop low manifest marginHeight marginWidth max maxLength media\n    mediaGroup method min minLength multiple muted name noValidate nonce open\n    optimum pattern placeholder poster preload radioGroup readOnly rel required\n    reversed role rowSpan rows sandbox scope scoped scrolling seamless selected\n    shape size sizes span spellCheck src srcDoc srcLang srcSet start step style\n    summary tabIndex target title type useMap value width wmode wrap";
var eventsName = "onCopy onCut onPaste onCompositionEnd onCompositionStart onCompositionUpdate onKeyDown\n    onKeyPress onKeyUp onFocus onBlur onChange onInput onSubmit onClick onContextMenu onDoubleClick\n    onDrag onDragEnd onDragEnter onDragExit onDragLeave onDragOver onDragStart onDrop onMouseDown\n    onMouseEnter onMouseLeave onMouseMove onMouseOut onMouseOver onMouseUp onSelect onTouchCancel\n    onTouchEnd onTouchMove onTouchStart onScroll onWheel onAbort onCanPlay onCanPlayThrough\n    onDurationChange onEmptied onEncrypted onEnded onError onLoadedData onLoadedMetadata\n    onLoadStart onPause onPlay onPlaying onProgress onRateChange onSeeked onSeeking onStalled onSuspend onTimeUpdate onVolumeChange onWaiting onLoad onError";
var propList = "".concat(attributes, " ").concat(eventsName).split(/[\s\n]+/);
/* eslint-enable max-len */

var ariaPrefix = 'aria-';
var dataPrefix = 'data-';

function pickAttrs_match(key, prefix) {
  return key.indexOf(prefix) === 0;
}

function pickAttrs(props) {
  var ariaOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var attrs = {};
  Object.keys(props).forEach(function (key) {
    if (pickAttrs_match(key, ariaPrefix)) {
      attrs[key] = props[key];
    } else if (!ariaOnly && (propList.includes(key) || pickAttrs_match(key, dataPrefix))) {
      attrs[key] = props[key];
    }
  });
  return attrs;
}
// CONCATENATED MODULE: ../node_modules/rc-util/es/hooks/useMemo.js

function useMemo(getValue, condition, shouldUpdate) {
  var cacheRef = react["useRef"]({});

  if (!('value' in cacheRef.current) || shouldUpdate(cacheRef.current.condition, condition)) {
    cacheRef.current.value = getValue();
    cacheRef.current.condition = condition;
  }

  return cacheRef.current.value;
}
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.define-properties.js
var es6_object_define_properties = __webpack_require__("6/FK");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es7.object.get-own-property-descriptors.js
var es7_object_get_own_property_descriptors = __webpack_require__("2Tod");

// EXTERNAL MODULE: ../node_modules/raf/index.js
var raf = __webpack_require__("rQBY");
var raf_default = /*#__PURE__*/__webpack_require__.n(raf);

// CONCATENATED MODULE: ../node_modules/rc-virtual-list/es/Filler.js











function Filler_ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function Filler_objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      Filler_ownKeys(Object(source), true).forEach(function (key) {
        Filler_defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      Filler_ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function Filler_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}



/**
 * Fill component to provided the scroll content real height.
 */

var Filler_Filler = function Filler(_ref) {
  var height = _ref.height,
      offset = _ref.offset,
      children = _ref.children,
      prefixCls = _ref.prefixCls;
  var outerStyle = {};
  var innerStyle = {
    display: 'flex',
    flexDirection: 'column'
  };

  if (offset !== undefined) {
    outerStyle = {
      height: height,
      position: 'relative',
      overflow: 'hidden'
    };
    innerStyle = Filler_objectSpread(Filler_objectSpread({}, innerStyle), {}, {
      transform: "translateY(".concat(offset, "px)"),
      position: 'absolute',
      left: 0,
      right: 0,
      top: 0
    });
  }

  return react["createElement"]("div", {
    style: outerStyle
  }, react["createElement"]("div", {
    style: innerStyle,
    className: classnames_default()(Filler_defineProperty({}, "".concat(prefixCls, "-holder-inner"), prefixCls))
  }, children));
};

/* harmony default export */ var es_Filler = (Filler_Filler);
// EXTERNAL MODULE: ../node_modules/rc-util/es/Dom/findDOMNode.js
var findDOMNode = __webpack_require__("vXvS");

// CONCATENATED MODULE: ../node_modules/rc-virtual-list/es/utils/itemUtil.js







function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}


/**
 * Our algorithm have additional one ghost item
 * whose index as `data.length` to simplify the calculation
 */

var GHOST_ITEM_KEY = '__rc_ghost_item__';
/**
 * Get location item and its align percentage with the scroll percentage.
 * We should measure current scroll position to decide which item is the location item.
 * And then fill the top count and bottom count with the base of location item.
 *
 * `total` should be the real count instead of `total - 1` in calculation.
 */

function getLocationItem(scrollPtg, total) {
  var itemIndex = Math.floor(scrollPtg * total);
  var itemTopPtg = itemIndex / total;
  var itemBottomPtg = (itemIndex + 1) / total;
  var itemOffsetPtg = (scrollPtg - itemTopPtg) / (itemBottomPtg - itemTopPtg);
  return {
    index: itemIndex,
    offsetPtg: itemOffsetPtg
  };
}
/**
 * Safari has the elasticity effect which provides negative `scrollTop` value.
 * We should ignore it since will make scroll animation shake.
 */


function alignScrollTop(scrollTop, scrollRange) {
  if (scrollTop < 0) {
    return 0;
  }

  if (scrollTop >= scrollRange) {
    return scrollRange;
  }

  return scrollTop;
}
function getScrollPercentage(_ref) {
  var scrollTop = _ref.scrollTop,
      scrollHeight = _ref.scrollHeight,
      clientHeight = _ref.clientHeight;

  if (scrollHeight <= clientHeight) {
    return 0;
  }

  var scrollRange = scrollHeight - clientHeight;
  var alignedScrollTop = alignScrollTop(scrollTop, scrollRange);
  var scrollTopPtg = alignedScrollTop / scrollRange;
  return scrollTopPtg;
}
function getElementScrollPercentage(element) {
  if (!element) {
    return 0;
  }

  return getScrollPercentage(element);
}
/**
 * Get node `offsetHeight`. We prefer node is a dom element directly.
 * But if not provided, downgrade to `findDOMNode` to get the real dom element.
 */

function getNodeHeight(node) {
  var element = Object(findDOMNode["a" /* default */])(node);
  return element ? element.offsetHeight : 0;
}
/**
 * Get display items start, end, located item index. This is pure math calculation
 */

function getRangeIndex(scrollPtg, itemCount, visibleCount) {
  var _getLocationItem = getLocationItem(scrollPtg, itemCount),
      index = _getLocationItem.index,
      offsetPtg = _getLocationItem.offsetPtg;

  var beforeCount = Math.ceil(scrollPtg * visibleCount);
  var afterCount = Math.ceil((1 - scrollPtg) * visibleCount);
  return {
    itemIndex: index,
    itemOffsetPtg: offsetPtg,
    startIndex: Math.max(0, index - beforeCount),
    endIndex: Math.min(itemCount - 1, index + afterCount)
  };
}
/**
 * Calculate the located item related top with current window height
 */

function getItemRelativeTop(_ref2) {
  var itemIndex = _ref2.itemIndex,
      itemOffsetPtg = _ref2.itemOffsetPtg,
      itemElementHeights = _ref2.itemElementHeights,
      scrollPtg = _ref2.scrollPtg,
      clientHeight = _ref2.clientHeight,
      getItemKey = _ref2.getItemKey;
  var locatedItemHeight = itemElementHeights[getItemKey(itemIndex)] || 0;
  var locatedItemTop = scrollPtg * clientHeight;
  var locatedItemOffset = itemOffsetPtg * locatedItemHeight;
  return Math.floor(locatedItemTop - locatedItemOffset);
}
/**
 * Calculate the located item absolute top with whole scroll height
 */

function getItemAbsoluteTop(_ref3) {
  var scrollTop = _ref3.scrollTop,
      rest = _objectWithoutProperties(_ref3, ["scrollTop"]);

  return scrollTop + getItemRelativeTop(rest);
}
function getCompareItemRelativeTop(_ref4) {
  var locatedItemRelativeTop = _ref4.locatedItemRelativeTop,
      locatedItemIndex = _ref4.locatedItemIndex,
      compareItemIndex = _ref4.compareItemIndex,
      startIndex = _ref4.startIndex,
      endIndex = _ref4.endIndex,
      getItemKey = _ref4.getItemKey,
      itemElementHeights = _ref4.itemElementHeights;
  var originCompareItemTop = locatedItemRelativeTop;
  var compareItemKey = getItemKey(compareItemIndex);

  if (compareItemIndex <= locatedItemIndex) {
    for (var index = locatedItemIndex; index >= startIndex; index -= 1) {
      var key = getItemKey(index);

      if (key === compareItemKey) {
        break;
      }

      var prevItemKey = getItemKey(index - 1);
      originCompareItemTop -= itemElementHeights[prevItemKey] || 0;
    }
  } else {
    for (var _index = locatedItemIndex; _index <= endIndex; _index += 1) {
      var _key = getItemKey(_index);

      if (_key === compareItemKey) {
        break;
      }

      originCompareItemTop += itemElementHeights[_key] || 0;
    }
  }

  return originCompareItemTop;
}
function requireVirtual(height, itemHeight, count, virtual) {
  return virtual !== false && typeof height === 'number' && count * itemHeight > height;
}
// CONCATENATED MODULE: ../node_modules/rc-virtual-list/es/utils/algorithmUtil.js
/**
 * Get index with specific start index one by one. e.g.
 * min: 3, max: 9, start: 6
 *
 * Return index is:
 * [0]: 6
 * [1]: 7
 * [2]: 5
 * [3]: 8
 * [4]: 4
 * [5]: 9
 * [6]: 3
 */
function getIndexByStartLoc(min, max, start, index) {
  var beforeCount = start - min;
  var afterCount = max - start;
  var balanceCount = Math.min(beforeCount, afterCount) * 2; // Balance

  if (index <= balanceCount) {
    var stepIndex = Math.floor(index / 2);

    if (index % 2) {
      return start + stepIndex + 1;
    }

    return start - stepIndex;
  } // One is out of range


  if (beforeCount > afterCount) {
    return start - (index - afterCount);
  }

  return start + (index - beforeCount);
}
/**
 * We assume that 2 list has only 1 item diff and others keeping the order.
 * So we can use dichotomy algorithm to find changed one.
 */

function findListDiffIndex(originList, targetList, getKey) {
  var originLen = originList.length;
  var targetLen = targetList.length;
  var shortList;
  var longList;

  if (originLen === 0 && targetLen === 0) {
    return null;
  }

  if (originLen < targetLen) {
    shortList = originList;
    longList = targetList;
  } else {
    shortList = targetList;
    longList = originList;
  }

  var notExistKey = {
    __EMPTY_ITEM__: true
  };

  function getItemKey(item) {
    if (item !== undefined) {
      return getKey(item);
    }

    return notExistKey;
  } // Loop to find diff one


  var diffIndex = null;
  var multiple = Math.abs(originLen - targetLen) !== 1;

  for (var i = 0; i < longList.length; i += 1) {
    var shortKey = getItemKey(shortList[i]);
    var longKey = getItemKey(longList[i]);

    if (shortKey !== longKey) {
      diffIndex = i;
      multiple = multiple || shortKey !== getItemKey(longList[i + 1]);
      break;
    }
  }

  return diffIndex === null ? null : {
    index: diffIndex,
    multiple: multiple
  };
}
// CONCATENATED MODULE: ../node_modules/rc-virtual-list/es/List.js






















function List_ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function List_objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      List_ownKeys(Object(source), true).forEach(function (key) {
        List_defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      List_ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function List_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function List_objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = List_objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function List_objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return _possibleConstructorReturn(this, result);
  };
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}







var ScrollStyle = {
  overflowY: 'auto',
  overflowAnchor: 'none'
};
var ITEM_SCALE_RATE = 1;
/**
 * We use class component here since typescript can not support generic in function component
 *
 * Virtual list display logic:
 * 1. scroll / initialize trigger measure
 * 2. Get location item of current `scrollTop`
 * 3. [Render] Render visible items
 * 4. Get all the visible items height
 * 5. [Render] Update top item `margin-top` to fit the position
 *
 * Algorithm:
 * We split scroll bar into equal slice. An item with whatever height occupy the same range slice.
 * When `scrollTop` change,
 * it will calculate the item percentage position and move item to the position.
 * Then calculate other item position base on the located item.
 *
 * Concept:
 *
 * # located item
 * The base position item which other items position calculate base on.
 */

var List_List =
/** @class */
function () {
  var List = /*#__PURE__*/function (_React$Component) {
    _inherits(List, _React$Component);

    var _super = _createSuper(List);

    function List(props) {
      var _this;

      _classCallCheck(this, List);

      _this = _super.call(this, props);
      _this.listRef = react["createRef"]();
      _this.itemElements = {};
      _this.itemElementHeights = {};
      /**
       * Lock scroll process with `onScroll` event.
       * This is used for `data` length change and `scrollTop` restore
       */

      _this.lockScroll = false;
      /**
       * Phase 2: Trigger render since we should re-calculate current position.
       */

      _this.onScroll = function (event) {
        var _this$props = _this.props,
            data = _this$props.data,
            height = _this$props.height,
            itemHeight = _this$props.itemHeight,
            disabled = _this$props.disabled;
        var _this$listRef$current = _this.listRef.current,
            originScrollTop = _this$listRef$current.scrollTop,
            clientHeight = _this$listRef$current.clientHeight,
            scrollHeight = _this$listRef$current.scrollHeight;
        var scrollTop = alignScrollTop(originScrollTop, scrollHeight - clientHeight); // Skip if `scrollTop` not change to avoid shake

        if (scrollTop === _this.state.scrollTop || _this.lockScroll || disabled) {
          return;
        }

        var scrollPtg = getElementScrollPercentage(_this.listRef.current);
        var visibleCount = Math.ceil(height / itemHeight);

        var _getRangeIndex = getRangeIndex(scrollPtg, data.length, visibleCount),
            itemIndex = _getRangeIndex.itemIndex,
            itemOffsetPtg = _getRangeIndex.itemOffsetPtg,
            startIndex = _getRangeIndex.startIndex,
            endIndex = _getRangeIndex.endIndex;

        _this.setState({
          status: 'MEASURE_START',
          scrollTop: scrollTop,
          itemIndex: itemIndex,
          itemOffsetPtg: itemOffsetPtg,
          startIndex: startIndex,
          endIndex: endIndex
        });

        _this.triggerOnScroll(event);
      };

      _this.onRawScroll = function (event) {
        var scrollTop = _this.listRef.current.scrollTop;

        _this.setState({
          scrollTop: scrollTop
        });

        _this.triggerOnScroll(event);
      };

      _this.triggerOnScroll = function (event) {
        var onScroll = _this.props.onScroll;

        if (onScroll && event) {
          onScroll(event);
        }
      };

      _this.getIndexKey = function (index, props) {
        var mergedProps = props || _this.props;
        var _mergedProps$data = mergedProps.data,
            data = _mergedProps$data === void 0 ? [] : _mergedProps$data; // Return ghost key as latest index item

        if (index === data.length) {
          return GHOST_ITEM_KEY;
        }

        var item = data[index];
        /* istanbul ignore next */

        if (item === undefined) {
          console.error('Not find index item. Please report this since it is a bug.');
          return null;
        }

        return _this.getItemKey(item, mergedProps);
      };

      _this.getItemKey = function (item, props) {
        var _ref = props || _this.props,
            itemKey = _ref.itemKey;

        return typeof itemKey === 'function' ? itemKey(item) : item[itemKey];
      };
      /**
       * Collect current rendered dom element item heights
       */


      _this.collectItemHeights = function (range) {
        var _ref2 = range || _this.state,
            startIndex = _ref2.startIndex,
            endIndex = _ref2.endIndex;

        var data = _this.props.data; // Record here since measure item height will get warning in `render`

        for (var index = startIndex; index <= endIndex; index += 1) {
          var item = data[index]; // Only collect exist item height

          if (item) {
            var eleKey = _this.getItemKey(item);

            _this.itemElementHeights[eleKey] = getNodeHeight(_this.itemElements[eleKey]);
          }
        }
      };

      _this.scrollTo = function (arg0) {
        raf_default.a.cancel(_this.rafId);
        _this.rafId = raf_default()(function () {
          // Number top
          if (_typeof(arg0) === 'object') {
            var isVirtual = _this.state.isVirtual;
            var _this$props2 = _this.props,
                height = _this$props2.height,
                itemHeight = _this$props2.itemHeight,
                data = _this$props2.data;
            var _arg0$align = arg0.align,
                align = _arg0$align === void 0 ? 'auto' : _arg0$align;
            var index = 0;

            if ('index' in arg0) {
              index = arg0.index;
            } else if ('key' in arg0) {
              var key = arg0.key;
              index = data.findIndex(function (item) {
                return _this.getItemKey(item) === key;
              });
            }

            var visibleCount = Math.ceil(height / itemHeight);
            var item = data[index];

            if (item) {
              var clientHeight = _this.listRef.current.clientHeight;

              if (isVirtual) {
                // Calculate related data
                var _this$state = _this.state,
                    itemIndex = _this$state.itemIndex,
                    itemOffsetPtg = _this$state.itemOffsetPtg;
                var scrollTop = _this.listRef.current.scrollTop;
                var scrollPtg = getElementScrollPercentage(_this.listRef.current);
                var relativeLocatedItemTop = getItemRelativeTop({
                  itemIndex: itemIndex,
                  itemOffsetPtg: itemOffsetPtg,
                  itemElementHeights: _this.itemElementHeights,
                  scrollPtg: scrollPtg,
                  clientHeight: clientHeight,
                  getItemKey: _this.getIndexKey
                }); // We will force render related items to collect height for re-location

                _this.setState({
                  startIndex: Math.max(0, index - visibleCount),
                  endIndex: Math.min(data.length - 1, index + visibleCount)
                }, function () {
                  _this.collectItemHeights(); // Calculate related top


                  var relativeTop;
                  var mergedAlgin = align;

                  if (align === 'auto') {
                    var shouldChange = true; // Check if exist in the visible range

                    if (Math.abs(itemIndex - index) < visibleCount) {
                      var itemTop = relativeLocatedItemTop;

                      if (index < itemIndex) {
                        for (var i = index; i < itemIndex; i += 1) {
                          var eleKey = _this.getIndexKey(i);

                          itemTop -= _this.itemElementHeights[eleKey] || 0;
                        }
                      } else {
                        for (var _i = itemIndex; _i <= index; _i += 1) {
                          var _eleKey = _this.getIndexKey(_i);

                          itemTop += _this.itemElementHeights[_eleKey] || 0;
                        }
                      }

                      shouldChange = itemTop <= 0 || itemTop >= clientHeight;
                    }

                    if (shouldChange) {
                      // Out of range will fall back to position align
                      mergedAlgin = index < itemIndex ? 'top' : 'bottom';
                    } else {
                      var _getRangeIndex2 = getRangeIndex(scrollPtg, data.length, visibleCount),
                          nextIndex = _getRangeIndex2.itemIndex,
                          newOffsetPtg = _getRangeIndex2.itemOffsetPtg,
                          startIndex = _getRangeIndex2.startIndex,
                          endIndex = _getRangeIndex2.endIndex;

                      _this.setState({
                        scrollTop: scrollTop,
                        itemIndex: nextIndex,
                        itemOffsetPtg: newOffsetPtg,
                        startIndex: startIndex,
                        endIndex: endIndex
                      });

                      return;
                    }
                  } // Align with position should make scroll happen


                  if (mergedAlgin === 'top') {
                    relativeTop = 0;
                  } else if (mergedAlgin === 'bottom') {
                    var _eleKey2 = _this.getItemKey(item);

                    relativeTop = clientHeight - _this.itemElementHeights[_eleKey2] || 0;
                  }

                  _this.internalScrollTo({
                    itemIndex: index,
                    relativeTop: relativeTop
                  });
                });
              } else {
                // Raw list without virtual scroll set position directly
                _this.collectItemHeights({
                  startIndex: 0,
                  endIndex: data.length - 1
                });

                var mergedAlgin = align; // Collection index item position

                var indexItemHeight = _this.itemElementHeights[_this.getIndexKey(index)];

                var itemTop = 0;

                for (var i = 0; i < index; i += 1) {
                  var eleKey = _this.getIndexKey(i);

                  itemTop += _this.itemElementHeights[eleKey] || 0;
                }

                var itemBottom = itemTop + indexItemHeight;

                if (mergedAlgin === 'auto') {
                  if (itemTop < _this.listRef.current.scrollTop) {
                    mergedAlgin = 'top';
                  } else if (itemBottom > _this.listRef.current.scrollTop + clientHeight) {
                    mergedAlgin = 'bottom';
                  }
                }

                if (mergedAlgin === 'top') {
                  _this.listRef.current.scrollTop = itemTop;
                } else if (mergedAlgin === 'bottom') {
                  _this.listRef.current.scrollTop = itemTop - (clientHeight - indexItemHeight);
                }
              }
            }
          } else {
            _this.listRef.current.scrollTop = arg0;
          }
        });
      };
      /**
       * Phase 4: Render item and get all the visible items height
       */


      _this.renderChildren = function (list, startIndex, renderFunc) {
        var status = _this.state.status; // We should measure rendered item height

        return list.map(function (item, index) {
          var eleIndex = startIndex + index;
          var node = renderFunc(item, eleIndex, {
            style: status === 'MEASURE_START' ? {
              visibility: 'hidden'
            } : {}
          });

          var eleKey = _this.getIndexKey(eleIndex); // Pass `key` and `ref` for internal measure


          return react["cloneElement"](node, {
            key: eleKey,
            ref: function ref(ele) {
              _this.itemElements[eleKey] = ele;
            }
          });
        });
      };

      _this.cachedProps = props;
      _this.state = {
        status: 'NONE',
        scrollTop: null,
        itemIndex: 0,
        itemOffsetPtg: 0,
        startIndex: 0,
        endIndex: 0,
        startItemTop: 0,
        isVirtual: requireVirtual(props.height, props.itemHeight, props.data.length, props.virtual),
        itemCount: props.data.length
      };
      return _this;
    }

    _createClass(List, [{
      key: "componentDidMount",

      /**
       * Phase 1: Initial should sync with default scroll top
       */
      value: function componentDidMount() {
        if (this.listRef.current) {
          this.listRef.current.scrollTop = 0;
          this.onScroll(null);
        }
      }
      /**
       * Phase 4: Record used item height
       * Phase 5: Trigger re-render to use correct position
       */

    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate() {
        var _this2 = this;

        var status = this.state.status;
        var _this$props3 = this.props,
            data = _this$props3.data,
            height = _this$props3.height,
            itemHeight = _this$props3.itemHeight,
            disabled = _this$props3.disabled,
            onSkipRender = _this$props3.onSkipRender,
            virtual = _this$props3.virtual;
        var prevData = this.cachedProps.data || [];
        var changedItemIndex = null;

        if (prevData.length !== data.length) {
          var diff = findListDiffIndex(prevData, data, this.getItemKey);
          changedItemIndex = diff ? diff.index : null;
        }

        if (disabled) {
          // Should trigger `onSkipRender` to tell that diff component is not render in the list
          if (data.length > prevData.length) {
            var _this$state2 = this.state,
                startIndex = _this$state2.startIndex,
                endIndex = _this$state2.endIndex;

            if (onSkipRender && (changedItemIndex === null || changedItemIndex < startIndex || endIndex < changedItemIndex)) {
              onSkipRender();
            }
          }

          return;
        }

        var isVirtual = requireVirtual(height, itemHeight, data.length, virtual);
        var nextStatus = status;

        if (this.state.isVirtual !== isVirtual) {
          nextStatus = isVirtual ? 'SWITCH_TO_VIRTUAL' : 'SWITCH_TO_RAW';
          this.setState({
            isVirtual: isVirtual,
            status: nextStatus
          });
          /**
           * We will wait a tick to let list turn to virtual list.
           * And then use virtual list sync logic to adjust the scroll.
           */

          if (nextStatus === 'SWITCH_TO_VIRTUAL') {
            return;
          }
        }

        if (status === 'MEASURE_START') {
          var _this$state3 = this.state,
              _startIndex = _this$state3.startIndex,
              itemIndex = _this$state3.itemIndex,
              itemOffsetPtg = _this$state3.itemOffsetPtg;
          var scrollTop = this.listRef.current.scrollTop; // Record here since measure item height will get warning in `render`

          this.collectItemHeights(); // Calculate top visible item top offset

          var locatedItemTop = getItemAbsoluteTop({
            itemIndex: itemIndex,
            itemOffsetPtg: itemOffsetPtg,
            itemElementHeights: this.itemElementHeights,
            scrollTop: scrollTop,
            scrollPtg: getElementScrollPercentage(this.listRef.current),
            clientHeight: this.listRef.current.clientHeight,
            getItemKey: this.getIndexKey
          });
          var startItemTop = locatedItemTop;

          for (var index = itemIndex - 1; index >= _startIndex; index -= 1) {
            startItemTop -= this.itemElementHeights[this.getIndexKey(index)] || 0;
          }

          this.setState({
            status: 'MEASURE_DONE',
            startItemTop: startItemTop
          });
        }

        if (status === 'SWITCH_TO_RAW') {
          /**
           * After virtual list back to raw list,
           * we update the `scrollTop` to real top instead of percentage top.
           */
          var _this$state$cacheScro = this.state.cacheScroll,
              _itemIndex = _this$state$cacheScro.itemIndex,
              relativeTop = _this$state$cacheScro.relativeTop;
          var rawTop = relativeTop;

          for (var _index = 0; _index < _itemIndex; _index += 1) {
            rawTop -= this.itemElementHeights[this.getIndexKey(_index)] || 0;
          }

          this.lockScroll = true;
          this.listRef.current.scrollTop = -rawTop;
          this.setState({
            status: 'MEASURE_DONE',
            itemIndex: 0
          });
          requestAnimationFrame(function () {
            requestAnimationFrame(function () {
              _this2.lockScroll = false;
            });
          });
        } else if (prevData.length !== data.length && changedItemIndex !== null && height) {
          /**
           * Re-calculate the item position since `data` length changed.
           * [IMPORTANT] We use relative position calculate here.
           */
          var originItemIndex = this.state.itemIndex;
          var _this$state4 = this.state,
              originItemOffsetPtg = _this$state4.itemOffsetPtg,
              originStartIndex = _this$state4.startIndex,
              originEndIndex = _this$state4.endIndex,
              originScrollTop = _this$state4.scrollTop; // 1. Refresh item heights

          this.collectItemHeights(); // 1. Get origin located item top

          var originLocatedItemRelativeTop;

          if (this.state.status === 'SWITCH_TO_VIRTUAL') {
            originItemIndex = 0;
            originLocatedItemRelativeTop = -this.state.scrollTop;
          } else {
            originLocatedItemRelativeTop = getItemRelativeTop({
              itemIndex: originItemIndex,
              itemOffsetPtg: originItemOffsetPtg,
              itemElementHeights: this.itemElementHeights,
              scrollPtg: getScrollPercentage({
                scrollTop: originScrollTop,
                scrollHeight: prevData.length * itemHeight,
                clientHeight: this.listRef.current.clientHeight
              }),
              clientHeight: this.listRef.current.clientHeight,
              getItemKey: function getItemKey(index) {
                return _this2.getIndexKey(index, _this2.cachedProps);
              }
            });
          } // 2. Find the compare item


          var originCompareItemIndex = changedItemIndex - 1; // Use next one since there are not more item before removed

          if (originCompareItemIndex < 0) {
            originCompareItemIndex = 0;
          } // 3. Find the compare item top


          var originCompareItemTop = getCompareItemRelativeTop({
            locatedItemRelativeTop: originLocatedItemRelativeTop,
            locatedItemIndex: originItemIndex,
            compareItemIndex: originCompareItemIndex,
            startIndex: originStartIndex,
            endIndex: originEndIndex,
            getItemKey: function getItemKey(index) {
              return _this2.getIndexKey(index, _this2.cachedProps);
            },
            itemElementHeights: this.itemElementHeights
          });

          if (nextStatus === 'SWITCH_TO_RAW') {
            /**
             * We will record current measure relative item top and apply in raw list after list turned
             */
            this.setState({
              cacheScroll: {
                itemIndex: originCompareItemIndex,
                relativeTop: originCompareItemTop
              }
            });
          } else {
            this.internalScrollTo({
              itemIndex: originCompareItemIndex,
              relativeTop: originCompareItemTop
            });
          }
        } else if (nextStatus === 'SWITCH_TO_RAW') {
          // This is only trigger when height changes that all items can show in raw
          // Let's reset back to top
          this.setState({
            cacheScroll: {
              itemIndex: 0,
              relativeTop: 0
            }
          });
        }

        this.cachedProps = this.props;
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        raf_default.a.cancel(this.rafId);
      }
    }, {
      key: "internalScrollTo",
      value: function internalScrollTo(relativeScroll) {
        var _this3 = this;

        var compareItemIndex = relativeScroll.itemIndex,
            compareItemRelativeTop = relativeScroll.relativeTop;
        var originScrollTop = this.state.scrollTop;
        var _this$props4 = this.props,
            data = _this$props4.data,
            itemHeight = _this$props4.itemHeight,
            height = _this$props4.height; // 1. Find the best match compare item top

        var bestSimilarity = Number.MAX_VALUE;
        var bestScrollTop = null;
        var bestItemIndex = null;
        var bestItemOffsetPtg = null;
        var bestStartIndex = null;
        var bestEndIndex = null;
        var missSimilarity = 0;
        var scrollHeight = data.length * itemHeight;
        var clientHeight = this.listRef.current.clientHeight;
        var maxScrollTop = scrollHeight - clientHeight;

        for (var i = 0; i < maxScrollTop; i += 1) {
          var scrollTop = getIndexByStartLoc(0, maxScrollTop, originScrollTop, i);
          var scrollPtg = getScrollPercentage({
            scrollTop: scrollTop,
            scrollHeight: scrollHeight,
            clientHeight: clientHeight
          });
          var visibleCount = Math.ceil(height / itemHeight);

          var _getRangeIndex3 = getRangeIndex(scrollPtg, data.length, visibleCount),
              itemIndex = _getRangeIndex3.itemIndex,
              itemOffsetPtg = _getRangeIndex3.itemOffsetPtg,
              startIndex = _getRangeIndex3.startIndex,
              endIndex = _getRangeIndex3.endIndex; // No need to check if compare item out of the index to save performance


          if (startIndex <= compareItemIndex && compareItemIndex <= endIndex) {
            // 1.1 Get measure located item relative top
            var locatedItemRelativeTop = getItemRelativeTop({
              itemIndex: itemIndex,
              itemOffsetPtg: itemOffsetPtg,
              itemElementHeights: this.itemElementHeights,
              scrollPtg: scrollPtg,
              clientHeight: clientHeight,
              getItemKey: this.getIndexKey
            });
            var compareItemTop = getCompareItemRelativeTop({
              locatedItemRelativeTop: locatedItemRelativeTop,
              locatedItemIndex: itemIndex,
              compareItemIndex: compareItemIndex,
              startIndex: startIndex,
              endIndex: endIndex,
              getItemKey: this.getIndexKey,
              itemElementHeights: this.itemElementHeights
            }); // 1.2 Find best match compare item top

            var similarity = Math.abs(compareItemTop - compareItemRelativeTop);

            if (similarity < bestSimilarity) {
              bestSimilarity = similarity;
              bestScrollTop = scrollTop;
              bestItemIndex = itemIndex;
              bestItemOffsetPtg = itemOffsetPtg;
              bestStartIndex = startIndex;
              bestEndIndex = endIndex;
              missSimilarity = 0;
            } else {
              missSimilarity += 1;
            }
          } // If keeping 10 times not match similarity,
          // check more scrollTop is meaningless.
          // Here boundary is set to 10.


          if (missSimilarity > 10) {
            break;
          }
        } // 2. Re-scroll if has best scroll match


        if (bestScrollTop !== null) {
          this.lockScroll = true;
          this.listRef.current.scrollTop = bestScrollTop;
          this.setState({
            status: 'MEASURE_START',
            scrollTop: bestScrollTop,
            itemIndex: bestItemIndex,
            itemOffsetPtg: bestItemOffsetPtg,
            startIndex: bestStartIndex,
            endIndex: bestEndIndex
          });
          requestAnimationFrame(function () {
            requestAnimationFrame(function () {
              _this3.lockScroll = false;
            });
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this$state5 = this.state,
            isVirtual = _this$state5.isVirtual,
            itemCount = _this$state5.itemCount;

        var _this$props5 = this.props,
            prefixCls = _this$props5.prefixCls,
            style = _this$props5.style,
            className = _this$props5.className,
            _this$props5$componen = _this$props5.component,
            Component = _this$props5$componen === void 0 ? 'div' : _this$props5$componen,
            height = _this$props5.height,
            itemHeight = _this$props5.itemHeight,
            _this$props5$fullHeig = _this$props5.fullHeight,
            fullHeight = _this$props5$fullHeig === void 0 ? true : _this$props5$fullHeig,
            data = _this$props5.data,
            children = _this$props5.children,
            itemKey = _this$props5.itemKey,
            onSkipRender = _this$props5.onSkipRender,
            disabled = _this$props5.disabled,
            virtual = _this$props5.virtual,
            restProps = List_objectWithoutProperties(_this$props5, ["prefixCls", "style", "className", "component", "height", "itemHeight", "fullHeight", "data", "children", "itemKey", "onSkipRender", "disabled", "virtual"]);

        var mergedClassName = classnames_default()(prefixCls, className); // Render pure list if not set height or height is enough for all items

        if (!isVirtual) {
          /**
           * Virtual list switch is works on component updated.
           * We should double check here if need cut the content.
           */
          var shouldVirtual = requireVirtual(height, itemHeight, data.length, virtual);
          return react["createElement"](Component, Object.assign({
            style: height ? List_objectSpread(List_objectSpread({}, style), {}, List_defineProperty({}, fullHeight ? 'height' : 'maxHeight', height), ScrollStyle) : style,
            className: mergedClassName
          }, restProps, {
            onScroll: this.onRawScroll,
            ref: this.listRef
          }), react["createElement"](es_Filler, {
            prefixCls: prefixCls,
            height: height
          }, this.renderChildren(shouldVirtual ? data.slice(0, Math.ceil(height / itemHeight)) : data, 0, children)));
        } // Use virtual list


        var mergedStyle = List_objectSpread(List_objectSpread({}, style), {}, {
          height: height
        }, ScrollStyle);

        var _this$state6 = this.state,
            status = _this$state6.status,
            startIndex = _this$state6.startIndex,
            endIndex = _this$state6.endIndex,
            startItemTop = _this$state6.startItemTop;
        var contentHeight = itemCount * itemHeight * ITEM_SCALE_RATE;
        return react["createElement"](Component, Object.assign({
          style: mergedStyle,
          className: mergedClassName
        }, restProps, {
          onScroll: this.onScroll,
          ref: this.listRef
        }), react["createElement"](es_Filler, {
          prefixCls: prefixCls,
          height: contentHeight,
          offset: status === 'MEASURE_DONE' ? startItemTop : 0
        }, this.renderChildren(data.slice(startIndex, endIndex + 1), startIndex, children)));
      }
    }], [{
      key: "getDerivedStateFromProps",
      value: function getDerivedStateFromProps(nextProps) {
        if (!nextProps.disabled) {
          return {
            itemCount: nextProps.data.length
          };
        }

        return null;
      }
    }]);

    return List;
  }(react["Component"]);

  List.defaultProps = {
    itemHeight: 15,
    data: []
  };
  return List;
}();

/* harmony default export */ var es_List = (List_List);
// CONCATENATED MODULE: ../node_modules/rc-virtual-list/es/index.js

/* harmony default export */ var rc_virtual_list_es = (es_List);
// CONCATENATED MODULE: ../node_modules/rc-select/es/TransBtn.js





var TransBtn_TransBtn = function TransBtn(_ref) {
  var className = _ref.className,
      customizeIcon = _ref.customizeIcon,
      customizeIconProps = _ref.customizeIconProps,
      _onMouseDown = _ref.onMouseDown,
      onClick = _ref.onClick,
      children = _ref.children;
  var icon;

  if (typeof customizeIcon === 'function') {
    icon = customizeIcon(customizeIconProps);
  } else {
    icon = customizeIcon;
  }

  return react["createElement"]("span", {
    className: className,
    onMouseDown: function onMouseDown(event) {
      event.preventDefault();

      if (_onMouseDown) {
        _onMouseDown(event);
      }
    },
    style: {
      userSelect: 'none',
      WebkitUserSelect: 'none'
    },
    unselectable: "on",
    onClick: onClick,
    "aria-hidden": true
  }, icon !== undefined ? icon : react["createElement"]("span", {
    className: classnames_default()(className.split(/\s+/).map(function (cls) {
      return "".concat(cls, "-icon");
    }))
  }, children));
};

/* harmony default export */ var es_TransBtn = (TransBtn_TransBtn);
// CONCATENATED MODULE: ../node_modules/rc-select/es/OptionList.js

















/**
 * Using virtual list of option display.
 * Will fallback to dom if use customize render.
 */

var OptionList_OptionList = function OptionList(_ref, ref) {
  var prefixCls = _ref.prefixCls,
      id = _ref.id,
      flattenOptions = _ref.flattenOptions,
      childrenAsData = _ref.childrenAsData,
      values = _ref.values,
      searchValue = _ref.searchValue,
      multiple = _ref.multiple,
      defaultActiveFirstOption = _ref.defaultActiveFirstOption,
      height = _ref.height,
      itemHeight = _ref.itemHeight,
      notFoundContent = _ref.notFoundContent,
      open = _ref.open,
      menuItemSelectedIcon = _ref.menuItemSelectedIcon,
      virtual = _ref.virtual,
      onSelect = _ref.onSelect,
      onToggleOpen = _ref.onToggleOpen,
      onActiveValue = _ref.onActiveValue,
      onScroll = _ref.onScroll,
      onMouseEnter = _ref.onMouseEnter;
  var itemPrefixCls = "".concat(prefixCls, "-item");
  var memoFlattenOptions = useMemo(function () {
    return flattenOptions;
  }, [open, flattenOptions], function (prev, next) {
    return next[0] && prev[1] !== next[1];
  }); // =========================== List ===========================

  var listRef = react["useRef"](null);

  var onListMouseDown = function onListMouseDown(event) {
    event.preventDefault();
  };

  var scrollIntoView = function scrollIntoView(index) {
    if (listRef.current) {
      listRef.current.scrollTo({
        index: index
      });
    }
  }; // ========================== Active ==========================


  var getEnabledActiveIndex = function getEnabledActiveIndex(index) {
    var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
    var len = memoFlattenOptions.length;

    for (var i = 0; i < len; i += 1) {
      var current = (index + i * offset + len) % len;
      var _memoFlattenOptions$c = memoFlattenOptions[current],
          group = _memoFlattenOptions$c.group,
          data = _memoFlattenOptions$c.data;

      if (!group && !data.disabled) {
        return current;
      }
    }

    return -1;
  };

  var _React$useState = react["useState"](function () {
    return getEnabledActiveIndex(0);
  }),
      _React$useState2 = Object(slicedToArray["a" /* default */])(_React$useState, 2),
      activeIndex = _React$useState2[0],
      setActiveIndex = _React$useState2[1];

  var setActive = function setActive(index) {
    setActiveIndex(index); // Trigger active event

    var flattenItem = memoFlattenOptions[index];

    if (!flattenItem) {
      onActiveValue(null, -1);
      return;
    }

    onActiveValue(flattenItem.data.value, index);
  }; // Auto active first item when list length or searchValue changed


  react["useEffect"](function () {
    setActive(defaultActiveFirstOption !== false ? getEnabledActiveIndex(0) : -1);
  }, [memoFlattenOptions.length, searchValue]); // Auto scroll to item position in single mode

  react["useEffect"](function () {
    /**
     * React will skip `onChange` when component update.
     * `setActive` function will call root accessibility state update which makes re-render.
     * So we need to delay to let Input component trigger onChange first.
     */
    var timeoutId = setTimeout(function () {
      if (!multiple && open && values.size === 1) {
        var value = Array.from(values)[0];
        var index = memoFlattenOptions.findIndex(function (_ref2) {
          var data = _ref2.data;
          return data.value === value;
        });
        setActive(index);
        scrollIntoView(index);
      }
    });
    return function () {
      return clearTimeout(timeoutId);
    };
  }, [open]); // ========================== Values ==========================

  var onSelectValue = function onSelectValue(value) {
    if (value !== undefined) {
      onSelect(value, {
        selected: !values.has(value)
      });
    } // Single mode should always close by select


    if (!multiple) {
      onToggleOpen(false);
    }
  }; // ========================= Keyboard =========================


  react["useImperativeHandle"](ref, function () {
    return {
      onKeyDown: function onKeyDown(event) {
        var which = event.which;

        switch (which) {
          // >>> Arrow keys
          case KeyCode["a" /* default */].UP:
          case KeyCode["a" /* default */].DOWN:
            {
              var offset = 0;

              if (which === KeyCode["a" /* default */].UP) {
                offset = -1;
              } else if (which === KeyCode["a" /* default */].DOWN) {
                offset = 1;
              }

              if (offset !== 0) {
                var nextActiveIndex = getEnabledActiveIndex(activeIndex + offset, offset);
                scrollIntoView(nextActiveIndex);
                setActive(nextActiveIndex);
              }

              break;
            }
          // >>> Select

          case KeyCode["a" /* default */].ENTER:
            {
              // value
              var item = memoFlattenOptions[activeIndex];

              if (item && !item.data.disabled) {
                onSelectValue(item.data.value);
              } else {
                onSelectValue(undefined);
              }

              if (open) {
                event.preventDefault();
              }

              break;
            }
          // >>> Close

          case KeyCode["a" /* default */].ESC:
            {
              onToggleOpen(false);
            }
        }
      },
      onKeyUp: function onKeyUp() {},
      scrollTo: function scrollTo(index) {
        scrollIntoView(index);
      }
    };
  }); // ========================== Render ==========================

  if (memoFlattenOptions.length === 0) {
    return react["createElement"]("div", {
      role: "listbox",
      id: "".concat(id, "_list"),
      className: "".concat(itemPrefixCls, "-empty"),
      onMouseDown: onListMouseDown
    }, notFoundContent);
  }

  function renderItem(index) {
    var item = memoFlattenOptions[index];
    if (!item) return null;
    var itemData = item.data || {};
    var value = itemData.value,
        label = itemData.label,
        children = itemData.children;
    var attrs = pickAttrs(itemData, true);
    var mergedLabel = childrenAsData ? children : label;
    return item ? react["createElement"]("div", Object.assign({
      "aria-label": typeof mergedLabel === 'string' ? mergedLabel : null
    }, attrs, {
      key: index,
      role: "option",
      id: "".concat(id, "_list_").concat(index),
      "aria-selected": values.has(value)
    }), value) : null;
  }

  return react["createElement"](react["Fragment"], null, react["createElement"]("div", {
    role: "listbox",
    id: "".concat(id, "_list"),
    style: {
      height: 0,
      width: 0,
      overflow: 'hidden'
    }
  }, renderItem(activeIndex - 1), renderItem(activeIndex), renderItem(activeIndex + 1)), react["createElement"](rc_virtual_list_es, {
    itemKey: "key",
    ref: listRef,
    data: memoFlattenOptions,
    height: height,
    itemHeight: itemHeight,
    fullHeight: false,
    onMouseDown: onListMouseDown,
    onScroll: onScroll,
    virtual: virtual,
    onMouseEnter: onMouseEnter
  }, function (_ref3, itemIndex) {
    var _classNames;

    var group = _ref3.group,
        groupOption = _ref3.groupOption,
        data = _ref3.data;
    var label = data.label,
        key = data.key; // Group

    if (group) {
      return react["createElement"]("div", {
        className: classnames_default()(itemPrefixCls, "".concat(itemPrefixCls, "-group"))
      }, label !== undefined ? label : key);
    }

    var disabled = data.disabled,
        value = data.value,
        title = data.title,
        children = data.children,
        style = data.style,
        className = data.className,
        otherProps = Object(objectWithoutProperties["a" /* default */])(data, ["disabled", "value", "title", "children", "style", "className"]); // Option


    var selected = values.has(value);
    var optionPrefixCls = "".concat(itemPrefixCls, "-option");
    var optionClassName = classnames_default()(itemPrefixCls, optionPrefixCls, className, (_classNames = {}, Object(defineProperty["a" /* default */])(_classNames, "".concat(optionPrefixCls, "-grouped"), groupOption), Object(defineProperty["a" /* default */])(_classNames, "".concat(optionPrefixCls, "-active"), activeIndex === itemIndex && !disabled), Object(defineProperty["a" /* default */])(_classNames, "".concat(optionPrefixCls, "-disabled"), disabled), Object(defineProperty["a" /* default */])(_classNames, "".concat(optionPrefixCls, "-selected"), selected), _classNames));
    var mergedLabel = childrenAsData ? children : label;
    var iconVisible = !menuItemSelectedIcon || typeof menuItemSelectedIcon === 'function' || selected;
    return react["createElement"]("div", Object.assign({}, otherProps, {
      "aria-selected": selected,
      className: optionClassName,
      title: title,
      onMouseMove: function onMouseMove() {
        if (activeIndex === itemIndex || disabled) {
          return;
        }

        setActive(itemIndex);
      },
      onClick: function onClick() {
        if (!disabled) {
          onSelectValue(value);
        }
      },
      style: style
    }), react["createElement"]("div", {
      className: "".concat(optionPrefixCls, "-content")
    }, mergedLabel || value), react["isValidElement"](menuItemSelectedIcon) || selected, iconVisible && react["createElement"](es_TransBtn, {
      className: "".concat(itemPrefixCls, "-option-state"),
      customizeIcon: menuItemSelectedIcon,
      customizeIconProps: {
        isSelected: selected
      }
    }, selected ? '✓' : null));
  }));
};

var RefOptionList = react["forwardRef"](OptionList_OptionList);
RefOptionList.displayName = 'OptionList';
/* harmony default export */ var es_OptionList = (RefOptionList);
// CONCATENATED MODULE: ../node_modules/rc-select/es/Option.js
/** This is a placeholder, not real render in dom */
var Option = function Option() {
  return null;
};

Option.isSelectOption = true;
/* harmony default export */ var es_Option = (Option);
// CONCATENATED MODULE: ../node_modules/rc-select/es/OptGroup.js
/** This is a placeholder, not real render in dom */
var OptGroup = function OptGroup() {
  return null;
};

OptGroup.isSelectOptGroup = true;
/* harmony default export */ var es_OptGroup = (OptGroup);
// EXTERNAL MODULE: ../node_modules/rc-util/es/Children/toArray.js
var toArray = __webpack_require__("xTM7");

// CONCATENATED MODULE: ../node_modules/rc-select/es/utils/legacyUtil.js














function legacyUtil_ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function legacyUtil_objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      legacyUtil_ownKeys(Object(source), true).forEach(function (key) {
        Object(defineProperty["a" /* default */])(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      legacyUtil_ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}




function convertNodeToOption(node) {
  var key = node.key,
      _node$props = node.props,
      children = _node$props.children,
      value = _node$props.value,
      restProps = Object(objectWithoutProperties["a" /* default */])(_node$props, ["children", "value"]);

  return legacyUtil_objectSpread({
    key: key,
    value: value !== undefined ? value : key,
    children: children
  }, restProps);
}

function legacyUtil_convertChildrenToData(nodes) {
  var optionOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  return Object(toArray["a" /* default */])(nodes).map(function (node, index) {
    if (!react["isValidElement"](node) || !node.type) {
      return null;
    }

    var isSelectOptGroup = node.type.isSelectOptGroup,
        key = node.key,
        _node$props2 = node.props,
        children = _node$props2.children,
        restProps = Object(objectWithoutProperties["a" /* default */])(_node$props2, ["children"]);

    if (optionOnly || !isSelectOptGroup) {
      return convertNodeToOption(node);
    }

    return legacyUtil_objectSpread(legacyUtil_objectSpread({
      key: "__RC_SELECT_GRP__".concat(key === null ? index : key, "__"),
      label: key
    }, restProps), {}, {
      options: legacyUtil_convertChildrenToData(children)
    });
  }).filter(function (data) {
    return data;
  });
}
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.set.js
var es6_set = __webpack_require__("m1Dn");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.sort.js
var es6_array_sort = __webpack_require__("U8p0");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.map.js
var es6_map = __webpack_require__("zx98");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 2 modules
var toConsumableArray = __webpack_require__("6CzD");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js
var arrayWithHoles = __webpack_require__("Cpn1");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/iterableToArray.js
var iterableToArray = __webpack_require__("tdEy");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js
var unsupportedIterableToArray = __webpack_require__("TJjZ");

// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js
var nonIterableRest = __webpack_require__("IoK0");

// CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/toArray.js




function _toArray(arr) {
  return Object(arrayWithHoles["a" /* default */])(arr) || Object(iterableToArray["a" /* default */])(arr) || Object(unsupportedIterableToArray["a" /* default */])(arr) || Object(nonIterableRest["a" /* default */])();
}
// EXTERNAL MODULE: ../node_modules/rc-util/es/warning.js
var warning = __webpack_require__("IFhY");

// CONCATENATED MODULE: ../node_modules/rc-select/es/utils/commonUtil.js



function commonUtil_toArray(value) {
  if (Array.isArray(value)) {
    return value;
  }

  return value !== undefined ? [value] : [];
}
/**
 * Convert outer props value into internal value
 */

function toInnerValue(value, _ref) {
  var labelInValue = _ref.labelInValue,
      combobox = _ref.combobox;

  if (value === undefined || value === '' && combobox) {
    return [];
  }

  var values = Array.isArray(value) ? value : [value];

  if (labelInValue) {
    return values.map(function (_ref2) {
      var key = _ref2.key,
          val = _ref2.value;
      return val !== undefined ? val : key;
    });
  }

  return values;
}
/**
 * Convert internal value into out event value
 */

function toOuterValues(valueList, _ref3) {
  var optionLabelProp = _ref3.optionLabelProp,
      labelInValue = _ref3.labelInValue,
      prevValue = _ref3.prevValue,
      options = _ref3.options,
      getLabeledValue = _ref3.getLabeledValue;
  var values = valueList;

  if (labelInValue) {
    values = values.map(function (val) {
      return getLabeledValue(val, {
        options: options,
        prevValue: prevValue,
        labelInValue: labelInValue,
        optionLabelProp: optionLabelProp
      });
    });
  }

  return values;
}
function removeLastEnabledValue(measureValues, values) {
  var newValues = Object(toConsumableArray["a" /* default */])(values);

  var removeIndex;

  for (removeIndex = measureValues.length - 1; removeIndex >= 0; removeIndex -= 1) {
    if (!measureValues[removeIndex].disabled) {
      break;
    }
  }

  var removedValue = null;

  if (removeIndex !== -1) {
    removedValue = newValues[removeIndex];
    newValues.splice(removeIndex, 1);
  }

  return {
    values: newValues,
    removedValue: removedValue
  };
}
var isClient = typeof window !== 'undefined' && window.document && window.document.documentElement;
/** Is client side and not jsdom */

var isBrowserClient =  true && isClient;
var uuid = 0;
/** Get unique id for accessibility usage */

function getUUID() {
  var retId; // Test never reach

  /* istanbul ignore if */

  if (isBrowserClient) {
    retId = uuid;
    uuid += 1;
  } else {
    retId = 'TEST_OR_SSR';
  }

  return retId;
}
// CONCATENATED MODULE: ../node_modules/rc-select/es/utils/valueUtil.js


























function valueUtil_ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function valueUtil_objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      valueUtil_ownKeys(Object(source), true).forEach(function (key) {
        Object(defineProperty["a" /* default */])(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      valueUtil_ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}




function getKey(data, index) {
  var key = data.key;
  var value;

  if ('value' in data) {
    value = data.value;
  }

  if (key !== null && key !== undefined) {
    return key;
  }

  if (value !== undefined) {
    return value;
  }

  return "rc-index-key-".concat(index);
}
/**
 * Flat options into flatten list.
 * We use `optionOnly` here is aim to avoid user use nested option group.
 * Here is simply set `key` to the index if not provided.
 */


function valueUtil_flattenOptions(options) {
  var flattenList = [];

  function dig(list, isGroupOption) {
    list.forEach(function (data) {
      if (isGroupOption || !('options' in data)) {
        // Option
        flattenList.push({
          key: getKey(data, flattenList.length),
          groupOption: isGroupOption,
          data: data
        });
      } else {
        // Option Group
        flattenList.push({
          key: getKey(data, flattenList.length),
          group: true,
          data: data
        });
        dig(data.options, true);
      }
    });
  }

  dig(options, false);
  return flattenList;
}
/**
 * Inject `props` into `option` for legacy usage
 */

function injectPropsWithOption(option) {
  var newOption = valueUtil_objectSpread({}, option);

  if (!('props' in newOption)) {
    Object.defineProperty(newOption, 'props', {
      get: function get() {
        Object(warning["a" /* default */])(false, 'Return type is option instead of Option instance. Please read value directly instead of reading from `props`.');
        return newOption;
      }
    });
  }

  return newOption;
}

function valueUtil_findValueOption(values, options) {
  var optionMap = new Map();
  options.forEach(function (flattenItem) {
    if (!flattenItem.group) {
      var data = flattenItem.data; // Check if match

      optionMap.set(data.value, data);
    }
  });
  return values.map(function (val) {
    return injectPropsWithOption(optionMap.get(val));
  });
}
var valueUtil_getLabeledValue = function getLabeledValue(value, _ref) {
  var options = _ref.options,
      prevValue = _ref.prevValue,
      labelInValue = _ref.labelInValue,
      optionLabelProp = _ref.optionLabelProp;
  var item = valueUtil_findValueOption([value], options)[0];
  var result = {
    value: value
  };
  var prevValItem;
  var prevValues = commonUtil_toArray(prevValue);

  if (labelInValue) {
    prevValItem = prevValues.find(function (prevItem) {
      if (Object(esm_typeof["a" /* default */])(prevItem) === 'object' && 'value' in prevItem) {
        return prevItem.value === value;
      } // [Legacy] Support `key` as `value`


      return prevItem.key === value;
    });
  }

  if (prevValItem && Object(esm_typeof["a" /* default */])(prevValItem) === 'object' && 'label' in prevValItem) {
    result.label = prevValItem.label;

    if (item && typeof prevValItem.label === 'string' && typeof item[optionLabelProp] === 'string' && prevValItem.label.trim() !== item[optionLabelProp].trim()) {
      Object(warning["a" /* default */])(false, '`label` of `value` is not same as `label` in Select options.');
    }
  } else if (item && optionLabelProp in item) {
    result.label = item[optionLabelProp];
  } else {
    result.label = value;
  } // [Legacy] We need fill `key` as `value` to compatible old code usage


  result.key = result.value;
  return result;
};

function toRawString(content) {
  return commonUtil_toArray(content).join('');
}
/** Filter single option if match the search text */


function getFilterFunction(optionFilterProp) {
  return function (searchValue, option) {
    var lowerSearchText = searchValue.toLowerCase(); // Group label search

    if ('options' in option) {
      return toRawString(option.label).toLowerCase().includes(lowerSearchText);
    } // Option value search


    var rawValue = option[optionFilterProp];
    var value = toRawString(rawValue).toLowerCase();
    return value.includes(lowerSearchText) && !option.disabled;
  };
}
/** Filter options and return a new options by the search text */


function valueUtil_filterOptions(searchValue, options, _ref2) {
  var optionFilterProp = _ref2.optionFilterProp,
      filterOption = _ref2.filterOption;
  var filteredOptions = [];
  var filterFunc;

  if (filterOption === false) {
    return options;
  }

  if (typeof filterOption === 'function') {
    filterFunc = filterOption;
  } else {
    filterFunc = getFilterFunction(optionFilterProp);
  }

  options.forEach(function (item) {
    // Group should check child options
    if ('options' in item) {
      // Check group first
      var matchGroup = filterFunc(searchValue, item);

      if (matchGroup) {
        filteredOptions.push(item);
      } else {
        // Check option
        var subOptions = item.options.filter(function (subItem) {
          return filterFunc(searchValue, subItem);
        });

        if (subOptions.length) {
          filteredOptions.push(valueUtil_objectSpread(valueUtil_objectSpread({}, item), {}, {
            options: subOptions
          }));
        }
      }

      return;
    }

    if (filterFunc(searchValue, injectPropsWithOption(item))) {
      filteredOptions.push(item);
    }
  });
  return filteredOptions;
}
function getSeparatedContent(text, tokens) {
  if (!tokens || !tokens.length) {
    return null;
  }

  var match = false;

  function separate(str, _ref3) {
    var _ref4 = _toArray(_ref3),
        token = _ref4[0],
        restTokens = _ref4.slice(1);

    if (!token) {
      return [str];
    }

    var list = str.split(token);
    match = match || list.length > 1;
    return list.reduce(function (prevList, unitStr) {
      return [].concat(Object(toConsumableArray["a" /* default */])(prevList), Object(toConsumableArray["a" /* default */])(separate(unitStr, restTokens)));
    }, []).filter(function (unit) {
      return unit;
    });
  }

  var list = separate(text, tokens);
  return match ? list : null;
}
function valueUtil_isValueDisabled(value, options) {
  var option = valueUtil_findValueOption([value], options)[0];
  return option.disabled;
}
/**
 * `tags` mode should fill un-list item into the option list
 */

function valueUtil_fillOptionsWithMissingValue(options, value, optionLabelProp, labelInValue) {
  var values = commonUtil_toArray(value).slice().sort();

  var cloneOptions = Object(toConsumableArray["a" /* default */])(options); // Convert options value to set


  var optionValues = new Set();
  options.forEach(function (opt) {
    if (opt.options) {
      opt.options.forEach(function (subOpt) {
        optionValues.add(subOpt.value);
      });
    } else {
      optionValues.add(opt.value);
    }
  }); // Fill missing value

  values.forEach(function (item) {
    var val = labelInValue ? item.value : item;

    if (!optionValues.has(val)) {
      var _ref5;

      cloneOptions.push(labelInValue ? (_ref5 = {}, Object(defineProperty["a" /* default */])(_ref5, optionLabelProp, item.label), Object(defineProperty["a" /* default */])(_ref5, "value", val), _ref5) : {
        value: val
      });
    }
  });
  return cloneOptions;
}
// EXTERNAL MODULE: ../node_modules/rc-util/es/hooks/useMergedState.js
var useMergedState = __webpack_require__("2b4w");

// EXTERNAL MODULE: ../node_modules/rc-animate/es/CSSMotion.js
var es_CSSMotion = __webpack_require__("67vp");

// EXTERNAL MODULE: ../node_modules/rc-animate/es/util/motion.js
var motion = __webpack_require__("vmon");

// CONCATENATED MODULE: ../node_modules/rc-animate/es/util/diff.js









var diff_extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var STATUS_ADD = 'add';
var STATUS_KEEP = 'keep';
var STATUS_REMOVE = 'remove';
var STATUS_REMOVED = 'removed';
function wrapKeyToObject(key) {
  var keyObj = void 0;

  if (key && typeof key === 'object' && 'key' in key) {
    keyObj = key;
  } else {
    keyObj = {
      key: key
    };
  }

  return diff_extends({}, keyObj, {
    key: String(keyObj.key)
  });
}
function parseKeys() {
  var keys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  return keys.map(wrapKeyToObject);
}
function diffKeys() {
  var prevKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var currentKeys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  var list = [];
  var currentIndex = 0;
  var currentLen = currentKeys.length;
  var prevKeyObjects = parseKeys(prevKeys);
  var currentKeyObjects = parseKeys(currentKeys); // Check prev keys to insert or keep

  prevKeyObjects.forEach(function (keyObj) {
    var hit = false;

    for (var i = currentIndex; i < currentLen; i += 1) {
      var currentKeyObj = currentKeyObjects[i];

      if (currentKeyObj.key === keyObj.key) {
        // New added keys should add before current key
        if (currentIndex < i) {
          list = list.concat(currentKeyObjects.slice(currentIndex, i).map(function (obj) {
            return diff_extends({}, obj, {
              status: STATUS_ADD
            });
          }));
          currentIndex = i;
        }

        list.push(diff_extends({}, currentKeyObj, {
          status: STATUS_KEEP
        }));
        currentIndex += 1;
        hit = true;
        break;
      }
    } // If not hit, it means key is removed


    if (!hit) {
      list.push(diff_extends({}, keyObj, {
        status: STATUS_REMOVE
      }));
    }
  }); // Add rest to the list

  if (currentIndex < currentLen) {
    list = list.concat(currentKeyObjects.slice(currentIndex).map(function (obj) {
      return diff_extends({}, obj, {
        status: STATUS_ADD
      });
    }));
  }
  /**
   * Merge same key when it remove and add again:
   *    [1 - add, 2 - keep, 1 - remove] -> [1 - keep, 2 - keep]
   */


  var keys = {};
  list.forEach(function (_ref) {
    var key = _ref.key;
    keys[key] = (keys[key] || 0) + 1;
  });
  var duplicatedKeys = Object.keys(keys).filter(function (key) {
    return keys[key] > 1;
  });
  duplicatedKeys.forEach(function (matchKey) {
    // Remove `STATUS_REMOVE` node.
    list = list.filter(function (_ref2) {
      var key = _ref2.key,
          status = _ref2.status;
      return key !== matchKey || status !== STATUS_REMOVE;
    }); // Update `STATUS_ADD` to `STATUS_KEEP`

    list.forEach(function (node) {
      if (node.key === matchKey) {
        node.status = STATUS_KEEP;
      }
    });
  });
  return list;
}
// CONCATENATED MODULE: ../node_modules/rc-animate/es/CSSMotionList.js












var CSSMotionList_extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var CSSMotionList_createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

function CSSMotionList_objectWithoutProperties(obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
}

function CSSMotionList_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function CSSMotionList_possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function CSSMotionList_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
/* eslint react/prop-types: 0 */






var MOTION_PROP_NAMES = ['eventProps', 'visible', 'children', 'motionName', 'motionAppear', 'motionEnter', 'motionLeave', 'motionLeaveImmediately', 'motionDeadline', 'removeOnLeave', 'leavedClassName', 'onAppearStart', 'onAppearActive', 'onAppearEnd', 'onEnterStart', 'onEnterActive', 'onEnterEnd', 'onLeaveStart', 'onLeaveActive', 'onLeaveEnd'];
function genCSSMotionList(transitionSupport) {
  var CSSMotion = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : es_CSSMotion["a" /* default */];

  var CSSMotionList = function (_React$Component) {
    CSSMotionList_inherits(CSSMotionList, _React$Component);

    function CSSMotionList() {
      var _ref;

      var _temp, _this, _ret;

      CSSMotionList_classCallCheck(this, CSSMotionList);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = CSSMotionList_possibleConstructorReturn(this, (_ref = CSSMotionList.__proto__ || Object.getPrototypeOf(CSSMotionList)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
        keyEntities: []
      }, _this.removeKey = function (removeKey) {
        _this.setState(function (_ref2) {
          var keyEntities = _ref2.keyEntities;
          return {
            keyEntities: keyEntities.map(function (entity) {
              if (entity.key !== removeKey) return entity;
              return CSSMotionList_extends({}, entity, {
                status: STATUS_REMOVED
              });
            })
          };
        });
      }, _temp), CSSMotionList_possibleConstructorReturn(_this, _ret);
    }

    CSSMotionList_createClass(CSSMotionList, [{
      key: 'render',
      value: function render() {
        var _this2 = this;

        var keyEntities = this.state.keyEntities;

        var _props = this.props,
            component = _props.component,
            children = _props.children,
            restProps = CSSMotionList_objectWithoutProperties(_props, ['component', 'children']);

        var Component = component || react_default.a.Fragment;
        var motionProps = {};
        MOTION_PROP_NAMES.forEach(function (prop) {
          motionProps[prop] = restProps[prop];
          delete restProps[prop];
        });
        delete restProps.keys;
        return react_default.a.createElement(Component, restProps, keyEntities.map(function (_ref3) {
          var status = _ref3.status,
              eventProps = CSSMotionList_objectWithoutProperties(_ref3, ['status']);

          var visible = status === STATUS_ADD || status === STATUS_KEEP;
          return react_default.a.createElement(CSSMotion, CSSMotionList_extends({}, motionProps, {
            key: eventProps.key,
            visible: visible,
            eventProps: eventProps,
            onLeaveEnd: function onLeaveEnd() {
              if (motionProps.onLeaveEnd) {
                motionProps.onLeaveEnd.apply(motionProps, arguments);
              }

              _this2.removeKey(eventProps.key);
            }
          }), children);
        }));
      }
    }], [{
      key: 'getDerivedStateFromProps',
      value: function getDerivedStateFromProps(_ref4, _ref5) {
        var keys = _ref4.keys;
        var keyEntities = _ref5.keyEntities;
        var parsedKeyObjects = parseKeys(keys); // Always as keep when motion not support

        if (!transitionSupport) {
          return {
            keyEntities: parsedKeyObjects.map(function (obj) {
              return CSSMotionList_extends({}, obj, {
                status: STATUS_KEEP
              });
            })
          };
        }

        var mixedKeyEntities = diffKeys(keyEntities, parsedKeyObjects);
        var keyEntitiesLen = keyEntities.length;
        return {
          keyEntities: mixedKeyEntities.filter(function (entity) {
            // IE 9 not support Array.prototype.find
            var prevEntity = null;

            for (var i = 0; i < keyEntitiesLen; i += 1) {
              var currentEntity = keyEntities[i];

              if (currentEntity.key === entity.key) {
                prevEntity = currentEntity;
                break;
              }
            } // Remove if already mark as removed


            if (prevEntity && prevEntity.status === STATUS_REMOVED && entity.status === STATUS_REMOVE) {
              return false;
            }

            return true;
          })
        };
      }
    }]);

    return CSSMotionList;
  }(react_default.a.Component);

  CSSMotionList.defaultProps = {
    component: 'div'
  };
  return CSSMotionList;
}
/* harmony default export */ var es_CSSMotionList = (genCSSMotionList(motion["c" /* supportTransition */]));
// EXTERNAL MODULE: ../node_modules/rc-util/es/ref.js
var es_ref = __webpack_require__("hulx");

// CONCATENATED MODULE: ../node_modules/rc-select/es/Selector/Input.js












function Input_ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function Input_objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      Input_ownKeys(Object(source), true).forEach(function (key) {
        Object(defineProperty["a" /* default */])(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      Input_ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}




var Input_Input = function Input(_ref, ref) {
  var prefixCls = _ref.prefixCls,
      id = _ref.id,
      inputElement = _ref.inputElement,
      disabled = _ref.disabled,
      tabIndex = _ref.tabIndex,
      autoFocus = _ref.autoFocus,
      autoComplete = _ref.autoComplete,
      editable = _ref.editable,
      accessibilityIndex = _ref.accessibilityIndex,
      value = _ref.value,
      _onKeyDown = _ref.onKeyDown,
      _onMouseDown = _ref.onMouseDown,
      _onChange = _ref.onChange,
      onPaste = _ref.onPaste,
      _onCompositionStart = _ref.onCompositionStart,
      _onCompositionEnd = _ref.onCompositionEnd,
      open = _ref.open,
      attrs = _ref.attrs;
  var inputNode = inputElement || react_default.a.createElement("input", null);
  var _inputNode = inputNode,
      originRef = _inputNode.ref,
      _inputNode$props = _inputNode.props,
      onOriginKeyDown = _inputNode$props.onKeyDown,
      onOriginChange = _inputNode$props.onChange,
      onOriginMouseDown = _inputNode$props.onMouseDown,
      onOriginCompositionStart = _inputNode$props.onCompositionStart,
      onOriginCompositionEnd = _inputNode$props.onCompositionEnd,
      style = _inputNode$props.style;
  inputNode = react_default.a.cloneElement(inputNode, Input_objectSpread(Input_objectSpread({
    id: id,
    ref: Object(es_ref["a" /* composeRef */])(ref, originRef),
    disabled: disabled,
    tabIndex: tabIndex,
    autoComplete: autoComplete || 'off',
    autoFocus: autoFocus,
    className: "".concat(prefixCls, "-selection-search-input"),
    style: Input_objectSpread(Input_objectSpread({}, style), {}, {
      opacity: editable ? null : 0
    }),
    role: 'combobox',
    'aria-expanded': open,
    'aria-haspopup': 'listbox',
    'aria-owns': "".concat(id, "_list"),
    'aria-autocomplete': 'list',
    'aria-controls': "".concat(id, "_list"),
    'aria-activedescendant': "".concat(id, "_list_").concat(accessibilityIndex)
  }, attrs), {}, {
    value: editable ? value : '',
    readOnly: !editable,
    unselectable: !editable ? 'on' : null,
    onKeyDown: function onKeyDown(event) {
      _onKeyDown(event);

      if (onOriginKeyDown) {
        onOriginKeyDown(event);
      }
    },
    onMouseDown: function onMouseDown(event) {
      _onMouseDown(event);

      if (onOriginMouseDown) {
        onOriginMouseDown(event);
      }
    },
    onChange: function onChange(event) {
      _onChange(event);

      if (onOriginChange) {
        onOriginChange(event);
      }
    },
    onCompositionStart: function onCompositionStart(event) {
      _onCompositionStart(event);

      if (onOriginCompositionStart) {
        onOriginCompositionStart(event);
      }
    },
    onCompositionEnd: function onCompositionEnd(event) {
      _onCompositionEnd(event);

      if (onOriginCompositionEnd) {
        onOriginCompositionEnd(event);
      }
    },
    onPaste: onPaste
  }));
  return inputNode;
};

var RefInput = react_default.a.forwardRef(Input_Input);
RefInput.displayName = 'Input';
/* harmony default export */ var Selector_Input = (RefInput);
// CONCATENATED MODULE: ../node_modules/rc-select/es/hooks/useLayoutEffect.js
/* eslint-disable react-hooks/rules-of-hooks */


/**
 * Wrap `React.useLayoutEffect` which will not throw warning message in test env
 */

function useLayoutEffect(effect, deps) {
  // Never happen in test env
  if (isBrowserClient) {
    /* istanbul ignore next */
    react["useLayoutEffect"](effect, deps);
  } else {
    react["useEffect"](effect, deps);
  }
}
/* eslint-enable */
// CONCATENATED MODULE: ../node_modules/rc-select/es/Selector/MultipleSelector.js















function MultipleSelector_ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function MultipleSelector_objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      MultipleSelector_ownKeys(Object(source), true).forEach(function (key) {
        Object(defineProperty["a" /* default */])(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      MultipleSelector_ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}








var REST_TAG_KEY = '__RC_SELECT_MAX_REST_COUNT__';

var MultipleSelector_SelectSelector = function SelectSelector(props) {
  var id = props.id,
      prefixCls = props.prefixCls,
      values = props.values,
      open = props.open,
      searchValue = props.searchValue,
      inputRef = props.inputRef,
      placeholder = props.placeholder,
      disabled = props.disabled,
      mode = props.mode,
      showSearch = props.showSearch,
      autoFocus = props.autoFocus,
      autoComplete = props.autoComplete,
      accessibilityIndex = props.accessibilityIndex,
      tabIndex = props.tabIndex,
      removeIcon = props.removeIcon,
      choiceTransitionName = props.choiceTransitionName,
      maxTagCount = props.maxTagCount,
      maxTagTextLength = props.maxTagTextLength,
      _props$maxTagPlacehol = props.maxTagPlaceholder,
      maxTagPlaceholder = _props$maxTagPlacehol === void 0 ? function (omittedValues) {
    return "+ ".concat(omittedValues.length, " ...");
  } : _props$maxTagPlacehol,
      tagRender = props.tagRender,
      onSelect = props.onSelect,
      onInputChange = props.onInputChange,
      onInputPaste = props.onInputPaste,
      onInputKeyDown = props.onInputKeyDown,
      onInputMouseDown = props.onInputMouseDown,
      onInputCompositionStart = props.onInputCompositionStart,
      onInputCompositionEnd = props.onInputCompositionEnd;

  var _React$useState = react_default.a.useState(false),
      _React$useState2 = Object(slicedToArray["a" /* default */])(_React$useState, 2),
      motionAppear = _React$useState2[0],
      setMotionAppear = _React$useState2[1];

  var measureRef = react_default.a.useRef(null);

  var _React$useState3 = react_default.a.useState(0),
      _React$useState4 = Object(slicedToArray["a" /* default */])(_React$useState3, 2),
      inputWidth = _React$useState4[0],
      setInputWidth = _React$useState4[1]; // ===================== Motion ======================


  react_default.a.useEffect(function () {
    setMotionAppear(true);
  }, []); // ===================== Search ======================

  var inputValue = open || mode === 'tags' ? searchValue : '';
  var inputEditable = mode === 'tags' || open && showSearch; // We measure width and set to the input immediately

  useLayoutEffect(function () {
    setInputWidth(measureRef.current.scrollWidth);
  }, [inputValue]); // ==================== Selection ====================

  var displayValues = values; // Cut by `maxTagCount`

  var restCount;

  if (typeof maxTagCount === 'number') {
    restCount = values.length - maxTagCount;
    displayValues = values.slice(0, maxTagCount);
  } // Update by `maxTagTextLength`


  if (typeof maxTagTextLength === 'number') {
    displayValues = displayValues.map(function (_ref) {
      var label = _ref.label,
          rest = Object(objectWithoutProperties["a" /* default */])(_ref, ["label"]);

      var displayLabel = label;

      if (typeof label === 'string' || typeof label === 'number') {
        var strLabel = String(displayLabel);

        if (strLabel.length > maxTagTextLength) {
          displayLabel = "".concat(strLabel.slice(0, maxTagTextLength), "...");
        }
      }

      return MultipleSelector_objectSpread(MultipleSelector_objectSpread({}, rest), {}, {
        label: displayLabel
      });
    });
  } // Fill rest


  if (restCount > 0) {
    displayValues.push({
      key: REST_TAG_KEY,
      label: typeof maxTagPlaceholder === 'function' ? maxTagPlaceholder(values.slice(maxTagCount)) : maxTagPlaceholder
    });
  }

  var selectionNode = react_default.a.createElement(es_CSSMotionList, {
    component: false,
    keys: displayValues,
    motionName: choiceTransitionName,
    motionAppear: motionAppear
  }, function (_ref2) {
    var key = _ref2.key,
        label = _ref2.label,
        value = _ref2.value,
        itemDisabled = _ref2.disabled,
        className = _ref2.className,
        style = _ref2.style;
    var mergedKey = key || value;
    var closable = key !== REST_TAG_KEY && !itemDisabled;

    var onMouseDown = function onMouseDown(event) {
      event.preventDefault();
      event.stopPropagation();
    };

    var onClose = function onClose(event) {
      if (event) event.stopPropagation();
      onSelect(value, {
        selected: false
      });
    };

    return typeof tagRender === 'function' ? react_default.a.createElement("span", {
      key: mergedKey,
      onMouseDown: onMouseDown,
      className: className,
      style: style
    }, tagRender({
      label: label,
      value: value,
      disabled: itemDisabled,
      closable: closable,
      onClose: onClose
    })) : react_default.a.createElement("span", {
      key: mergedKey,
      className: classnames_default()(className, "".concat(prefixCls, "-selection-item"), Object(defineProperty["a" /* default */])({}, "".concat(prefixCls, "-selection-item-disabled"), itemDisabled)),
      style: style
    }, react_default.a.createElement("span", {
      className: "".concat(prefixCls, "-selection-item-content")
    }, label), closable && react_default.a.createElement(es_TransBtn, {
      className: "".concat(prefixCls, "-selection-item-remove"),
      onMouseDown: onMouseDown,
      onClick: onClose,
      customizeIcon: removeIcon
    }, "\xD7"));
  });
  return react_default.a.createElement(react_default.a.Fragment, null, selectionNode, react_default.a.createElement("span", {
    className: "".concat(prefixCls, "-selection-search"),
    style: {
      width: inputWidth
    }
  }, react_default.a.createElement(Selector_Input, {
    ref: inputRef,
    open: open,
    prefixCls: prefixCls,
    id: id,
    inputElement: null,
    disabled: disabled,
    autoFocus: autoFocus,
    autoComplete: autoComplete,
    editable: inputEditable,
    accessibilityIndex: accessibilityIndex,
    value: inputValue,
    onKeyDown: onInputKeyDown,
    onMouseDown: onInputMouseDown,
    onChange: onInputChange,
    onPaste: onInputPaste,
    onCompositionStart: onInputCompositionStart,
    onCompositionEnd: onInputCompositionEnd,
    tabIndex: tabIndex,
    attrs: pickAttrs(props, true)
  }), react_default.a.createElement("span", {
    ref: measureRef,
    className: "".concat(prefixCls, "-selection-search-mirror"),
    "aria-hidden": true
  }, inputValue, "\xA0")), !values.length && !inputValue && react_default.a.createElement("span", {
    className: "".concat(prefixCls, "-selection-placeholder")
  }, placeholder));
};

/* harmony default export */ var MultipleSelector = (MultipleSelector_SelectSelector);
// CONCATENATED MODULE: ../node_modules/rc-select/es/Selector/SingleSelector.js










var SingleSelector_SingleSelector = function SingleSelector(props) {
  var inputElement = props.inputElement,
      prefixCls = props.prefixCls,
      id = props.id,
      inputRef = props.inputRef,
      disabled = props.disabled,
      autoFocus = props.autoFocus,
      autoComplete = props.autoComplete,
      accessibilityIndex = props.accessibilityIndex,
      mode = props.mode,
      open = props.open,
      values = props.values,
      placeholder = props.placeholder,
      tabIndex = props.tabIndex,
      showSearch = props.showSearch,
      searchValue = props.searchValue,
      activeValue = props.activeValue,
      onInputKeyDown = props.onInputKeyDown,
      onInputMouseDown = props.onInputMouseDown,
      onInputChange = props.onInputChange,
      onInputPaste = props.onInputPaste,
      onInputCompositionStart = props.onInputCompositionStart,
      onInputCompositionEnd = props.onInputCompositionEnd;

  var _React$useState = react_default.a.useState(false),
      _React$useState2 = Object(slicedToArray["a" /* default */])(_React$useState, 2),
      inputChanged = _React$useState2[0],
      setInputChanged = _React$useState2[1];

  var combobox = mode === 'combobox';
  var inputEditable = combobox || showSearch && open;
  var item = values[0];
  var inputValue = searchValue || '';

  if (combobox && activeValue && !inputChanged) {
    inputValue = activeValue;
  }

  react_default.a.useEffect(function () {
    if (combobox) {
      setInputChanged(false);
    }
  }, [combobox, activeValue]); // Not show text when closed expect combobox mode

  var hasTextInput = mode !== 'combobox' && !open ? false : !!inputValue;
  var title = item && (typeof item.label === 'string' || typeof item.label === 'number') ? item.label.toString() : undefined;
  return react_default.a.createElement(react_default.a.Fragment, null, react_default.a.createElement("span", {
    className: "".concat(prefixCls, "-selection-search"),
    title: title
  }, react_default.a.createElement(Selector_Input, {
    ref: inputRef,
    prefixCls: prefixCls,
    id: id,
    open: open,
    inputElement: inputElement,
    disabled: disabled,
    autoFocus: autoFocus,
    autoComplete: autoComplete,
    editable: inputEditable,
    accessibilityIndex: accessibilityIndex,
    value: inputValue,
    onKeyDown: onInputKeyDown,
    onMouseDown: onInputMouseDown,
    onChange: function onChange(e) {
      setInputChanged(true);
      onInputChange(e);
    },
    onPaste: onInputPaste,
    onCompositionStart: onInputCompositionStart,
    onCompositionEnd: onInputCompositionEnd,
    tabIndex: tabIndex,
    attrs: pickAttrs(props, true)
  })), !combobox && item && !hasTextInput && react_default.a.createElement("span", {
    className: "".concat(prefixCls, "-selection-item")
  }, item.label), !item && !hasTextInput && react_default.a.createElement("span", {
    className: "".concat(prefixCls, "-selection-placeholder")
  }, placeholder));
};

/* harmony default export */ var Selector_SingleSelector = (SingleSelector_SingleSelector);
// CONCATENATED MODULE: ../node_modules/rc-select/es/hooks/useLock.js

/**
 * Locker return cached mark.
 * If set to `true`, will return `true` in a short time even if set `false`.
 * If set to `false` and then set to `true`, will change to `true`.
 * And after time duration, it will back to `null` automatically.
 */

function useLock() {
  var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 250;
  var lockRef = react["useRef"](null);
  var timeoutRef = react["useRef"](null); // Clean up

  react["useEffect"](function () {
    return function () {
      window.clearTimeout(timeoutRef.current);
    };
  }, []);

  function doLock(locked) {
    if (locked || lockRef.current === null) {
      lockRef.current = locked;
    }

    window.clearTimeout(timeoutRef.current);
    timeoutRef.current = window.setTimeout(function () {
      lockRef.current = null;
    }, duration);
  }

  return [function () {
    return lockRef.current;
  }, doLock];
}
// CONCATENATED MODULE: ../node_modules/rc-select/es/Selector/index.js





/**
 * Cursor rule:
 * 1. Only `showSearch` enabled
 * 2. Only `open` is `true`
 * 3. When typing, set `open` to `true` which hit rule of 2
 *
 * Accessibility:
 * - https://www.w3.org/TR/wai-aria-practices/examples/combobox/aria1.1pattern/listbox-combo.html
 */








var Selector_Selector = function Selector(props, ref) {
  var inputRef = Object(react["useRef"])(null);
  var compositionStatusRef = Object(react["useRef"])(false);
  var prefixCls = props.prefixCls,
      multiple = props.multiple,
      open = props.open,
      mode = props.mode,
      showSearch = props.showSearch,
      tokenWithEnter = props.tokenWithEnter,
      onSearch = props.onSearch,
      onSearchSubmit = props.onSearchSubmit,
      onToggleOpen = props.onToggleOpen,
      onInputKeyDown = props.onInputKeyDown,
      domRef = props.domRef; // ======================= Ref =======================

  react["useImperativeHandle"](ref, function () {
    return {
      focus: function focus() {
        inputRef.current.focus();
      },
      blur: function blur() {
        inputRef.current.blur();
      }
    };
  }); // ====================== Input ======================

  var _useLock = useLock(0),
      _useLock2 = Object(slicedToArray["a" /* default */])(_useLock, 2),
      getInputMouseDown = _useLock2[0],
      setInputMouseDown = _useLock2[1];

  var onInternalInputKeyDown = function onInternalInputKeyDown(event) {
    var which = event.which;

    if (which === KeyCode["a" /* default */].UP || which === KeyCode["a" /* default */].DOWN) {
      event.preventDefault();
    }

    if (onInputKeyDown) {
      onInputKeyDown(event);
    }

    if (which === KeyCode["a" /* default */].ENTER && mode === 'tags' && !compositionStatusRef.current && !open) {
      // When menu isn't open, OptionList won't trigger a value change
      // So when enter is pressed, the tag's input value should be emitted here to let selector know
      onSearchSubmit(event.target.value);
    }

    if (![KeyCode["a" /* default */].SHIFT, KeyCode["a" /* default */].TAB, KeyCode["a" /* default */].BACKSPACE, KeyCode["a" /* default */].ESC].includes(which)) {
      onToggleOpen(true);
    }
  };
  /**
   * We can not use `findDOMNode` sine it will get warning,
   * have to use timer to check if is input element.
   */


  var onInternalInputMouseDown = function onInternalInputMouseDown() {
    setInputMouseDown(true);
  }; // When paste come, ignore next onChange


  var pastedTextRef = Object(react["useRef"])(null);

  var triggerOnSearch = function triggerOnSearch(value) {
    if (onSearch(value, true, compositionStatusRef.current) !== false) {
      onToggleOpen(true);
    }
  };

  var onInputCompositionStart = function onInputCompositionStart() {
    compositionStatusRef.current = true;
  };

  var onInputCompositionEnd = function onInputCompositionEnd() {
    compositionStatusRef.current = false;
  };

  var onInputChange = function onInputChange(event) {
    var value = event.target.value; // Pasted text should replace back to origin content

    if (tokenWithEnter && pastedTextRef.current && /[\r\n]/.test(pastedTextRef.current)) {
      var replacedText = pastedTextRef.current.replace(/[\r\n]/g, ' ');
      value = value.replace(replacedText, pastedTextRef.current);
    }

    pastedTextRef.current = null;
    triggerOnSearch(value);
  };

  var onInputPaste = function onInputPaste(e) {
    var clipboardData = e.clipboardData;
    var value = clipboardData.getData('text');
    pastedTextRef.current = value;
  };

  var onMouseDown = function onMouseDown(event) {
    var inputMouseDown = getInputMouseDown();

    if (event.target !== inputRef.current) {
      if (!inputMouseDown) {
        event.preventDefault();
      } // Should focus input if click the selector


      var isIE = document.body.style.msTouchAction !== undefined;

      if (isIE) {
        setTimeout(function () {
          inputRef.current.focus();
        });
      } else {
        inputRef.current.focus();
      }
    }

    if (mode !== 'combobox' && (!showSearch || !inputMouseDown) || !open) {
      if (open) {
        onSearch('', true, false);
      }

      onToggleOpen();
    }
  }; // ================= Inner Selector ==================


  var sharedProps = {
    inputRef: inputRef,
    onInputKeyDown: onInternalInputKeyDown,
    onInputMouseDown: onInternalInputMouseDown,
    onInputChange: onInputChange,
    onInputPaste: onInputPaste,
    onInputCompositionStart: onInputCompositionStart,
    onInputCompositionEnd: onInputCompositionEnd
  };
  var selectNode = multiple ? react["createElement"](MultipleSelector, Object.assign({}, props, sharedProps)) : react["createElement"](Selector_SingleSelector, Object.assign({}, props, sharedProps));
  return react["createElement"]("div", {
    ref: domRef,
    className: "".concat(prefixCls, "-selector"),
    onMouseDown: onMouseDown
  }, selectNode);
};

var ForwardSelector = react["forwardRef"](Selector_Selector);
ForwardSelector.displayName = 'Selector';
/* harmony default export */ var es_Selector = (ForwardSelector);
// CONCATENATED MODULE: ../node_modules/rc-select/es/SelectTrigger.js














function SelectTrigger_ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function SelectTrigger_objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      SelectTrigger_ownKeys(Object(source), true).forEach(function (key) {
        Object(defineProperty["a" /* default */])(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      SelectTrigger_ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}





var getBuiltInPlacements = function getBuiltInPlacements(dropdownMatchSelectWidth) {
  // Enable horizontal overflow auto-adjustment when a custom dropdown width is provided
  var adjustX = typeof dropdownMatchSelectWidth !== 'number' ? 0 : 1;
  return {
    bottomLeft: {
      points: ['tl', 'bl'],
      offset: [0, 4],
      overflow: {
        adjustX: adjustX,
        adjustY: 1
      }
    },
    bottomRight: {
      points: ['tr', 'br'],
      offset: [0, 4],
      overflow: {
        adjustX: adjustX,
        adjustY: 1
      }
    },
    topLeft: {
      points: ['bl', 'tl'],
      offset: [0, -4],
      overflow: {
        adjustX: adjustX,
        adjustY: 1
      }
    },
    topRight: {
      points: ['br', 'tr'],
      offset: [0, -4],
      overflow: {
        adjustX: adjustX,
        adjustY: 1
      }
    }
  };
};

var SelectTrigger_SelectTrigger = function SelectTrigger(props, ref) {
  var prefixCls = props.prefixCls,
      disabled = props.disabled,
      visible = props.visible,
      children = props.children,
      popupElement = props.popupElement,
      containerWidth = props.containerWidth,
      animation = props.animation,
      transitionName = props.transitionName,
      dropdownStyle = props.dropdownStyle,
      dropdownClassName = props.dropdownClassName,
      _props$direction = props.direction,
      direction = _props$direction === void 0 ? 'ltr' : _props$direction,
      _props$dropdownMatchS = props.dropdownMatchSelectWidth,
      dropdownMatchSelectWidth = _props$dropdownMatchS === void 0 ? true : _props$dropdownMatchS,
      dropdownRender = props.dropdownRender,
      dropdownAlign = props.dropdownAlign,
      getPopupContainer = props.getPopupContainer,
      empty = props.empty,
      getTriggerDOMNode = props.getTriggerDOMNode,
      restProps = Object(objectWithoutProperties["a" /* default */])(props, ["prefixCls", "disabled", "visible", "children", "popupElement", "containerWidth", "animation", "transitionName", "dropdownStyle", "dropdownClassName", "direction", "dropdownMatchSelectWidth", "dropdownRender", "dropdownAlign", "getPopupContainer", "empty", "getTriggerDOMNode"]);

  var dropdownPrefixCls = "".concat(prefixCls, "-dropdown");
  var popupNode = popupElement;

  if (dropdownRender) {
    popupNode = dropdownRender(popupElement);
  }

  var builtInPlacements = react["useMemo"](function () {
    return getBuiltInPlacements(dropdownMatchSelectWidth);
  }, [dropdownMatchSelectWidth]); // ===================== Motion ======================

  var mergedTransitionName = animation ? "".concat(dropdownPrefixCls, "-").concat(animation) : transitionName; // ======================= Ref =======================

  var popupRef = react["useRef"](null);
  react["useImperativeHandle"](ref, function () {
    return {
      getPopupElement: function getPopupElement() {
        return popupRef.current;
      }
    };
  });

  var popupStyle = SelectTrigger_objectSpread({
    minWidth: containerWidth
  }, dropdownStyle);

  if (typeof dropdownMatchSelectWidth === 'number') {
    popupStyle.width = dropdownMatchSelectWidth;
  } else if (dropdownMatchSelectWidth) {
    popupStyle.width = containerWidth;
  }

  return react["createElement"](es["a" /* default */], Object.assign({}, restProps, {
    showAction: [],
    hideAction: [],
    popupPlacement: direction === 'rtl' ? 'bottomRight' : 'bottomLeft',
    builtinPlacements: builtInPlacements,
    prefixCls: dropdownPrefixCls,
    popupTransitionName: mergedTransitionName,
    popup: react["createElement"]("div", {
      ref: popupRef
    }, popupNode),
    popupAlign: dropdownAlign,
    popupVisible: visible,
    getPopupContainer: getPopupContainer,
    popupClassName: classnames_default()(dropdownClassName, Object(defineProperty["a" /* default */])({}, "".concat(dropdownPrefixCls, "-empty"), empty)),
    popupStyle: popupStyle,
    getTriggerDOMNode: getTriggerDOMNode
  }), children);
};

var RefSelectTrigger = react["forwardRef"](SelectTrigger_SelectTrigger);
RefSelectTrigger.displayName = 'SelectTrigger';
/* harmony default export */ var es_SelectTrigger = (RefSelectTrigger);
// CONCATENATED MODULE: ../node_modules/rc-select/es/interface/generator.js
var INTERNAL_PROPS_MARK = 'RC_SELECT_INTERNAL_PROPS_MARK';
// CONCATENATED MODULE: ../node_modules/rc-select/es/hooks/useDelayReset.js


/**
 * Similar with `useLock`, but this hook will always execute last value.
 * When set to `true`, it will keep `true` for a short time even if `false` is set.
 */

function useDelayReset() {
  var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;

  var _React$useState = react["useState"](false),
      _React$useState2 = Object(slicedToArray["a" /* default */])(_React$useState, 2),
      bool = _React$useState2[0],
      setBool = _React$useState2[1];

  var delayRef = react["useRef"](null);

  var cancelLatest = function cancelLatest() {
    window.clearTimeout(delayRef.current);
  };

  react["useEffect"](function () {
    return cancelLatest;
  }, []);

  var delaySetBool = function delaySetBool(value, callback) {
    cancelLatest();
    delayRef.current = window.setTimeout(function () {
      setBool(value);

      if (callback) {
        callback();
      }
    }, timeout);
  };

  return [bool, delaySetBool, cancelLatest];
}
// CONCATENATED MODULE: ../node_modules/rc-select/es/hooks/useSelectTriggerControl.js



function useSelectTriggerControl(elements, open, triggerOpen) {
  var propsRef = react["useRef"](null);
  propsRef.current = {
    elements: elements.filter(function (e) {
      return e;
    }),
    open: open,
    triggerOpen: triggerOpen
  };
  react["useEffect"](function () {
    function onGlobalMouseDown(event) {
      var target = event.target;

      if (propsRef.current.open && propsRef.current.elements.every(function (element) {
        return !element.contains(target) && element !== target;
      })) {
        // Should trigger close
        propsRef.current.triggerOpen(false);
      }
    }

    window.addEventListener('mousedown', onGlobalMouseDown);
    return function () {
      return window.removeEventListener('mousedown', onGlobalMouseDown);
    };
  }, []);
}
// CONCATENATED MODULE: ../node_modules/rc-select/es/hooks/useCacheDisplayValue.js















function useCacheDisplayValue_ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function useCacheDisplayValue_objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      useCacheDisplayValue_ownKeys(Object(source), true).forEach(function (key) {
        Object(defineProperty["a" /* default */])(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      useCacheDisplayValue_ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}


function useCacheDisplayValue(values) {
  var prevValuesRef = react["useRef"](values);
  var mergedValues = react["useMemo"](function () {
    // Create value - label map
    var valueLabels = new Map();
    prevValuesRef.current.forEach(function (_ref) {
      var value = _ref.value,
          label = _ref.label;

      if (value !== label) {
        valueLabels.set(value, label);
      }
    });
    var resultValues = values.map(function (item) {
      var cacheLabel = valueLabels.get(item.value);

      if (item.value === item.label && cacheLabel) {
        return useCacheDisplayValue_objectSpread(useCacheDisplayValue_objectSpread({}, item), {}, {
          label: cacheLabel
        });
      }

      return item;
    });
    prevValuesRef.current = resultValues;
    return resultValues;
  }, [values]);
  return mergedValues;
}
// CONCATENATED MODULE: ../node_modules/rc-select/es/hooks/useCacheOptions.js









function useCacheOptions(values, options) {
  var prevOptionMapRef = react["useRef"](null);
  var optionMap = react["useMemo"](function () {
    var map = new Map();
    options.forEach(function (item) {
      var value = item.data.value;
      map.set(value, item);
    });
    return map;
  }, [values, options]);
  prevOptionMapRef.current = optionMap;

  var getValueOption = function getValueOption(vals) {
    return vals.map(function (value) {
      return prevOptionMapRef.current.get(value);
    }).filter(Boolean);
  };

  return getValueOption;
}
// CONCATENATED MODULE: ../node_modules/rc-select/es/generate.js

























function generate_ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function generate_objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      generate_ownKeys(Object(source), true).forEach(function (key) {
        Object(defineProperty["a" /* default */])(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      generate_ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}
/**
 * To match accessibility requirement, we always provide an input in the component.
 * Other element will not set `tabIndex` to avoid `onBlur` sequence problem.
 * For focused select, we set `aria-live="polite"` to update the accessibility content.
 *
 * ref:
 * - keyboard: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role#Keyboard_interactions
 */



















var DEFAULT_OMIT_PROPS = ['removeIcon', 'placeholder', 'autoFocus', 'maxTagCount', 'maxTagTextLength', 'maxTagPlaceholder', 'choiceTransitionName', 'onInputKeyDown'];
/**
 * This function is in internal usage.
 * Do not use it in your prod env since we may refactor this.
 */

function generateSelector(config) {
  var defaultPrefixCls = config.prefixCls,
      OptionList = config.components.optionList,
      convertChildrenToData = config.convertChildrenToData,
      flattenOptions = config.flattenOptions,
      getLabeledValue = config.getLabeledValue,
      filterOptions = config.filterOptions,
      isValueDisabled = config.isValueDisabled,
      findValueOption = config.findValueOption,
      warningProps = config.warningProps,
      fillOptionsWithMissingValue = config.fillOptionsWithMissingValue,
      omitDOMProps = config.omitDOMProps; // Use raw define since `React.FC` not support generic

  function Select(props, ref) {
    var _classNames2;

    var _props$prefixCls = props.prefixCls,
        prefixCls = _props$prefixCls === void 0 ? defaultPrefixCls : _props$prefixCls,
        className = props.className,
        id = props.id,
        open = props.open,
        defaultOpen = props.defaultOpen,
        options = props.options,
        children = props.children,
        mode = props.mode,
        value = props.value,
        defaultValue = props.defaultValue,
        labelInValue = props.labelInValue,
        showSearch = props.showSearch,
        inputValue = props.inputValue,
        searchValue = props.searchValue,
        filterOption = props.filterOption,
        _props$optionFilterPr = props.optionFilterProp,
        optionFilterProp = _props$optionFilterPr === void 0 ? 'value' : _props$optionFilterPr,
        _props$autoClearSearc = props.autoClearSearchValue,
        autoClearSearchValue = _props$autoClearSearc === void 0 ? true : _props$autoClearSearc,
        onSearch = props.onSearch,
        allowClear = props.allowClear,
        clearIcon = props.clearIcon,
        showArrow = props.showArrow,
        inputIcon = props.inputIcon,
        menuItemSelectedIcon = props.menuItemSelectedIcon,
        disabled = props.disabled,
        loading = props.loading,
        defaultActiveFirstOption = props.defaultActiveFirstOption,
        _props$notFoundConten = props.notFoundContent,
        notFoundContent = _props$notFoundConten === void 0 ? 'Not Found' : _props$notFoundConten,
        optionLabelProp = props.optionLabelProp,
        backfill = props.backfill,
        getInputElement = props.getInputElement,
        getPopupContainer = props.getPopupContainer,
        _props$listHeight = props.listHeight,
        listHeight = _props$listHeight === void 0 ? 200 : _props$listHeight,
        _props$listItemHeight = props.listItemHeight,
        listItemHeight = _props$listItemHeight === void 0 ? 20 : _props$listItemHeight,
        animation = props.animation,
        transitionName = props.transitionName,
        virtual = props.virtual,
        dropdownStyle = props.dropdownStyle,
        dropdownClassName = props.dropdownClassName,
        dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,
        dropdownRender = props.dropdownRender,
        dropdownAlign = props.dropdownAlign,
        _props$showAction = props.showAction,
        showAction = _props$showAction === void 0 ? [] : _props$showAction,
        direction = props.direction,
        tokenSeparators = props.tokenSeparators,
        tagRender = props.tagRender,
        onPopupScroll = props.onPopupScroll,
        onDropdownVisibleChange = props.onDropdownVisibleChange,
        onFocus = props.onFocus,
        onBlur = props.onBlur,
        onKeyUp = props.onKeyUp,
        onKeyDown = props.onKeyDown,
        onMouseDown = props.onMouseDown,
        onChange = props.onChange,
        onSelect = props.onSelect,
        onDeselect = props.onDeselect,
        _props$internalProps = props.internalProps,
        internalProps = _props$internalProps === void 0 ? {} : _props$internalProps,
        restProps = Object(objectWithoutProperties["a" /* default */])(props, ["prefixCls", "className", "id", "open", "defaultOpen", "options", "children", "mode", "value", "defaultValue", "labelInValue", "showSearch", "inputValue", "searchValue", "filterOption", "optionFilterProp", "autoClearSearchValue", "onSearch", "allowClear", "clearIcon", "showArrow", "inputIcon", "menuItemSelectedIcon", "disabled", "loading", "defaultActiveFirstOption", "notFoundContent", "optionLabelProp", "backfill", "getInputElement", "getPopupContainer", "listHeight", "listItemHeight", "animation", "transitionName", "virtual", "dropdownStyle", "dropdownClassName", "dropdownMatchSelectWidth", "dropdownRender", "dropdownAlign", "showAction", "direction", "tokenSeparators", "tagRender", "onPopupScroll", "onDropdownVisibleChange", "onFocus", "onBlur", "onKeyUp", "onKeyDown", "onMouseDown", "onChange", "onSelect", "onDeselect", "internalProps"]);

    var useInternalProps = internalProps.mark === INTERNAL_PROPS_MARK;
    var domProps = omitDOMProps ? omitDOMProps(restProps) : restProps;
    DEFAULT_OMIT_PROPS.forEach(function (prop) {
      delete domProps[prop];
    });
    var containerRef = Object(react["useRef"])(null);
    var triggerRef = Object(react["useRef"])(null);
    var selectorRef = Object(react["useRef"])(null);
    var listRef = Object(react["useRef"])(null);
    var tokenWithEnter = Object(react["useMemo"])(function () {
      return (tokenSeparators || []).includes('\n');
    }, [tokenSeparators]);
    /** Used for component focused management */

    var _useDelayReset = useDelayReset(),
        _useDelayReset2 = Object(slicedToArray["a" /* default */])(_useDelayReset, 3),
        mockFocused = _useDelayReset2[0],
        setMockFocused = _useDelayReset2[1],
        cancelSetMockFocused = _useDelayReset2[2]; // Inner id for accessibility usage. Only work in client side


    var _useState = Object(react["useState"])(),
        _useState2 = Object(slicedToArray["a" /* default */])(_useState, 2),
        innerId = _useState2[0],
        setInnerId = _useState2[1];

    Object(react["useEffect"])(function () {
      setInnerId("rc_select_".concat(getUUID()));
    }, []);
    var mergedId = id || innerId; // optionLabelProp

    var mergedOptionLabelProp = optionLabelProp;

    if (mergedOptionLabelProp === undefined) {
      mergedOptionLabelProp = options ? 'label' : 'children';
    } // labelInValue


    var mergedLabelInValue = mode === 'combobox' ? false : labelInValue;
    var isMultiple = mode === 'tags' || mode === 'multiple';
    var mergedShowSearch = showSearch !== undefined ? showSearch : isMultiple || mode === 'combobox'; // ============================== Ref ===============================

    var selectorDomRef = Object(react["useRef"])(null);
    react["useImperativeHandle"](ref, function () {
      return {
        focus: selectorRef.current.focus,
        blur: selectorRef.current.blur
      };
    }); // ============================= Value ==============================

    var _useMergedState = Object(useMergedState["a" /* default */])(defaultValue, {
      value: value
    }),
        _useMergedState2 = Object(slicedToArray["a" /* default */])(_useMergedState, 2),
        mergedValue = _useMergedState2[0],
        setMergedValue = _useMergedState2[1];
    /** Unique raw values */


    var mergedRawValue = Object(react["useMemo"])(function () {
      return toInnerValue(mergedValue, {
        labelInValue: mergedLabelInValue,
        combobox: mode === 'combobox'
      });
    }, [mergedValue, mergedLabelInValue]);
    /** We cache a set of raw values to speed up check */

    var rawValues = Object(react["useMemo"])(function () {
      return new Set(mergedRawValue);
    }, [mergedRawValue]); // ============================= Option =============================
    // Set by option list active, it will merge into search input when mode is `combobox`

    var _useState3 = Object(react["useState"])(null),
        _useState4 = Object(slicedToArray["a" /* default */])(_useState3, 2),
        activeValue = _useState4[0],
        setActiveValue = _useState4[1];

    var _useState5 = Object(react["useState"])(''),
        _useState6 = Object(slicedToArray["a" /* default */])(_useState5, 2),
        innerSearchValue = _useState6[0],
        setInnerSearchValue = _useState6[1];

    var mergedSearchValue = innerSearchValue;

    if (mode === 'combobox' && mergedValue !== undefined) {
      mergedSearchValue = mergedValue;
    } else if (searchValue !== undefined) {
      mergedSearchValue = searchValue;
    } else if (inputValue) {
      mergedSearchValue = inputValue;
    }

    var mergedOptions = Object(react["useMemo"])(function () {
      var newOptions = options;

      if (newOptions === undefined) {
        newOptions = convertChildrenToData(children);
      }
      /**
       * `tags` should fill un-list item.
       * This is not cool here since TreeSelect do not need this
       */


      if (mode === 'tags' && fillOptionsWithMissingValue) {
        newOptions = fillOptionsWithMissingValue(newOptions, mergedValue, mergedOptionLabelProp, labelInValue);
      }

      return newOptions || [];
    }, [options, children, mode, mergedValue]);
    var mergedFlattenOptions = Object(react["useMemo"])(function () {
      return flattenOptions(mergedOptions, props);
    }, [mergedOptions]);
    var getValueOption = useCacheOptions(mergedRawValue, mergedFlattenOptions); // Display options for OptionList

    var displayOptions = Object(react["useMemo"])(function () {
      if (!mergedSearchValue || !mergedShowSearch) {
        return Object(toConsumableArray["a" /* default */])(mergedOptions);
      }

      var filteredOptions = filterOptions(mergedSearchValue, mergedOptions, {
        optionFilterProp: optionFilterProp,
        filterOption: mode === 'combobox' && filterOption === undefined ? function () {
          return true;
        } : filterOption
      });

      if (mode === 'tags' && filteredOptions.every(function (opt) {
        return opt.value !== mergedSearchValue;
      })) {
        filteredOptions.unshift({
          value: mergedSearchValue,
          label: mergedSearchValue,
          key: '__RC_SELECT_TAG_PLACEHOLDER__'
        });
      }

      return filteredOptions;
    }, [mergedOptions, mergedSearchValue, mode, mergedShowSearch]);
    var displayFlattenOptions = Object(react["useMemo"])(function () {
      return flattenOptions(displayOptions, props);
    }, [displayOptions]);
    Object(react["useEffect"])(function () {
      if (listRef.current && listRef.current.scrollTo) {
        listRef.current.scrollTo(0);
      }
    }, [mergedSearchValue]); // ============================ Selector ============================

    var displayValues = Object(react["useMemo"])(function () {
      var tmpValues = mergedRawValue.map(function (val) {
        var valueOptions = getValueOption([val]);
        var displayValue = getLabeledValue(val, {
          options: valueOptions,
          prevValue: mergedValue,
          labelInValue: mergedLabelInValue,
          optionLabelProp: mergedOptionLabelProp
        });
        return generate_objectSpread(generate_objectSpread({}, displayValue), {}, {
          disabled: isValueDisabled(val, valueOptions)
        });
      });

      if (!mode && tmpValues.length === 1 && tmpValues[0].value === null && tmpValues[0].label === null) {
        return [];
      }

      return tmpValues;
    }, [mergedValue, mergedOptions, mode]); // Polyfill with cache label

    displayValues = useCacheDisplayValue(displayValues);

    var triggerSelect = function triggerSelect(newValue, isSelect, source) {
      var newValueOption = getValueOption([newValue]);
      var outOption = findValueOption([newValue], newValueOption)[0];

      if (!internalProps.skipTriggerSelect) {
        // Skip trigger `onSelect` or `onDeselect` if configured
        var selectValue = mergedLabelInValue ? getLabeledValue(newValue, {
          options: newValueOption,
          prevValue: mergedValue,
          labelInValue: mergedLabelInValue,
          optionLabelProp: mergedOptionLabelProp
        }) : newValue;

        if (isSelect && onSelect) {
          onSelect(selectValue, outOption);
        } else if (!isSelect && onDeselect) {
          onDeselect(selectValue, outOption);
        }
      } // Trigger internal event


      if (useInternalProps) {
        if (isSelect && internalProps.onRawSelect) {
          internalProps.onRawSelect(newValue, outOption, source);
        } else if (!isSelect && internalProps.onRawDeselect) {
          internalProps.onRawDeselect(newValue, outOption, source);
        }
      }
    };

    var triggerChange = function triggerChange(newRawValues) {
      if (useInternalProps && internalProps.skipTriggerChange) {
        return;
      }

      var newRawValuesOptions = getValueOption(newRawValues);
      var outValues = toOuterValues(Array.from(newRawValues), {
        labelInValue: mergedLabelInValue,
        options: newRawValuesOptions,
        getLabeledValue: getLabeledValue,
        prevValue: mergedValue,
        optionLabelProp: mergedOptionLabelProp
      });
      var outValue = isMultiple ? outValues : outValues[0]; // Skip trigger if prev & current value is both empty

      if (onChange && (mergedRawValue.length !== 0 || outValues.length !== 0)) {
        var outOptions = findValueOption(newRawValues, newRawValuesOptions);
        onChange(outValue, isMultiple ? outOptions : outOptions[0]);
      }

      setMergedValue(outValue);
    };

    var onInternalSelect = function onInternalSelect(newValue, _ref) {
      var selected = _ref.selected,
          source = _ref.source;

      if (disabled) {
        return;
      }

      var newRawValue;

      if (isMultiple) {
        newRawValue = new Set(mergedRawValue);

        if (selected) {
          newRawValue.add(newValue);
        } else {
          newRawValue["delete"](newValue);
        }
      } else {
        newRawValue = new Set();
        newRawValue.add(newValue);
      } // Multiple always trigger change and single should change if value changed


      if (isMultiple || !isMultiple && Array.from(mergedRawValue)[0] !== newValue) {
        triggerChange(Array.from(newRawValue));
      } // Trigger `onSelect`. Single mode always trigger select


      triggerSelect(newValue, !isMultiple || selected, source); // Clean search value if single or configured

      if (mode === 'combobox') {
        setInnerSearchValue(String(newValue));
        setActiveValue('');
      } else if (!isMultiple || autoClearSearchValue) {
        setInnerSearchValue('');
        setActiveValue('');
      }
    };

    var onInternalOptionSelect = function onInternalOptionSelect(newValue, info) {
      onInternalSelect(newValue, generate_objectSpread(generate_objectSpread({}, info), {}, {
        source: 'option'
      }));
    };

    var onInternalSelectionSelect = function onInternalSelectionSelect(newValue, info) {
      onInternalSelect(newValue, generate_objectSpread(generate_objectSpread({}, info), {}, {
        source: 'selection'
      }));
    }; // ============================= Input ==============================
    // Only works in `combobox`


    var customizeInputElement = mode === 'combobox' && getInputElement && getInputElement() || null; // ============================== Open ==============================

    var _useMergedState3 = Object(useMergedState["a" /* default */])(undefined, {
      defaultValue: defaultOpen,
      value: open
    }),
        _useMergedState4 = Object(slicedToArray["a" /* default */])(_useMergedState3, 2),
        innerOpen = _useMergedState4[0],
        setInnerOpen = _useMergedState4[1];

    var mergedOpen = innerOpen; // Not trigger `open` in `combobox` when `notFoundContent` is empty

    var emptyListContent = !notFoundContent && !displayOptions.length;

    if (disabled || emptyListContent && mergedOpen && mode === 'combobox') {
      mergedOpen = false;
    }

    var triggerOpen = emptyListContent ? false : mergedOpen;

    var onToggleOpen = function onToggleOpen(newOpen) {
      var nextOpen = newOpen !== undefined ? newOpen : !mergedOpen;

      if (innerOpen !== nextOpen && !disabled) {
        setInnerOpen(nextOpen);

        if (onDropdownVisibleChange) {
          onDropdownVisibleChange(nextOpen);
        }
      }
    };

    useSelectTriggerControl([containerRef.current, triggerRef.current && triggerRef.current.getPopupElement()], triggerOpen, onToggleOpen); // ============================= Search =============================

    var triggerSearch = function triggerSearch(searchText, fromTyping, isCompositing) {
      var ret = true;
      var newSearchText = searchText;
      setActiveValue(null); // Check if match the `tokenSeparators`

      var patchLabels = isCompositing ? null : getSeparatedContent(searchText, tokenSeparators);
      var patchRawValues = patchLabels;

      if (mode === 'combobox') {
        // Only typing will trigger onChange
        if (fromTyping) {
          triggerChange([newSearchText]);
        }
      } else if (patchLabels) {
        newSearchText = '';

        if (mode !== 'tags') {
          patchRawValues = patchLabels.map(function (label) {
            var item = mergedFlattenOptions.find(function (_ref2) {
              var data = _ref2.data;
              return data[mergedOptionLabelProp] === label;
            });
            return item ? item.data.value : null;
          }).filter(function (val) {
            return val !== null;
          });
        }

        var newRawValues = Array.from(new Set([].concat(Object(toConsumableArray["a" /* default */])(mergedRawValue), Object(toConsumableArray["a" /* default */])(patchRawValues))));
        triggerChange(newRawValues);
        newRawValues.forEach(function (newRawValue) {
          triggerSelect(newRawValue, true, 'input');
        }); // Should close when paste finish

        onToggleOpen(false); // Tell Selector that break next actions

        ret = false;
      }

      setInnerSearchValue(newSearchText);

      if (onSearch && mergedSearchValue !== newSearchText) {
        onSearch(newSearchText);
      }

      return ret;
    }; // Only triggered when menu is closed & mode is tags
    // If menu is open, OptionList will take charge
    // If mode isn't tags, press enter is not meaningful when you can't see any option


    var onSearchSubmit = function onSearchSubmit(searchText) {
      var newRawValues = Array.from(new Set([].concat(Object(toConsumableArray["a" /* default */])(mergedRawValue), [searchText])));
      triggerChange(newRawValues);
      newRawValues.forEach(function (newRawValue) {
        triggerSelect(newRawValue, true, 'input');
      });
      setInnerSearchValue('');
    }; // Close dropdown when disabled change


    Object(react["useEffect"])(function () {
      if (innerOpen && !!disabled) {
        setInnerOpen(false);
      }
    }, [disabled]); // Close will clean up single mode search text

    Object(react["useEffect"])(function () {
      if (!mergedOpen && !isMultiple && mode !== 'combobox') {
        triggerSearch('', false, false);
      }
    }, [mergedOpen]); // ============================ Keyboard ============================

    /**
     * We record input value here to check if can press to clean up by backspace
     * - null: Key is not down, this is reset by key up
     * - true: Search text is empty when first time backspace down
     * - false: Search text is not empty when first time backspace down
     */

    var _useLock = useLock(),
        _useLock2 = Object(slicedToArray["a" /* default */])(_useLock, 2),
        getClearLock = _useLock2[0],
        setClearLock = _useLock2[1]; // KeyDown


    var onInternalKeyDown = function onInternalKeyDown(event) {
      var clearLock = getClearLock();
      var which = event.which; // We only manage open state here, close logic should handle by list component

      if (!mergedOpen && which === KeyCode["a" /* default */].ENTER) {
        onToggleOpen(true);
      }

      setClearLock(!!mergedSearchValue); // Remove value by `backspace`

      if (which === KeyCode["a" /* default */].BACKSPACE && !clearLock && isMultiple && !mergedSearchValue && mergedRawValue.length) {
        var removeInfo = removeLastEnabledValue(displayValues, mergedRawValue);

        if (removeInfo.removedValue !== null) {
          triggerChange(removeInfo.values);
          triggerSelect(removeInfo.removedValue, false, 'input');
        }
      }

      for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        rest[_key - 1] = arguments[_key];
      }

      if (mergedOpen && listRef.current) {
        var _listRef$current;

        (_listRef$current = listRef.current).onKeyDown.apply(_listRef$current, [event].concat(rest));
      }

      if (onKeyDown) {
        onKeyDown.apply(void 0, [event].concat(rest));
      }
    }; // KeyUp


    var onInternalKeyUp = function onInternalKeyUp(event) {
      for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        rest[_key2 - 1] = arguments[_key2];
      }

      if (mergedOpen && listRef.current) {
        var _listRef$current2;

        (_listRef$current2 = listRef.current).onKeyUp.apply(_listRef$current2, [event].concat(rest));
      }

      if (onKeyUp) {
        onKeyUp.apply(void 0, [event].concat(rest));
      }
    }; // ========================== Focus / Blur ==========================

    /** Record real focus status */


    var focusRef = Object(react["useRef"])(false);

    var onContainerFocus = function onContainerFocus() {
      setMockFocused(true);

      if (!disabled) {
        if (onFocus && !focusRef.current) {
          onFocus.apply(void 0, arguments);
        } // `showAction` should handle `focus` if set


        if (showAction.includes('focus')) {
          onToggleOpen(true);
        }
      }

      focusRef.current = true;
    };

    var onContainerBlur = function onContainerBlur() {
      setMockFocused(false, function () {
        focusRef.current = false;
        onToggleOpen(false);
      });

      if (disabled) {
        return;
      }

      if (mergedSearchValue) {
        // `tags` mode should move `searchValue` into values
        if (mode === 'tags') {
          triggerSearch('', false, false);
          triggerChange(Array.from(new Set([].concat(Object(toConsumableArray["a" /* default */])(mergedRawValue), [mergedSearchValue]))));
        } else if (mode === 'multiple') {
          // `multiple` mode only clean the search value but not trigger event
          setInnerSearchValue('');
        }
      }

      if (onBlur) {
        onBlur.apply(void 0, arguments);
      }
    };

    var activeTimeoutIds = [];
    Object(react["useEffect"])(function () {
      return function () {
        activeTimeoutIds.forEach(function (timeoutId) {
          return clearTimeout(timeoutId);
        });
        activeTimeoutIds.splice(0, activeTimeoutIds.length);
      };
    }, []);

    var onInternalMouseDown = function onInternalMouseDown(event) {
      var target = event.target;
      var popupElement = triggerRef.current && triggerRef.current.getPopupElement(); // We should give focus back to selector if clicked item is not focusable

      if (popupElement && popupElement.contains(target)) {
        var timeoutId = setTimeout(function () {
          var index = activeTimeoutIds.indexOf(timeoutId);

          if (index !== -1) {
            activeTimeoutIds.splice(index, 1);
          }

          cancelSetMockFocused();

          if (!popupElement.contains(document.activeElement)) {
            selectorRef.current.focus();
          }
        });
        activeTimeoutIds.push(timeoutId);
      }

      if (onMouseDown) {
        for (var _len3 = arguments.length, restArgs = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
          restArgs[_key3 - 1] = arguments[_key3];
        }

        onMouseDown.apply(void 0, [event].concat(restArgs));
      }
    }; // ========================= Accessibility ==========================


    var _useState7 = Object(react["useState"])(0),
        _useState8 = Object(slicedToArray["a" /* default */])(_useState7, 2),
        accessibilityIndex = _useState8[0],
        setAccessibilityIndex = _useState8[1];

    var mergedDefaultActiveFirstOption = defaultActiveFirstOption !== undefined ? defaultActiveFirstOption : mode !== 'combobox';

    var onActiveValue = function onActiveValue(active, index) {
      setAccessibilityIndex(index);

      if (backfill && mode === 'combobox' && active !== null) {
        setActiveValue(String(active));
      }
    }; // ============================= Popup ==============================


    var _useState9 = Object(react["useState"])(null),
        _useState10 = Object(slicedToArray["a" /* default */])(_useState9, 2),
        containerWidth = _useState10[0],
        setContainerWidth = _useState10[1];

    var _useState11 = Object(react["useState"])({}),
        _useState12 = Object(slicedToArray["a" /* default */])(_useState11, 2),
        forceUpdate = _useState12[1]; // We need force update here since popup dom is render async


    function onPopupMouseEnter() {
      forceUpdate({});
    }

    useLayoutEffect(function () {
      if (triggerOpen) {
        var newWidth = Math.ceil(containerRef.current.offsetWidth);

        if (containerWidth !== newWidth) {
          setContainerWidth(newWidth);
        }
      }
    }, [triggerOpen]);
    var popupNode = react["createElement"](OptionList, {
      ref: listRef,
      prefixCls: prefixCls,
      id: mergedId,
      open: mergedOpen,
      childrenAsData: !options,
      options: displayOptions,
      flattenOptions: displayFlattenOptions,
      multiple: isMultiple,
      values: rawValues,
      height: listHeight,
      itemHeight: listItemHeight,
      onSelect: onInternalOptionSelect,
      onToggleOpen: onToggleOpen,
      onActiveValue: onActiveValue,
      defaultActiveFirstOption: mergedDefaultActiveFirstOption,
      notFoundContent: notFoundContent,
      onScroll: onPopupScroll,
      searchValue: mergedSearchValue,
      menuItemSelectedIcon: menuItemSelectedIcon,
      virtual: virtual !== false && dropdownMatchSelectWidth !== false,
      onMouseEnter: onPopupMouseEnter
    }); // ============================= Clear ==============================

    var clearNode;

    var onClearMouseDown = function onClearMouseDown() {
      // Trigger internal `onClear` event
      if (useInternalProps && internalProps.onClear) {
        internalProps.onClear();
      }

      triggerChange([]);
      triggerSearch('', false, false);
    };

    if (!disabled && allowClear && (mergedRawValue.length || mergedSearchValue)) {
      clearNode = react["createElement"](es_TransBtn, {
        className: "".concat(prefixCls, "-clear"),
        onMouseDown: onClearMouseDown,
        customizeIcon: clearIcon
      }, "\xD7");
    } // ============================= Arrow ==============================


    var mergedShowArrow = showArrow !== undefined ? showArrow : loading || !isMultiple && mode !== 'combobox';
    var arrowNode;

    if (mergedShowArrow) {
      arrowNode = react["createElement"](es_TransBtn, {
        className: classnames_default()("".concat(prefixCls, "-arrow"), Object(defineProperty["a" /* default */])({}, "".concat(prefixCls, "-arrow-loading"), loading)),
        customizeIcon: inputIcon,
        customizeIconProps: {
          loading: loading,
          searchValue: mergedSearchValue,
          open: mergedOpen,
          focused: mockFocused,
          showSearch: mergedShowSearch
        }
      });
    } // ============================ Warning =============================


    if (false) {} // ============================= Render =============================


    var mergedClassName = classnames_default()(prefixCls, className, (_classNames2 = {}, Object(defineProperty["a" /* default */])(_classNames2, "".concat(prefixCls, "-focused"), mockFocused), Object(defineProperty["a" /* default */])(_classNames2, "".concat(prefixCls, "-multiple"), isMultiple), Object(defineProperty["a" /* default */])(_classNames2, "".concat(prefixCls, "-single"), !isMultiple), Object(defineProperty["a" /* default */])(_classNames2, "".concat(prefixCls, "-allow-clear"), allowClear), Object(defineProperty["a" /* default */])(_classNames2, "".concat(prefixCls, "-show-arrow"), mergedShowArrow), Object(defineProperty["a" /* default */])(_classNames2, "".concat(prefixCls, "-disabled"), disabled), Object(defineProperty["a" /* default */])(_classNames2, "".concat(prefixCls, "-loading"), loading), Object(defineProperty["a" /* default */])(_classNames2, "".concat(prefixCls, "-open"), mergedOpen), Object(defineProperty["a" /* default */])(_classNames2, "".concat(prefixCls, "-customize-input"), customizeInputElement), Object(defineProperty["a" /* default */])(_classNames2, "".concat(prefixCls, "-show-search"), mergedShowSearch), _classNames2));
    return react["createElement"]("div", Object.assign({
      className: mergedClassName
    }, domProps, {
      ref: containerRef,
      onMouseDown: onInternalMouseDown,
      onKeyDown: onInternalKeyDown,
      onKeyUp: onInternalKeyUp,
      onFocus: onContainerFocus,
      onBlur: onContainerBlur
    }), mockFocused && !mergedOpen && react["createElement"]("span", {
      style: {
        width: 0,
        height: 0,
        display: 'flex',
        overflow: 'hidden',
        opacity: 0
      },
      "aria-live": "polite"
    }, "".concat(mergedRawValue.join(', '))), react["createElement"](es_SelectTrigger, {
      ref: triggerRef,
      disabled: disabled,
      prefixCls: prefixCls,
      visible: triggerOpen,
      popupElement: popupNode,
      containerWidth: containerWidth,
      animation: animation,
      transitionName: transitionName,
      dropdownStyle: dropdownStyle,
      dropdownClassName: dropdownClassName,
      direction: direction,
      dropdownMatchSelectWidth: dropdownMatchSelectWidth,
      dropdownRender: dropdownRender,
      dropdownAlign: dropdownAlign,
      getPopupContainer: getPopupContainer,
      empty: !mergedOptions.length,
      getTriggerDOMNode: function getTriggerDOMNode() {
        return selectorDomRef.current;
      }
    }, react["createElement"](es_Selector, Object.assign({}, props, {
      domRef: selectorDomRef,
      prefixCls: prefixCls,
      inputElement: customizeInputElement,
      ref: selectorRef,
      id: mergedId,
      showSearch: mergedShowSearch,
      mode: mode,
      accessibilityIndex: accessibilityIndex,
      multiple: isMultiple,
      tagRender: tagRender,
      values: displayValues,
      open: mergedOpen,
      onToggleOpen: onToggleOpen,
      searchValue: mergedSearchValue,
      activeValue: activeValue,
      onSearch: triggerSearch,
      onSearchSubmit: onSearchSubmit,
      onSelect: onInternalSelectionSelect,
      tokenWithEnter: tokenWithEnter
    }))), arrowNode, clearNode);
  }

  var RefSelect = react["forwardRef"](Select);
  return RefSelect;
}
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.some.js
var es6_array_some = __webpack_require__("VNvs");

// CONCATENATED MODULE: ../node_modules/rc-select/es/utils/warningPropsUtil.js










function warningPropsUtil_warningProps(props) {
  var mode = props.mode,
      options = props.options,
      children = props.children,
      backfill = props.backfill,
      allowClear = props.allowClear,
      placeholder = props.placeholder,
      getInputElement = props.getInputElement,
      showSearch = props.showSearch,
      onSearch = props.onSearch,
      defaultOpen = props.defaultOpen,
      autoFocus = props.autoFocus,
      labelInValue = props.labelInValue,
      value = props.value,
      inputValue = props.inputValue,
      optionLabelProp = props.optionLabelProp;
  var multiple = mode === 'multiple' || mode === 'tags';
  var mergedShowSearch = showSearch !== undefined ? showSearch : multiple || mode === 'combobox';
  var mergedOptions = options || legacyUtil_convertChildrenToData(children); // `tags` should not set option as disabled

  Object(warning["a" /* default */])(mode !== 'tags' || mergedOptions.every(function (opt) {
    return !opt.disabled;
  }), 'Please avoid setting option to disabled in tags mode since user can always type text as tag.'); // `combobox` & `tags` should option be `string` type

  if (mode === 'tags' || mode === 'combobox') {
    var hasNumberValue = mergedOptions.some(function (item) {
      if (item.options) {
        return item.options.some(function (opt) {
          return typeof ('value' in opt ? opt.value : opt.key) === 'number';
        });
      }

      return typeof ('value' in item ? item.value : item.key) === 'number';
    });
    Object(warning["a" /* default */])(!hasNumberValue, '`value` of Option should not use number type when `mode` is `tags` or `combobox`.');
  } // `combobox` should not use `optionLabelProp`


  Object(warning["a" /* default */])(mode !== 'combobox' || !optionLabelProp, '`combobox` mode not support `optionLabelProp`. Please set `value` on Option directly.'); // Only `combobox` support `backfill`

  Object(warning["a" /* default */])(mode === 'combobox' || !backfill, '`backfill` only works with `combobox` mode.'); // Only `combobox` support `getInputElement`

  Object(warning["a" /* default */])(mode === 'combobox' || !getInputElement, '`getInputElement` only work with `combobox` mode.'); // Customize `getInputElement` should not use `allowClear` & `placeholder`

  Object(warning["b" /* noteOnce */])(mode !== 'combobox' || !getInputElement || !allowClear || !placeholder, 'Customize `getInputElement` should customize clear and placeholder logic instead of configuring `allowClear` and `placeholder`.'); // `onSearch` should use in `combobox` or `showSearch`

  if (onSearch && !mergedShowSearch && mode !== 'combobox' && mode !== 'tags') {
    Object(warning["a" /* default */])(false, '`onSearch` should work with `showSearch` instead of use alone.');
  }

  Object(warning["b" /* noteOnce */])(!defaultOpen || autoFocus, '`defaultOpen` makes Select open without focus which means it will not close by click outside. You can set `autoFocus` if needed.');

  if (value !== undefined && value !== null) {
    var values = commonUtil_toArray(value);
    Object(warning["a" /* default */])(!labelInValue || values.every(function (val) {
      return Object(esm_typeof["a" /* default */])(val) === 'object' && ('key' in val || 'value' in val);
    }), '`value` should in shape of `{ value: string | number, label?: ReactNode }` when you set `labelInValue` to `true`');
    Object(warning["a" /* default */])(!multiple || Array.isArray(value), '`value` should be array when `mode` is `multiple` or `tags`');
  } // Syntactic sugar should use correct children type


  if (children) {
    var invalidateChildType = null;
    Object(toArray["a" /* default */])(children).some(function (node) {
      if (!react_default.a.isValidElement(node) || !node.type) {
        return false;
      }

      var type = node.type;

      if (type.isSelectOption) {
        return false;
      }

      if (type.isSelectOptGroup) {
        var allChildrenValid = Object(toArray["a" /* default */])(node.props.children).every(function (subNode) {
          if (!react_default.a.isValidElement(subNode) || !node.type || subNode.type.isSelectOption) {
            return true;
          }

          invalidateChildType = subNode.type;
          return false;
        });

        if (allChildrenValid) {
          return false;
        }

        return true;
      }

      invalidateChildType = type;
      return true;
    });

    if (invalidateChildType) {
      Object(warning["a" /* default */])(false, "`children` should be `Select.Option` or `Select.OptGroup` instead of `".concat(invalidateChildType.displayName || invalidateChildType.name || invalidateChildType, "`."));
    }

    Object(warning["a" /* default */])(inputValue === undefined, '`inputValue` is deprecated, please use `searchValue` instead.');
  }
}

/* harmony default export */ var warningPropsUtil = (warningPropsUtil_warningProps);
// CONCATENATED MODULE: ../node_modules/rc-select/es/Select.js











function Select_createSuper(Derived) {
  var hasNativeReflectConstruct = Select_isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = Object(getPrototypeOf["a" /* default */])(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = Object(getPrototypeOf["a" /* default */])(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return Object(possibleConstructorReturn["a" /* default */])(this, result);
  };
}

function Select_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
/**
 * To match accessibility requirement, we always provide an input in the component.
 * Other element will not set `tabIndex` to avoid `onBlur` sequence problem.
 * For focused select, we set `aria-live="polite"` to update the accessibility content.
 *
 * ref:
 * - keyboard: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role#Keyboard_interactions
 *
 * New api:
 * - listHeight
 * - listItemHeight
 * - component
 *
 * Remove deprecated api:
 * - multiple
 * - tags
 * - combobox
 * - firstActiveValue
 * - dropdownMenuStyle
 * - openClassName (Not list in api)
 *
 * Update:
 * - `backfill` only support `combobox` mode
 * - `combobox` mode not support `labelInValue` since it's meaningless
 * - `getInputElement` only support `combobox` mode
 * - `onChange` return OptionData instead of ReactNode
 * - `filterOption` `onChange` `onSelect` accept OptionData instead of ReactNode
 * - `combobox` mode trigger `onChange` will get `undefined` if no `value` match in Option
 * - `combobox` mode not support `optionLabelProp`
 */










var Select_RefSelect = generateSelector({
  prefixCls: 'rc-select',
  components: {
    optionList: es_OptionList
  },
  convertChildrenToData: legacyUtil_convertChildrenToData,
  flattenOptions: valueUtil_flattenOptions,
  getLabeledValue: valueUtil_getLabeledValue,
  filterOptions: valueUtil_filterOptions,
  isValueDisabled: valueUtil_isValueDisabled,
  findValueOption: valueUtil_findValueOption,
  warningProps: warningPropsUtil,
  fillOptionsWithMissingValue: valueUtil_fillOptionsWithMissingValue
});
/**
 * Typescript not support generic with function component,
 * we have to wrap an class component to handle this.
 */

var Select_Select = /*#__PURE__*/function (_React$Component) {
  Object(inherits["a" /* default */])(Select, _React$Component);

  var _super = Select_createSuper(Select);

  function Select() {
    var _this;

    Object(classCallCheck["a" /* default */])(this, Select);

    _this = _super.apply(this, arguments);
    _this.selectRef = react_default.a.createRef();

    _this.focus = function () {
      _this.selectRef.current.focus();
    };

    _this.blur = function () {
      _this.selectRef.current.blur();
    };

    return _this;
  }

  Object(createClass["a" /* default */])(Select, [{
    key: "render",
    value: function render() {
      return react_default.a.createElement(Select_RefSelect, Object.assign({
        ref: this.selectRef
      }, this.props));
    }
  }]);

  return Select;
}(react_default.a.Component);

Select_Select.Option = es_Option;
Select_Select.OptGroup = es_OptGroup;
/* harmony default export */ var es_Select = (Select_Select);
// CONCATENATED MODULE: ../node_modules/rc-select/es/index.js




/* harmony default export */ var rc_select_es = (es_Select);
// EXTERNAL MODULE: ../node_modules/@ant-design/icons/DownOutlined.js
var DownOutlined = __webpack_require__("87BP");
var DownOutlined_default = /*#__PURE__*/__webpack_require__.n(DownOutlined);

// EXTERNAL MODULE: ../node_modules/@ant-design/icons/LoadingOutlined.js
var LoadingOutlined = __webpack_require__("yRvC");
var LoadingOutlined_default = /*#__PURE__*/__webpack_require__.n(LoadingOutlined);

// EXTERNAL MODULE: ../node_modules/@ant-design/icons/CheckOutlined.js
var icons_CheckOutlined = __webpack_require__("MMYs");
var CheckOutlined_default = /*#__PURE__*/__webpack_require__.n(icons_CheckOutlined);

// EXTERNAL MODULE: ../node_modules/@ant-design/icons/CloseOutlined.js
var CloseOutlined = __webpack_require__("EWXb");
var CloseOutlined_default = /*#__PURE__*/__webpack_require__.n(CloseOutlined);

// EXTERNAL MODULE: ../node_modules/@ant-design/icons/CloseCircleFilled.js
var CloseCircleFilled = __webpack_require__("g4/d");
var CloseCircleFilled_default = /*#__PURE__*/__webpack_require__.n(CloseCircleFilled);

// EXTERNAL MODULE: ../node_modules/@ant-design/icons/SearchOutlined.js
var icons_SearchOutlined = __webpack_require__("jLVx");
var SearchOutlined_default = /*#__PURE__*/__webpack_require__.n(icons_SearchOutlined);

// CONCATENATED MODULE: ../node_modules/antd/es/select/utils/iconUtil.js







function getIcons(_ref) {
  var suffixIcon = _ref.suffixIcon,
      clearIcon = _ref.clearIcon,
      menuItemSelectedIcon = _ref.menuItemSelectedIcon,
      removeIcon = _ref.removeIcon,
      loading = _ref.loading,
      multiple = _ref.multiple,
      prefixCls = _ref.prefixCls; // Clear Icon

  var mergedClearIcon = clearIcon;

  if (!clearIcon) {
    mergedClearIcon = /*#__PURE__*/react["createElement"](CloseCircleFilled_default.a, null);
  } // Arrow item icon


  var mergedSuffixIcon = null;

  if (suffixIcon !== undefined) {
    mergedSuffixIcon = suffixIcon;
  } else if (loading) {
    mergedSuffixIcon = /*#__PURE__*/react["createElement"](LoadingOutlined_default.a, {
      spin: true
    });
  } else {
    var iconCls = "".concat(prefixCls, "-suffix");

    mergedSuffixIcon = function mergedSuffixIcon(_ref2) {
      var open = _ref2.open,
          showSearch = _ref2.showSearch;

      if (open && showSearch) {
        return /*#__PURE__*/react["createElement"](SearchOutlined_default.a, {
          className: iconCls
        });
      }

      return /*#__PURE__*/react["createElement"](DownOutlined_default.a, {
        className: iconCls
      });
    };
  } // Checked item icon


  var mergedItemIcon = null;

  if (menuItemSelectedIcon !== undefined) {
    mergedItemIcon = menuItemSelectedIcon;
  } else if (multiple) {
    mergedItemIcon = /*#__PURE__*/react["createElement"](CheckOutlined_default.a, null);
  } else {
    mergedItemIcon = null;
  }

  var mergedRemoveIcon = null;

  if (removeIcon !== undefined) {
    mergedRemoveIcon = removeIcon;
  } else {
    mergedRemoveIcon = /*#__PURE__*/react["createElement"](CloseOutlined_default.a, null);
  }

  return {
    clearIcon: mergedClearIcon,
    suffixIcon: mergedSuffixIcon,
    itemIcon: mergedItemIcon,
    removeIcon: mergedRemoveIcon
  };
}
// EXTERNAL MODULE: ../node_modules/antd/es/config-provider/SizeContext.js
var SizeContext = __webpack_require__("hxuA");

// CONCATENATED MODULE: ../node_modules/antd/es/select/index.js











function select_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    select_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    select_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return select_typeof(obj);
}

function select_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function select_extends() {
  select_extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return select_extends.apply(this, arguments);
}

function select_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function select_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function select_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) select_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) select_defineProperties(Constructor, staticProps);
  return Constructor;
}

function select_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) select_setPrototypeOf(subClass, superClass);
}

function select_setPrototypeOf(o, p) {
  select_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return select_setPrototypeOf(o, p);
}

function select_createSuper(Derived) {
  var hasNativeReflectConstruct = select_isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = select_getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = select_getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return select_possibleConstructorReturn(this, result);
  };
}

function select_possibleConstructorReturn(self, call) {
  if (call && (select_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return select_assertThisInitialized(self);
}

function select_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function select_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function select_getPrototypeOf(o) {
  select_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return select_getPrototypeOf(o);
} // TODO: 4.0 - codemod should help to change `filterOption` to support node props.








 // We still use class here since `forwardRef` not support generic in typescript

var select_Select = /*#__PURE__*/function (_React$Component) {
  select_inherits(Select, _React$Component);

  var _super = select_createSuper(Select);

  function Select() {
    var _this;

    select_classCallCheck(this, Select);

    _this = _super.apply(this, arguments);
    _this.selectRef = /*#__PURE__*/react["createRef"]();

    _this.focus = function () {
      if (_this.selectRef.current) {
        _this.selectRef.current.focus();
      }
    };

    _this.blur = function () {
      if (_this.selectRef.current) {
        _this.selectRef.current.blur();
      }
    };

    _this.getMode = function () {
      var mode = _this.props.mode;

      if (mode === 'combobox') {
        return undefined;
      }

      if (mode === Select.SECRET_COMBOBOX_MODE_DO_NOT_USE) {
        return 'combobox';
      }

      return mode;
    };

    _this.renderSelect = function (_ref) {
      var getContextPopupContainer = _ref.getPopupContainer,
          getPrefixCls = _ref.getPrefixCls,
          renderEmpty = _ref.renderEmpty,
          direction = _ref.direction,
          virtual = _ref.virtual,
          dropdownMatchSelectWidth = _ref.dropdownMatchSelectWidth;
      var _this$props = _this.props,
          customizePrefixCls = _this$props.prefixCls,
          notFoundContent = _this$props.notFoundContent,
          className = _this$props.className,
          customizeSize = _this$props.size,
          _this$props$listHeigh = _this$props.listHeight,
          listHeight = _this$props$listHeigh === void 0 ? 256 : _this$props$listHeigh,
          _this$props$listItemH = _this$props.listItemHeight,
          listItemHeight = _this$props$listItemH === void 0 ? 24 : _this$props$listItemH,
          getPopupContainer = _this$props.getPopupContainer,
          dropdownClassName = _this$props.dropdownClassName,
          bordered = _this$props.bordered;
      var prefixCls = getPrefixCls('select', customizePrefixCls);

      var mode = _this.getMode();

      var isMultiple = mode === 'multiple' || mode === 'tags'; // ===================== Empty =====================

      var mergedNotFound;

      if (notFoundContent !== undefined) {
        mergedNotFound = notFoundContent;
      } else if (mode === 'combobox') {
        mergedNotFound = null;
      } else {
        mergedNotFound = renderEmpty('Select');
      } // ===================== Icons =====================


      var _getIcons = getIcons(select_extends(select_extends({}, _this.props), {
        multiple: isMultiple,
        prefixCls: prefixCls
      })),
          suffixIcon = _getIcons.suffixIcon,
          itemIcon = _getIcons.itemIcon,
          removeIcon = _getIcons.removeIcon,
          clearIcon = _getIcons.clearIcon;

      var selectProps = Object(omit_js_es["a" /* default */])(_this.props, ['prefixCls', 'suffixIcon', 'itemIcon', 'removeIcon', 'clearIcon', 'size', 'bordered']);
      var rcSelectRtlDropDownClassName = classnames_default()(dropdownClassName, select_defineProperty({}, "".concat(prefixCls, "-dropdown-").concat(direction), direction === 'rtl'));
      return /*#__PURE__*/react["createElement"](SizeContext["b" /* default */].Consumer, null, function (size) {
        var _classNames2;

        var mergedSize = customizeSize || size;
        var mergedClassName = classnames_default()(className, (_classNames2 = {}, select_defineProperty(_classNames2, "".concat(prefixCls, "-lg"), mergedSize === 'large'), select_defineProperty(_classNames2, "".concat(prefixCls, "-sm"), mergedSize === 'small'), select_defineProperty(_classNames2, "".concat(prefixCls, "-rtl"), direction === 'rtl'), select_defineProperty(_classNames2, "".concat(prefixCls, "-borderless"), !bordered), _classNames2));
        return /*#__PURE__*/react["createElement"](rc_select_es, select_extends({
          ref: _this.selectRef,
          virtual: virtual,
          dropdownMatchSelectWidth: dropdownMatchSelectWidth
        }, selectProps, {
          listHeight: listHeight,
          listItemHeight: listItemHeight,
          mode: mode,
          prefixCls: prefixCls,
          direction: direction,
          inputIcon: suffixIcon,
          menuItemSelectedIcon: itemIcon,
          removeIcon: removeIcon,
          clearIcon: clearIcon,
          notFoundContent: mergedNotFound,
          className: mergedClassName,
          getPopupContainer: getPopupContainer || getContextPopupContainer,
          dropdownClassName: rcSelectRtlDropDownClassName
        }));
      });
    };

    return _this;
  }

  select_createClass(Select, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/react["createElement"](config_provider_context["a" /* ConfigConsumer */], null, this.renderSelect);
    }
  }]);

  return Select;
}(react["Component"]);

select_Select.Option = es_Option;
select_Select.OptGroup = es_OptGroup;
select_Select.SECRET_COMBOBOX_MODE_DO_NOT_USE = 'SECRET_COMBOBOX_MODE_DO_NOT_USE';
select_Select.defaultProps = {
  transitionName: 'slide-up',
  choiceTransitionName: 'zoom',
  bordered: true
};
/* harmony default export */ var es_select = (select_Select);
// EXTERNAL MODULE: ../node_modules/react-use/esm/useMedia.js + 1 modules
var useMedia = __webpack_require__("K4Ra");

// EXTERNAL MODULE: ../node_modules/react-i18next/dist/es/useTranslation.js
var useTranslation = __webpack_require__("egL6");

// CONCATENATED MODULE: ../node_modules/@ant-design/icons-svg/es/asn/MenuOutlined.js
// This icon file is generated automatically.
var MenuOutlined_MenuOutlined = {
  "icon": {
    "tag": "svg",
    "attrs": {
      "viewBox": "64 64 896 896",
      "focusable": "false"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "d": "M904 160H120c-4.4 0-8 3.6-8 8v64c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-64c0-4.4-3.6-8-8-8zm0 624H120c-4.4 0-8 3.6-8 8v64c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-64c0-4.4-3.6-8-8-8zm0-312H120c-4.4 0-8 3.6-8 8v64c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-64c0-4.4-3.6-8-8-8z"
      }
    }]
  },
  "name": "menu",
  "theme": "outlined"
};
/* harmony default export */ var asn_MenuOutlined = (MenuOutlined_MenuOutlined);
// EXTERNAL MODULE: ../node_modules/@ant-design/icons/es/components/AntdIcon.js + 2 modules
var AntdIcon = __webpack_require__("uoK5");

// CONCATENATED MODULE: ../node_modules/@ant-design/icons/es/icons/MenuOutlined.js

// GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY




var icons_MenuOutlined_MenuOutlined = function MenuOutlined(props, ref) {
  return react["createElement"](AntdIcon["a" /* default */], Object.assign({}, props, {
    ref: ref,
    icon: asn_MenuOutlined
  }));
};

icons_MenuOutlined_MenuOutlined.displayName = 'MenuOutlined';
/* harmony default export */ var icons_MenuOutlined = (react["forwardRef"](icons_MenuOutlined_MenuOutlined));
// CONCATENATED MODULE: ../node_modules/@ant-design/icons-svg/es/asn/CheckOutlined.js
// This icon file is generated automatically.
var CheckOutlined_CheckOutlined = {
  "icon": {
    "tag": "svg",
    "attrs": {
      "viewBox": "64 64 896 896",
      "focusable": "false"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "d": "M912 190h-69.9c-9.8 0-19.1 4.5-25.1 12.2L404.7 724.5 207 474a32 32 0 00-25.1-12.2H112c-6.7 0-10.4 7.7-6.3 12.9l273.9 347c12.8 16.2 37.4 16.2 50.3 0l488.4-618.9c4.1-5.1.4-12.8-6.3-12.8z"
      }
    }]
  },
  "name": "check",
  "theme": "outlined"
};
/* harmony default export */ var asn_CheckOutlined = (CheckOutlined_CheckOutlined);
// CONCATENATED MODULE: ../node_modules/@ant-design/icons/es/icons/CheckOutlined.js

// GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY




var icons_CheckOutlined_CheckOutlined = function CheckOutlined(props, ref) {
  return react["createElement"](AntdIcon["a" /* default */], Object.assign({}, props, {
    ref: ref,
    icon: asn_CheckOutlined
  }));
};

icons_CheckOutlined_CheckOutlined.displayName = 'CheckOutlined';
/* harmony default export */ var es_icons_CheckOutlined = (react["forwardRef"](icons_CheckOutlined_CheckOutlined));
// CONCATENATED MODULE: ../node_modules/@ant-design/icons-svg/es/asn/GithubOutlined.js
// This icon file is generated automatically.
var GithubOutlined_GithubOutlined = {
  "icon": {
    "tag": "svg",
    "attrs": {
      "viewBox": "64 64 896 896",
      "focusable": "false"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "d": "M511.6 76.3C264.3 76.2 64 276.4 64 523.5 64 718.9 189.3 885 363.8 946c23.5 5.9 19.9-10.8 19.9-22.2v-77.5c-135.7 15.9-141.2-73.9-150.3-88.9C215 726 171.5 718 184.5 703c30.9-15.9 62.4 4 98.9 57.9 26.4 39.1 77.9 32.5 104 26 5.7-23.5 17.9-44.5 34.7-60.8-140.6-25.2-199.2-111-199.2-213 0-49.5 16.3-95 48.3-131.7-20.4-60.5 1.9-112.3 4.9-120 58.1-5.2 118.5 41.6 123.2 45.3 33-8.9 70.7-13.6 112.9-13.6 42.4 0 80.2 4.9 113.5 13.9 11.3-8.6 67.3-48.8 121.3-43.9 2.9 7.7 24.7 58.3 5.5 118 32.4 36.8 48.9 82.7 48.9 132.3 0 102.2-59 188.1-200 212.9a127.5 127.5 0 0138.1 91v112.5c.8 9 0 17.9 15 17.9 177.1-59.7 304.6-227 304.6-424.1 0-247.2-200.4-447.3-447.5-447.3z"
      }
    }]
  },
  "name": "github",
  "theme": "outlined"
};
/* harmony default export */ var asn_GithubOutlined = (GithubOutlined_GithubOutlined);
// CONCATENATED MODULE: ../node_modules/@ant-design/icons/es/icons/GithubOutlined.js

// GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY




var icons_GithubOutlined_GithubOutlined = function GithubOutlined(props, ref) {
  return react["createElement"](AntdIcon["a" /* default */], Object.assign({}, props, {
    ref: ref,
    icon: asn_GithubOutlined
  }));
};

icons_GithubOutlined_GithubOutlined.displayName = 'GithubOutlined';
/* harmony default export */ var icons_GithubOutlined = (react["forwardRef"](icons_GithubOutlined_GithubOutlined));
// EXTERNAL MODULE: ../node_modules/git-url-parse/lib/index.js
var lib = __webpack_require__("XVYZ");
var lib_default = /*#__PURE__*/__webpack_require__.n(lib);

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.search.js
var es6_regexp_search = __webpack_require__("nsbO");

// CONCATENATED MODULE: ../node_modules/@ant-design/icons-svg/es/asn/SearchOutlined.js
// This icon file is generated automatically.
var SearchOutlined_SearchOutlined = {
  "icon": {
    "tag": "svg",
    "attrs": {
      "viewBox": "64 64 896 896",
      "focusable": "false"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "d": "M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0011.6 0l43.6-43.5a8.2 8.2 0 000-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z"
      }
    }]
  },
  "name": "search",
  "theme": "outlined"
};
/* harmony default export */ var asn_SearchOutlined = (SearchOutlined_SearchOutlined);
// CONCATENATED MODULE: ../node_modules/@ant-design/icons/es/icons/SearchOutlined.js

// GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY




var icons_SearchOutlined_SearchOutlined = function SearchOutlined(props, ref) {
  return react["createElement"](AntdIcon["a" /* default */], Object.assign({}, props, {
    ref: ref,
    icon: asn_SearchOutlined
  }));
};

icons_SearchOutlined_SearchOutlined.displayName = 'SearchOutlined';
/* harmony default export */ var es_icons_SearchOutlined = (react["forwardRef"](icons_SearchOutlined_SearchOutlined));
// EXTERNAL MODULE: ../@antv/gatsby-theme-antv/site/components/Search.module.less
var Search_module = __webpack_require__("Bytu");
var Search_module_default = /*#__PURE__*/__webpack_require__.n(Search_module);

// CONCATENATED MODULE: ../@antv/gatsby-theme-antv/site/components/Search.tsx







function initDocSearch(_ref) {
  var docsearch = _ref.docsearch,
      lang = _ref.lang,
      docsearchOptions = _ref.docsearchOptions;

  var _ref2 = docsearchOptions || {},
      _ref2$apiKey = _ref2.apiKey,
      apiKey = _ref2$apiKey === void 0 ? '194b1be7fb1254c787f4e036912af3eb' : _ref2$apiKey,
      _ref2$indexName = _ref2.indexName,
      indexName = _ref2$indexName === void 0 ? 'antv' : _ref2$indexName;

  docsearch({
    apiKey: apiKey,
    indexName: indexName,
    inputSelector: "." + Search_module_default.a.input,
    algoliaOptions: {
      facetFilters: ["tags:" + lang]
    },
    transformData: function transformData(hits) {
      hits.forEach(function (hit) {
        /* eslint-disable no-param-reassign */
        hit.url = hit.url.replace('g2.antv.vision', window.location.host);
        hit.url = hit.url.replace('g6.antv.vision', window.location.host);
        hit.url = hit.url.replace('f2.antv.vision', window.location.host);
        hit.url = hit.url.replace('l7.antv.vision', window.location.host);
        hit.url = hit.url.replace('g2plot.antv.vision', window.location.host);
        hit.url = hit.url.replace('graphin.antv.vision', window.location.host);
        hit.url = hit.url.replace('https:', window.location.protocol);
        hit.url = hit.url.replace('#gatsby-focus-wrapper', '');
        /* eslint-enable no-param-reassign */
      });
      return hits;
    },
    debug: false // Set debug to true if you want to inspect the dropdown

  });
}

var Search_Search = function Search(_ref3) {
  var docsearchOptions = _ref3.docsearchOptions;

  var _useTranslation = Object(useTranslation["a" /* useTranslation */])(),
      t = _useTranslation.t,
      i18n = _useTranslation.i18n;

  Object(react["useEffect"])(function () {
    if (typeof window !== 'undefined') {
      __webpack_require__.e(/* import() */ 0).then(__webpack_require__.t.bind(null, "ZrJC", 7)).then(function (_ref4) {
        var docsearch = _ref4.default;
        initDocSearch({
          docsearch: docsearch,
          lang: i18n.language,
          docsearchOptions: docsearchOptions
        });
      });
    }
  }, []);
  return /*#__PURE__*/react_default.a.createElement("label", {
    className: Search_module_default.a.search,
    htmlFor: "search"
  }, /*#__PURE__*/react_default.a.createElement(es_icons_SearchOutlined, {
    className: Search_module_default.a.icon
  }), /*#__PURE__*/react_default.a.createElement("input", {
    className: Search_module_default.a.input,
    id: "search",
    placeholder: t('搜索…')
  }));
};

/* harmony default export */ var components_Search = (Search_Search);
// EXTERNAL MODULE: ../@antv/gatsby-theme-antv/site/components/Product.module.less
var Product_module = __webpack_require__("j2P5");
var Product_module_default = /*#__PURE__*/__webpack_require__.n(Product_module);

// CONCATENATED MODULE: ../@antv/gatsby-theme-antv/site/components/Product.tsx







var getTarget = function getTarget(url) {
  return url.startsWith('http') && !url.includes('gitee.io') && !url.includes('antv.vision') ? '_blank' : '_self';
};

var Product_Product = function Product(_ref) {
  var name = _ref.name,
      icon = _ref.icon,
      _ref$url = _ref.url,
      url = _ref$url === void 0 ? '' : _ref$url,
      slogan = _ref.slogan,
      description = _ref.description,
      _ref$links = _ref.links,
      links = _ref$links === void 0 ? [] : _ref$links,
      style = _ref.style,
      language = _ref.language;
  return /*#__PURE__*/react_default.a.createElement("li", {
    className: Product_module_default.a.product,
    style: style
  }, /*#__PURE__*/react_default.a.createElement("a", {
    href: url,
    target: getTarget(url)
  }, /*#__PURE__*/react_default.a.createElement("img", {
    alt: name,
    src: icon
  })), /*#__PURE__*/react_default.a.createElement("div", {
    className: Product_module_default.a.productContent
  }, /*#__PURE__*/react_default.a.createElement("a", {
    href: url,
    target: getTarget(url)
  }, /*#__PURE__*/react_default.a.createElement("h4", null, name, /*#__PURE__*/react_default.a.createElement("span", {
    className: Product_module_default.a.productSlogan,
    style: {
      opacity: language === 'en' ? 0.7 : ''
    }
  }, slogan))), /*#__PURE__*/react_default.a.createElement("div", {
    className: Product_module_default.a.productDescription
  }, description), /*#__PURE__*/react_default.a.createElement("div", {
    className: Product_module_default.a.productLinks
  }, links.slice(0, 2).map(function (item) {
    return /*#__PURE__*/react_default.a.createElement("a", {
      href: item.url,
      target: getTarget(item.url || ''),
      key: item.url
    }, item.title);
  }))));
};

/* harmony default export */ var components_Product = (Product_Product);
// EXTERNAL MODULE: ../node_modules/@ant-design/icons/es/icons/HomeOutlined.js + 1 modules
var HomeOutlined = __webpack_require__("PrI8");

// CONCATENATED MODULE: ../node_modules/@ant-design/icons-svg/es/asn/PieChartOutlined.js
// This icon file is generated automatically.
var PieChartOutlined_PieChartOutlined = {
  "icon": {
    "tag": "svg",
    "attrs": {
      "viewBox": "64 64 896 896",
      "focusable": "false"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "d": "M864 518H506V160c0-4.4-3.6-8-8-8h-26a398.46 398.46 0 00-282.8 117.1 398.19 398.19 0 00-85.7 127.1A397.61 397.61 0 0072 552a398.46 398.46 0 00117.1 282.8c36.7 36.7 79.5 65.6 127.1 85.7A397.61 397.61 0 00472 952a398.46 398.46 0 00282.8-117.1c36.7-36.7 65.6-79.5 85.7-127.1A397.61 397.61 0 00872 552v-26c0-4.4-3.6-8-8-8zM705.7 787.8A331.59 331.59 0 01470.4 884c-88.1-.4-170.9-34.9-233.2-97.2C174.5 724.1 140 640.7 140 552c0-88.7 34.5-172.1 97.2-234.8 54.6-54.6 124.9-87.9 200.8-95.5V586h364.3c-7.7 76.3-41.3 147-96.6 201.8zM952 462.4l-2.6-28.2c-8.5-92.1-49.4-179-115.2-244.6A399.4 399.4 0 00589 74.6L560.7 72c-4.7-.4-8.7 3.2-8.7 7.9V464c0 4.4 3.6 8 8 8l384-1c4.7 0 8.4-4 8-8.6zm-332.2-58.2V147.6a332.24 332.24 0 01166.4 89.8c45.7 45.6 77 103.6 90 166.1l-256.4.7z"
      }
    }]
  },
  "name": "pie-chart",
  "theme": "outlined"
};
/* harmony default export */ var asn_PieChartOutlined = (PieChartOutlined_PieChartOutlined);
// CONCATENATED MODULE: ../node_modules/@ant-design/icons/es/icons/PieChartOutlined.js

// GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY




var icons_PieChartOutlined_PieChartOutlined = function PieChartOutlined(props, ref) {
  return react["createElement"](AntdIcon["a" /* default */], Object.assign({}, props, {
    ref: ref,
    icon: asn_PieChartOutlined
  }));
};

icons_PieChartOutlined_PieChartOutlined.displayName = 'PieChartOutlined';
/* harmony default export */ var icons_PieChartOutlined = (react["forwardRef"](icons_PieChartOutlined_PieChartOutlined));
// CONCATENATED MODULE: ../node_modules/@ant-design/icons-svg/es/asn/ReadOutlined.js
// This icon file is generated automatically.
var ReadOutlined_ReadOutlined = {
  "icon": {
    "tag": "svg",
    "attrs": {
      "viewBox": "64 64 896 896",
      "focusable": "false"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "d": "M928 161H699.2c-49.1 0-97.1 14.1-138.4 40.7L512 233l-48.8-31.3A255.2 255.2 0 00324.8 161H96c-17.7 0-32 14.3-32 32v568c0 17.7 14.3 32 32 32h228.8c49.1 0 97.1 14.1 138.4 40.7l44.4 28.6c1.3.8 2.8 1.3 4.3 1.3s3-.4 4.3-1.3l44.4-28.6C602 807.1 650.1 793 699.2 793H928c17.7 0 32-14.3 32-32V193c0-17.7-14.3-32-32-32zM324.8 721H136V233h188.8c35.4 0 69.8 10.1 99.5 29.2l48.8 31.3 6.9 4.5v462c-47.6-25.6-100.8-39-155.2-39zm563.2 0H699.2c-54.4 0-107.6 13.4-155.2 39V298l6.9-4.5 48.8-31.3c29.7-19.1 64.1-29.2 99.5-29.2H888v488zM396.9 361H211.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5zm223.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c0-4.1-3.2-7.5-7.1-7.5H627.1c-3.9 0-7.1 3.4-7.1 7.5zM396.9 501H211.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5zm416 0H627.1c-3.9 0-7.1 3.4-7.1 7.5v45c0 4.1 3.2 7.5 7.1 7.5h185.7c3.9 0 7.1-3.4 7.1-7.5v-45c.1-4.1-3.1-7.5-7-7.5z"
      }
    }]
  },
  "name": "read",
  "theme": "outlined"
};
/* harmony default export */ var asn_ReadOutlined = (ReadOutlined_ReadOutlined);
// CONCATENATED MODULE: ../node_modules/@ant-design/icons/es/icons/ReadOutlined.js

// GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY




var icons_ReadOutlined_ReadOutlined = function ReadOutlined(props, ref) {
  return react["createElement"](AntdIcon["a" /* default */], Object.assign({}, props, {
    ref: ref,
    icon: asn_ReadOutlined
  }));
};

icons_ReadOutlined_ReadOutlined.displayName = 'ReadOutlined';
/* harmony default export */ var icons_ReadOutlined = (react["forwardRef"](icons_ReadOutlined_ReadOutlined));
// CONCATENATED MODULE: ../node_modules/@ant-design/icons-svg/es/asn/HistoryOutlined.js
// This icon file is generated automatically.
var HistoryOutlined_HistoryOutlined = {
  "icon": {
    "tag": "svg",
    "attrs": {
      "viewBox": "64 64 896 896",
      "focusable": "false"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "d": "M536.1 273H488c-4.4 0-8 3.6-8 8v275.3c0 2.6 1.2 5 3.3 6.5l165.3 120.7c3.6 2.6 8.6 1.9 11.2-1.7l28.6-39c2.7-3.7 1.9-8.7-1.7-11.2L544.1 528.5V281c0-4.4-3.6-8-8-8zm219.8 75.2l156.8 38.3c5 1.2 9.9-2.6 9.9-7.7l.8-161.5c0-6.7-7.7-10.5-12.9-6.3L752.9 334.1a8 8 0 003 14.1zm167.7 301.1l-56.7-19.5a8 8 0 00-10.1 4.8c-1.9 5.1-3.9 10.1-6 15.1-17.8 42.1-43.3 80-75.9 112.5a353 353 0 01-112.5 75.9 352.18 352.18 0 01-137.7 27.8c-47.8 0-94.1-9.3-137.7-27.8a353 353 0 01-112.5-75.9c-32.5-32.5-58-70.4-75.9-112.5A353.44 353.44 0 01171 512c0-47.8 9.3-94.2 27.8-137.8 17.8-42.1 43.3-80 75.9-112.5a353 353 0 01112.5-75.9C430.6 167.3 477 158 524.8 158s94.1 9.3 137.7 27.8A353 353 0 01775 261.7c10.2 10.3 19.8 21 28.6 32.3l59.8-46.8C784.7 146.6 662.2 81.9 524.6 82 285 82.1 92.6 276.7 95 516.4 97.4 751.9 288.9 942 524.8 942c185.5 0 343.5-117.6 403.7-282.3 1.5-4.2-.7-8.9-4.9-10.4z"
      }
    }]
  },
  "name": "history",
  "theme": "outlined"
};
/* harmony default export */ var asn_HistoryOutlined = (HistoryOutlined_HistoryOutlined);
// CONCATENATED MODULE: ../node_modules/@ant-design/icons/es/icons/HistoryOutlined.js

// GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY




var icons_HistoryOutlined_HistoryOutlined = function HistoryOutlined(props, ref) {
  return react["createElement"](AntdIcon["a" /* default */], Object.assign({}, props, {
    ref: ref,
    icon: asn_HistoryOutlined
  }));
};

icons_HistoryOutlined_HistoryOutlined.displayName = 'HistoryOutlined';
/* harmony default export */ var icons_HistoryOutlined = (react["forwardRef"](icons_HistoryOutlined_HistoryOutlined));
// CONCATENATED MODULE: ../node_modules/@ant-design/icons-svg/es/asn/AreaChartOutlined.js
// This icon file is generated automatically.
var AreaChartOutlined_AreaChartOutlined = {
  "icon": {
    "tag": "svg",
    "attrs": {
      "viewBox": "64 64 896 896",
      "focusable": "false"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "d": "M888 792H200V168c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v688c0 4.4 3.6 8 8 8h752c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-616-64h536c4.4 0 8-3.6 8-8V284c0-7.2-8.7-10.7-13.7-5.7L592 488.6l-125.4-124a8.03 8.03 0 00-11.3 0l-189 189.6a7.87 7.87 0 00-2.3 5.6V720c0 4.4 3.6 8 8 8z"
      }
    }]
  },
  "name": "area-chart",
  "theme": "outlined"
};
/* harmony default export */ var asn_AreaChartOutlined = (AreaChartOutlined_AreaChartOutlined);
// CONCATENATED MODULE: ../node_modules/@ant-design/icons/es/icons/AreaChartOutlined.js

// GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY




var icons_AreaChartOutlined_AreaChartOutlined = function AreaChartOutlined(props, ref) {
  return react["createElement"](AntdIcon["a" /* default */], Object.assign({}, props, {
    ref: ref,
    icon: asn_AreaChartOutlined
  }));
};

icons_AreaChartOutlined_AreaChartOutlined.displayName = 'AreaChartOutlined';
/* harmony default export */ var icons_AreaChartOutlined = (react["forwardRef"](icons_AreaChartOutlined_AreaChartOutlined));
// CONCATENATED MODULE: ../node_modules/@ant-design/icons-svg/es/asn/YuqueOutlined.js
// This icon file is generated automatically.
var YuqueOutlined_YuqueOutlined = {
  "icon": {
    "tag": "svg",
    "attrs": {
      "viewBox": "64 64 896 896",
      "focusable": "false"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "d": "M854.6 370.6c-9.9-39.4 9.9-102.2 73.4-124.4l-67.9-3.6s-25.7-90-143.6-98c-117.8-8.1-194.9-3-195-3 .1 0 87.4 55.6 52.4 154.7-25.6 52.5-65.8 95.6-108.8 144.7-1.3 1.3-2.5 2.6-3.5 3.7C319.4 605 96 860 96 860c245.9 64.4 410.7-6.3 508.2-91.1 20.5-.2 35.9-.3 46.3-.3 135.8 0 250.6-117.6 245.9-248.4-3.2-89.9-31.9-110.2-41.8-149.6zm-204.1 334c-10.6 0-26.2.1-46.8.3l-23.6.2-17.8 15.5c-47.1 41-104.4 71.5-171.4 87.6-52.5 12.6-110 16.2-172.7 9.6 18-20.5 36.5-41.6 55.4-63.1 92-104.6 173.8-197.5 236.9-268.5l1.4-1.4 1.3-1.5c4.1-4.6 20.6-23.3 24.7-28.1 9.7-11.1 17.3-19.9 24.5-28.6 30.7-36.7 52.2-67.8 69-102.2l1.6-3.3 1.2-3.4c13.7-38.8 15.4-76.9 6.2-112.8 22.5.7 46.5 1.9 71.7 3.6 33.3 2.3 55.5 12.9 71.1 29.2 5.8 6 10.2 12.5 13.4 18.7 1 2 1.7 3.6 2.3 5l5 17.7c-15.7 34.5-19.9 73.3-11.4 107.2 3 11.8 6.9 22.4 12.3 34.4 2.1 4.7 9.5 20.1 11 23.3 10.3 22.7 15.4 43 16.7 78.7 3.3 94.6-82.7 181.9-182 181.9z"
      }
    }]
  },
  "name": "yuque",
  "theme": "outlined"
};
/* harmony default export */ var asn_YuqueOutlined = (YuqueOutlined_YuqueOutlined);
// CONCATENATED MODULE: ../node_modules/@ant-design/icons/es/icons/YuqueOutlined.js

// GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY




var icons_YuqueOutlined_YuqueOutlined = function YuqueOutlined(props, ref) {
  return react["createElement"](AntdIcon["a" /* default */], Object.assign({}, props, {
    ref: ref,
    icon: asn_YuqueOutlined
  }));
};

icons_YuqueOutlined_YuqueOutlined.displayName = 'YuqueOutlined';
/* harmony default export */ var icons_YuqueOutlined = (react["forwardRef"](icons_YuqueOutlined_YuqueOutlined));
// CONCATENATED MODULE: ../node_modules/@ant-design/icons-svg/es/asn/DingdingOutlined.js
// This icon file is generated automatically.
var DingdingOutlined_DingdingOutlined = {
  "icon": {
    "tag": "svg",
    "attrs": {
      "viewBox": "64 64 896 896",
      "focusable": "false"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "d": "M573.7 252.5C422.5 197.4 201.3 96.7 201.3 96.7c-15.7-4.1-17.9 11.1-17.9 11.1-5 61.1 33.6 160.5 53.6 182.8 19.9 22.3 319.1 113.7 319.1 113.7S326 357.9 270.5 341.9c-55.6-16-37.9 17.8-37.9 17.8 11.4 61.7 64.9 131.8 107.2 138.4 42.2 6.6 220.1 4 220.1 4s-35.5 4.1-93.2 11.9c-42.7 5.8-97 12.5-111.1 17.8-33.1 12.5 24 62.6 24 62.6 84.7 76.8 129.7 50.5 129.7 50.5 33.3-10.7 61.4-18.5 85.2-24.2L565 743.1h84.6L603 928l205.3-271.9H700.8l22.3-38.7c.3.5.4.8.4.8S799.8 496.1 829 433.8l.6-1h-.1c5-10.8 8.6-19.7 10-25.8 17-71.3-114.5-99.4-265.8-154.5z"
      }
    }]
  },
  "name": "dingding",
  "theme": "outlined"
};
/* harmony default export */ var asn_DingdingOutlined = (DingdingOutlined_DingdingOutlined);
// CONCATENATED MODULE: ../node_modules/@ant-design/icons/es/icons/DingdingOutlined.js

// GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY




var icons_DingdingOutlined_DingdingOutlined = function DingdingOutlined(props, ref) {
  return react["createElement"](AntdIcon["a" /* default */], Object.assign({}, props, {
    ref: ref,
    icon: asn_DingdingOutlined
  }));
};

icons_DingdingOutlined_DingdingOutlined.displayName = 'DingdingOutlined';
/* harmony default export */ var icons_DingdingOutlined = (react["forwardRef"](icons_DingdingOutlined_DingdingOutlined));
// EXTERNAL MODULE: ../@antv/gatsby-theme-antv/site/utils.ts
var utils = __webpack_require__("oV81");

// CONCATENATED MODULE: ../@antv/gatsby-theme-antv/site/components/getProducts.tsx




var tuple = function tuple() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return args;
};

var Categories = tuple('basic', 'extension', 'ecology');
var ANTV_DOMAIN = 'antv.vision';
var getProducts_getProducts = function getProducts(_ref) {
  var t = _ref.t,
      language = _ref.language,
      _ref$isChinaMirrorHos = _ref.isChinaMirrorHost,
      isChinaMirrorHost = _ref$isChinaMirrorHos === void 0 ? false : _ref$isChinaMirrorHos;
  var hosts = {};
  ['g2', 'g2plot', 'g6', 'l7', 'f2', 'graphin', 'g', 'x6', 'ava'].forEach(function (name) {
    hosts[name] = isChinaMirrorHost ? Object(utils["b" /* getChinaMirrorHost */])(name + "." + ANTV_DOMAIN) : name + "." + ANTV_DOMAIN;
  });
  var products = [{
    title: 'G2',
    icon: 'https://gw.alipayobjects.com/zos/antfincdn/trEfLRh5pc/G2%252520keshihuatuxingyufa.svg',
    slogan: t('可视化引擎'),
    description: t('数据驱动，高度易用，可扩展的可视化图形语法。'),
    category: Categories[0],
    links: [{
      icon: /*#__PURE__*/react_default.a.createElement(HomeOutlined["a" /* default */], null),
      title: t('产品首页'),
      url: "https://" + hosts.g2 + "/" + language
    }, {
      icon: /*#__PURE__*/react_default.a.createElement(icons_PieChartOutlined, null),
      title: t('图表示例'),
      url: "https://" + hosts.g2 + "/" + language + "/examples"
    }, {
      icon: /*#__PURE__*/react_default.a.createElement(icons_ReadOutlined, null),
      title: t('使用文档'),
      url: "https://" + hosts.g2 + "/" + language + "/docs/manual"
    }, {
      icon: /*#__PURE__*/react_default.a.createElement(icons_HistoryOutlined, null),
      title: t('更新日志'),
      url: "https://github.com/antvis/g2/blob/master/CHANGELOG.md",
      openExternal: true
    }, {
      icon: /*#__PURE__*/react_default.a.createElement(icons_GithubOutlined, null),
      title: t('GitHub 仓库'),
      url: "https://github.com/antvis/g2",
      openExternal: true
    }, {
      icon: '🇨🇳',
      title: t('国内镜像'),
      url: "https://antv-g2.gitee.io",
      openExternal: true
    }]
  }, {
    title: 'G6',
    icon: 'https://gw.alipayobjects.com/zos/antfincdn/zS1wZZJVcJ/G6%252520tukeshihuayinqing.svg',
    slogan: t('图可视化引擎'),
    description: t('便捷的关系数据可视化引擎与图分析工具。'),
    category: Categories[0],
    links: [{
      icon: /*#__PURE__*/react_default.a.createElement(HomeOutlined["a" /* default */], null),
      title: t('产品首页'),
      url: "https://" + hosts.g6 + "/" + language
    }, {
      icon: /*#__PURE__*/react_default.a.createElement(icons_PieChartOutlined, null),
      title: t('图表示例'),
      url: "https://" + hosts.g6 + "/" + language + "/examples"
    }, {
      icon: /*#__PURE__*/react_default.a.createElement(icons_ReadOutlined, null),
      title: t('使用文档'),
      url: "https://" + hosts.g6 + "/" + language + "/docs/manual"
    }, {
      icon: /*#__PURE__*/react_default.a.createElement(icons_ReadOutlined, null),
      title: t('API 文档'),
      url: "https://" + hosts.g6 + "/" + language + "/docs/api"
    }, {
      icon: /*#__PURE__*/react_default.a.createElement(icons_HistoryOutlined, null),
      title: t('更新日志'),
      url: "https://github.com/antvis/g6/blob/master/CHANGELOG.md",
      openExternal: true
    }, {
      icon: /*#__PURE__*/react_default.a.createElement(icons_GithubOutlined, null),
      title: t('GitHub 仓库'),
      url: "https://github.com/antvis/g6",
      openExternal: true
    }, {
      icon: '🇨🇳',
      title: t('国内镜像'),
      url: "https://antv-g6.gitee.io",
      openExternal: true
    }]
  }, {
    title: 'F2',
    icon: 'https://gw.alipayobjects.com/zos/antfincdn/D%26fDbWqVkv/F2%252520yidongduankeshihuafangan.svg',
    slogan: t('移动可视化方案'),
    description: t('专注于移动端的可视化解决方案，兼容 H5/小程序/Weex 等多端环境'),
    category: Categories[0],
    links: [{
      icon: /*#__PURE__*/react_default.a.createElement(HomeOutlined["a" /* default */], null),
      title: t('产品首页'),
      url: "https://" + hosts.f2 + "/" + language
    }, {
      icon: /*#__PURE__*/react_default.a.createElement(icons_PieChartOutlined, null),
      title: t('图表示例'),
      url: "https://" + hosts.f2 + "/" + language + "/examples"
    }, {
      icon: /*#__PURE__*/react_default.a.createElement(icons_ReadOutlined, null),
      title: t('使用文档'),
      url: "https://" + hosts.f2 + "/" + language + "/docs/tutorial/getting-started"
    }, {
      icon: /*#__PURE__*/react_default.a.createElement(icons_ReadOutlined, null),
      title: t('API 文档'),
      url: "https://" + hosts.f2 + "/" + language + "/docs/api"
    }, {
      icon: /*#__PURE__*/react_default.a.createElement(icons_HistoryOutlined, null),
      title: t('更新日志'),
      url: "https://github.com/antvis/f2/blob/master/CHANGELOG.md",
      openExternal: true
    }, {
      icon: /*#__PURE__*/react_default.a.createElement(icons_GithubOutlined, null),
      title: t('GitHub 仓库'),
      url: "https://github.com/antvis/f2",
      openExternal: true
    }, {
      icon: '🇨🇳',
      title: t('国内镜像'),
      url: "https://antv-f2.gitee.io",
      openExternal: true
    }]
  }, {
    title: 'L7',
    icon: 'https://gw.alipayobjects.com/zos/antfincdn/OI%26h7HXH33/L7%252520dilikongjianshujukeshihua.svg',
    slogan: t('地理空间数据可视化'),
    description: t('高性能/高渲染质量的地理空间数据可视化框架。'),
    category: Categories[0],
    links: [{
      icon: /*#__PURE__*/react_default.a.createElement(HomeOutlined["a" /* default */], null),
      title: t('产品首页'),
      url: "https://" + hosts.l7 + "/" + language
    }, {
      icon: /*#__PURE__*/react_default.a.createElement(icons_PieChartOutlined, null),
      title: t('图表示例'),
      url: "https://" + hosts.l7 + "/" + language + "/examples"
    }, {
      icon: /*#__PURE__*/react_default.a.createElement(icons_ReadOutlined, null),
      title: t('使用文档'),
      url: "https://" + hosts.l7 + "/" + language + "/docs/tutorial"
    }, {
      icon: /*#__PURE__*/react_default.a.createElement(icons_ReadOutlined, null),
      title: t('API 文档'),
      url: "https://" + hosts.l7 + "/" + language + "/docs/api/l7"
    }, {
      icon: /*#__PURE__*/react_default.a.createElement(icons_HistoryOutlined, null),
      title: t('更新日志'),
      url: "https://github.com/antvis/L7/blob/master/CHANGELOG.md",
      openExternal: true
    }, {
      icon: /*#__PURE__*/react_default.a.createElement(icons_GithubOutlined, null),
      title: t('GitHub 仓库'),
      url: "https://github.com/antvis/L7",
      openExternal: true
    }, {
      icon: '🇨🇳',
      title: t('国内镜像'),
      url: "https://antv-l7.gitee.io",
      openExternal: true
    }]
  }, {
    title: 'G2Plot',
    icon: 'https://gw.alipayobjects.com/zos/antfincdn/SlbIagEvT7/G2plot.svg',
    slogan: t('开箱即用的图表库'),
    description: t('开箱即用、易于配置、极致体验的通用图表库。'),
    category: Categories[1],
    links: [{
      icon: /*#__PURE__*/react_default.a.createElement(HomeOutlined["a" /* default */], null),
      title: t('产品首页'),
      url: "https://" + hosts.g2plot + "/" + language
    }, {
      icon: /*#__PURE__*/react_default.a.createElement(icons_PieChartOutlined, null),
      title: t('图表示例'),
      url: "https://" + hosts.g2plot + "/" + language + "/examples"
    }, {
      icon: /*#__PURE__*/react_default.a.createElement(icons_ReadOutlined, null),
      title: t('使用文档'),
      url: "https://" + hosts.g2plot + "/" + language + "/docs/manual"
    }, {
      icon: /*#__PURE__*/react_default.a.createElement(icons_HistoryOutlined, null),
      title: t('更新日志'),
      url: "https://github.com/antvis/g2plot/blob/master/CHANGELOG.md",
      openExternal: true
    }, {
      icon: /*#__PURE__*/react_default.a.createElement(icons_GithubOutlined, null),
      title: t('GitHub 仓库'),
      url: "https://github.com/antvis/g2plot",
      openExternal: true
    }, {
      icon: '🇨🇳',
      title: t('国内镜像'),
      url: "https://antv-g2plot.gitee.io",
      openExternal: true
    }]
  }, {
    title: 'Graphin',
    icon: 'https://gw.alipayobjects.com/zos/antfincdn/0b4HzOcEJY/Graphin.svg',
    slogan: t(''),
    description: t('基于 G6 封装的图分析应用组件。'),
    category: Categories[1],
    links: [{
      icon: /*#__PURE__*/react_default.a.createElement(HomeOutlined["a" /* default */], null),
      title: t('产品首页'),
      url: "https://" + hosts.graphin + "/" + language
    }, {
      icon: /*#__PURE__*/react_default.a.createElement(icons_ReadOutlined, null),
      title: t('使用文档'),
      url: "https://" + hosts.graphin + "/" + language + "/docs/manual/introduction"
    }, {
      icon: /*#__PURE__*/react_default.a.createElement(icons_ReadOutlined, null),
      title: t('API 文档'),
      url: "https://" + hosts.graphin + "/" + language + "/docs/api/graphin"
    }, {
      icon: /*#__PURE__*/react_default.a.createElement(icons_HistoryOutlined, null),
      title: t('更新日志'),
      url: "https://github.com/antvis/graphin/blob/master/CHANGELOG.md",
      openExternal: true
    }, {
      icon: /*#__PURE__*/react_default.a.createElement(icons_GithubOutlined, null),
      title: t('GitHub 仓库'),
      url: "https://github.com/antvis/graphin",
      openExternal: true
    }, {
      icon: '🇨🇳',
      title: t('国内镜像'),
      url: "https://antv-graphin.gitee.io",
      openExternal: true
    }]
  }, {
    title: 'ChartCube',
    icon: 'https://gw.alipayobjects.com/zos/antfincdn/Zr74jx8YNX/chartcube.svg',
    slogan: t('图表魔方'),
    description: t('AntV 在线图表制作利器。'),
    category: Categories[1],
    links: [{
      icon: /*#__PURE__*/react_default.a.createElement(HomeOutlined["a" /* default */], null),
      title: t('产品首页'),
      url: "https://chartcube.alipay.com",
      openExternal: true
    }, {
      icon: /*#__PURE__*/react_default.a.createElement(icons_AreaChartOutlined, null),
      title: t('生成图表'),
      url: "https://chartcube.alipay.com/guide",
      openExternal: true
    }, {
      icon: /*#__PURE__*/react_default.a.createElement(icons_YuqueOutlined, null),
      title: t('语雀社区'),
      url: "https://www.yuque.com/chartcube",
      openExternal: true
    }, {
      icon: /*#__PURE__*/react_default.a.createElement(icons_DingdingOutlined, null),
      title: t('钉钉服务群'),
      url: "dingtalk://dingtalkclient/action/joingroup?cid=8305538734",
      openExternal: true
    }]
  }, {
    title: t('墨者学院'),
    icon: 'https://gw.alipayobjects.com/zos/antfincdn/12j36RPVldO/mozhexueyuan.svg',
    description: t('数据可视化社团'),
    category: Categories[2],
    links: [{
      title: t('学院首页'),
      url: "https://www.yuque.com/mo-college",
      openExternal: true
    }]
  }, {
    title: 'BizCharts',
    icon: 'https://gw.alipayobjects.com/zos/antfincdn/Q1pbg%26O2TM/BizCharts.svg',
    description: t('基于商业场景下的数据可视化解决方案'),
    category: Categories[2],
    links: [{
      title: t('产品首页'),
      url: 'https://bizcharts.net',
      openExternal: true
    }]
  }, {
    title: 'Viser',
    icon: 'https://gw.alipayobjects.com/zos/antfincdn/QAyW5h99HVa/Viser.svg',
    description: t('基于 G2 实现的可视化解决方案'),
    category: Categories[2],
    links: [{
      title: t('产品首页'),
      url: "https://viserjs.github.io/",
      openExternal: true
    }]
  }];
  return products;
};
// EXTERNAL MODULE: ../@antv/gatsby-theme-antv/site/hooks.ts
var hooks = __webpack_require__("b0rI");

// CONCATENATED MODULE: ../@antv/gatsby-theme-antv/site/components/Products.tsx








var Products_Products = function Products(_ref) {
  var _classNames;

  var show = _ref.show,
      _ref$rootDomain = _ref.rootDomain,
      rootDomain = _ref$rootDomain === void 0 ? '' : _ref$rootDomain,
      language = _ref.language,
      className = _ref.className;

  var _useTranslation = Object(useTranslation["a" /* useTranslation */])(),
      t = _useTranslation.t,
      i18n = _useTranslation.i18n;

  var _useChinaMirrorHost = Object(hooks["a" /* useChinaMirrorHost */])(),
      isChinaMirrorHost = _useChinaMirrorHost[0];

  var data = getProducts_getProducts({
    t: t,
    language: language || i18n.language,
    rootDomain: rootDomain,
    isChinaMirrorHost: isChinaMirrorHost
  });
  return /*#__PURE__*/react_default.a.createElement(react_default.a.Fragment, null, /*#__PURE__*/react_default.a.createElement("div", {
    className: classnames_default()(Product_module_default.a.products, className, (_classNames = {}, _classNames[Product_module_default.a.show] = !!show, _classNames))
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: Product_module_default.a.container
  }, /*#__PURE__*/react_default.a.createElement("h3", null, t('基础产品')), /*#__PURE__*/react_default.a.createElement("ul", null, data.filter(function (item) {
    return item.category === 'basic';
  }).map(function (product) {
    return /*#__PURE__*/react_default.a.createElement(components_Product, {
      key: product.title,
      name: product.title,
      slogan: product.slogan || '',
      description: product.description,
      url: (product.links || [])[0].url,
      icon: product.icon,
      links: product.links,
      language: language || i18n.language
    });
  })), /*#__PURE__*/react_default.a.createElement("h3", null, t('拓展产品')), /*#__PURE__*/react_default.a.createElement("ul", null, data.filter(function (item) {
    return item.category === 'extension';
  }).map(function (product) {
    return /*#__PURE__*/react_default.a.createElement(components_Product, {
      key: product.title,
      name: product.title,
      slogan: product.slogan || '',
      description: product.description,
      url: (product.links || [])[0].url,
      icon: product.icon,
      links: product.links,
      language: language || i18n.language
    });
  })), /*#__PURE__*/react_default.a.createElement("h3", null, t('周边生态')), /*#__PURE__*/react_default.a.createElement("ul", null, data.filter(function (item) {
    return item.category === 'ecology';
  }).map(function (product) {
    return /*#__PURE__*/react_default.a.createElement(components_Product, {
      key: product.title,
      name: product.title,
      slogan: product.slogan || '',
      description: product.description,
      url: (product.links || [])[0].url,
      icon: product.icon,
      language: language || i18n.language
    });
  })))), /*#__PURE__*/react_default.a.createElement("div", {
    className: Product_module_default.a.mask
  }));
};

/* harmony default export */ var components_Products = (Products_Products);
// EXTERNAL MODULE: ../node_modules/shallowequal/index.js
var shallowequal = __webpack_require__("F56x");
var shallowequal_default = /*#__PURE__*/__webpack_require__.n(shallowequal);

// EXTERNAL MODULE: ../@antv/gatsby-theme-antv/site/images/external-link.svg
var external_link = __webpack_require__("sZHf");
var external_link_default = /*#__PURE__*/__webpack_require__.n(external_link);

// EXTERNAL MODULE: ../@antv/gatsby-theme-antv/site/components/ExternalLinkIcon.module.less
var ExternalLinkIcon_module = __webpack_require__("nT+N");
var ExternalLinkIcon_module_default = /*#__PURE__*/__webpack_require__.n(ExternalLinkIcon_module);

// CONCATENATED MODULE: ../@antv/gatsby-theme-antv/site/components/ExternalLinkIcon.tsx




var ExternalLinkIcon_ExternalLinkIcon = function ExternalLinkIcon() {
  return /*#__PURE__*/react_default.a.createElement("i", {
    className: ExternalLinkIcon_module_default.a.export
  }, /*#__PURE__*/react_default.a.createElement(external_link_default.a, null));
};

/* harmony default export */ var components_ExternalLinkIcon = (ExternalLinkIcon_ExternalLinkIcon);
// EXTERNAL MODULE: ../@antv/gatsby-theme-antv/site/components/Header.module.less
var Header_module = __webpack_require__("aaoD");
var Header_module_default = /*#__PURE__*/__webpack_require__.n(Header_module);

// CONCATENATED MODULE: ../@antv/gatsby-theme-antv/site/components/NavMenuItems.tsx











var getDocument = function getDocument(navs, slug) {
  if (slug === void 0) {
    slug = '';
  }

  return navs.find(function (doc) {
    return doc.slug === slug;
  }) || {
    title: {}
  };
};

var NavMenuItems_capitalize = function capitalize(s) {
  if (typeof s !== 'string') {
    return '';
  }

  return s.charAt(0).toUpperCase() + s.slice(1);
};

var NavMenuItems_NavMenuItems = function NavMenuItems(_ref) {
  var _ref$navs = _ref.navs,
      navs = _ref$navs === void 0 ? [] : _ref$navs,
      path = _ref.path;

  var _useTranslation = Object(useTranslation["a" /* useTranslation */])(),
      i18n = _useTranslation.i18n;

  return /*#__PURE__*/react_default.a.createElement(react_default.a.Fragment, null, navs.map(function (nav) {
    var _classNames;

    var href = nav.slug.startsWith('http') ? nav.slug : "/" + i18n.language + "/" + nav.slug;
    var title = NavMenuItems_capitalize(getDocument(navs, nav.slug).title[i18n.language]);
    var className = classnames_default()('header-menu-item-active', (_classNames = {}, _classNames[Header_module_default.a.activeItem] = path.startsWith(href) || shallowequal_default()(path.split('/').slice(0, 4), href.split('/').slice(0, 4)), _classNames));
    return /*#__PURE__*/react_default.a.createElement("li", {
      key: title,
      className: className
    }, nav.target === '_blank' || href.startsWith('http') ? /*#__PURE__*/react_default.a.createElement("a", {
      href: href,
      target: "_blank",
      rel: "noopener noreferrer"
    }, title, /*#__PURE__*/react_default.a.createElement(components_ExternalLinkIcon, null)) : /*#__PURE__*/react_default.a.createElement(gatsby_browser_entry["Link"], {
      to: href
    }, title));
  }));
};

/* harmony default export */ var components_NavMenuItems = (NavMenuItems_NavMenuItems);
// EXTERNAL MODULE: ../@antv/gatsby-theme-antv/site/images/antv.svg
var antv = __webpack_require__("xJ2c");
var antv_default = /*#__PURE__*/__webpack_require__.n(antv);

// EXTERNAL MODULE: ../@antv/gatsby-theme-antv/site/images/translation.svg
var translation = __webpack_require__("BYsm");
var translation_default = /*#__PURE__*/__webpack_require__.n(translation);

// CONCATENATED MODULE: ../@antv/gatsby-theme-antv/site/components/Header.tsx



























/* eslint jsx-a11y/anchor-is-valid: 0 */
















var Header_Option = es_select.Option;
var Header_redirectToChinaMirror = function redirectToChinaMirror(githubUrl) {
  var chinaMirrorHost = Object(utils["b" /* getChinaMirrorHost */])();

  if (chinaMirrorHost !== window.location.host) {
    window.location.href = window.location.href.replace(window.location.host, chinaMirrorHost);
    return;
  }

  var _GitUrlParse = lib_default()(githubUrl),
      name = _GitUrlParse.name;

  if (!name.includes('.') && !name.includes('-')) {
    window.location.href = window.location.href.replace(window.location.host, "antv-" + name + ".gitee.io");
    return;
  }

  message["a" /* default */].info('镜像本地调试暂时无法跳转。');
};

var Header_Header = function Header(_ref) {
  var _classNames, _classNames2, _classNames3, _React$createElement;

  var _ref$subTitle = _ref.subTitle,
      subTitle = _ref$subTitle === void 0 ? '' : _ref$subTitle,
      subTitleHref = _ref.subTitleHref,
      _ref$pathPrefix = _ref.pathPrefix,
      pathPrefix = _ref$pathPrefix === void 0 ? '' : _ref$pathPrefix,
      _ref$path = _ref.path,
      path = _ref$path === void 0 ? '' : _ref$path,
      _ref$navs = _ref.navs,
      navs = _ref$navs === void 0 ? [] : _ref$navs,
      _ref$showSearch = _ref.showSearch,
      showSearch = _ref$showSearch === void 0 ? true : _ref$showSearch,
      _ref$showGithubCorner = _ref.showGithubCorner,
      showGithubCorner = _ref$showGithubCorner === void 0 ? true : _ref$showGithubCorner,
      _ref$showAntVProducts = _ref.showAntVProductsCard,
      showAntVProductsCard = _ref$showAntVProducts === void 0 ? true : _ref$showAntVProducts,
      _ref$showLanguageSwit = _ref.showLanguageSwitcher,
      showLanguageSwitcher = _ref$showLanguageSwit === void 0 ? true : _ref$showLanguageSwit,
      _ref$showChinaMirror = _ref.showChinaMirror,
      showChinaMirror = _ref$showChinaMirror === void 0 ? true : _ref$showChinaMirror,
      logo = _ref.logo,
      onLanguageChange = _ref.onLanguageChange,
      siteUrl = _ref.siteUrl,
      _ref$githubUrl = _ref.githubUrl,
      githubUrl = _ref$githubUrl === void 0 ? 'https://github.com/antvis' : _ref$githubUrl,
      defaultLanguage = _ref.defaultLanguage,
      _ref$Link = _ref.Link,
      Link = _ref$Link === void 0 ? 'a' : _ref$Link,
      transparent = _ref.transparent,
      isHomePage = _ref.isHomePage,
      _ref$rootDomain = _ref.rootDomain,
      rootDomain = _ref$rootDomain === void 0 ? '' : _ref$rootDomain,
      docsearchOptions = _ref.docsearchOptions,
      versions = _ref.versions;

  var _useTranslation = Object(useTranslation["a" /* useTranslation */])(),
      t = _useTranslation.t,
      i18n = _useTranslation.i18n;

  var lang = typeof defaultLanguage !== 'undefined' ? defaultLanguage : i18n.language || '';
  var SubTitleLink = (subTitleHref || '').startsWith('http') ? 'a' : Link;

  var _useState = Object(react["useState"])(false),
      productMenuVisible = _useState[0],
      setProductMenuVisible = _useState[1];

  var productMenuHovering = false;

  var onProductMouseEnter = function onProductMouseEnter(e) {
    productMenuHovering = true;
    e.persist();
    setTimeout(function () {
      if (e.target instanceof Element && e.target.matches(':hover')) {
        setProductMenuVisible(true);
      }
    }, 200);
  };

  var onProductMouseLeave = function onProductMouseLeave(e) {
    e.persist();
    productMenuHovering = false;
    setTimeout(function () {
      if (productMenuHovering) {
        return;
      }

      setProductMenuVisible(false);
    }, 200);
  };

  var onToggleProductMenuVisible = function onToggleProductMenuVisible() {
    setProductMenuVisible(!productMenuVisible);
  };

  var _useState2 = Object(react["useState"])(false),
      popupMenuVisible = _useState2[0],
      setPopupMenuVisible = _useState2[1];

  var onTogglePopupMenuVisible = function onTogglePopupMenuVisible() {
    setPopupMenuVisible(!popupMenuVisible);
  };

  var _img$link$logo = Object.assign({
    img: /*#__PURE__*/react_default.a.createElement(antv_default.a, null),
    link: ''
  }, logo),
      img = _img$link$logo.img,
      link = _img$link$logo.link;

  Object(react["useEffect"])(function () {
    if (popupMenuVisible) {
      setPopupMenuVisible(false);
    }
  }, [path]); // 移动端下弹出菜单时，禁止页面滚动

  Object(react["useEffect"])(function () {
    if (popupMenuVisible) {
      document.documentElement.style.overflow = 'hidden';
    } else {
      document.documentElement.style.overflow = '';
    }

    return function () {
      document.documentElement.style.overflow = '';
    };
  }, [popupMenuVisible]);
  var isWide = Object(useMedia["a" /* default */])('(min-width: 767.99px)', true);
  var menuIcon = !isWide ? /*#__PURE__*/react_default.a.createElement(icons_MenuOutlined, {
    className: Header_module_default.a.menuIcon,
    onClick: onTogglePopupMenuVisible
  }) : null;
  var productItemProps = isWide ? {
    onMouseEnter: onProductMouseEnter,
    onMouseLeave: onProductMouseLeave
  } : {
    onClick: onToggleProductMenuVisible
  };

  var _GitUrlParse2 = lib_default()(githubUrl),
      name = _GitUrlParse2.name;

  var chinaMirrorUrl = name ? "https://antv-" + name + ".gitee.io" : '';

  var _useLogoLink = Object(hooks["b" /* useLogoLink */])({
    siteUrl: siteUrl,
    lang: lang,
    link: link
  }),
      logoLink = _useLogoLink[0];

  var _useState3 = Object(react["useState"])(false),
      chinaMirrorHintVisible = _useState3[0],
      updateChinaMirrorHintVisible = _useState3[1];

  Object(react["useEffect"])(function () {
    var timeout = setTimeout(function () {
      if (lang !== 'zh' || window.location.host.includes('chartcube') || window.location.host.includes('gitee.io') || localStorage.getItem('china-mirror-no-more-hint') || !isWide) {
        return;
      }

      updateChinaMirrorHintVisible(true);
    }, 5000);
    return function () {
      clearTimeout(timeout);
    };
  });
  var menu = /*#__PURE__*/react_default.a.createElement("ul", {
    className: classnames_default()(Header_module_default.a.menu, (_classNames = {}, _classNames[Header_module_default.a.popup] = !isWide, _classNames[Header_module_default.a.popupHidden] = !popupMenuVisible, _classNames))
  }, navs && navs.length ? /*#__PURE__*/react_default.a.createElement(components_NavMenuItems, {
    navs: navs,
    path: path
  }) : null, showChinaMirror ? /*#__PURE__*/react_default.a.createElement(popover, {
    title: null,
    content: /*#__PURE__*/react_default.a.createElement("div", {
      style: {
        width: 300
      }
    }, /*#__PURE__*/react_default.a.createElement("div", null, /*#__PURE__*/react_default.a.createElement("span", {
      role: "img",
      "aria-labelledby": "\u4E2D\u56FD"
    }, "\uD83C\uDDE8\uD83C\uDDF3"), ' ', "AntV \u7CFB\u5217\u7F51\u7AD9\u90E8\u7F72\u5728 gh-pages \u4E0A\uFF0C\u82E5\u8BBF\u95EE\u901F\u5EA6\u4E0D\u4F73\uFF0C\u53EF\u4EE5\u524D\u5F80\u56FD\u5185\u955C\u50CF\u7AD9\u70B9\u3002"), /*#__PURE__*/react_default.a.createElement("div", {
      style: {
        marginTop: 16,
        textAlign: 'right'
      }
    }, /*#__PURE__*/react_default.a.createElement(es_button["a" /* default */], {
      onClick: function onClick() {
        return updateChinaMirrorHintVisible(false);
      },
      size: "small",
      style: {
        marginRight: 8
      }
    }, "\u6682\u65F6\u5173\u95ED"), /*#__PURE__*/react_default.a.createElement(es_button["a" /* default */], {
      type: "primary",
      size: "small",
      onClick: function onClick() {
        localStorage.setItem('china-mirror-no-more-hint', Date.now().toString());
        updateChinaMirrorHintVisible(false);
      }
    }, "\u4E0D\u518D\u63D0\u9192"))),
    visible: chinaMirrorHintVisible,
    placement: "bottomRight",
    align: {
      offset: [-12, -16]
    }
  }, /*#__PURE__*/react_default.a.createElement("li", {
    style: {
      display: logoLink.includes('gitee') ? 'none' : ''
    }
  }, /*#__PURE__*/react_default.a.createElement("a", {
    href: chinaMirrorUrl,
    onClick: function onClick(e) {
      e.preventDefault();
      Header_redirectToChinaMirror(githubUrl);
    }
  }, t('国内镜像'), /*#__PURE__*/react_default.a.createElement(components_ExternalLinkIcon, null)))) : null, showAntVProductsCard ? /*#__PURE__*/react_default.a.createElement("li", productItemProps, /*#__PURE__*/react_default.a.createElement("a", null, t('所有产品'), /*#__PURE__*/react_default.a.createElement("img", {
    src: "https://gw.alipayobjects.com/zos/antfincdn/FLrTNDvlna/antv.png",
    alt: "antv logo arrow",
    className: classnames_default()(Header_module_default.a.arrow, (_classNames2 = {}, _classNames2[Header_module_default.a.open] = productMenuVisible, _classNames2))
  })), /*#__PURE__*/react_default.a.createElement(components_Products, {
    className: Header_module_default.a.productsMenu,
    show: productMenuVisible,
    rootDomain: rootDomain,
    language: defaultLanguage
  })) : null, versions ? /*#__PURE__*/react_default.a.createElement("li", null, /*#__PURE__*/react_default.a.createElement(es_select, {
    defaultValue: Object.keys(versions)[0],
    className: Header_module_default.a.versions,
    bordered: false,
    size: "small",
    onChange: function onChange(value) {
      window.location.href = value;
    }
  }, Object.keys(versions).map(function (version) {
    var url = versions[version];

    if (url.startsWith('http')) {
      return /*#__PURE__*/react_default.a.createElement(Header_Option, {
        key: url,
        value: url
      }, version);
    }

    return null;
  }))) : null, showLanguageSwitcher && /*#__PURE__*/react_default.a.createElement("li", null, /*#__PURE__*/react_default.a.createElement(es_dropdown, {
    placement: "bottomRight",
    overlay: /*#__PURE__*/react_default.a.createElement(es_menu["a" /* default */], {
      defaultSelectedKeys: [lang],
      selectable: true,
      onSelect: function onSelect(_ref2) {
        var key = _ref2.key;

        if (key === lang) {
          return;
        }

        if (onLanguageChange) {
          onLanguageChange(key.toString());
          return;
        }

        if (path.endsWith("/" + lang)) {
          Object(gatsby_browser_entry["navigate"])("/" + key);
          return;
        }

        Object(gatsby_browser_entry["navigate"])(path.replace(pathPrefix, '').replace("/" + lang + "/", "/" + key + "/"));
      }
    }, /*#__PURE__*/react_default.a.createElement(es_menu["a" /* default */].Item, {
      key: "en"
    }, /*#__PURE__*/react_default.a.createElement(es_icons_CheckOutlined, {
      style: {
        visibility: lang === 'en' ? 'visible' : 'hidden',
        color: '#52c41a'
      }
    }), "English"), /*#__PURE__*/react_default.a.createElement(es_menu["a" /* default */].Item, {
      key: "zh"
    }, /*#__PURE__*/react_default.a.createElement(es_icons_CheckOutlined, {
      style: {
        visibility: lang === 'zh' ? 'visible' : 'hidden',
        color: '#52c41a'
      }
    }), "\u7B80\u4F53\u4E2D\u6587")),
    className: Header_module_default.a.translation
  }, /*#__PURE__*/react_default.a.createElement(translation_default.a, null))), showGithubCorner && /*#__PURE__*/react_default.a.createElement("li", {
    className: Header_module_default.a.githubCorner
  }, /*#__PURE__*/react_default.a.createElement("a", {
    href: lib_default()(githubUrl).toString('https'),
    target: "_blank",
    rel: "noopener noreferrer"
  }, /*#__PURE__*/react_default.a.createElement(icons_GithubOutlined, null))));
  return /*#__PURE__*/react_default.a.createElement("header", {
    className: classnames_default()(Header_module_default.a.header, (_classNames3 = {}, _classNames3[Header_module_default.a.transparent] = !!transparent && !productMenuVisible, _classNames3[Header_module_default.a.isHomePage] = !!isHomePage, _classNames3[Header_module_default.a.fixed] = popupMenuVisible, _classNames3))
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: Header_module_default.a.container
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: Header_module_default.a.left
  }, /*#__PURE__*/react_default.a.createElement("h1", null, /*#__PURE__*/react_default.a.createElement("a", {
    href: logoLink
  }, img)), subTitle && /*#__PURE__*/react_default.a.createElement(react_default.a.Fragment, null, /*#__PURE__*/react_default.a.createElement("span", {
    className: Header_module_default.a.divider
  }), /*#__PURE__*/react_default.a.createElement("h2", {
    className: Header_module_default.a.subProduceName
  }, /*#__PURE__*/react_default.a.createElement(SubTitleLink, (_React$createElement = {}, _React$createElement[SubTitleLink === 'a' ? 'href' : 'to'] = typeof subTitleHref === 'undefined' ? "/" + lang : subTitleHref, _React$createElement), subTitle))), showSearch && /*#__PURE__*/react_default.a.createElement(components_Search, {
    docsearchOptions: docsearchOptions
  })), /*#__PURE__*/react_default.a.createElement("nav", {
    className: Header_module_default.a.nav
  }, menu, menuIcon)));
};

/* harmony default export */ var components_Header = (Header_Header);
// EXTERNAL MODULE: ../@antv/gatsby-theme-antv/site/components/PageLoading.tsx + 2 modules
var PageLoading = __webpack_require__("NYms");

// EXTERNAL MODULE: ../node_modules/rc-footer/es/index.js
var rc_footer_es = __webpack_require__("Wpb7");
var es_default = /*#__PURE__*/__webpack_require__.n(rc_footer_es);

// CONCATENATED MODULE: ../node_modules/@ant-design/icons-svg/es/asn/WeiboOutlined.js
// This icon file is generated automatically.
var WeiboOutlined_WeiboOutlined = {
  "icon": {
    "tag": "svg",
    "attrs": {
      "viewBox": "64 64 896 896",
      "focusable": "false"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "d": "M457.3 543c-68.1-17.7-145 16.2-174.6 76.2-30.1 61.2-1 129.1 67.8 151.3 71.2 23 155.2-12.2 184.4-78.3 28.7-64.6-7.2-131-77.6-149.2zm-52 156.2c-13.8 22.1-43.5 31.7-65.8 21.6-22-10-28.5-35.7-14.6-57.2 13.7-21.4 42.3-31 64.4-21.7 22.4 9.5 29.6 35 16 57.3zm45.5-58.5c-5 8.6-16.1 12.7-24.7 9.1-8.5-3.5-11.2-13.1-6.4-21.5 5-8.4 15.6-12.4 24.1-9.1 8.7 3.2 11.8 12.9 7 21.5zm334.5-197.2c15 4.8 31-3.4 35.9-18.3 11.8-36.6 4.4-78.4-23.2-109a111.39 111.39 0 00-106-34.3 28.45 28.45 0 00-21.9 33.8 28.39 28.39 0 0033.8 21.8c18.4-3.9 38.3 1.8 51.9 16.7a54.2 54.2 0 0111.3 53.3 28.45 28.45 0 0018.2 36zm99.8-206c-56.7-62.9-140.4-86.9-217.7-70.5a32.98 32.98 0 00-25.4 39.3 33.12 33.12 0 0039.3 25.5c55-11.7 114.4 5.4 154.8 50.1 40.3 44.7 51.2 105.7 34 159.1-5.6 17.4 3.9 36 21.3 41.7 17.4 5.6 36-3.9 41.6-21.2v-.1c24.1-75.4 8.9-161.1-47.9-223.9zM729 499c-12.2-3.6-20.5-6.1-14.1-22.1 13.8-34.7 15.2-64.7.3-86-28-40.1-104.8-37.9-192.8-1.1 0 0-27.6 12.1-20.6-9.8 13.5-43.5 11.5-79.9-9.6-101-47.7-47.8-174.6 1.8-283.5 110.6C127.3 471.1 80 557.5 80 632.2 80 775.1 263.2 862 442.5 862c235 0 391.3-136.5 391.3-245 0-65.5-55.2-102.6-104.8-118zM443 810.8c-143 14.1-266.5-50.5-275.8-144.5-9.3-93.9 99.2-181.5 242.2-195.6 143-14.2 266.5 50.5 275.8 144.4C694.4 709 586 796.6 443 810.8z"
      }
    }]
  },
  "name": "weibo",
  "theme": "outlined"
};
/* harmony default export */ var asn_WeiboOutlined = (WeiboOutlined_WeiboOutlined);
// CONCATENATED MODULE: ../node_modules/@ant-design/icons/es/icons/WeiboOutlined.js

// GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY




var icons_WeiboOutlined_WeiboOutlined = function WeiboOutlined(props, ref) {
  return react["createElement"](AntdIcon["a" /* default */], Object.assign({}, props, {
    ref: ref,
    icon: asn_WeiboOutlined
  }));
};

icons_WeiboOutlined_WeiboOutlined.displayName = 'WeiboOutlined';
/* harmony default export */ var icons_WeiboOutlined = (react["forwardRef"](icons_WeiboOutlined_WeiboOutlined));
// CONCATENATED MODULE: ../node_modules/@ant-design/icons-svg/es/asn/ZhihuOutlined.js
// This icon file is generated automatically.
var ZhihuOutlined_ZhihuOutlined = {
  "icon": {
    "tag": "svg",
    "attrs": {
      "viewBox": "64 64 896 896",
      "focusable": "false"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "d": "M564.7 230.1V803h60l25.2 71.4L756.3 803h131.5V230.1H564.7zm247.7 497h-59.9l-75.1 50.4-17.8-50.4h-18V308.3h170.7v418.8zM526.1 486.9H393.3c2.1-44.9 4.3-104.3 6.6-172.9h130.9l-.1-8.1c0-.6-.2-14.7-2.3-29.1-2.1-15-6.6-34.9-21-34.9H287.8c4.4-20.6 15.7-69.7 29.4-93.8l6.4-11.2-12.9-.7c-.8 0-19.6-.9-41.4 10.6-35.7 19-51.7 56.4-58.7 84.4-18.4 73.1-44.6 123.9-55.7 145.6-3.3 6.4-5.3 10.2-6.2 12.8-1.8 4.9-.8 9.8 2.8 13 10.5 9.5 38.2-2.9 38.5-3 .6-.3 1.3-.6 2.2-1 13.9-6.3 55.1-25 69.8-84.5h56.7c.7 32.2 3.1 138.4 2.9 172.9h-141l-2.1 1.5c-23.1 16.9-30.5 63.2-30.8 65.2l-1.4 9.2h167c-12.3 78.3-26.5 113.4-34 127.4-3.7 7-7.3 14-10.7 20.8-21.3 42.2-43.4 85.8-126.3 153.6-3.6 2.8-7 8-4.8 13.7 2.4 6.3 9.3 9.1 24.6 9.1 5.4 0 11.8-.3 19.4-1 49.9-4.4 100.8-18 135.1-87.6 17-35.1 31.7-71.7 43.9-108.9L497 850l5-12c.8-1.9 19-46.3 5.1-95.9l-.5-1.8-108.1-123-22 16.6c6.4-26.1 10.6-49.9 12.5-71.1h158.7v-8c0-40.1-18.5-63.9-19.2-64.9l-2.4-3z"
      }
    }]
  },
  "name": "zhihu",
  "theme": "outlined"
};
/* harmony default export */ var asn_ZhihuOutlined = (ZhihuOutlined_ZhihuOutlined);
// CONCATENATED MODULE: ../node_modules/@ant-design/icons/es/icons/ZhihuOutlined.js

// GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY




var icons_ZhihuOutlined_ZhihuOutlined = function ZhihuOutlined(props, ref) {
  return react["createElement"](AntdIcon["a" /* default */], Object.assign({}, props, {
    ref: ref,
    icon: asn_ZhihuOutlined
  }));
};

icons_ZhihuOutlined_ZhihuOutlined.displayName = 'ZhihuOutlined';
/* harmony default export */ var icons_ZhihuOutlined = (react["forwardRef"](icons_ZhihuOutlined_ZhihuOutlined));
// EXTERNAL MODULE: ../@antv/gatsby-theme-antv/site/components/Footer.module.less
var Footer_module = __webpack_require__("7KvB");
var Footer_module_default = /*#__PURE__*/__webpack_require__.n(Footer_module);

// EXTERNAL MODULE: ../node_modules/rc-footer/assets/index.less
var assets = __webpack_require__("MKzE");

// CONCATENATED MODULE: ../@antv/gatsby-theme-antv/site/components/Footer.tsx









function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || Footer_unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function Footer_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return Footer_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Footer_arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return Footer_arrayLikeToArray(arr); }

function Footer_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }









var OLD_SITE_DOMAIN = 'https://antv-2018.alipay.com';

var Footer_Footer = function Footer(_ref) {
  var columns = _ref.columns,
      bottom = _ref.bottom,
      _ref$theme = _ref.theme,
      theme = _ref$theme === void 0 ? 'dark' : _ref$theme,
      language = _ref.language,
      _ref$rootDomain = _ref.rootDomain,
      rootDomain = _ref$rootDomain === void 0 ? '' : _ref$rootDomain;

  var _useTranslation = Object(useTranslation["a" /* useTranslation */])(),
      t = _useTranslation.t,
      i18n = _useTranslation.i18n;

  var lang = language || i18n.language;

  var _useChinaMirrorHost = Object(hooks["a" /* useChinaMirrorHost */])(),
      isChinaMirrorHost = _useChinaMirrorHost[0];

  var products = getProducts_getProducts({
    t: t,
    language: lang,
    rootDomain: rootDomain,
    isChinaMirrorHost: isChinaMirrorHost
  });
  var more = {
    icon: /*#__PURE__*/react_default.a.createElement("img", {
      src: "https://gw.alipayobjects.com/zos/rmsportal/nBVXkrFdWHxbZlmMbsaH.svg",
      alt: "more products"
    }),
    title: t('更多产品'),
    items: [{
      icon: /*#__PURE__*/react_default.a.createElement("img", {
        src: "https://gw.alipayobjects.com/zos/rmsportal/KDpgvguMpGfqaHPjicRK.svg",
        alt: "Ant Design"
      }),
      title: 'Ant Design',
      url: 'https://ant.design',
      description: t('企业级 UI 设计语言'),
      openExternal: true
    }, {
      icon: /*#__PURE__*/react_default.a.createElement("img", {
        src: "https://gw.alipayobjects.com/zos/rmsportal/XuVpGqBFxXplzvLjJBZB.svg",
        alt: "yuque"
      }),
      title: t('语雀'),
      url: 'https://yuque.com',
      description: t('知识创作与分享工具'),
      openExternal: true
    }, {
      icon: /*#__PURE__*/react_default.a.createElement("img", {
        src: "https://gw.alipayobjects.com/zos/antfincdn/sAEs8aHCnd/yunfengdie.png",
        alt: "yunfengdie"
      }),
      title: t('云凤蝶'),
      url: 'https://yunfengdie.com',
      description: t('中台建站平台'),
      openExternal: true
    }, {
      icon: /*#__PURE__*/react_default.a.createElement("img", {
        src: "https://gw.alipayobjects.com/zos/antfincdn/v2%24rh7lqpu/82f338dd-b0a6-41bc-9a86-58aaa9df217b.png",
        alt: "Egg"
      }),
      title: 'Egg',
      url: 'https://eggjs.org',
      description: t('企业级 Node 开发框架'),
      openExternal: true
    }, {
      icon: /*#__PURE__*/react_default.a.createElement("img", {
        src: "https://gw.alipayobjects.com/zos/rmsportal/DMDOlAUhmktLyEODCMBR.ico",
        alt: "kitchen"
      }),
      title: 'Kitchen',
      description: t('Sketch 工具集'),
      url: 'https://kitchen.alipay.com',
      openExternal: true
    }, {
      icon: /*#__PURE__*/react_default.a.createElement("img", {
        src: "https://gw.alipayobjects.com/zos/rmsportal/nBVXkrFdWHxbZlmMbsaH.svg",
        alt: "xtech"
      }),
      title: t('蚂蚁体验科技'),
      url: 'https://xtech.antfin.com/',
      openExternal: true
    }]
  };
  var defaultColumns = products.filter(function (product) {
    return product.category !== 'ecology';
  }).map(function (product) {
    return {
      title: /*#__PURE__*/react_default.a.createElement("span", null, product.title, /*#__PURE__*/react_default.a.createElement("span", {
        className: Footer_module_default.a.description
      }, product.slogan)),
      items: product.links
    };
  });
  return /*#__PURE__*/react_default.a.createElement(es_default.a, {
    maxColumnsPerRow: 4,
    theme: theme,
    columns: columns || [].concat(_toConsumableArray(defaultColumns), [more]),
    className: Footer_module_default.a.footer,
    bottom: bottom || /*#__PURE__*/react_default.a.createElement("div", {
      className: Footer_module_default.a.bottom
    }, /*#__PURE__*/react_default.a.createElement("div", null, /*#__PURE__*/react_default.a.createElement("a", {
      href: "https://weibo.com/antv2017",
      target: "_blank",
      rel: "noopener noreferrer"
    }, /*#__PURE__*/react_default.a.createElement(icons_WeiboOutlined, null)), /*#__PURE__*/react_default.a.createElement("a", {
      href: "https://zhuanlan.zhihu.com/aiux-antv",
      target: "_blank",
      rel: "noopener noreferrer"
    }, /*#__PURE__*/react_default.a.createElement(icons_ZhihuOutlined, null)), /*#__PURE__*/react_default.a.createElement("a", {
      href: "https://github.com/antvis",
      target: "_blank",
      rel: "noopener noreferrer"
    }, /*#__PURE__*/react_default.a.createElement(icons_GithubOutlined, null)), /*#__PURE__*/react_default.a.createElement("a", {
      href: rootDomain + "/" + lang + "/about"
    }, t('关于我们')), /*#__PURE__*/react_default.a.createElement("a", {
      href: OLD_SITE_DOMAIN,
      target: "_blank",
      rel: "noopener noreferrer"
    }, t('返回旧版'))), /*#__PURE__*/react_default.a.createElement("div", null, "\xA9 ", new Date().getFullYear(), " Made with \u2764 by", ' ', /*#__PURE__*/react_default.a.createElement("a", {
      href: "https://xtech.antfin.com/"
    }, "XTech")))
  });
};

/* harmony default export */ var components_Footer = (Footer_Footer);
// EXTERNAL MODULE: ../@antv/gatsby-theme-antv/site/layouts/layout.module.less
var layout_module = __webpack_require__("hedj");
var layout_module_default = /*#__PURE__*/__webpack_require__.n(layout_module);

// CONCATENATED MODULE: ../@antv/gatsby-theme-antv/site/layouts/layout.tsx

















esm_i18next.use(context["e" /* initReactI18next */]) // passes i18n down to react-i18next
.init({
  initImmediate: false,
  fallbackLng: 'zh',
  keySeparator: false,
  react: {
    useSuspense: false
  }
});
var layout_lngs = ['zh', 'en'];

function parseNulltoUndefined(value) {
  if (value === null) {
    return undefined;
  }

  return value;
}

var layout_Layout = function Layout(_ref) {
  var children = _ref.children,
      location = _ref.location;

  // https://github.com/gatsbyjs/gatsby/issues/13867#issuecomment-489481343
  if (location.pathname.includes('offline-plugin-app-shell-fallback')) {
    return /*#__PURE__*/react_default.a.createElement(PageLoading["a" /* default */], null);
  }

  var query = "653731124";
  var _staticQueryData$data = _653731124.data,
      site = _staticQueryData$data.site,
      locales = _staticQueryData$data.locales;
  var _site$siteMetadata = site.siteMetadata,
      title = _site$siteMetadata.title,
      _site$siteMetadata$na = _site$siteMetadata.navs,
      navs = _site$siteMetadata$na === void 0 ? [] : _site$siteMetadata$na,
      githubUrl = _site$siteMetadata.githubUrl,
      siteUrl = _site$siteMetadata.siteUrl,
      _site$siteMetadata$lo = _site$siteMetadata.logoUrl,
      logoUrl = _site$siteMetadata$lo === void 0 ? '' : _site$siteMetadata$lo,
      showLanguageSwitcher = _site$siteMetadata.showLanguageSwitcher,
      showSearch = _site$siteMetadata.showSearch,
      showChinaMirror = _site$siteMetadata.showChinaMirror,
      showGithubCorner = _site$siteMetadata.showGithubCorner,
      showAntVProductsCard = _site$siteMetadata.showAntVProductsCard,
      _site$siteMetadata$re = _site$siteMetadata.redirects,
      redirects = _site$siteMetadata$re === void 0 ? [] : _site$siteMetadata$re,
      docsearchOptions = _site$siteMetadata.docsearchOptions,
      versions = _site$siteMetadata.versions;
  var resources = {};

  try {
    resources = JSON.parse(locales.internal.content);
  } catch (e) {// empty
  }

  var pathPrefix = Object(gatsby_browser_entry["withPrefix"])('/').replace(/\/$/, '');
  var path = location.pathname.replace(pathPrefix, '');
  var currentLangKey = Object(dist["getCurrentLangKey"])(layout_lngs, 'zh', path);
  var isHomePage = path === '/' || path === "/" + currentLangKey || path === "/" + currentLangKey + "/";

  if (!esm_i18next.options.lng || "production" === 'production') {
    esm_i18next.init({
      lng: currentLangKey
    });
  }

  if (!esm_i18next.options.resources) {
    esm_i18next.init({
      resources: resources
    });
  }

  Object(react["useEffect"])(function () {
    if (esm_i18next.language !== currentLangKey) {
      esm_i18next.changeLanguage(currentLangKey);
    }
  }, [currentLangKey]);

  if (location.pathname === pathPrefix || children && children.type && children.type.noLayout) {
    return children;
  }

  var getRediectUrl = function getRediectUrl() {
    var list = redirects || [];

    for (var i = 0; i < list.length; i += 1) {
      var _ref2 = list[i],
          _ref2$from = _ref2.from,
          from = _ref2$from === void 0 ? '' : _ref2$from,
          to = _ref2.to,
          keepUrl = _ref2.keepUrl; // 支持字符串和正则表达式比较

      if (location.pathname !== from && !new RegExp(from).test(location.pathname)) {
        return;
      }

      if (keepUrl && new RegExp(from).test(location.pathname)) {
        return location.pathname.replace(new RegExp(from), to);
      } // 如果没有指定 to，则直接用替换成老版本的域名


      return to || "" + OLD_SITE_DOMAIN + location.pathname;
    }
  };

  var rediectUrl = getRediectUrl();
  var logoProps = logoUrl ? {
    logo: {
      img: /*#__PURE__*/react_default.a.createElement("img", {
        src: logoUrl,
        alt: "logo"
      })
    }
  } : {};
  return /*#__PURE__*/react_default.a.createElement(react_default.a.Fragment, null, rediectUrl && /*#__PURE__*/react_default.a.createElement(Helmet["a" /* Helmet */], null, /*#__PURE__*/react_default.a.createElement("meta", {
    httpEquiv: "refresh",
    content: "0;url=" + rediectUrl
  })), /*#__PURE__*/react_default.a.createElement(Seo["a" /* default */], {
    title: siteUrl === 'https://antv.vision' ? '' : title,
    lang: esm_i18next.language
  }), /*#__PURE__*/react_default.a.createElement(components_Header, Object.assign({
    subTitle: siteUrl === 'https://antv.vision' ? '' : title,
    path: path,
    pathPrefix: pathPrefix,
    navs: navs,
    siteUrl: siteUrl,
    githubUrl: githubUrl,
    Link: gatsby_browser_entry["Link"],
    transparent: isHomePage,
    isHomePage: isHomePage,
    showSearch: parseNulltoUndefined(showSearch),
    showGithubCorner: parseNulltoUndefined(showGithubCorner),
    showAntVProductsCard: parseNulltoUndefined(showAntVProductsCard),
    showChinaMirror: parseNulltoUndefined(showChinaMirror),
    showLanguageSwitcher: parseNulltoUndefined(showLanguageSwitcher),
    docsearchOptions: docsearchOptions,
    versions: versions
  }, logoProps)), /*#__PURE__*/react_default.a.createElement("main", {
    className: layout_module_default.a.main
  }, children), /*#__PURE__*/react_default.a.createElement(components_Footer, {
    githubUrl: githubUrl,
    rootDomain: "https://antv.vision"
  }));
};

/* harmony default export */ var layout = __webpack_exports__["default"] = (layout_Layout);

/***/ }),

/***/ "vXgj":
/***/ (function(module, exports, __webpack_require__) {

var _isArray = __webpack_require__("GwS+");
/**
 * This checks whether a function has a [methodname] function. If it isn't an
 * array it will execute that function otherwise it will default to the ramda
 * implementation.
 *
 * @private
 * @param {Function} fn ramda implemtation
 * @param {String} methodname property to check for a custom implementation
 * @return {Object} Whatever the return value of the method is.
 */


module.exports = function _checkForMethod(methodname, fn) {
  return function () {
    var length = arguments.length;

    if (length === 0) {
      return fn();
    }

    var obj = arguments[length - 1];
    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));
  };
};

/***/ }),

/***/ "vXvS":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return findDOMNode; });
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("xARA");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_0__);

/**
 * Return if a node is a DOM node. Else will return by `findDOMNode`
 */

function findDOMNode(node) {
  if (node instanceof HTMLElement) {
    return node;
  }

  return react_dom__WEBPACK_IMPORTED_MODULE_0___default.a.findDOMNode(node);
}

/***/ }),

/***/ "vbmX":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("5hJT");

__webpack_require__("d3/y");

var _interopRequireDefault = __webpack_require__("63Ad");

var _interopRequireWildcard = __webpack_require__("vdEC");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var React = _interopRequireWildcard(__webpack_require__("mXGw"));

var _CloseOutlined = _interopRequireDefault(__webpack_require__("Hb9A"));

var _AntdIcon = _interopRequireDefault(__webpack_require__("CxZ5")); // GENERATE BY ./scripts/generate.ts
// DON NOT EDIT IT MANUALLY


var CloseOutlined = function CloseOutlined(props, ref) {
  return React.createElement(_AntdIcon["default"], Object.assign({}, props, {
    ref: ref,
    icon: _CloseOutlined["default"]
  }));
};

CloseOutlined.displayName = 'CloseOutlined';

var _default = React.forwardRef(CloseOutlined);

exports["default"] = _default;

/***/ }),

/***/ "vdEC":
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__("e+GP");

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
    return {
      "default": obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj["default"] = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

module.exports = _interopRequireWildcard;

/***/ }),

/***/ "vgDc":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("7lGJ");

__webpack_require__("PAbq");

__webpack_require__("3y5y");

__webpack_require__("yIlq");

__webpack_require__("W1QL");

__webpack_require__("K/PF");

__webpack_require__("t91x");

__webpack_require__("75LO");

__webpack_require__("+jjx");

__webpack_require__("ABKx");

__webpack_require__("d3/y");

function _defineEnumerableProperties(obj, descs) {
  for (var key in descs) {
    var desc = descs[key];
    desc.configurable = desc.enumerable = true;
    if ("value" in desc) desc.writable = true;
    Object.defineProperty(obj, key, desc);
  }

  return obj;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
} //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------
// --[ Dependencies ]---------------------------------------------------


var warnDeprecation = __webpack_require__("GFZo");

var extend = __webpack_require__("0ONX");

var assertObject = __webpack_require__("mbwt"); // --[ Constants and Aliases ]------------------------------------------


var TYPE = Symbol["for"]('@@folktale:adt:type');
var TAG = Symbol["for"]('@@folktale:adt:tag');
var ANY = Symbol["for"]('@@folktale:adt:default');
var META = Symbol["for"]('@@meta:magical');
var keys = Object.keys; // --[ Helpers ]--------------------------------------------------------
//
// Returns an array of own enumerable values in an object.
//

function values(object) {
  return keys(object).map(function (key) {
    return object[key];
  });
} //
// Transforms own enumerable key/value pairs.
//


function mapObject(object, transform) {
  return keys(object).reduce(function (result, key) {
    result[key] = transform(key, object[key]);
    return result;
  }, {});
} //
// Gets a custom error message for the matchWith function.
// 


function getMatchWithErrorMessage(method, property) {
  return 'Variant "' + property + '" not covered in pattern.\nThis could mean you did not include all variants in your Union\'s matchWith function.\n\nFor example, if you had this Union:\n\nconst Operation = union({\n    Add: (a, b) => ({ a, b }),\n    Subtract: (a, b) => ({ a, b }),\n})\n\nBut wrote this matchWith:\n\nop.matchWith({\n    Add: ({ a, b }) => a + b\n    // Subtract not implemented!\n})\n\nIt would throw this error because we need to check against \'Subtract\'. Check your matchWith function\'s argument, \nit\'s possibly missing the \'' + property + '\' method in the object you\'ve passed.';
} // --[ Variant implementation ]-----------------------------------------
//
// Defines the variants given a set of patterns and an ADT namespace.
//


function defineVariants(typeId, patterns, adt) {
  return mapObject(patterns, function (name, constructor) {
    var _constructor, _ref, _extend, _mutatorMap, _tag, _type, _constructor2, _extend2, _mutatorMap2; // ---[ Variant Internals ]-----------------------------------------


    function InternalConstructor() {}

    InternalConstructor.prototype = Object.create(adt);
    extend(InternalConstructor.prototype, (_extend = {}, _defineProperty(_extend, TAG, name), _constructor = 'constructor', _mutatorMap = {}, _mutatorMap[_constructor] = _mutatorMap[_constructor] || {}, _mutatorMap[_constructor].get = function () {
      return InternalConstructor;
    }, _ref = 'is' + name, _mutatorMap[_ref] = _mutatorMap[_ref] || {}, _mutatorMap[_ref].get = function () {
      warnDeprecation('.is' + name + ' is deprecated. Use ' + name + '.hasInstance(value)\ninstead to check if a value belongs to the ADT variant.');
      return true;
    }, _defineProperty(_extend, 'matchWith', function matchWith(pattern) {
      assertObject(typeId + '\'s ' + name + '#matchWith', pattern);

      if (name in pattern) {
        return pattern[name](this);
      } else if (ANY in pattern) {
        return pattern[ANY]();
      } else {
        throw new Error(getMatchWithErrorMessage(pattern, name));
      }
    }), _defineEnumerableProperties(_extend, _mutatorMap), _extend));

    function makeInstance() {
      var result = new InternalConstructor(); // eslint-disable-line prefer-const

      extend(result, constructor.apply(undefined, arguments) || {});
      return result;
    }

    extend(makeInstance, (_extend2 = {}, _defineProperty(_extend2, META, constructor[META]), _tag = 'tag', _mutatorMap2 = {}, _mutatorMap2[_tag] = _mutatorMap2[_tag] || {}, _mutatorMap2[_tag].get = function () {
      return name;
    }, _type = 'type', _mutatorMap2[_type] = _mutatorMap2[_type] || {}, _mutatorMap2[_type].get = function () {
      return typeId;
    }, _constructor2 = 'constructor', _mutatorMap2[_constructor2] = _mutatorMap2[_constructor2] || {}, _mutatorMap2[_constructor2].get = function () {
      return InternalConstructor;
    }, _defineProperty(_extend2, 'prototype', InternalConstructor.prototype), _defineProperty(_extend2, 'hasInstance', function hasInstance(value) {
      return Boolean(value) && adt.hasInstance(value) && value[TAG] === name;
    }), _defineEnumerableProperties(_extend2, _mutatorMap2), _extend2));
    return makeInstance;
  });
} // --[ ADT Implementation ]--------------------------------------------

/*~
 * authors:
 *   - Quildreen Motta
 * 
 * stability: experimental
 * type: |
 *   (String, Object (Array String)) => Union
 */


var union = function union(typeId, patterns) {
  var _extend3;

  var UnionNamespace = Object.create(Union);
  var variants = defineVariants(typeId, patterns, UnionNamespace);
  extend(UnionNamespace, variants, (_extend3 = {}, _defineProperty(_extend3, TYPE, typeId), _defineProperty(_extend3, 'variants', values(variants)), _defineProperty(_extend3, 'hasInstance', function hasInstance(value) {
    return Boolean(value) && value[TYPE] === this[TYPE];
  }), _extend3));
  return UnionNamespace;
};
/*~ ~belongsTo : union */


var Union = {
  /*~
   * type: |
   *   Union . (...(Variant, Union) => Any) => Union
   */
  derive: function derive() {
    var _this = this;

    for (var _len = arguments.length, derivations = Array(_len), _key = 0; _key < _len; _key++) {
      derivations[_key] = arguments[_key];
    }

    derivations.forEach(function (derivation) {
      _this.variants.forEach(function (variant) {
        return derivation(variant, _this);
      });
    });
    return this;
  }
}; // --[ Exports ]--------------------------------------------------------

union.Union = Union;
union.typeSymbol = TYPE;
union.tagSymbol = TAG;
union.any = ANY;
module.exports = union;

/***/ }),

/***/ "vhWV":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("V7cS");

exports.__esModule = true;
exports.parsePath = parsePath;

function parsePath(path) {
  var pathname = path || "/";
  var search = "";
  var hash = "";
  var hashIndex = pathname.indexOf("#");

  if (hashIndex !== -1) {
    hash = pathname.substr(hashIndex);
    pathname = pathname.substr(0, hashIndex);
  }

  var searchIndex = pathname.indexOf("?");

  if (searchIndex !== -1) {
    search = pathname.substr(searchIndex);
    pathname = pathname.substr(0, searchIndex);
  }

  return {
    pathname: pathname,
    search: search === "?" ? "" : search,
    hash: hash === "#" ? "" : hash
  };
}

/***/ }),

/***/ "vmge":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------

var _require = __webpack_require__("mthV"),
    Success = _require.Success,
    Failure = _require.Failure;
/*~
 * stability: stable
 * authors:
 *   - "@boris-marinov"
 * 
 * type: |
 *   forall a, b:
 *     (Result a b) => Validation a b
 */


var resultToValidation = function resultToValidation(aResult) {
  return aResult.matchWith({
    Error: function Error(_ref) {
      var value = _ref.value;
      return Failure(value);
    },
    Ok: function Ok(_ref2) {
      var value = _ref2.value;
      return Success(value);
    }
  });
};

module.exports = resultToValidation;

/***/ }),

/***/ "vmon":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export getVendorPrefixes */
/* unused harmony export getVendorPrefixedEventName */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return animationEndName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return transitionEndName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return supportTransition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return getTransitionName; });
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("Z8gF");
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("W1QL");
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es6_array_iterator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("K/PF");
/* harmony import */ var core_js_modules_es6_array_iterator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_iterator__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("t91x");
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es6_object_keys__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("75LO");
/* harmony import */ var core_js_modules_es6_object_keys__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_keys__WEBPACK_IMPORTED_MODULE_4__);





var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement); // ================= Transition =================
// Event wrapper. Copy from react source code

function makePrefixMap(styleProp, eventName) {
  var prefixes = {};
  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
  prefixes['Moz' + styleProp] = 'moz' + eventName;
  prefixes['ms' + styleProp] = 'MS' + eventName;
  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();
  return prefixes;
}

function getVendorPrefixes(domSupport, win) {
  var prefixes = {
    animationend: makePrefixMap('Animation', 'AnimationEnd'),
    transitionend: makePrefixMap('Transition', 'TransitionEnd')
  };

  if (domSupport) {
    if (!('AnimationEvent' in win)) {
      delete prefixes.animationend.animation;
    }

    if (!('TransitionEvent' in win)) {
      delete prefixes.transitionend.transition;
    }
  }

  return prefixes;
}
var vendorPrefixes = getVendorPrefixes(canUseDOM, typeof window !== 'undefined' ? window : {});
var style = {};

if (canUseDOM) {
  style = document.createElement('div').style;
}

var prefixedEventNames = {};
function getVendorPrefixedEventName(eventName) {
  if (prefixedEventNames[eventName]) {
    return prefixedEventNames[eventName];
  }

  var prefixMap = vendorPrefixes[eventName];

  if (prefixMap) {
    var stylePropList = Object.keys(prefixMap);
    var len = stylePropList.length;

    for (var i = 0; i < len; i += 1) {
      var styleProp = stylePropList[i];

      if (Object.prototype.hasOwnProperty.call(prefixMap, styleProp) && styleProp in style) {
        prefixedEventNames[eventName] = prefixMap[styleProp];
        return prefixedEventNames[eventName];
      }
    }
  }

  return '';
}
var animationEndName = getVendorPrefixedEventName('animationend');
var transitionEndName = getVendorPrefixedEventName('transitionend');
var supportTransition = !!(animationEndName && transitionEndName);
function getTransitionName(transitionName, transitionType) {
  if (!transitionName) return null;

  if (typeof transitionName === 'object') {
    var type = transitionType.replace(/-\w/g, function (match) {
      return match[1].toUpperCase();
    });
    return transitionName[type];
  }

  return transitionName + '-' + transitionType;
}

/***/ }),

/***/ "w/93":
/***/ (function(module, exports, __webpack_require__) {

// CodeMirror, copyright (c) by Marijn Haverbeke and others
// Distributed under an MIT license: https://codemirror.net/LICENSE
(function (mod) {
  if (true) // CommonJS
    mod(__webpack_require__("Dln1"));else {}
})(function (CodeMirror) {
  "use strict";

  function doFold(cm, pos, options, force) {
    if (options && options.call) {
      var finder = options;
      options = null;
    } else {
      var finder = getOption(cm, options, "rangeFinder");
    }

    if (typeof pos == "number") pos = CodeMirror.Pos(pos, 0);
    var minSize = getOption(cm, options, "minFoldSize");

    function getRange(allowFolded) {
      var range = finder(cm, pos);
      if (!range || range.to.line - range.from.line < minSize) return null;
      var marks = cm.findMarksAt(range.from);

      for (var i = 0; i < marks.length; ++i) {
        if (marks[i].__isFold && force !== "fold") {
          if (!allowFolded) return null;
          range.cleared = true;
          marks[i].clear();
        }
      }

      return range;
    }

    var range = getRange(true);
    if (getOption(cm, options, "scanUp")) while (!range && pos.line > cm.firstLine()) {
      pos = CodeMirror.Pos(pos.line - 1, 0);
      range = getRange(false);
    }
    if (!range || range.cleared || force === "unfold") return;
    var myWidget = makeWidget(cm, options, range);
    CodeMirror.on(myWidget, "mousedown", function (e) {
      myRange.clear();
      CodeMirror.e_preventDefault(e);
    });
    var myRange = cm.markText(range.from, range.to, {
      replacedWith: myWidget,
      clearOnEnter: getOption(cm, options, "clearOnEnter"),
      __isFold: true
    });
    myRange.on("clear", function (from, to) {
      CodeMirror.signal(cm, "unfold", cm, from, to);
    });
    CodeMirror.signal(cm, "fold", cm, range.from, range.to);
  }

  function makeWidget(cm, options, range) {
    var widget = getOption(cm, options, "widget");

    if (typeof widget == "function") {
      widget = widget(range.from, range.to);
    }

    if (typeof widget == "string") {
      var text = document.createTextNode(widget);
      widget = document.createElement("span");
      widget.appendChild(text);
      widget.className = "CodeMirror-foldmarker";
    } else if (widget) {
      widget = widget.cloneNode(true);
    }

    return widget;
  } // Clumsy backwards-compatible interface


  CodeMirror.newFoldFunction = function (rangeFinder, widget) {
    return function (cm, pos) {
      doFold(cm, pos, {
        rangeFinder: rangeFinder,
        widget: widget
      });
    };
  }; // New-style interface


  CodeMirror.defineExtension("foldCode", function (pos, options, force) {
    doFold(this, pos, options, force);
  });
  CodeMirror.defineExtension("isFolded", function (pos) {
    var marks = this.findMarksAt(pos);

    for (var i = 0; i < marks.length; ++i) {
      if (marks[i].__isFold) return true;
    }
  });

  CodeMirror.commands.toggleFold = function (cm) {
    cm.foldCode(cm.getCursor());
  };

  CodeMirror.commands.fold = function (cm) {
    cm.foldCode(cm.getCursor(), null, "fold");
  };

  CodeMirror.commands.unfold = function (cm) {
    cm.foldCode(cm.getCursor(), null, "unfold");
  };

  CodeMirror.commands.foldAll = function (cm) {
    cm.operation(function () {
      for (var i = cm.firstLine(), e = cm.lastLine(); i <= e; i++) {
        cm.foldCode(CodeMirror.Pos(i, 0), null, "fold");
      }
    });
  };

  CodeMirror.commands.unfoldAll = function (cm) {
    cm.operation(function () {
      for (var i = cm.firstLine(), e = cm.lastLine(); i <= e; i++) {
        cm.foldCode(CodeMirror.Pos(i, 0), null, "unfold");
      }
    });
  };

  CodeMirror.registerHelper("fold", "combine", function () {
    var funcs = Array.prototype.slice.call(arguments, 0);
    return function (cm, start) {
      for (var i = 0; i < funcs.length; ++i) {
        var found = funcs[i](cm, start);
        if (found) return found;
      }
    };
  });
  CodeMirror.registerHelper("fold", "auto", function (cm, start) {
    var helpers = cm.getHelpers(start, "fold");

    for (var i = 0; i < helpers.length; i++) {
      var cur = helpers[i](cm, start);
      if (cur) return cur;
    }
  });
  var defaultOptions = {
    rangeFinder: CodeMirror.fold.auto,
    widget: "\u2194",
    minFoldSize: 0,
    scanUp: false,
    clearOnEnter: true
  };
  CodeMirror.defineOption("foldOptions", null);

  function getOption(cm, options, name) {
    if (options && options[name] !== undefined) return options[name];
    var editorOptions = cm.options.foldOptions;
    if (editorOptions && editorOptions[name] !== undefined) return editorOptions[name];
    return defaultOptions[name];
  }

  CodeMirror.defineExtension("foldOption", function (options, name) {
    return getOption(this, options, name);
  });
});

/***/ }),

/***/ "w37R":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Notice; });
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("5hJT");
/* harmony import */ var core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_assign__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("W1QL");
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es6_array_iterator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("K/PF");
/* harmony import */ var core_js_modules_es6_array_iterator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_iterator__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es6_object_keys__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("75LO");
/* harmony import */ var core_js_modules_es6_object_keys__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_keys__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es6_array_reduce__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("3y5y");
/* harmony import */ var core_js_modules_es6_array_reduce__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_reduce__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("4aJ6");
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("M/4x");
/* harmony import */ var core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("t91x");
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es6_reflect_construct__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("LXYL");
/* harmony import */ var core_js_modules_es6_reflect_construct__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_reflect_construct__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("mK0O");
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("hisu");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("yBJb");
/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("CHlC");
/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("kMo5");
/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__("P+uj");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__("mXGw");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__("xARA");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__("8Jek");
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_17__);
















function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();

  return function () {
    var Super = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_14__[/* default */ "a"])(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_14__[/* default */ "a"])(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_13__[/* default */ "a"])(this, result);
  };
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}





var Notice = /*#__PURE__*/function (_Component) {
  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_12__[/* default */ "a"])(Notice, _Component);

  var _super = _createSuper(Notice);

  function Notice() {
    var _this;

    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_10__[/* default */ "a"])(this, Notice);

    _this = _super.apply(this, arguments);
    _this.closeTimer = null;

    _this.close = function (e) {
      if (e) {
        e.stopPropagation();
      }

      _this.clearCloseTimer();

      var onClose = _this.props.onClose;

      if (onClose) {
        onClose();
      }
    };

    _this.startCloseTimer = function () {
      if (_this.props.duration) {
        _this.closeTimer = window.setTimeout(function () {
          _this.close();
        }, _this.props.duration * 1000);
      }
    };

    _this.clearCloseTimer = function () {
      if (_this.closeTimer) {
        clearTimeout(_this.closeTimer);
        _this.closeTimer = null;
      }
    };

    return _this;
  }

  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_11__[/* default */ "a"])(Notice, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.startCloseTimer();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (this.props.duration !== prevProps.duration || this.props.update) {
        this.restartCloseTimer();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.clearCloseTimer();
    }
  }, {
    key: "restartCloseTimer",
    value: function restartCloseTimer() {
      this.clearCloseTimer();
      this.startCloseTimer();
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          prefixCls = _this$props.prefixCls,
          className = _this$props.className,
          closable = _this$props.closable,
          closeIcon = _this$props.closeIcon,
          style = _this$props.style,
          onClick = _this$props.onClick,
          children = _this$props.children,
          holder = _this$props.holder;
      var componentClass = "".concat(prefixCls, "-notice");
      var dataOrAriaAttributeProps = Object.keys(this.props).reduce(function (acc, key) {
        if (key.substr(0, 5) === 'data-' || key.substr(0, 5) === 'aria-' || key === 'role') {
          acc[key] = _this2.props[key];
        }

        return acc;
      }, {});
      var node = react__WEBPACK_IMPORTED_MODULE_15___default.a.createElement("div", Object.assign({
        className: classnames__WEBPACK_IMPORTED_MODULE_17___default()(componentClass, className, Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_9__[/* default */ "a"])({}, "".concat(componentClass, "-closable"), closable)),
        style: style,
        onMouseEnter: this.clearCloseTimer,
        onMouseLeave: this.startCloseTimer,
        onClick: onClick
      }, dataOrAriaAttributeProps), react__WEBPACK_IMPORTED_MODULE_15___default.a.createElement("div", {
        className: "".concat(componentClass, "-content")
      }, children), closable ? react__WEBPACK_IMPORTED_MODULE_15___default.a.createElement("a", {
        tabIndex: 0,
        onClick: this.close,
        className: "".concat(componentClass, "-close")
      }, closeIcon || react__WEBPACK_IMPORTED_MODULE_15___default.a.createElement("span", {
        className: "".concat(componentClass, "-close-x")
      })) : null);

      if (holder) {
        return react_dom__WEBPACK_IMPORTED_MODULE_16___default.a.createPortal(node, holder);
      }

      return node;
    }
  }]);

  return Notice;
}(react__WEBPACK_IMPORTED_MODULE_15__["Component"]);


Notice.defaultProps = {
  onClose: function onClose() {},
  duration: 1.5,
  style: {
    right: '50%'
  }
};

/***/ }),

/***/ "w4Md":
/***/ (function(module, exports, __webpack_require__) {

var _checkForMethod = __webpack_require__("vXgj");

var _curry3 = __webpack_require__("a2XJ");
/**
 * Returns the elements of the given list or string (or object with a `slice`
 * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).
 *
 * Dispatches to the `slice` method of the third argument, if present.
 *
 * @func
 * @memberOf R
 * @since v0.1.4
 * @category List
 * @sig Number -> Number -> [a] -> [a]
 * @sig Number -> Number -> String -> String
 * @param {Number} fromIndex The start index (inclusive).
 * @param {Number} toIndex The end index (exclusive).
 * @param {*} list
 * @return {*}
 * @example
 *
 *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']
 *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']
 *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']
 *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']
 *      R.slice(0, 3, 'ramda');                     //=> 'ram'
 */


module.exports = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {
  return Array.prototype.slice.call(list, fromIndex, toIndex);
}));

/***/ }),

/***/ "wEu9":
/***/ (function(module, exports) {

module.exports = false;


/***/ }),

/***/ "wUFM":
/***/ (function(module, exports, __webpack_require__) {

var $parseFloat = __webpack_require__("P56o").parseFloat;
var $trim = __webpack_require__("hGr/").trim;

module.exports = 1 / $parseFloat(__webpack_require__("SvMv") + '-0') !== -Infinity ? function parseFloat(str) {
  var string = $trim(String(str), 3);
  var result = $parseFloat(string);
  return result === 0 && string.charAt(0) == '-' ? -0 : result;
} : $parseFloat;


/***/ }),

/***/ "wV56":
/***/ (function(module, exports, __webpack_require__) {

var _curry3 = __webpack_require__("a2XJ");

var _reduce = __webpack_require__("o2D/");
/**
 * Returns a single item by iterating through the list, successively calling
 * the iterator function and passing it an accumulator value and the current
 * value from the array, and then passing the result to the next call.
 *
 * The iterator function receives two values: *(acc, value)*. It may use
 * [`R.reduced`](#reduced) to shortcut the iteration.
 *
 * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function
 * is *(value, acc)*.
 *
 * Note: `R.reduce` does not skip deleted or unassigned indices (sparse
 * arrays), unlike the native `Array.prototype.reduce` method. For more details
 * on this behavior, see:
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description
 *
 * Dispatches to the `reduce` method of the third argument, if present. When
 * doing so, it is up to the user to handle the [`R.reduced`](#reduced)
 * shortcuting, as this is not implemented by `reduce`.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig ((a, b) -> a) -> a -> [b] -> a
 * @param {Function} fn The iterator function. Receives two values, the accumulator and the
 *        current element from the array.
 * @param {*} acc The accumulator value.
 * @param {Array} list The list to iterate over.
 * @return {*} The final, accumulated value.
 * @see R.reduced, R.addIndex, R.reduceRight
 * @example
 *
 *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10
 *                -               -10
 *               / \              / \
 *              -   4           -6   4
 *             / \              / \
 *            -   3   ==>     -3   3
 *           / \              / \
 *          -   2           -1   2
 *         / \              / \
 *        0   1            0   1
 *
 * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)
 */


module.exports = _curry3(_reduce);

/***/ }),

/***/ "wWt5":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Wave; });
/* harmony import */ var core_js_modules_es6_array_index_of__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("V7cS");
/* harmony import */ var core_js_modules_es6_array_index_of__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_index_of__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_regexp_match__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("9ovy");
/* harmony import */ var core_js_modules_es6_regexp_match__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_match__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("4aJ6");
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("M/4x");
/* harmony import */ var core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_date_to_string__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("t91x");
/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es6_reflect_construct__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("LXYL");
/* harmony import */ var core_js_modules_es6_reflect_construct__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_reflect_construct__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es6_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("1qKx");
/* harmony import */ var core_js_modules_es6_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es6_object_create__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("PAbq");
/* harmony import */ var core_js_modules_es6_object_create__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_create__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("d3/y");
/* harmony import */ var core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_define_property__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("+jjx");
/* harmony import */ var core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("ABKx");
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("mXGw");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("xARA");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _ant_design_css_animation_es_Event__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("V5Oj");
/* harmony import */ var _raf__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__("mTAF");
/* harmony import */ var _config_provider__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__("Bfez");












function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return _possibleConstructorReturn(this, result);
  };
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}






var styleForPesudo; // Where el is the DOM element you'd like to test for visibility

function isHidden(element) {
  if (false) {}

  return !element || element.offsetParent === null;
}

function isNotGrey(color) {
  // eslint-disable-next-line no-useless-escape
  var match = (color || '').match(/rgba?\((\d*), (\d*), (\d*)(, [\d.]*)?\)/);

  if (match && match[1] && match[2] && match[3]) {
    return !(match[1] === match[2] && match[2] === match[3]);
  }

  return true;
}

var Wave = /*#__PURE__*/function (_React$Component) {
  _inherits(Wave, _React$Component);

  var _super = _createSuper(Wave);

  function Wave() {
    var _this;

    _classCallCheck(this, Wave);

    _this = _super.apply(this, arguments);
    _this.animationStart = false;
    _this.destroyed = false;

    _this.onClick = function (node, waveColor) {
      if (!node || isHidden(node) || node.className.indexOf('-leave') >= 0) {
        return;
      }

      var insertExtraNode = _this.props.insertExtraNode;
      _this.extraNode = document.createElement('div');

      var _assertThisInitialize = _assertThisInitialized(_this),
          extraNode = _assertThisInitialize.extraNode;

      var getPrefixCls = _this.context.getPrefixCls;
      extraNode.className = "".concat(getPrefixCls(''), "-click-animating-node");

      var attributeName = _this.getAttributeName();

      node.setAttribute(attributeName, 'true'); // Not white or transparnt or grey

      styleForPesudo = styleForPesudo || document.createElement('style');

      if (waveColor && waveColor !== '#ffffff' && waveColor !== 'rgb(255, 255, 255)' && isNotGrey(waveColor) && !/rgba\((?:\d*, ){3}0\)/.test(waveColor) && // any transparent rgba color
      waveColor !== 'transparent') {
        // Add nonce if CSP exist
        if (_this.csp && _this.csp.nonce) {
          styleForPesudo.nonce = _this.csp.nonce;
        }

        extraNode.style.borderColor = waveColor;
        styleForPesudo.innerHTML = "\n      [".concat(getPrefixCls(''), "-click-animating-without-extra-node='true']::after, .").concat(getPrefixCls(''), "-click-animating-node {\n        --antd-wave-shadow-color: ").concat(waveColor, ";\n      }");

        if (!document.body.contains(styleForPesudo)) {
          document.body.appendChild(styleForPesudo);
        }
      }

      if (insertExtraNode) {
        node.appendChild(extraNode);
      }

      _ant_design_css_animation_es_Event__WEBPACK_IMPORTED_MODULE_13__[/* default */ "a"].addStartEventListener(node, _this.onTransitionStart);
      _ant_design_css_animation_es_Event__WEBPACK_IMPORTED_MODULE_13__[/* default */ "a"].addEndEventListener(node, _this.onTransitionEnd);
    };

    _this.onTransitionStart = function (e) {
      if (_this.destroyed) {
        return;
      }

      var node = Object(react_dom__WEBPACK_IMPORTED_MODULE_12__["findDOMNode"])(_assertThisInitialized(_this));

      if (!e || e.target !== node || _this.animationStart) {
        return;
      }

      _this.resetEffect(node);
    };

    _this.onTransitionEnd = function (e) {
      if (!e || e.animationName !== 'fadeEffect') {
        return;
      }

      _this.resetEffect(e.target);
    };

    _this.bindAnimationEvent = function (node) {
      if (!node || !node.getAttribute || node.getAttribute('disabled') || node.className.indexOf('disabled') >= 0) {
        return;
      }

      var onClick = function onClick(e) {
        // Fix radio button click twice
        if (e.target.tagName === 'INPUT' || isHidden(e.target)) {
          return;
        }

        _this.resetEffect(node); // Get wave color from target


        var waveColor = getComputedStyle(node).getPropertyValue('border-top-color') || // Firefox Compatible
        getComputedStyle(node).getPropertyValue('border-color') || getComputedStyle(node).getPropertyValue('background-color');
        _this.clickWaveTimeoutId = window.setTimeout(function () {
          return _this.onClick(node, waveColor);
        }, 0);
        _raf__WEBPACK_IMPORTED_MODULE_14__[/* default */ "a"].cancel(_this.animationStartId);
        _this.animationStart = true; // Render to trigger transition event cost 3 frames. Let's delay 10 frames to reset this.

        _this.animationStartId = Object(_raf__WEBPACK_IMPORTED_MODULE_14__[/* default */ "a"])(function () {
          _this.animationStart = false;
        }, 10);
      };

      node.addEventListener('click', onClick, true);
      return {
        cancel: function cancel() {
          node.removeEventListener('click', onClick, true);
        }
      };
    };

    _this.renderWave = function (_ref) {
      var csp = _ref.csp;
      var children = _this.props.children;
      _this.csp = csp;
      return children;
    };

    return _this;
  }

  _createClass(Wave, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var node = Object(react_dom__WEBPACK_IMPORTED_MODULE_12__["findDOMNode"])(this);

      if (!node || node.nodeType !== 1) {
        return;
      }

      this.instance = this.bindAnimationEvent(node);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.instance) {
        this.instance.cancel();
      }

      if (this.clickWaveTimeoutId) {
        clearTimeout(this.clickWaveTimeoutId);
      }

      this.destroyed = true;
    }
  }, {
    key: "getAttributeName",
    value: function getAttributeName() {
      var getPrefixCls = this.context.getPrefixCls;
      var insertExtraNode = this.props.insertExtraNode;
      return insertExtraNode ? "".concat(getPrefixCls(''), "-click-animating") : "".concat(getPrefixCls(''), "-click-animating-without-extra-node");
    }
  }, {
    key: "resetEffect",
    value: function resetEffect(node) {
      if (!node || node === this.extraNode || !(node instanceof Element)) {
        return;
      }

      var insertExtraNode = this.props.insertExtraNode;
      var attributeName = this.getAttributeName();
      node.setAttribute(attributeName, 'false'); // edge has bug on `removeAttribute` #14466

      if (styleForPesudo) {
        styleForPesudo.innerHTML = '';
      }

      if (insertExtraNode && this.extraNode && node.contains(this.extraNode)) {
        node.removeChild(this.extraNode);
      }

      _ant_design_css_animation_es_Event__WEBPACK_IMPORTED_MODULE_13__[/* default */ "a"].removeStartEventListener(node, this.onTransitionStart);
      _ant_design_css_animation_es_Event__WEBPACK_IMPORTED_MODULE_13__[/* default */ "a"].removeEndEventListener(node, this.onTransitionEnd);
    }
  }, {
    key: "render",
    value: function render() {
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_11__["createElement"](_config_provider__WEBPACK_IMPORTED_MODULE_15__[/* ConfigConsumer */ "a"], null, this.renderWave);
    }
  }]);

  return Wave;
}(react__WEBPACK_IMPORTED_MODULE_11__["Component"]);


Wave.contextType = _config_provider__WEBPACK_IMPORTED_MODULE_15__[/* ConfigContext */ "b"];

/***/ }),

/***/ "wYtd":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "wc+d":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("W1QL");

__webpack_require__("K/PF");

__webpack_require__("t91x");

__webpack_require__("3DBk");

__webpack_require__("yIlq");

__webpack_require__("Z8gF");

__webpack_require__("9ovy");

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.redirectToHome = exports.nPaths = exports.getUrlForLang = exports.getSlugAndLang = exports.getLangs = exports.getI18nBase = exports.getValidLangKey = exports.getUserLangKey = exports.getPagesPaths = exports.getCurrentLangKey = exports.getBrowserLanguage = exports.isInPagesPaths = exports.isHomePage = exports.addLangKeyToSlug = undefined;

var _startsWith = __webpack_require__("cpHF");

var _startsWith2 = _interopRequireDefault(_startsWith);

var _curry = __webpack_require__("NU6T");

var _curry2 = _interopRequireDefault(_curry);

var _getCurrentLangKey = __webpack_require__("QHSJ");

var _getCurrentLangKey2 = _interopRequireDefault(_getCurrentLangKey);

var _getValidLangKey = __webpack_require__("l5BI");

var _getValidLangKey2 = _interopRequireDefault(_getValidLangKey);

var _getBrowserLanguage = __webpack_require__("ylPP");

var _getBrowserLanguage2 = _interopRequireDefault(_getBrowserLanguage);

var _redirectToHome = __webpack_require__("1qWy");

var _redirectToHome2 = _interopRequireDefault(_redirectToHome);

var _getUserLangKey = __webpack_require__("nsWf");

var _getUserLangKey2 = _interopRequireDefault(_getUserLangKey);

var _getSlugAndLang = __webpack_require__("H8M3");

var _getSlugAndLang2 = _interopRequireDefault(_getSlugAndLang);

var _getPagesPaths = __webpack_require__("aOS5");

var _getPagesPaths2 = _interopRequireDefault(_getPagesPaths);

var _isInPagesPaths = __webpack_require__("mWFu");

var _isInPagesPaths2 = _interopRequireDefault(_isInPagesPaths);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * Gets the number of paths in a url
 * @param {*} url pathName
 * @returns {Number} number of paths
 */


var nPaths = function nPaths(url) {
  return (url.match(/\//g) || []).length - 1;
};
/**
 * Checks if the url is /, /en/ or /pt/
 * @param {*} url this.props.location
 * @returns {Boolean} is home or not
 */


var isHomePage = function isHomePage(url) {
  return nPaths(url) <= 1;
};
/**
 * Add lang to slug
 * @param {String} slug  Slug to add lang
 * @param {String} langKey langKey to add
 * @param {{langKeyDefault: string, prefixDefault: boolean }} options prefixDefault: boolean indicating whether the the urls for the default land should be prefix or not
 * @returns {String} new slug
 */


var addLangKeyToSlug = (0, _curry2["default"])(function (slug, langKey, options) {
  return langKey !== options.langKeyDefault || options.prefixDefault ? '/' + langKey + slug : '' + slug;
});
/**
 * Get url to the language
 * @param {String} homeLink  link for the home page
 * @param {String} url  browser url
 * @param {String} langKey default browser language key
 * @returns {String} new url
 */

var getUrlForLang = (0, _curry2["default"])(function (homeLink, url, langKey) {
  return url === '/' || !(0, _startsWith2["default"])(homeLink, url) ? '/' + langKey + '/' : url.replace(homeLink, '/' + langKey + '/');
});
/**
 * Get langs to create Menu
 * @param {[String]} langs lang keys ['en', 'fr', 'pt']
 * @param {String} currentLangKey current Lang Key
 * @param {func} getUrlForLang getUrlForLang curried, waiting for langKey
 * @returns {Array} langs menu data
 */

var getLangs = (0, _curry2["default"])(function (langs, currentLangKey, getUrlForLang) {
  return langs.map(function (langKey) {
    return {
      langKey: langKey,
      selected: currentLangKey === langKey,
      link: getUrlForLang(langKey)
    };
  });
});
/**
 * Get i18n obj for the given langKey or first when not found
 * @param {*} i18n Translations object
 * @param {*} langKey langKey
 * @returns {*} i18n[langKey] or i18n[defaultLangKey]
 */

var getI18nBase = (0, _curry2["default"])(function (i18n, langKey) {
  return i18n[langKey] || Object.values(i18n)[0];
});
exports.addLangKeyToSlug = addLangKeyToSlug;
exports.isHomePage = isHomePage;
exports.isInPagesPaths = _isInPagesPaths2["default"];
exports.getBrowserLanguage = _getBrowserLanguage2["default"];
exports.getCurrentLangKey = _getCurrentLangKey2["default"];
exports.getPagesPaths = _getPagesPaths2["default"];
exports.getUserLangKey = _getUserLangKey2["default"];
exports.getValidLangKey = _getValidLangKey2["default"];
exports.getI18nBase = getI18nBase;
exports.getLangs = getLangs;
exports.getSlugAndLang = _getSlugAndLang2["default"];
exports.getUrlForLang = getUrlForLang;
exports.nPaths = nPaths;
exports.redirectToHome = _redirectToHome2["default"];

/***/ }),

/***/ "wjI5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  isString: function isString(arg) {
    return typeof arg === 'string';
  },
  isObject: function isObject(arg) {
    return typeof arg === 'object' && arg !== null;
  },
  isNull: function isNull(arg) {
    return arg === null;
  },
  isNullOrUndefined: function isNullOrUndefined(arg) {
    return arg == null;
  }
};

/***/ }),

/***/ "wp6D":
/***/ (function(module, exports, __webpack_require__) {

var _curry2 = __webpack_require__("OFPg");

var drop = __webpack_require__("g2V6");
/**
 * Returns a new list containing the last `n` elements of the given list.
 * If `n > list.length`, returns a list of `list.length` elements.
 *
 * @func
 * @memberOf R
 * @since v0.16.0
 * @category List
 * @sig Number -> [a] -> [a]
 * @sig Number -> String -> String
 * @param {Number} n The number of elements to return.
 * @param {Array} xs The collection to consider.
 * @return {Array}
 * @see R.dropLast
 * @example
 *
 *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']
 *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']
 *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']
 *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']
 *      R.takeLast(3, 'ramda');               //=> 'mda'
 */


module.exports = _curry2(function takeLast(n, xs) {
  return drop(n >= 0 ? xs.length - n : 0, xs);
});

/***/ }),

/***/ "wuHH":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});

function requestAnimationFrame(fn) {
  var method = window.requestAnimationFrame || window.webkitRequestAnimationFrame || // @ts-ignore
  window.mozRequestAnimationFrame || // @ts-ignore
  window.msRequestAnimationFrame || function (f) {
    return setTimeout(f, 16);
  };

  return method(fn);
}

exports["default"] = requestAnimationFrame;
;

/***/ }),

/***/ "wyB9":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("9ovy");

// CodeMirror, copyright (c) by Marijn Haverbeke and others
// Distributed under an MIT license: https://codemirror.net/LICENSE
(function (mod) {
  if (true) // CommonJS
    mod(__webpack_require__("Dln1"));else {}
})(function (CodeMirror) {
  var ie_lt8 = /MSIE \d/.test(navigator.userAgent) && (document.documentMode == null || document.documentMode < 8);
  var Pos = CodeMirror.Pos;
  var matching = {
    "(": ")>",
    ")": "(<",
    "[": "]>",
    "]": "[<",
    "{": "}>",
    "}": "{<",
    "<": ">>",
    ">": "<<"
  };

  function bracketRegex(config) {
    return config && config.bracketRegex || /[(){}[\]]/;
  }

  function findMatchingBracket(cm, where, config) {
    var line = cm.getLineHandle(where.line),
        pos = where.ch - 1;
    var afterCursor = config && config.afterCursor;
    if (afterCursor == null) afterCursor = /(^| )cm-fat-cursor($| )/.test(cm.getWrapperElement().className);
    var re = bracketRegex(config); // A cursor is defined as between two characters, but in in vim command mode
    // (i.e. not insert mode), the cursor is visually represented as a
    // highlighted box on top of the 2nd character. Otherwise, we allow matches
    // from before or after the cursor.

    var match = !afterCursor && pos >= 0 && re.test(line.text.charAt(pos)) && matching[line.text.charAt(pos)] || re.test(line.text.charAt(pos + 1)) && matching[line.text.charAt(++pos)];
    if (!match) return null;
    var dir = match.charAt(1) == ">" ? 1 : -1;
    if (config && config.strict && dir > 0 != (pos == where.ch)) return null;
    var style = cm.getTokenTypeAt(Pos(where.line, pos + 1));
    var found = scanForBracket(cm, Pos(where.line, pos + (dir > 0 ? 1 : 0)), dir, style || null, config);
    if (found == null) return null;
    return {
      from: Pos(where.line, pos),
      to: found && found.pos,
      match: found && found.ch == match.charAt(0),
      forward: dir > 0
    };
  } // bracketRegex is used to specify which type of bracket to scan
  // should be a regexp, e.g. /[[\]]/
  //
  // Note: If "where" is on an open bracket, then this bracket is ignored.
  //
  // Returns false when no bracket was found, null when it reached
  // maxScanLines and gave up


  function scanForBracket(cm, where, dir, style, config) {
    var maxScanLen = config && config.maxScanLineLength || 10000;
    var maxScanLines = config && config.maxScanLines || 1000;
    var stack = [];
    var re = bracketRegex(config);
    var lineEnd = dir > 0 ? Math.min(where.line + maxScanLines, cm.lastLine() + 1) : Math.max(cm.firstLine() - 1, where.line - maxScanLines);

    for (var lineNo = where.line; lineNo != lineEnd; lineNo += dir) {
      var line = cm.getLine(lineNo);
      if (!line) continue;
      var pos = dir > 0 ? 0 : line.length - 1,
          end = dir > 0 ? line.length : -1;
      if (line.length > maxScanLen) continue;
      if (lineNo == where.line) pos = where.ch - (dir < 0 ? 1 : 0);

      for (; pos != end; pos += dir) {
        var ch = line.charAt(pos);

        if (re.test(ch) && (style === undefined || cm.getTokenTypeAt(Pos(lineNo, pos + 1)) == style)) {
          var match = matching[ch];
          if (match && match.charAt(1) == ">" == dir > 0) stack.push(ch);else if (!stack.length) return {
            pos: Pos(lineNo, pos),
            ch: ch
          };else stack.pop();
        }
      }
    }

    return lineNo - dir == (dir > 0 ? cm.lastLine() : cm.firstLine()) ? false : null;
  }

  function matchBrackets(cm, autoclear, config) {
    // Disable brace matching in long lines, since it'll cause hugely slow updates
    var maxHighlightLen = cm.state.matchBrackets.maxHighlightLineLength || 1000;
    var marks = [],
        ranges = cm.listSelections();

    for (var i = 0; i < ranges.length; i++) {
      var match = ranges[i].empty() && findMatchingBracket(cm, ranges[i].head, config);

      if (match && cm.getLine(match.from.line).length <= maxHighlightLen) {
        var style = match.match ? "CodeMirror-matchingbracket" : "CodeMirror-nonmatchingbracket";
        marks.push(cm.markText(match.from, Pos(match.from.line, match.from.ch + 1), {
          className: style
        }));
        if (match.to && cm.getLine(match.to.line).length <= maxHighlightLen) marks.push(cm.markText(match.to, Pos(match.to.line, match.to.ch + 1), {
          className: style
        }));
      }
    }

    if (marks.length) {
      // Kludge to work around the IE bug from issue #1193, where text
      // input stops going to the textare whever this fires.
      if (ie_lt8 && cm.state.focused) cm.focus();

      var clear = function clear() {
        cm.operation(function () {
          for (var i = 0; i < marks.length; i++) {
            marks[i].clear();
          }
        });
      };

      if (autoclear) setTimeout(clear, 800);else return clear;
    }
  }

  function doMatchBrackets(cm) {
    cm.operation(function () {
      if (cm.state.matchBrackets.currentlyHighlighted) {
        cm.state.matchBrackets.currentlyHighlighted();
        cm.state.matchBrackets.currentlyHighlighted = null;
      }

      cm.state.matchBrackets.currentlyHighlighted = matchBrackets(cm, false, cm.state.matchBrackets);
    });
  }

  CodeMirror.defineOption("matchBrackets", false, function (cm, val, old) {
    function clear(cm) {
      if (cm.state.matchBrackets && cm.state.matchBrackets.currentlyHighlighted) {
        cm.state.matchBrackets.currentlyHighlighted();
        cm.state.matchBrackets.currentlyHighlighted = null;
      }
    }

    if (old && old != CodeMirror.Init) {
      cm.off("cursorActivity", doMatchBrackets);
      cm.off("focus", doMatchBrackets);
      cm.off("blur", clear);
      clear(cm);
    }

    if (val) {
      cm.state.matchBrackets = typeof val == "object" ? val : {};
      cm.on("cursorActivity", doMatchBrackets);
      cm.on("focus", doMatchBrackets);
      cm.on("blur", clear);
    }
  });
  CodeMirror.defineExtension("matchBrackets", function () {
    matchBrackets(this, true);
  });
  CodeMirror.defineExtension("findMatchingBracket", function (pos, config, oldConfig) {
    // Backwards-compatibility kludge
    if (oldConfig || typeof config == "boolean") {
      if (!oldConfig) {
        config = config ? {
          strict: true
        } : null;
      } else {
        oldConfig.strict = config;
        config = oldConfig;
      }
    }

    return findMatchingBracket(this, pos, config);
  });
  CodeMirror.defineExtension("scanForBracket", function (pos, dir, style, config) {
    return scanForBracket(this, pos, dir, style, config);
  });
});

/***/ }),

/***/ "x9u5":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("Kz1y");
/* harmony import */ var babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__);


function omit(obj, fields) {
  var shallowCopy = babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default()({}, obj);

  for (var i = 0; i < fields.length; i++) {
    var key = fields[i];
    delete shallowCopy[key];
  }

  return shallowCopy;
}

/* harmony default export */ __webpack_exports__["a"] = (omit);

/***/ }),

/***/ "xCUo":
/***/ (function(module, exports, __webpack_require__) {

var _curry1 = __webpack_require__("AN6r");

var _isArray = __webpack_require__("GwS+");

var _isString = __webpack_require__("74ju");
/**
 * Tests whether or not an object is similar to an array.
 *
 * @private
 * @category Type
 * @category List
 * @sig * -> Boolean
 * @param {*} x The object to test.
 * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.
 * @example
 *
 *      _isArrayLike([]); //=> true
 *      _isArrayLike(true); //=> false
 *      _isArrayLike({}); //=> false
 *      _isArrayLike({length: 10}); //=> false
 *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true
 */


module.exports = _curry1(function isArrayLike(x) {
  if (_isArray(x)) {
    return true;
  }

  if (!x) {
    return false;
  }

  if (typeof x !== 'object') {
    return false;
  }

  if (_isString(x)) {
    return false;
  }

  if (x.nodeType === 1) {
    return !!x.length;
  }

  if (x.length === 0) {
    return true;
  }

  if (x.length > 0) {
    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);
  }

  return false;
});

/***/ }),

/***/ "xI3J":
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.3 Number.isInteger(number)
var isObject = __webpack_require__("Bsg+");
var floor = Math.floor;
module.exports = function isInteger(it) {
  return !isObject(it) && isFinite(it) && floor(it) === it;
};


/***/ }),

/***/ "xJ2c":
/***/ (function(module, exports, __webpack_require__) {

var React = __webpack_require__("mXGw");

function Antv (props) {
    return React.createElement("svg",props,[React.createElement("title",{"key":0},"logo"),React.createElement("desc",{"key":1},"Created with Sketch."),React.createElement("defs",{"key":2},[React.createElement("linearGradient",{"id":"linearGradient-1","x1":".004%","x2":"100.131%","y1":"49.993%","y2":"49.993%","key":0},[React.createElement("stop",{"offset":"0%","stopColor":"#6500FF","key":0}),React.createElement("stop",{"offset":"16%","stopColor":"#6A09FF","key":1}),React.createElement("stop",{"offset":"43%","stopColor":"#7623FF","key":2}),React.createElement("stop",{"offset":"77%","stopColor":"#8A4CFF","key":3}),React.createElement("stop",{"offset":"99%","stopColor":"#996BFF","key":4})]),React.createElement("linearGradient",{"id":"linearGradient-2","x1":"50.004%","x2":"50.004%","y1":"100.012%","y2":"0%","key":1},[React.createElement("stop",{"offset":"0%","stopColor":"#6500FF","key":0}),React.createElement("stop",{"offset":"16%","stopColor":"#6909FF","key":1}),React.createElement("stop",{"offset":"43%","stopColor":"#7523FF","key":2}),React.createElement("stop",{"offset":"77%","stopColor":"#894CFF","key":3}),React.createElement("stop",{"offset":"99%","stopColor":"#976BFF","key":4})]),React.createElement("linearGradient",{"id":"linearGradient-3","x1":"49.854%","x2":"49.854%","y1":"100.255%","y2":"0%","key":2},[React.createElement("stop",{"offset":"0%","stopColor":"#FF6E06","key":0}),React.createElement("stop",{"offset":"28%","stopColor":"#FF770C","key":1}),React.createElement("stop",{"offset":"75%","stopColor":"#FF911C","key":2}),React.createElement("stop",{"offset":"100%","stopColor":"#FFA126","key":3})]),React.createElement("linearGradient",{"id":"linearGradient-4","x1":"57351%","x2":"57351%","y1":"59860%","y2":"35023%","key":3},[React.createElement("stop",{"offset":"0%","stopColor":"#FF6E06","key":0}),React.createElement("stop",{"offset":"28%","stopColor":"#FF770C","key":1}),React.createElement("stop",{"offset":"75%","stopColor":"#FF911C","key":2}),React.createElement("stop",{"offset":"100%","stopColor":"#FFA126","key":3})])]),React.createElement("g",{"id":"首页","fill":"none","fillRule":"evenodd","stroke":"none","strokeWidth":"1","transform":"translate(-40.000000, -21.000000)","key":3},React.createElement("g",{"id":"logo","fillRule":"nonzero","transform":"translate(40.000000, 21.000000)"},[React.createElement("g",{"id":"text","fill":"#000","transform":"translate(40.000000, 4.000000)","key":0},[React.createElement("path",{"id":"Shape","d":"M8.7405,1.2915 C8.51971803,0.727507979 7.97591631,0.356402076 7.37025,0.356402076 C6.76458369,0.356402076 6.22078197,0.727507979 6,1.2915 L0.0915,16.224 C0.303214856,16.7668034 0.833635444,17.1176139 1.416,17.1 C1.99787286,17.1149847 2.52631953,16.7624868 2.736,16.2195 L4.236,12.1845 L10.464,12.1845 L11.964,16.2195 C12.1824954,16.7696588 12.7145414,17.1308265 13.3065,17.1308265 C13.8984586,17.1308265 14.4305046,16.7696588 14.649,16.2195 L8.7405,1.2915 Z M4.875,10.3245 L7.3125,3.7755 L7.38,3.7755 L9.8175,10.3245 L4.875,10.3245 Z","key":0}),React.createElement("path",{"id":"Shape","d":"M23.616,4.8675 C21.711,4.8675 20.3625,5.5605 19.6155,6.885 L19.5705,6.885 L19.5705,4.992 C19.3939707,4.49572722 18.9242345,4.16424813 18.3975,4.16424813 C17.8707655,4.16424813 17.4010293,4.49572722 17.2245,4.992 L17.2245,16.23 C17.3727212,16.7871906 17.8771818,17.1750009 18.45375,17.1750009 C19.0303182,17.1750009 19.5347788,16.7871906 19.683,16.23 L19.683,9.741 C19.683,7.971 20.907,6.792 22.7655,6.792 C24.5655,6.792 25.542,7.7445 25.542,9.4515 L25.542,16.23 C25.6902212,16.7871906 26.1946818,17.1750009 26.77125,17.1750009 C27.3478182,17.1750009 27.8522788,16.7871906 28.0005,16.23 L28.0005,9.03 C28.002,6.4395 26.3355,4.8675 23.616,4.8675 Z","key":1}),React.createElement("path",{"id":"Shape","d":"M37.164,15.2175 C37.005,15.2385 36.5865,15.27 36.3255,15.27 C35.2935,15.27 34.818,14.82 34.818,13.842 L34.818,7.5555 L37.176,7.5555 C37.4674337,7.35650372 37.6417542,7.0263925 37.6417542,6.6735 C37.6417542,6.3206075 37.4674337,5.99049628 37.176,5.7915 L37.176,5.7795 L34.818,5.7795 L34.818,3.2625 L34.809,3.2625 C34.5697886,2.81087163 34.1005678,2.5284255 33.5895,2.5284255 C33.0784322,2.5284255 32.6092114,2.81087163 32.37,3.2625 L32.37,5.787 L30.669,5.787 L30.669,5.8035 C30.3813594,6.00305662 30.2097838,6.33091436 30.2097838,6.681 C30.2097838,7.03108564 30.3813594,7.35894338 30.669,7.5585 L32.37,7.5585 L32.37,14.0655 C32.37,16.239 33.3225,17.097 35.7825,17.097 C36.246017,17.1013951 36.708959,17.063235 37.1655,16.983 C37.4531479,16.7817619 37.6244786,16.4528028 37.6244786,16.10175 C37.6244786,15.7506972 37.4531479,15.4217381 37.1655,15.2205 L37.164,15.2175 Z","key":2}),React.createElement("path",{"id":"Shape","d":"M53.9085,1.041 C53.6915775,0.484686746 53.1556096,0.118403837 52.5585,0.118403837 C51.9613904,0.118403837 51.4254225,0.484686746 51.2085,1.041 L46.7325,13.365 L46.665,13.365 L42.21,1.041 L42.219,1.041 C41.991677,0.479831031 41.4467137,0.112610372 40.84125,0.112610372 C40.2357863,0.112610372 39.690823,0.479831031 39.4635,1.041 L45.3,15.9735 C45.402,16.5915 45.9855,17.067 46.692,17.067 C47.3985,17.067 47.9805,16.593 48.084,15.9735 L53.9085,1.041 Z","key":3})]),React.createElement("g",{"id":"Shape","key":1},[React.createElement("path",{"fill":"url(#linearGradient-1)","d":"M1.96144278,0.00379393843 C1.93278766,0.00379393843 1.90413254,0.00379393843 1.87375812,0.00597764254 C1.82628614,0.00725146994 1.80317101,0.00888924802 1.78005588,0.0108909768 C1.73258391,0.015258385 1.70450189,0.0186249288 1.67661091,0.0226283864 C1.63448789,0.0291794987 1.61271,0.0329099932 1.59093211,0.0370954261 C1.53906635,0.0471950576 1.51213054,0.0529272809 1.48548128,0.0594783932 C1.453101,0.0676672836 1.4290307,0.0742183959 1.40524695,0.0810424713 C1.36006738,0.0949635849 1.34096397,0.101150747 1.32186056,0.107519884 C1.2750572,0.123715689 1.25079587,0.132814456 1.22672557,0.142459149 C1.184316,0.16001977 1.16769603,0.167116808 1.15107606,0.174395822 L1.12242094,0.187225084 C1.10331753,0.196323851 1.08421412,0.205422618 1.06511071,0.214521385 L1.03387663,0.230899166 C1.01811632,0.239361019 1.002356,0.247822873 0.986882238,0.256557689 L0.955934712,0.274573248 L0.917250303,0.29832103 L0.888595186,0.316882515 C0.869491775,0.329438814 0.850388363,0.342268075 0.831284952,0.3553703 L0.797758465,0.38075586 L0.76738404,0.40341179 L0.734717207,0.42879735 L0.706062089,0.452545133 C0.686958678,0.468013037 0.66871492,0.483844892 0.651330815,0.500040697 L0.627833619,0.521331812 C0.616562606,0.531704407 0.605482628,0.542258976 0.594593683,0.552995522 L0.57424855,0.573194785 C0.550942388,0.596669604 0.528304845,0.620690349 0.506335922,0.64525702 C0.4888563,0.66518332 0.477967356,0.677739619 0.467364963,0.69056888 L0.451891199,0.709403328 C0.441288806,0.722505553 0.430686412,0.73669963 0.420657121,0.748710002 C0.392766141,0.78592396 0.373089627,0.813220261 0.354177249,0.840698538 L0.343288305,0.856803356 C0.333736599,0.871179408 0.324184893,0.885737435 0.314633188,0.900477438 L0.304317345,0.917401145 L0.296293912,0.931049295 L4.0804887,3.1453528 L4.88168578,4 C4.79792689,3.87330151 4.79075687,3.71385419 4.86283506,3.58079687 C4.93491326,3.44773955 5.07548957,3.36091705 5.23242441,3.35253173 L18.126081,3.35253173 C18.1716426,3.35580729 18.2172042,3.35799099 18.2636255,3.35799099 C19.2247383,3.34437937 19.997179,2.59972948 19.9999923,1.68409514 C20.0028056,0.768460793 19.234954,0.0195165058 18.2739414,0.000545926027 L1.96144278,0.00379393843 Z","key":0}),React.createElement("path",{"fill":"url(#linearGradient-2)","d":"M22.7438388,11.3151867 L16.3508566,22.3257033 C16.274965,22.4547197 16.1378066,22.5359862 15.9875806,22.5409448 C15.8373546,22.5459034 15.6950786,22.4738603 15.6107503,22.3501325 L11.5484958,15.3552589 C11.5151833,15.2756059 11.4759174,15.1985462 11.4310276,15.1247266 L4.67293385,3.45883542 C4.28425,2.75990644 4.28254958,1.91173703 4.66842791,1.21127254 C5.05430624,0.510808047 5.77401391,0.0556169131 6.57558023,0.00506221373 L1.98726011,0.000850295183 C1.70028191,-0.00773775303 1.4151096,0.0488237358 1.15340515,0.166238297 C1.11086057,0.18570672 1.07725788,0.202180002 1.04412582,0.219589265 C0.955459897,0.268541118 0.934752357,0.281176874 0.914233068,0.29428062 L0.814836879,0.361671317 C0.763726906,0.399952977 0.748102127,0.412307938 0.732665597,0.424850095 C0.693227147,0.457796658 0.67910837,0.470151619 0.665177844,0.482693776 C0.629598526,0.514985152 0.611526491,0.532394415 0.594019208,0.550084473 C0.559381142,0.585183794 0.543756362,0.601844272 0.528508083,0.618879143 C0.501964783,0.648362572 0.484739875,0.668860576 0.467797343,0.689639374 C0.436736033,0.727546641 0.420923003,0.748325439 0.405392349,0.769385032 C0.385908437,0.795779721 0.370095407,0.819085671 0.354564752,0.842672415 C0.3274567,0.884230011 0.312490797,0.908378344 0.298089644,0.933369061 C-0.0900333359,1.52939569 -0.081932791,2.25296668 0.269004964,2.83322512 L0.435324156,3.12188194 L14.3089991,27.0174998 C14.4452697,27.2688135 14.6373487,27.4859373 14.870644,27.6523763 C14.9087647,27.679239 14.9399202,27.6999242 14.9717345,27.719767 C15.0597415,27.7702164 15.0811079,27.781729 15.1027567,27.7927736 L15.2100594,27.8435974 C15.2692642,27.8684945 15.2880892,27.8757952 15.3069142,27.8829087 C15.3553887,27.9000371 15.3731784,27.9060274 15.3910621,27.9118305 C15.4370894,27.926151 15.4610913,27.9328901 15.4853756,27.9393484 C15.5335677,27.9512353 15.5558753,27.9563832 15.5782771,27.9612503 C15.6169626,27.9693934 15.6435059,27.9738861 15.6700492,27.978098 C15.7186178,27.9851179 15.7445963,27.9887682 15.7708572,27.9912954 C15.8041776,27.9941033 15.8324151,27.9960689 15.8606527,27.9977536 C15.9100684,27.9977536 15.9383059,28 15.9665435,28 C16.0055113,28 16.0292309,28 16.052668,27.9983152 C16.1029309,27.9969113 16.1286271,27.9949457 16.1551704,27.9921378 C16.1882083,27.9893298 16.2164458,27.9856795 16.2424244,27.9817484 C16.2892987,27.9744477 16.3133007,27.9702358 16.3370202,27.9654623 C16.3740114,27.9581616 16.3997076,27.9519841 16.4254037,27.9458066 C16.4708662,27.9339197 16.4916679,27.928023 16.5123754,27.9216583 C16.5536022,27.9090226 16.5773218,27.9008795 16.6010413,27.8924557 C16.6464097,27.8759824 16.6634463,27.8692433 16.6803889,27.8621299 C16.7264161,27.842755 16.7478766,27.833208 16.7690548,27.8239418 L16.8402134,27.7882809 C16.8972533,27.7573935 16.9127839,27.7486889 16.9277498,27.7397034 C17.014345,27.6850421 17.0367468,27.6697856 17.0587721,27.6540611 C17.0796679,27.6390854 17.1047052,27.6202721 17.133884,27.5976214 C17.1766168,27.563926 17.2177495,27.5284523 17.2572821,27.4912002 C17.3084862,27.4427164 17.3481129,27.401346 17.3857629,27.3581036 C17.4284017,27.3092454 17.4652987,27.2624463 17.500125,27.2137752 C17.5353279,27.1645426 17.5680834,27.1136251 17.5983917,27.061023 L17.9739512,26.4216537 L18.0558401,26.2812564 L25.73589,13.0558322 C26.070421,12.5242035 26.0883782,11.8538976 25.7827856,11.3053117 C25.4771931,10.7567258 24.8962203,10.4163314 24.2655606,10.4163633 C23.6317102,10.4178657 23.048049,10.7619023 22.7438388,11.3151867 Z","key":1}),React.createElement("path",{"fill":"url(#linearGradient-3)","d":"M30.1437101,0 L23.6847716,0 C22.749424,0.0183223345 22,0.84716472 22,1.86331122 C22,2.87945772 22.749424,3.7083001 23.6847716,3.72662244 C23.7299585,3.72662244 23.7743086,3.72419862 23.8186587,3.72056289 L26.7432558,3.72056289 C26.957527,3.75250166 27.1172208,3.95131508 27.117303,4.1862392 C27.1173323,4.23951108 27.1089352,4.29239242 27.0924781,4.34257556 L25.5505446,7.24358449 C25.0967914,8.1471655 25.403314,9.27921269 26.235182,9.77208267 C27.0670501,10.2649526 28.1092519,9.93200556 28.5630051,9.02842455 L31.7528661,3.02795647 C31.782061,2.97321855 31.8089314,2.91686475 31.8334773,2.85889507 L31.8365456,2.85132063 C31.8516079,2.81516532 31.8657404,2.77850505 31.8789432,2.74133982 L31.8811746,2.73558325 C31.8870322,2.71861651 31.8928898,2.7013468 31.8984684,2.68407709 L31.9068363,2.65741507 C31.9142745,2.63337886 31.9212478,2.60903968 31.9277562,2.58439751 C31.9316612,2.57046055 31.9352873,2.55622061 31.9389135,2.54228365 C31.9425396,2.52834669 31.9453289,2.51531866 31.9483971,2.50198765 C31.9514654,2.48865664 31.9559283,2.46714524 31.9595544,2.44957255 C31.9620648,2.43715048 31.9645752,2.4247284 31.9668066,2.41230633 C31.9710836,2.38867409 31.9749886,2.36483986 31.9785217,2.34080365 C31.9800094,2.33090639 31.981404,2.32080714 31.9827057,2.31050591 C31.9860529,2.28505581 31.9891211,2.25930272 31.9916315,2.23354964 C31.9916315,2.22991391 31.9916315,2.22658116 31.9916315,2.22294543 C31.9944208,2.19264769 31.9963734,2.16234995 31.997768,2.13387007 C31.997768,2.12619464 31.997768,2.11841822 31.997768,2.1105408 C31.997768,2.08024306 31.9999995,2.04994532 31.9999995,2.01964757 C32.00077,0.905181759 31.1697259,0.00100355849 30.1437101,0 Z","key":2}),React.createElement("path",{"fill":"url(#linearGradient-4)","d":"M19.8878401,7.40978464 C19.7383064,7.15620152 19.4618641,6.99998235 19.1626937,7.00000003 L12.8373895,7.00000003 C12.5382281,6.9999242 12.261761,7.15608029 12.1121725,7.40962229 C11.962584,7.66316428 11.9626109,7.97555472 12.112243,8.22907204 L15.2751831,13.5903738 C15.4247323,13.8438523 15.7011,14 16.0001856,14 C16.2992712,14 16.5756388,13.8438523 16.725188,13.5903738 L19.8878401,8.22935388 C20.0373866,7.97586547 20.0373866,7.66355488 19.8878401,7.41006648 L19.8878401,7.40978464 Z","key":3})])]))]);
}

Antv.defaultProps = {"width":"94","height":"28","version":"1.1","viewBox":"0 0 94 28"};

module.exports = Antv;

Antv.default = Antv;


/***/ }),

/***/ "xTM7":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return toArray; });
/* harmony import */ var core_js_modules_es6_array_is_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("+3V6");
/* harmony import */ var core_js_modules_es6_array_is_array__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_is_array__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_array_for_each__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("7lGJ");
/* harmony import */ var core_js_modules_es6_array_for_each__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_for_each__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("mXGw");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("xVO4");
/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_is__WEBPACK_IMPORTED_MODULE_3__);




function toArray(children) {
  var ret = [];
  react__WEBPACK_IMPORTED_MODULE_2___default.a.Children.forEach(children, function (child) {
    if (child === undefined || child === null) {
      return;
    }

    if (Array.isArray(child)) {
      ret = ret.concat(toArray(child));
    } else if (Object(react_is__WEBPACK_IMPORTED_MODULE_3__["isFragment"])(child) && child.props) {
      ret = ret.concat(toArray(child.props.children));
    } else {
      ret.push(child);
    }
  });
  return ret;
}

/***/ }),

/***/ "xVO4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__("9K2m");
} else {}

/***/ }),

/***/ "xp7Y":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ../node_modules/rc-pagination/es/locale/en_US.js
/* harmony default export */ var en_US = ({
  // Options.jsx
  items_per_page: '/ page',
  jump_to: 'Go to',
  jump_to_confirm: 'confirm',
  page: '',
  // Pagination.jsx
  prev_page: 'Previous Page',
  next_page: 'Next Page',
  prev_5: 'Previous 5 Pages',
  next_5: 'Next 5 Pages',
  prev_3: 'Previous 3 Pages',
  next_3: 'Next 3 Pages'
});
// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.assign.js
var es6_object_assign = __webpack_require__("5hJT");

// CONCATENATED MODULE: ../node_modules/rc-picker/es/locale/en_US.js
var locale = {
  locale: 'en_US',
  today: 'Today',
  now: 'Now',
  backToToday: 'Back to today',
  ok: 'Ok',
  clear: 'Clear',
  month: 'Month',
  year: 'Year',
  timeSelect: 'select time',
  dateSelect: 'select date',
  weekSelect: 'Choose a week',
  monthSelect: 'Choose a month',
  yearSelect: 'Choose a year',
  decadeSelect: 'Choose a decade',
  yearFormat: 'YYYY',
  dateFormat: 'M/D/YYYY',
  dayFormat: 'D',
  dateTimeFormat: 'M/D/YYYY HH:mm:ss',
  monthBeforeYear: true,
  previousMonth: 'Previous month (PageUp)',
  nextMonth: 'Next month (PageDown)',
  previousYear: 'Last year (Control + left)',
  nextYear: 'Next year (Control + right)',
  previousDecade: 'Last decade',
  nextDecade: 'Next decade',
  previousCentury: 'Last century',
  nextCentury: 'Next century'
};
/* harmony default export */ var locale_en_US = (locale);
// CONCATENATED MODULE: ../node_modules/antd/es/time-picker/locale/en_US.js
var en_US_locale = {
  placeholder: 'Select time',
  rangePlaceholder: ['Start time', 'End time']
};
/* harmony default export */ var time_picker_locale_en_US = (en_US_locale);
// CONCATENATED MODULE: ../node_modules/antd/es/date-picker/locale/en_US.js


function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}


 // Merge into a locale object

var locale_en_US_locale = {
  lang: _extends({
    placeholder: 'Select date',
    yearPlaceholder: 'Select year',
    quarterPlaceholder: 'Select quarter',
    monthPlaceholder: 'Select month',
    weekPlaceholder: 'Select week',
    rangePlaceholder: ['Start date', 'End date'],
    rangeYearPlaceholder: ['Start year', 'End year'],
    rangeMonthPlaceholder: ['Start month', 'End month'],
    rangeWeekPlaceholder: ['Start week', 'End week']
  }, locale_en_US),
  timePickerLocale: _extends({}, time_picker_locale_en_US)
}; // All settings at:
// https://github.com/ant-design/ant-design/blob/master/components/date-picker/locale/example.json

/* harmony default export */ var date_picker_locale_en_US = (locale_en_US_locale);
// CONCATENATED MODULE: ../node_modules/antd/es/calendar/locale/en_US.js

/* harmony default export */ var calendar_locale_en_US = (date_picker_locale_en_US);
// CONCATENATED MODULE: ../node_modules/antd/es/locale/default.js
/* eslint-disable no-template-curly-in-string */




var typeTemplate = '${label} is not a valid ${type}';
var localeValues = {
  locale: 'en',
  Pagination: en_US,
  DatePicker: date_picker_locale_en_US,
  TimePicker: time_picker_locale_en_US,
  Calendar: calendar_locale_en_US,
  global: {
    placeholder: 'Please select'
  },
  Table: {
    filterTitle: 'Filter menu',
    filterConfirm: 'OK',
    filterReset: 'Reset',
    filterEmptyText: 'No filters',
    selectAll: 'Select current page',
    selectInvert: 'Invert current page',
    selectionAll: 'Select all data',
    sortTitle: 'Sort',
    expand: 'Expand row',
    collapse: 'Collapse row',
    triggerDesc: 'Click sort by descend',
    triggerAsc: 'Click sort by ascend',
    cancelSort: 'Click to cancel sort'
  },
  Modal: {
    okText: 'OK',
    cancelText: 'Cancel',
    justOkText: 'OK'
  },
  Popconfirm: {
    okText: 'OK',
    cancelText: 'Cancel'
  },
  Transfer: {
    titles: ['', ''],
    searchPlaceholder: 'Search here',
    itemUnit: 'item',
    itemsUnit: 'items',
    remove: 'Remove',
    selectCurrent: 'Select current page',
    removeCurrent: 'Remove current page',
    selectAll: 'Select all data',
    removeAll: 'Remove all data',
    selectInvert: 'Invert current page'
  },
  Upload: {
    uploading: 'Uploading...',
    removeFile: 'Remove file',
    uploadError: 'Upload error',
    previewFile: 'Preview file',
    downloadFile: 'Download file'
  },
  Empty: {
    description: 'No Data'
  },
  Icon: {
    icon: 'icon'
  },
  Text: {
    edit: 'Edit',
    copy: 'Copy',
    copied: 'Copied',
    expand: 'Expand'
  },
  PageHeader: {
    back: 'Back'
  },
  Form: {
    defaultValidateMessages: {
      "default": 'Field validation error ${label}',
      required: 'Please enter ${label}',
      "enum": '${label} must be one of [${enum}]',
      whitespace: '${label} cannot be a blank character',
      date: {
        format: '${label} date format is invalid',
        parse: '${label} cannot be converted to a date',
        invalid: '${label} is an invalid date'
      },
      types: {
        string: typeTemplate,
        method: typeTemplate,
        array: typeTemplate,
        object: typeTemplate,
        number: typeTemplate,
        date: typeTemplate,
        "boolean": typeTemplate,
        integer: typeTemplate,
        "float": typeTemplate,
        regexp: typeTemplate,
        email: typeTemplate,
        url: typeTemplate,
        hex: typeTemplate
      },
      string: {
        len: '${label} must be ${len} characters',
        min: '${label} at least ${min} characters',
        max: '${label} up to ${max} characters',
        range: '${label} must be between ${min}-${max} characters'
      },
      number: {
        len: '${label} must be equal to ${len}',
        min: '${label} minimum value is ${min}',
        max: '${label} maximum value is ${max}',
        range: '${label} must be between ${min}-${max}'
      },
      array: {
        len: 'Must be ${len} ${label}',
        min: 'At least ${min} ${label}',
        max: 'At most ${max} ${label}',
        range: 'The amount of ${label} must be between ${min}-${max}'
      },
      pattern: {
        mismatch: '${label} does not match the pattern ${pattern}'
      }
    }
  }
};
/* harmony default export */ var locale_default = __webpack_exports__["a"] = (localeValues);

/***/ }),

/***/ "xtsi":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("DbwS");__webpack_require__("t91x");var plugins=__webpack_require__("LeKB");var _require$publicLoader=__webpack_require__("emEt").publicLoader,getResourcesForPathname=_require$publicLoader.getResourcesForPathname,getResourcesForPathnameSync=_require$publicLoader.getResourcesForPathnameSync,getResourceURLsForPathname=_require$publicLoader.getResourceURLsForPathname,loadPage=_require$publicLoader.loadPage,loadPageSync=_require$publicLoader.loadPageSync;exports.apiRunner=function(api,args,defaultReturn,argTransform){if(args===void 0){args={};}// Hooks for gatsby-cypress's API handler
if(undefined){if(window.___apiHandler){window.___apiHandler(api);}else if(window.___resolvedAPIs){window.___resolvedAPIs.push(api);}else{window.___resolvedAPIs=[api];}}var results=plugins.map(function(plugin){if(!plugin.plugin[api]){return undefined;}// Deprecated April 2019. Use `loadPageSync` instead
args.getResourcesForPathnameSync=getResourcesForPathnameSync;// Deprecated April 2019. Use `loadPage` instead
args.getResourcesForPathname=getResourcesForPathname;args.getResourceURLsForPathname=getResourceURLsForPathname;args.loadPage=loadPage;args.loadPageSync=loadPageSync;var result=plugin.plugin[api](args,plugin.options);if(result&&argTransform){args=argTransform({args:args,result:result,plugin:plugin});}return result;});// Filter out undefined results.
results=results.filter(function(result){return typeof result!=="undefined";});if(results.length>0){return results;}else if(defaultReturn){return[defaultReturn];}else{return[];}};exports.apiRunnerAsync=function(api,args,defaultReturn){return plugins.reduce(function(previous,next){return next.plugin[api]?previous.then(function(){return next.plugin[api](args,next.options);}):previous;},Promise.resolve());};

/***/ }),

/***/ "xvMO":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.useScrollRestoration = useScrollRestoration;

var _scrollHandler = __webpack_require__("czn3");

var _react = __webpack_require__("mXGw");

var _router = __webpack_require__("JF+v");

function useScrollRestoration(identifier) {
  var location = (0, _router.useLocation)();
  var state = (0, _react.useContext)(_scrollHandler.ScrollContext);
  var ref = (0, _react.useRef)();
  (0, _react.useLayoutEffect)(function () {
    if (ref.current) {
      var position = state.read(location, identifier);
      ref.current.scrollTo(0, position || 0);
    }
  }, []);
  return {
    ref: ref,
    onScroll: function onScroll() {
      if (ref.current) {
        state.save(location, identifier, ref.current.scrollTop);
      }
    }
  };
}

/***/ }),

/***/ "yBJb":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _createClass; });
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

/***/ }),

/***/ "yCBR":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------

var _require = __webpack_require__("vgDc"),
    typeSymbol = _require.typeSymbol;

module.exports = function (type) {
  return function (method, value) {
    var typeName = type[typeSymbol];

    if ({}.FOLKTALE_ASSERTIONS !== 'none' && !type.isPrototypeOf(value)) {
      console.warn(typeName + '.' + method + ' expects a value of the same type, but was given ' + value + '.');

      if ({}.FOLKTALE_ASSERTIONS !== 'minimal') {
        console.warn('\nThis could mean that you\'ve provided the wrong value to the method, in\nwhich case this is a bug in your program, and you should try to track\ndown why the wrong value is getting here.\n\nBut this could also mean that you have more than one ' + typeName + ' library\ninstantiated in your program. This is not **necessarily** a bug, it\ncould happen for several reasons:\n\n 1) You\'re loading the library in Node, and Node\'s cache didn\'t give\n    you back the same instance you had previously requested.\n\n 2) You have more than one Code Realm in your program, and objects\n    created from the same library, in different realms, are interacting.\n\n 3) You have a version conflict of folktale libraries, and objects\n    created from different versions of the library are interacting.\n\nIf your situation fits the cases (1) or (2), you are okay, as long as\nthe objects originate from the same version of the library. Folktale\ndoes not rely on reference checking, only structural checking. However\nyou\'ll want to watch out if you\'re modifying the ' + typeName + "'s prototype,\nbecause you'll have more than one of them, and you'll want to make\nsure you do the same change in all of them \u2014 ideally you shouldn't\nbe modifying the object, though.\n\nIf your situation fits the case (3), you are *probably* okay if the\nversion difference isn't a major one. However, at this point the\nbehaviour of your program using " + typeName + ' is undefined, and you should\ntry looking into why the version conflict is happening.\n\nParametric modules can help ensuring your program only has a single\ninstance of the folktale library. Check out the Folktale Architecture\ndocumentation for more information.\n      ');
      }
    }
  };
};

/***/ }),

/***/ "yIlq":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__("X6VK");
var $map = __webpack_require__("1wfo")(1);

$export($export.P + $export.F * !__webpack_require__("/6rt")([].map, true), 'Array', {
  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
  map: function map(callbackfn /* , thisArg */) {
    return $map(this, callbackfn, arguments[1]);
  }
});


/***/ }),

/***/ "yMzA":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

var _module$exports;

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
} //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------


var Result = __webpack_require__("sfhO");

var _require = __webpack_require__("vgDc"),
    typeSymbol = _require.typeSymbol;
/*~
 * stability: stable
 * name: module folktale/result
 */


module.exports = (_module$exports = {
  Error: Result.Error,
  Ok: Result.Ok,
  hasInstance: Result.hasInstance,
  of: Result.of,
  fromJSON: Result.fromJSON
}, _defineProperty(_module$exports, typeSymbol, Result[typeSymbol]), _defineProperty(_module$exports, 'try', __webpack_require__("fy0x")), _defineProperty(_module$exports, 'fromNullable', function fromNullable(aNullable, fallbackValue) {
  var nullableToResult = __webpack_require__("QVtb");

  if (arguments.length > 1) {
    // eslint-disable-line prefer-rest-params 
    return nullableToResult(aNullable, fallbackValue);
  } else {
    return nullableToResult(aNullable);
  }
}), _defineProperty(_module$exports, 'fromValidation', function fromValidation(aValidation) {
  return __webpack_require__("f7TZ")(aValidation);
}), _defineProperty(_module$exports, 'fromMaybe', function fromMaybe(aMaybe, failureValue) {
  return __webpack_require__("pS6Z")(aMaybe, failureValue);
}), _module$exports);

/***/ }),

/***/ "yOd+":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return EPSILON; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ARRAY_TYPE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return RANDOM; });
/* unused harmony export setMatrixArrayType */
/* unused harmony export toRadian */
/* unused harmony export equals */
/* harmony import */ var core_js_modules_es6_math_hypot__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("aaOZ");
/* harmony import */ var core_js_modules_es6_math_hypot__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_math_hypot__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_typed_float32_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("hMok");
/* harmony import */ var core_js_modules_es6_typed_float32_array__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_typed_float32_array__WEBPACK_IMPORTED_MODULE_1__);



/**
 * Common utilities
 * @module glMatrix
 */
// Configuration Constants
var EPSILON = 0.000001;
var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;
var RANDOM = Math.random;
/**
 * Sets the type of array used when creating new vectors and matrices
 *
 * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array
 */

function setMatrixArrayType(type) {
  ARRAY_TYPE = type;
}
var degree = Math.PI / 180;
/**
 * Convert Degree To Radian
 *
 * @param {Number} a Angle in Degrees
 */

function toRadian(a) {
  return a * degree;
}
/**
 * Tests whether or not the arguments have approximately the same value, within an absolute
 * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less
 * than or equal to 1.0, and a relative tolerance is used for larger values)
 *
 * @param {Number} a The first number to test.
 * @param {Number} b The second number to test.
 * @returns {Boolean} True if the numbers are approximately equal, false otherwise.
 */

function equals(a, b) {
  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));
}
if (!Math.hypot) Math.hypot = function () {
  var y = 0,
      i = arguments.length;

  while (i--) {
    y += arguments[i] * arguments[i];
  }

  return Math.sqrt(y);
};

/***/ }),

/***/ "yRvC":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _LoadingOutlined = _interopRequireDefault(__webpack_require__("6kVO"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    'default': obj
  };
}

var _default = _LoadingOutlined;
exports["default"] = _default;
module.exports = _default;

/***/ }),

/***/ "ylPP":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * Get browser language.
 *
 * @return {String} langKey
 */

var getBrowserLanguage = function getBrowserLanguage() {
  if (typeof window === 'undefined') {
    return null;
  }

  var first = window.navigator.languages ? window.navigator.languages[0] : null;
  var lang = first || window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage;
  return lang;
};

exports["default"] = getBrowserLanguage;

/***/ }),

/***/ "z55C":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("4aJ6");

__webpack_require__("M/4x");

__webpack_require__("t91x");

__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var toString = {}.toString;

var isType = function isType(value, type) {
  return toString.call(value) === '[object ' + type + ']';
};

exports["default"] = isType;

/***/ }),

/***/ "z6KD":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("P56o");
var core = __webpack_require__("R5TD");
var LIBRARY = __webpack_require__("wEu9");
var wksExt = __webpack_require__("fxUj");
var defineProperty = __webpack_require__("U1KF").f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};


/***/ }),

/***/ "zAXs":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var core_js_modules_es6_array_index_of__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("V7cS");
/* harmony import */ var core_js_modules_es6_array_index_of__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_index_of__WEBPACK_IMPORTED_MODULE_0__);


/**
 * @ignore
 * some key-codes definition and utils from closure-library
 * @author yiminghe@gmail.com
 */
var KeyCode = {
  /**
   * MAC_ENTER
   */
  MAC_ENTER: 3,

  /**
   * BACKSPACE
   */
  BACKSPACE: 8,

  /**
   * TAB
   */
  TAB: 9,

  /**
   * NUMLOCK on FF/Safari Mac
   */
  NUM_CENTER: 12,

  /**
   * ENTER
   */
  ENTER: 13,

  /**
   * SHIFT
   */
  SHIFT: 16,

  /**
   * CTRL
   */
  CTRL: 17,

  /**
   * ALT
   */
  ALT: 18,

  /**
   * PAUSE
   */
  PAUSE: 19,

  /**
   * CAPS_LOCK
   */
  CAPS_LOCK: 20,

  /**
   * ESC
   */
  ESC: 27,

  /**
   * SPACE
   */
  SPACE: 32,

  /**
   * PAGE_UP
   */
  PAGE_UP: 33,

  /**
   * PAGE_DOWN
   */
  PAGE_DOWN: 34,

  /**
   * END
   */
  END: 35,

  /**
   * HOME
   */
  HOME: 36,

  /**
   * LEFT
   */
  LEFT: 37,

  /**
   * UP
   */
  UP: 38,

  /**
   * RIGHT
   */
  RIGHT: 39,

  /**
   * DOWN
   */
  DOWN: 40,

  /**
   * PRINT_SCREEN
   */
  PRINT_SCREEN: 44,

  /**
   * INSERT
   */
  INSERT: 45,

  /**
   * DELETE
   */
  DELETE: 46,

  /**
   * ZERO
   */
  ZERO: 48,

  /**
   * ONE
   */
  ONE: 49,

  /**
   * TWO
   */
  TWO: 50,

  /**
   * THREE
   */
  THREE: 51,

  /**
   * FOUR
   */
  FOUR: 52,

  /**
   * FIVE
   */
  FIVE: 53,

  /**
   * SIX
   */
  SIX: 54,

  /**
   * SEVEN
   */
  SEVEN: 55,

  /**
   * EIGHT
   */
  EIGHT: 56,

  /**
   * NINE
   */
  NINE: 57,

  /**
   * QUESTION_MARK
   */
  QUESTION_MARK: 63,

  /**
   * A
   */
  A: 65,

  /**
   * B
   */
  B: 66,

  /**
   * C
   */
  C: 67,

  /**
   * D
   */
  D: 68,

  /**
   * E
   */
  E: 69,

  /**
   * F
   */
  F: 70,

  /**
   * G
   */
  G: 71,

  /**
   * H
   */
  H: 72,

  /**
   * I
   */
  I: 73,

  /**
   * J
   */
  J: 74,

  /**
   * K
   */
  K: 75,

  /**
   * L
   */
  L: 76,

  /**
   * M
   */
  M: 77,

  /**
   * N
   */
  N: 78,

  /**
   * O
   */
  O: 79,

  /**
   * P
   */
  P: 80,

  /**
   * Q
   */
  Q: 81,

  /**
   * R
   */
  R: 82,

  /**
   * S
   */
  S: 83,

  /**
   * T
   */
  T: 84,

  /**
   * U
   */
  U: 85,

  /**
   * V
   */
  V: 86,

  /**
   * W
   */
  W: 87,

  /**
   * X
   */
  X: 88,

  /**
   * Y
   */
  Y: 89,

  /**
   * Z
   */
  Z: 90,

  /**
   * META
   */
  META: 91,

  /**
   * WIN_KEY_RIGHT
   */
  WIN_KEY_RIGHT: 92,

  /**
   * CONTEXT_MENU
   */
  CONTEXT_MENU: 93,

  /**
   * NUM_ZERO
   */
  NUM_ZERO: 96,

  /**
   * NUM_ONE
   */
  NUM_ONE: 97,

  /**
   * NUM_TWO
   */
  NUM_TWO: 98,

  /**
   * NUM_THREE
   */
  NUM_THREE: 99,

  /**
   * NUM_FOUR
   */
  NUM_FOUR: 100,

  /**
   * NUM_FIVE
   */
  NUM_FIVE: 101,

  /**
   * NUM_SIX
   */
  NUM_SIX: 102,

  /**
   * NUM_SEVEN
   */
  NUM_SEVEN: 103,

  /**
   * NUM_EIGHT
   */
  NUM_EIGHT: 104,

  /**
   * NUM_NINE
   */
  NUM_NINE: 105,

  /**
   * NUM_MULTIPLY
   */
  NUM_MULTIPLY: 106,

  /**
   * NUM_PLUS
   */
  NUM_PLUS: 107,

  /**
   * NUM_MINUS
   */
  NUM_MINUS: 109,

  /**
   * NUM_PERIOD
   */
  NUM_PERIOD: 110,

  /**
   * NUM_DIVISION
   */
  NUM_DIVISION: 111,

  /**
   * F1
   */
  F1: 112,

  /**
   * F2
   */
  F2: 113,

  /**
   * F3
   */
  F3: 114,

  /**
   * F4
   */
  F4: 115,

  /**
   * F5
   */
  F5: 116,

  /**
   * F6
   */
  F6: 117,

  /**
   * F7
   */
  F7: 118,

  /**
   * F8
   */
  F8: 119,

  /**
   * F9
   */
  F9: 120,

  /**
   * F10
   */
  F10: 121,

  /**
   * F11
   */
  F11: 122,

  /**
   * F12
   */
  F12: 123,

  /**
   * NUMLOCK
   */
  NUMLOCK: 144,

  /**
   * SEMICOLON
   */
  SEMICOLON: 186,

  /**
   * DASH
   */
  DASH: 189,

  /**
   * EQUALS
   */
  EQUALS: 187,

  /**
   * COMMA
   */
  COMMA: 188,

  /**
   * PERIOD
   */
  PERIOD: 190,

  /**
   * SLASH
   */
  SLASH: 191,

  /**
   * APOSTROPHE
   */
  APOSTROPHE: 192,

  /**
   * SINGLE_QUOTE
   */
  SINGLE_QUOTE: 222,

  /**
   * OPEN_SQUARE_BRACKET
   */
  OPEN_SQUARE_BRACKET: 219,

  /**
   * BACKSLASH
   */
  BACKSLASH: 220,

  /**
   * CLOSE_SQUARE_BRACKET
   */
  CLOSE_SQUARE_BRACKET: 221,

  /**
   * WIN_KEY
   */
  WIN_KEY: 224,

  /**
   * MAC_FF_META
   */
  MAC_FF_META: 224,

  /**
   * WIN_IME
   */
  WIN_IME: 229,
  // ======================== Function ========================

  /**
   * whether text and modified key is entered at the same time.
   */
  isTextModifyingKeyEvent: function isTextModifyingKeyEvent(e) {
    var keyCode = e.keyCode;

    if (e.altKey && !e.ctrlKey || e.metaKey || // Function keys don't generate text
    keyCode >= KeyCode.F1 && keyCode <= KeyCode.F12) {
      return false;
    } // The following keys are quite harmless, even in combination with
    // CTRL, ALT or SHIFT.


    switch (keyCode) {
      case KeyCode.ALT:
      case KeyCode.CAPS_LOCK:
      case KeyCode.CONTEXT_MENU:
      case KeyCode.CTRL:
      case KeyCode.DOWN:
      case KeyCode.END:
      case KeyCode.ESC:
      case KeyCode.HOME:
      case KeyCode.INSERT:
      case KeyCode.LEFT:
      case KeyCode.MAC_FF_META:
      case KeyCode.META:
      case KeyCode.NUMLOCK:
      case KeyCode.NUM_CENTER:
      case KeyCode.PAGE_DOWN:
      case KeyCode.PAGE_UP:
      case KeyCode.PAUSE:
      case KeyCode.PRINT_SCREEN:
      case KeyCode.RIGHT:
      case KeyCode.SHIFT:
      case KeyCode.UP:
      case KeyCode.WIN_KEY:
      case KeyCode.WIN_KEY_RIGHT:
        return false;

      default:
        return true;
    }
  },

  /**
   * whether character is entered.
   */
  isCharacterKey: function isCharacterKey(keyCode) {
    if (keyCode >= KeyCode.ZERO && keyCode <= KeyCode.NINE) {
      return true;
    }

    if (keyCode >= KeyCode.NUM_ZERO && keyCode <= KeyCode.NUM_MULTIPLY) {
      return true;
    }

    if (keyCode >= KeyCode.A && keyCode <= KeyCode.Z) {
      return true;
    } // Safari sends zero key code for non-latin characters.


    if (window.navigator.userAgent.indexOf('WebKit') !== -1 && keyCode === 0) {
      return true;
    }

    switch (keyCode) {
      case KeyCode.SPACE:
      case KeyCode.QUESTION_MARK:
      case KeyCode.NUM_PLUS:
      case KeyCode.NUM_MINUS:
      case KeyCode.NUM_PERIOD:
      case KeyCode.NUM_DIVISION:
      case KeyCode.SEMICOLON:
      case KeyCode.DASH:
      case KeyCode.EQUALS:
      case KeyCode.COMMA:
      case KeyCode.PERIOD:
      case KeyCode.SLASH:
      case KeyCode.APOSTROPHE:
      case KeyCode.SINGLE_QUOTE:
      case KeyCode.OPEN_SQUARE_BRACKET:
      case KeyCode.BACKSLASH:
      case KeyCode.CLOSE_SQUARE_BRACKET:
        return true;

      default:
        return false;
    }
  }
};
/* harmony default export */ __webpack_exports__["a"] = (KeyCode);

/***/ }),

/***/ "zFdY":
/***/ (function(module, exports, __webpack_require__) {

var _curry1 = __webpack_require__("AN6r");

var empty = __webpack_require__("T/r7");

var equals = __webpack_require__("LGMZ");
/**
 * Returns `true` if the given value is its type's empty value; `false`
 * otherwise.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Logic
 * @sig a -> Boolean
 * @param {*} x
 * @return {Boolean}
 * @see R.empty
 * @example
 *
 *      R.isEmpty([1, 2, 3]);   //=> false
 *      R.isEmpty([]);          //=> true
 *      R.isEmpty('');          //=> true
 *      R.isEmpty(null);        //=> false
 *      R.isEmpty({});          //=> true
 *      R.isEmpty({length: 0}); //=> false
 */


module.exports = _curry1(function isEmpty(x) {
  return x != null && equals(x, empty(x));
});

/***/ }),

/***/ "zGEu":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("yIlq");

__webpack_require__("d3/y");

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var react_1 = __importDefault(__webpack_require__("mXGw"));

var classnames_1 = __importDefault(__webpack_require__("8Jek"));

var Column = function Column(_ref) {
  var prefixCls = _ref.prefixCls,
      icon = _ref.icon,
      title = _ref.title,
      _ref$items = _ref.items,
      items = _ref$items === void 0 ? [] : _ref$items,
      style = _ref.style,
      className = _ref.className;
  return react_1["default"].createElement("div", {
    className: classnames_1["default"]("".concat(prefixCls, "-column"), className),
    style: style
  }, (title || icon) && react_1["default"].createElement("h2", null, icon && react_1["default"].createElement("span", {
    className: "".concat(prefixCls, "-column-icon")
  }, icon), title), items.map(function (item, i) {
    var LinkComponent = item.LinkComponent || 'a';
    return react_1["default"].createElement("div", {
      className: classnames_1["default"]("".concat(prefixCls, "-item"), item.className),
      style: item.style,
      key: i
    }, react_1["default"].createElement(LinkComponent, {
      href: item.url,
      to: typeof LinkComponent !== 'string' ? item.url : undefined,
      target: item.openExternal ? '_blank' : undefined,
      rel: item.openExternal ? 'noopener noreferrer' : undefined
    }, item.icon && react_1["default"].createElement("span", {
      className: "".concat(prefixCls, "-item-icon")
    }, item.icon), item.title), item.description && react_1["default"].createElement(react_1["default"].Fragment, null, react_1["default"].createElement("span", {
      className: "".concat(prefixCls, "-item-separator")
    }, "-"), react_1["default"].createElement("span", {
      className: "".concat(prefixCls, "-item-description")
    }, item.description)));
  }));
};

exports["default"] = Column;

/***/ }),

/***/ "zIP/":
/***/ (function(module, exports, __webpack_require__) {

var META = __webpack_require__("1Alt")('meta');
var isObject = __webpack_require__("Bsg+");
var has = __webpack_require__("ezc+");
var setDesc = __webpack_require__("U1KF").f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !__webpack_require__("E7Vc")(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};


/***/ }),

/***/ "zIds":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = __webpack_require__("at5L");
var hiddenKeys = __webpack_require__("fQty").concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};


/***/ }),

/***/ "zJT+":
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "zUWx":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 //----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------

module.exports = function (methodName) {
  return function (object) {
    throw new TypeError(object + " does not have a method '" + methodName + "'.");
  };
};

/***/ }),

/***/ "zWQs":
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),

/***/ "zYiv":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "zbS1":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export warn */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return warnOnce; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return loadNamespaces; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return hasLoadedNamespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return getDisplayName; });
/* harmony import */ var core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("GkPX");
/* harmony import */ var core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_array_index_of__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("V7cS");
/* harmony import */ var core_js_modules_es6_array_index_of__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_index_of__WEBPACK_IMPORTED_MODULE_1__);


function warn() {
  if (console && console.warn) {
    var _console;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (typeof args[0] === 'string') args[0] = "react-i18next:: ".concat(args[0]);

    (_console = console).warn.apply(_console, args);
  }
}
var alreadyWarned = {};
function warnOnce() {
  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    args[_key2] = arguments[_key2];
  }

  if (typeof args[0] === 'string' && alreadyWarned[args[0]]) return;
  if (typeof args[0] === 'string') alreadyWarned[args[0]] = new Date();
  warn.apply(void 0, args);
}
function loadNamespaces(i18n, ns, cb) {
  i18n.loadNamespaces(ns, function () {
    if (i18n.isInitialized) {
      cb();
    } else {
      var initialized = function initialized() {
        setTimeout(function () {
          i18n.off('initialized', initialized);
        }, 0);
        cb();
      };

      i18n.on('initialized', initialized);
    }
  });
}
function hasLoadedNamespace(ns, i18n) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  if (!i18n.languages || !i18n.languages.length) {
    warnOnce('i18n.languages were undefined or empty', i18n.languages);
    return true;
  }

  var lng = i18n.languages[0];
  var fallbackLng = i18n.options ? i18n.options.fallbackLng : false;
  var lastLng = i18n.languages[i18n.languages.length - 1];
  if (lng.toLowerCase() === 'cimode') return true;

  var loadNotPending = function loadNotPending(l, n) {
    var loadState = i18n.services.backendConnector.state["".concat(l, "|").concat(n)];
    return loadState === -1 || loadState === 2;
  };

  if (options.bindI18n && options.bindI18n.indexOf('languageChanging') > -1 && i18n.services.backendConnector.backend && i18n.isLanguageChangingTo && !loadNotPending(i18n.isLanguageChangingTo, ns)) return false;
  if (i18n.hasResourceBundle(lng, ns)) return true;
  if (!i18n.services.backendConnector.backend) return true;
  if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;
  return false;
}
function getDisplayName(Component) {
  return Component.displayName || Component.name || (typeof Component === 'string' && Component.length > 0 ? Component : 'Unknown');
}

/***/ }),

/***/ "zeFm":
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__("T/1i");
var toLength = __webpack_require__("gou2");
var toAbsoluteIndex = __webpack_require__("+eav");
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),

/***/ "zlqh":
/***/ (function(module, exports, __webpack_require__) {

var ITERATOR = __webpack_require__("9dxi")('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter, function () { throw 2; });
} catch (e) { /* empty */ }

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};


/***/ }),

/***/ "znB+":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ SiderContext; });
__webpack_require__.d(__webpack_exports__, "b", function() { return /* binding */ Sider_Sider; });

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.array.index-of.js
var es6_array_index_of = __webpack_require__("V7cS");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.regexp.to-string.js
var es6_regexp_to_string = __webpack_require__("4aJ6");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.date.to-string.js
var es6_date_to_string = __webpack_require__("M/4x");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.to-string.js
var es6_object_to_string = __webpack_require__("t91x");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.reflect.construct.js
var es6_reflect_construct = __webpack_require__("LXYL");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.set-prototype-of.js
var es6_object_set_prototype_of = __webpack_require__("1qKx");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.create.js
var es6_object_create = __webpack_require__("PAbq");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.assign.js
var es6_object_assign = __webpack_require__("5hJT");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.object.define-property.js
var es6_object_define_property = __webpack_require__("d3/y");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es7.symbol.async-iterator.js
var es7_symbol_async_iterator = __webpack_require__("+jjx");

// EXTERNAL MODULE: ../node_modules/core-js/modules/es6.symbol.js
var es6_symbol = __webpack_require__("ABKx");

// EXTERNAL MODULE: ../node_modules/react/index.js
var react = __webpack_require__("mXGw");

// EXTERNAL MODULE: ../node_modules/classnames/index.js
var classnames = __webpack_require__("8Jek");
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);

// EXTERNAL MODULE: ../node_modules/omit.js/es/index.js
var es = __webpack_require__("x9u5");

// EXTERNAL MODULE: ../node_modules/@ant-design/icons/BarsOutlined.js
var BarsOutlined = __webpack_require__("oRxD");
var BarsOutlined_default = /*#__PURE__*/__webpack_require__.n(BarsOutlined);

// EXTERNAL MODULE: ../node_modules/@ant-design/icons/RightOutlined.js
var RightOutlined = __webpack_require__("rwvH");
var RightOutlined_default = /*#__PURE__*/__webpack_require__.n(RightOutlined);

// EXTERNAL MODULE: ../node_modules/@ant-design/icons/LeftOutlined.js
var LeftOutlined = __webpack_require__("6Dst");
var LeftOutlined_default = /*#__PURE__*/__webpack_require__.n(LeftOutlined);

// EXTERNAL MODULE: ../node_modules/antd/es/layout/layout.js
var layout = __webpack_require__("tvu5");

// EXTERNAL MODULE: ../node_modules/antd/es/config-provider/context.js + 4 modules
var config_provider_context = __webpack_require__("Bfez");

// CONCATENATED MODULE: ../node_modules/antd/es/_util/isNumeric.js
var isNumeric = function isNumeric(value) {
  return !isNaN(parseFloat(value)) && isFinite(value);
};

/* harmony default export */ var _util_isNumeric = (isNumeric);
// CONCATENATED MODULE: ../node_modules/antd/es/layout/Sider.js












function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return _possibleConstructorReturn(this, result);
  };
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

var __rest = undefined && undefined.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};










var dimensionMaxMap = {
  xs: '479.98px',
  sm: '575.98px',
  md: '767.98px',
  lg: '991.98px',
  xl: '1199.98px',
  xxl: '1599.98px'
};
var SiderContext = /*#__PURE__*/react["createContext"]({});

var generateId = function () {
  var i = 0;
  return function () {
    var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
    i += 1;
    return "".concat(prefix).concat(i);
  };
}();

var Sider_InternalSider = /*#__PURE__*/function (_React$Component) {
  _inherits(InternalSider, _React$Component);

  var _super = _createSuper(InternalSider);

  function InternalSider(props) {
    var _this;

    _classCallCheck(this, InternalSider);

    _this = _super.call(this, props);

    _this.responsiveHandler = function (mql) {
      _this.setState({
        below: mql.matches
      });

      var onBreakpoint = _this.props.onBreakpoint;

      if (onBreakpoint) {
        onBreakpoint(mql.matches);
      }

      if (_this.state.collapsed !== mql.matches) {
        _this.setCollapsed(mql.matches, 'responsive');
      }
    };

    _this.setCollapsed = function (collapsed, type) {
      if (!('collapsed' in _this.props)) {
        _this.setState({
          collapsed: collapsed
        });
      }

      var onCollapse = _this.props.onCollapse;

      if (onCollapse) {
        onCollapse(collapsed, type);
      }
    };

    _this.toggle = function () {
      var collapsed = !_this.state.collapsed;

      _this.setCollapsed(collapsed, 'clickTrigger');
    };

    _this.renderSider = function (_ref) {
      var _classNames;

      var getPrefixCls = _ref.getPrefixCls;

      var _a = _this.props,
          customizePrefixCls = _a.prefixCls,
          className = _a.className,
          theme = _a.theme,
          collapsible = _a.collapsible,
          reverseArrow = _a.reverseArrow,
          trigger = _a.trigger,
          style = _a.style,
          width = _a.width,
          collapsedWidth = _a.collapsedWidth,
          zeroWidthTriggerStyle = _a.zeroWidthTriggerStyle,
          others = __rest(_a, ["prefixCls", "className", "theme", "collapsible", "reverseArrow", "trigger", "style", "width", "collapsedWidth", "zeroWidthTriggerStyle"]);

      var prefixCls = getPrefixCls('layout-sider', customizePrefixCls);
      var divProps = Object(es["a" /* default */])(others, ['collapsed', 'defaultCollapsed', 'onCollapse', 'breakpoint', 'onBreakpoint', 'siderHook', 'zeroWidthTriggerStyle']);
      var rawWidth = _this.state.collapsed ? collapsedWidth : width; // use "px" as fallback unit for width

      var siderWidth = _util_isNumeric(rawWidth) ? "".concat(rawWidth, "px") : String(rawWidth); // special trigger when collapsedWidth == 0

      var zeroWidthTrigger = parseFloat(String(collapsedWidth || 0)) === 0 ? /*#__PURE__*/react["createElement"]("span", {
        onClick: _this.toggle,
        className: "".concat(prefixCls, "-zero-width-trigger ").concat(prefixCls, "-zero-width-trigger-").concat(reverseArrow ? 'right' : 'left'),
        style: zeroWidthTriggerStyle
      }, /*#__PURE__*/react["createElement"](BarsOutlined_default.a, null)) : null;
      var iconObj = {
        expanded: reverseArrow ? /*#__PURE__*/react["createElement"](RightOutlined_default.a, null) : /*#__PURE__*/react["createElement"](LeftOutlined_default.a, null),
        collapsed: reverseArrow ? /*#__PURE__*/react["createElement"](LeftOutlined_default.a, null) : /*#__PURE__*/react["createElement"](RightOutlined_default.a, null)
      };
      var status = _this.state.collapsed ? 'collapsed' : 'expanded';
      var defaultTrigger = iconObj[status];
      var triggerDom = trigger !== null ? zeroWidthTrigger || /*#__PURE__*/react["createElement"]("div", {
        className: "".concat(prefixCls, "-trigger"),
        onClick: _this.toggle,
        style: {
          width: siderWidth
        }
      }, trigger || defaultTrigger) : null;

      var divStyle = _extends(_extends({}, style), {
        flex: "0 0 ".concat(siderWidth),
        maxWidth: siderWidth,
        minWidth: siderWidth,
        width: siderWidth
      });

      var siderCls = classnames_default()(className, prefixCls, "".concat(prefixCls, "-").concat(theme), (_classNames = {}, _defineProperty(_classNames, "".concat(prefixCls, "-collapsed"), !!_this.state.collapsed), _defineProperty(_classNames, "".concat(prefixCls, "-has-trigger"), collapsible && trigger !== null && !zeroWidthTrigger), _defineProperty(_classNames, "".concat(prefixCls, "-below"), !!_this.state.below), _defineProperty(_classNames, "".concat(prefixCls, "-zero-width"), parseFloat(siderWidth) === 0), _classNames));
      return /*#__PURE__*/react["createElement"]("aside", _extends({
        className: siderCls
      }, divProps, {
        style: divStyle
      }), /*#__PURE__*/react["createElement"]("div", {
        className: "".concat(prefixCls, "-children")
      }, _this.props.children), collapsible || _this.state.below && zeroWidthTrigger ? triggerDom : null);
    };

    _this.uniqueId = generateId('ant-sider-');
    var matchMedia;

    if (typeof window !== 'undefined') {
      matchMedia = window.matchMedia;
    }

    if (matchMedia && props.breakpoint && props.breakpoint in dimensionMaxMap) {
      _this.mql = matchMedia("(max-width: ".concat(dimensionMaxMap[props.breakpoint], ")"));
    }

    var collapsed;

    if ('collapsed' in props) {
      collapsed = props.collapsed;
    } else {
      collapsed = props.defaultCollapsed;
    }

    _this.state = {
      collapsed: collapsed,
      below: false
    };
    return _this;
  }

  _createClass(InternalSider, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.mql) {
        this.mql.addListener(this.responsiveHandler);
        this.responsiveHandler(this.mql);
      }

      if (this.props.siderHook) {
        this.props.siderHook.addSider(this.uniqueId);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.mql) {
        this.mql.removeListener(this.responsiveHandler);
      }

      if (this.props.siderHook) {
        this.props.siderHook.removeSider(this.uniqueId);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var collapsed = this.state.collapsed;
      var collapsedWidth = this.props.collapsedWidth;
      return /*#__PURE__*/react["createElement"](SiderContext.Provider, {
        value: {
          siderCollapsed: collapsed,
          collapsedWidth: collapsedWidth
        }
      }, /*#__PURE__*/react["createElement"](config_provider_context["a" /* ConfigConsumer */], null, this.renderSider));
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps) {
      if ('collapsed' in nextProps) {
        return {
          collapsed: nextProps.collapsed
        };
      }

      return null;
    }
  }]);

  return InternalSider;
}(react["Component"]);

Sider_InternalSider.defaultProps = {
  collapsible: false,
  defaultCollapsed: false,
  reverseArrow: false,
  width: 200,
  collapsedWidth: 80,
  style: {},
  theme: 'dark'
}; // eslint-disable-next-line react/prefer-stateless-function

var Sider_Sider = /*#__PURE__*/function (_React$Component2) {
  _inherits(Sider, _React$Component2);

  var _super2 = _createSuper(Sider);

  function Sider() {
    _classCallCheck(this, Sider);

    return _super2.apply(this, arguments);
  }

  _createClass(Sider, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      return /*#__PURE__*/react["createElement"](layout["a" /* LayoutContext */].Consumer, null, function (context) {
        return /*#__PURE__*/react["createElement"](Sider_InternalSider, _extends({}, context, _this2.props));
      });
    }
  }]);

  return Sider;
}(react["Component"]);



/***/ }),

/***/ "zqvS":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("d3/y");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _InfoCircleFilled = _interopRequireDefault(__webpack_require__("QW2R"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    'default': obj
  };
}

var _default = _InfoCircleFilled;
exports["default"] = _default;
module.exports = _default;

/***/ }),

/***/ "zuwH":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
__webpack_require__("Z8gF");var offsetY=0;var getTargetOffset=function getTargetOffset(hash){var id=window.decodeURI(hash.replace("#",""));if(id!==""){var element=document.getElementById(id);if(element){var scrollTop=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop;var clientTop=document.documentElement.clientTop||document.body.clientTop||0;var computedStyles=window.getComputedStyle(element);var scrollMarginTop=computedStyles.getPropertyValue("scroll-margin-top")||computedStyles.getPropertyValue("scroll-snap-margin-top")||"0px";return element.getBoundingClientRect().top+scrollTop-parseInt(scrollMarginTop,10)-clientTop-offsetY;}}return null;};exports.onInitialClientRender=function(_,pluginOptions){if(pluginOptions.offsetY){offsetY=pluginOptions.offsetY;}requestAnimationFrame(function(){var offset=getTargetOffset(window.location.hash);if(offset!==null){window.scrollTo(0,offset);}});};exports.shouldUpdateScroll=function(_ref){var location=_ref.routerProps.location;var offset=getTargetOffset(location.hash);return offset!==null?[0,offset]:true;};

/***/ }),

/***/ "zx98":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var strong = __webpack_require__("XQta");
var validate = __webpack_require__("SsG5");
var MAP = 'Map';

// 23.1 Map Objects
module.exports = __webpack_require__("AkS8")(MAP, function (get) {
  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.1.3.6 Map.prototype.get(key)
  get: function get(key) {
    var entry = strong.getEntry(validate(this, MAP), key);
    return entry && entry.v;
  },
  // 23.1.3.9 Map.prototype.set(key, value)
  set: function set(key, value) {
    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);
  }
}, strong, true);


/***/ })

},[["UxWs",2,0]]]);
//# sourceMappingURL=app-fbba187e958b6633cf25.js.map