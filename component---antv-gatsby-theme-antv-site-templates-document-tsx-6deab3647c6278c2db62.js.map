{"version":3,"sources":["webpack:///../@antv/gatsby-theme-antv/site/components/ReadingTime.tsx","webpack:///../@antv/gatsby-theme-antv/site/templates/document.tsx"],"names":["ReadingTime","readingTime","useTranslation","i18n","text","time","language","replace","_","min","Math","ceil","shouldBeShown","slug","path","lang","startsWith","slugPieces","split","slice","indexOf","pathPieces","getMenuItemLocaleKey","menuItemLocaleKey","filter","key","join","getDocument","docs","level","length","find","doc","getMenuData","groupedEdges","results","Object","keys","forEach","edges","categoryKey","category","edge","node","frontmatter","title","order","fields","push","type","subGroupedEdges","item","children","sort","a","b","renderMenu","menuData","map","capitalize","Template","data","location","pageContext","prev","next","markdownRemark","allMarkdownRemark","site","html","tableOfContents","relativePath","parent","edgesInDocs","includes","siteMetadata","githubUrl","pathPrefix","pathWithoutPrefix","pathname","RegExp","t","groupBy","slugString","filterGroupedEdges","useState","openKeys","setOpenKeys","menu","height","currentOpenKeys","isWide","useMedia","drawOpen","setDrawOpen","menuSider","styles","sider","menuSwitch","menuDrawer","open","background","layout","markdown","toc","__html","main","editOnGtiHubButton","meta","content","pageQuery"],"mappings":"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","file":"component---antv-gatsby-theme-antv-site-templates-document-tsx-6deab3647c6278c2db62.js","sourcesContent":["import React from 'react';\nimport { Tag } from 'antd';\nimport { useTranslation } from 'react-i18next';\n\nconst ReadingTime: React.FC<any> = ({ readingTime }) => {\n  const { i18n } = useTranslation();\n  const { text = '', time = 0 } = readingTime;\n  return (\n    <Tag>\n      {i18n.language === 'zh'\n        ? text.replace(/(\\d)\\smin\\sread/, (_: string, min: string) => {\n            if (min) {\n              return `阅读时间约 ${min} 分钟`;\n            }\n            return `阅读时间约 ${Math.ceil(time / 60000)} 分钟`;\n          })\n        : text}\n    </Tag>\n  );\n};\n\nexport default ReadingTime;\n","import React, { useState } from 'react';\nimport { graphql, Link } from 'gatsby';\nimport { Layout as AntLayout, Menu, Icon, Tooltip, Affix } from 'antd';\nimport { groupBy } from 'lodash-es';\nimport { useTranslation } from 'react-i18next';\nimport Drawer from 'rc-drawer';\nimport { useMedia } from 'react-use';\nimport Article from '../components/Article';\nimport ReadingTime from '../components/ReadingTime';\nimport NavigatorBanner from '../components/NavigatorBanner';\nimport SEO from '../components/Seo';\nimport { capitalize } from '../utils';\nimport styles from './markdown.module.less';\n\nconst shouldBeShown = (slug: string, path: string, lang: string) => {\n  if (!slug.startsWith(`/${lang}/`)) {\n    return false;\n  }\n  const slugPieces = slug.split('/').slice(slug.split('/').indexOf('docs') + 1);\n  const pathPieces = path.split('/').slice(slug.split('/').indexOf('docs') + 1);\n  return slugPieces[0] === pathPieces[0];\n};\n\nconst getMenuItemLocaleKey = (slug = '') => {\n  const slugPieces = slug.split('/');\n  const menuItemLocaleKey = slugPieces\n    .slice(slugPieces.indexOf('docs') + 1)\n    .filter(key => key)\n    .join('/');\n  return menuItemLocaleKey;\n};\n\nconst getDocument = (docs: any[], slug = '', level: number) => {\n  if (slug.split('/').length !== level + 2) {\n    return;\n  }\n  return docs.find(doc => doc.slug === slug);\n};\n\ninterface MenuData {\n  type: 'SubMenu' | 'Item';\n  title: string;\n  slug: string;\n  order?: number;\n  children?: MenuData[];\n}\n\nconst getMenuData = ({ groupedEdges, language, docs = [], level = 0 }: any) => {\n  const results = [] as MenuData[];\n  Object.keys(groupedEdges).forEach((key: string) => {\n    const edges = groupedEdges[key] || [];\n    const categoryKey = getMenuItemLocaleKey(key);\n    const category = getDocument(docs, categoryKey, level);\n    if (!category) {\n      if (categoryKey.split('/').length !== level + 1) {\n        return;\n      }\n      edges.forEach((edge: any) => {\n        const {\n          node: {\n            frontmatter: { title, order },\n            fields: { slug },\n          },\n        } = edge;\n        results.push({\n          type: 'Item',\n          slug,\n          title,\n          order,\n        });\n      });\n    } else {\n      const subGroupedEdges = {} as any;\n      Object.keys(groupedEdges).forEach((item: string) => {\n        if (item.startsWith(key)) {\n          subGroupedEdges[item] = groupedEdges[item];\n        }\n      });\n      results.push({\n        type: 'SubMenu',\n        title:\n          category.title && category.title[language]\n            ? category.title[language]\n            : categoryKey,\n        slug: key,\n        order: category.order || 0,\n        children: getMenuData({\n          groupedEdges: subGroupedEdges,\n          language,\n          docs,\n          level: level + 1,\n        }),\n      });\n    }\n  });\n  return results.sort((a: any, b: any) => a.order - b.order);\n};\n\nconst renderMenu = (menuData: MenuData[]) =>\n  menuData.map((item: MenuData) => {\n    if (item.type === 'Item') {\n      return (\n        <Menu.Item key={item.slug}>\n          <Link to={item.slug}>{item.title}</Link>\n        </Menu.Item>\n      );\n    }\n    if (item.type === 'SubMenu') {\n      return (\n        item.children &&\n        item.children.length > 0 && (\n          <Menu.SubMenu key={item.slug} title={capitalize(item.title)}>\n            {renderMenu(item.children)}\n          </Menu.SubMenu>\n        )\n      );\n    }\n    return null;\n  });\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n  location,\n  pageContext: { prev, next },\n}: {\n  data: any;\n  location: Location;\n  pageContext: {\n    prev: any;\n    next: any;\n  };\n}) {\n  const { markdownRemark, allMarkdownRemark, site } = data; // data.markdownRemark holds our post data\n  if (!markdownRemark) {\n    return null;\n  }\n  const {\n    frontmatter,\n    html,\n    tableOfContents,\n    fields: { slug, readingTime },\n    parent: { relativePath },\n  } = markdownRemark;\n  const { edges = [] } = allMarkdownRemark;\n  const edgesInDocs = edges.filter((item: any) =>\n    item.node.fields.slug.includes('/docs/'),\n  );\n  const {\n    siteMetadata: { docs = [], githubUrl },\n    pathPrefix,\n  } = site;\n  const pathWithoutPrefix = location.pathname.replace(\n    new RegExp(`^${pathPrefix}`),\n    '',\n  );\n  const { t, i18n } = useTranslation();\n  const groupedEdges = groupBy(\n    edgesInDocs,\n    ({\n      node: {\n        fields: { slug: slugString },\n      },\n    }: any) =>\n      slugString\n        .split('/')\n        .slice(0, -1)\n        .join('/'),\n  );\n\n  const filterGroupedEdges = {} as any;\n  Object.keys(groupedEdges)\n    .filter(key => shouldBeShown(key, pathWithoutPrefix, i18n.language))\n    .forEach((key: string) => {\n      filterGroupedEdges[key] = groupedEdges[key];\n    });\n\n  const [openKeys, setOpenKeys] = useState<string[]>(\n    Object.keys(filterGroupedEdges).filter(key => slug.startsWith(key)),\n  );\n\n  const menuData = getMenuData({\n    groupedEdges: filterGroupedEdges,\n    language: i18n.language,\n    docs,\n  });\n\n  const menu = (\n    <Menu\n      mode=\"inline\"\n      selectedKeys={[slug]}\n      style={{ height: '100%' }}\n      openKeys={openKeys}\n      onOpenChange={currentOpenKeys => setOpenKeys(currentOpenKeys)}\n      inlineIndent={16}\n      forceSubMenuRender\n    >\n      {renderMenu(menuData)}\n    </Menu>\n  );\n\n  const isWide = useMedia('(min-width: 767.99px)', true);\n  const [drawOpen, setDrawOpen] = useState(false);\n  const menuSider = isWide ? (\n    <AntLayout.Sider width=\"auto\" theme=\"light\" className={styles.sider}>\n      {menu}\n    </AntLayout.Sider>\n  ) : (\n    <Drawer\n      handler={\n        <Icon\n          className={styles.menuSwitch}\n          type={drawOpen ? 'menu-fold' : 'menu-unfold'}\n        />\n      }\n      wrapperClassName={styles.menuDrawer}\n      onChange={open => setDrawOpen(!!open)}\n      width={280}\n    >\n      {menu}\n    </Drawer>\n  );\n\n  return (\n    <>\n      <SEO title={frontmatter.title} lang={i18n.language} />\n      <AntLayout\n        style={{ background: '#fff' }}\n        hasSider\n        className={styles.layout}\n      >\n        {menuSider}\n        <Article className={styles.markdown}>\n          <Affix offsetTop={8}>\n            <div\n              className={styles.toc}\n              /* eslint-disable-next-line react/no-danger */\n              dangerouslySetInnerHTML={{ __html: tableOfContents }}\n            />\n          </Affix>\n          <div className={styles.main}>\n            <h1>\n              {frontmatter.title}\n              <Tooltip title={t('在 GitHub 上编辑')}>\n                <a\n                  href={`${githubUrl}/edit/master/docs/${relativePath}`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className={styles.editOnGtiHubButton}\n                >\n                  <Icon type=\"edit\" />\n                </a>\n              </Tooltip>\n            </h1>\n            <div className={styles.meta}>\n              <ReadingTime readingTime={readingTime} />\n            </div>\n            <div\n              /* eslint-disable-next-line react/no-danger */\n              dangerouslySetInnerHTML={{ __html: html }}\n              className={styles.content}\n            />\n            <div>\n              <NavigatorBanner type=\"prev\" post={prev} />\n              <NavigatorBanner type=\"next\" post={next} />\n            </div>\n          </div>\n        </Article>\n      </AntLayout>\n    </>\n  );\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    site {\n      siteMetadata {\n        title\n        githubUrl\n        docs {\n          slug\n          title {\n            zh\n            en\n          }\n          order\n        }\n      }\n      pathPrefix\n    }\n    markdownRemark(fields: { slug: { eq: $path } }) {\n      html\n      tableOfContents\n      fields {\n        slug\n        readingTime {\n          text\n          time\n        }\n      }\n      frontmatter {\n        title\n      }\n      parent {\n        ... on File {\n          relativePath\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { order: ASC, fields: [frontmatter___order] }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            order\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}